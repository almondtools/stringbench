# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternSize = 2)

# Run progress: 0,00% complete, ETA 12:05:20
# Fork: 1 of 1
# Warmup Iteration   1: 0,121 ms/op
# Warmup Iteration   2: 0,114 ms/op
# Warmup Iteration   3: 0,114 ms/op
# Warmup Iteration   4: 0,114 ms/op
# Warmup Iteration   5: 0,115 ms/op
# Warmup Iteration   6: 0,114 ms/op
# Warmup Iteration   7: 0,116 ms/op
# Warmup Iteration   8: 0,120 ms/op
# Warmup Iteration   9: 0,117 ms/op
# Warmup Iteration  10: 0,114 ms/op
Iteration   1: 0,115 ms/op
Iteration   2: 0,115 ms/op
Iteration   3: 0,116 ms/op
Iteration   4: 0,114 ms/op
Iteration   5: 0,115 ms/op
Iteration   6: 0,115 ms/op
Iteration   7: 0,114 ms/op
Iteration   8: 0,115 ms/op
Iteration   9: 0,115 ms/op
Iteration  10: 0,114 ms/op


Result "benchmarkFind":
  0,115 ±(99.9%) 0,001 ms/op [Average]
  (min, avg, max) = (0,114, 0,115, 0,116), stdev = 0,001
  CI (99.9%): [0,114, 0,115] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternSize = 4)

# Run progress: 0,05% complete, ETA 12:40:21
# Fork: 1 of 1
# Warmup Iteration   1: 0,454 ms/op
# Warmup Iteration   2: 0,433 ms/op
# Warmup Iteration   3: 0,432 ms/op
# Warmup Iteration   4: 0,432 ms/op
# Warmup Iteration   5: 0,433 ms/op
# Warmup Iteration   6: 0,435 ms/op
# Warmup Iteration   7: 0,434 ms/op
# Warmup Iteration   8: 0,512 ms/op
# Warmup Iteration   9: 0,442 ms/op
# Warmup Iteration  10: 0,431 ms/op
Iteration   1: 0,431 ms/op
Iteration   2: 0,433 ms/op
Iteration   3: 0,431 ms/op
Iteration   4: 0,431 ms/op
Iteration   5: 0,432 ms/op
Iteration   6: 0,431 ms/op
Iteration   7: 0,433 ms/op
Iteration   8: 0,432 ms/op
Iteration   9: 0,432 ms/op
Iteration  10: 0,433 ms/op


Result "benchmarkFind":
  0,432 ±(99.9%) 0,001 ms/op [Average]
  (min, avg, max) = (0,431, 0,432, 0,433), stdev = 0,001
  CI (99.9%): [0,431, 0,433] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternSize = 8)

# Run progress: 0,09% complete, ETA 12:31:19
# Fork: 1 of 1
# Warmup Iteration   1: 33,944 ms/op
# Warmup Iteration   2: 33,356 ms/op
# Warmup Iteration   3: 33,389 ms/op
# Warmup Iteration   4: 33,283 ms/op
# Warmup Iteration   5: 33,343 ms/op
# Warmup Iteration   6: 33,297 ms/op
# Warmup Iteration   7: 33,339 ms/op
# Warmup Iteration   8: 33,277 ms/op
# Warmup Iteration   9: 33,264 ms/op
# Warmup Iteration  10: 33,424 ms/op
Iteration   1: 33,143 ms/op
Iteration   2: 33,406 ms/op
Iteration   3: 33,278 ms/op
Iteration   4: 33,225 ms/op
Iteration   5: 33,267 ms/op
Iteration   6: 33,546 ms/op
Iteration   7: 33,341 ms/op
Iteration   8: 33,370 ms/op
Iteration   9: 33,241 ms/op
Iteration  10: 33,248 ms/op


Result "benchmarkFind":
  33,306 ±(99.9%) 0,172 ms/op [Average]
  (min, avg, max) = (33,143, 33,306, 33,546), stdev = 0,114
  CI (99.9%): [33,135, 33,478] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternSize = 16)

# Run progress: 0,14% complete, ETA 12:32:40
# Fork: 1 of 1
# Warmup Iteration   1: 508,029 ms/op
# Warmup Iteration   2: 502,012 ms/op
# Warmup Iteration   3: 500,069 ms/op
# Warmup Iteration   4: 501,911 ms/op
# Warmup Iteration   5: 500,228 ms/op
# Warmup Iteration   6: 500,842 ms/op
# Warmup Iteration   7: 500,791 ms/op
# Warmup Iteration   8: 501,858 ms/op
# Warmup Iteration   9: 494,983 ms/op
# Warmup Iteration  10: 496,846 ms/op
Iteration   1: 494,937 ms/op
Iteration   2: 495,344 ms/op
Iteration   3: 495,453 ms/op
Iteration   4: 496,564 ms/op
Iteration   5: 495,760 ms/op
Iteration   6: 494,118 ms/op
Iteration   7: 496,972 ms/op
Iteration   8: 495,704 ms/op
Iteration   9: 497,082 ms/op
Iteration  10: 554,251 ms/op


Result "benchmarkFind":
  501,618 ±(99.9%) 27,993 ms/op [Average]
  (min, avg, max) = (494,118, 501,618, 554,251), stdev = 18,516
  CI (99.9%): [473,625, 529,612] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternSize = 32)

# Run progress: 0,18% complete, ETA 13:34:07
# Fork: 1 of 1
# Warmup Iteration   1: 505,909 ms/op
# Warmup Iteration   2: 507,884 ms/op
# Warmup Iteration   3: 502,798 ms/op
# Warmup Iteration   4: 499,463 ms/op
# Warmup Iteration   5: 502,546 ms/op
# Warmup Iteration   6: 498,480 ms/op
# Warmup Iteration   7: 500,486 ms/op
# Warmup Iteration   8: 507,955 ms/op
# Warmup Iteration   9: 499,837 ms/op
# Warmup Iteration  10: 500,355 ms/op
Iteration   1: 496,891 ms/op
Iteration   2: 501,392 ms/op
Iteration   3: 501,948 ms/op
Iteration   4: 499,521 ms/op
Iteration   5: 503,403 ms/op
Iteration   6: 498,286 ms/op
Iteration   7: 500,435 ms/op
Iteration   8: 502,146 ms/op
Iteration   9: 500,118 ms/op
Iteration  10: 497,016 ms/op


Result "benchmarkFind":
  500,116 ±(99.9%) 3,332 ms/op [Average]
  (min, avg, max) = (496,891, 500,116, 503,403), stdev = 2,204
  CI (99.9%): [496,783, 503,448] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternSize = 64)

# Run progress: 0,23% complete, ETA 14:00:13
# Fork: 1 of 1
# Warmup Iteration   1: 505,813 ms/op
# Warmup Iteration   2: 535,014 ms/op
# Warmup Iteration   3: 503,750 ms/op
# Warmup Iteration   4: 500,363 ms/op
# Warmup Iteration   5: 502,882 ms/op
# Warmup Iteration   6: 501,977 ms/op
# Warmup Iteration   7: 504,549 ms/op
# Warmup Iteration   8: 502,297 ms/op
# Warmup Iteration   9: 502,327 ms/op
# Warmup Iteration  10: 505,983 ms/op
Iteration   1: 499,375 ms/op
Iteration   2: 500,969 ms/op
Iteration   3: 502,185 ms/op
Iteration   4: 501,647 ms/op
Iteration   5: 502,528 ms/op
Iteration   6: 500,464 ms/op
Iteration   7: 503,424 ms/op
Iteration   8: 501,984 ms/op
Iteration   9: 503,479 ms/op
Iteration  10: 501,042 ms/op


Result "benchmarkFind":
  501,710 ±(99.9%) 1,955 ms/op [Average]
  (min, avg, max) = (499,375, 501,710, 503,479), stdev = 1,293
  CI (99.9%): [499,755, 503,664] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternSize = 128)

# Run progress: 0,28% complete, ETA 13:57:07
# Fork: 1 of 1
# Warmup Iteration   1: 506,509 ms/op
# Warmup Iteration   2: 503,130 ms/op
# Warmup Iteration   3: 500,994 ms/op
# Warmup Iteration   4: 501,186 ms/op
# Warmup Iteration   5: 502,230 ms/op
# Warmup Iteration   6: 503,116 ms/op
# Warmup Iteration   7: 501,542 ms/op
# Warmup Iteration   8: 505,393 ms/op
# Warmup Iteration   9: 505,893 ms/op
# Warmup Iteration  10: 567,101 ms/op
Iteration   1: 501,442 ms/op
Iteration   2: 500,458 ms/op
Iteration   3: 504,620 ms/op
Iteration   4: 503,507 ms/op
Iteration   5: 504,863 ms/op
Iteration   6: 500,397 ms/op
Iteration   7: 502,206 ms/op
Iteration   8: 504,518 ms/op
Iteration   9: 500,013 ms/op
Iteration  10: 501,716 ms/op


Result "benchmarkFind":
  502,374 ±(99.9%) 2,833 ms/op [Average]
  (min, avg, max) = (500,013, 502,374, 504,863), stdev = 1,874
  CI (99.9%): [499,541, 505,207] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternSize = 256)

# Run progress: 0,32% complete, ETA 13:55:19
# Fork: 1 of 1
# Warmup Iteration   1: 502,853 ms/op
# Warmup Iteration   2: 498,142 ms/op
# Warmup Iteration   3: 499,085 ms/op
# Warmup Iteration   4: 497,884 ms/op
# Warmup Iteration   5: 498,397 ms/op
# Warmup Iteration   6: 496,476 ms/op
# Warmup Iteration   7: 499,455 ms/op
# Warmup Iteration   8: 506,707 ms/op
# Warmup Iteration   9: 497,997 ms/op
# Warmup Iteration  10: 502,098 ms/op
Iteration   1: 499,676 ms/op
Iteration   2: 500,846 ms/op
Iteration   3: 498,028 ms/op
Iteration   4: 499,508 ms/op
Iteration   5: 502,401 ms/op
Iteration   6: 502,663 ms/op
Iteration   7: 500,898 ms/op
Iteration   8: 501,210 ms/op
Iteration   9: 501,333 ms/op
Iteration  10: 503,568 ms/op


Result "benchmarkFind":
  501,013 ±(99.9%) 2,486 ms/op [Average]
  (min, avg, max) = (498,028, 501,013, 503,568), stdev = 1,644
  CI (99.9%): [498,528, 503,499] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternSize = 2)

# Run progress: 0,37% complete, ETA 14:10:45
# Fork: 1 of 1
# Warmup Iteration   1: 0,414 ms/op
# Warmup Iteration   2: 0,389 ms/op
# Warmup Iteration   3: 0,389 ms/op
# Warmup Iteration   4: 0,387 ms/op
# Warmup Iteration   5: 0,390 ms/op
# Warmup Iteration   6: 0,389 ms/op
# Warmup Iteration   7: 0,389 ms/op
# Warmup Iteration   8: 0,389 ms/op
# Warmup Iteration   9: 0,391 ms/op
# Warmup Iteration  10: 0,389 ms/op
Iteration   1: 0,389 ms/op
Iteration   2: 0,389 ms/op
Iteration   3: 0,390 ms/op
Iteration   4: 0,389 ms/op
Iteration   5: 0,390 ms/op
Iteration   6: 0,389 ms/op
Iteration   7: 0,391 ms/op
Iteration   8: 0,389 ms/op
Iteration   9: 0,390 ms/op
Iteration  10: 0,390 ms/op


Result "benchmarkFind":
  0,390 ±(99.9%) 0,001 ms/op [Average]
  (min, avg, max) = (0,389, 0,390, 0,391), stdev = 0,001
  CI (99.9%): [0,389, 0,391] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternSize = 4)

# Run progress: 0,41% complete, ETA 13:57:45
# Fork: 1 of 1
# Warmup Iteration   1: 22,480 ms/op
# Warmup Iteration   2: 20,861 ms/op
# Warmup Iteration   3: 20,809 ms/op
# Warmup Iteration   4: 20,876 ms/op
# Warmup Iteration   5: 20,767 ms/op
# Warmup Iteration   6: 20,659 ms/op
# Warmup Iteration   7: 20,908 ms/op
# Warmup Iteration   8: 20,848 ms/op
# Warmup Iteration   9: 20,713 ms/op
# Warmup Iteration  10: 20,818 ms/op
Iteration   1: 20,652 ms/op
Iteration   2: 20,665 ms/op
Iteration   3: 20,767 ms/op
Iteration   4: 20,628 ms/op
Iteration   5: 20,769 ms/op
Iteration   6: 20,673 ms/op
Iteration   7: 20,690 ms/op
Iteration   8: 20,575 ms/op
Iteration   9: 20,763 ms/op
Iteration  10: 20,569 ms/op


Result "benchmarkFind":
  20,675 ±(99.9%) 0,112 ms/op [Average]
  (min, avg, max) = (20,569, 20,675, 20,769), stdev = 0,074
  CI (99.9%): [20,563, 20,787] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternSize = 8)

# Run progress: 0,46% complete, ETA 13:48:37
# Fork: 1 of 1
# Warmup Iteration   1: 299,992 ms/op
# Warmup Iteration   2: 287,608 ms/op
# Warmup Iteration   3: 286,432 ms/op
# Warmup Iteration   4: 287,164 ms/op
# Warmup Iteration   5: 316,718 ms/op
# Warmup Iteration   6: 324,753 ms/op
# Warmup Iteration   7: 323,074 ms/op
# Warmup Iteration   8: 323,192 ms/op
# Warmup Iteration   9: 322,846 ms/op
# Warmup Iteration  10: 324,484 ms/op
Iteration   1: 322,850 ms/op
Iteration   2: 322,282 ms/op
Iteration   3: 323,042 ms/op
Iteration   4: 322,787 ms/op
Iteration   5: 324,547 ms/op
Iteration   6: 321,701 ms/op
Iteration   7: 323,592 ms/op
Iteration   8: 322,274 ms/op
Iteration   9: 323,746 ms/op
Iteration  10: 324,633 ms/op


Result "benchmarkFind":
  323,145 ±(99.9%) 1,474 ms/op [Average]
  (min, avg, max) = (321,701, 323,145, 324,633), stdev = 0,975
  CI (99.9%): [321,671, 324,620] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternSize = 16)

# Run progress: 0,51% complete, ETA 13:59:28
# Fork: 1 of 1
# Warmup Iteration   1: 287,079 ms/op
# Warmup Iteration   2: 287,789 ms/op
# Warmup Iteration   3: 289,520 ms/op
# Warmup Iteration   4: 288,184 ms/op
# Warmup Iteration   5: 286,794 ms/op
# Warmup Iteration   6: 287,124 ms/op
# Warmup Iteration   7: 286,432 ms/op
# Warmup Iteration   8: 287,490 ms/op
# Warmup Iteration   9: 288,917 ms/op
# Warmup Iteration  10: 284,544 ms/op
Iteration   1: 322,264 ms/op
Iteration   2: 288,130 ms/op
Iteration   3: 286,723 ms/op
Iteration   4: 287,484 ms/op
Iteration   5: 288,218 ms/op
Iteration   6: 288,502 ms/op
Iteration   7: 286,257 ms/op
Iteration   8: 290,527 ms/op
Iteration   9: 287,159 ms/op
Iteration  10: 288,179 ms/op


Result "benchmarkFind":
  291,344 ±(99.9%) 16,520 ms/op [Average]
  (min, avg, max) = (286,257, 291,344, 322,264), stdev = 10,927
  CI (99.9%): [274,825, 307,864] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternSize = 32)

# Run progress: 0,55% complete, ETA 14:01:45
# Fork: 1 of 1
# Warmup Iteration   1: 287,520 ms/op
# Warmup Iteration   2: 285,188 ms/op
# Warmup Iteration   3: 285,972 ms/op
# Warmup Iteration   4: 286,510 ms/op
# Warmup Iteration   5: 285,904 ms/op
# Warmup Iteration   6: 286,259 ms/op
# Warmup Iteration   7: 285,963 ms/op
# Warmup Iteration   8: 285,471 ms/op
# Warmup Iteration   9: 284,211 ms/op
# Warmup Iteration  10: 287,113 ms/op
Iteration   1: 287,934 ms/op
Iteration   2: 285,112 ms/op
Iteration   3: 286,306 ms/op
Iteration   4: 288,820 ms/op
Iteration   5: 287,275 ms/op
Iteration   6: 286,472 ms/op
Iteration   7: 284,130 ms/op
Iteration   8: 284,522 ms/op
Iteration   9: 288,035 ms/op
Iteration  10: 287,931 ms/op


Result "benchmarkFind":
  286,654 ±(99.9%) 2,453 ms/op [Average]
  (min, avg, max) = (284,130, 286,654, 288,820), stdev = 1,623
  CI (99.9%): [284,200, 289,107] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternSize = 64)

# Run progress: 0,60% complete, ETA 14:02:59
# Fork: 1 of 1
# Warmup Iteration   1: 301,795 ms/op
# Warmup Iteration   2: 301,738 ms/op
# Warmup Iteration   3: 301,800 ms/op
# Warmup Iteration   4: 303,377 ms/op
# Warmup Iteration   5: 302,035 ms/op
# Warmup Iteration   6: 302,199 ms/op
# Warmup Iteration   7: 303,176 ms/op
# Warmup Iteration   8: 302,886 ms/op
# Warmup Iteration   9: 302,863 ms/op
# Warmup Iteration  10: 302,265 ms/op
Iteration   1: 301,545 ms/op
Iteration   2: 300,776 ms/op
Iteration   3: 301,948 ms/op
Iteration   4: 305,102 ms/op
Iteration   5: 302,628 ms/op
Iteration   6: 302,510 ms/op
Iteration   7: 302,369 ms/op
Iteration   8: 302,290 ms/op
Iteration   9: 302,089 ms/op
Iteration  10: 315,056 ms/op


Result "benchmarkFind":
  303,631 ±(99.9%) 6,296 ms/op [Average]
  (min, avg, max) = (300,776, 303,631, 315,056), stdev = 4,164
  CI (99.9%): [297,336, 309,927] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternSize = 128)

# Run progress: 0,64% complete, ETA 14:07:42
# Fork: 1 of 1
# Warmup Iteration   1: 300,944 ms/op
# Warmup Iteration   2: 297,094 ms/op
# Warmup Iteration   3: 299,911 ms/op
# Warmup Iteration   4: 299,096 ms/op
# Warmup Iteration   5: 299,719 ms/op
# Warmup Iteration   6: 298,656 ms/op
# Warmup Iteration   7: 299,233 ms/op
# Warmup Iteration   8: 298,489 ms/op
# Warmup Iteration   9: 300,301 ms/op
# Warmup Iteration  10: 299,131 ms/op
Iteration   1: 299,273 ms/op
Iteration   2: 298,644 ms/op
Iteration   3: 298,625 ms/op
Iteration   4: 297,253 ms/op
Iteration   5: 297,796 ms/op
Iteration   6: 298,620 ms/op
Iteration   7: 299,542 ms/op
Iteration   8: 298,199 ms/op
Iteration   9: 299,981 ms/op
Iteration  10: 298,094 ms/op


Result "benchmarkFind":
  298,603 ±(99.9%) 1,248 ms/op [Average]
  (min, avg, max) = (297,253, 298,603, 299,981), stdev = 0,825
  CI (99.9%): [297,355, 299,850] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternSize = 256)

# Run progress: 0,69% complete, ETA 14:10:55
# Fork: 1 of 1
# Warmup Iteration   1: 299,849 ms/op
# Warmup Iteration   2: 296,201 ms/op
# Warmup Iteration   3: 300,517 ms/op
# Warmup Iteration   4: 297,324 ms/op
# Warmup Iteration   5: 296,352 ms/op
# Warmup Iteration   6: 298,311 ms/op
# Warmup Iteration   7: 299,811 ms/op
# Warmup Iteration   8: 297,733 ms/op
# Warmup Iteration   9: 298,630 ms/op
# Warmup Iteration  10: 298,071 ms/op
Iteration   1: 299,183 ms/op
Iteration   2: 296,736 ms/op
Iteration   3: 299,934 ms/op
Iteration   4: 298,008 ms/op
Iteration   5: 298,418 ms/op
Iteration   6: 309,560 ms/op
Iteration   7: 297,401 ms/op
Iteration   8: 299,090 ms/op
Iteration   9: 296,869 ms/op
Iteration  10: 299,042 ms/op


Result "benchmarkFind":
  299,424 ±(99.9%) 5,616 ms/op [Average]
  (min, avg, max) = (296,736, 299,424, 309,560), stdev = 3,715
  CI (99.9%): [293,808, 305,040] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternSize = 2)

# Run progress: 0,74% complete, ETA 14:13:25
# Fork: 1 of 1
# Warmup Iteration   1: 1,235 ms/op
# Warmup Iteration   2: 1,172 ms/op
# Warmup Iteration   3: 1,172 ms/op
# Warmup Iteration   4: 1,170 ms/op
# Warmup Iteration   5: 1,170 ms/op
# Warmup Iteration   6: 1,168 ms/op
# Warmup Iteration   7: 1,164 ms/op
# Warmup Iteration   8: 1,168 ms/op
# Warmup Iteration   9: 1,167 ms/op
# Warmup Iteration  10: 1,462 ms/op
Iteration   1: 1,186 ms/op
Iteration   2: 1,172 ms/op
Iteration   3: 1,186 ms/op
Iteration   4: 1,183 ms/op
Iteration   5: 1,189 ms/op
Iteration   6: 1,179 ms/op
Iteration   7: 1,178 ms/op
Iteration   8: 1,179 ms/op
Iteration   9: 1,182 ms/op
Iteration  10: 1,180 ms/op


Result "benchmarkFind":
  1,181 ±(99.9%) 0,007 ms/op [Average]
  (min, avg, max) = (1,172, 1,181, 1,189), stdev = 0,005
  CI (99.9%): [1,174, 1,189] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternSize = 4)

# Run progress: 0,78% complete, ETA 14:06:04
# Fork: 1 of 1
# Warmup Iteration   1: 164,093 ms/op
# Warmup Iteration   2: 168,718 ms/op
# Warmup Iteration   3: 169,470 ms/op
# Warmup Iteration   4: 168,549 ms/op
# Warmup Iteration   5: 168,557 ms/op
# Warmup Iteration   6: 169,265 ms/op
# Warmup Iteration   7: 169,187 ms/op
# Warmup Iteration   8: 168,722 ms/op
# Warmup Iteration   9: 168,681 ms/op
# Warmup Iteration  10: 168,605 ms/op
Iteration   1: 168,802 ms/op
Iteration   2: 169,296 ms/op
Iteration   3: 168,405 ms/op
Iteration   4: 168,393 ms/op
Iteration   5: 169,449 ms/op
Iteration   6: 169,164 ms/op
Iteration   7: 168,679 ms/op
Iteration   8: 169,944 ms/op
Iteration   9: 168,542 ms/op
Iteration  10: 168,307 ms/op


Result "benchmarkFind":
  168,898 ±(99.9%) 0,822 ms/op [Average]
  (min, avg, max) = (168,307, 168,898, 169,944), stdev = 0,544
  CI (99.9%): [168,076, 169,720] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternSize = 8)

# Run progress: 0,83% complete, ETA 14:01:34
# Fork: 1 of 1
# Warmup Iteration   1: 154,864 ms/op
# Warmup Iteration   2: 153,459 ms/op
# Warmup Iteration   3: 153,483 ms/op
# Warmup Iteration   4: 153,805 ms/op
# Warmup Iteration   5: 153,219 ms/op
# Warmup Iteration   6: 153,637 ms/op
# Warmup Iteration   7: 153,565 ms/op
# Warmup Iteration   8: 154,036 ms/op
# Warmup Iteration   9: 153,537 ms/op
# Warmup Iteration  10: 154,280 ms/op
Iteration   1: 153,405 ms/op
Iteration   2: 153,376 ms/op
Iteration   3: 141,870 ms/op
Iteration   4: 141,879 ms/op
Iteration   5: 141,876 ms/op
Iteration   6: 141,410 ms/op
Iteration   7: 141,902 ms/op
Iteration   8: 141,484 ms/op
Iteration   9: 142,119 ms/op
Iteration  10: 141,618 ms/op


Result "benchmarkFind":
  144,094 ±(99.9%) 7,415 ms/op [Average]
  (min, avg, max) = (141,410, 144,094, 153,405), stdev = 4,904
  CI (99.9%): [136,679, 151,509] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternSize = 16)

# Run progress: 0,87% complete, ETA 14:00:10
# Fork: 1 of 1
# Warmup Iteration   1: 160,068 ms/op
# Warmup Iteration   2: 155,963 ms/op
# Warmup Iteration   3: 163,930 ms/op
# Warmup Iteration   4: 173,404 ms/op
# Warmup Iteration   5: 202,707 ms/op
# Warmup Iteration   6: 179,745 ms/op
# Warmup Iteration   7: 174,004 ms/op
# Warmup Iteration   8: 178,713 ms/op
# Warmup Iteration   9: 168,458 ms/op
# Warmup Iteration  10: 154,959 ms/op
Iteration   1: 154,511 ms/op
Iteration   2: 154,870 ms/op
Iteration   3: 154,590 ms/op
Iteration   4: 147,324 ms/op
Iteration   5: 148,268 ms/op
Iteration   6: 153,545 ms/op
Iteration   7: 154,282 ms/op
Iteration   8: 167,452 ms/op
Iteration   9: 162,358 ms/op
Iteration  10: 157,180 ms/op


Result "benchmarkFind":
  155,438 ±(99.9%) 9,005 ms/op [Average]
  (min, avg, max) = (147,324, 155,438, 167,452), stdev = 5,957
  CI (99.9%): [146,433, 164,443] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternSize = 32)

# Run progress: 0,92% complete, ETA 13:57:50
# Fork: 1 of 1
# Warmup Iteration   1: 172,689 ms/op
# Warmup Iteration   2: 174,051 ms/op
# Warmup Iteration   3: 169,909 ms/op
# Warmup Iteration   4: 167,345 ms/op
# Warmup Iteration   5: 177,282 ms/op
# Warmup Iteration   6: 168,683 ms/op
# Warmup Iteration   7: 167,428 ms/op
# Warmup Iteration   8: 175,692 ms/op
# Warmup Iteration   9: 171,616 ms/op
# Warmup Iteration  10: 172,524 ms/op
Iteration   1: 173,165 ms/op
Iteration   2: 173,041 ms/op
Iteration   3: 164,204 ms/op
Iteration   4: 169,822 ms/op
Iteration   5: 155,994 ms/op
Iteration   6: 161,694 ms/op
Iteration   7: 166,934 ms/op
Iteration   8: 158,843 ms/op
Iteration   9: 161,781 ms/op
Iteration  10: 159,034 ms/op


Result "benchmarkFind":
  164,451 ±(99.9%) 9,180 ms/op [Average]
  (min, avg, max) = (155,994, 164,451, 173,165), stdev = 6,072
  CI (99.9%): [155,271, 173,631] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternSize = 64)

# Run progress: 0,97% complete, ETA 13:55:38
# Fork: 1 of 1
# Warmup Iteration   1: 159,972 ms/op
# Warmup Iteration   2: 153,301 ms/op
# Warmup Iteration   3: 153,816 ms/op
# Warmup Iteration   4: 153,562 ms/op
# Warmup Iteration   5: 152,977 ms/op
# Warmup Iteration   6: 153,236 ms/op
# Warmup Iteration   7: 153,088 ms/op
# Warmup Iteration   8: 153,082 ms/op
# Warmup Iteration   9: 153,330 ms/op
# Warmup Iteration  10: 153,268 ms/op
Iteration   1: 152,986 ms/op
Iteration   2: 152,962 ms/op
Iteration   3: 148,079 ms/op
Iteration   4: 146,924 ms/op
Iteration   5: 147,785 ms/op
Iteration   6: 147,417 ms/op
Iteration   7: 147,744 ms/op
Iteration   8: 146,864 ms/op
Iteration   9: 163,572 ms/op
Iteration  10: 145,826 ms/op


Result "benchmarkFind":
  150,016 ±(99.9%) 8,110 ms/op [Average]
  (min, avg, max) = (145,826, 150,016, 163,572), stdev = 5,364
  CI (99.9%): [141,906, 158,126] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternSize = 128)

# Run progress: 1,01% complete, ETA 13:53:46
# Fork: 1 of 1
# Warmup Iteration   1: 156,995 ms/op
# Warmup Iteration   2: 156,063 ms/op
# Warmup Iteration   3: 156,487 ms/op
# Warmup Iteration   4: 155,907 ms/op
# Warmup Iteration   5: 155,991 ms/op
# Warmup Iteration   6: 156,539 ms/op
# Warmup Iteration   7: 156,271 ms/op
# Warmup Iteration   8: 156,203 ms/op
# Warmup Iteration   9: 157,172 ms/op
# Warmup Iteration  10: 155,887 ms/op
Iteration   1: 156,840 ms/op
Iteration   2: 155,734 ms/op
Iteration   3: 148,277 ms/op
Iteration   4: 148,413 ms/op
Iteration   5: 148,726 ms/op
Iteration   6: 148,835 ms/op
Iteration   7: 148,049 ms/op
Iteration   8: 157,289 ms/op
Iteration   9: 150,869 ms/op
Iteration  10: 148,082 ms/op


Result "benchmarkFind":
  151,111 ±(99.9%) 5,902 ms/op [Average]
  (min, avg, max) = (148,049, 151,111, 157,289), stdev = 3,904
  CI (99.9%): [145,209, 157,013] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternSize = 256)

# Run progress: 1,06% complete, ETA 13:52:06
# Fork: 1 of 1
# Warmup Iteration   1: 157,834 ms/op
# Warmup Iteration   2: 156,091 ms/op
# Warmup Iteration   3: 157,444 ms/op
# Warmup Iteration   4: 156,965 ms/op
# Warmup Iteration   5: 155,692 ms/op
# Warmup Iteration   6: 156,948 ms/op
# Warmup Iteration   7: 156,608 ms/op
# Warmup Iteration   8: 156,394 ms/op
# Warmup Iteration   9: 156,427 ms/op
# Warmup Iteration  10: 156,390 ms/op
Iteration   1: 156,941 ms/op
Iteration   2: 157,426 ms/op
Iteration   3: 146,625 ms/op
Iteration   4: 147,635 ms/op
Iteration   5: 147,339 ms/op
Iteration   6: 147,209 ms/op
Iteration   7: 147,306 ms/op
Iteration   8: 147,462 ms/op
Iteration   9: 146,891 ms/op
Iteration  10: 147,636 ms/op


Result "benchmarkFind":
  149,247 ±(99.9%) 6,344 ms/op [Average]
  (min, avg, max) = (146,625, 149,247, 157,426), stdev = 4,196
  CI (99.9%): [142,903, 155,591] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternSize = 2)

# Run progress: 1,10% complete, ETA 13:50:31
# Fork: 1 of 1
# Warmup Iteration   1: 9,063 ms/op
# Warmup Iteration   2: 8,662 ms/op
# Warmup Iteration   3: 8,644 ms/op
# Warmup Iteration   4: 8,625 ms/op
# Warmup Iteration   5: 8,617 ms/op
# Warmup Iteration   6: 8,635 ms/op
# Warmup Iteration   7: 8,663 ms/op
# Warmup Iteration   8: 8,710 ms/op
# Warmup Iteration   9: 8,605 ms/op
# Warmup Iteration  10: 8,706 ms/op
Iteration   1: 8,654 ms/op
Iteration   2: 8,673 ms/op
Iteration   3: 9,695 ms/op
Iteration   4: 9,412 ms/op
Iteration   5: 8,623 ms/op
Iteration   6: 8,687 ms/op
Iteration   7: 8,570 ms/op
Iteration   8: 8,612 ms/op
Iteration   9: 8,647 ms/op
Iteration  10: 8,644 ms/op


Result "benchmarkFind":
  8,822 ±(99.9%) 0,594 ms/op [Average]
  (min, avg, max) = (8,570, 8,822, 9,695), stdev = 0,393
  CI (99.9%): [8,228, 9,415] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternSize = 4)

# Run progress: 1,15% complete, ETA 13:46:48
# Fork: 1 of 1
# Warmup Iteration   1: 92,121 ms/op
# Warmup Iteration   2: 95,320 ms/op
# Warmup Iteration   3: 101,690 ms/op
# Warmup Iteration   4: 101,695 ms/op
# Warmup Iteration   5: 102,200 ms/op
# Warmup Iteration   6: 100,974 ms/op
# Warmup Iteration   7: 101,243 ms/op
# Warmup Iteration   8: 101,126 ms/op
# Warmup Iteration   9: 101,808 ms/op
# Warmup Iteration  10: 101,183 ms/op
Iteration   1: 101,070 ms/op
Iteration   2: 101,422 ms/op
Iteration   3: 101,089 ms/op
Iteration   4: 101,145 ms/op
Iteration   5: 100,581 ms/op
Iteration   6: 102,008 ms/op
Iteration   7: 101,286 ms/op
Iteration   8: 100,517 ms/op
Iteration   9: 100,874 ms/op
Iteration  10: 105,398 ms/op


Result "benchmarkFind":
  101,539 ±(99.9%) 2,148 ms/op [Average]
  (min, avg, max) = (100,517, 101,539, 105,398), stdev = 1,421
  CI (99.9%): [99,391, 103,687] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternSize = 8)

# Run progress: 1,19% complete, ETA 13:44:47
# Fork: 1 of 1
# Warmup Iteration   1: 90,850 ms/op
# Warmup Iteration   2: 89,930 ms/op
# Warmup Iteration   3: 89,690 ms/op
# Warmup Iteration   4: 90,536 ms/op
# Warmup Iteration   5: 90,754 ms/op
# Warmup Iteration   6: 90,747 ms/op
# Warmup Iteration   7: 91,087 ms/op
# Warmup Iteration   8: 83,695 ms/op
# Warmup Iteration   9: 83,854 ms/op
# Warmup Iteration  10: 83,674 ms/op
Iteration   1: 83,425 ms/op
Iteration   2: 83,303 ms/op
Iteration   3: 83,592 ms/op
Iteration   4: 83,413 ms/op
Iteration   5: 83,631 ms/op
Iteration   6: 83,720 ms/op
Iteration   7: 83,821 ms/op
Iteration   8: 83,500 ms/op
Iteration   9: 83,613 ms/op
Iteration  10: 83,138 ms/op


Result "benchmarkFind":
  83,516 ±(99.9%) 0,307 ms/op [Average]
  (min, avg, max) = (83,138, 83,516, 83,821), stdev = 0,203
  CI (99.9%): [83,209, 83,823] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternSize = 16)

# Run progress: 1,24% complete, ETA 13:43:05
# Fork: 1 of 1
# Warmup Iteration   1: 91,100 ms/op
# Warmup Iteration   2: 90,382 ms/op
# Warmup Iteration   3: 90,965 ms/op
# Warmup Iteration   4: 90,701 ms/op
# Warmup Iteration   5: 90,458 ms/op
# Warmup Iteration   6: 91,430 ms/op
# Warmup Iteration   7: 90,846 ms/op
# Warmup Iteration   8: 94,438 ms/op
# Warmup Iteration   9: 83,912 ms/op
# Warmup Iteration  10: 83,778 ms/op
Iteration   1: 85,014 ms/op
Iteration   2: 84,321 ms/op
Iteration   3: 83,774 ms/op
Iteration   4: 83,973 ms/op
Iteration   5: 83,810 ms/op
Iteration   6: 84,255 ms/op
Iteration   7: 83,655 ms/op
Iteration   8: 83,675 ms/op
Iteration   9: 83,724 ms/op
Iteration  10: 84,003 ms/op


Result "benchmarkFind":
  84,020 ±(99.9%) 0,634 ms/op [Average]
  (min, avg, max) = (83,655, 84,020, 85,014), stdev = 0,419
  CI (99.9%): [83,387, 84,654] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternSize = 32)

# Run progress: 1,29% complete, ETA 13:40:37
# Fork: 1 of 1
# Warmup Iteration   1: 91,171 ms/op
# Warmup Iteration   2: 90,648 ms/op
# Warmup Iteration   3: 89,978 ms/op
# Warmup Iteration   4: 90,508 ms/op
# Warmup Iteration   5: 90,666 ms/op
# Warmup Iteration   6: 90,820 ms/op
# Warmup Iteration   7: 90,668 ms/op
# Warmup Iteration   8: 85,443 ms/op
# Warmup Iteration   9: 85,354 ms/op
# Warmup Iteration  10: 85,248 ms/op
Iteration   1: 85,008 ms/op
Iteration   2: 85,323 ms/op
Iteration   3: 85,367 ms/op
Iteration   4: 84,555 ms/op
Iteration   5: 84,418 ms/op
Iteration   6: 85,159 ms/op
Iteration   7: 85,205 ms/op
Iteration   8: 84,202 ms/op
Iteration   9: 84,705 ms/op
Iteration  10: 84,842 ms/op


Result "benchmarkFind":
  84,878 ±(99.9%) 0,605 ms/op [Average]
  (min, avg, max) = (84,202, 84,878, 85,367), stdev = 0,400
  CI (99.9%): [84,273, 85,484] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternSize = 64)

# Run progress: 1,33% complete, ETA 13:38:43
# Fork: 1 of 1
# Warmup Iteration   1: 90,712 ms/op
# Warmup Iteration   2: 90,112 ms/op
# Warmup Iteration   3: 89,657 ms/op
# Warmup Iteration   4: 89,634 ms/op
# Warmup Iteration   5: 90,274 ms/op
# Warmup Iteration   6: 89,638 ms/op
# Warmup Iteration   7: 90,044 ms/op
# Warmup Iteration   8: 83,136 ms/op
# Warmup Iteration   9: 83,158 ms/op
# Warmup Iteration  10: 83,528 ms/op
Iteration   1: 83,188 ms/op
Iteration   2: 83,073 ms/op
Iteration   3: 83,125 ms/op
Iteration   4: 83,009 ms/op
Iteration   5: 82,646 ms/op
Iteration   6: 83,204 ms/op
Iteration   7: 82,751 ms/op
Iteration   8: 83,089 ms/op
Iteration   9: 82,997 ms/op
Iteration  10: 82,712 ms/op


Result "benchmarkFind":
  82,979 ±(99.9%) 0,307 ms/op [Average]
  (min, avg, max) = (82,646, 82,979, 83,204), stdev = 0,203
  CI (99.9%): [82,672, 83,287] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternSize = 128)

# Run progress: 1,38% complete, ETA 13:37:48
# Fork: 1 of 1
# Warmup Iteration   1: 90,743 ms/op
# Warmup Iteration   2: 89,685 ms/op
# Warmup Iteration   3: 100,924 ms/op
# Warmup Iteration   4: 89,685 ms/op
# Warmup Iteration   5: 90,499 ms/op
# Warmup Iteration   6: 90,350 ms/op
# Warmup Iteration   7: 90,235 ms/op
# Warmup Iteration   8: 97,553 ms/op
# Warmup Iteration   9: 98,787 ms/op
# Warmup Iteration  10: 98,609 ms/op
Iteration   1: 100,003 ms/op
Iteration   2: 98,491 ms/op
Iteration   3: 100,740 ms/op
Iteration   4: 99,648 ms/op
Iteration   5: 98,379 ms/op
Iteration   6: 98,458 ms/op
Iteration   7: 98,299 ms/op
Iteration   8: 98,299 ms/op
Iteration   9: 98,768 ms/op
Iteration  10: 98,394 ms/op


Result "benchmarkFind":
  98,948 ±(99.9%) 1,311 ms/op [Average]
  (min, avg, max) = (98,299, 98,948, 100,740), stdev = 0,867
  CI (99.9%): [97,637, 100,259] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternSize = 256)

# Run progress: 1,42% complete, ETA 13:37:09
# Fork: 1 of 1
# Warmup Iteration   1: 90,994 ms/op
# Warmup Iteration   2: 90,731 ms/op
# Warmup Iteration   3: 90,646 ms/op
# Warmup Iteration   4: 91,144 ms/op
# Warmup Iteration   5: 90,168 ms/op
# Warmup Iteration   6: 90,663 ms/op
# Warmup Iteration   7: 90,225 ms/op
# Warmup Iteration   8: 83,984 ms/op
# Warmup Iteration   9: 84,293 ms/op
# Warmup Iteration  10: 83,547 ms/op
Iteration   1: 83,595 ms/op
Iteration   2: 83,849 ms/op
Iteration   3: 83,927 ms/op
Iteration   4: 83,146 ms/op
Iteration   5: 82,969 ms/op
Iteration   6: 84,015 ms/op
Iteration   7: 83,830 ms/op
Iteration   8: 83,127 ms/op
Iteration   9: 83,386 ms/op
Iteration  10: 83,374 ms/op


Result "benchmarkFind":
  83,522 ±(99.9%) 0,565 ms/op [Average]
  (min, avg, max) = (82,969, 83,522, 84,015), stdev = 0,374
  CI (99.9%): [82,957, 84,087] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternSize = 2)

# Run progress: 1,47% complete, ETA 13:35:26
# Fork: 1 of 1
# Warmup Iteration   1: 20,044 ms/op
# Warmup Iteration   2: 19,744 ms/op
# Warmup Iteration   3: 19,795 ms/op
# Warmup Iteration   4: 19,789 ms/op
# Warmup Iteration   5: 19,671 ms/op
# Warmup Iteration   6: 19,620 ms/op
# Warmup Iteration   7: 19,623 ms/op
# Warmup Iteration   8: 19,686 ms/op
# Warmup Iteration   9: 19,738 ms/op
# Warmup Iteration  10: 19,549 ms/op
Iteration   1: 19,525 ms/op
Iteration   2: 19,618 ms/op
Iteration   3: 19,465 ms/op
Iteration   4: 19,756 ms/op
Iteration   5: 19,827 ms/op
Iteration   6: 19,628 ms/op
Iteration   7: 19,691 ms/op
Iteration   8: 19,539 ms/op
Iteration   9: 24,470 ms/op
Iteration  10: 19,545 ms/op


Result "benchmarkFind":
  20,106 ±(99.9%) 2,324 ms/op [Average]
  (min, avg, max) = (19,465, 20,106, 24,470), stdev = 1,537
  CI (99.9%): [17,782, 22,431] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternSize = 4)

# Run progress: 1,52% complete, ETA 13:32:50
# Fork: 1 of 1
# Warmup Iteration   1: 456,214 ms/op
# Warmup Iteration   2: 451,909 ms/op
# Warmup Iteration   3: 451,717 ms/op
# Warmup Iteration   4: 450,797 ms/op
# Warmup Iteration   5: 448,783 ms/op
# Warmup Iteration   6: 449,684 ms/op
# Warmup Iteration   7: 451,203 ms/op
# Warmup Iteration   8: 450,084 ms/op
# Warmup Iteration   9: 454,837 ms/op
# Warmup Iteration  10: 452,407 ms/op
Iteration   1: 551,772 ms/op
Iteration   2: 562,216 ms/op
Iteration   3: 560,260 ms/op
Iteration   4: 562,222 ms/op
Iteration   5: 562,229 ms/op
Iteration   6: 560,778 ms/op
Iteration   7: 567,432 ms/op
Iteration   8: 563,949 ms/op
Iteration   9: 566,273 ms/op
Iteration  10: 572,607 ms/op


Result "benchmarkFind":
  562,974 ±(99.9%) 8,186 ms/op [Average]
  (min, avg, max) = (551,772, 562,974, 572,607), stdev = 5,415
  CI (99.9%): [554,788, 571,160] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternSize = 8)

# Run progress: 1,56% complete, ETA 13:38:18
# Fork: 1 of 1
# Warmup Iteration   1: 455,091 ms/op
# Warmup Iteration   2: 454,840 ms/op
# Warmup Iteration   3: 454,449 ms/op
# Warmup Iteration   4: 450,427 ms/op
# Warmup Iteration   5: 452,865 ms/op
# Warmup Iteration   6: 450,913 ms/op
# Warmup Iteration   7: 449,878 ms/op
# Warmup Iteration   8: 452,139 ms/op
# Warmup Iteration   9: 454,896 ms/op
# Warmup Iteration  10: 451,178 ms/op
Iteration   1: 453,679 ms/op
Iteration   2: 452,239 ms/op
Iteration   3: 453,550 ms/op
Iteration   4: 455,098 ms/op
Iteration   5: 451,200 ms/op
Iteration   6: 450,110 ms/op
Iteration   7: 452,491 ms/op
Iteration   8: 450,626 ms/op
Iteration   9: 453,935 ms/op
Iteration  10: 543,233 ms/op


Result "benchmarkFind":
  461,616 ±(99.9%) 43,421 ms/op [Average]
  (min, avg, max) = (450,110, 461,616, 543,233), stdev = 28,720
  CI (99.9%): [418,195, 505,037] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternSize = 16)

# Run progress: 1,61% complete, ETA 13:45:33
# Fork: 1 of 1
# Warmup Iteration   1: 456,317 ms/op
# Warmup Iteration   2: 452,497 ms/op
# Warmup Iteration   3: 454,030 ms/op
# Warmup Iteration   4: 453,467 ms/op
# Warmup Iteration   5: 451,340 ms/op
# Warmup Iteration   6: 451,480 ms/op
# Warmup Iteration   7: 453,837 ms/op
# Warmup Iteration   8: 450,259 ms/op
# Warmup Iteration   9: 451,348 ms/op
# Warmup Iteration  10: 451,383 ms/op
Iteration   1: 453,241 ms/op
Iteration   2: 451,284 ms/op
Iteration   3: 452,004 ms/op
Iteration   4: 465,110 ms/op
Iteration   5: 452,209 ms/op
Iteration   6: 451,798 ms/op
Iteration   7: 451,641 ms/op
Iteration   8: 452,249 ms/op
Iteration   9: 453,281 ms/op
Iteration  10: 455,619 ms/op


Result "benchmarkFind":
  453,844 ±(99.9%) 6,273 ms/op [Average]
  (min, avg, max) = (451,284, 453,844, 465,110), stdev = 4,149
  CI (99.9%): [447,570, 460,117] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternSize = 32)

# Run progress: 1,65% complete, ETA 13:52:42
# Fork: 1 of 1
# Warmup Iteration   1: 459,264 ms/op
# Warmup Iteration   2: 456,838 ms/op
# Warmup Iteration   3: 456,758 ms/op
# Warmup Iteration   4: 456,496 ms/op
# Warmup Iteration   5: 456,011 ms/op
# Warmup Iteration   6: 455,994 ms/op
# Warmup Iteration   7: 455,366 ms/op
# Warmup Iteration   8: 455,836 ms/op
# Warmup Iteration   9: 456,318 ms/op
# Warmup Iteration  10: 456,333 ms/op
Iteration   1: 456,593 ms/op
Iteration   2: 455,895 ms/op
Iteration   3: 456,546 ms/op
Iteration   4: 456,560 ms/op
Iteration   5: 456,481 ms/op
Iteration   6: 457,276 ms/op
Iteration   7: 456,393 ms/op
Iteration   8: 455,658 ms/op
Iteration   9: 539,614 ms/op
Iteration  10: 463,298 ms/op


Result "benchmarkFind":
  465,431 ±(99.9%) 39,547 ms/op [Average]
  (min, avg, max) = (455,658, 465,431, 539,614), stdev = 26,158
  CI (99.9%): [425,884, 504,978] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternSize = 64)

# Run progress: 1,70% complete, ETA 13:59:16
# Fork: 1 of 1
# Warmup Iteration   1: 451,584 ms/op
# Warmup Iteration   2: 449,732 ms/op
# Warmup Iteration   3: 449,038 ms/op
# Warmup Iteration   4: 447,802 ms/op
# Warmup Iteration   5: 448,680 ms/op
# Warmup Iteration   6: 448,439 ms/op
# Warmup Iteration   7: 448,671 ms/op
# Warmup Iteration   8: 448,157 ms/op
# Warmup Iteration   9: 448,089 ms/op
# Warmup Iteration  10: 448,660 ms/op
Iteration   1: 448,354 ms/op
Iteration   2: 450,637 ms/op
Iteration   3: 449,528 ms/op
Iteration   4: 448,461 ms/op
Iteration   5: 449,088 ms/op
Iteration   6: 448,587 ms/op
Iteration   7: 448,042 ms/op
Iteration   8: 451,939 ms/op
Iteration   9: 448,832 ms/op
Iteration  10: 450,735 ms/op


Result "benchmarkFind":
  449,420 ±(99.9%) 1,930 ms/op [Average]
  (min, avg, max) = (448,042, 449,420, 451,939), stdev = 1,277
  CI (99.9%): [447,490, 451,351] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternSize = 128)

# Run progress: 1,75% complete, ETA 14:05:16
# Fork: 1 of 1
# Warmup Iteration   1: 462,571 ms/op
# Warmup Iteration   2: 457,084 ms/op
# Warmup Iteration   3: 457,872 ms/op
# Warmup Iteration   4: 457,108 ms/op
# Warmup Iteration   5: 456,657 ms/op
# Warmup Iteration   6: 458,504 ms/op
# Warmup Iteration   7: 456,510 ms/op
# Warmup Iteration   8: 458,918 ms/op
# Warmup Iteration   9: 455,864 ms/op
# Warmup Iteration  10: 456,596 ms/op
Iteration   1: 458,120 ms/op
Iteration   2: 455,939 ms/op
Iteration   3: 455,111 ms/op
Iteration   4: 460,091 ms/op
Iteration   5: 456,939 ms/op
Iteration   6: 455,930 ms/op
Iteration   7: 456,564 ms/op
Iteration   8: 472,340 ms/op
Iteration   9: 455,793 ms/op
Iteration  10: 454,549 ms/op


Result "benchmarkFind":
  458,138 ±(99.9%) 7,915 ms/op [Average]
  (min, avg, max) = (454,549, 458,138, 472,340), stdev = 5,235
  CI (99.9%): [450,223, 466,053] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternSize = 256)

# Run progress: 1,79% complete, ETA 14:11:29
# Fork: 1 of 1
# Warmup Iteration   1: 450,596 ms/op
# Warmup Iteration   2: 449,213 ms/op
# Warmup Iteration   3: 449,815 ms/op
# Warmup Iteration   4: 448,838 ms/op
# Warmup Iteration   5: 447,044 ms/op
# Warmup Iteration   6: 448,232 ms/op
# Warmup Iteration   7: 446,985 ms/op
# Warmup Iteration   8: 447,631 ms/op
# Warmup Iteration   9: 449,421 ms/op
# Warmup Iteration  10: 447,528 ms/op
Iteration   1: 448,529 ms/op
Iteration   2: 448,966 ms/op
Iteration   3: 447,735 ms/op
Iteration   4: 447,856 ms/op
Iteration   5: 447,727 ms/op
Iteration   6: 448,535 ms/op
Iteration   7: 451,401 ms/op
Iteration   8: 450,129 ms/op
Iteration   9: 448,087 ms/op
Iteration  10: 448,138 ms/op


Result "benchmarkFind":
  448,710 ±(99.9%) 1,799 ms/op [Average]
  (min, avg, max) = (447,727, 448,710, 451,401), stdev = 1,190
  CI (99.9%): [446,911, 450,510] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternSize = 2)

# Run progress: 1,84% complete, ETA 14:16:50
# Fork: 1 of 1
# Warmup Iteration   1: 56,704 ms/op
# Warmup Iteration   2: 58,788 ms/op
# Warmup Iteration   3: 58,974 ms/op
# Warmup Iteration   4: 59,138 ms/op
# Warmup Iteration   5: 58,586 ms/op
# Warmup Iteration   6: 59,024 ms/op
# Warmup Iteration   7: 59,112 ms/op
# Warmup Iteration   8: 59,080 ms/op
# Warmup Iteration   9: 59,083 ms/op
# Warmup Iteration  10: 59,098 ms/op
Iteration   1: 60,717 ms/op
Iteration   2: 60,338 ms/op
Iteration   3: 58,502 ms/op
Iteration   4: 58,822 ms/op
Iteration   5: 58,391 ms/op
Iteration   6: 58,845 ms/op
Iteration   7: 58,603 ms/op
Iteration   8: 58,643 ms/op
Iteration   9: 58,747 ms/op
Iteration  10: 58,694 ms/op


Result "benchmarkFind":
  59,030 ±(99.9%) 1,219 ms/op [Average]
  (min, avg, max) = (58,391, 59,030, 60,717), stdev = 0,806
  CI (99.9%): [57,812, 60,249] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternSize = 4)

# Run progress: 1,88% complete, ETA 14:14:18
# Fork: 1 of 1
# Warmup Iteration   1: 40,899 ms/op
# Warmup Iteration   2: 40,558 ms/op
# Warmup Iteration   3: 40,580 ms/op
# Warmup Iteration   4: 40,070 ms/op
# Warmup Iteration   5: 43,787 ms/op
# Warmup Iteration   6: 39,446 ms/op
# Warmup Iteration   7: 39,433 ms/op
# Warmup Iteration   8: 39,794 ms/op
# Warmup Iteration   9: 39,517 ms/op
# Warmup Iteration  10: 39,455 ms/op
Iteration   1: 39,416 ms/op
Iteration   2: 39,485 ms/op
Iteration   3: 39,707 ms/op
Iteration   4: 39,431 ms/op
Iteration   5: 39,428 ms/op
Iteration   6: 41,062 ms/op
Iteration   7: 39,826 ms/op
Iteration   8: 39,508 ms/op
Iteration   9: 39,478 ms/op
Iteration  10: 39,388 ms/op


Result "benchmarkFind":
  39,673 ±(99.9%) 0,768 ms/op [Average]
  (min, avg, max) = (39,388, 39,673, 41,062), stdev = 0,508
  CI (99.9%): [38,905, 40,440] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternSize = 8)

# Run progress: 1,93% complete, ETA 14:11:35
# Fork: 1 of 1
# Warmup Iteration   1: 40,886 ms/op
# Warmup Iteration   2: 40,779 ms/op
# Warmup Iteration   3: 40,668 ms/op
# Warmup Iteration   4: 40,255 ms/op
# Warmup Iteration   5: 39,399 ms/op
# Warmup Iteration   6: 39,436 ms/op
# Warmup Iteration   7: 39,356 ms/op
# Warmup Iteration   8: 39,322 ms/op
# Warmup Iteration   9: 39,472 ms/op
# Warmup Iteration  10: 39,584 ms/op
Iteration   1: 39,610 ms/op
Iteration   2: 39,860 ms/op
Iteration   3: 39,750 ms/op
Iteration   4: 39,595 ms/op
Iteration   5: 39,764 ms/op
Iteration   6: 39,733 ms/op
Iteration   7: 39,750 ms/op
Iteration   8: 39,830 ms/op
Iteration   9: 39,537 ms/op
Iteration  10: 39,313 ms/op


Result "benchmarkFind":
  39,674 ±(99.9%) 0,248 ms/op [Average]
  (min, avg, max) = (39,313, 39,674, 39,860), stdev = 0,164
  CI (99.9%): [39,427, 39,922] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternSize = 16)

# Run progress: 1,98% complete, ETA 14:09:01
# Fork: 1 of 1
# Warmup Iteration   1: 41,478 ms/op
# Warmup Iteration   2: 40,952 ms/op
# Warmup Iteration   3: 41,004 ms/op
# Warmup Iteration   4: 40,269 ms/op
# Warmup Iteration   5: 39,788 ms/op
# Warmup Iteration   6: 39,561 ms/op
# Warmup Iteration   7: 39,600 ms/op
# Warmup Iteration   8: 39,585 ms/op
# Warmup Iteration   9: 39,982 ms/op
# Warmup Iteration  10: 39,612 ms/op
Iteration   1: 39,787 ms/op
Iteration   2: 39,801 ms/op
Iteration   3: 39,520 ms/op
Iteration   4: 39,582 ms/op
Iteration   5: 39,635 ms/op
Iteration   6: 39,993 ms/op
Iteration   7: 39,629 ms/op
Iteration   8: 39,559 ms/op
Iteration   9: 39,922 ms/op
Iteration  10: 39,635 ms/op


Result "benchmarkFind":
  39,706 ±(99.9%) 0,243 ms/op [Average]
  (min, avg, max) = (39,520, 39,706, 39,993), stdev = 0,160
  CI (99.9%): [39,464, 39,949] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternSize = 32)

# Run progress: 2,02% complete, ETA 14:06:33
# Fork: 1 of 1
# Warmup Iteration   1: 47,964 ms/op
# Warmup Iteration   2: 41,088 ms/op
# Warmup Iteration   3: 40,783 ms/op
# Warmup Iteration   4: 40,868 ms/op
# Warmup Iteration   5: 40,555 ms/op
# Warmup Iteration   6: 40,435 ms/op
# Warmup Iteration   7: 40,626 ms/op
# Warmup Iteration   8: 40,597 ms/op
# Warmup Iteration   9: 40,736 ms/op
# Warmup Iteration  10: 40,583 ms/op
Iteration   1: 40,447 ms/op
Iteration   2: 40,524 ms/op
Iteration   3: 40,722 ms/op
Iteration   4: 40,417 ms/op
Iteration   5: 40,368 ms/op
Iteration   6: 40,234 ms/op
Iteration   7: 40,141 ms/op
Iteration   8: 40,278 ms/op
Iteration   9: 40,427 ms/op
Iteration  10: 40,237 ms/op


Result "benchmarkFind":
  40,380 ±(99.9%) 0,255 ms/op [Average]
  (min, avg, max) = (40,141, 40,380, 40,722), stdev = 0,168
  CI (99.9%): [40,125, 40,634] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternSize = 64)

# Run progress: 2,07% complete, ETA 14:04:00
# Fork: 1 of 1
# Warmup Iteration   1: 41,304 ms/op
# Warmup Iteration   2: 40,820 ms/op
# Warmup Iteration   3: 41,331 ms/op
# Warmup Iteration   4: 49,061 ms/op
# Warmup Iteration   5: 54,773 ms/op
# Warmup Iteration   6: 54,997 ms/op
# Warmup Iteration   7: 54,466 ms/op
# Warmup Iteration   8: 55,112 ms/op
# Warmup Iteration   9: 54,331 ms/op
# Warmup Iteration  10: 54,518 ms/op
Iteration   1: 54,815 ms/op
Iteration   2: 54,520 ms/op
Iteration   3: 54,959 ms/op
Iteration   4: 54,678 ms/op
Iteration   5: 54,831 ms/op
Iteration   6: 54,548 ms/op
Iteration   7: 54,540 ms/op
Iteration   8: 54,654 ms/op
Iteration   9: 54,580 ms/op
Iteration  10: 55,102 ms/op


Result "benchmarkFind":
  54,723 ±(99.9%) 0,299 ms/op [Average]
  (min, avg, max) = (54,520, 54,723, 55,102), stdev = 0,198
  CI (99.9%): [54,424, 55,022] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternSize = 128)

# Run progress: 2,11% complete, ETA 14:01:54
# Fork: 1 of 1
# Warmup Iteration   1: 41,471 ms/op
# Warmup Iteration   2: 41,054 ms/op
# Warmup Iteration   3: 41,165 ms/op
# Warmup Iteration   4: 49,100 ms/op
# Warmup Iteration   5: 55,124 ms/op
# Warmup Iteration   6: 54,436 ms/op
# Warmup Iteration   7: 54,384 ms/op
# Warmup Iteration   8: 55,013 ms/op
# Warmup Iteration   9: 54,940 ms/op
# Warmup Iteration  10: 55,206 ms/op
Iteration   1: 54,943 ms/op
Iteration   2: 55,054 ms/op
Iteration   3: 54,906 ms/op
Iteration   4: 55,196 ms/op
Iteration   5: 54,980 ms/op
Iteration   6: 55,090 ms/op
Iteration   7: 55,446 ms/op
Iteration   8: 56,968 ms/op
Iteration   9: 54,993 ms/op
Iteration  10: 54,821 ms/op


Result "benchmarkFind":
  55,240 ±(99.9%) 0,955 ms/op [Average]
  (min, avg, max) = (54,821, 55,240, 56,968), stdev = 0,632
  CI (99.9%): [54,285, 56,195] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternSize = 256)

# Run progress: 2,16% complete, ETA 13:59:53
# Fork: 1 of 1
# Warmup Iteration   1: 41,038 ms/op
# Warmup Iteration   2: 40,481 ms/op
# Warmup Iteration   3: 40,405 ms/op
# Warmup Iteration   4: 40,279 ms/op
# Warmup Iteration   5: 40,433 ms/op
# Warmup Iteration   6: 40,213 ms/op
# Warmup Iteration   7: 39,788 ms/op
# Warmup Iteration   8: 40,196 ms/op
# Warmup Iteration   9: 40,141 ms/op
# Warmup Iteration  10: 40,129 ms/op
Iteration   1: 40,118 ms/op
Iteration   2: 40,124 ms/op
Iteration   3: 39,848 ms/op
Iteration   4: 40,500 ms/op
Iteration   5: 39,915 ms/op
Iteration   6: 40,187 ms/op
Iteration   7: 40,135 ms/op
Iteration   8: 42,455 ms/op
Iteration   9: 40,046 ms/op
Iteration  10: 40,268 ms/op


Result "benchmarkFind":
  40,360 ±(99.9%) 1,146 ms/op [Average]
  (min, avg, max) = (39,848, 40,360, 42,455), stdev = 0,758
  CI (99.9%): [39,214, 41,506] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternSize = 2)

# Run progress: 2,21% complete, ETA 13:57:37
# Fork: 1 of 1
# Warmup Iteration   1: 141,661 ms/op
# Warmup Iteration   2: 146,510 ms/op
# Warmup Iteration   3: 145,686 ms/op
# Warmup Iteration   4: 146,088 ms/op
# Warmup Iteration   5: 146,276 ms/op
# Warmup Iteration   6: 145,973 ms/op
# Warmup Iteration   7: 144,903 ms/op
# Warmup Iteration   8: 145,853 ms/op
# Warmup Iteration   9: 145,785 ms/op
# Warmup Iteration  10: 145,031 ms/op
Iteration   1: 145,910 ms/op
Iteration   2: 146,253 ms/op
Iteration   3: 147,551 ms/op
Iteration   4: 145,958 ms/op
Iteration   5: 146,411 ms/op
Iteration   6: 145,307 ms/op
Iteration   7: 145,961 ms/op
Iteration   8: 144,653 ms/op
Iteration   9: 145,819 ms/op
Iteration  10: 145,527 ms/op


Result "benchmarkFind":
  145,935 ±(99.9%) 1,144 ms/op [Average]
  (min, avg, max) = (144,653, 145,935, 147,551), stdev = 0,757
  CI (99.9%): [144,790, 147,079] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternSize = 4)

# Run progress: 2,25% complete, ETA 13:56:20
# Fork: 1 of 1
# Warmup Iteration   1: 131,790 ms/op
# Warmup Iteration   2: 130,041 ms/op
# Warmup Iteration   3: 129,204 ms/op
# Warmup Iteration   4: 131,489 ms/op
# Warmup Iteration   5: 130,988 ms/op
# Warmup Iteration   6: 130,591 ms/op
# Warmup Iteration   7: 130,165 ms/op
# Warmup Iteration   8: 130,325 ms/op
# Warmup Iteration   9: 129,629 ms/op
# Warmup Iteration  10: 129,736 ms/op
Iteration   1: 129,801 ms/op
Iteration   2: 135,352 ms/op
Iteration   3: 127,429 ms/op
Iteration   4: 127,375 ms/op
Iteration   5: 126,927 ms/op
Iteration   6: 127,186 ms/op
Iteration   7: 126,572 ms/op
Iteration   8: 127,002 ms/op
Iteration   9: 126,811 ms/op
Iteration  10: 126,731 ms/op


Result "benchmarkFind":
  128,119 ±(99.9%) 4,086 ms/op [Average]
  (min, avg, max) = (126,572, 128,119, 135,352), stdev = 2,703
  CI (99.9%): [124,032, 132,205] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternSize = 8)

# Run progress: 2,30% complete, ETA 13:55:12
# Fork: 1 of 1
# Warmup Iteration   1: 129,741 ms/op
# Warmup Iteration   2: 128,463 ms/op
# Warmup Iteration   3: 129,462 ms/op
# Warmup Iteration   4: 130,549 ms/op
# Warmup Iteration   5: 128,729 ms/op
# Warmup Iteration   6: 128,354 ms/op
# Warmup Iteration   7: 128,900 ms/op
# Warmup Iteration   8: 128,508 ms/op
# Warmup Iteration   9: 128,254 ms/op
# Warmup Iteration  10: 128,700 ms/op
Iteration   1: 128,179 ms/op
Iteration   2: 127,870 ms/op
Iteration   3: 126,806 ms/op
Iteration   4: 127,895 ms/op
Iteration   5: 127,498 ms/op
Iteration   6: 127,568 ms/op
Iteration   7: 127,987 ms/op
Iteration   8: 127,528 ms/op
Iteration   9: 126,723 ms/op
Iteration  10: 126,716 ms/op


Result "benchmarkFind":
  127,477 ±(99.9%) 0,827 ms/op [Average]
  (min, avg, max) = (126,716, 127,477, 128,179), stdev = 0,547
  CI (99.9%): [126,650, 128,304] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternSize = 16)

# Run progress: 2,34% complete, ETA 13:53:59
# Fork: 1 of 1
# Warmup Iteration   1: 130,490 ms/op
# Warmup Iteration   2: 128,894 ms/op
# Warmup Iteration   3: 129,005 ms/op
# Warmup Iteration   4: 128,415 ms/op
# Warmup Iteration   5: 128,576 ms/op
# Warmup Iteration   6: 128,091 ms/op
# Warmup Iteration   7: 128,787 ms/op
# Warmup Iteration   8: 128,594 ms/op
# Warmup Iteration   9: 128,927 ms/op
# Warmup Iteration  10: 128,678 ms/op
Iteration   1: 128,405 ms/op
Iteration   2: 128,713 ms/op
Iteration   3: 129,511 ms/op
Iteration   4: 128,595 ms/op
Iteration   5: 127,641 ms/op
Iteration   6: 128,454 ms/op
Iteration   7: 127,269 ms/op
Iteration   8: 127,773 ms/op
Iteration   9: 128,002 ms/op
Iteration  10: 128,088 ms/op


Result "benchmarkFind":
  128,245 ±(99.9%) 0,961 ms/op [Average]
  (min, avg, max) = (127,269, 128,245, 129,511), stdev = 0,636
  CI (99.9%): [127,284, 129,207] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternSize = 32)

# Run progress: 2,39% complete, ETA 13:52:50
# Fork: 1 of 1
# Warmup Iteration   1: 131,576 ms/op
# Warmup Iteration   2: 130,341 ms/op
# Warmup Iteration   3: 129,797 ms/op
# Warmup Iteration   4: 131,524 ms/op
# Warmup Iteration   5: 133,056 ms/op
# Warmup Iteration   6: 129,791 ms/op
# Warmup Iteration   7: 130,103 ms/op
# Warmup Iteration   8: 130,069 ms/op
# Warmup Iteration   9: 130,226 ms/op
# Warmup Iteration  10: 129,568 ms/op
Iteration   1: 130,899 ms/op
Iteration   2: 129,841 ms/op
Iteration   3: 129,141 ms/op
Iteration   4: 129,255 ms/op
Iteration   5: 129,055 ms/op
Iteration   6: 128,411 ms/op
Iteration   7: 128,597 ms/op
Iteration   8: 128,985 ms/op
Iteration   9: 129,082 ms/op
Iteration  10: 128,102 ms/op


Result "benchmarkFind":
  129,137 ±(99.9%) 1,186 ms/op [Average]
  (min, avg, max) = (128,102, 129,137, 130,899), stdev = 0,784
  CI (99.9%): [127,951, 130,323] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternSize = 64)

# Run progress: 2,44% complete, ETA 13:51:53
# Fork: 1 of 1
# Warmup Iteration   1: 130,757 ms/op
# Warmup Iteration   2: 129,975 ms/op
# Warmup Iteration   3: 130,327 ms/op
# Warmup Iteration   4: 130,109 ms/op
# Warmup Iteration   5: 129,928 ms/op
# Warmup Iteration   6: 129,428 ms/op
# Warmup Iteration   7: 129,298 ms/op
# Warmup Iteration   8: 129,392 ms/op
# Warmup Iteration   9: 130,191 ms/op
# Warmup Iteration  10: 129,755 ms/op
Iteration   1: 137,089 ms/op
Iteration   2: 142,920 ms/op
Iteration   3: 143,436 ms/op
Iteration   4: 143,246 ms/op
Iteration   5: 143,449 ms/op
Iteration   6: 142,471 ms/op
Iteration   7: 143,126 ms/op
Iteration   8: 141,975 ms/op
Iteration   9: 143,652 ms/op
Iteration  10: 142,981 ms/op


Result "benchmarkFind":
  142,434 ±(99.9%) 2,938 ms/op [Average]
  (min, avg, max) = (137,089, 142,434, 143,652), stdev = 1,943
  CI (99.9%): [139,497, 145,372] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternSize = 128)

# Run progress: 2,48% complete, ETA 13:50:55
# Fork: 1 of 1
# Warmup Iteration   1: 131,463 ms/op
# Warmup Iteration   2: 130,325 ms/op
# Warmup Iteration   3: 130,371 ms/op
# Warmup Iteration   4: 130,255 ms/op
# Warmup Iteration   5: 131,273 ms/op
# Warmup Iteration   6: 131,168 ms/op
# Warmup Iteration   7: 130,181 ms/op
# Warmup Iteration   8: 129,906 ms/op
# Warmup Iteration   9: 129,734 ms/op
# Warmup Iteration  10: 129,622 ms/op
Iteration   1: 136,967 ms/op
Iteration   2: 142,887 ms/op
Iteration   3: 142,510 ms/op
Iteration   4: 142,880 ms/op
Iteration   5: 143,242 ms/op
Iteration   6: 143,123 ms/op
Iteration   7: 143,227 ms/op
Iteration   8: 148,140 ms/op
Iteration   9: 150,513 ms/op
Iteration  10: 142,795 ms/op


Result "benchmarkFind":
  143,628 ±(99.9%) 5,422 ms/op [Average]
  (min, avg, max) = (136,967, 143,628, 150,513), stdev = 3,586
  CI (99.9%): [138,207, 149,050] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternSize = 256)

# Run progress: 2,53% complete, ETA 13:50:09
# Fork: 1 of 1
# Warmup Iteration   1: 130,242 ms/op
# Warmup Iteration   2: 128,295 ms/op
# Warmup Iteration   3: 128,261 ms/op
# Warmup Iteration   4: 128,725 ms/op
# Warmup Iteration   5: 128,957 ms/op
# Warmup Iteration   6: 129,202 ms/op
# Warmup Iteration   7: 132,392 ms/op
# Warmup Iteration   8: 129,330 ms/op
# Warmup Iteration   9: 130,176 ms/op
# Warmup Iteration  10: 128,988 ms/op
Iteration   1: 136,782 ms/op
Iteration   2: 142,830 ms/op
Iteration   3: 142,342 ms/op
Iteration   4: 143,416 ms/op
Iteration   5: 143,099 ms/op
Iteration   6: 143,313 ms/op
Iteration   7: 142,722 ms/op
Iteration   8: 142,880 ms/op
Iteration   9: 142,885 ms/op
Iteration  10: 146,399 ms/op


Result "benchmarkFind":
  142,667 ±(99.9%) 3,562 ms/op [Average]
  (min, avg, max) = (136,782, 142,667, 146,399), stdev = 2,356
  CI (99.9%): [139,105, 146,229] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternSize = 2)

# Run progress: 2,57% complete, ETA 13:49:19
# Fork: 1 of 1
# Warmup Iteration   1: 471,032 ms/op
# Warmup Iteration   2: 479,425 ms/op
# Warmup Iteration   3: 502,529 ms/op
# Warmup Iteration   4: 498,101 ms/op
# Warmup Iteration   5: 499,710 ms/op
# Warmup Iteration   6: 499,843 ms/op
# Warmup Iteration   7: 495,819 ms/op
# Warmup Iteration   8: 497,074 ms/op
# Warmup Iteration   9: 498,694 ms/op
# Warmup Iteration  10: 496,711 ms/op
Iteration   1: 497,232 ms/op
Iteration   2: 499,513 ms/op
Iteration   3: 496,041 ms/op
Iteration   4: 498,752 ms/op
Iteration   5: 496,961 ms/op
Iteration   6: 498,964 ms/op
Iteration   7: 501,394 ms/op
Iteration   8: 498,898 ms/op
Iteration   9: 495,604 ms/op
Iteration  10: 500,698 ms/op


Result "benchmarkFind":
  498,406 ±(99.9%) 2,894 ms/op [Average]
  (min, avg, max) = (495,604, 498,406, 501,394), stdev = 1,915
  CI (99.9%): [495,511, 501,300] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternSize = 4)

# Run progress: 2,62% complete, ETA 13:55:41
# Fork: 1 of 1
# Warmup Iteration   1: 456,077 ms/op
# Warmup Iteration   2: 455,617 ms/op
# Warmup Iteration   3: 453,556 ms/op
# Warmup Iteration   4: 452,758 ms/op
# Warmup Iteration   5: 451,787 ms/op
# Warmup Iteration   6: 456,701 ms/op
# Warmup Iteration   7: 455,651 ms/op
# Warmup Iteration   8: 454,725 ms/op
# Warmup Iteration   9: 450,895 ms/op
# Warmup Iteration  10: 454,835 ms/op
Iteration   1: 453,288 ms/op
Iteration   2: 451,352 ms/op
Iteration   3: 455,707 ms/op
Iteration   4: 453,811 ms/op
Iteration   5: 455,479 ms/op
Iteration   6: 454,855 ms/op
Iteration   7: 455,546 ms/op
Iteration   8: 454,015 ms/op
Iteration   9: 451,463 ms/op
Iteration  10: 452,935 ms/op


Result "benchmarkFind":
  453,845 ±(99.9%) 2,423 ms/op [Average]
  (min, avg, max) = (451,352, 453,845, 455,707), stdev = 1,602
  CI (99.9%): [451,422, 456,268] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternSize = 8)

# Run progress: 2,67% complete, ETA 14:01:12
# Fork: 1 of 1
# Warmup Iteration   1: 455,390 ms/op
# Warmup Iteration   2: 458,635 ms/op
# Warmup Iteration   3: 451,845 ms/op
# Warmup Iteration   4: 452,813 ms/op
# Warmup Iteration   5: 451,945 ms/op
# Warmup Iteration   6: 454,347 ms/op
# Warmup Iteration   7: 452,228 ms/op
# Warmup Iteration   8: 452,485 ms/op
# Warmup Iteration   9: 451,160 ms/op
# Warmup Iteration  10: 453,024 ms/op
Iteration   1: 452,428 ms/op
Iteration   2: 453,097 ms/op
Iteration   3: 451,437 ms/op
Iteration   4: 451,664 ms/op
Iteration   5: 452,507 ms/op
Iteration   6: 482,339 ms/op
Iteration   7: 449,287 ms/op
Iteration   8: 450,071 ms/op
Iteration   9: 450,191 ms/op
Iteration  10: 449,368 ms/op


Result "benchmarkFind":
  454,239 ±(99.9%) 15,065 ms/op [Average]
  (min, avg, max) = (449,287, 454,239, 482,339), stdev = 9,965
  CI (99.9%): [439,173, 469,304] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternSize = 16)

# Run progress: 2,71% complete, ETA 14:06:28
# Fork: 1 of 1
# Warmup Iteration   1: 454,619 ms/op
# Warmup Iteration   2: 450,481 ms/op
# Warmup Iteration   3: 449,909 ms/op
# Warmup Iteration   4: 449,249 ms/op
# Warmup Iteration   5: 449,476 ms/op
# Warmup Iteration   6: 449,453 ms/op
# Warmup Iteration   7: 449,554 ms/op
# Warmup Iteration   8: 453,593 ms/op
# Warmup Iteration   9: 447,411 ms/op
# Warmup Iteration  10: 447,342 ms/op
Iteration   1: 452,800 ms/op
Iteration   2: 452,058 ms/op
Iteration   3: 454,921 ms/op
Iteration   4: 447,973 ms/op
Iteration   5: 447,492 ms/op
Iteration   6: 447,929 ms/op
Iteration   7: 448,688 ms/op
Iteration   8: 451,492 ms/op
Iteration   9: 450,834 ms/op
Iteration  10: 452,089 ms/op


Result "benchmarkFind":
  450,628 ±(99.9%) 3,773 ms/op [Average]
  (min, avg, max) = (447,492, 450,628, 454,921), stdev = 2,496
  CI (99.9%): [446,855, 454,401] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternSize = 32)

# Run progress: 2,76% complete, ETA 14:11:26
# Fork: 1 of 1
# Warmup Iteration   1: 456,959 ms/op
# Warmup Iteration   2: 454,429 ms/op
# Warmup Iteration   3: 450,635 ms/op
# Warmup Iteration   4: 452,181 ms/op
# Warmup Iteration   5: 451,323 ms/op
# Warmup Iteration   6: 451,537 ms/op
# Warmup Iteration   7: 453,675 ms/op
# Warmup Iteration   8: 451,584 ms/op
# Warmup Iteration   9: 451,307 ms/op
# Warmup Iteration  10: 450,831 ms/op
Iteration   1: 487,459 ms/op
Iteration   2: 453,273 ms/op
Iteration   3: 450,672 ms/op
Iteration   4: 454,188 ms/op
Iteration   5: 450,454 ms/op
Iteration   6: 452,591 ms/op
Iteration   7: 452,853 ms/op
Iteration   8: 454,121 ms/op
Iteration   9: 454,086 ms/op
Iteration  10: 451,750 ms/op


Result "benchmarkFind":
  456,145 ±(99.9%) 16,761 ms/op [Average]
  (min, avg, max) = (450,454, 456,145, 487,459), stdev = 11,086
  CI (99.9%): [439,384, 472,906] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternSize = 64)

# Run progress: 2,80% complete, ETA 14:16:18
# Fork: 1 of 1
# Warmup Iteration   1: 453,260 ms/op
# Warmup Iteration   2: 448,489 ms/op
# Warmup Iteration   3: 448,440 ms/op
# Warmup Iteration   4: 448,558 ms/op
# Warmup Iteration   5: 448,127 ms/op
# Warmup Iteration   6: 452,579 ms/op
# Warmup Iteration   7: 448,912 ms/op
# Warmup Iteration   8: 447,627 ms/op
# Warmup Iteration   9: 448,713 ms/op
# Warmup Iteration  10: 448,192 ms/op
Iteration   1: 447,979 ms/op
Iteration   2: 448,909 ms/op
Iteration   3: 449,369 ms/op
Iteration   4: 447,604 ms/op
Iteration   5: 448,546 ms/op
Iteration   6: 447,769 ms/op
Iteration   7: 448,477 ms/op
Iteration   8: 448,257 ms/op
Iteration   9: 448,197 ms/op
Iteration  10: 447,347 ms/op


Result "benchmarkFind":
  448,245 ±(99.9%) 0,924 ms/op [Average]
  (min, avg, max) = (447,347, 448,245, 449,369), stdev = 0,611
  CI (99.9%): [447,321, 449,170] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternSize = 128)

# Run progress: 2,85% complete, ETA 14:20:48
# Fork: 1 of 1
# Warmup Iteration   1: 453,178 ms/op
# Warmup Iteration   2: 450,392 ms/op
# Warmup Iteration   3: 448,466 ms/op
# Warmup Iteration   4: 447,724 ms/op
# Warmup Iteration   5: 447,887 ms/op
# Warmup Iteration   6: 447,494 ms/op
# Warmup Iteration   7: 501,884 ms/op
# Warmup Iteration   8: 452,807 ms/op
# Warmup Iteration   9: 451,908 ms/op
# Warmup Iteration  10: 451,498 ms/op
Iteration   1: 455,337 ms/op
Iteration   2: 455,677 ms/op
Iteration   3: 452,115 ms/op
Iteration   4: 452,193 ms/op
Iteration   5: 451,884 ms/op
Iteration   6: 451,888 ms/op
Iteration   7: 453,612 ms/op
Iteration   8: 453,228 ms/op
Iteration   9: 452,313 ms/op
Iteration  10: 452,030 ms/op


Result "benchmarkFind":
  453,028 ±(99.9%) 2,160 ms/op [Average]
  (min, avg, max) = (451,884, 453,028, 455,677), stdev = 1,429
  CI (99.9%): [450,867, 455,188] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternSize = 256)

# Run progress: 2,90% complete, ETA 14:25:01
# Fork: 1 of 1
# Warmup Iteration   1: 458,567 ms/op
# Warmup Iteration   2: 451,174 ms/op
# Warmup Iteration   3: 452,434 ms/op
# Warmup Iteration   4: 451,880 ms/op
# Warmup Iteration   5: 450,091 ms/op
# Warmup Iteration   6: 450,590 ms/op
# Warmup Iteration   7: 452,481 ms/op
# Warmup Iteration   8: 451,975 ms/op
# Warmup Iteration   9: 451,958 ms/op
# Warmup Iteration  10: 450,665 ms/op
Iteration   1: 451,614 ms/op
Iteration   2: 451,378 ms/op
Iteration   3: 451,410 ms/op
Iteration   4: 452,264 ms/op
Iteration   5: 450,510 ms/op
Iteration   6: 450,266 ms/op
Iteration   7: 474,975 ms/op
Iteration   8: 450,915 ms/op
Iteration   9: 451,500 ms/op
Iteration  10: 450,930 ms/op


Result "benchmarkFind":
  453,576 ±(99.9%) 11,400 ms/op [Average]
  (min, avg, max) = (450,266, 453,576, 474,975), stdev = 7,541
  CI (99.9%): [442,176, 464,976] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 2, patternSize = 2)

# Run progress: 2,94% complete, ETA 14:29:22
# Fork: 1 of 1
# Warmup Iteration   1: 0,078 ms/op
# Warmup Iteration   2: 0,072 ms/op
# Warmup Iteration   3: 0,072 ms/op
# Warmup Iteration   4: 0,072 ms/op
# Warmup Iteration   5: 0,073 ms/op
# Warmup Iteration   6: 0,073 ms/op
# Warmup Iteration   7: 0,073 ms/op
# Warmup Iteration   8: 0,073 ms/op
# Warmup Iteration   9: 0,079 ms/op
# Warmup Iteration  10: 0,072 ms/op
Iteration   1: 0,072 ms/op
Iteration   2: 0,073 ms/op
Iteration   3: 0,072 ms/op
Iteration   4: 0,072 ms/op
Iteration   5: 0,072 ms/op
Iteration   6: 0,073 ms/op
Iteration   7: 0,072 ms/op
Iteration   8: 0,072 ms/op
Iteration   9: 0,072 ms/op
Iteration  10: 0,074 ms/op


Result "benchmarkFind":
  0,072 ±(99.9%) 0,001 ms/op [Average]
  (min, avg, max) = (0,072, 0,072, 0,074), stdev = 0,001
  CI (99.9%): [0,071, 0,073] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 2, patternSize = 4)

# Run progress: 2,99% complete, ETA 14:26:39
# Fork: 1 of 1
# Warmup Iteration   1: 0,257 ms/op
# Warmup Iteration   2: 0,244 ms/op
# Warmup Iteration   3: 0,244 ms/op
# Warmup Iteration   4: 0,241 ms/op
# Warmup Iteration   5: 0,242 ms/op
# Warmup Iteration   6: 0,243 ms/op
# Warmup Iteration   7: 0,243 ms/op
# Warmup Iteration   8: 0,241 ms/op
# Warmup Iteration   9: 0,244 ms/op
# Warmup Iteration  10: 0,241 ms/op
Iteration   1: 0,242 ms/op
Iteration   2: 0,242 ms/op
Iteration   3: 0,243 ms/op
Iteration   4: 0,241 ms/op
Iteration   5: 0,242 ms/op
Iteration   6: 0,247 ms/op
Iteration   7: 0,247 ms/op
Iteration   8: 0,248 ms/op
Iteration   9: 0,246 ms/op
Iteration  10: 0,246 ms/op


Result "benchmarkFind":
  0,244 ±(99.9%) 0,004 ms/op [Average]
  (min, avg, max) = (0,241, 0,244, 0,248), stdev = 0,002
  CI (99.9%): [0,241, 0,248] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 2, patternSize = 8)

# Run progress: 3,03% complete, ETA 14:23:59
# Fork: 1 of 1
# Warmup Iteration   1: 1,745 ms/op
# Warmup Iteration   2: 1,657 ms/op
# Warmup Iteration   3: 1,667 ms/op
# Warmup Iteration   4: 1,654 ms/op
# Warmup Iteration   5: 1,655 ms/op
# Warmup Iteration   6: 1,666 ms/op
# Warmup Iteration   7: 1,667 ms/op
# Warmup Iteration   8: 1,646 ms/op
# Warmup Iteration   9: 1,649 ms/op
# Warmup Iteration  10: 1,642 ms/op
Iteration   1: 1,660 ms/op
Iteration   2: 1,654 ms/op
Iteration   3: 1,641 ms/op
Iteration   4: 1,658 ms/op
Iteration   5: 1,652 ms/op
Iteration   6: 1,642 ms/op
Iteration   7: 1,650 ms/op
Iteration   8: 1,654 ms/op
Iteration   9: 1,649 ms/op
Iteration  10: 1,642 ms/op


Result "benchmarkFind":
  1,650 ±(99.9%) 0,010 ms/op [Average]
  (min, avg, max) = (1,641, 1,650, 1,660), stdev = 0,007
  CI (99.9%): [1,640, 1,660] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 2, patternSize = 16)

# Run progress: 3,08% complete, ETA 14:21:24
# Fork: 1 of 1
# Warmup Iteration   1: 16,712 ms/op
# Warmup Iteration   2: 15,752 ms/op
# Warmup Iteration   3: 15,807 ms/op
# Warmup Iteration   4: 15,691 ms/op
# Warmup Iteration   5: 15,711 ms/op
# Warmup Iteration   6: 15,662 ms/op
# Warmup Iteration   7: 16,445 ms/op
# Warmup Iteration   8: 15,946 ms/op
# Warmup Iteration   9: 15,635 ms/op
# Warmup Iteration  10: 15,595 ms/op
Iteration   1: 15,622 ms/op
Iteration   2: 15,626 ms/op
Iteration   3: 15,508 ms/op
Iteration   4: 15,566 ms/op
Iteration   5: 15,622 ms/op
Iteration   6: 15,689 ms/op
Iteration   7: 15,700 ms/op
Iteration   8: 15,574 ms/op
Iteration   9: 15,629 ms/op
Iteration  10: 15,552 ms/op


Result "benchmarkFind":
  15,609 ±(99.9%) 0,090 ms/op [Average]
  (min, avg, max) = (15,508, 15,609, 15,700), stdev = 0,060
  CI (99.9%): [15,518, 15,699] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 2, patternSize = 32)

# Run progress: 3,13% complete, ETA 14:19:01
# Fork: 1 of 1
# Warmup Iteration   1: 15,613 ms/op
# Warmup Iteration   2: 15,541 ms/op
# Warmup Iteration   3: 15,624 ms/op
# Warmup Iteration   4: 15,452 ms/op
# Warmup Iteration   5: 15,581 ms/op
# Warmup Iteration   6: 15,593 ms/op
# Warmup Iteration   7: 15,728 ms/op
# Warmup Iteration   8: 15,495 ms/op
# Warmup Iteration   9: 15,462 ms/op
# Warmup Iteration  10: 15,537 ms/op
Iteration   1: 15,575 ms/op
Iteration   2: 15,597 ms/op
Iteration   3: 15,560 ms/op
Iteration   4: 15,625 ms/op
Iteration   5: 14,001 ms/op
Iteration   6: 13,747 ms/op
Iteration   7: 13,689 ms/op
Iteration   8: 13,753 ms/op
Iteration   9: 13,748 ms/op
Iteration  10: 13,630 ms/op


Result "benchmarkFind":
  14,493 ±(99.9%) 1,435 ms/op [Average]
  (min, avg, max) = (13,630, 14,493, 15,625), stdev = 0,949
  CI (99.9%): [13,058, 15,927] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 2, patternSize = 64)

# Run progress: 3,17% complete, ETA 14:16:41
# Fork: 1 of 1
# Warmup Iteration   1: 15,674 ms/op
# Warmup Iteration   2: 15,694 ms/op
# Warmup Iteration   3: 15,441 ms/op
# Warmup Iteration   4: 15,449 ms/op
# Warmup Iteration   5: 15,519 ms/op
# Warmup Iteration   6: 15,366 ms/op
# Warmup Iteration   7: 15,406 ms/op
# Warmup Iteration   8: 15,370 ms/op
# Warmup Iteration   9: 15,363 ms/op
# Warmup Iteration  10: 15,465 ms/op
Iteration   1: 15,332 ms/op
Iteration   2: 15,532 ms/op
Iteration   3: 15,496 ms/op
Iteration   4: 15,575 ms/op
Iteration   5: 15,444 ms/op
Iteration   6: 15,468 ms/op
Iteration   7: 15,461 ms/op
Iteration   8: 15,412 ms/op
Iteration   9: 15,407 ms/op
Iteration  10: 15,390 ms/op


Result "benchmarkFind":
  15,452 ±(99.9%) 0,108 ms/op [Average]
  (min, avg, max) = (15,332, 15,452, 15,575), stdev = 0,071
  CI (99.9%): [15,344, 15,559] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 2, patternSize = 128)

# Run progress: 3,22% complete, ETA 14:14:22
# Fork: 1 of 1
# Warmup Iteration   1: 15,199 ms/op
# Warmup Iteration   2: 15,050 ms/op
# Warmup Iteration   3: 15,055 ms/op
# Warmup Iteration   4: 15,080 ms/op
# Warmup Iteration   5: 16,197 ms/op
# Warmup Iteration   6: 15,721 ms/op
# Warmup Iteration   7: 15,054 ms/op
# Warmup Iteration   8: 15,062 ms/op
# Warmup Iteration   9: 15,066 ms/op
# Warmup Iteration  10: 15,024 ms/op
Iteration   1: 15,066 ms/op
Iteration   2: 15,045 ms/op
Iteration   3: 15,060 ms/op
Iteration   4: 15,066 ms/op
Iteration   5: 15,053 ms/op
Iteration   6: 15,050 ms/op
Iteration   7: 15,025 ms/op
Iteration   8: 15,005 ms/op
Iteration   9: 15,034 ms/op
Iteration  10: 15,065 ms/op


Result "benchmarkFind":
  15,047 ±(99.9%) 0,031 ms/op [Average]
  (min, avg, max) = (15,005, 15,047, 15,066), stdev = 0,020
  CI (99.9%): [15,016, 15,077] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 2, patternSize = 256)

# Run progress: 3,26% complete, ETA 14:12:11
# Fork: 1 of 1
# Warmup Iteration   1: 15,530 ms/op
# Warmup Iteration   2: 15,421 ms/op
# Warmup Iteration   3: 15,385 ms/op
# Warmup Iteration   4: 15,473 ms/op
# Warmup Iteration   5: 15,403 ms/op
# Warmup Iteration   6: 15,393 ms/op
# Warmup Iteration   7: 15,732 ms/op
# Warmup Iteration   8: 15,655 ms/op
# Warmup Iteration   9: 15,537 ms/op
# Warmup Iteration  10: 15,543 ms/op
Iteration   1: 15,511 ms/op
Iteration   2: 15,660 ms/op
Iteration   3: 15,433 ms/op
Iteration   4: 15,586 ms/op
Iteration   5: 15,679 ms/op
Iteration   6: 15,473 ms/op
Iteration   7: 15,657 ms/op
Iteration   8: 15,601 ms/op
Iteration   9: 15,580 ms/op
Iteration  10: 15,536 ms/op


Result "benchmarkFind":
  15,572 ±(99.9%) 0,125 ms/op [Average]
  (min, avg, max) = (15,433, 15,572, 15,679), stdev = 0,083
  CI (99.9%): [15,447, 15,697] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 8, patternSize = 2)

# Run progress: 3,31% complete, ETA 14:10:02
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

com.almondtools.stringbench.SampleNotQualifiedException
	at com.almondtools.stringbench.MultiPatternMatcherBenchmark.setup(MultiPatternMatcherBenchmark.java:36)
	at com.almondtools.stringbench.generated.JavaIndexOfMultiBenchmark_benchmarkFind_jmhTest._jmh_tryInit_f_javaindexofmultibenchmark0_0(JavaIndexOfMultiBenchmark_benchmarkFind_jmhTest.java:425)
	at com.almondtools.stringbench.generated.JavaIndexOfMultiBenchmark_benchmarkFind_jmhTest.benchmarkFind_AverageTime(JavaIndexOfMultiBenchmark_benchmarkFind_jmhTest.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:430)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:412)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)




# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 8, patternSize = 4)

# Run progress: 3,35% complete, ETA 13:58:42
# Fork: 1 of 1
# Warmup Iteration   1: 0,872 ms/op
# Warmup Iteration   2: 0,836 ms/op
# Warmup Iteration   3: 0,830 ms/op
# Warmup Iteration   4: 0,834 ms/op
# Warmup Iteration   5: 0,830 ms/op
# Warmup Iteration   6: 0,826 ms/op
# Warmup Iteration   7: 0,823 ms/op
# Warmup Iteration   8: 0,826 ms/op
# Warmup Iteration   9: 0,821 ms/op
# Warmup Iteration  10: 0,826 ms/op
Iteration   1: 0,824 ms/op
Iteration   2: 0,828 ms/op
Iteration   3: 0,824 ms/op
Iteration   4: 0,827 ms/op
Iteration   5: 0,823 ms/op
Iteration   6: 0,823 ms/op
Iteration   7: 0,827 ms/op
Iteration   8: 0,827 ms/op
Iteration   9: 0,822 ms/op
Iteration  10: 0,824 ms/op


Result "benchmarkFind":
  0,825 ±(99.9%) 0,003 ms/op [Average]
  (min, avg, max) = (0,822, 0,825, 0,828), stdev = 0,002
  CI (99.9%): [0,822, 0,828] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 8, patternSize = 8)

# Run progress: 3,40% complete, ETA 13:56:37
# Fork: 1 of 1
# Warmup Iteration   1: 11,732 ms/op
# Warmup Iteration   2: 12,086 ms/op
# Warmup Iteration   3: 11,679 ms/op
# Warmup Iteration   4: 11,182 ms/op
# Warmup Iteration   5: 11,153 ms/op
# Warmup Iteration   6: 11,150 ms/op
# Warmup Iteration   7: 11,140 ms/op
# Warmup Iteration   8: 11,191 ms/op
# Warmup Iteration   9: 11,170 ms/op
# Warmup Iteration  10: 11,138 ms/op
Iteration   1: 11,182 ms/op
Iteration   2: 11,162 ms/op
Iteration   3: 11,142 ms/op
Iteration   4: 11,163 ms/op
Iteration   5: 11,196 ms/op
Iteration   6: 11,139 ms/op
Iteration   7: 11,163 ms/op
Iteration   8: 11,199 ms/op
Iteration   9: 11,134 ms/op
Iteration  10: 11,131 ms/op


Result "benchmarkFind":
  11,161 ±(99.9%) 0,038 ms/op [Average]
  (min, avg, max) = (11,131, 11,161, 11,199), stdev = 0,025
  CI (99.9%): [11,123, 11,199] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 8, patternSize = 16)

# Run progress: 3,45% complete, ETA 13:54:39
# Fork: 1 of 1
# Warmup Iteration   1: 67,663 ms/op
# Warmup Iteration   2: 64,720 ms/op
# Warmup Iteration   3: 64,385 ms/op
# Warmup Iteration   4: 64,360 ms/op
# Warmup Iteration   5: 64,510 ms/op
# Warmup Iteration   6: 64,263 ms/op
# Warmup Iteration   7: 64,107 ms/op
# Warmup Iteration   8: 64,497 ms/op
# Warmup Iteration   9: 64,307 ms/op
# Warmup Iteration  10: 64,409 ms/op
Iteration   1: 64,054 ms/op
Iteration   2: 63,832 ms/op
Iteration   3: 64,105 ms/op
Iteration   4: 64,316 ms/op
Iteration   5: 63,801 ms/op
Iteration   6: 64,454 ms/op
Iteration   7: 63,788 ms/op
Iteration   8: 63,854 ms/op
Iteration   9: 64,023 ms/op
Iteration  10: 63,725 ms/op


Result "benchmarkFind":
  63,995 ±(99.9%) 0,367 ms/op [Average]
  (min, avg, max) = (63,725, 63,995, 64,454), stdev = 0,243
  CI (99.9%): [63,628, 64,362] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 8, patternSize = 32)

# Run progress: 3,49% complete, ETA 13:52:58
# Fork: 1 of 1
# Warmup Iteration   1: 60,730 ms/op
# Warmup Iteration   2: 60,137 ms/op
# Warmup Iteration   3: 60,149 ms/op
# Warmup Iteration   4: 60,173 ms/op
# Warmup Iteration   5: 60,145 ms/op
# Warmup Iteration   6: 60,190 ms/op
# Warmup Iteration   7: 60,323 ms/op
# Warmup Iteration   8: 60,255 ms/op
# Warmup Iteration   9: 60,173 ms/op
# Warmup Iteration  10: 60,170 ms/op
Iteration   1: 60,070 ms/op
Iteration   2: 60,200 ms/op
Iteration   3: 60,086 ms/op
Iteration   4: 60,352 ms/op
Iteration   5: 60,091 ms/op
Iteration   6: 60,211 ms/op
Iteration   7: 60,056 ms/op
Iteration   8: 60,492 ms/op
Iteration   9: 60,161 ms/op
Iteration  10: 67,963 ms/op


Result "benchmarkFind":
  60,968 ±(99.9%) 3,722 ms/op [Average]
  (min, avg, max) = (60,056, 60,968, 67,963), stdev = 2,462
  CI (99.9%): [57,247, 64,690] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 8, patternSize = 64)

# Run progress: 3,54% complete, ETA 13:51:16
# Fork: 1 of 1
# Warmup Iteration   1: 62,618 ms/op
# Warmup Iteration   2: 61,751 ms/op
# Warmup Iteration   3: 62,872 ms/op
# Warmup Iteration   4: 62,196 ms/op
# Warmup Iteration   5: 62,037 ms/op
# Warmup Iteration   6: 62,261 ms/op
# Warmup Iteration   7: 62,325 ms/op
# Warmup Iteration   8: 61,696 ms/op
# Warmup Iteration   9: 61,966 ms/op
# Warmup Iteration  10: 62,201 ms/op
Iteration   1: 61,827 ms/op
Iteration   2: 61,596 ms/op
Iteration   3: 61,979 ms/op
Iteration   4: 62,096 ms/op
Iteration   5: 61,821 ms/op
Iteration   6: 61,741 ms/op
Iteration   7: 61,985 ms/op
Iteration   8: 62,427 ms/op
Iteration   9: 62,084 ms/op
Iteration  10: 61,555 ms/op


Result "benchmarkFind":
  61,911 ±(99.9%) 0,394 ms/op [Average]
  (min, avg, max) = (61,555, 61,911, 62,427), stdev = 0,260
  CI (99.9%): [61,518, 62,305] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 8, patternSize = 128)

# Run progress: 3,58% complete, ETA 13:49:51
# Fork: 1 of 1
# Warmup Iteration   1: 60,815 ms/op
# Warmup Iteration   2: 60,578 ms/op
# Warmup Iteration   3: 61,050 ms/op
# Warmup Iteration   4: 60,888 ms/op
# Warmup Iteration   5: 60,730 ms/op
# Warmup Iteration   6: 60,652 ms/op
# Warmup Iteration   7: 60,861 ms/op
# Warmup Iteration   8: 60,393 ms/op
# Warmup Iteration   9: 60,413 ms/op
# Warmup Iteration  10: 60,470 ms/op
Iteration   1: 60,777 ms/op
Iteration   2: 61,297 ms/op
Iteration   3: 60,588 ms/op
Iteration   4: 60,490 ms/op
Iteration   5: 60,726 ms/op
Iteration   6: 60,963 ms/op
Iteration   7: 60,639 ms/op
Iteration   8: 60,440 ms/op
Iteration   9: 60,997 ms/op
Iteration  10: 60,643 ms/op


Result "benchmarkFind":
  60,756 ±(99.9%) 0,397 ms/op [Average]
  (min, avg, max) = (60,440, 60,756, 61,297), stdev = 0,262
  CI (99.9%): [60,359, 61,153] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 8, patternSize = 256)

# Run progress: 3,63% complete, ETA 13:48:19
# Fork: 1 of 1
# Warmup Iteration   1: 62,583 ms/op
# Warmup Iteration   2: 61,809 ms/op
# Warmup Iteration   3: 62,560 ms/op
# Warmup Iteration   4: 62,392 ms/op
# Warmup Iteration   5: 62,333 ms/op
# Warmup Iteration   6: 61,888 ms/op
# Warmup Iteration   7: 62,172 ms/op
# Warmup Iteration   8: 61,837 ms/op
# Warmup Iteration   9: 61,882 ms/op
# Warmup Iteration  10: 61,900 ms/op
Iteration   1: 61,831 ms/op
Iteration   2: 62,247 ms/op
Iteration   3: 62,233 ms/op
Iteration   4: 61,824 ms/op
Iteration   5: 61,956 ms/op
Iteration   6: 64,406 ms/op
Iteration   7: 62,935 ms/op
Iteration   8: 62,013 ms/op
Iteration   9: 61,573 ms/op
Iteration  10: 61,477 ms/op


Result "benchmarkFind":
  62,249 ±(99.9%) 1,302 ms/op [Average]
  (min, avg, max) = (61,477, 62,249, 64,406), stdev = 0,861
  CI (99.9%): [60,948, 63,551] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 32, patternSize = 2)

# Run progress: 3,68% complete, ETA 13:46:56
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

com.almondtools.stringbench.SampleNotQualifiedException
	at com.almondtools.stringbench.MultiPatternMatcherBenchmark.setup(MultiPatternMatcherBenchmark.java:36)
	at com.almondtools.stringbench.generated.JavaIndexOfMultiBenchmark_benchmarkFind_jmhTest._jmh_tryInit_f_javaindexofmultibenchmark0_0(JavaIndexOfMultiBenchmark_benchmarkFind_jmhTest.java:425)
	at com.almondtools.stringbench.generated.JavaIndexOfMultiBenchmark_benchmarkFind_jmhTest.benchmarkFind_AverageTime(JavaIndexOfMultiBenchmark_benchmarkFind_jmhTest.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:430)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:412)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)




# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 32, patternSize = 4)

# Run progress: 3,72% complete, ETA 13:36:58
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

com.almondtools.stringbench.SampleNotQualifiedException
	at com.almondtools.stringbench.MultiPatternMatcherBenchmark.setup(MultiPatternMatcherBenchmark.java:36)
	at com.almondtools.stringbench.generated.JavaIndexOfMultiBenchmark_benchmarkFind_jmhTest._jmh_tryInit_f_javaindexofmultibenchmark0_0(JavaIndexOfMultiBenchmark_benchmarkFind_jmhTest.java:425)
	at com.almondtools.stringbench.generated.JavaIndexOfMultiBenchmark_benchmarkFind_jmhTest.benchmarkFind_AverageTime(JavaIndexOfMultiBenchmark_benchmarkFind_jmhTest.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:430)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:412)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)




# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 32, patternSize = 8)

# Run progress: 3,77% complete, ETA 13:27:14
# Fork: 1 of 1
# Warmup Iteration   1: 63,190 ms/op
# Warmup Iteration   2: 62,092 ms/op
# Warmup Iteration   3: 61,758 ms/op
# Warmup Iteration   4: 64,203 ms/op
# Warmup Iteration   5: 62,700 ms/op
# Warmup Iteration   6: 62,688 ms/op
# Warmup Iteration   7: 62,340 ms/op
# Warmup Iteration   8: 62,614 ms/op
# Warmup Iteration   9: 62,293 ms/op
# Warmup Iteration  10: 62,510 ms/op
Iteration   1: 62,380 ms/op
Iteration   2: 62,272 ms/op
Iteration   3: 62,476 ms/op
Iteration   4: 62,622 ms/op
Iteration   5: 62,286 ms/op
Iteration   6: 62,613 ms/op
Iteration   7: 62,585 ms/op
Iteration   8: 62,432 ms/op
Iteration   9: 62,418 ms/op
Iteration  10: 62,627 ms/op


Result "benchmarkFind":
  62,471 ±(99.9%) 0,206 ms/op [Average]
  (min, avg, max) = (62,272, 62,471, 62,627), stdev = 0,136
  CI (99.9%): [62,265, 62,677] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 32, patternSize = 16)

# Run progress: 3,81% complete, ETA 13:26:00
# Fork: 1 of 1
# Warmup Iteration   1: 344,173 ms/op
# Warmup Iteration   2: 319,787 ms/op
# Warmup Iteration   3: 318,106 ms/op
# Warmup Iteration   4: 315,723 ms/op
# Warmup Iteration   5: 317,707 ms/op
# Warmup Iteration   6: 317,452 ms/op
# Warmup Iteration   7: 317,972 ms/op
# Warmup Iteration   8: 318,834 ms/op
# Warmup Iteration   9: 318,237 ms/op
# Warmup Iteration  10: 317,224 ms/op
Iteration   1: 319,023 ms/op
Iteration   2: 317,115 ms/op
Iteration   3: 318,522 ms/op
Iteration   4: 319,222 ms/op
Iteration   5: 316,126 ms/op
Iteration   6: 318,774 ms/op
Iteration   7: 317,063 ms/op
Iteration   8: 318,410 ms/op
Iteration   9: 318,621 ms/op
Iteration  10: 317,499 ms/op


Result "benchmarkFind":
  318,038 ±(99.9%) 1,543 ms/op [Average]
  (min, avg, max) = (316,126, 318,038, 319,222), stdev = 1,021
  CI (99.9%): [316,495, 319,581] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 32, patternSize = 32)

# Run progress: 3,86% complete, ETA 13:26:41
# Fork: 1 of 1
# Warmup Iteration   1: 242,344 ms/op
# Warmup Iteration   2: 240,765 ms/op
# Warmup Iteration   3: 240,610 ms/op
# Warmup Iteration   4: 251,874 ms/op
# Warmup Iteration   5: 255,371 ms/op
# Warmup Iteration   6: 241,554 ms/op
# Warmup Iteration   7: 242,780 ms/op
# Warmup Iteration   8: 243,590 ms/op
# Warmup Iteration   9: 244,237 ms/op
# Warmup Iteration  10: 243,102 ms/op
Iteration   1: 242,338 ms/op
Iteration   2: 242,218 ms/op
Iteration   3: 243,608 ms/op
Iteration   4: 245,365 ms/op
Iteration   5: 234,415 ms/op
Iteration   6: 219,568 ms/op
Iteration   7: 219,885 ms/op
Iteration   8: 220,656 ms/op
Iteration   9: 220,774 ms/op
Iteration  10: 219,350 ms/op


Result "benchmarkFind":
  230,818 ±(99.9%) 17,693 ms/op [Average]
  (min, avg, max) = (219,350, 230,818, 245,365), stdev = 11,703
  CI (99.9%): [213,125, 248,511] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 32, patternSize = 64)

# Run progress: 3,91% complete, ETA 13:26:39
# Fork: 1 of 1
# Warmup Iteration   1: 249,759 ms/op
# Warmup Iteration   2: 248,790 ms/op
# Warmup Iteration   3: 249,623 ms/op
# Warmup Iteration   4: 249,506 ms/op
# Warmup Iteration   5: 247,473 ms/op
# Warmup Iteration   6: 251,545 ms/op
# Warmup Iteration   7: 249,914 ms/op
# Warmup Iteration   8: 249,027 ms/op
# Warmup Iteration   9: 250,722 ms/op
# Warmup Iteration  10: 249,003 ms/op
Iteration   1: 250,611 ms/op
Iteration   2: 247,775 ms/op
Iteration   3: 247,752 ms/op
Iteration   4: 249,603 ms/op
Iteration   5: 249,918 ms/op
Iteration   6: 248,173 ms/op
Iteration   7: 247,095 ms/op
Iteration   8: 247,717 ms/op
Iteration   9: 247,589 ms/op
Iteration  10: 247,798 ms/op


Result "benchmarkFind":
  248,403 ±(99.9%) 1,795 ms/op [Average]
  (min, avg, max) = (247,095, 248,403, 250,611), stdev = 1,187
  CI (99.9%): [246,608, 250,198] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 32, patternSize = 128)

# Run progress: 3,95% complete, ETA 13:26:40
# Fork: 1 of 1
# Warmup Iteration   1: 252,105 ms/op
# Warmup Iteration   2: 250,749 ms/op
# Warmup Iteration   3: 247,826 ms/op
# Warmup Iteration   4: 248,668 ms/op
# Warmup Iteration   5: 250,686 ms/op
# Warmup Iteration   6: 249,298 ms/op
# Warmup Iteration   7: 249,594 ms/op
# Warmup Iteration   8: 250,472 ms/op
# Warmup Iteration   9: 250,670 ms/op
# Warmup Iteration  10: 250,840 ms/op
Iteration   1: 248,723 ms/op
Iteration   2: 252,060 ms/op
Iteration   3: 250,008 ms/op
Iteration   4: 251,213 ms/op
Iteration   5: 248,759 ms/op
Iteration   6: 263,833 ms/op
Iteration   7: 248,107 ms/op
Iteration   8: 250,359 ms/op
Iteration   9: 248,748 ms/op
Iteration  10: 250,317 ms/op


Result "benchmarkFind":
  251,213 ±(99.9%) 6,963 ms/op [Average]
  (min, avg, max) = (248,107, 251,213, 263,833), stdev = 4,606
  CI (99.9%): [244,249, 258,176] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 32, patternSize = 256)

# Run progress: 4,00% complete, ETA 13:26:13
# Fork: 1 of 1
# Warmup Iteration   1: 248,910 ms/op
# Warmup Iteration   2: 248,253 ms/op
# Warmup Iteration   3: 249,101 ms/op
# Warmup Iteration   4: 250,741 ms/op
# Warmup Iteration   5: 249,438 ms/op
# Warmup Iteration   6: 250,841 ms/op
# Warmup Iteration   7: 250,260 ms/op
# Warmup Iteration   8: 251,078 ms/op
# Warmup Iteration   9: 250,971 ms/op
# Warmup Iteration  10: 248,959 ms/op
Iteration   1: 248,129 ms/op
Iteration   2: 250,863 ms/op
Iteration   3: 251,097 ms/op
Iteration   4: 251,728 ms/op
Iteration   5: 260,205 ms/op
Iteration   6: 245,936 ms/op
Iteration   7: 246,056 ms/op
Iteration   8: 245,837 ms/op
Iteration   9: 246,199 ms/op
Iteration  10: 246,148 ms/op


Result "benchmarkFind":
  249,220 ±(99.9%) 6,858 ms/op [Average]
  (min, avg, max) = (245,837, 249,220, 260,205), stdev = 4,536
  CI (99.9%): [242,362, 256,077] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 128, patternSize = 2)

# Run progress: 4,04% complete, ETA 13:25:57
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

com.almondtools.stringbench.SampleNotQualifiedException
	at com.almondtools.stringbench.MultiPatternMatcherBenchmark.setup(MultiPatternMatcherBenchmark.java:36)
	at com.almondtools.stringbench.generated.JavaIndexOfMultiBenchmark_benchmarkFind_jmhTest._jmh_tryInit_f_javaindexofmultibenchmark0_0(JavaIndexOfMultiBenchmark_benchmarkFind_jmhTest.java:425)
	at com.almondtools.stringbench.generated.JavaIndexOfMultiBenchmark_benchmarkFind_jmhTest.benchmarkFind_AverageTime(JavaIndexOfMultiBenchmark_benchmarkFind_jmhTest.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:430)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:412)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)




# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 128, patternSize = 4)

# Run progress: 4,09% complete, ETA 13:17:03
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

com.almondtools.stringbench.SampleNotQualifiedException
	at com.almondtools.stringbench.MultiPatternMatcherBenchmark.setup(MultiPatternMatcherBenchmark.java:36)
	at com.almondtools.stringbench.generated.JavaIndexOfMultiBenchmark_benchmarkFind_jmhTest._jmh_tryInit_f_javaindexofmultibenchmark0_0(JavaIndexOfMultiBenchmark_benchmarkFind_jmhTest.java:425)
	at com.almondtools.stringbench.generated.JavaIndexOfMultiBenchmark_benchmarkFind_jmhTest.benchmarkFind_AverageTime(JavaIndexOfMultiBenchmark_benchmarkFind_jmhTest.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:430)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:412)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)




# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 128, patternSize = 8)

# Run progress: 4,14% complete, ETA 13:08:21
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

com.almondtools.stringbench.ResultNotAcceptedException
	at com.almondtools.stringbench.MultiPatternSample.validate(MultiPatternSample.java:157)
	at com.almondtools.stringbench.MultiPatternMatcherBenchmark.benchmarkFind(MultiPatternMatcherBenchmark.java:50)
	at com.almondtools.stringbench.generated.JavaIndexOfMultiBenchmark_benchmarkFind_jmhTest.benchmarkFind_avgt_jmhStub(JavaIndexOfMultiBenchmark_benchmarkFind_jmhTest.java:208)
	at com.almondtools.stringbench.generated.JavaIndexOfMultiBenchmark_benchmarkFind_jmhTest.benchmarkFind_AverageTime(JavaIndexOfMultiBenchmark_benchmarkFind_jmhTest.java:152)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:430)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:412)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)




# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 128, patternSize = 16)

# Run progress: 4,18% complete, ETA 12:59:53
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

com.almondtools.stringbench.ResultNotAcceptedException
	at com.almondtools.stringbench.MultiPatternSample.validate(MultiPatternSample.java:157)
	at com.almondtools.stringbench.MultiPatternMatcherBenchmark.benchmarkFind(MultiPatternMatcherBenchmark.java:50)
	at com.almondtools.stringbench.generated.JavaIndexOfMultiBenchmark_benchmarkFind_jmhTest.benchmarkFind_avgt_jmhStub(JavaIndexOfMultiBenchmark_benchmarkFind_jmhTest.java:208)
	at com.almondtools.stringbench.generated.JavaIndexOfMultiBenchmark_benchmarkFind_jmhTest.benchmarkFind_AverageTime(JavaIndexOfMultiBenchmark_benchmarkFind_jmhTest.java:152)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:430)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:412)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)




# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 128, patternSize = 32)

# Run progress: 4,23% complete, ETA 12:51:39
# Fork: 1 of 1
# Warmup Iteration   1: 1009,622 ms/op
# Warmup Iteration   2: 1001,361 ms/op
# Warmup Iteration   3: 940,604 ms/op
# Warmup Iteration   4: 884,736 ms/op
# Warmup Iteration   5: 880,996 ms/op
# Warmup Iteration   6: 885,184 ms/op
# Warmup Iteration   7: 883,574 ms/op
# Warmup Iteration   8: 885,518 ms/op
# Warmup Iteration   9: 886,245 ms/op
# Warmup Iteration  10: 883,684 ms/op
Iteration   1: 884,892 ms/op
Iteration   2: 885,472 ms/op
Iteration   3: 884,413 ms/op
Iteration   4: 890,595 ms/op
Iteration   5: 905,887 ms/op
Iteration   6: 884,216 ms/op
Iteration   7: 884,441 ms/op
Iteration   8: 884,846 ms/op
Iteration   9: 883,830 ms/op
Iteration  10: 884,266 ms/op


Result "benchmarkFind":
  887,286 ±(99.9%) 10,313 ms/op [Average]
  (min, avg, max) = (883,830, 887,286, 905,887), stdev = 6,821
  CI (99.9%): [876,973, 897,599] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 128, patternSize = 64)

# Run progress: 4,27% complete, ETA 12:56:15
# Fork: 1 of 1
# Warmup Iteration   1: 1003,453 ms/op
# Warmup Iteration   2: 995,392 ms/op
# Warmup Iteration   3: 996,819 ms/op
# Warmup Iteration   4: 1000,187 ms/op
# Warmup Iteration   5: 995,933 ms/op
# Warmup Iteration   6: 996,966 ms/op
# Warmup Iteration   7: 877,061 ms/op
# Warmup Iteration   8: 877,039 ms/op
# Warmup Iteration   9: 877,942 ms/op
# Warmup Iteration  10: 878,809 ms/op
Iteration   1: 882,318 ms/op
Iteration   2: 883,345 ms/op
Iteration   3: 888,889 ms/op
Iteration   4: 892,846 ms/op
Iteration   5: 887,579 ms/op
Iteration   6: 882,944 ms/op
Iteration   7: 884,212 ms/op
Iteration   8: 883,738 ms/op
Iteration   9: 889,551 ms/op
Iteration  10: 884,945 ms/op


Result "benchmarkFind":
  886,037 ±(99.9%) 5,278 ms/op [Average]
  (min, avg, max) = (882,318, 886,037, 892,846), stdev = 3,491
  CI (99.9%): [880,759, 891,314] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 128, patternSize = 128)

# Run progress: 4,32% complete, ETA 13:00:37
# Fork: 1 of 1
# Warmup Iteration   1: 1004,820 ms/op
# Warmup Iteration   2: 996,510 ms/op
# Warmup Iteration   3: 1001,077 ms/op
# Warmup Iteration   4: 998,397 ms/op
# Warmup Iteration   5: 997,437 ms/op
# Warmup Iteration   6: 937,951 ms/op
# Warmup Iteration   7: 892,663 ms/op
# Warmup Iteration   8: 891,553 ms/op
# Warmup Iteration   9: 920,459 ms/op
# Warmup Iteration  10: 890,782 ms/op
Iteration   1: 891,321 ms/op
Iteration   2: 899,566 ms/op
Iteration   3: 890,939 ms/op
Iteration   4: 888,052 ms/op
Iteration   5: 894,619 ms/op
Iteration   6: 894,903 ms/op
Iteration   7: 891,453 ms/op
Iteration   8: 912,246 ms/op
Iteration   9: 892,386 ms/op
Iteration  10: 890,659 ms/op


Result "benchmarkFind":
  894,614 ±(99.9%) 10,492 ms/op [Average]
  (min, avg, max) = (888,052, 894,614, 912,246), stdev = 6,940
  CI (99.9%): [884,122, 905,107] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 128, patternSize = 256)

# Run progress: 4,37% complete, ETA 13:04:58
# Fork: 1 of 1
# Warmup Iteration   1: 987,069 ms/op
# Warmup Iteration   2: 981,472 ms/op
# Warmup Iteration   3: 982,912 ms/op
# Warmup Iteration   4: 982,301 ms/op
# Warmup Iteration   5: 930,681 ms/op
# Warmup Iteration   6: 884,020 ms/op
# Warmup Iteration   7: 867,392 ms/op
# Warmup Iteration   8: 869,947 ms/op
# Warmup Iteration   9: 867,127 ms/op
# Warmup Iteration  10: 869,008 ms/op
Iteration   1: 867,527 ms/op
Iteration   2: 870,391 ms/op
Iteration   3: 871,992 ms/op
Iteration   4: 875,186 ms/op
Iteration   5: 917,790 ms/op
Iteration   6: 867,456 ms/op
Iteration   7: 867,530 ms/op
Iteration   8: 868,606 ms/op
Iteration   9: 868,770 ms/op
Iteration  10: 867,786 ms/op


Result "benchmarkFind":
  874,303 ±(99.9%) 23,404 ms/op [Average]
  (min, avg, max) = (867,456, 874,303, 917,790), stdev = 15,480
  CI (99.9%): [850,899, 897,708] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 2, patternSize = 2)

# Run progress: 4,41% complete, ETA 13:09:36
# Fork: 1 of 1
# Warmup Iteration   1: 0,131 ms/op
# Warmup Iteration   2: 0,124 ms/op
# Warmup Iteration   3: 0,140 ms/op
# Warmup Iteration   4: 0,124 ms/op
# Warmup Iteration   5: 0,124 ms/op
# Warmup Iteration   6: 0,124 ms/op
# Warmup Iteration   7: 0,123 ms/op
# Warmup Iteration   8: 0,123 ms/op
# Warmup Iteration   9: 0,124 ms/op
# Warmup Iteration  10: 0,124 ms/op
Iteration   1: 0,124 ms/op
Iteration   2: 0,124 ms/op
Iteration   3: 0,124 ms/op
Iteration   4: 0,126 ms/op
Iteration   5: 0,122 ms/op
Iteration   6: 0,123 ms/op
Iteration   7: 0,123 ms/op
Iteration   8: 0,122 ms/op
Iteration   9: 0,124 ms/op
Iteration  10: 0,124 ms/op


Result "benchmarkFind":
  0,124 ±(99.9%) 0,002 ms/op [Average]
  (min, avg, max) = (0,122, 0,124, 0,126), stdev = 0,001
  CI (99.9%): [0,122, 0,125] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 2, patternSize = 4)

# Run progress: 4,46% complete, ETA 13:08:22
# Fork: 1 of 1
# Warmup Iteration   1: 1,477 ms/op
# Warmup Iteration   2: 1,410 ms/op
# Warmup Iteration   3: 1,416 ms/op
# Warmup Iteration   4: 1,406 ms/op
# Warmup Iteration   5: 1,399 ms/op
# Warmup Iteration   6: 1,411 ms/op
# Warmup Iteration   7: 1,412 ms/op
# Warmup Iteration   8: 1,405 ms/op
# Warmup Iteration   9: 1,406 ms/op
# Warmup Iteration  10: 1,405 ms/op
Iteration   1: 1,414 ms/op
Iteration   2: 1,405 ms/op
Iteration   3: 1,397 ms/op
Iteration   4: 1,398 ms/op
Iteration   5: 1,391 ms/op
Iteration   6: 1,400 ms/op
Iteration   7: 1,400 ms/op
Iteration   8: 1,406 ms/op
Iteration   9: 1,397 ms/op
Iteration  10: 1,395 ms/op


Result "benchmarkFind":
  1,400 ±(99.9%) 0,010 ms/op [Average]
  (min, avg, max) = (1,391, 1,400, 1,414), stdev = 0,007
  CI (99.9%): [1,391, 1,410] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 2, patternSize = 8)

# Run progress: 4,50% complete, ETA 13:07:13
# Fork: 1 of 1
# Warmup Iteration   1: 8,877 ms/op
# Warmup Iteration   2: 8,504 ms/op
# Warmup Iteration   3: 8,411 ms/op
# Warmup Iteration   4: 8,407 ms/op
# Warmup Iteration   5: 8,416 ms/op
# Warmup Iteration   6: 8,398 ms/op
# Warmup Iteration   7: 8,413 ms/op
# Warmup Iteration   8: 8,378 ms/op
# Warmup Iteration   9: 8,404 ms/op
# Warmup Iteration  10: 8,430 ms/op
Iteration   1: 8,365 ms/op
Iteration   2: 8,442 ms/op
Iteration   3: 8,397 ms/op
Iteration   4: 8,444 ms/op
Iteration   5: 8,417 ms/op
Iteration   6: 8,414 ms/op
Iteration   7: 8,400 ms/op
Iteration   8: 8,412 ms/op
Iteration   9: 8,415 ms/op
Iteration  10: 8,394 ms/op


Result "benchmarkFind":
  8,410 ±(99.9%) 0,035 ms/op [Average]
  (min, avg, max) = (8,365, 8,410, 8,444), stdev = 0,023
  CI (99.9%): [8,375, 8,445] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 2, patternSize = 16)

# Run progress: 4,55% complete, ETA 13:06:05
# Fork: 1 of 1
# Warmup Iteration   1: 9,508 ms/op
# Warmup Iteration   2: 9,384 ms/op
# Warmup Iteration   3: 9,144 ms/op
# Warmup Iteration   4: 9,195 ms/op
# Warmup Iteration   5: 9,159 ms/op
# Warmup Iteration   6: 9,153 ms/op
# Warmup Iteration   7: 9,138 ms/op
# Warmup Iteration   8: 8,492 ms/op
# Warmup Iteration   9: 8,153 ms/op
# Warmup Iteration  10: 8,163 ms/op
Iteration   1: 8,204 ms/op
Iteration   2: 8,161 ms/op
Iteration   3: 8,154 ms/op
Iteration   4: 8,141 ms/op
Iteration   5: 8,175 ms/op
Iteration   6: 8,197 ms/op
Iteration   7: 8,196 ms/op
Iteration   8: 8,172 ms/op
Iteration   9: 8,137 ms/op
Iteration  10: 8,196 ms/op


Result "benchmarkFind":
  8,173 ±(99.9%) 0,037 ms/op [Average]
  (min, avg, max) = (8,137, 8,173, 8,204), stdev = 0,024
  CI (99.9%): [8,136, 8,210] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 2, patternSize = 32)

# Run progress: 4,60% complete, ETA 13:04:58
# Fork: 1 of 1
# Warmup Iteration   1: 9,727 ms/op
# Warmup Iteration   2: 9,556 ms/op
# Warmup Iteration   3: 9,613 ms/op
# Warmup Iteration   4: 9,528 ms/op
# Warmup Iteration   5: 9,539 ms/op
# Warmup Iteration   6: 9,540 ms/op
# Warmup Iteration   7: 9,560 ms/op
# Warmup Iteration   8: 9,517 ms/op
# Warmup Iteration   9: 9,533 ms/op
# Warmup Iteration  10: 9,586 ms/op
Iteration   1: 9,525 ms/op
Iteration   2: 9,557 ms/op
Iteration   3: 9,572 ms/op
Iteration   4: 9,544 ms/op
Iteration   5: 9,539 ms/op
Iteration   6: 9,530 ms/op
Iteration   7: 9,967 ms/op
Iteration   8: 9,726 ms/op
Iteration   9: 9,747 ms/op
Iteration  10: 9,567 ms/op


Result "benchmarkFind":
  9,627 ±(99.9%) 0,217 ms/op [Average]
  (min, avg, max) = (9,525, 9,627, 9,967), stdev = 0,143
  CI (99.9%): [9,411, 9,844] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 2, patternSize = 64)

# Run progress: 4,64% complete, ETA 13:03:51
# Fork: 1 of 1
# Warmup Iteration   1: 8,821 ms/op
# Warmup Iteration   2: 8,687 ms/op
# Warmup Iteration   3: 8,624 ms/op
# Warmup Iteration   4: 8,718 ms/op
# Warmup Iteration   5: 8,666 ms/op
# Warmup Iteration   6: 8,706 ms/op
# Warmup Iteration   7: 8,660 ms/op
# Warmup Iteration   8: 8,611 ms/op
# Warmup Iteration   9: 8,657 ms/op
# Warmup Iteration  10: 8,610 ms/op
Iteration   1: 8,635 ms/op
Iteration   2: 8,640 ms/op
Iteration   3: 8,603 ms/op
Iteration   4: 8,620 ms/op
Iteration   5: 8,611 ms/op
Iteration   6: 8,612 ms/op
Iteration   7: 8,600 ms/op
Iteration   8: 8,593 ms/op
Iteration   9: 8,620 ms/op
Iteration  10: 9,503 ms/op


Result "benchmarkFind":
  8,704 ±(99.9%) 0,425 ms/op [Average]
  (min, avg, max) = (8,593, 8,704, 9,503), stdev = 0,281
  CI (99.9%): [8,279, 9,129] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 2, patternSize = 128)

# Run progress: 4,69% complete, ETA 13:02:46
# Fork: 1 of 1
# Warmup Iteration   1: 9,355 ms/op
# Warmup Iteration   2: 9,246 ms/op
# Warmup Iteration   3: 9,185 ms/op
# Warmup Iteration   4: 9,170 ms/op
# Warmup Iteration   5: 9,208 ms/op
# Warmup Iteration   6: 9,234 ms/op
# Warmup Iteration   7: 9,230 ms/op
# Warmup Iteration   8: 9,215 ms/op
# Warmup Iteration   9: 9,214 ms/op
# Warmup Iteration  10: 9,226 ms/op
Iteration   1: 9,172 ms/op
Iteration   2: 9,167 ms/op
Iteration   3: 9,165 ms/op
Iteration   4: 9,163 ms/op
Iteration   5: 9,159 ms/op
Iteration   6: 9,179 ms/op
Iteration   7: 9,183 ms/op
Iteration   8: 9,177 ms/op
Iteration   9: 8,969 ms/op
Iteration  10: 8,177 ms/op


Result "benchmarkFind":
  9,051 ±(99.9%) 0,474 ms/op [Average]
  (min, avg, max) = (8,177, 9,051, 9,183), stdev = 0,314
  CI (99.9%): [8,577, 9,526] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 2, patternSize = 256)

# Run progress: 4,73% complete, ETA 13:01:42
# Fork: 1 of 1
# Warmup Iteration   1: 9,570 ms/op
# Warmup Iteration   2: 9,024 ms/op
# Warmup Iteration   3: 8,934 ms/op
# Warmup Iteration   4: 8,844 ms/op
# Warmup Iteration   5: 8,925 ms/op
# Warmup Iteration   6: 8,848 ms/op
# Warmup Iteration   7: 8,842 ms/op
# Warmup Iteration   8: 8,861 ms/op
# Warmup Iteration   9: 8,903 ms/op
# Warmup Iteration  10: 8,912 ms/op
Iteration   1: 8,880 ms/op
Iteration   2: 8,895 ms/op
Iteration   3: 8,868 ms/op
Iteration   4: 8,855 ms/op
Iteration   5: 8,839 ms/op
Iteration   6: 8,884 ms/op
Iteration   7: 8,847 ms/op
Iteration   8: 8,839 ms/op
Iteration   9: 8,864 ms/op
Iteration  10: 8,885 ms/op


Result "benchmarkFind":
  8,866 ±(99.9%) 0,031 ms/op [Average]
  (min, avg, max) = (8,839, 8,866, 8,895), stdev = 0,020
  CI (99.9%): [8,835, 8,896] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 8, patternSize = 2)

# Run progress: 4,78% complete, ETA 13:00:39
# Fork: 1 of 1
# Warmup Iteration   1: 0,799 ms/op
# Warmup Iteration   2: 0,766 ms/op
# Warmup Iteration   3: 0,770 ms/op
# Warmup Iteration   4: 0,769 ms/op
# Warmup Iteration   5: 0,756 ms/op
# Warmup Iteration   6: 0,754 ms/op
# Warmup Iteration   7: 0,752 ms/op
# Warmup Iteration   8: 0,755 ms/op
# Warmup Iteration   9: 0,755 ms/op
# Warmup Iteration  10: 0,781 ms/op
Iteration   1: 0,761 ms/op
Iteration   2: 0,771 ms/op
Iteration   3: 0,760 ms/op
Iteration   4: 0,752 ms/op
Iteration   5: 0,759 ms/op
Iteration   6: 0,761 ms/op
Iteration   7: 0,762 ms/op
Iteration   8: 0,758 ms/op
Iteration   9: 0,816 ms/op
Iteration  10: 0,755 ms/op


Result "benchmarkFind":
  0,765 ±(99.9%) 0,028 ms/op [Average]
  (min, avg, max) = (0,752, 0,765, 0,816), stdev = 0,018
  CI (99.9%): [0,738, 0,793] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 8, patternSize = 4)

# Run progress: 4,83% complete, ETA 12:59:33
# Fork: 1 of 1
# Warmup Iteration   1: 20,796 ms/op
# Warmup Iteration   2: 19,823 ms/op
# Warmup Iteration   3: 19,927 ms/op
# Warmup Iteration   4: 19,947 ms/op
# Warmup Iteration   5: 19,963 ms/op
# Warmup Iteration   6: 19,910 ms/op
# Warmup Iteration   7: 19,857 ms/op
# Warmup Iteration   8: 19,879 ms/op
# Warmup Iteration   9: 19,986 ms/op
# Warmup Iteration  10: 19,924 ms/op
Iteration   1: 19,858 ms/op
Iteration   2: 19,963 ms/op
Iteration   3: 19,933 ms/op
Iteration   4: 19,807 ms/op
Iteration   5: 19,890 ms/op
Iteration   6: 19,759 ms/op
Iteration   7: 19,866 ms/op
Iteration   8: 19,924 ms/op
Iteration   9: 19,856 ms/op
Iteration  10: 19,966 ms/op


Result "benchmarkFind":
  19,882 ±(99.9%) 0,101 ms/op [Average]
  (min, avg, max) = (19,759, 19,882, 19,966), stdev = 0,067
  CI (99.9%): [19,781, 19,983] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 8, patternSize = 8)

# Run progress: 4,87% complete, ETA 12:58:33
# Fork: 1 of 1
# Warmup Iteration   1: 40,661 ms/op
# Warmup Iteration   2: 38,651 ms/op
# Warmup Iteration   3: 38,376 ms/op
# Warmup Iteration   4: 38,614 ms/op
# Warmup Iteration   5: 38,570 ms/op
# Warmup Iteration   6: 38,573 ms/op
# Warmup Iteration   7: 38,523 ms/op
# Warmup Iteration   8: 38,486 ms/op
# Warmup Iteration   9: 38,579 ms/op
# Warmup Iteration  10: 38,917 ms/op
Iteration   1: 38,761 ms/op
Iteration   2: 38,557 ms/op
Iteration   3: 38,680 ms/op
Iteration   4: 38,529 ms/op
Iteration   5: 38,647 ms/op
Iteration   6: 38,555 ms/op
Iteration   7: 38,686 ms/op
Iteration   8: 38,818 ms/op
Iteration   9: 38,555 ms/op
Iteration  10: 38,647 ms/op


Result "benchmarkFind":
  38,643 ±(99.9%) 0,146 ms/op [Average]
  (min, avg, max) = (38,529, 38,643, 38,818), stdev = 0,096
  CI (99.9%): [38,497, 38,789] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 8, patternSize = 16)

# Run progress: 4,92% complete, ETA 12:57:34
# Fork: 1 of 1
# Warmup Iteration   1: 36,211 ms/op
# Warmup Iteration   2: 36,135 ms/op
# Warmup Iteration   3: 36,227 ms/op
# Warmup Iteration   4: 35,871 ms/op
# Warmup Iteration   5: 35,888 ms/op
# Warmup Iteration   6: 35,930 ms/op
# Warmup Iteration   7: 35,898 ms/op
# Warmup Iteration   8: 36,030 ms/op
# Warmup Iteration   9: 36,009 ms/op
# Warmup Iteration  10: 36,289 ms/op
Iteration   1: 35,916 ms/op
Iteration   2: 35,853 ms/op
Iteration   3: 35,962 ms/op
Iteration   4: 35,852 ms/op
Iteration   5: 36,041 ms/op
Iteration   6: 35,981 ms/op
Iteration   7: 41,085 ms/op
Iteration   8: 36,584 ms/op
Iteration   9: 36,334 ms/op
Iteration  10: 33,787 ms/op


Result "benchmarkFind":
  36,340 ±(99.9%) 2,765 ms/op [Average]
  (min, avg, max) = (33,787, 36,340, 41,085), stdev = 1,829
  CI (99.9%): [33,574, 39,105] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 8, patternSize = 32)

# Run progress: 4,96% complete, ETA 12:56:36
# Fork: 1 of 1
# Warmup Iteration   1: 36,335 ms/op
# Warmup Iteration   2: 35,983 ms/op
# Warmup Iteration   3: 35,959 ms/op
# Warmup Iteration   4: 36,103 ms/op
# Warmup Iteration   5: 36,019 ms/op
# Warmup Iteration   6: 35,930 ms/op
# Warmup Iteration   7: 35,992 ms/op
# Warmup Iteration   8: 36,012 ms/op
# Warmup Iteration   9: 36,132 ms/op
# Warmup Iteration  10: 36,139 ms/op
Iteration   1: 36,062 ms/op
Iteration   2: 36,121 ms/op
Iteration   3: 35,942 ms/op
Iteration   4: 35,896 ms/op
Iteration   5: 36,222 ms/op
Iteration   6: 36,011 ms/op
Iteration   7: 36,024 ms/op
Iteration   8: 36,052 ms/op
Iteration   9: 35,959 ms/op
Iteration  10: 35,872 ms/op


Result "benchmarkFind":
  36,016 ±(99.9%) 0,160 ms/op [Average]
  (min, avg, max) = (35,872, 36,016, 36,222), stdev = 0,106
  CI (99.9%): [35,856, 36,176] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 8, patternSize = 64)

# Run progress: 5,01% complete, ETA 12:55:38
# Fork: 1 of 1
# Warmup Iteration   1: 36,454 ms/op
# Warmup Iteration   2: 35,727 ms/op
# Warmup Iteration   3: 35,723 ms/op
# Warmup Iteration   4: 35,896 ms/op
# Warmup Iteration   5: 35,807 ms/op
# Warmup Iteration   6: 35,736 ms/op
# Warmup Iteration   7: 35,742 ms/op
# Warmup Iteration   8: 35,717 ms/op
# Warmup Iteration   9: 35,689 ms/op
# Warmup Iteration  10: 35,793 ms/op
Iteration   1: 35,806 ms/op
Iteration   2: 35,764 ms/op
Iteration   3: 35,739 ms/op
Iteration   4: 35,756 ms/op
Iteration   5: 35,882 ms/op
Iteration   6: 35,652 ms/op
Iteration   7: 35,617 ms/op
Iteration   8: 35,671 ms/op
Iteration   9: 36,019 ms/op
Iteration  10: 35,661 ms/op


Result "benchmarkFind":
  35,757 ±(99.9%) 0,185 ms/op [Average]
  (min, avg, max) = (35,617, 35,757, 36,019), stdev = 0,122
  CI (99.9%): [35,572, 35,942] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 8, patternSize = 128)

# Run progress: 5,06% complete, ETA 12:54:44
# Fork: 1 of 1
# Warmup Iteration   1: 35,430 ms/op
# Warmup Iteration   2: 35,014 ms/op
# Warmup Iteration   3: 35,040 ms/op
# Warmup Iteration   4: 35,046 ms/op
# Warmup Iteration   5: 34,966 ms/op
# Warmup Iteration   6: 35,254 ms/op
# Warmup Iteration   7: 35,219 ms/op
# Warmup Iteration   8: 35,109 ms/op
# Warmup Iteration   9: 35,098 ms/op
# Warmup Iteration  10: 35,021 ms/op
Iteration   1: 34,941 ms/op
Iteration   2: 35,062 ms/op
Iteration   3: 35,116 ms/op
Iteration   4: 37,570 ms/op
Iteration   5: 36,156 ms/op
Iteration   6: 35,702 ms/op
Iteration   7: 35,421 ms/op
Iteration   8: 35,621 ms/op
Iteration   9: 35,532 ms/op
Iteration  10: 35,510 ms/op


Result "benchmarkFind":
  35,663 ±(99.9%) 1,145 ms/op [Average]
  (min, avg, max) = (34,941, 35,663, 37,570), stdev = 0,757
  CI (99.9%): [34,518, 36,808] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 8, patternSize = 256)

# Run progress: 5,10% complete, ETA 12:53:51
# Fork: 1 of 1
# Warmup Iteration   1: 35,080 ms/op
# Warmup Iteration   2: 34,907 ms/op
# Warmup Iteration   3: 34,698 ms/op
# Warmup Iteration   4: 34,689 ms/op
# Warmup Iteration   5: 35,468 ms/op
# Warmup Iteration   6: 34,635 ms/op
# Warmup Iteration   7: 34,989 ms/op
# Warmup Iteration   8: 34,656 ms/op
# Warmup Iteration   9: 34,923 ms/op
# Warmup Iteration  10: 34,796 ms/op
Iteration   1: 34,791 ms/op
Iteration   2: 34,743 ms/op
Iteration   3: 34,729 ms/op
Iteration   4: 34,817 ms/op
Iteration   5: 34,704 ms/op
Iteration   6: 34,804 ms/op
Iteration   7: 34,778 ms/op
Iteration   8: 34,739 ms/op
Iteration   9: 34,826 ms/op
Iteration  10: 34,750 ms/op


Result "benchmarkFind":
  34,768 ±(99.9%) 0,062 ms/op [Average]
  (min, avg, max) = (34,704, 34,768, 34,826), stdev = 0,041
  CI (99.9%): [34,706, 34,830] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 32, patternSize = 2)

# Run progress: 5,15% complete, ETA 12:52:55
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

com.almondtools.stringbench.SampleNotQualifiedException
	at com.almondtools.stringbench.MultiPatternMatcherBenchmark.setup(MultiPatternMatcherBenchmark.java:36)
	at com.almondtools.stringbench.generated.JavaIndexOfMultiBenchmark_benchmarkFind_jmhTest._jmh_tryInit_f_javaindexofmultibenchmark0_0(JavaIndexOfMultiBenchmark_benchmarkFind_jmhTest.java:425)
	at com.almondtools.stringbench.generated.JavaIndexOfMultiBenchmark_benchmarkFind_jmhTest.benchmarkFind_AverageTime(JavaIndexOfMultiBenchmark_benchmarkFind_jmhTest.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:430)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:412)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)




# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 32, patternSize = 4)

# Run progress: 5,19% complete, ETA 12:46:08
# Fork: 1 of 1
# Warmup Iteration   1: 97,383 ms/op
# Warmup Iteration   2: 94,816 ms/op
# Warmup Iteration   3: 93,807 ms/op
# Warmup Iteration   4: 93,457 ms/op
# Warmup Iteration   5: 93,298 ms/op
# Warmup Iteration   6: 93,253 ms/op
# Warmup Iteration   7: 93,241 ms/op
# Warmup Iteration   8: 92,765 ms/op
# Warmup Iteration   9: 94,017 ms/op
# Warmup Iteration  10: 93,779 ms/op
Iteration   1: 93,286 ms/op
Iteration   2: 93,829 ms/op
Iteration   3: 93,436 ms/op
Iteration   4: 92,892 ms/op
Iteration   5: 93,090 ms/op
Iteration   6: 93,618 ms/op
Iteration   7: 93,443 ms/op
Iteration   8: 93,394 ms/op
Iteration   9: 94,315 ms/op
Iteration  10: 93,185 ms/op


Result "benchmarkFind":
  93,449 ±(99.9%) 0,609 ms/op [Average]
  (min, avg, max) = (92,892, 93,449, 94,315), stdev = 0,403
  CI (99.9%): [92,840, 94,058] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 32, patternSize = 8)

# Run progress: 5,24% complete, ETA 12:45:23
# Fork: 1 of 1
# Warmup Iteration   1: 207,795 ms/op
# Warmup Iteration   2: 199,876 ms/op
# Warmup Iteration   3: 198,918 ms/op
# Warmup Iteration   4: 197,682 ms/op
# Warmup Iteration   5: 198,214 ms/op
# Warmup Iteration   6: 198,353 ms/op
# Warmup Iteration   7: 198,495 ms/op
# Warmup Iteration   8: 199,471 ms/op
# Warmup Iteration   9: 208,039 ms/op
# Warmup Iteration  10: 199,112 ms/op
Iteration   1: 199,003 ms/op
Iteration   2: 197,225 ms/op
Iteration   3: 197,561 ms/op
Iteration   4: 197,822 ms/op
Iteration   5: 197,747 ms/op
Iteration   6: 198,150 ms/op
Iteration   7: 198,979 ms/op
Iteration   8: 198,688 ms/op
Iteration   9: 197,902 ms/op
Iteration  10: 197,910 ms/op


Result "benchmarkFind":
  198,099 ±(99.9%) 0,911 ms/op [Average]
  (min, avg, max) = (197,225, 198,099, 199,003), stdev = 0,603
  CI (99.9%): [197,187, 199,010] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 32, patternSize = 16)

# Run progress: 5,28% complete, ETA 12:45:32
# Fork: 1 of 1
# Warmup Iteration   1: 144,427 ms/op
# Warmup Iteration   2: 142,986 ms/op
# Warmup Iteration   3: 142,928 ms/op
# Warmup Iteration   4: 142,524 ms/op
# Warmup Iteration   5: 142,450 ms/op
# Warmup Iteration   6: 142,718 ms/op
# Warmup Iteration   7: 142,793 ms/op
# Warmup Iteration   8: 143,411 ms/op
# Warmup Iteration   9: 142,817 ms/op
# Warmup Iteration  10: 142,373 ms/op
Iteration   1: 142,505 ms/op
Iteration   2: 143,664 ms/op
Iteration   3: 137,233 ms/op
Iteration   4: 135,015 ms/op
Iteration   5: 134,782 ms/op
Iteration   6: 135,364 ms/op
Iteration   7: 134,453 ms/op
Iteration   8: 134,707 ms/op
Iteration   9: 135,177 ms/op
Iteration  10: 135,016 ms/op


Result "benchmarkFind":
  136,792 ±(99.9%) 5,161 ms/op [Average]
  (min, avg, max) = (134,453, 136,792, 143,664), stdev = 3,414
  CI (99.9%): [131,630, 141,953] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 32, patternSize = 32)

# Run progress: 5,33% complete, ETA 12:45:07
# Fork: 1 of 1
# Warmup Iteration   1: 153,328 ms/op
# Warmup Iteration   2: 153,647 ms/op
# Warmup Iteration   3: 152,751 ms/op
# Warmup Iteration   4: 156,980 ms/op
# Warmup Iteration   5: 153,341 ms/op
# Warmup Iteration   6: 151,911 ms/op
# Warmup Iteration   7: 153,952 ms/op
# Warmup Iteration   8: 165,730 ms/op
# Warmup Iteration   9: 172,991 ms/op
# Warmup Iteration  10: 168,248 ms/op
Iteration   1: 158,311 ms/op
Iteration   2: 173,162 ms/op
Iteration   3: 157,723 ms/op
Iteration   4: 159,736 ms/op
Iteration   5: 159,113 ms/op
Iteration   6: 168,792 ms/op
Iteration   7: 163,860 ms/op
Iteration   8: 167,357 ms/op
Iteration   9: 177,777 ms/op
Iteration  10: 164,940 ms/op


Result "benchmarkFind":
  165,077 ±(99.9%) 10,218 ms/op [Average]
  (min, avg, max) = (157,723, 165,077, 177,777), stdev = 6,759
  CI (99.9%): [154,859, 175,295] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 32, patternSize = 64)

# Run progress: 5,38% complete, ETA 12:44:41
# Fork: 1 of 1
# Warmup Iteration   1: 146,071 ms/op
# Warmup Iteration   2: 174,590 ms/op
# Warmup Iteration   3: 151,297 ms/op
# Warmup Iteration   4: 142,902 ms/op
# Warmup Iteration   5: 144,210 ms/op
# Warmup Iteration   6: 143,431 ms/op
# Warmup Iteration   7: 144,141 ms/op
# Warmup Iteration   8: 143,109 ms/op
# Warmup Iteration   9: 142,820 ms/op
# Warmup Iteration  10: 144,059 ms/op
Iteration   1: 143,184 ms/op
Iteration   2: 143,030 ms/op
Iteration   3: 146,367 ms/op
Iteration   4: 141,950 ms/op
Iteration   5: 142,723 ms/op
Iteration   6: 143,124 ms/op
Iteration   7: 143,036 ms/op
Iteration   8: 144,216 ms/op
Iteration   9: 144,101 ms/op
Iteration  10: 143,060 ms/op


Result "benchmarkFind":
  143,479 ±(99.9%) 1,815 ms/op [Average]
  (min, avg, max) = (141,950, 143,479, 146,367), stdev = 1,200
  CI (99.9%): [141,665, 145,294] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 32, patternSize = 128)

# Run progress: 5,42% complete, ETA 12:44:07
# Fork: 1 of 1
# Warmup Iteration   1: 143,699 ms/op
# Warmup Iteration   2: 143,852 ms/op
# Warmup Iteration   3: 144,598 ms/op
# Warmup Iteration   4: 156,256 ms/op
# Warmup Iteration   5: 152,506 ms/op
# Warmup Iteration   6: 169,826 ms/op
# Warmup Iteration   7: 143,784 ms/op
# Warmup Iteration   8: 143,424 ms/op
# Warmup Iteration   9: 142,188 ms/op
# Warmup Iteration  10: 142,834 ms/op
Iteration   1: 143,051 ms/op
Iteration   2: 144,047 ms/op
Iteration   3: 145,715 ms/op
Iteration   4: 156,409 ms/op
Iteration   5: 159,473 ms/op
Iteration   6: 153,766 ms/op
Iteration   7: 148,215 ms/op
Iteration   8: 147,090 ms/op
Iteration   9: 143,481 ms/op
Iteration  10: 135,235 ms/op


Result "benchmarkFind":
  147,648 ±(99.9%) 10,855 ms/op [Average]
  (min, avg, max) = (135,235, 147,648, 159,473), stdev = 7,180
  CI (99.9%): [136,794, 158,503] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 32, patternSize = 256)

# Run progress: 5,47% complete, ETA 12:43:32
# Fork: 1 of 1
# Warmup Iteration   1: 147,066 ms/op
# Warmup Iteration   2: 146,321 ms/op
# Warmup Iteration   3: 146,762 ms/op
# Warmup Iteration   4: 150,761 ms/op
# Warmup Iteration   5: 148,393 ms/op
# Warmup Iteration   6: 166,513 ms/op
# Warmup Iteration   7: 153,253 ms/op
# Warmup Iteration   8: 145,661 ms/op
# Warmup Iteration   9: 145,575 ms/op
# Warmup Iteration  10: 156,314 ms/op
Iteration   1: 159,174 ms/op
Iteration   2: 146,215 ms/op
Iteration   3: 149,567 ms/op
Iteration   4: 145,305 ms/op
Iteration   5: 145,707 ms/op
Iteration   6: 147,598 ms/op
Iteration   7: 162,703 ms/op
Iteration   8: 160,662 ms/op
Iteration   9: 152,827 ms/op
Iteration  10: 143,805 ms/op


Result "benchmarkFind":
  151,356 ±(99.9%) 10,666 ms/op [Average]
  (min, avg, max) = (143,805, 151,356, 162,703), stdev = 7,055
  CI (99.9%): [140,690, 162,022] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 128, patternSize = 2)

# Run progress: 5,51% complete, ETA 12:42:59
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

com.almondtools.stringbench.SampleNotQualifiedException
	at com.almondtools.stringbench.MultiPatternMatcherBenchmark.setup(MultiPatternMatcherBenchmark.java:36)
	at com.almondtools.stringbench.generated.JavaIndexOfMultiBenchmark_benchmarkFind_jmhTest._jmh_tryInit_f_javaindexofmultibenchmark0_0(JavaIndexOfMultiBenchmark_benchmarkFind_jmhTest.java:425)
	at com.almondtools.stringbench.generated.JavaIndexOfMultiBenchmark_benchmarkFind_jmhTest.benchmarkFind_AverageTime(JavaIndexOfMultiBenchmark_benchmarkFind_jmhTest.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:430)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:412)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)




# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 128, patternSize = 4)

# Run progress: 5,56% complete, ETA 12:36:42
# Fork: 1 of 1
# Warmup Iteration   1: 185,289 ms/op
# Warmup Iteration   2: 175,126 ms/op
# Warmup Iteration   3: 175,260 ms/op
# Warmup Iteration   4: 175,309 ms/op
# Warmup Iteration   5: 181,590 ms/op
# Warmup Iteration   6: 176,296 ms/op
# Warmup Iteration   7: 175,016 ms/op
# Warmup Iteration   8: 182,658 ms/op
# Warmup Iteration   9: 174,834 ms/op
# Warmup Iteration  10: 174,103 ms/op
Iteration   1: 175,127 ms/op
Iteration   2: 176,822 ms/op
Iteration   3: 175,080 ms/op
Iteration   4: 175,156 ms/op
Iteration   5: 177,992 ms/op
Iteration   6: 183,595 ms/op
Iteration   7: 189,344 ms/op
Iteration   8: 182,266 ms/op
Iteration   9: 201,506 ms/op
Iteration  10: 181,731 ms/op


Result "benchmarkFind":
  181,862 ±(99.9%) 12,566 ms/op [Average]
  (min, avg, max) = (175,080, 181,862, 201,506), stdev = 8,312
  CI (99.9%): [169,296, 194,428] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 128, patternSize = 8)

# Run progress: 5,61% complete, ETA 12:36:15
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

com.almondtools.stringbench.ResultNotAcceptedException
	at com.almondtools.stringbench.MultiPatternSample.validate(MultiPatternSample.java:157)
	at com.almondtools.stringbench.MultiPatternMatcherBenchmark.benchmarkFind(MultiPatternMatcherBenchmark.java:50)
	at com.almondtools.stringbench.generated.JavaIndexOfMultiBenchmark_benchmarkFind_jmhTest.benchmarkFind_avgt_jmhStub(JavaIndexOfMultiBenchmark_benchmarkFind_jmhTest.java:208)
	at com.almondtools.stringbench.generated.JavaIndexOfMultiBenchmark_benchmarkFind_jmhTest.benchmarkFind_AverageTime(JavaIndexOfMultiBenchmark_benchmarkFind_jmhTest.java:152)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:430)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:412)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)




# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 128, patternSize = 16)

# Run progress: 5,65% complete, ETA 12:30:10
# Fork: 1 of 1
# Warmup Iteration   1: 636,511 ms/op
# Warmup Iteration   2: 583,027 ms/op
# Warmup Iteration   3: 572,429 ms/op
# Warmup Iteration   4: 526,421 ms/op
# Warmup Iteration   5: 526,039 ms/op
# Warmup Iteration   6: 520,149 ms/op
# Warmup Iteration   7: 524,794 ms/op
# Warmup Iteration   8: 558,525 ms/op
# Warmup Iteration   9: 568,036 ms/op
# Warmup Iteration  10: 564,899 ms/op
Iteration   1: 536,914 ms/op
Iteration   2: 534,002 ms/op
Iteration   3: 526,170 ms/op
Iteration   4: 521,144 ms/op
Iteration   5: 520,504 ms/op
Iteration   6: 557,141 ms/op
Iteration   7: 559,829 ms/op
Iteration   8: 544,624 ms/op
Iteration   9: 520,743 ms/op
Iteration  10: 539,111 ms/op


Result "benchmarkFind":
  536,018 ±(99.9%) 21,932 ms/op [Average]
  (min, avg, max) = (520,504, 536,018, 559,829), stdev = 14,506
  CI (99.9%): [514,087, 557,950] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 128, patternSize = 32)

# Run progress: 5,70% complete, ETA 12:29:55
# Fork: 1 of 1
# Warmup Iteration   1: 595,704 ms/op
# Warmup Iteration   2: 596,504 ms/op
# Warmup Iteration   3: 603,828 ms/op
# Warmup Iteration   4: 588,649 ms/op
# Warmup Iteration   5: 597,495 ms/op
# Warmup Iteration   6: 555,644 ms/op
# Warmup Iteration   7: 538,782 ms/op
# Warmup Iteration   8: 554,001 ms/op
# Warmup Iteration   9: 613,963 ms/op
# Warmup Iteration  10: 585,435 ms/op
Iteration   1: 530,434 ms/op
Iteration   2: 536,298 ms/op
Iteration   3: 533,483 ms/op
Iteration   4: 530,740 ms/op
Iteration   5: 529,378 ms/op
Iteration   6: 528,716 ms/op
Iteration   7: 536,225 ms/op
Iteration   8: 546,238 ms/op
Iteration   9: 547,565 ms/op
Iteration  10: 526,576 ms/op


Result "benchmarkFind":
  534,565 ±(99.9%) 10,912 ms/op [Average]
  (min, avg, max) = (526,576, 534,565, 547,565), stdev = 7,217
  CI (99.9%): [523,653, 545,477] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 128, patternSize = 64)

# Run progress: 5,74% complete, ETA 12:29:49
# Fork: 1 of 1
# Warmup Iteration   1: 603,289 ms/op
# Warmup Iteration   2: 577,818 ms/op
# Warmup Iteration   3: 590,210 ms/op
# Warmup Iteration   4: 777,742 ms/op
# Warmup Iteration   5: 783,847 ms/op
# Warmup Iteration   6: 641,082 ms/op
# Warmup Iteration   7: 547,868 ms/op
# Warmup Iteration   8: 556,915 ms/op
# Warmup Iteration   9: 627,465 ms/op
# Warmup Iteration  10: 688,073 ms/op
Iteration   1: 628,392 ms/op
Iteration   2: 594,431 ms/op
Iteration   3: 554,898 ms/op
Iteration   4: 551,086 ms/op
Iteration   5: 609,079 ms/op
Iteration   6: 610,901 ms/op
Iteration   7: 570,009 ms/op
Iteration   8: 608,741 ms/op
Iteration   9: 658,636 ms/op
Iteration  10: 594,198 ms/op


Result "benchmarkFind":
  598,037 ±(99.9%) 50,077 ms/op [Average]
  (min, avg, max) = (551,086, 598,037, 658,636), stdev = 33,123
  CI (99.9%): [547,960, 648,115] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 128, patternSize = 128)

# Run progress: 5,79% complete, ETA 12:30:21
# Fork: 1 of 1
# Warmup Iteration   1: 595,744 ms/op
# Warmup Iteration   2: 573,305 ms/op
# Warmup Iteration   3: 583,190 ms/op
# Warmup Iteration   4: 665,790 ms/op
# Warmup Iteration   5: 678,023 ms/op
# Warmup Iteration   6: 566,236 ms/op
# Warmup Iteration   7: 542,440 ms/op
# Warmup Iteration   8: 565,669 ms/op
# Warmup Iteration   9: 556,844 ms/op
# Warmup Iteration  10: 537,058 ms/op
Iteration   1: 566,783 ms/op
Iteration   2: 556,357 ms/op
Iteration   3: 542,125 ms/op
Iteration   4: 538,029 ms/op
Iteration   5: 537,648 ms/op
Iteration   6: 540,012 ms/op
Iteration   7: 551,483 ms/op
Iteration   8: 538,188 ms/op
Iteration   9: 541,195 ms/op
Iteration  10: 568,689 ms/op


Result "benchmarkFind":
  548,051 ±(99.9%) 18,242 ms/op [Average]
  (min, avg, max) = (537,648, 548,051, 568,689), stdev = 12,066
  CI (99.9%): [529,809, 566,293] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 128, patternSize = 256)

# Run progress: 5,84% complete, ETA 12:30:21
# Fork: 1 of 1
# Warmup Iteration   1: 606,140 ms/op
# Warmup Iteration   2: 577,710 ms/op
# Warmup Iteration   3: 577,584 ms/op
# Warmup Iteration   4: 574,332 ms/op
# Warmup Iteration   5: 588,743 ms/op
# Warmup Iteration   6: 574,001 ms/op
# Warmup Iteration   7: 526,351 ms/op
# Warmup Iteration   8: 517,360 ms/op
# Warmup Iteration   9: 551,912 ms/op
# Warmup Iteration  10: 539,872 ms/op
Iteration   1: 533,370 ms/op
Iteration   2: 524,946 ms/op
Iteration   3: 539,958 ms/op
Iteration   4: 524,820 ms/op
Iteration   5: 570,595 ms/op
Iteration   6: 542,790 ms/op
Iteration   7: 546,633 ms/op
Iteration   8: 523,403 ms/op
Iteration   9: 527,153 ms/op
Iteration  10: 541,600 ms/op


Result "benchmarkFind":
  537,527 ±(99.9%) 21,797 ms/op [Average]
  (min, avg, max) = (523,403, 537,527, 570,595), stdev = 14,417
  CI (99.9%): [515,730, 559,324] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 2, patternSize = 2)

# Run progress: 5,88% complete, ETA 12:30:10
# Fork: 1 of 1
# Warmup Iteration   1: 0,229 ms/op
# Warmup Iteration   2: 0,224 ms/op
# Warmup Iteration   3: 0,210 ms/op
# Warmup Iteration   4: 0,229 ms/op
# Warmup Iteration   5: 0,236 ms/op
# Warmup Iteration   6: 0,215 ms/op
# Warmup Iteration   7: 0,211 ms/op
# Warmup Iteration   8: 0,210 ms/op
# Warmup Iteration   9: 0,254 ms/op
# Warmup Iteration  10: 0,283 ms/op
Iteration   1: 0,210 ms/op
Iteration   2: 0,204 ms/op
Iteration   3: 0,221 ms/op
Iteration   4: 0,208 ms/op
Iteration   5: 0,210 ms/op
Iteration   6: 0,225 ms/op
Iteration   7: 0,209 ms/op
Iteration   8: 0,204 ms/op
Iteration   9: 0,220 ms/op
Iteration  10: 0,206 ms/op


Result "benchmarkFind":
  0,212 ±(99.9%) 0,011 ms/op [Average]
  (min, avg, max) = (0,204, 0,212, 0,225), stdev = 0,007
  CI (99.9%): [0,200, 0,223] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 2, patternSize = 4)

# Run progress: 5,93% complete, ETA 12:29:24
# Fork: 1 of 1
# Warmup Iteration   1: 8,340 ms/op
# Warmup Iteration   2: 7,749 ms/op
# Warmup Iteration   3: 7,294 ms/op
# Warmup Iteration   4: 7,729 ms/op
# Warmup Iteration   5: 8,052 ms/op
# Warmup Iteration   6: 7,956 ms/op
# Warmup Iteration   7: 8,576 ms/op
# Warmup Iteration   8: 7,754 ms/op
# Warmup Iteration   9: 7,208 ms/op
# Warmup Iteration  10: 7,209 ms/op
Iteration   1: 7,351 ms/op
Iteration   2: 7,220 ms/op
Iteration   3: 7,375 ms/op
Iteration   4: 7,552 ms/op
Iteration   5: 7,782 ms/op
Iteration   6: 8,464 ms/op
Iteration   7: 7,742 ms/op
Iteration   8: 7,680 ms/op
Iteration   9: 7,942 ms/op
Iteration  10: 7,480 ms/op


Result "benchmarkFind":
  7,659 ±(99.9%) 0,544 ms/op [Average]
  (min, avg, max) = (7,220, 7,659, 8,464), stdev = 0,360
  CI (99.9%): [7,115, 8,202] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 2, patternSize = 8)

# Run progress: 5,97% complete, ETA 12:28:41
# Fork: 1 of 1
# Warmup Iteration   1: 5,297 ms/op
# Warmup Iteration   2: 4,966 ms/op
# Warmup Iteration   3: 4,887 ms/op
# Warmup Iteration   4: 4,589 ms/op
# Warmup Iteration   5: 4,454 ms/op
# Warmup Iteration   6: 4,274 ms/op
# Warmup Iteration   7: 4,236 ms/op
# Warmup Iteration   8: 4,269 ms/op
# Warmup Iteration   9: 4,715 ms/op
# Warmup Iteration  10: 4,480 ms/op
Iteration   1: 4,271 ms/op
Iteration   2: 4,684 ms/op
Iteration   3: 4,255 ms/op
Iteration   4: 4,321 ms/op
Iteration   5: 4,228 ms/op
Iteration   6: 4,291 ms/op
Iteration   7: 4,393 ms/op
Iteration   8: 4,474 ms/op
Iteration   9: 4,489 ms/op
Iteration  10: 4,253 ms/op


Result "benchmarkFind":
  4,366 ±(99.9%) 0,219 ms/op [Average]
  (min, avg, max) = (4,228, 4,366, 4,684), stdev = 0,145
  CI (99.9%): [4,146, 4,585] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 2, patternSize = 16)

# Run progress: 6,02% complete, ETA 12:27:59
# Fork: 1 of 1
# Warmup Iteration   1: 4,910 ms/op
# Warmup Iteration   2: 4,829 ms/op
# Warmup Iteration   3: 5,081 ms/op
# Warmup Iteration   4: 5,020 ms/op
# Warmup Iteration   5: 4,849 ms/op
# Warmup Iteration   6: 4,851 ms/op
# Warmup Iteration   7: 4,922 ms/op
# Warmup Iteration   8: 5,378 ms/op
# Warmup Iteration   9: 5,140 ms/op
# Warmup Iteration  10: 5,099 ms/op
Iteration   1: 4,857 ms/op
Iteration   2: 4,559 ms/op
Iteration   3: 4,561 ms/op
Iteration   4: 4,520 ms/op
Iteration   5: 4,506 ms/op
Iteration   6: 4,514 ms/op
Iteration   7: 4,524 ms/op
Iteration   8: 4,547 ms/op
Iteration   9: 4,515 ms/op
Iteration  10: 4,495 ms/op


Result "benchmarkFind":
  4,560 ±(99.9%) 0,161 ms/op [Average]
  (min, avg, max) = (4,495, 4,560, 4,857), stdev = 0,107
  CI (99.9%): [4,399, 4,721] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 2, patternSize = 32)

# Run progress: 6,07% complete, ETA 12:27:15
# Fork: 1 of 1
# Warmup Iteration   1: 4,992 ms/op
# Warmup Iteration   2: 4,942 ms/op
# Warmup Iteration   3: 4,962 ms/op
# Warmup Iteration   4: 4,937 ms/op
# Warmup Iteration   5: 4,957 ms/op
# Warmup Iteration   6: 4,957 ms/op
# Warmup Iteration   7: 5,000 ms/op
# Warmup Iteration   8: 5,220 ms/op
# Warmup Iteration   9: 4,967 ms/op
# Warmup Iteration  10: 4,949 ms/op
Iteration   1: 5,162 ms/op
Iteration   2: 5,092 ms/op
Iteration   3: 5,318 ms/op
Iteration   4: 5,874 ms/op
Iteration   5: 4,979 ms/op
Iteration   6: 4,988 ms/op
Iteration   7: 4,557 ms/op
Iteration   8: 5,012 ms/op
Iteration   9: 4,720 ms/op
Iteration  10: 4,505 ms/op


Result "benchmarkFind":
  5,021 ±(99.9%) 0,600 ms/op [Average]
  (min, avg, max) = (4,505, 5,021, 5,874), stdev = 0,397
  CI (99.9%): [4,421, 5,621] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 2, patternSize = 64)

# Run progress: 6,11% complete, ETA 12:26:32
# Fork: 1 of 1
# Warmup Iteration   1: 5,495 ms/op
# Warmup Iteration   2: 5,262 ms/op
# Warmup Iteration   3: 5,091 ms/op
# Warmup Iteration   4: 5,544 ms/op
# Warmup Iteration   5: 5,012 ms/op
# Warmup Iteration   6: 5,020 ms/op
# Warmup Iteration   7: 5,336 ms/op
# Warmup Iteration   8: 5,006 ms/op
# Warmup Iteration   9: 5,013 ms/op
# Warmup Iteration  10: 5,571 ms/op
Iteration   1: 5,508 ms/op
Iteration   2: 5,339 ms/op
Iteration   3: 4,942 ms/op
Iteration   4: 5,052 ms/op
Iteration   5: 5,422 ms/op
Iteration   6: 5,164 ms/op
Iteration   7: 4,474 ms/op
Iteration   8: 4,457 ms/op
Iteration   9: 4,505 ms/op
Iteration  10: 4,496 ms/op


Result "benchmarkFind":
  4,936 ±(99.9%) 0,640 ms/op [Average]
  (min, avg, max) = (4,457, 4,936, 5,508), stdev = 0,423
  CI (99.9%): [4,296, 5,576] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 2, patternSize = 128)

# Run progress: 6,16% complete, ETA 12:25:49
# Fork: 1 of 1
# Warmup Iteration   1: 4,865 ms/op
# Warmup Iteration   2: 4,817 ms/op
# Warmup Iteration   3: 4,768 ms/op
# Warmup Iteration   4: 4,766 ms/op
# Warmup Iteration   5: 4,758 ms/op
# Warmup Iteration   6: 4,760 ms/op
# Warmup Iteration   7: 4,756 ms/op
# Warmup Iteration   8: 4,761 ms/op
# Warmup Iteration   9: 4,769 ms/op
# Warmup Iteration  10: 4,685 ms/op
Iteration   1: 4,304 ms/op
Iteration   2: 4,298 ms/op
Iteration   3: 4,324 ms/op
Iteration   4: 4,333 ms/op
Iteration   5: 4,306 ms/op
Iteration   6: 4,311 ms/op
Iteration   7: 4,338 ms/op
Iteration   8: 4,317 ms/op
Iteration   9: 4,326 ms/op
Iteration  10: 4,287 ms/op


Result "benchmarkFind":
  4,315 ±(99.9%) 0,025 ms/op [Average]
  (min, avg, max) = (4,287, 4,315, 4,338), stdev = 0,016
  CI (99.9%): [4,290, 4,339] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 2, patternSize = 256)

# Run progress: 6,20% complete, ETA 12:25:07
# Fork: 1 of 1
# Warmup Iteration   1: 4,849 ms/op
# Warmup Iteration   2: 4,747 ms/op
# Warmup Iteration   3: 4,701 ms/op
# Warmup Iteration   4: 4,701 ms/op
# Warmup Iteration   5: 4,741 ms/op
# Warmup Iteration   6: 4,717 ms/op
# Warmup Iteration   7: 4,777 ms/op
# Warmup Iteration   8: 4,731 ms/op
# Warmup Iteration   9: 4,711 ms/op
# Warmup Iteration  10: 4,757 ms/op
Iteration   1: 4,720 ms/op
Iteration   2: 4,727 ms/op
Iteration   3: 5,043 ms/op
Iteration   4: 4,695 ms/op
Iteration   5: 4,434 ms/op
Iteration   6: 4,389 ms/op
Iteration   7: 4,393 ms/op
Iteration   8: 4,378 ms/op
Iteration   9: 4,402 ms/op
Iteration  10: 4,414 ms/op


Result "benchmarkFind":
  4,560 ±(99.9%) 0,341 ms/op [Average]
  (min, avg, max) = (4,378, 4,560, 5,043), stdev = 0,225
  CI (99.9%): [4,219, 4,901] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 8, patternSize = 2)

# Run progress: 6,25% complete, ETA 12:24:24
# Fork: 1 of 1
# Warmup Iteration   1: 2,169 ms/op
# Warmup Iteration   2: 2,054 ms/op
# Warmup Iteration   3: 2,051 ms/op
# Warmup Iteration   4: 2,060 ms/op
# Warmup Iteration   5: 2,050 ms/op
# Warmup Iteration   6: 2,052 ms/op
# Warmup Iteration   7: 2,061 ms/op
# Warmup Iteration   8: 2,066 ms/op
# Warmup Iteration   9: 2,174 ms/op
# Warmup Iteration  10: 2,190 ms/op
Iteration   1: 2,066 ms/op
Iteration   2: 2,162 ms/op
Iteration   3: 2,037 ms/op
Iteration   4: 2,043 ms/op
Iteration   5: 2,042 ms/op
Iteration   6: 2,046 ms/op
Iteration   7: 2,035 ms/op
Iteration   8: 2,048 ms/op
Iteration   9: 2,035 ms/op
Iteration  10: 2,037 ms/op


Result "benchmarkFind":
  2,055 ±(99.9%) 0,059 ms/op [Average]
  (min, avg, max) = (2,035, 2,055, 2,162), stdev = 0,039
  CI (99.9%): [1,997, 2,114] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 8, patternSize = 4)

# Run progress: 6,30% complete, ETA 12:23:40
# Fork: 1 of 1
# Warmup Iteration   1: 64,971 ms/op
# Warmup Iteration   2: 65,938 ms/op
# Warmup Iteration   3: 63,161 ms/op
# Warmup Iteration   4: 69,254 ms/op
# Warmup Iteration   5: 60,960 ms/op
# Warmup Iteration   6: 65,818 ms/op
# Warmup Iteration   7: 60,970 ms/op
# Warmup Iteration   8: 59,502 ms/op
# Warmup Iteration   9: 60,120 ms/op
# Warmup Iteration  10: 59,412 ms/op
Iteration   1: 60,201 ms/op
Iteration   2: 59,568 ms/op
Iteration   3: 59,742 ms/op
Iteration   4: 62,850 ms/op
Iteration   5: 60,287 ms/op
Iteration   6: 65,333 ms/op
Iteration   7: 62,998 ms/op
Iteration   8: 59,893 ms/op
Iteration   9: 60,135 ms/op
Iteration  10: 59,683 ms/op


Result "benchmarkFind":
  61,069 ±(99.9%) 2,966 ms/op [Average]
  (min, avg, max) = (59,568, 61,069, 65,333), stdev = 1,962
  CI (99.9%): [58,103, 64,035] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 8, patternSize = 8)

# Run progress: 6,34% complete, ETA 12:23:06
# Fork: 1 of 1
# Warmup Iteration   1: 21,357 ms/op
# Warmup Iteration   2: 19,808 ms/op
# Warmup Iteration   3: 22,585 ms/op
# Warmup Iteration   4: 19,352 ms/op
# Warmup Iteration   5: 18,439 ms/op
# Warmup Iteration   6: 19,109 ms/op
# Warmup Iteration   7: 18,936 ms/op
# Warmup Iteration   8: 17,984 ms/op
# Warmup Iteration   9: 19,289 ms/op
# Warmup Iteration  10: 18,568 ms/op
Iteration   1: 19,780 ms/op
Iteration   2: 19,286 ms/op
Iteration   3: 18,886 ms/op
Iteration   4: 17,488 ms/op
Iteration   5: 17,724 ms/op
Iteration   6: 17,629 ms/op
Iteration   7: 17,507 ms/op
Iteration   8: 17,630 ms/op
Iteration   9: 17,487 ms/op
Iteration  10: 17,552 ms/op


Result "benchmarkFind":
  18,097 ±(99.9%) 1,317 ms/op [Average]
  (min, avg, max) = (17,487, 18,097, 19,780), stdev = 0,871
  CI (99.9%): [16,779, 19,414] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 8, patternSize = 16)

# Run progress: 6,39% complete, ETA 12:22:26
# Fork: 1 of 1
# Warmup Iteration   1: 19,842 ms/op
# Warmup Iteration   2: 19,683 ms/op
# Warmup Iteration   3: 19,650 ms/op
# Warmup Iteration   4: 19,714 ms/op
# Warmup Iteration   5: 19,701 ms/op
# Warmup Iteration   6: 19,656 ms/op
# Warmup Iteration   7: 19,604 ms/op
# Warmup Iteration   8: 19,700 ms/op
# Warmup Iteration   9: 19,953 ms/op
# Warmup Iteration  10: 19,668 ms/op
Iteration   1: 19,670 ms/op
Iteration   2: 19,603 ms/op
Iteration   3: 19,666 ms/op
Iteration   4: 19,753 ms/op
Iteration   5: 19,810 ms/op
Iteration   6: 19,688 ms/op
Iteration   7: 19,666 ms/op
Iteration   8: 18,438 ms/op
Iteration   9: 17,356 ms/op
Iteration  10: 17,265 ms/op


Result "benchmarkFind":
  19,092 ±(99.9%) 1,540 ms/op [Average]
  (min, avg, max) = (17,265, 19,092, 19,810), stdev = 1,019
  CI (99.9%): [17,551, 20,632] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 8, patternSize = 32)

# Run progress: 6,43% complete, ETA 12:21:46
# Fork: 1 of 1
# Warmup Iteration   1: 19,397 ms/op
# Warmup Iteration   2: 19,130 ms/op
# Warmup Iteration   3: 19,151 ms/op
# Warmup Iteration   4: 19,442 ms/op
# Warmup Iteration   5: 20,305 ms/op
# Warmup Iteration   6: 20,649 ms/op
# Warmup Iteration   7: 19,367 ms/op
# Warmup Iteration   8: 19,439 ms/op
# Warmup Iteration   9: 22,109 ms/op
# Warmup Iteration  10: 20,833 ms/op
Iteration   1: 23,052 ms/op
Iteration   2: 21,945 ms/op
Iteration   3: 19,298 ms/op
Iteration   4: 19,815 ms/op
Iteration   5: 19,585 ms/op
Iteration   6: 19,211 ms/op
Iteration   7: 18,486 ms/op
Iteration   8: 17,176 ms/op
Iteration   9: 17,520 ms/op
Iteration  10: 17,267 ms/op


Result "benchmarkFind":
  19,336 ±(99.9%) 2,934 ms/op [Average]
  (min, avg, max) = (17,176, 19,336, 23,052), stdev = 1,940
  CI (99.9%): [16,402, 22,269] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 8, patternSize = 64)

# Run progress: 6,48% complete, ETA 12:21:08
# Fork: 1 of 1
# Warmup Iteration   1: 19,460 ms/op
# Warmup Iteration   2: 19,172 ms/op
# Warmup Iteration   3: 19,343 ms/op
# Warmup Iteration   4: 19,266 ms/op
# Warmup Iteration   5: 19,673 ms/op
# Warmup Iteration   6: 19,064 ms/op
# Warmup Iteration   7: 19,171 ms/op
# Warmup Iteration   8: 19,379 ms/op
# Warmup Iteration   9: 20,609 ms/op
# Warmup Iteration  10: 18,956 ms/op
Iteration   1: 19,069 ms/op
Iteration   2: 18,926 ms/op
Iteration   3: 18,933 ms/op
Iteration   4: 18,942 ms/op
Iteration   5: 19,053 ms/op
Iteration   6: 19,914 ms/op
Iteration   7: 17,761 ms/op
Iteration   8: 17,562 ms/op
Iteration   9: 18,049 ms/op
Iteration  10: 17,690 ms/op


Result "benchmarkFind":
  18,590 ±(99.9%) 1,171 ms/op [Average]
  (min, avg, max) = (17,562, 18,590, 19,914), stdev = 0,775
  CI (99.9%): [17,419, 19,761] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 8, patternSize = 128)

# Run progress: 6,53% complete, ETA 12:20:30
# Fork: 1 of 1
# Warmup Iteration   1: 19,337 ms/op
# Warmup Iteration   2: 19,080 ms/op
# Warmup Iteration   3: 19,069 ms/op
# Warmup Iteration   4: 19,013 ms/op
# Warmup Iteration   5: 19,128 ms/op
# Warmup Iteration   6: 18,946 ms/op
# Warmup Iteration   7: 18,937 ms/op
# Warmup Iteration   8: 19,067 ms/op
# Warmup Iteration   9: 19,029 ms/op
# Warmup Iteration  10: 19,115 ms/op
Iteration   1: 19,095 ms/op
Iteration   2: 19,289 ms/op
Iteration   3: 19,228 ms/op
Iteration   4: 18,288 ms/op
Iteration   5: 17,170 ms/op
Iteration   6: 17,054 ms/op
Iteration   7: 17,186 ms/op
Iteration   8: 17,224 ms/op
Iteration   9: 17,240 ms/op
Iteration  10: 17,181 ms/op


Result "benchmarkFind":
  17,895 ±(99.9%) 1,464 ms/op [Average]
  (min, avg, max) = (17,054, 17,895, 19,289), stdev = 0,969
  CI (99.9%): [16,431, 19,360] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 8, patternSize = 256)

# Run progress: 6,57% complete, ETA 12:19:52
# Fork: 1 of 1
# Warmup Iteration   1: 19,599 ms/op
# Warmup Iteration   2: 19,554 ms/op
# Warmup Iteration   3: 19,457 ms/op
# Warmup Iteration   4: 19,454 ms/op
# Warmup Iteration   5: 19,476 ms/op
# Warmup Iteration   6: 19,352 ms/op
# Warmup Iteration   7: 19,476 ms/op
# Warmup Iteration   8: 19,355 ms/op
# Warmup Iteration   9: 19,308 ms/op
# Warmup Iteration  10: 19,495 ms/op
Iteration   1: 19,590 ms/op
Iteration   2: 19,503 ms/op
Iteration   3: 19,636 ms/op
Iteration   4: 19,615 ms/op
Iteration   5: 19,420 ms/op
Iteration   6: 19,437 ms/op
Iteration   7: 18,098 ms/op
Iteration   8: 19,008 ms/op
Iteration   9: 18,126 ms/op
Iteration  10: 17,690 ms/op


Result "benchmarkFind":
  19,012 ±(99.9%) 1,132 ms/op [Average]
  (min, avg, max) = (17,690, 19,012, 19,636), stdev = 0,748
  CI (99.9%): [17,881, 20,144] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 32, patternSize = 2)

# Run progress: 6,62% complete, ETA 12:19:14
# Fork: 1 of 1
# Warmup Iteration   1: 13,231 ms/op
# Warmup Iteration   2: 12,016 ms/op
# Warmup Iteration   3: 11,961 ms/op
# Warmup Iteration   4: 12,027 ms/op
# Warmup Iteration   5: 12,004 ms/op
# Warmup Iteration   6: 11,996 ms/op
# Warmup Iteration   7: 13,903 ms/op
# Warmup Iteration   8: 12,087 ms/op
# Warmup Iteration   9: 12,089 ms/op
# Warmup Iteration  10: 12,084 ms/op
Iteration   1: 12,113 ms/op
Iteration   2: 12,078 ms/op
Iteration   3: 12,062 ms/op
Iteration   4: 12,169 ms/op
Iteration   5: 12,067 ms/op
Iteration   6: 12,065 ms/op
Iteration   7: 12,059 ms/op
Iteration   8: 12,080 ms/op
Iteration   9: 12,105 ms/op
Iteration  10: 12,655 ms/op


Result "benchmarkFind":
  12,145 ±(99.9%) 0,275 ms/op [Average]
  (min, avg, max) = (12,059, 12,145, 12,655), stdev = 0,182
  CI (99.9%): [11,870, 12,421] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 32, patternSize = 4)

# Run progress: 6,66% complete, ETA 12:18:35
# Fork: 1 of 1
# Warmup Iteration   1: 710,500 ms/op
# Warmup Iteration   2: 685,189 ms/op
# Warmup Iteration   3: 680,949 ms/op
# Warmup Iteration   4: 685,441 ms/op
# Warmup Iteration   5: 678,988 ms/op
# Warmup Iteration   6: 682,583 ms/op
# Warmup Iteration   7: 682,132 ms/op
# Warmup Iteration   8: 683,281 ms/op
# Warmup Iteration   9: 682,194 ms/op
# Warmup Iteration  10: 683,048 ms/op
Iteration   1: 684,016 ms/op
Iteration   2: 678,122 ms/op
Iteration   3: 684,614 ms/op
Iteration   4: 686,541 ms/op
Iteration   5: 684,689 ms/op
Iteration   6: 681,230 ms/op
Iteration   7: 685,295 ms/op
Iteration   8: 686,337 ms/op
Iteration   9: 684,885 ms/op
Iteration  10: 682,517 ms/op


Result "benchmarkFind":
  683,824 ±(99.9%) 3,882 ms/op [Average]
  (min, avg, max) = (678,122, 683,824, 686,541), stdev = 2,568
  CI (99.9%): [679,942, 687,706] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 32, patternSize = 8)

# Run progress: 6,71% complete, ETA 12:19:37
# Fork: 1 of 1
# Warmup Iteration   1: 78,354 ms/op
# Warmup Iteration   2: 73,668 ms/op
# Warmup Iteration   3: 73,833 ms/op
# Warmup Iteration   4: 73,248 ms/op
# Warmup Iteration   5: 73,949 ms/op
# Warmup Iteration   6: 73,729 ms/op
# Warmup Iteration   7: 73,308 ms/op
# Warmup Iteration   8: 73,382 ms/op
# Warmup Iteration   9: 73,465 ms/op
# Warmup Iteration  10: 73,496 ms/op
Iteration   1: 76,355 ms/op
Iteration   2: 78,825 ms/op
Iteration   3: 78,190 ms/op
Iteration   4: 77,353 ms/op
Iteration   5: 75,445 ms/op
Iteration   6: 73,217 ms/op
Iteration   7: 73,963 ms/op
Iteration   8: 78,001 ms/op
Iteration   9: 73,207 ms/op
Iteration  10: 73,335 ms/op


Result "benchmarkFind":
  75,789 ±(99.9%) 3,396 ms/op [Average]
  (min, avg, max) = (73,207, 75,789, 78,825), stdev = 2,246
  CI (99.9%): [72,394, 79,185] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 32, patternSize = 16)

# Run progress: 6,76% complete, ETA 12:19:05
# Fork: 1 of 1
# Warmup Iteration   1: 82,786 ms/op
# Warmup Iteration   2: 80,201 ms/op
# Warmup Iteration   3: 81,121 ms/op
# Warmup Iteration   4: 79,329 ms/op
# Warmup Iteration   5: 81,137 ms/op
# Warmup Iteration   6: 84,378 ms/op
# Warmup Iteration   7: 92,232 ms/op
# Warmup Iteration   8: 92,517 ms/op
# Warmup Iteration   9: 80,733 ms/op
# Warmup Iteration  10: 81,742 ms/op
Iteration   1: 86,492 ms/op
Iteration   2: 84,971 ms/op
Iteration   3: 79,973 ms/op
Iteration   4: 79,131 ms/op
Iteration   5: 74,080 ms/op
Iteration   6: 69,303 ms/op
Iteration   7: 70,332 ms/op
Iteration   8: 69,899 ms/op
Iteration   9: 69,364 ms/op
Iteration  10: 74,014 ms/op


Result "benchmarkFind":
  75,756 ±(99.9%) 9,842 ms/op [Average]
  (min, avg, max) = (69,303, 75,756, 86,492), stdev = 6,510
  CI (99.9%): [65,914, 85,598] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 32, patternSize = 32)

# Run progress: 6,80% complete, ETA 12:18:36
# Fork: 1 of 1
# Warmup Iteration   1: 82,330 ms/op
# Warmup Iteration   2: 77,006 ms/op
# Warmup Iteration   3: 76,812 ms/op
# Warmup Iteration   4: 77,222 ms/op
# Warmup Iteration   5: 77,656 ms/op
# Warmup Iteration   6: 84,621 ms/op
# Warmup Iteration   7: 78,660 ms/op
# Warmup Iteration   8: 82,441 ms/op
# Warmup Iteration   9: 78,641 ms/op
# Warmup Iteration  10: 78,012 ms/op
Iteration   1: 76,967 ms/op
Iteration   2: 77,380 ms/op
Iteration   3: 76,638 ms/op
Iteration   4: 74,669 ms/op
Iteration   5: 73,202 ms/op
Iteration   6: 72,476 ms/op
Iteration   7: 75,305 ms/op
Iteration   8: 78,834 ms/op
Iteration   9: 75,073 ms/op
Iteration  10: 83,556 ms/op


Result "benchmarkFind":
  76,410 ±(99.9%) 4,782 ms/op [Average]
  (min, avg, max) = (72,476, 76,410, 83,556), stdev = 3,163
  CI (99.9%): [71,628, 81,192] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 32, patternSize = 64)

# Run progress: 6,85% complete, ETA 12:18:05
# Fork: 1 of 1
# Warmup Iteration   1: 88,958 ms/op
# Warmup Iteration   2: 82,918 ms/op
# Warmup Iteration   3: 80,646 ms/op
# Warmup Iteration   4: 78,644 ms/op
# Warmup Iteration   5: 78,625 ms/op
# Warmup Iteration   6: 78,712 ms/op
# Warmup Iteration   7: 79,050 ms/op
# Warmup Iteration   8: 78,878 ms/op
# Warmup Iteration   9: 79,835 ms/op
# Warmup Iteration  10: 78,639 ms/op
Iteration   1: 79,257 ms/op
Iteration   2: 81,133 ms/op
Iteration   3: 79,763 ms/op
Iteration   4: 81,749 ms/op
Iteration   5: 69,943 ms/op
Iteration   6: 67,806 ms/op
Iteration   7: 68,770 ms/op
Iteration   8: 71,564 ms/op
Iteration   9: 67,526 ms/op
Iteration  10: 70,448 ms/op


Result "benchmarkFind":
  73,796 ±(99.9%) 8,930 ms/op [Average]
  (min, avg, max) = (67,526, 73,796, 81,749), stdev = 5,907
  CI (99.9%): [64,866, 82,726] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 32, patternSize = 128)

# Run progress: 6,89% complete, ETA 12:17:35
# Fork: 1 of 1
# Warmup Iteration   1: 84,190 ms/op
# Warmup Iteration   2: 88,462 ms/op
# Warmup Iteration   3: 88,875 ms/op
# Warmup Iteration   4: 83,723 ms/op
# Warmup Iteration   5: 86,185 ms/op
# Warmup Iteration   6: 79,494 ms/op
# Warmup Iteration   7: 83,065 ms/op
# Warmup Iteration   8: 79,253 ms/op
# Warmup Iteration   9: 78,458 ms/op
# Warmup Iteration  10: 78,333 ms/op
Iteration   1: 78,408 ms/op
Iteration   2: 78,265 ms/op
Iteration   3: 75,207 ms/op
Iteration   4: 74,454 ms/op
Iteration   5: 74,208 ms/op
Iteration   6: 84,264 ms/op
Iteration   7: 80,033 ms/op
Iteration   8: 81,089 ms/op
Iteration   9: 72,131 ms/op
Iteration  10: 72,248 ms/op


Result "benchmarkFind":
  77,031 ±(99.9%) 6,090 ms/op [Average]
  (min, avg, max) = (72,131, 77,031, 84,264), stdev = 4,028
  CI (99.9%): [70,940, 83,121] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 32, patternSize = 256)

# Run progress: 6,94% complete, ETA 12:17:05
# Fork: 1 of 1
# Warmup Iteration   1: 79,803 ms/op
# Warmup Iteration   2: 78,857 ms/op
# Warmup Iteration   3: 79,285 ms/op
# Warmup Iteration   4: 78,664 ms/op
# Warmup Iteration   5: 78,849 ms/op
# Warmup Iteration   6: 79,164 ms/op
# Warmup Iteration   7: 79,041 ms/op
# Warmup Iteration   8: 78,899 ms/op
# Warmup Iteration   9: 78,622 ms/op
# Warmup Iteration  10: 78,825 ms/op
Iteration   1: 81,893 ms/op
Iteration   2: 89,621 ms/op
Iteration   3: 83,594 ms/op
Iteration   4: 86,527 ms/op
Iteration   5: 80,320 ms/op
Iteration   6: 77,198 ms/op
Iteration   7: 74,497 ms/op
Iteration   8: 71,100 ms/op
Iteration   9: 79,299 ms/op
Iteration  10: 78,752 ms/op


Result "benchmarkFind":
  80,280 ±(99.9%) 8,287 ms/op [Average]
  (min, avg, max) = (71,100, 80,280, 89,621), stdev = 5,481
  CI (99.9%): [71,993, 88,567] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 128, patternSize = 2)

# Run progress: 6,99% complete, ETA 12:16:35
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

com.almondtools.stringbench.SampleNotQualifiedException
	at com.almondtools.stringbench.MultiPatternMatcherBenchmark.setup(MultiPatternMatcherBenchmark.java:36)
	at com.almondtools.stringbench.generated.JavaIndexOfMultiBenchmark_benchmarkFind_jmhTest._jmh_tryInit_f_javaindexofmultibenchmark0_0(JavaIndexOfMultiBenchmark_benchmarkFind_jmhTest.java:425)
	at com.almondtools.stringbench.generated.JavaIndexOfMultiBenchmark_benchmarkFind_jmhTest.benchmarkFind_AverageTime(JavaIndexOfMultiBenchmark_benchmarkFind_jmhTest.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:430)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:412)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)




# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 128, patternSize = 4)

# Run progress: 7,03% complete, ETA 12:11:43
# Fork: 1 of 1
# Warmup Iteration   1: 7154,726 ms/op
# Warmup Iteration   2: 5781,649 ms/op
# Warmup Iteration   3: 5699,974 ms/op
# Warmup Iteration   4: 5711,208 ms/op
# Warmup Iteration   5: 5651,164 ms/op
# Warmup Iteration   6: 5651,757 ms/op
# Warmup Iteration   7: 5658,621 ms/op
# Warmup Iteration   8: 5616,828 ms/op
# Warmup Iteration   9: 5757,566 ms/op
# Warmup Iteration  10: 5574,248 ms/op
Iteration   1: 5727,662 ms/op
Iteration   2: 5952,267 ms/op
Iteration   3: 5703,159 ms/op
Iteration   4: 5680,134 ms/op
Iteration   5: 5754,521 ms/op
Iteration   6: 5964,281 ms/op
Iteration   7: 6206,156 ms/op
Iteration   8: 6008,210 ms/op
Iteration   9: 5990,125 ms/op
Iteration  10: 5960,463 ms/op


Result "benchmarkFind":
  5894,698 ±(99.9%) 257,832 ms/op [Average]
  (min, avg, max) = (5680,134, 5894,698, 6206,156), stdev = 170,540
  CI (99.9%): [5636,866, 6152,529] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 128, patternSize = 8)

# Run progress: 7,08% complete, ETA 12:33:38
# Fork: 1 of 1
# Warmup Iteration   1: 312,668 ms/op
# Warmup Iteration   2: 285,399 ms/op
# Warmup Iteration   3: 285,100 ms/op
# Warmup Iteration   4: 297,527 ms/op
# Warmup Iteration   5: 318,190 ms/op
# Warmup Iteration   6: 292,075 ms/op
# Warmup Iteration   7: 289,029 ms/op
# Warmup Iteration   8: 288,211 ms/op
# Warmup Iteration   9: 289,750 ms/op
# Warmup Iteration  10: 290,310 ms/op
Iteration   1: 291,196 ms/op
Iteration   2: 297,460 ms/op
Iteration   3: 290,918 ms/op
Iteration   4: 287,782 ms/op
Iteration   5: 288,438 ms/op
Iteration   6: 287,591 ms/op
Iteration   7: 288,256 ms/op
Iteration   8: 287,917 ms/op
Iteration   9: 289,581 ms/op
Iteration  10: 287,964 ms/op


Result "benchmarkFind":
  289,710 ±(99.9%) 4,562 ms/op [Average]
  (min, avg, max) = (287,591, 289,710, 297,460), stdev = 3,017
  CI (99.9%): [285,148, 294,272] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 128, patternSize = 16)

# Run progress: 7,12% complete, ETA 12:33:37
# Fork: 1 of 1
# Warmup Iteration   1: 315,404 ms/op
# Warmup Iteration   2: 320,996 ms/op
# Warmup Iteration   3: 317,737 ms/op
# Warmup Iteration   4: 288,859 ms/op
# Warmup Iteration   5: 288,945 ms/op
# Warmup Iteration   6: 295,161 ms/op
# Warmup Iteration   7: 291,947 ms/op
# Warmup Iteration   8: 289,774 ms/op
# Warmup Iteration   9: 291,470 ms/op
# Warmup Iteration  10: 286,366 ms/op
Iteration   1: 289,295 ms/op
Iteration   2: 286,692 ms/op
Iteration   3: 288,435 ms/op
Iteration   4: 294,316 ms/op
Iteration   5: 295,173 ms/op
Iteration   6: 321,125 ms/op
Iteration   7: 298,895 ms/op
Iteration   8: 285,980 ms/op
Iteration   9: 288,111 ms/op
Iteration  10: 295,989 ms/op


Result "benchmarkFind":
  294,401 ±(99.9%) 15,688 ms/op [Average]
  (min, avg, max) = (285,980, 294,401, 321,125), stdev = 10,377
  CI (99.9%): [278,713, 310,089] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 128, patternSize = 32)

# Run progress: 7,17% complete, ETA 12:33:39
# Fork: 1 of 1
# Warmup Iteration   1: 351,060 ms/op
# Warmup Iteration   2: 386,193 ms/op
# Warmup Iteration   3: 339,633 ms/op
# Warmup Iteration   4: 336,592 ms/op
# Warmup Iteration   5: 370,310 ms/op
# Warmup Iteration   6: 372,638 ms/op
# Warmup Iteration   7: 322,715 ms/op
# Warmup Iteration   8: 287,476 ms/op
# Warmup Iteration   9: 296,661 ms/op
# Warmup Iteration  10: 369,058 ms/op
Iteration   1: 312,693 ms/op
Iteration   2: 287,862 ms/op
Iteration   3: 285,316 ms/op
Iteration   4: 288,322 ms/op
Iteration   5: 289,800 ms/op
Iteration   6: 342,836 ms/op
Iteration   7: 290,158 ms/op
Iteration   8: 302,925 ms/op
Iteration   9: 289,089 ms/op
Iteration  10: 285,635 ms/op


Result "benchmarkFind":
  297,464 ±(99.9%) 27,445 ms/op [Average]
  (min, avg, max) = (285,316, 297,464, 342,836), stdev = 18,153
  CI (99.9%): [270,018, 324,909] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 128, patternSize = 64)

# Run progress: 7,22% complete, ETA 12:33:27
# Fork: 1 of 1
# Warmup Iteration   1: 322,441 ms/op
# Warmup Iteration   2: 330,053 ms/op
# Warmup Iteration   3: 314,773 ms/op
# Warmup Iteration   4: 283,778 ms/op
# Warmup Iteration   5: 282,910 ms/op
# Warmup Iteration   6: 285,681 ms/op
# Warmup Iteration   7: 299,765 ms/op
# Warmup Iteration   8: 363,440 ms/op
# Warmup Iteration   9: 302,124 ms/op
# Warmup Iteration  10: 283,310 ms/op
Iteration   1: 287,765 ms/op
Iteration   2: 288,052 ms/op
Iteration   3: 301,135 ms/op
Iteration   4: 305,951 ms/op
Iteration   5: 282,859 ms/op
Iteration   6: 284,917 ms/op
Iteration   7: 297,647 ms/op
Iteration   8: 301,300 ms/op
Iteration   9: 303,653 ms/op
Iteration  10: 285,119 ms/op


Result "benchmarkFind":
  293,840 ±(99.9%) 13,456 ms/op [Average]
  (min, avg, max) = (282,859, 293,840, 305,951), stdev = 8,901
  CI (99.9%): [280,383, 307,296] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 128, patternSize = 128)

# Run progress: 7,26% complete, ETA 12:33:27
# Fork: 1 of 1
# Warmup Iteration   1: 308,450 ms/op
# Warmup Iteration   2: 311,463 ms/op
# Warmup Iteration   3: 305,939 ms/op
# Warmup Iteration   4: 290,450 ms/op
# Warmup Iteration   5: 289,361 ms/op
# Warmup Iteration   6: 288,577 ms/op
# Warmup Iteration   7: 323,861 ms/op
# Warmup Iteration   8: 310,110 ms/op
# Warmup Iteration   9: 296,621 ms/op
# Warmup Iteration  10: 288,342 ms/op
Iteration   1: 288,416 ms/op
Iteration   2: 289,889 ms/op
Iteration   3: 287,091 ms/op
Iteration   4: 287,368 ms/op
Iteration   5: 288,991 ms/op
Iteration   6: 289,197 ms/op
Iteration   7: 286,482 ms/op
Iteration   8: 286,522 ms/op
Iteration   9: 287,097 ms/op
Iteration  10: 287,690 ms/op


Result "benchmarkFind":
  287,874 ±(99.9%) 1,790 ms/op [Average]
  (min, avg, max) = (286,482, 287,874, 289,889), stdev = 1,184
  CI (99.9%): [286,084, 289,665] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 128, patternSize = 256)

# Run progress: 7,31% complete, ETA 12:33:26
# Fork: 1 of 1
# Warmup Iteration   1: 310,415 ms/op
# Warmup Iteration   2: 308,080 ms/op
# Warmup Iteration   3: 308,043 ms/op
# Warmup Iteration   4: 291,083 ms/op
# Warmup Iteration   5: 308,728 ms/op
# Warmup Iteration   6: 287,665 ms/op
# Warmup Iteration   7: 287,923 ms/op
# Warmup Iteration   8: 287,624 ms/op
# Warmup Iteration   9: 287,438 ms/op
# Warmup Iteration  10: 286,973 ms/op
Iteration   1: 287,848 ms/op
Iteration   2: 296,846 ms/op
Iteration   3: 288,882 ms/op
Iteration   4: 287,329 ms/op
Iteration   5: 294,549 ms/op
Iteration   6: 293,853 ms/op
Iteration   7: 287,629 ms/op
Iteration   8: 290,710 ms/op
Iteration   9: 318,395 ms/op
Iteration  10: 313,018 ms/op


Result "benchmarkFind":
  295,906 ±(99.9%) 16,629 ms/op [Average]
  (min, avg, max) = (287,329, 295,906, 318,395), stdev = 10,999
  CI (99.9%): [279,277, 312,535] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 2, patternSize = 2)

# Run progress: 7,35% complete, ETA 12:33:27
# Fork: 1 of 1
# Warmup Iteration   1: 0,311 ms/op
# Warmup Iteration   2: 0,289 ms/op
# Warmup Iteration   3: 0,293 ms/op
# Warmup Iteration   4: 0,293 ms/op
# Warmup Iteration   5: 0,301 ms/op
# Warmup Iteration   6: 0,289 ms/op
# Warmup Iteration   7: 0,290 ms/op
# Warmup Iteration   8: 0,294 ms/op
# Warmup Iteration   9: 0,290 ms/op
# Warmup Iteration  10: 0,303 ms/op
Iteration   1: 0,311 ms/op
Iteration   2: 0,301 ms/op
Iteration   3: 0,297 ms/op
Iteration   4: 0,288 ms/op
Iteration   5: 0,298 ms/op
Iteration   6: 0,302 ms/op
Iteration   7: 0,289 ms/op
Iteration   8: 0,289 ms/op
Iteration   9: 0,295 ms/op
Iteration  10: 0,333 ms/op


Result "benchmarkFind":
  0,301 ±(99.9%) 0,020 ms/op [Average]
  (min, avg, max) = (0,288, 0,301, 0,333), stdev = 0,014
  CI (99.9%): [0,280, 0,321] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 2, patternSize = 4)

# Run progress: 7,40% complete, ETA 12:32:40
# Fork: 1 of 1
# Warmup Iteration   1: 2,903 ms/op
# Warmup Iteration   2: 2,921 ms/op
# Warmup Iteration   3: 2,639 ms/op
# Warmup Iteration   4: 2,880 ms/op
# Warmup Iteration   5: 2,573 ms/op
# Warmup Iteration   6: 2,565 ms/op
# Warmup Iteration   7: 2,599 ms/op
# Warmup Iteration   8: 2,906 ms/op
# Warmup Iteration   9: 2,884 ms/op
# Warmup Iteration  10: 2,613 ms/op
Iteration   1: 2,656 ms/op
Iteration   2: 2,604 ms/op
Iteration   3: 2,625 ms/op
Iteration   4: 2,850 ms/op
Iteration   5: 2,712 ms/op
Iteration   6: 2,698 ms/op
Iteration   7: 2,789 ms/op
Iteration   8: 2,757 ms/op
Iteration   9: 2,670 ms/op
Iteration  10: 2,834 ms/op


Result "benchmarkFind":
  2,720 ±(99.9%) 0,129 ms/op [Average]
  (min, avg, max) = (2,604, 2,720, 2,850), stdev = 0,085
  CI (99.9%): [2,591, 2,848] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 2, patternSize = 8)

# Run progress: 7,44% complete, ETA 12:31:54
# Fork: 1 of 1
# Warmup Iteration   1: 5,586 ms/op
# Warmup Iteration   2: 4,263 ms/op
# Warmup Iteration   3: 2,993 ms/op
# Warmup Iteration   4: 3,009 ms/op
# Warmup Iteration   5: 3,068 ms/op
# Warmup Iteration   6: 3,056 ms/op
# Warmup Iteration   7: 3,050 ms/op
# Warmup Iteration   8: 2,883 ms/op
# Warmup Iteration   9: 3,042 ms/op
# Warmup Iteration  10: 2,935 ms/op
Iteration   1: 2,851 ms/op
Iteration   2: 2,621 ms/op
Iteration   3: 2,542 ms/op
Iteration   4: 2,656 ms/op
Iteration   5: 2,636 ms/op
Iteration   6: 2,593 ms/op
Iteration   7: 2,621 ms/op
Iteration   8: 2,599 ms/op
Iteration   9: 2,612 ms/op
Iteration  10: 2,617 ms/op


Result "benchmarkFind":
  2,635 ±(99.9%) 0,123 ms/op [Average]
  (min, avg, max) = (2,542, 2,635, 2,851), stdev = 0,082
  CI (99.9%): [2,511, 2,758] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 2, patternSize = 16)

# Run progress: 7,49% complete, ETA 12:31:10
# Fork: 1 of 1
# Warmup Iteration   1: 2,921 ms/op
# Warmup Iteration   2: 2,858 ms/op
# Warmup Iteration   3: 2,864 ms/op
# Warmup Iteration   4: 2,851 ms/op
# Warmup Iteration   5: 2,864 ms/op
# Warmup Iteration   6: 2,831 ms/op
# Warmup Iteration   7: 2,622 ms/op
# Warmup Iteration   8: 2,636 ms/op
# Warmup Iteration   9: 2,616 ms/op
# Warmup Iteration  10: 2,631 ms/op
Iteration   1: 2,631 ms/op
Iteration   2: 2,630 ms/op
Iteration   3: 2,668 ms/op
Iteration   4: 2,655 ms/op
Iteration   5: 2,759 ms/op
Iteration   6: 2,610 ms/op
Iteration   7: 2,649 ms/op
Iteration   8: 2,643 ms/op
Iteration   9: 2,623 ms/op
Iteration  10: 2,762 ms/op


Result "benchmarkFind":
  2,663 ±(99.9%) 0,081 ms/op [Average]
  (min, avg, max) = (2,610, 2,663, 2,762), stdev = 0,054
  CI (99.9%): [2,582, 2,744] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 2, patternSize = 32)

# Run progress: 7,54% complete, ETA 12:30:25
# Fork: 1 of 1
# Warmup Iteration   1: 2,885 ms/op
# Warmup Iteration   2: 2,836 ms/op
# Warmup Iteration   3: 3,055 ms/op
# Warmup Iteration   4: 3,090 ms/op
# Warmup Iteration   5: 3,011 ms/op
# Warmup Iteration   6: 3,315 ms/op
# Warmup Iteration   7: 3,094 ms/op
# Warmup Iteration   8: 2,819 ms/op
# Warmup Iteration   9: 2,821 ms/op
# Warmup Iteration  10: 2,666 ms/op
Iteration   1: 2,679 ms/op
Iteration   2: 2,577 ms/op
Iteration   3: 2,712 ms/op
Iteration   4: 2,544 ms/op
Iteration   5: 2,816 ms/op
Iteration   6: 2,684 ms/op
Iteration   7: 2,690 ms/op
Iteration   8: 2,688 ms/op
Iteration   9: 2,545 ms/op
Iteration  10: 2,772 ms/op


Result "benchmarkFind":
  2,671 ±(99.9%) 0,138 ms/op [Average]
  (min, avg, max) = (2,544, 2,671, 2,816), stdev = 0,091
  CI (99.9%): [2,533, 2,809] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 2, patternSize = 64)

# Run progress: 7,58% complete, ETA 12:29:40
# Fork: 1 of 1
# Warmup Iteration   1: 2,932 ms/op
# Warmup Iteration   2: 2,839 ms/op
# Warmup Iteration   3: 2,853 ms/op
# Warmup Iteration   4: 2,868 ms/op
# Warmup Iteration   5: 2,855 ms/op
# Warmup Iteration   6: 2,859 ms/op
# Warmup Iteration   7: 2,865 ms/op
# Warmup Iteration   8: 2,876 ms/op
# Warmup Iteration   9: 2,722 ms/op
# Warmup Iteration  10: 2,618 ms/op
Iteration   1: 2,584 ms/op
Iteration   2: 2,593 ms/op
Iteration   3: 2,601 ms/op
Iteration   4: 2,580 ms/op
Iteration   5: 2,588 ms/op
Iteration   6: 2,596 ms/op
Iteration   7: 2,592 ms/op
Iteration   8: 2,587 ms/op
Iteration   9: 2,594 ms/op
Iteration  10: 2,573 ms/op


Result "benchmarkFind":
  2,589 ±(99.9%) 0,012 ms/op [Average]
  (min, avg, max) = (2,573, 2,589, 2,601), stdev = 0,008
  CI (99.9%): [2,576, 2,601] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 2, patternSize = 128)

# Run progress: 7,63% complete, ETA 12:28:56
# Fork: 1 of 1
# Warmup Iteration   1: 2,900 ms/op
# Warmup Iteration   2: 2,868 ms/op
# Warmup Iteration   3: 2,844 ms/op
# Warmup Iteration   4: 2,855 ms/op
# Warmup Iteration   5: 2,856 ms/op
# Warmup Iteration   6: 2,836 ms/op
# Warmup Iteration   7: 2,842 ms/op
# Warmup Iteration   8: 2,851 ms/op
# Warmup Iteration   9: 2,691 ms/op
# Warmup Iteration  10: 2,540 ms/op
Iteration   1: 2,537 ms/op
Iteration   2: 2,560 ms/op
Iteration   3: 2,557 ms/op
Iteration   4: 2,551 ms/op
Iteration   5: 2,544 ms/op
Iteration   6: 2,534 ms/op
Iteration   7: 2,542 ms/op
Iteration   8: 2,567 ms/op
Iteration   9: 2,551 ms/op
Iteration  10: 2,534 ms/op


Result "benchmarkFind":
  2,548 ±(99.9%) 0,017 ms/op [Average]
  (min, avg, max) = (2,534, 2,548, 2,567), stdev = 0,011
  CI (99.9%): [2,531, 2,565] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 2, patternSize = 256)

# Run progress: 7,67% complete, ETA 12:28:11
# Fork: 1 of 1
# Warmup Iteration   1: 2,909 ms/op
# Warmup Iteration   2: 3,504 ms/op
# Warmup Iteration   3: 2,862 ms/op
# Warmup Iteration   4: 3,012 ms/op
# Warmup Iteration   5: 2,817 ms/op
# Warmup Iteration   6: 2,813 ms/op
# Warmup Iteration   7: 3,027 ms/op
# Warmup Iteration   8: 2,820 ms/op
# Warmup Iteration   9: 2,952 ms/op
# Warmup Iteration  10: 2,520 ms/op
Iteration   1: 2,521 ms/op
Iteration   2: 2,515 ms/op
Iteration   3: 2,558 ms/op
Iteration   4: 2,525 ms/op
Iteration   5: 2,544 ms/op
Iteration   6: 2,524 ms/op
Iteration   7: 2,542 ms/op
Iteration   8: 2,671 ms/op
Iteration   9: 2,543 ms/op
Iteration  10: 2,554 ms/op


Result "benchmarkFind":
  2,550 ±(99.9%) 0,068 ms/op [Average]
  (min, avg, max) = (2,515, 2,550, 2,671), stdev = 0,045
  CI (99.9%): [2,482, 2,618] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 8, patternSize = 2)

# Run progress: 7,72% complete, ETA 12:27:27
# Fork: 1 of 1
# Warmup Iteration   1: 2,832 ms/op
# Warmup Iteration   2: 2,704 ms/op
# Warmup Iteration   3: 2,697 ms/op
# Warmup Iteration   4: 2,690 ms/op
# Warmup Iteration   5: 2,695 ms/op
# Warmup Iteration   6: 2,700 ms/op
# Warmup Iteration   7: 2,706 ms/op
# Warmup Iteration   8: 2,693 ms/op
# Warmup Iteration   9: 2,699 ms/op
# Warmup Iteration  10: 2,686 ms/op
Iteration   1: 2,723 ms/op
Iteration   2: 2,699 ms/op
Iteration   3: 2,704 ms/op
Iteration   4: 2,709 ms/op
Iteration   5: 2,682 ms/op
Iteration   6: 2,700 ms/op
Iteration   7: 2,708 ms/op
Iteration   8: 2,664 ms/op
Iteration   9: 2,671 ms/op
Iteration  10: 2,681 ms/op


Result "benchmarkFind":
  2,694 ±(99.9%) 0,028 ms/op [Average]
  (min, avg, max) = (2,664, 2,694, 2,723), stdev = 0,019
  CI (99.9%): [2,666, 2,723] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 8, patternSize = 4)

# Run progress: 7,77% complete, ETA 12:26:42
# Fork: 1 of 1
# Warmup Iteration   1: 11,996 ms/op
# Warmup Iteration   2: 11,629 ms/op
# Warmup Iteration   3: 11,512 ms/op
# Warmup Iteration   4: 11,461 ms/op
# Warmup Iteration   5: 11,562 ms/op
# Warmup Iteration   6: 11,603 ms/op
# Warmup Iteration   7: 11,448 ms/op
# Warmup Iteration   8: 11,442 ms/op
# Warmup Iteration   9: 11,471 ms/op
# Warmup Iteration  10: 11,493 ms/op
Iteration   1: 11,574 ms/op
Iteration   2: 11,507 ms/op
Iteration   3: 11,539 ms/op
Iteration   4: 11,536 ms/op
Iteration   5: 11,506 ms/op
Iteration   6: 11,484 ms/op
Iteration   7: 11,536 ms/op
Iteration   8: 11,498 ms/op
Iteration   9: 11,519 ms/op
Iteration  10: 11,558 ms/op


Result "benchmarkFind":
  11,526 ±(99.9%) 0,042 ms/op [Average]
  (min, avg, max) = (11,484, 11,526, 11,574), stdev = 0,028
  CI (99.9%): [11,483, 11,568] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 8, patternSize = 8)

# Run progress: 7,81% complete, ETA 12:26:00
# Fork: 1 of 1
# Warmup Iteration   1: 11,442 ms/op
# Warmup Iteration   2: 11,289 ms/op
# Warmup Iteration   3: 11,352 ms/op
# Warmup Iteration   4: 11,786 ms/op
# Warmup Iteration   5: 11,820 ms/op
# Warmup Iteration   6: 11,573 ms/op
# Warmup Iteration   7: 11,469 ms/op
# Warmup Iteration   8: 11,337 ms/op
# Warmup Iteration   9: 11,343 ms/op
# Warmup Iteration  10: 11,324 ms/op
Iteration   1: 10,763 ms/op
Iteration   2: 10,481 ms/op
Iteration   3: 10,442 ms/op
Iteration   4: 10,500 ms/op
Iteration   5: 10,459 ms/op
Iteration   6: 10,511 ms/op
Iteration   7: 11,267 ms/op
Iteration   8: 10,488 ms/op
Iteration   9: 10,400 ms/op
Iteration  10: 10,470 ms/op


Result "benchmarkFind":
  10,578 ±(99.9%) 0,394 ms/op [Average]
  (min, avg, max) = (10,400, 10,578, 11,267), stdev = 0,261
  CI (99.9%): [10,184, 10,973] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 8, patternSize = 16)

# Run progress: 7,86% complete, ETA 12:25:18
# Fork: 1 of 1
# Warmup Iteration   1: 11,483 ms/op
# Warmup Iteration   2: 11,371 ms/op
# Warmup Iteration   3: 11,354 ms/op
# Warmup Iteration   4: 11,439 ms/op
# Warmup Iteration   5: 11,366 ms/op
# Warmup Iteration   6: 11,322 ms/op
# Warmup Iteration   7: 11,346 ms/op
# Warmup Iteration   8: 11,317 ms/op
# Warmup Iteration   9: 11,291 ms/op
# Warmup Iteration  10: 11,337 ms/op
Iteration   1: 10,529 ms/op
Iteration   2: 10,466 ms/op
Iteration   3: 10,850 ms/op
Iteration   4: 11,502 ms/op
Iteration   5: 10,782 ms/op
Iteration   6: 10,636 ms/op
Iteration   7: 10,561 ms/op
Iteration   8: 10,685 ms/op
Iteration   9: 10,389 ms/op
Iteration  10: 10,731 ms/op


Result "benchmarkFind":
  10,713 ±(99.9%) 0,472 ms/op [Average]
  (min, avg, max) = (10,389, 10,713, 11,502), stdev = 0,312
  CI (99.9%): [10,241, 11,185] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 8, patternSize = 32)

# Run progress: 7,90% complete, ETA 12:24:35
# Fork: 1 of 1
# Warmup Iteration   1: 12,069 ms/op
# Warmup Iteration   2: 11,619 ms/op
# Warmup Iteration   3: 11,489 ms/op
# Warmup Iteration   4: 11,633 ms/op
# Warmup Iteration   5: 11,603 ms/op
# Warmup Iteration   6: 11,448 ms/op
# Warmup Iteration   7: 11,623 ms/op
# Warmup Iteration   8: 11,534 ms/op
# Warmup Iteration   9: 12,285 ms/op
# Warmup Iteration  10: 12,771 ms/op
Iteration   1: 10,501 ms/op
Iteration   2: 10,340 ms/op
Iteration   3: 10,534 ms/op
Iteration   4: 10,581 ms/op
Iteration   5: 10,245 ms/op
Iteration   6: 10,374 ms/op
Iteration   7: 11,321 ms/op
Iteration   8: 11,289 ms/op
Iteration   9: 12,701 ms/op
Iteration  10: 13,862 ms/op


Result "benchmarkFind":
  11,175 ±(99.9%) 1,817 ms/op [Average]
  (min, avg, max) = (10,245, 11,175, 13,862), stdev = 1,202
  CI (99.9%): [9,357, 12,992] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 8, patternSize = 64)

# Run progress: 7,95% complete, ETA 12:23:54
# Fork: 1 of 1
# Warmup Iteration   1: 19,366 ms/op
# Warmup Iteration   2: 14,723 ms/op
# Warmup Iteration   3: 14,164 ms/op
# Warmup Iteration   4: 15,508 ms/op
# Warmup Iteration   5: 14,516 ms/op
# Warmup Iteration   6: 11,548 ms/op
# Warmup Iteration   7: 14,708 ms/op
# Warmup Iteration   8: 15,506 ms/op
# Warmup Iteration   9: 15,645 ms/op
# Warmup Iteration  10: 14,571 ms/op
Iteration   1: 12,202 ms/op
Iteration   2: 11,804 ms/op
Iteration   3: 13,103 ms/op
Iteration   4: 14,515 ms/op
Iteration   5: 14,509 ms/op
Iteration   6: 14,050 ms/op
Iteration   7: 12,805 ms/op
Iteration   8: 11,348 ms/op
Iteration   9: 11,139 ms/op
Iteration  10: 11,109 ms/op


Result "benchmarkFind":
  12,658 ±(99.9%) 2,040 ms/op [Average]
  (min, avg, max) = (11,109, 12,658, 14,515), stdev = 1,350
  CI (99.9%): [10,618, 14,699] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 8, patternSize = 128)

# Run progress: 8,00% complete, ETA 12:23:17
# Fork: 1 of 1
# Warmup Iteration   1: 13,798 ms/op
# Warmup Iteration   2: 14,522 ms/op
# Warmup Iteration   3: 12,453 ms/op
# Warmup Iteration   4: 11,802 ms/op
# Warmup Iteration   5: 12,833 ms/op
# Warmup Iteration   6: 15,153 ms/op
# Warmup Iteration   7: 11,942 ms/op
# Warmup Iteration   8: 11,961 ms/op
# Warmup Iteration   9: 14,396 ms/op
# Warmup Iteration  10: 15,567 ms/op
Iteration   1: 15,662 ms/op
Iteration   2: 13,843 ms/op
Iteration   3: 11,947 ms/op
Iteration   4: 10,654 ms/op
Iteration   5: 10,557 ms/op
Iteration   6: 10,403 ms/op
Iteration   7: 10,734 ms/op
Iteration   8: 11,688 ms/op
Iteration   9: 11,399 ms/op
Iteration  10: 10,627 ms/op


Result "benchmarkFind":
  11,752 ±(99.9%) 2,598 ms/op [Average]
  (min, avg, max) = (10,403, 11,752, 15,662), stdev = 1,719
  CI (99.9%): [9,153, 14,350] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 8, patternSize = 256)

# Run progress: 8,04% complete, ETA 12:22:37
# Fork: 1 of 1
# Warmup Iteration   1: 15,328 ms/op
# Warmup Iteration   2: 16,041 ms/op
# Warmup Iteration   3: 15,050 ms/op
# Warmup Iteration   4: 13,701 ms/op
# Warmup Iteration   5: 12,991 ms/op
# Warmup Iteration   6: 11,588 ms/op
# Warmup Iteration   7: 11,388 ms/op
# Warmup Iteration   8: 11,610 ms/op
# Warmup Iteration   9: 11,572 ms/op
# Warmup Iteration  10: 13,183 ms/op
Iteration   1: 15,135 ms/op
Iteration   2: 13,191 ms/op
Iteration   3: 12,462 ms/op
Iteration   4: 10,424 ms/op
Iteration   5: 10,493 ms/op
Iteration   6: 10,135 ms/op
Iteration   7: 11,714 ms/op
Iteration   8: 10,814 ms/op
Iteration   9: 10,465 ms/op
Iteration  10: 10,206 ms/op


Result "benchmarkFind":
  11,504 ±(99.9%) 2,484 ms/op [Average]
  (min, avg, max) = (10,135, 11,504, 15,135), stdev = 1,643
  CI (99.9%): [9,020, 13,988] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 32, patternSize = 2)

# Run progress: 8,09% complete, ETA 12:21:58
# Fork: 1 of 1
# Warmup Iteration   1: 25,043 ms/op
# Warmup Iteration   2: 23,746 ms/op
# Warmup Iteration   3: 23,612 ms/op
# Warmup Iteration   4: 24,566 ms/op
# Warmup Iteration   5: 23,805 ms/op
# Warmup Iteration   6: 23,695 ms/op
# Warmup Iteration   7: 23,526 ms/op
# Warmup Iteration   8: 24,227 ms/op
# Warmup Iteration   9: 26,204 ms/op
# Warmup Iteration  10: 30,106 ms/op
Iteration   1: 28,654 ms/op
Iteration   2: 42,624 ms/op
Iteration   3: 27,886 ms/op
Iteration   4: 24,220 ms/op
Iteration   5: 23,965 ms/op
Iteration   6: 26,231 ms/op
Iteration   7: 26,474 ms/op
Iteration   8: 29,559 ms/op
Iteration   9: 34,135 ms/op
Iteration  10: 35,946 ms/op


Result "benchmarkFind":
  29,969 ±(99.9%) 8,941 ms/op [Average]
  (min, avg, max) = (23,965, 29,969, 42,624), stdev = 5,914
  CI (99.9%): [21,029, 38,910] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 32, patternSize = 4)

# Run progress: 8,13% complete, ETA 12:21:19
# Fork: 1 of 1
# Warmup Iteration   1: 54,738 ms/op
# Warmup Iteration   2: 52,808 ms/op
# Warmup Iteration   3: 58,695 ms/op
# Warmup Iteration   4: 59,787 ms/op
# Warmup Iteration   5: 53,537 ms/op
# Warmup Iteration   6: 55,849 ms/op
# Warmup Iteration   7: 52,271 ms/op
# Warmup Iteration   8: 52,817 ms/op
# Warmup Iteration   9: 53,121 ms/op
# Warmup Iteration  10: 53,366 ms/op
Iteration   1: 52,218 ms/op
Iteration   2: 51,697 ms/op
Iteration   3: 53,596 ms/op
Iteration   4: 53,043 ms/op
Iteration   5: 53,375 ms/op
Iteration   6: 52,935 ms/op
Iteration   7: 52,464 ms/op
Iteration   8: 52,323 ms/op
Iteration   9: 52,331 ms/op
Iteration  10: 52,883 ms/op


Result "benchmarkFind":
  52,687 ±(99.9%) 0,878 ms/op [Average]
  (min, avg, max) = (51,697, 52,687, 53,596), stdev = 0,581
  CI (99.9%): [51,809, 53,564] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 32, patternSize = 8)

# Run progress: 8,18% complete, ETA 12:20:44
# Fork: 1 of 1
# Warmup Iteration   1: 46,504 ms/op
# Warmup Iteration   2: 46,946 ms/op
# Warmup Iteration   3: 46,701 ms/op
# Warmup Iteration   4: 49,356 ms/op
# Warmup Iteration   5: 46,882 ms/op
# Warmup Iteration   6: 46,378 ms/op
# Warmup Iteration   7: 49,208 ms/op
# Warmup Iteration   8: 45,343 ms/op
# Warmup Iteration   9: 46,525 ms/op
# Warmup Iteration  10: 42,787 ms/op
Iteration   1: 46,553 ms/op
Iteration   2: 42,363 ms/op
Iteration   3: 42,394 ms/op
Iteration   4: 42,533 ms/op
Iteration   5: 42,140 ms/op
Iteration   6: 41,854 ms/op
Iteration   7: 41,824 ms/op
Iteration   8: 41,662 ms/op
Iteration   9: 43,870 ms/op
Iteration  10: 42,096 ms/op


Result "benchmarkFind":
  42,729 ±(99.9%) 2,236 ms/op [Average]
  (min, avg, max) = (41,662, 42,729, 46,553), stdev = 1,479
  CI (99.9%): [40,493, 44,965] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 32, patternSize = 16)

# Run progress: 8,23% complete, ETA 12:20:07
# Fork: 1 of 1
# Warmup Iteration   1: 46,087 ms/op
# Warmup Iteration   2: 45,220 ms/op
# Warmup Iteration   3: 45,661 ms/op
# Warmup Iteration   4: 45,932 ms/op
# Warmup Iteration   5: 45,480 ms/op
# Warmup Iteration   6: 46,852 ms/op
# Warmup Iteration   7: 47,288 ms/op
# Warmup Iteration   8: 45,721 ms/op
# Warmup Iteration   9: 54,149 ms/op
# Warmup Iteration  10: 56,809 ms/op
Iteration   1: 48,945 ms/op
Iteration   2: 45,479 ms/op
Iteration   3: 42,523 ms/op
Iteration   4: 41,091 ms/op
Iteration   5: 41,242 ms/op
Iteration   6: 41,249 ms/op
Iteration   7: 40,891 ms/op
Iteration   8: 41,595 ms/op
Iteration   9: 43,660 ms/op
Iteration  10: 42,225 ms/op


Result "benchmarkFind":
  42,890 ±(99.9%) 3,866 ms/op [Average]
  (min, avg, max) = (40,891, 42,890, 48,945), stdev = 2,557
  CI (99.9%): [39,024, 46,756] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 32, patternSize = 32)

# Run progress: 8,27% complete, ETA 12:19:30
# Fork: 1 of 1
# Warmup Iteration   1: 46,632 ms/op
# Warmup Iteration   2: 45,219 ms/op
# Warmup Iteration   3: 44,978 ms/op
# Warmup Iteration   4: 55,582 ms/op
# Warmup Iteration   5: 50,453 ms/op
# Warmup Iteration   6: 56,450 ms/op
# Warmup Iteration   7: 52,798 ms/op
# Warmup Iteration   8: 49,556 ms/op
# Warmup Iteration   9: 42,635 ms/op
# Warmup Iteration  10: 40,749 ms/op
Iteration   1: 40,440 ms/op
Iteration   2: 40,469 ms/op
Iteration   3: 40,441 ms/op
Iteration   4: 40,431 ms/op
Iteration   5: 42,757 ms/op
Iteration   6: 41,147 ms/op
Iteration   7: 41,444 ms/op
Iteration   8: 41,350 ms/op
Iteration   9: 41,151 ms/op
Iteration  10: 41,248 ms/op


Result "benchmarkFind":
  41,088 ±(99.9%) 1,089 ms/op [Average]
  (min, avg, max) = (40,431, 41,088, 42,757), stdev = 0,720
  CI (99.9%): [39,999, 42,177] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 32, patternSize = 64)

# Run progress: 8,32% complete, ETA 12:18:53
# Fork: 1 of 1
# Warmup Iteration   1: 43,139 ms/op
# Warmup Iteration   2: 42,310 ms/op
# Warmup Iteration   3: 42,415 ms/op
# Warmup Iteration   4: 42,228 ms/op
# Warmup Iteration   5: 42,088 ms/op
# Warmup Iteration   6: 42,205 ms/op
# Warmup Iteration   7: 43,388 ms/op
# Warmup Iteration   8: 41,675 ms/op
# Warmup Iteration   9: 41,007 ms/op
# Warmup Iteration  10: 40,956 ms/op
Iteration   1: 42,940 ms/op
Iteration   2: 40,506 ms/op
Iteration   3: 46,523 ms/op
Iteration   4: 40,844 ms/op
Iteration   5: 40,571 ms/op
Iteration   6: 40,589 ms/op
Iteration   7: 40,470 ms/op
Iteration   8: 40,502 ms/op
Iteration   9: 40,374 ms/op
Iteration  10: 40,460 ms/op


Result "benchmarkFind":
  41,378 ±(99.9%) 2,968 ms/op [Average]
  (min, avg, max) = (40,374, 41,378, 46,523), stdev = 1,963
  CI (99.9%): [38,410, 44,346] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 32, patternSize = 128)

# Run progress: 8,36% complete, ETA 12:18:17
# Fork: 1 of 1
# Warmup Iteration   1: 45,487 ms/op
# Warmup Iteration   2: 45,198 ms/op
# Warmup Iteration   3: 45,271 ms/op
# Warmup Iteration   4: 45,366 ms/op
# Warmup Iteration   5: 45,208 ms/op
# Warmup Iteration   6: 47,321 ms/op
# Warmup Iteration   7: 49,531 ms/op
# Warmup Iteration   8: 44,817 ms/op
# Warmup Iteration   9: 42,812 ms/op
# Warmup Iteration  10: 42,757 ms/op
Iteration   1: 42,595 ms/op
Iteration   2: 42,642 ms/op
Iteration   3: 42,802 ms/op
Iteration   4: 42,683 ms/op
Iteration   5: 42,335 ms/op
Iteration   6: 42,820 ms/op
Iteration   7: 42,510 ms/op
Iteration   8: 42,202 ms/op
Iteration   9: 42,391 ms/op
Iteration  10: 42,384 ms/op


Result "benchmarkFind":
  42,536 ±(99.9%) 0,313 ms/op [Average]
  (min, avg, max) = (42,202, 42,536, 42,820), stdev = 0,207
  CI (99.9%): [42,224, 42,849] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 32, patternSize = 256)

# Run progress: 8,41% complete, ETA 12:17:43
# Fork: 1 of 1
# Warmup Iteration   1: 45,192 ms/op
# Warmup Iteration   2: 45,310 ms/op
# Warmup Iteration   3: 45,223 ms/op
# Warmup Iteration   4: 44,895 ms/op
# Warmup Iteration   5: 44,808 ms/op
# Warmup Iteration   6: 44,922 ms/op
# Warmup Iteration   7: 45,172 ms/op
# Warmup Iteration   8: 44,958 ms/op
# Warmup Iteration   9: 41,915 ms/op
# Warmup Iteration  10: 40,856 ms/op
Iteration   1: 40,630 ms/op
Iteration   2: 40,792 ms/op
Iteration   3: 40,418 ms/op
Iteration   4: 40,980 ms/op
Iteration   5: 41,202 ms/op
Iteration   6: 40,887 ms/op
Iteration   7: 41,197 ms/op
Iteration   8: 41,000 ms/op
Iteration   9: 40,863 ms/op
Iteration  10: 41,338 ms/op


Result "benchmarkFind":
  40,931 ±(99.9%) 0,421 ms/op [Average]
  (min, avg, max) = (40,418, 40,931, 41,338), stdev = 0,278
  CI (99.9%): [40,510, 41,351] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 128, patternSize = 2)

# Run progress: 8,46% complete, ETA 12:17:09
# Fork: 1 of 1
# Warmup Iteration   1: 157,004 ms/op
# Warmup Iteration   2: 144,676 ms/op
# Warmup Iteration   3: 144,308 ms/op
# Warmup Iteration   4: 144,237 ms/op
# Warmup Iteration   5: 143,205 ms/op
# Warmup Iteration   6: 143,094 ms/op
# Warmup Iteration   7: 144,673 ms/op
# Warmup Iteration   8: 144,704 ms/op
# Warmup Iteration   9: 143,741 ms/op
# Warmup Iteration  10: 143,390 ms/op
Iteration   1: 144,397 ms/op
Iteration   2: 142,916 ms/op
Iteration   3: 144,238 ms/op
Iteration   4: 145,064 ms/op
Iteration   5: 144,412 ms/op
Iteration   6: 143,766 ms/op
Iteration   7: 143,965 ms/op
Iteration   8: 143,546 ms/op
Iteration   9: 143,772 ms/op
Iteration  10: 143,284 ms/op


Result "benchmarkFind":
  143,936 ±(99.9%) 0,940 ms/op [Average]
  (min, avg, max) = (142,916, 143,936, 145,064), stdev = 0,621
  CI (99.9%): [142,996, 144,876] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 128, patternSize = 4)

# Run progress: 8,50% complete, ETA 12:16:31
# Fork: 1 of 1
# Warmup Iteration   1: 338,649 ms/op
# Warmup Iteration   2: 322,795 ms/op
# Warmup Iteration   3: 342,352 ms/op
# Warmup Iteration   4: 337,705 ms/op
# Warmup Iteration   5: 320,761 ms/op
# Warmup Iteration   6: 323,035 ms/op
# Warmup Iteration   7: 321,708 ms/op
# Warmup Iteration   8: 321,791 ms/op
# Warmup Iteration   9: 322,434 ms/op
# Warmup Iteration  10: 321,444 ms/op
Iteration   1: 320,882 ms/op
Iteration   2: 322,469 ms/op
Iteration   3: 321,545 ms/op
Iteration   4: 320,654 ms/op
Iteration   5: 320,817 ms/op
Iteration   6: 320,973 ms/op
Iteration   7: 320,431 ms/op
Iteration   8: 320,656 ms/op
Iteration   9: 320,092 ms/op
Iteration  10: 321,727 ms/op


Result "benchmarkFind":
  321,025 ±(99.9%) 1,059 ms/op [Average]
  (min, avg, max) = (320,092, 321,025, 322,469), stdev = 0,700
  CI (99.9%): [319,966, 322,083] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 128, patternSize = 8)

# Run progress: 8,55% complete, ETA 12:16:44
# Fork: 1 of 1
# Warmup Iteration   1: 183,811 ms/op
# Warmup Iteration   2: 173,979 ms/op
# Warmup Iteration   3: 172,835 ms/op
# Warmup Iteration   4: 172,599 ms/op
# Warmup Iteration   5: 171,782 ms/op
# Warmup Iteration   6: 172,109 ms/op
# Warmup Iteration   7: 173,113 ms/op
# Warmup Iteration   8: 170,899 ms/op
# Warmup Iteration   9: 172,440 ms/op
# Warmup Iteration  10: 172,505 ms/op
Iteration   1: 171,631 ms/op
Iteration   2: 171,727 ms/op
Iteration   3: 172,263 ms/op
Iteration   4: 173,646 ms/op
Iteration   5: 172,263 ms/op
Iteration   6: 172,617 ms/op
Iteration   7: 171,794 ms/op
Iteration   8: 173,757 ms/op
Iteration   9: 173,059 ms/op
Iteration  10: 171,742 ms/op


Result "benchmarkFind":
  172,450 ±(99.9%) 1,206 ms/op [Average]
  (min, avg, max) = (171,631, 172,450, 173,757), stdev = 0,798
  CI (99.9%): [171,244, 173,656] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 128, patternSize = 16)

# Run progress: 8,59% complete, ETA 12:16:11
# Fork: 1 of 1
# Warmup Iteration   1: 180,202 ms/op
# Warmup Iteration   2: 178,356 ms/op
# Warmup Iteration   3: 165,788 ms/op
# Warmup Iteration   4: 161,862 ms/op
# Warmup Iteration   5: 161,915 ms/op
# Warmup Iteration   6: 163,067 ms/op
# Warmup Iteration   7: 164,776 ms/op
# Warmup Iteration   8: 164,851 ms/op
# Warmup Iteration   9: 165,286 ms/op
# Warmup Iteration  10: 164,477 ms/op
Iteration   1: 162,883 ms/op
Iteration   2: 163,800 ms/op
Iteration   3: 163,578 ms/op
Iteration   4: 162,451 ms/op
Iteration   5: 187,588 ms/op
Iteration   6: 162,396 ms/op
Iteration   7: 162,159 ms/op
Iteration   8: 162,881 ms/op
Iteration   9: 162,209 ms/op
Iteration  10: 162,751 ms/op


Result "benchmarkFind":
  165,270 ±(99.9%) 11,884 ms/op [Average]
  (min, avg, max) = (162,159, 165,270, 187,588), stdev = 7,861
  CI (99.9%): [153,386, 177,154] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 128, patternSize = 32)

# Run progress: 8,64% complete, ETA 12:16:00
# Fork: 1 of 1
# Warmup Iteration   1: 181,637 ms/op
# Warmup Iteration   2: 183,154 ms/op
# Warmup Iteration   3: 167,776 ms/op
# Warmup Iteration   4: 161,230 ms/op
# Warmup Iteration   5: 160,838 ms/op
# Warmup Iteration   6: 162,216 ms/op
# Warmup Iteration   7: 160,982 ms/op
# Warmup Iteration   8: 161,493 ms/op
# Warmup Iteration   9: 161,577 ms/op
# Warmup Iteration  10: 160,714 ms/op
Iteration   1: 161,937 ms/op
Iteration   2: 160,320 ms/op
Iteration   3: 161,054 ms/op
Iteration   4: 160,742 ms/op
Iteration   5: 161,523 ms/op
Iteration   6: 161,396 ms/op
Iteration   7: 161,733 ms/op
Iteration   8: 160,983 ms/op
Iteration   9: 160,532 ms/op
Iteration  10: 160,982 ms/op


Result "benchmarkFind":
  161,120 ±(99.9%) 0,789 ms/op [Average]
  (min, avg, max) = (160,320, 161,120, 161,937), stdev = 0,522
  CI (99.9%): [160,331, 161,910] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 128, patternSize = 64)

# Run progress: 8,69% complete, ETA 12:15:45
# Fork: 1 of 1
# Warmup Iteration   1: 180,848 ms/op
# Warmup Iteration   2: 181,359 ms/op
# Warmup Iteration   3: 173,054 ms/op
# Warmup Iteration   4: 172,691 ms/op
# Warmup Iteration   5: 171,728 ms/op
# Warmup Iteration   6: 171,429 ms/op
# Warmup Iteration   7: 173,446 ms/op
# Warmup Iteration   8: 172,890 ms/op
# Warmup Iteration   9: 172,804 ms/op
# Warmup Iteration  10: 171,804 ms/op
Iteration   1: 171,011 ms/op
Iteration   2: 172,927 ms/op
Iteration   3: 173,205 ms/op
Iteration   4: 173,411 ms/op
Iteration   5: 171,154 ms/op
Iteration   6: 173,147 ms/op
Iteration   7: 172,432 ms/op
Iteration   8: 172,901 ms/op
Iteration   9: 172,324 ms/op
Iteration  10: 172,677 ms/op


Result "benchmarkFind":
  172,519 ±(99.9%) 1,253 ms/op [Average]
  (min, avg, max) = (171,011, 172,519, 173,411), stdev = 0,829
  CI (99.9%): [171,266, 173,771] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 128, patternSize = 128)

# Run progress: 8,73% complete, ETA 12:15:14
# Fork: 1 of 1
# Warmup Iteration   1: 182,809 ms/op
# Warmup Iteration   2: 181,303 ms/op
# Warmup Iteration   3: 168,900 ms/op
# Warmup Iteration   4: 168,606 ms/op
# Warmup Iteration   5: 167,918 ms/op
# Warmup Iteration   6: 167,418 ms/op
# Warmup Iteration   7: 167,523 ms/op
# Warmup Iteration   8: 168,481 ms/op
# Warmup Iteration   9: 179,546 ms/op
# Warmup Iteration  10: 167,682 ms/op
Iteration   1: 167,861 ms/op
Iteration   2: 168,834 ms/op
Iteration   3: 168,272 ms/op
Iteration   4: 167,299 ms/op
Iteration   5: 166,250 ms/op
Iteration   6: 167,363 ms/op
Iteration   7: 168,076 ms/op
Iteration   8: 166,704 ms/op
Iteration   9: 168,226 ms/op
Iteration  10: 167,289 ms/op


Result "benchmarkFind":
  167,617 ±(99.9%) 1,185 ms/op [Average]
  (min, avg, max) = (166,250, 167,617, 168,834), stdev = 0,784
  CI (99.9%): [166,433, 168,802] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 128, patternSize = 256)

# Run progress: 8,78% complete, ETA 12:14:41
# Fork: 1 of 1
# Warmup Iteration   1: 183,022 ms/op
# Warmup Iteration   2: 181,609 ms/op
# Warmup Iteration   3: 170,544 ms/op
# Warmup Iteration   4: 162,074 ms/op
# Warmup Iteration   5: 161,456 ms/op
# Warmup Iteration   6: 161,567 ms/op
# Warmup Iteration   7: 162,696 ms/op
# Warmup Iteration   8: 161,315 ms/op
# Warmup Iteration   9: 161,376 ms/op
# Warmup Iteration  10: 161,034 ms/op
Iteration   1: 161,188 ms/op
Iteration   2: 161,499 ms/op
Iteration   3: 161,433 ms/op
Iteration   4: 161,641 ms/op
Iteration   5: 161,707 ms/op
Iteration   6: 162,151 ms/op
Iteration   7: 161,323 ms/op
Iteration   8: 161,464 ms/op
Iteration   9: 162,356 ms/op
Iteration  10: 161,298 ms/op


Result "benchmarkFind":
  161,606 ±(99.9%) 0,571 ms/op [Average]
  (min, avg, max) = (161,188, 161,606, 162,356), stdev = 0,377
  CI (99.9%): [161,036, 162,177] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 2, patternSize = 2)

# Run progress: 8,82% complete, ETA 12:14:26
# Fork: 1 of 1
# Warmup Iteration   1: 0,575 ms/op
# Warmup Iteration   2: 0,543 ms/op
# Warmup Iteration   3: 0,544 ms/op
# Warmup Iteration   4: 0,543 ms/op
# Warmup Iteration   5: 0,542 ms/op
# Warmup Iteration   6: 0,544 ms/op
# Warmup Iteration   7: 0,543 ms/op
# Warmup Iteration   8: 0,542 ms/op
# Warmup Iteration   9: 0,545 ms/op
# Warmup Iteration  10: 0,544 ms/op
Iteration   1: 0,545 ms/op
Iteration   2: 0,545 ms/op
Iteration   3: 0,544 ms/op
Iteration   4: 0,543 ms/op
Iteration   5: 0,548 ms/op
Iteration   6: 0,542 ms/op
Iteration   7: 0,544 ms/op
Iteration   8: 0,546 ms/op
Iteration   9: 0,547 ms/op
Iteration  10: 0,548 ms/op


Result "benchmarkFind":
  0,545 ±(99.9%) 0,003 ms/op [Average]
  (min, avg, max) = (0,542, 0,545, 0,548), stdev = 0,002
  CI (99.9%): [0,542, 0,548] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 2, patternSize = 4)

# Run progress: 8,87% complete, ETA 12:13:46
# Fork: 1 of 1
# Warmup Iteration   1: 14,327 ms/op
# Warmup Iteration   2: 14,202 ms/op
# Warmup Iteration   3: 13,436 ms/op
# Warmup Iteration   4: 13,486 ms/op
# Warmup Iteration   5: 14,733 ms/op
# Warmup Iteration   6: 13,509 ms/op
# Warmup Iteration   7: 13,476 ms/op
# Warmup Iteration   8: 13,589 ms/op
# Warmup Iteration   9: 13,582 ms/op
# Warmup Iteration  10: 13,496 ms/op
Iteration   1: 13,597 ms/op
Iteration   2: 13,549 ms/op
Iteration   3: 13,592 ms/op
Iteration   4: 13,486 ms/op
Iteration   5: 13,719 ms/op
Iteration   6: 13,490 ms/op
Iteration   7: 13,477 ms/op
Iteration   8: 13,550 ms/op
Iteration   9: 13,530 ms/op
Iteration  10: 14,099 ms/op


Result "benchmarkFind":
  13,609 ±(99.9%) 0,282 ms/op [Average]
  (min, avg, max) = (13,477, 13,609, 14,099), stdev = 0,186
  CI (99.9%): [13,327, 13,891] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 2, patternSize = 8)

# Run progress: 8,92% complete, ETA 12:13:09
# Fork: 1 of 1
# Warmup Iteration   1: 14,290 ms/op
# Warmup Iteration   2: 14,148 ms/op
# Warmup Iteration   3: 14,147 ms/op
# Warmup Iteration   4: 14,135 ms/op
# Warmup Iteration   5: 14,177 ms/op
# Warmup Iteration   6: 14,084 ms/op
# Warmup Iteration   7: 14,115 ms/op
# Warmup Iteration   8: 14,105 ms/op
# Warmup Iteration   9: 14,062 ms/op
# Warmup Iteration  10: 14,072 ms/op
Iteration   1: 14,170 ms/op
Iteration   2: 14,060 ms/op
Iteration   3: 14,062 ms/op
Iteration   4: 14,032 ms/op
Iteration   5: 14,143 ms/op
Iteration   6: 14,098 ms/op
Iteration   7: 14,055 ms/op
Iteration   8: 14,071 ms/op
Iteration   9: 14,179 ms/op
Iteration  10: 14,183 ms/op


Result "benchmarkFind":
  14,105 ±(99.9%) 0,088 ms/op [Average]
  (min, avg, max) = (14,032, 14,105, 14,183), stdev = 0,058
  CI (99.9%): [14,018, 14,193] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 2, patternSize = 16)

# Run progress: 8,96% complete, ETA 12:12:33
# Fork: 1 of 1
# Warmup Iteration   1: 14,243 ms/op
# Warmup Iteration   2: 14,009 ms/op
# Warmup Iteration   3: 14,038 ms/op
# Warmup Iteration   4: 14,057 ms/op
# Warmup Iteration   5: 13,965 ms/op
# Warmup Iteration   6: 13,941 ms/op
# Warmup Iteration   7: 13,955 ms/op
# Warmup Iteration   8: 14,002 ms/op
# Warmup Iteration   9: 13,949 ms/op
# Warmup Iteration  10: 14,068 ms/op
Iteration   1: 14,126 ms/op
Iteration   2: 13,908 ms/op
Iteration   3: 13,928 ms/op
Iteration   4: 13,933 ms/op
Iteration   5: 13,938 ms/op
Iteration   6: 13,972 ms/op
Iteration   7: 13,933 ms/op
Iteration   8: 13,968 ms/op
Iteration   9: 13,951 ms/op
Iteration  10: 13,934 ms/op


Result "benchmarkFind":
  13,959 ±(99.9%) 0,093 ms/op [Average]
  (min, avg, max) = (13,908, 13,959, 14,126), stdev = 0,062
  CI (99.9%): [13,866, 14,052] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 2, patternSize = 32)

# Run progress: 9,01% complete, ETA 12:11:57
# Fork: 1 of 1
# Warmup Iteration   1: 14,306 ms/op
# Warmup Iteration   2: 15,573 ms/op
# Warmup Iteration   3: 14,998 ms/op
# Warmup Iteration   4: 14,235 ms/op
# Warmup Iteration   5: 14,188 ms/op
# Warmup Iteration   6: 14,256 ms/op
# Warmup Iteration   7: 14,193 ms/op
# Warmup Iteration   8: 14,081 ms/op
# Warmup Iteration   9: 14,243 ms/op
# Warmup Iteration  10: 14,210 ms/op
Iteration   1: 14,250 ms/op
Iteration   2: 14,086 ms/op
Iteration   3: 14,206 ms/op
Iteration   4: 14,197 ms/op
Iteration   5: 14,131 ms/op
Iteration   6: 14,115 ms/op
Iteration   7: 14,098 ms/op
Iteration   8: 14,348 ms/op
Iteration   9: 14,137 ms/op
Iteration  10: 14,269 ms/op


Result "benchmarkFind":
  14,184 ±(99.9%) 0,129 ms/op [Average]
  (min, avg, max) = (14,086, 14,184, 14,348), stdev = 0,086
  CI (99.9%): [14,054, 14,313] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 2, patternSize = 64)

# Run progress: 9,05% complete, ETA 12:11:21
# Fork: 1 of 1
# Warmup Iteration   1: 14,221 ms/op
# Warmup Iteration   2: 14,063 ms/op
# Warmup Iteration   3: 14,009 ms/op
# Warmup Iteration   4: 14,047 ms/op
# Warmup Iteration   5: 13,998 ms/op
# Warmup Iteration   6: 14,053 ms/op
# Warmup Iteration   7: 14,117 ms/op
# Warmup Iteration   8: 14,086 ms/op
# Warmup Iteration   9: 14,105 ms/op
# Warmup Iteration  10: 14,019 ms/op
Iteration   1: 14,122 ms/op
Iteration   2: 14,029 ms/op
Iteration   3: 14,020 ms/op
Iteration   4: 14,009 ms/op
Iteration   5: 14,017 ms/op
Iteration   6: 14,027 ms/op
Iteration   7: 14,027 ms/op
Iteration   8: 14,081 ms/op
Iteration   9: 14,031 ms/op
Iteration  10: 14,126 ms/op


Result "benchmarkFind":
  14,049 ±(99.9%) 0,067 ms/op [Average]
  (min, avg, max) = (14,009, 14,049, 14,126), stdev = 0,044
  CI (99.9%): [13,982, 14,116] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 2, patternSize = 128)

# Run progress: 9,10% complete, ETA 12:10:46
# Fork: 1 of 1
# Warmup Iteration   1: 14,318 ms/op
# Warmup Iteration   2: 14,117 ms/op
# Warmup Iteration   3: 14,159 ms/op
# Warmup Iteration   4: 14,192 ms/op
# Warmup Iteration   5: 14,081 ms/op
# Warmup Iteration   6: 14,120 ms/op
# Warmup Iteration   7: 14,178 ms/op
# Warmup Iteration   8: 14,172 ms/op
# Warmup Iteration   9: 14,130 ms/op
# Warmup Iteration  10: 14,232 ms/op
Iteration   1: 14,266 ms/op
Iteration   2: 14,146 ms/op
Iteration   3: 14,149 ms/op
Iteration   4: 14,211 ms/op
Iteration   5: 14,120 ms/op
Iteration   6: 14,118 ms/op
Iteration   7: 14,185 ms/op
Iteration   8: 14,205 ms/op
Iteration   9: 14,164 ms/op
Iteration  10: 14,117 ms/op


Result "benchmarkFind":
  14,168 ±(99.9%) 0,074 ms/op [Average]
  (min, avg, max) = (14,117, 14,168, 14,266), stdev = 0,049
  CI (99.9%): [14,094, 14,242] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 2, patternSize = 256)

# Run progress: 9,15% complete, ETA 12:10:09
# Fork: 1 of 1
# Warmup Iteration   1: 14,354 ms/op
# Warmup Iteration   2: 14,194 ms/op
# Warmup Iteration   3: 14,198 ms/op
# Warmup Iteration   4: 14,169 ms/op
# Warmup Iteration   5: 14,180 ms/op
# Warmup Iteration   6: 14,045 ms/op
# Warmup Iteration   7: 14,198 ms/op
# Warmup Iteration   8: 14,145 ms/op
# Warmup Iteration   9: 14,118 ms/op
# Warmup Iteration  10: 14,088 ms/op
Iteration   1: 14,221 ms/op
Iteration   2: 14,110 ms/op
Iteration   3: 14,155 ms/op
Iteration   4: 14,205 ms/op
Iteration   5: 14,101 ms/op
Iteration   6: 14,213 ms/op
Iteration   7: 14,154 ms/op
Iteration   8: 14,225 ms/op
Iteration   9: 14,224 ms/op
Iteration  10: 14,203 ms/op


Result "benchmarkFind":
  14,181 ±(99.9%) 0,072 ms/op [Average]
  (min, avg, max) = (14,101, 14,181, 14,225), stdev = 0,047
  CI (99.9%): [14,109, 14,253] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 8, patternSize = 2)

# Run progress: 9,19% complete, ETA 12:09:35
# Fork: 1 of 1
# Warmup Iteration   1: 4,041 ms/op
# Warmup Iteration   2: 3,784 ms/op
# Warmup Iteration   3: 3,773 ms/op
# Warmup Iteration   4: 3,864 ms/op
# Warmup Iteration   5: 3,811 ms/op
# Warmup Iteration   6: 3,792 ms/op
# Warmup Iteration   7: 3,850 ms/op
# Warmup Iteration   8: 3,793 ms/op
# Warmup Iteration   9: 3,785 ms/op
# Warmup Iteration  10: 3,771 ms/op
Iteration   1: 3,749 ms/op
Iteration   2: 3,772 ms/op
Iteration   3: 3,756 ms/op
Iteration   4: 3,778 ms/op
Iteration   5: 3,759 ms/op
Iteration   6: 3,760 ms/op
Iteration   7: 3,771 ms/op
Iteration   8: 3,784 ms/op
Iteration   9: 3,789 ms/op
Iteration  10: 3,788 ms/op


Result "benchmarkFind":
  3,771 ±(99.9%) 0,021 ms/op [Average]
  (min, avg, max) = (3,749, 3,771, 3,789), stdev = 0,014
  CI (99.9%): [3,749, 3,792] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 8, patternSize = 4)

# Run progress: 9,24% complete, ETA 12:08:56
# Fork: 1 of 1
# Warmup Iteration   1: 56,417 ms/op
# Warmup Iteration   2: 53,767 ms/op
# Warmup Iteration   3: 53,981 ms/op
# Warmup Iteration   4: 53,538 ms/op
# Warmup Iteration   5: 53,703 ms/op
# Warmup Iteration   6: 53,689 ms/op
# Warmup Iteration   7: 53,744 ms/op
# Warmup Iteration   8: 53,572 ms/op
# Warmup Iteration   9: 53,546 ms/op
# Warmup Iteration  10: 53,541 ms/op
Iteration   1: 53,556 ms/op
Iteration   2: 53,690 ms/op
Iteration   3: 53,784 ms/op
Iteration   4: 53,522 ms/op
Iteration   5: 53,629 ms/op
Iteration   6: 53,484 ms/op
Iteration   7: 53,557 ms/op
Iteration   8: 59,084 ms/op
Iteration   9: 53,718 ms/op
Iteration  10: 53,524 ms/op


Result "benchmarkFind":
  54,155 ±(99.9%) 2,623 ms/op [Average]
  (min, avg, max) = (53,484, 54,155, 59,084), stdev = 1,735
  CI (99.9%): [51,532, 56,778] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 8, patternSize = 8)

# Run progress: 9,28% complete, ETA 12:08:24
# Fork: 1 of 1
# Warmup Iteration   1: 57,309 ms/op
# Warmup Iteration   2: 56,274 ms/op
# Warmup Iteration   3: 56,526 ms/op
# Warmup Iteration   4: 56,345 ms/op
# Warmup Iteration   5: 56,279 ms/op
# Warmup Iteration   6: 56,157 ms/op
# Warmup Iteration   7: 56,278 ms/op
# Warmup Iteration   8: 56,195 ms/op
# Warmup Iteration   9: 56,056 ms/op
# Warmup Iteration  10: 56,050 ms/op
Iteration   1: 56,140 ms/op
Iteration   2: 56,018 ms/op
Iteration   3: 56,273 ms/op
Iteration   4: 56,260 ms/op
Iteration   5: 56,055 ms/op
Iteration   6: 56,029 ms/op
Iteration   7: 56,032 ms/op
Iteration   8: 56,247 ms/op
Iteration   9: 56,209 ms/op
Iteration  10: 56,198 ms/op


Result "benchmarkFind":
  56,146 ±(99.9%) 0,157 ms/op [Average]
  (min, avg, max) = (56,018, 56,146, 56,273), stdev = 0,104
  CI (99.9%): [55,989, 56,303] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 8, patternSize = 16)

# Run progress: 9,33% complete, ETA 12:07:51
# Fork: 1 of 1
# Warmup Iteration   1: 56,669 ms/op
# Warmup Iteration   2: 56,147 ms/op
# Warmup Iteration   3: 56,135 ms/op
# Warmup Iteration   4: 56,051 ms/op
# Warmup Iteration   5: 56,074 ms/op
# Warmup Iteration   6: 56,238 ms/op
# Warmup Iteration   7: 56,154 ms/op
# Warmup Iteration   8: 55,942 ms/op
# Warmup Iteration   9: 56,030 ms/op
# Warmup Iteration  10: 55,934 ms/op
Iteration   1: 56,155 ms/op
Iteration   2: 56,004 ms/op
Iteration   3: 55,875 ms/op
Iteration   4: 56,002 ms/op
Iteration   5: 56,099 ms/op
Iteration   6: 56,133 ms/op
Iteration   7: 56,036 ms/op
Iteration   8: 55,878 ms/op
Iteration   9: 55,926 ms/op
Iteration  10: 55,863 ms/op


Result "benchmarkFind":
  55,997 ±(99.9%) 0,165 ms/op [Average]
  (min, avg, max) = (55,863, 55,997, 56,155), stdev = 0,109
  CI (99.9%): [55,832, 56,162] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 8, patternSize = 32)

# Run progress: 9,38% complete, ETA 12:07:17
# Fork: 1 of 1
# Warmup Iteration   1: 56,857 ms/op
# Warmup Iteration   2: 56,621 ms/op
# Warmup Iteration   3: 56,516 ms/op
# Warmup Iteration   4: 56,977 ms/op
# Warmup Iteration   5: 56,675 ms/op
# Warmup Iteration   6: 56,548 ms/op
# Warmup Iteration   7: 56,525 ms/op
# Warmup Iteration   8: 56,171 ms/op
# Warmup Iteration   9: 56,584 ms/op
# Warmup Iteration  10: 56,514 ms/op
Iteration   1: 56,157 ms/op
Iteration   2: 56,415 ms/op
Iteration   3: 57,079 ms/op
Iteration   4: 56,926 ms/op
Iteration   5: 61,720 ms/op
Iteration   6: 56,074 ms/op
Iteration   7: 55,848 ms/op
Iteration   8: 56,231 ms/op
Iteration   9: 55,862 ms/op
Iteration  10: 56,082 ms/op


Result "benchmarkFind":
  56,839 ±(99.9%) 2,667 ms/op [Average]
  (min, avg, max) = (55,848, 56,839, 61,720), stdev = 1,764
  CI (99.9%): [54,173, 59,506] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 8, patternSize = 64)

# Run progress: 9,42% complete, ETA 12:06:45
# Fork: 1 of 1
# Warmup Iteration   1: 58,126 ms/op
# Warmup Iteration   2: 56,955 ms/op
# Warmup Iteration   3: 56,908 ms/op
# Warmup Iteration   4: 56,526 ms/op
# Warmup Iteration   5: 56,525 ms/op
# Warmup Iteration   6: 57,015 ms/op
# Warmup Iteration   7: 56,527 ms/op
# Warmup Iteration   8: 57,212 ms/op
# Warmup Iteration   9: 57,174 ms/op
# Warmup Iteration  10: 56,608 ms/op
Iteration   1: 56,613 ms/op
Iteration   2: 57,191 ms/op
Iteration   3: 56,622 ms/op
Iteration   4: 56,741 ms/op
Iteration   5: 56,570 ms/op
Iteration   6: 57,015 ms/op
Iteration   7: 56,452 ms/op
Iteration   8: 56,408 ms/op
Iteration   9: 56,433 ms/op
Iteration  10: 56,267 ms/op


Result "benchmarkFind":
  56,631 ±(99.9%) 0,431 ms/op [Average]
  (min, avg, max) = (56,267, 56,631, 57,191), stdev = 0,285
  CI (99.9%): [56,201, 57,062] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 8, patternSize = 128)

# Run progress: 9,47% complete, ETA 12:06:13
# Fork: 1 of 1
# Warmup Iteration   1: 56,667 ms/op
# Warmup Iteration   2: 55,969 ms/op
# Warmup Iteration   3: 56,355 ms/op
# Warmup Iteration   4: 56,305 ms/op
# Warmup Iteration   5: 55,946 ms/op
# Warmup Iteration   6: 56,137 ms/op
# Warmup Iteration   7: 56,738 ms/op
# Warmup Iteration   8: 56,257 ms/op
# Warmup Iteration   9: 56,056 ms/op
# Warmup Iteration  10: 56,055 ms/op
Iteration   1: 55,854 ms/op
Iteration   2: 56,822 ms/op
Iteration   3: 55,910 ms/op
Iteration   4: 55,862 ms/op
Iteration   5: 57,380 ms/op
Iteration   6: 56,269 ms/op
Iteration   7: 56,571 ms/op
Iteration   8: 55,958 ms/op
Iteration   9: 56,641 ms/op
Iteration  10: 55,999 ms/op


Result "benchmarkFind":
  56,327 ±(99.9%) 0,776 ms/op [Average]
  (min, avg, max) = (55,854, 56,327, 57,380), stdev = 0,514
  CI (99.9%): [55,550, 57,103] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 8, patternSize = 256)

# Run progress: 9,51% complete, ETA 12:05:40
# Fork: 1 of 1
# Warmup Iteration   1: 58,006 ms/op
# Warmup Iteration   2: 59,823 ms/op
# Warmup Iteration   3: 57,288 ms/op
# Warmup Iteration   4: 56,514 ms/op
# Warmup Iteration   5: 56,668 ms/op
# Warmup Iteration   6: 56,737 ms/op
# Warmup Iteration   7: 56,731 ms/op
# Warmup Iteration   8: 56,527 ms/op
# Warmup Iteration   9: 57,197 ms/op
# Warmup Iteration  10: 56,604 ms/op
Iteration   1: 56,957 ms/op
Iteration   2: 62,229 ms/op
Iteration   3: 56,572 ms/op
Iteration   4: 56,489 ms/op
Iteration   5: 56,460 ms/op
Iteration   6: 56,841 ms/op
Iteration   7: 56,354 ms/op
Iteration   8: 56,249 ms/op
Iteration   9: 56,567 ms/op
Iteration  10: 56,873 ms/op


Result "benchmarkFind":
  57,159 ±(99.9%) 2,716 ms/op [Average]
  (min, avg, max) = (56,249, 57,159, 62,229), stdev = 1,796
  CI (99.9%): [54,444, 59,875] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 32, patternSize = 2)

# Run progress: 9,56% complete, ETA 12:05:09
# Fork: 1 of 1
# Warmup Iteration   1: 36,528 ms/op
# Warmup Iteration   2: 36,207 ms/op
# Warmup Iteration   3: 35,768 ms/op
# Warmup Iteration   4: 35,601 ms/op
# Warmup Iteration   5: 35,505 ms/op
# Warmup Iteration   6: 35,474 ms/op
# Warmup Iteration   7: 35,390 ms/op
# Warmup Iteration   8: 35,299 ms/op
# Warmup Iteration   9: 35,561 ms/op
# Warmup Iteration  10: 35,356 ms/op
Iteration   1: 35,428 ms/op
Iteration   2: 35,600 ms/op
Iteration   3: 35,331 ms/op
Iteration   4: 35,406 ms/op
Iteration   5: 35,410 ms/op
Iteration   6: 35,267 ms/op
Iteration   7: 35,471 ms/op
Iteration   8: 35,247 ms/op
Iteration   9: 35,339 ms/op
Iteration  10: 35,354 ms/op


Result "benchmarkFind":
  35,385 ±(99.9%) 0,156 ms/op [Average]
  (min, avg, max) = (35,247, 35,385, 35,600), stdev = 0,103
  CI (99.9%): [35,229, 35,541] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 32, patternSize = 4)

# Run progress: 9,60% complete, ETA 12:04:37
# Fork: 1 of 1
# Warmup Iteration   1: 236,213 ms/op
# Warmup Iteration   2: 226,976 ms/op
# Warmup Iteration   3: 225,868 ms/op
# Warmup Iteration   4: 227,476 ms/op
# Warmup Iteration   5: 225,534 ms/op
# Warmup Iteration   6: 225,812 ms/op
# Warmup Iteration   7: 225,639 ms/op
# Warmup Iteration   8: 227,429 ms/op
# Warmup Iteration   9: 226,998 ms/op
# Warmup Iteration  10: 227,039 ms/op
Iteration   1: 225,701 ms/op
Iteration   2: 226,511 ms/op
Iteration   3: 225,983 ms/op
Iteration   4: 227,675 ms/op
Iteration   5: 226,900 ms/op
Iteration   6: 226,033 ms/op
Iteration   7: 226,509 ms/op
Iteration   8: 226,586 ms/op
Iteration   9: 226,046 ms/op
Iteration  10: 227,161 ms/op


Result "benchmarkFind":
  226,511 ±(99.9%) 0,917 ms/op [Average]
  (min, avg, max) = (225,701, 226,511, 227,675), stdev = 0,607
  CI (99.9%): [225,593, 227,428] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 32, patternSize = 8)

# Run progress: 9,65% complete, ETA 12:04:27
# Fork: 1 of 1
# Warmup Iteration   1: 229,952 ms/op
# Warmup Iteration   2: 228,900 ms/op
# Warmup Iteration   3: 227,669 ms/op
# Warmup Iteration   4: 228,396 ms/op
# Warmup Iteration   5: 228,236 ms/op
# Warmup Iteration   6: 237,865 ms/op
# Warmup Iteration   7: 227,147 ms/op
# Warmup Iteration   8: 227,380 ms/op
# Warmup Iteration   9: 226,424 ms/op
# Warmup Iteration  10: 226,498 ms/op
Iteration   1: 226,086 ms/op
Iteration   2: 228,083 ms/op
Iteration   3: 229,740 ms/op
Iteration   4: 238,433 ms/op
Iteration   5: 228,443 ms/op
Iteration   6: 227,505 ms/op
Iteration   7: 226,823 ms/op
Iteration   8: 226,556 ms/op
Iteration   9: 227,320 ms/op
Iteration  10: 227,068 ms/op


Result "benchmarkFind":
  228,606 ±(99.9%) 5,454 ms/op [Average]
  (min, avg, max) = (226,086, 228,606, 238,433), stdev = 3,607
  CI (99.9%): [223,152, 234,059] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 32, patternSize = 16)

# Run progress: 9,70% complete, ETA 12:04:19
# Fork: 1 of 1
# Warmup Iteration   1: 229,065 ms/op
# Warmup Iteration   2: 227,312 ms/op
# Warmup Iteration   3: 226,044 ms/op
# Warmup Iteration   4: 225,078 ms/op
# Warmup Iteration   5: 227,771 ms/op
# Warmup Iteration   6: 228,593 ms/op
# Warmup Iteration   7: 226,266 ms/op
# Warmup Iteration   8: 227,602 ms/op
# Warmup Iteration   9: 226,822 ms/op
# Warmup Iteration  10: 227,266 ms/op
Iteration   1: 228,116 ms/op
Iteration   2: 226,950 ms/op
Iteration   3: 226,340 ms/op
Iteration   4: 227,539 ms/op
Iteration   5: 226,985 ms/op
Iteration   6: 227,328 ms/op
Iteration   7: 226,637 ms/op
Iteration   8: 227,417 ms/op
Iteration   9: 226,089 ms/op
Iteration  10: 225,901 ms/op


Result "benchmarkFind":
  226,930 ±(99.9%) 1,054 ms/op [Average]
  (min, avg, max) = (225,901, 226,930, 228,116), stdev = 0,697
  CI (99.9%): [225,876, 227,984] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 32, patternSize = 32)

# Run progress: 9,74% complete, ETA 12:04:09
# Fork: 1 of 1
# Warmup Iteration   1: 228,449 ms/op
# Warmup Iteration   2: 226,363 ms/op
# Warmup Iteration   3: 225,964 ms/op
# Warmup Iteration   4: 226,211 ms/op
# Warmup Iteration   5: 226,983 ms/op
# Warmup Iteration   6: 226,413 ms/op
# Warmup Iteration   7: 225,866 ms/op
# Warmup Iteration   8: 227,477 ms/op
# Warmup Iteration   9: 226,758 ms/op
# Warmup Iteration  10: 225,534 ms/op
Iteration   1: 225,777 ms/op
Iteration   2: 226,258 ms/op
Iteration   3: 227,852 ms/op
Iteration   4: 226,724 ms/op
Iteration   5: 227,194 ms/op
Iteration   6: 226,632 ms/op
Iteration   7: 241,570 ms/op
Iteration   8: 227,681 ms/op
Iteration   9: 226,772 ms/op
Iteration  10: 226,376 ms/op


Result "benchmarkFind":
  228,284 ±(99.9%) 7,122 ms/op [Average]
  (min, avg, max) = (225,777, 228,284, 241,570), stdev = 4,711
  CI (99.9%): [221,161, 235,406] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 32, patternSize = 64)

# Run progress: 9,79% complete, ETA 12:04:01
# Fork: 1 of 1
# Warmup Iteration   1: 229,119 ms/op
# Warmup Iteration   2: 226,112 ms/op
# Warmup Iteration   3: 226,978 ms/op
# Warmup Iteration   4: 227,853 ms/op
# Warmup Iteration   5: 228,193 ms/op
# Warmup Iteration   6: 228,064 ms/op
# Warmup Iteration   7: 226,510 ms/op
# Warmup Iteration   8: 228,164 ms/op
# Warmup Iteration   9: 227,025 ms/op
# Warmup Iteration  10: 226,262 ms/op
Iteration   1: 226,386 ms/op
Iteration   2: 226,258 ms/op
Iteration   3: 225,501 ms/op
Iteration   4: 226,570 ms/op
Iteration   5: 227,092 ms/op
Iteration   6: 227,814 ms/op
Iteration   7: 227,497 ms/op
Iteration   8: 227,719 ms/op
Iteration   9: 226,334 ms/op
Iteration  10: 227,095 ms/op


Result "benchmarkFind":
  226,826 ±(99.9%) 1,121 ms/op [Average]
  (min, avg, max) = (225,501, 226,826, 227,814), stdev = 0,741
  CI (99.9%): [225,705, 227,947] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 32, patternSize = 128)

# Run progress: 9,83% complete, ETA 12:03:50
# Fork: 1 of 1
# Warmup Iteration   1: 227,047 ms/op
# Warmup Iteration   2: 225,248 ms/op
# Warmup Iteration   3: 225,644 ms/op
# Warmup Iteration   4: 225,791 ms/op
# Warmup Iteration   5: 227,337 ms/op
# Warmup Iteration   6: 225,446 ms/op
# Warmup Iteration   7: 226,228 ms/op
# Warmup Iteration   8: 225,566 ms/op
# Warmup Iteration   9: 225,287 ms/op
# Warmup Iteration  10: 227,251 ms/op
Iteration   1: 224,599 ms/op
Iteration   2: 226,375 ms/op
Iteration   3: 224,968 ms/op
Iteration   4: 225,310 ms/op
Iteration   5: 224,971 ms/op
Iteration   6: 226,577 ms/op
Iteration   7: 225,205 ms/op
Iteration   8: 226,113 ms/op
Iteration   9: 225,056 ms/op
Iteration  10: 227,766 ms/op


Result "benchmarkFind":
  225,694 ±(99.9%) 1,491 ms/op [Average]
  (min, avg, max) = (224,599, 225,694, 227,766), stdev = 0,986
  CI (99.9%): [224,203, 227,185] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 32, patternSize = 256)

# Run progress: 9,88% complete, ETA 12:03:40
# Fork: 1 of 1
# Warmup Iteration   1: 227,203 ms/op
# Warmup Iteration   2: 227,560 ms/op
# Warmup Iteration   3: 226,329 ms/op
# Warmup Iteration   4: 226,119 ms/op
# Warmup Iteration   5: 227,007 ms/op
# Warmup Iteration   6: 226,973 ms/op
# Warmup Iteration   7: 226,159 ms/op
# Warmup Iteration   8: 246,009 ms/op
# Warmup Iteration   9: 225,977 ms/op
# Warmup Iteration  10: 227,607 ms/op
Iteration   1: 225,488 ms/op
Iteration   2: 227,165 ms/op
Iteration   3: 228,650 ms/op
Iteration   4: 227,662 ms/op
Iteration   5: 226,755 ms/op
Iteration   6: 226,336 ms/op
Iteration   7: 229,015 ms/op
Iteration   8: 227,985 ms/op
Iteration   9: 226,374 ms/op
Iteration  10: 228,237 ms/op


Result "benchmarkFind":
  227,367 ±(99.9%) 1,715 ms/op [Average]
  (min, avg, max) = (225,488, 227,367, 229,015), stdev = 1,135
  CI (99.9%): [225,652, 229,082] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 128, patternSize = 2)

# Run progress: 9,93% complete, ETA 12:03:30
# Fork: 1 of 1
# Warmup Iteration   1: 365,562 ms/op
# Warmup Iteration   2: 347,405 ms/op
# Warmup Iteration   3: 343,973 ms/op
# Warmup Iteration   4: 343,898 ms/op
# Warmup Iteration   5: 342,734 ms/op
# Warmup Iteration   6: 343,957 ms/op
# Warmup Iteration   7: 345,058 ms/op
# Warmup Iteration   8: 346,155 ms/op
# Warmup Iteration   9: 344,246 ms/op
# Warmup Iteration  10: 342,473 ms/op
Iteration   1: 344,485 ms/op
Iteration   2: 343,052 ms/op
Iteration   3: 344,162 ms/op
Iteration   4: 343,089 ms/op
Iteration   5: 349,247 ms/op
Iteration   6: 342,518 ms/op
Iteration   7: 340,174 ms/op
Iteration   8: 342,646 ms/op
Iteration   9: 342,065 ms/op
Iteration  10: 342,287 ms/op


Result "benchmarkFind":
  343,373 ±(99.9%) 3,596 ms/op [Average]
  (min, avg, max) = (340,174, 343,373, 349,247), stdev = 2,379
  CI (99.9%): [339,776, 346,969] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 128, patternSize = 4)

# Run progress: 9,97% complete, ETA 12:02:59
# Fork: 1 of 1
# Warmup Iteration   1: 1052,797 ms/op
# Warmup Iteration   2: 1031,545 ms/op
# Warmup Iteration   3: 1010,604 ms/op
# Warmup Iteration   4: 1002,786 ms/op
# Warmup Iteration   5: 1002,509 ms/op
# Warmup Iteration   6: 1009,693 ms/op
# Warmup Iteration   7: 1006,419 ms/op
# Warmup Iteration   8: 1010,883 ms/op
# Warmup Iteration   9: 1001,768 ms/op
# Warmup Iteration  10: 999,971 ms/op
Iteration   1: 1003,011 ms/op
Iteration   2: 1006,683 ms/op
Iteration   3: 1002,380 ms/op
Iteration   4: 1005,406 ms/op
Iteration   5: 1009,913 ms/op
Iteration   6: 1008,261 ms/op
Iteration   7: 1005,148 ms/op
Iteration   8: 1006,465 ms/op
Iteration   9: 1000,822 ms/op
Iteration  10: 1000,774 ms/op


Result "benchmarkFind":
  1004,886 ±(99.9%) 4,672 ms/op [Average]
  (min, avg, max) = (1000,774, 1004,886, 1009,913), stdev = 3,090
  CI (99.9%): [1000,214, 1009,558] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 128, patternSize = 8)

# Run progress: 10,02% complete, ETA 12:02:35
# Fork: 1 of 1
# Warmup Iteration   1: 913,580 ms/op
# Warmup Iteration   2: 948,534 ms/op
# Warmup Iteration   3: 904,582 ms/op
# Warmup Iteration   4: 899,241 ms/op
# Warmup Iteration   5: 904,005 ms/op
# Warmup Iteration   6: 879,001 ms/op
# Warmup Iteration   7: 858,222 ms/op
# Warmup Iteration   8: 856,328 ms/op
# Warmup Iteration   9: 852,844 ms/op
# Warmup Iteration  10: 854,137 ms/op
Iteration   1: 852,647 ms/op
Iteration   2: 854,022 ms/op
Iteration   3: 855,261 ms/op
Iteration   4: 851,934 ms/op
Iteration   5: 856,643 ms/op
Iteration   6: 853,109 ms/op
Iteration   7: 853,669 ms/op
Iteration   8: 860,496 ms/op
Iteration   9: 859,336 ms/op
Iteration  10: 860,519 ms/op


Result "benchmarkFind":
  855,764 ±(99.9%) 4,980 ms/op [Average]
  (min, avg, max) = (851,934, 855,764, 860,519), stdev = 3,294
  CI (99.9%): [850,783, 860,744] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 128, patternSize = 16)

# Run progress: 10,06% complete, ETA 12:04:13
# Fork: 1 of 1
# Warmup Iteration   1: 913,631 ms/op
# Warmup Iteration   2: 906,711 ms/op
# Warmup Iteration   3: 908,182 ms/op
# Warmup Iteration   4: 907,132 ms/op
# Warmup Iteration   5: 897,969 ms/op
# Warmup Iteration   6: 901,691 ms/op
# Warmup Iteration   7: 872,238 ms/op
# Warmup Iteration   8: 862,042 ms/op
# Warmup Iteration   9: 859,989 ms/op
# Warmup Iteration  10: 865,246 ms/op
Iteration   1: 862,947 ms/op
Iteration   2: 858,985 ms/op
Iteration   3: 856,853 ms/op
Iteration   4: 860,930 ms/op
Iteration   5: 856,832 ms/op
Iteration   6: 916,249 ms/op
Iteration   7: 863,356 ms/op
Iteration   8: 859,607 ms/op
Iteration   9: 861,354 ms/op
Iteration  10: 870,079 ms/op


Result "benchmarkFind":
  866,719 ±(99.9%) 26,941 ms/op [Average]
  (min, avg, max) = (856,832, 866,719, 916,249), stdev = 17,820
  CI (99.9%): [839,778, 893,660] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 128, patternSize = 32)

# Run progress: 10,11% complete, ETA 12:05:53
# Fork: 1 of 1
# Warmup Iteration   1: 927,671 ms/op
# Warmup Iteration   2: 904,312 ms/op
# Warmup Iteration   3: 904,442 ms/op
# Warmup Iteration   4: 902,509 ms/op
# Warmup Iteration   5: 900,712 ms/op
# Warmup Iteration   6: 903,578 ms/op
# Warmup Iteration   7: 885,426 ms/op
# Warmup Iteration   8: 871,762 ms/op
# Warmup Iteration   9: 869,704 ms/op
# Warmup Iteration  10: 873,065 ms/op
Iteration   1: 873,946 ms/op
Iteration   2: 875,003 ms/op
Iteration   3: 865,978 ms/op
Iteration   4: 870,734 ms/op
Iteration   5: 868,958 ms/op
Iteration   6: 872,922 ms/op
Iteration   7: 867,499 ms/op
Iteration   8: 869,152 ms/op
Iteration   9: 865,283 ms/op
Iteration  10: 868,758 ms/op


Result "benchmarkFind":
  869,823 ±(99.9%) 4,973 ms/op [Average]
  (min, avg, max) = (865,283, 869,823, 875,003), stdev = 3,290
  CI (99.9%): [864,850, 874,797] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 128, patternSize = 64)

# Run progress: 10,16% complete, ETA 12:07:32
# Fork: 1 of 1
# Warmup Iteration   1: 925,754 ms/op
# Warmup Iteration   2: 925,314 ms/op
# Warmup Iteration   3: 925,342 ms/op
# Warmup Iteration   4: 921,856 ms/op
# Warmup Iteration   5: 927,673 ms/op
# Warmup Iteration   6: 919,131 ms/op
# Warmup Iteration   7: 885,934 ms/op
# Warmup Iteration   8: 859,017 ms/op
# Warmup Iteration   9: 900,287 ms/op
# Warmup Iteration  10: 858,219 ms/op
Iteration   1: 856,073 ms/op
Iteration   2: 857,657 ms/op
Iteration   3: 860,598 ms/op
Iteration   4: 853,671 ms/op
Iteration   5: 859,454 ms/op
Iteration   6: 858,509 ms/op
Iteration   7: 859,418 ms/op
Iteration   8: 861,559 ms/op
Iteration   9: 859,985 ms/op
Iteration  10: 857,588 ms/op


Result "benchmarkFind":
  858,451 ±(99.9%) 3,507 ms/op [Average]
  (min, avg, max) = (853,671, 858,451, 861,559), stdev = 2,320
  CI (99.9%): [854,944, 861,959] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 128, patternSize = 128)

# Run progress: 10,20% complete, ETA 12:09:10
# Fork: 1 of 1
# Warmup Iteration   1: 908,934 ms/op
# Warmup Iteration   2: 902,232 ms/op
# Warmup Iteration   3: 899,171 ms/op
# Warmup Iteration   4: 898,710 ms/op
# Warmup Iteration   5: 901,831 ms/op
# Warmup Iteration   6: 901,449 ms/op
# Warmup Iteration   7: 874,868 ms/op
# Warmup Iteration   8: 862,394 ms/op
# Warmup Iteration   9: 860,704 ms/op
# Warmup Iteration  10: 864,598 ms/op
Iteration   1: 869,346 ms/op
Iteration   2: 866,655 ms/op
Iteration   3: 867,240 ms/op
Iteration   4: 862,002 ms/op
Iteration   5: 865,373 ms/op
Iteration   6: 861,020 ms/op
Iteration   7: 859,233 ms/op
Iteration   8: 859,721 ms/op
Iteration   9: 861,062 ms/op
Iteration  10: 862,065 ms/op


Result "benchmarkFind":
  863,372 ±(99.9%) 5,294 ms/op [Average]
  (min, avg, max) = (859,233, 863,372, 869,346), stdev = 3,502
  CI (99.9%): [858,078, 868,666] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 128, patternSize = 256)

# Run progress: 10,25% complete, ETA 12:10:45
# Fork: 1 of 1
# Warmup Iteration   1: 913,201 ms/op
# Warmup Iteration   2: 936,133 ms/op
# Warmup Iteration   3: 904,379 ms/op
# Warmup Iteration   4: 902,287 ms/op
# Warmup Iteration   5: 906,107 ms/op
# Warmup Iteration   6: 903,882 ms/op
# Warmup Iteration   7: 879,445 ms/op
# Warmup Iteration   8: 855,823 ms/op
# Warmup Iteration   9: 854,196 ms/op
# Warmup Iteration  10: 856,161 ms/op
Iteration   1: 859,126 ms/op
Iteration   2: 856,221 ms/op
Iteration   3: 856,994 ms/op
Iteration   4: 862,670 ms/op
Iteration   5: 881,791 ms/op
Iteration   6: 853,332 ms/op
Iteration   7: 852,482 ms/op
Iteration   8: 854,513 ms/op
Iteration   9: 853,336 ms/op
Iteration  10: 853,632 ms/op


Result "benchmarkFind":
  858,410 ±(99.9%) 13,303 ms/op [Average]
  (min, avg, max) = (852,482, 858,410, 881,791), stdev = 8,799
  CI (99.9%): [845,107, 871,713] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 2, patternSize = 2)

# Run progress: 10,29% complete, ETA 12:12:19
# Fork: 1 of 1
# Warmup Iteration   1: 1,431 ms/op
# Warmup Iteration   2: 1,380 ms/op
# Warmup Iteration   3: 1,374 ms/op
# Warmup Iteration   4: 1,377 ms/op
# Warmup Iteration   5: 1,374 ms/op
# Warmup Iteration   6: 1,381 ms/op
# Warmup Iteration   7: 1,401 ms/op
# Warmup Iteration   8: 1,424 ms/op
# Warmup Iteration   9: 1,376 ms/op
# Warmup Iteration  10: 1,371 ms/op
Iteration   1: 1,370 ms/op
Iteration   2: 1,371 ms/op
Iteration   3: 1,372 ms/op
Iteration   4: 1,368 ms/op
Iteration   5: 1,374 ms/op
Iteration   6: 1,372 ms/op
Iteration   7: 1,381 ms/op
Iteration   8: 1,371 ms/op
Iteration   9: 1,376 ms/op
Iteration  10: 1,372 ms/op


Result "benchmarkFind":
  1,373 ±(99.9%) 0,006 ms/op [Average]
  (min, avg, max) = (1,368, 1,373, 1,381), stdev = 0,004
  CI (99.9%): [1,367, 1,378] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 2, patternSize = 4)

# Run progress: 10,34% complete, ETA 12:11:39
# Fork: 1 of 1
# Warmup Iteration   1: 1,298 ms/op
# Warmup Iteration   2: 1,278 ms/op
# Warmup Iteration   3: 1,228 ms/op
# Warmup Iteration   4: 1,222 ms/op
# Warmup Iteration   5: 1,241 ms/op
# Warmup Iteration   6: 1,232 ms/op
# Warmup Iteration   7: 1,276 ms/op
# Warmup Iteration   8: 1,250 ms/op
# Warmup Iteration   9: 1,208 ms/op
# Warmup Iteration  10: 1,214 ms/op
Iteration   1: 1,212 ms/op
Iteration   2: 1,215 ms/op
Iteration   3: 1,209 ms/op
Iteration   4: 1,209 ms/op
Iteration   5: 1,210 ms/op
Iteration   6: 1,215 ms/op
Iteration   7: 1,212 ms/op
Iteration   8: 1,209 ms/op
Iteration   9: 1,208 ms/op
Iteration  10: 1,208 ms/op


Result "benchmarkFind":
  1,211 ±(99.9%) 0,004 ms/op [Average]
  (min, avg, max) = (1,208, 1,211, 1,215), stdev = 0,003
  CI (99.9%): [1,207, 1,215] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 2, patternSize = 8)

# Run progress: 10,39% complete, ETA 12:10:59
# Fork: 1 of 1
# Warmup Iteration   1: 1,315 ms/op
# Warmup Iteration   2: 1,291 ms/op
# Warmup Iteration   3: 1,292 ms/op
# Warmup Iteration   4: 1,284 ms/op
# Warmup Iteration   5: 1,247 ms/op
# Warmup Iteration   6: 1,242 ms/op
# Warmup Iteration   7: 1,249 ms/op
# Warmup Iteration   8: 1,244 ms/op
# Warmup Iteration   9: 1,241 ms/op
# Warmup Iteration  10: 1,243 ms/op
Iteration   1: 1,238 ms/op
Iteration   2: 1,233 ms/op
Iteration   3: 1,234 ms/op
Iteration   4: 1,237 ms/op
Iteration   5: 1,236 ms/op
Iteration   6: 1,250 ms/op
Iteration   7: 1,256 ms/op
Iteration   8: 1,238 ms/op
Iteration   9: 1,237 ms/op
Iteration  10: 1,239 ms/op


Result "benchmarkFind":
  1,240 ±(99.9%) 0,011 ms/op [Average]
  (min, avg, max) = (1,233, 1,240, 1,256), stdev = 0,007
  CI (99.9%): [1,229, 1,251] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 2, patternSize = 16)

# Run progress: 10,43% complete, ETA 12:10:20
# Fork: 1 of 1
# Warmup Iteration   1: 1,306 ms/op
# Warmup Iteration   2: 1,293 ms/op
# Warmup Iteration   3: 1,292 ms/op
# Warmup Iteration   4: 1,279 ms/op
# Warmup Iteration   5: 1,224 ms/op
# Warmup Iteration   6: 1,221 ms/op
# Warmup Iteration   7: 1,219 ms/op
# Warmup Iteration   8: 1,217 ms/op
# Warmup Iteration   9: 1,214 ms/op
# Warmup Iteration  10: 1,216 ms/op
Iteration   1: 1,217 ms/op
Iteration   2: 1,214 ms/op
Iteration   3: 1,219 ms/op
Iteration   4: 1,216 ms/op
Iteration   5: 1,220 ms/op
Iteration   6: 1,214 ms/op
Iteration   7: 1,215 ms/op
Iteration   8: 1,213 ms/op
Iteration   9: 1,219 ms/op
Iteration  10: 1,213 ms/op


Result "benchmarkFind":
  1,216 ±(99.9%) 0,004 ms/op [Average]
  (min, avg, max) = (1,213, 1,216, 1,220), stdev = 0,002
  CI (99.9%): [1,212, 1,220] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 2, patternSize = 32)

# Run progress: 10,48% complete, ETA 12:09:40
# Fork: 1 of 1
# Warmup Iteration   1: 1,308 ms/op
# Warmup Iteration   2: 1,280 ms/op
# Warmup Iteration   3: 1,273 ms/op
# Warmup Iteration   4: 1,264 ms/op
# Warmup Iteration   5: 1,220 ms/op
# Warmup Iteration   6: 1,323 ms/op
# Warmup Iteration   7: 1,222 ms/op
# Warmup Iteration   8: 1,223 ms/op
# Warmup Iteration   9: 1,221 ms/op
# Warmup Iteration  10: 1,226 ms/op
Iteration   1: 1,228 ms/op
Iteration   2: 1,221 ms/op
Iteration   3: 1,222 ms/op
Iteration   4: 1,228 ms/op
Iteration   5: 1,227 ms/op
Iteration   6: 1,220 ms/op
Iteration   7: 1,220 ms/op
Iteration   8: 1,227 ms/op
Iteration   9: 1,238 ms/op
Iteration  10: 1,224 ms/op


Result "benchmarkFind":
  1,226 ±(99.9%) 0,008 ms/op [Average]
  (min, avg, max) = (1,220, 1,226, 1,238), stdev = 0,006
  CI (99.9%): [1,217, 1,234] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 2, patternSize = 64)

# Run progress: 10,52% complete, ETA 12:09:01
# Fork: 1 of 1
# Warmup Iteration   1: 1,298 ms/op
# Warmup Iteration   2: 1,275 ms/op
# Warmup Iteration   3: 1,268 ms/op
# Warmup Iteration   4: 1,264 ms/op
# Warmup Iteration   5: 1,255 ms/op
# Warmup Iteration   6: 1,244 ms/op
# Warmup Iteration   7: 1,258 ms/op
# Warmup Iteration   8: 1,245 ms/op
# Warmup Iteration   9: 1,248 ms/op
# Warmup Iteration  10: 1,251 ms/op
Iteration   1: 1,243 ms/op
Iteration   2: 1,245 ms/op
Iteration   3: 1,242 ms/op
Iteration   4: 1,249 ms/op
Iteration   5: 1,254 ms/op
Iteration   6: 1,257 ms/op
Iteration   7: 1,237 ms/op
Iteration   8: 1,248 ms/op
Iteration   9: 1,249 ms/op
Iteration  10: 1,245 ms/op


Result "benchmarkFind":
  1,247 ±(99.9%) 0,009 ms/op [Average]
  (min, avg, max) = (1,237, 1,247, 1,257), stdev = 0,006
  CI (99.9%): [1,238, 1,256] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 2, patternSize = 128)

# Run progress: 10,57% complete, ETA 12:08:22
# Fork: 1 of 1
# Warmup Iteration   1: 1,292 ms/op
# Warmup Iteration   2: 1,273 ms/op
# Warmup Iteration   3: 1,272 ms/op
# Warmup Iteration   4: 1,262 ms/op
# Warmup Iteration   5: 1,229 ms/op
# Warmup Iteration   6: 1,226 ms/op
# Warmup Iteration   7: 1,230 ms/op
# Warmup Iteration   8: 1,223 ms/op
# Warmup Iteration   9: 1,234 ms/op
# Warmup Iteration  10: 1,229 ms/op
Iteration   1: 1,223 ms/op
Iteration   2: 1,226 ms/op
Iteration   3: 1,222 ms/op
Iteration   4: 1,220 ms/op
Iteration   5: 1,245 ms/op
Iteration   6: 1,279 ms/op
Iteration   7: 1,225 ms/op
Iteration   8: 1,221 ms/op
Iteration   9: 1,229 ms/op
Iteration  10: 1,233 ms/op


Result "benchmarkFind":
  1,232 ±(99.9%) 0,027 ms/op [Average]
  (min, avg, max) = (1,220, 1,232, 1,279), stdev = 0,018
  CI (99.9%): [1,205, 1,259] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 2, patternSize = 256)

# Run progress: 10,62% complete, ETA 12:07:44
# Fork: 1 of 1
# Warmup Iteration   1: 1,316 ms/op
# Warmup Iteration   2: 1,278 ms/op
# Warmup Iteration   3: 1,281 ms/op
# Warmup Iteration   4: 1,335 ms/op
# Warmup Iteration   5: 1,266 ms/op
# Warmup Iteration   6: 1,226 ms/op
# Warmup Iteration   7: 1,228 ms/op
# Warmup Iteration   8: 1,235 ms/op
# Warmup Iteration   9: 1,231 ms/op
# Warmup Iteration  10: 1,235 ms/op
Iteration   1: 1,231 ms/op
Iteration   2: 1,235 ms/op
Iteration   3: 1,240 ms/op
Iteration   4: 1,241 ms/op
Iteration   5: 1,256 ms/op
Iteration   6: 1,226 ms/op
Iteration   7: 1,226 ms/op
Iteration   8: 1,229 ms/op
Iteration   9: 1,232 ms/op
Iteration  10: 1,227 ms/op


Result "benchmarkFind":
  1,234 ±(99.9%) 0,014 ms/op [Average]
  (min, avg, max) = (1,226, 1,234, 1,256), stdev = 0,009
  CI (99.9%): [1,220, 1,248] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 8, patternSize = 2)

# Run progress: 10,66% complete, ETA 12:07:05
# Fork: 1 of 1
# Warmup Iteration   1: 7,590 ms/op
# Warmup Iteration   2: 7,207 ms/op
# Warmup Iteration   3: 7,185 ms/op
# Warmup Iteration   4: 7,270 ms/op
# Warmup Iteration   5: 7,227 ms/op
# Warmup Iteration   6: 7,250 ms/op
# Warmup Iteration   7: 7,227 ms/op
# Warmup Iteration   8: 7,235 ms/op
# Warmup Iteration   9: 7,186 ms/op
# Warmup Iteration  10: 7,216 ms/op
Iteration   1: 7,218 ms/op
Iteration   2: 7,278 ms/op
Iteration   3: 7,284 ms/op
Iteration   4: 7,199 ms/op
Iteration   5: 7,199 ms/op
Iteration   6: 7,259 ms/op
Iteration   7: 7,193 ms/op
Iteration   8: 7,240 ms/op
Iteration   9: 7,241 ms/op
Iteration  10: 7,274 ms/op


Result "benchmarkFind":
  7,238 ±(99.9%) 0,053 ms/op [Average]
  (min, avg, max) = (7,193, 7,238, 7,284), stdev = 0,035
  CI (99.9%): [7,186, 7,291] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 8, patternSize = 4)

# Run progress: 10,71% complete, ETA 12:06:28
# Fork: 1 of 1
# Warmup Iteration   1: 5,186 ms/op
# Warmup Iteration   2: 5,095 ms/op
# Warmup Iteration   3: 5,113 ms/op
# Warmup Iteration   4: 4,893 ms/op
# Warmup Iteration   5: 4,891 ms/op
# Warmup Iteration   6: 4,899 ms/op
# Warmup Iteration   7: 4,893 ms/op
# Warmup Iteration   8: 4,894 ms/op
# Warmup Iteration   9: 4,896 ms/op
# Warmup Iteration  10: 4,904 ms/op
Iteration   1: 4,893 ms/op
Iteration   2: 4,892 ms/op
Iteration   3: 4,897 ms/op
Iteration   4: 4,894 ms/op
Iteration   5: 4,892 ms/op
Iteration   6: 4,893 ms/op
Iteration   7: 4,899 ms/op
Iteration   8: 4,894 ms/op
Iteration   9: 4,892 ms/op
Iteration  10: 4,896 ms/op


Result "benchmarkFind":
  4,894 ±(99.9%) 0,004 ms/op [Average]
  (min, avg, max) = (4,892, 4,894, 4,899), stdev = 0,003
  CI (99.9%): [4,890, 4,898] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 8, patternSize = 8)

# Run progress: 10,75% complete, ETA 12:05:50
# Fork: 1 of 1
# Warmup Iteration   1: 5,190 ms/op
# Warmup Iteration   2: 5,125 ms/op
# Warmup Iteration   3: 5,521 ms/op
# Warmup Iteration   4: 5,104 ms/op
# Warmup Iteration   5: 5,054 ms/op
# Warmup Iteration   6: 4,932 ms/op
# Warmup Iteration   7: 4,949 ms/op
# Warmup Iteration   8: 4,945 ms/op
# Warmup Iteration   9: 4,993 ms/op
# Warmup Iteration  10: 4,971 ms/op
Iteration   1: 4,954 ms/op
Iteration   2: 4,939 ms/op
Iteration   3: 4,976 ms/op
Iteration   4: 4,968 ms/op
Iteration   5: 4,923 ms/op
Iteration   6: 4,987 ms/op
Iteration   7: 4,969 ms/op
Iteration   8: 4,966 ms/op
Iteration   9: 4,987 ms/op
Iteration  10: 4,928 ms/op


Result "benchmarkFind":
  4,960 ±(99.9%) 0,035 ms/op [Average]
  (min, avg, max) = (4,923, 4,960, 4,987), stdev = 0,023
  CI (99.9%): [4,925, 4,994] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 8, patternSize = 16)

# Run progress: 10,80% complete, ETA 12:05:12
# Fork: 1 of 1
# Warmup Iteration   1: 5,239 ms/op
# Warmup Iteration   2: 5,173 ms/op
# Warmup Iteration   3: 5,119 ms/op
# Warmup Iteration   4: 5,081 ms/op
# Warmup Iteration   5: 4,984 ms/op
# Warmup Iteration   6: 4,972 ms/op
# Warmup Iteration   7: 4,982 ms/op
# Warmup Iteration   8: 4,956 ms/op
# Warmup Iteration   9: 4,951 ms/op
# Warmup Iteration  10: 5,001 ms/op
Iteration   1: 4,958 ms/op
Iteration   2: 4,962 ms/op
Iteration   3: 4,966 ms/op
Iteration   4: 5,021 ms/op
Iteration   5: 4,947 ms/op
Iteration   6: 5,016 ms/op
Iteration   7: 4,999 ms/op
Iteration   8: 4,978 ms/op
Iteration   9: 4,972 ms/op
Iteration  10: 4,962 ms/op


Result "benchmarkFind":
  4,978 ±(99.9%) 0,038 ms/op [Average]
  (min, avg, max) = (4,947, 4,978, 5,021), stdev = 0,025
  CI (99.9%): [4,940, 5,016] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 8, patternSize = 32)

# Run progress: 10,85% complete, ETA 12:04:34
# Fork: 1 of 1
# Warmup Iteration   1: 5,187 ms/op
# Warmup Iteration   2: 5,065 ms/op
# Warmup Iteration   3: 5,087 ms/op
# Warmup Iteration   4: 5,014 ms/op
# Warmup Iteration   5: 4,999 ms/op
# Warmup Iteration   6: 4,922 ms/op
# Warmup Iteration   7: 4,914 ms/op
# Warmup Iteration   8: 4,961 ms/op
# Warmup Iteration   9: 4,948 ms/op
# Warmup Iteration  10: 4,931 ms/op
Iteration   1: 4,938 ms/op
Iteration   2: 4,973 ms/op
Iteration   3: 4,949 ms/op
Iteration   4: 4,898 ms/op
Iteration   5: 4,933 ms/op
Iteration   6: 4,893 ms/op
Iteration   7: 4,948 ms/op
Iteration   8: 4,959 ms/op
Iteration   9: 4,950 ms/op
Iteration  10: 4,984 ms/op


Result "benchmarkFind":
  4,942 ±(99.9%) 0,044 ms/op [Average]
  (min, avg, max) = (4,893, 4,942, 4,984), stdev = 0,029
  CI (99.9%): [4,899, 4,986] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 8, patternSize = 64)

# Run progress: 10,89% complete, ETA 12:03:57
# Fork: 1 of 1
# Warmup Iteration   1: 5,794 ms/op
# Warmup Iteration   2: 5,089 ms/op
# Warmup Iteration   3: 5,111 ms/op
# Warmup Iteration   4: 5,079 ms/op
# Warmup Iteration   5: 5,034 ms/op
# Warmup Iteration   6: 5,001 ms/op
# Warmup Iteration   7: 4,939 ms/op
# Warmup Iteration   8: 4,980 ms/op
# Warmup Iteration   9: 4,922 ms/op
# Warmup Iteration  10: 4,953 ms/op
Iteration   1: 4,937 ms/op
Iteration   2: 4,991 ms/op
Iteration   3: 4,968 ms/op
Iteration   4: 4,944 ms/op
Iteration   5: 4,929 ms/op
Iteration   6: 4,957 ms/op
Iteration   7: 4,972 ms/op
Iteration   8: 4,963 ms/op
Iteration   9: 4,943 ms/op
Iteration  10: 4,942 ms/op


Result "benchmarkFind":
  4,955 ±(99.9%) 0,029 ms/op [Average]
  (min, avg, max) = (4,929, 4,955, 4,991), stdev = 0,019
  CI (99.9%): [4,926, 4,983] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 8, patternSize = 128)

# Run progress: 10,94% complete, ETA 12:03:19
# Fork: 1 of 1
# Warmup Iteration   1: 5,245 ms/op
# Warmup Iteration   2: 5,149 ms/op
# Warmup Iteration   3: 5,098 ms/op
# Warmup Iteration   4: 5,104 ms/op
# Warmup Iteration   5: 4,975 ms/op
# Warmup Iteration   6: 4,927 ms/op
# Warmup Iteration   7: 4,928 ms/op
# Warmup Iteration   8: 4,984 ms/op
# Warmup Iteration   9: 4,960 ms/op
# Warmup Iteration  10: 4,968 ms/op
Iteration   1: 4,923 ms/op
Iteration   2: 4,953 ms/op
Iteration   3: 4,931 ms/op
Iteration   4: 4,974 ms/op
Iteration   5: 4,954 ms/op
Iteration   6: 4,911 ms/op
Iteration   7: 4,919 ms/op
Iteration   8: 4,914 ms/op
Iteration   9: 4,935 ms/op
Iteration  10: 4,959 ms/op


Result "benchmarkFind":
  4,937 ±(99.9%) 0,033 ms/op [Average]
  (min, avg, max) = (4,911, 4,937, 4,974), stdev = 0,022
  CI (99.9%): [4,904, 4,970] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 8, patternSize = 256)

# Run progress: 10,98% complete, ETA 12:02:42
# Fork: 1 of 1
# Warmup Iteration   1: 5,214 ms/op
# Warmup Iteration   2: 5,111 ms/op
# Warmup Iteration   3: 5,104 ms/op
# Warmup Iteration   4: 5,129 ms/op
# Warmup Iteration   5: 5,004 ms/op
# Warmup Iteration   6: 4,976 ms/op
# Warmup Iteration   7: 4,934 ms/op
# Warmup Iteration   8: 4,961 ms/op
# Warmup Iteration   9: 4,933 ms/op
# Warmup Iteration  10: 4,942 ms/op
Iteration   1: 4,930 ms/op
Iteration   2: 4,957 ms/op
Iteration   3: 4,925 ms/op
Iteration   4: 4,974 ms/op
Iteration   5: 4,938 ms/op
Iteration   6: 5,001 ms/op
Iteration   7: 4,989 ms/op
Iteration   8: 4,966 ms/op
Iteration   9: 4,988 ms/op
Iteration  10: 5,190 ms/op


Result "benchmarkFind":
  4,986 ±(99.9%) 0,115 ms/op [Average]
  (min, avg, max) = (4,925, 4,986, 5,190), stdev = 0,076
  CI (99.9%): [4,871, 5,101] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 32, patternSize = 2)

# Run progress: 11,03% complete, ETA 12:02:04
# Fork: 1 of 1
# Warmup Iteration   1: 53,171 ms/op
# Warmup Iteration   2: 51,265 ms/op
# Warmup Iteration   3: 51,485 ms/op
# Warmup Iteration   4: 51,410 ms/op
# Warmup Iteration   5: 51,402 ms/op
# Warmup Iteration   6: 51,265 ms/op
# Warmup Iteration   7: 51,569 ms/op
# Warmup Iteration   8: 51,466 ms/op
# Warmup Iteration   9: 51,240 ms/op
# Warmup Iteration  10: 51,275 ms/op
Iteration   1: 51,131 ms/op
Iteration   2: 51,511 ms/op
Iteration   3: 51,256 ms/op
Iteration   4: 51,442 ms/op
Iteration   5: 51,592 ms/op
Iteration   6: 51,530 ms/op
Iteration   7: 51,288 ms/op
Iteration   8: 52,283 ms/op
Iteration   9: 51,229 ms/op
Iteration  10: 51,360 ms/op


Result "benchmarkFind":
  51,462 ±(99.9%) 0,490 ms/op [Average]
  (min, avg, max) = (51,131, 51,462, 52,283), stdev = 0,324
  CI (99.9%): [50,973, 51,952] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 32, patternSize = 4)

# Run progress: 11,08% complete, ETA 12:01:31
# Fork: 1 of 1
# Warmup Iteration   1: 20,614 ms/op
# Warmup Iteration   2: 19,993 ms/op
# Warmup Iteration   3: 19,917 ms/op
# Warmup Iteration   4: 19,911 ms/op
# Warmup Iteration   5: 19,835 ms/op
# Warmup Iteration   6: 19,775 ms/op
# Warmup Iteration   7: 20,010 ms/op
# Warmup Iteration   8: 19,759 ms/op
# Warmup Iteration   9: 19,774 ms/op
# Warmup Iteration  10: 19,901 ms/op
Iteration   1: 19,691 ms/op
Iteration   2: 19,735 ms/op
Iteration   3: 19,698 ms/op
Iteration   4: 19,928 ms/op
Iteration   5: 19,777 ms/op
Iteration   6: 19,893 ms/op
Iteration   7: 19,751 ms/op
Iteration   8: 19,741 ms/op
Iteration   9: 19,893 ms/op
Iteration  10: 19,715 ms/op


Result "benchmarkFind":
  19,782 ±(99.9%) 0,134 ms/op [Average]
  (min, avg, max) = (19,691, 19,782, 19,928), stdev = 0,089
  CI (99.9%): [19,648, 19,916] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 32, patternSize = 8)

# Run progress: 11,12% complete, ETA 12:00:55
# Fork: 1 of 1
# Warmup Iteration   1: 20,638 ms/op
# Warmup Iteration   2: 20,569 ms/op
# Warmup Iteration   3: 20,504 ms/op
# Warmup Iteration   4: 20,465 ms/op
# Warmup Iteration   5: 19,763 ms/op
# Warmup Iteration   6: 19,703 ms/op
# Warmup Iteration   7: 19,703 ms/op
# Warmup Iteration   8: 19,845 ms/op
# Warmup Iteration   9: 19,693 ms/op
# Warmup Iteration  10: 19,720 ms/op
Iteration   1: 19,886 ms/op
Iteration   2: 19,806 ms/op
Iteration   3: 19,709 ms/op
Iteration   4: 19,720 ms/op
Iteration   5: 19,637 ms/op
Iteration   6: 19,609 ms/op
Iteration   7: 20,819 ms/op
Iteration   8: 20,204 ms/op
Iteration   9: 19,723 ms/op
Iteration  10: 19,686 ms/op


Result "benchmarkFind":
  19,880 ±(99.9%) 0,561 ms/op [Average]
  (min, avg, max) = (19,609, 19,880, 20,819), stdev = 0,371
  CI (99.9%): [19,318, 20,441] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 32, patternSize = 16)

# Run progress: 11,17% complete, ETA 12:00:20
# Fork: 1 of 1
# Warmup Iteration   1: 20,650 ms/op
# Warmup Iteration   2: 20,386 ms/op
# Warmup Iteration   3: 20,572 ms/op
# Warmup Iteration   4: 20,432 ms/op
# Warmup Iteration   5: 20,078 ms/op
# Warmup Iteration   6: 19,937 ms/op
# Warmup Iteration   7: 19,974 ms/op
# Warmup Iteration   8: 20,009 ms/op
# Warmup Iteration   9: 19,880 ms/op
# Warmup Iteration  10: 19,997 ms/op
Iteration   1: 20,010 ms/op
Iteration   2: 20,023 ms/op
Iteration   3: 19,938 ms/op
Iteration   4: 20,040 ms/op
Iteration   5: 19,989 ms/op
Iteration   6: 19,836 ms/op
Iteration   7: 20,068 ms/op
Iteration   8: 20,000 ms/op
Iteration   9: 19,925 ms/op
Iteration  10: 19,982 ms/op


Result "benchmarkFind":
  19,981 ±(99.9%) 0,101 ms/op [Average]
  (min, avg, max) = (19,836, 19,981, 20,068), stdev = 0,067
  CI (99.9%): [19,880, 20,082] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 32, patternSize = 32)

# Run progress: 11,21% complete, ETA 11:59:45
# Fork: 1 of 1
# Warmup Iteration   1: 20,745 ms/op
# Warmup Iteration   2: 20,514 ms/op
# Warmup Iteration   3: 20,477 ms/op
# Warmup Iteration   4: 20,116 ms/op
# Warmup Iteration   5: 19,695 ms/op
# Warmup Iteration   6: 19,617 ms/op
# Warmup Iteration   7: 19,581 ms/op
# Warmup Iteration   8: 19,705 ms/op
# Warmup Iteration   9: 19,723 ms/op
# Warmup Iteration  10: 19,737 ms/op
Iteration   1: 19,550 ms/op
Iteration   2: 19,775 ms/op
Iteration   3: 19,839 ms/op
Iteration   4: 19,513 ms/op
Iteration   5: 19,657 ms/op
Iteration   6: 19,691 ms/op
Iteration   7: 19,690 ms/op
Iteration   8: 19,618 ms/op
Iteration   9: 19,604 ms/op
Iteration  10: 19,550 ms/op


Result "benchmarkFind":
  19,649 ±(99.9%) 0,156 ms/op [Average]
  (min, avg, max) = (19,513, 19,649, 19,839), stdev = 0,103
  CI (99.9%): [19,492, 19,805] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 32, patternSize = 64)

# Run progress: 11,26% complete, ETA 11:59:09
# Fork: 1 of 1
# Warmup Iteration   1: 20,504 ms/op
# Warmup Iteration   2: 20,121 ms/op
# Warmup Iteration   3: 20,242 ms/op
# Warmup Iteration   4: 20,098 ms/op
# Warmup Iteration   5: 19,636 ms/op
# Warmup Iteration   6: 19,537 ms/op
# Warmup Iteration   7: 19,748 ms/op
# Warmup Iteration   8: 19,751 ms/op
# Warmup Iteration   9: 19,614 ms/op
# Warmup Iteration  10: 19,672 ms/op
Iteration   1: 19,664 ms/op
Iteration   2: 19,544 ms/op
Iteration   3: 19,527 ms/op
Iteration   4: 19,658 ms/op
Iteration   5: 20,637 ms/op
Iteration   6: 20,079 ms/op
Iteration   7: 19,426 ms/op
Iteration   8: 19,414 ms/op
Iteration   9: 19,438 ms/op
Iteration  10: 19,400 ms/op


Result "benchmarkFind":
  19,679 ±(99.9%) 0,594 ms/op [Average]
  (min, avg, max) = (19,400, 19,679, 20,637), stdev = 0,393
  CI (99.9%): [19,084, 20,273] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 32, patternSize = 128)

# Run progress: 11,31% complete, ETA 11:58:33
# Fork: 1 of 1
# Warmup Iteration   1: 20,717 ms/op
# Warmup Iteration   2: 20,481 ms/op
# Warmup Iteration   3: 20,402 ms/op
# Warmup Iteration   4: 20,243 ms/op
# Warmup Iteration   5: 20,213 ms/op
# Warmup Iteration   6: 19,551 ms/op
# Warmup Iteration   7: 19,700 ms/op
# Warmup Iteration   8: 19,718 ms/op
# Warmup Iteration   9: 19,672 ms/op
# Warmup Iteration  10: 19,516 ms/op
Iteration   1: 19,622 ms/op
Iteration   2: 19,693 ms/op
Iteration   3: 19,533 ms/op
Iteration   4: 19,559 ms/op
Iteration   5: 19,756 ms/op
Iteration   6: 19,783 ms/op
Iteration   7: 19,659 ms/op
Iteration   8: 19,762 ms/op
Iteration   9: 19,735 ms/op
Iteration  10: 19,541 ms/op


Result "benchmarkFind":
  19,664 ±(99.9%) 0,145 ms/op [Average]
  (min, avg, max) = (19,533, 19,664, 19,783), stdev = 0,096
  CI (99.9%): [19,519, 19,810] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 32, patternSize = 256)

# Run progress: 11,35% complete, ETA 11:57:58
# Fork: 1 of 1
# Warmup Iteration   1: 20,823 ms/op
# Warmup Iteration   2: 20,551 ms/op
# Warmup Iteration   3: 20,382 ms/op
# Warmup Iteration   4: 20,300 ms/op
# Warmup Iteration   5: 19,661 ms/op
# Warmup Iteration   6: 19,583 ms/op
# Warmup Iteration   7: 19,582 ms/op
# Warmup Iteration   8: 19,644 ms/op
# Warmup Iteration   9: 19,807 ms/op
# Warmup Iteration  10: 19,698 ms/op
Iteration   1: 19,655 ms/op
Iteration   2: 19,659 ms/op
Iteration   3: 19,591 ms/op
Iteration   4: 19,588 ms/op
Iteration   5: 19,575 ms/op
Iteration   6: 19,720 ms/op
Iteration   7: 19,549 ms/op
Iteration   8: 19,556 ms/op
Iteration   9: 19,647 ms/op
Iteration  10: 19,739 ms/op


Result "benchmarkFind":
  19,628 ±(99.9%) 0,101 ms/op [Average]
  (min, avg, max) = (19,549, 19,628, 19,739), stdev = 0,067
  CI (99.9%): [19,527, 19,729] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 128, patternSize = 2)

# Run progress: 11,40% complete, ETA 11:57:23
# Fork: 1 of 1
# Warmup Iteration   1: 531,053 ms/op
# Warmup Iteration   2: 504,298 ms/op
# Warmup Iteration   3: 505,687 ms/op
# Warmup Iteration   4: 501,003 ms/op
# Warmup Iteration   5: 501,506 ms/op
# Warmup Iteration   6: 502,146 ms/op
# Warmup Iteration   7: 501,139 ms/op
# Warmup Iteration   8: 501,616 ms/op
# Warmup Iteration   9: 505,978 ms/op
# Warmup Iteration  10: 499,350 ms/op
Iteration   1: 501,698 ms/op
Iteration   2: 524,842 ms/op
Iteration   3: 502,627 ms/op
Iteration   4: 502,355 ms/op
Iteration   5: 502,586 ms/op
Iteration   6: 502,447 ms/op
Iteration   7: 505,533 ms/op
Iteration   8: 499,513 ms/op
Iteration   9: 505,173 ms/op
Iteration  10: 500,381 ms/op


Result "benchmarkFind":
  504,716 ±(99.9%) 11,047 ms/op [Average]
  (min, avg, max) = (499,513, 504,716, 524,842), stdev = 7,307
  CI (99.9%): [493,669, 515,763] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 128, patternSize = 4)

# Run progress: 11,44% complete, ETA 11:57:04
# Fork: 1 of 1
# Warmup Iteration   1: 80,974 ms/op
# Warmup Iteration   2: 77,950 ms/op
# Warmup Iteration   3: 77,939 ms/op
# Warmup Iteration   4: 77,984 ms/op
# Warmup Iteration   5: 78,181 ms/op
# Warmup Iteration   6: 78,016 ms/op
# Warmup Iteration   7: 78,254 ms/op
# Warmup Iteration   8: 78,015 ms/op
# Warmup Iteration   9: 77,651 ms/op
# Warmup Iteration  10: 78,734 ms/op
Iteration   1: 78,622 ms/op
Iteration   2: 78,288 ms/op
Iteration   3: 78,560 ms/op
Iteration   4: 78,147 ms/op
Iteration   5: 78,377 ms/op
Iteration   6: 77,530 ms/op
Iteration   7: 78,087 ms/op
Iteration   8: 78,257 ms/op
Iteration   9: 78,206 ms/op
Iteration  10: 78,474 ms/op


Result "benchmarkFind":
  78,255 ±(99.9%) 0,467 ms/op [Average]
  (min, avg, max) = (77,530, 78,255, 78,622), stdev = 0,309
  CI (99.9%): [77,787, 78,722] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 128, patternSize = 8)

# Run progress: 11,49% complete, ETA 11:56:30
# Fork: 1 of 1
# Warmup Iteration   1: 82,944 ms/op
# Warmup Iteration   2: 78,346 ms/op
# Warmup Iteration   3: 78,117 ms/op
# Warmup Iteration   4: 78,186 ms/op
# Warmup Iteration   5: 78,183 ms/op
# Warmup Iteration   6: 78,205 ms/op
# Warmup Iteration   7: 78,384 ms/op
# Warmup Iteration   8: 78,138 ms/op
# Warmup Iteration   9: 78,125 ms/op
# Warmup Iteration  10: 78,388 ms/op
Iteration   1: 78,278 ms/op
Iteration   2: 78,061 ms/op
Iteration   3: 78,197 ms/op
Iteration   4: 78,907 ms/op
Iteration   5: 78,321 ms/op
Iteration   6: 78,041 ms/op
Iteration   7: 78,189 ms/op
Iteration   8: 78,064 ms/op
Iteration   9: 78,376 ms/op
Iteration  10: 78,392 ms/op


Result "benchmarkFind":
  78,283 ±(99.9%) 0,385 ms/op [Average]
  (min, avg, max) = (78,041, 78,283, 78,907), stdev = 0,255
  CI (99.9%): [77,898, 78,667] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 128, patternSize = 16)

# Run progress: 11,53% complete, ETA 11:55:57
# Fork: 1 of 1
# Warmup Iteration   1: 82,433 ms/op
# Warmup Iteration   2: 78,168 ms/op
# Warmup Iteration   3: 79,547 ms/op
# Warmup Iteration   4: 78,891 ms/op
# Warmup Iteration   5: 78,574 ms/op
# Warmup Iteration   6: 78,491 ms/op
# Warmup Iteration   7: 78,748 ms/op
# Warmup Iteration   8: 78,950 ms/op
# Warmup Iteration   9: 81,911 ms/op
# Warmup Iteration  10: 77,474 ms/op
Iteration   1: 77,367 ms/op
Iteration   2: 77,354 ms/op
Iteration   3: 77,294 ms/op
Iteration   4: 77,266 ms/op
Iteration   5: 77,349 ms/op
Iteration   6: 77,792 ms/op
Iteration   7: 77,291 ms/op
Iteration   8: 77,339 ms/op
Iteration   9: 77,511 ms/op
Iteration  10: 77,248 ms/op


Result "benchmarkFind":
  77,381 ±(99.9%) 0,245 ms/op [Average]
  (min, avg, max) = (77,248, 77,381, 77,792), stdev = 0,162
  CI (99.9%): [77,136, 77,626] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 128, patternSize = 32)

# Run progress: 11,58% complete, ETA 11:55:24
# Fork: 1 of 1
# Warmup Iteration   1: 82,536 ms/op
# Warmup Iteration   2: 78,810 ms/op
# Warmup Iteration   3: 78,009 ms/op
# Warmup Iteration   4: 78,750 ms/op
# Warmup Iteration   5: 78,491 ms/op
# Warmup Iteration   6: 78,269 ms/op
# Warmup Iteration   7: 78,328 ms/op
# Warmup Iteration   8: 79,261 ms/op
# Warmup Iteration   9: 78,455 ms/op
# Warmup Iteration  10: 80,646 ms/op
Iteration   1: 78,109 ms/op
Iteration   2: 78,092 ms/op
Iteration   3: 78,270 ms/op
Iteration   4: 78,196 ms/op
Iteration   5: 78,085 ms/op
Iteration   6: 78,800 ms/op
Iteration   7: 78,543 ms/op
Iteration   8: 78,755 ms/op
Iteration   9: 78,833 ms/op
Iteration  10: 78,569 ms/op


Result "benchmarkFind":
  78,425 ±(99.9%) 0,465 ms/op [Average]
  (min, avg, max) = (78,085, 78,425, 78,833), stdev = 0,308
  CI (99.9%): [77,960, 78,891] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 128, patternSize = 64)

# Run progress: 11,63% complete, ETA 11:54:52
# Fork: 1 of 1
# Warmup Iteration   1: 82,371 ms/op
# Warmup Iteration   2: 79,154 ms/op
# Warmup Iteration   3: 78,982 ms/op
# Warmup Iteration   4: 78,631 ms/op
# Warmup Iteration   5: 78,284 ms/op
# Warmup Iteration   6: 78,367 ms/op
# Warmup Iteration   7: 78,575 ms/op
# Warmup Iteration   8: 78,466 ms/op
# Warmup Iteration   9: 78,788 ms/op
# Warmup Iteration  10: 79,052 ms/op
Iteration   1: 78,148 ms/op
Iteration   2: 77,834 ms/op
Iteration   3: 78,092 ms/op
Iteration   4: 78,249 ms/op
Iteration   5: 77,825 ms/op
Iteration   6: 78,505 ms/op
Iteration   7: 78,011 ms/op
Iteration   8: 78,679 ms/op
Iteration   9: 78,164 ms/op
Iteration  10: 78,153 ms/op


Result "benchmarkFind":
  78,166 ±(99.9%) 0,403 ms/op [Average]
  (min, avg, max) = (77,825, 78,166, 78,679), stdev = 0,267
  CI (99.9%): [77,762, 78,569] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 128, patternSize = 128)

# Run progress: 11,67% complete, ETA 11:54:20
# Fork: 1 of 1
# Warmup Iteration   1: 82,914 ms/op
# Warmup Iteration   2: 78,964 ms/op
# Warmup Iteration   3: 78,998 ms/op
# Warmup Iteration   4: 79,269 ms/op
# Warmup Iteration   5: 79,171 ms/op
# Warmup Iteration   6: 85,874 ms/op
# Warmup Iteration   7: 78,613 ms/op
# Warmup Iteration   8: 79,102 ms/op
# Warmup Iteration   9: 78,605 ms/op
# Warmup Iteration  10: 78,698 ms/op
Iteration   1: 79,146 ms/op
Iteration   2: 79,456 ms/op
Iteration   3: 78,777 ms/op
Iteration   4: 81,323 ms/op
Iteration   5: 79,757 ms/op
Iteration   6: 79,388 ms/op
Iteration   7: 79,581 ms/op
Iteration   8: 79,274 ms/op
Iteration   9: 79,365 ms/op
Iteration  10: 88,644 ms/op


Result "benchmarkFind":
  80,471 ±(99.9%) 4,460 ms/op [Average]
  (min, avg, max) = (78,777, 80,471, 88,644), stdev = 2,950
  CI (99.9%): [76,011, 84,931] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 128, patternSize = 256)

# Run progress: 11,72% complete, ETA 11:53:50
# Fork: 1 of 1
# Warmup Iteration   1: 91,391 ms/op
# Warmup Iteration   2: 87,597 ms/op
# Warmup Iteration   3: 80,602 ms/op
# Warmup Iteration   4: 80,845 ms/op
# Warmup Iteration   5: 80,771 ms/op
# Warmup Iteration   6: 80,811 ms/op
# Warmup Iteration   7: 80,527 ms/op
# Warmup Iteration   8: 81,977 ms/op
# Warmup Iteration   9: 79,482 ms/op
# Warmup Iteration  10: 80,325 ms/op
Iteration   1: 79,998 ms/op
Iteration   2: 81,181 ms/op
Iteration   3: 80,773 ms/op
Iteration   4: 79,674 ms/op
Iteration   5: 79,791 ms/op
Iteration   6: 79,388 ms/op
Iteration   7: 79,406 ms/op
Iteration   8: 80,011 ms/op
Iteration   9: 79,990 ms/op
Iteration  10: 79,828 ms/op


Result "benchmarkFind":
  80,004 ±(99.9%) 0,858 ms/op [Average]
  (min, avg, max) = (79,388, 80,004, 81,181), stdev = 0,568
  CI (99.9%): [79,146, 80,862] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 2, patternSize = 2)

# Run progress: 11,76% complete, ETA 11:53:22
# Fork: 1 of 1
# Warmup Iteration   1: 4,418 ms/op
# Warmup Iteration   2: 4,157 ms/op
# Warmup Iteration   3: 4,101 ms/op
# Warmup Iteration   4: 4,119 ms/op
# Warmup Iteration   5: 4,117 ms/op
# Warmup Iteration   6: 4,132 ms/op
# Warmup Iteration   7: 4,167 ms/op
# Warmup Iteration   8: 4,166 ms/op
# Warmup Iteration   9: 4,123 ms/op
# Warmup Iteration  10: 4,137 ms/op
Iteration   1: 4,160 ms/op
Iteration   2: 4,143 ms/op
Iteration   3: 4,110 ms/op
Iteration   4: 4,172 ms/op
Iteration   5: 4,189 ms/op
Iteration   6: 4,170 ms/op
Iteration   7: 4,168 ms/op
Iteration   8: 4,137 ms/op
Iteration   9: 4,292 ms/op
Iteration  10: 4,176 ms/op


Result "benchmarkFind":
  4,172 ±(99.9%) 0,073 ms/op [Average]
  (min, avg, max) = (4,110, 4,172, 4,292), stdev = 0,048
  CI (99.9%): [4,099, 4,244] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 2, patternSize = 4)

# Run progress: 11,81% complete, ETA 11:52:47
# Fork: 1 of 1
# Warmup Iteration   1: 4,220 ms/op
# Warmup Iteration   2: 4,117 ms/op
# Warmup Iteration   3: 4,592 ms/op
# Warmup Iteration   4: 4,134 ms/op
# Warmup Iteration   5: 4,143 ms/op
# Warmup Iteration   6: 4,117 ms/op
# Warmup Iteration   7: 4,087 ms/op
# Warmup Iteration   8: 4,036 ms/op
# Warmup Iteration   9: 4,065 ms/op
# Warmup Iteration  10: 4,131 ms/op
Iteration   1: 4,010 ms/op
Iteration   2: 4,056 ms/op
Iteration   3: 4,025 ms/op
Iteration   4: 4,048 ms/op
Iteration   5: 4,111 ms/op
Iteration   6: 4,053 ms/op
Iteration   7: 4,071 ms/op
Iteration   8: 4,115 ms/op
Iteration   9: 4,072 ms/op
Iteration  10: 4,029 ms/op


Result "benchmarkFind":
  4,059 ±(99.9%) 0,052 ms/op [Average]
  (min, avg, max) = (4,010, 4,059, 4,115), stdev = 0,035
  CI (99.9%): [4,007, 4,111] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 2, patternSize = 8)

# Run progress: 11,86% complete, ETA 11:52:13
# Fork: 1 of 1
# Warmup Iteration   1: 4,240 ms/op
# Warmup Iteration   2: 4,276 ms/op
# Warmup Iteration   3: 4,127 ms/op
# Warmup Iteration   4: 4,132 ms/op
# Warmup Iteration   5: 4,117 ms/op
# Warmup Iteration   6: 4,142 ms/op
# Warmup Iteration   7: 4,243 ms/op
# Warmup Iteration   8: 4,109 ms/op
# Warmup Iteration   9: 4,162 ms/op
# Warmup Iteration  10: 4,324 ms/op
Iteration   1: 4,258 ms/op
Iteration   2: 4,360 ms/op
Iteration   3: 4,301 ms/op
Iteration   4: 4,149 ms/op
Iteration   5: 4,153 ms/op
Iteration   6: 4,080 ms/op
Iteration   7: 4,022 ms/op
Iteration   8: 4,047 ms/op
Iteration   9: 4,079 ms/op
Iteration  10: 4,101 ms/op


Result "benchmarkFind":
  4,155 ±(99.9%) 0,173 ms/op [Average]
  (min, avg, max) = (4,022, 4,155, 4,360), stdev = 0,114
  CI (99.9%): [3,982, 4,328] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 2, patternSize = 16)

# Run progress: 11,90% complete, ETA 11:51:38
# Fork: 1 of 1
# Warmup Iteration   1: 4,211 ms/op
# Warmup Iteration   2: 4,154 ms/op
# Warmup Iteration   3: 4,182 ms/op
# Warmup Iteration   4: 4,136 ms/op
# Warmup Iteration   5: 4,129 ms/op
# Warmup Iteration   6: 4,144 ms/op
# Warmup Iteration   7: 4,226 ms/op
# Warmup Iteration   8: 4,126 ms/op
# Warmup Iteration   9: 4,221 ms/op
# Warmup Iteration  10: 4,180 ms/op
Iteration   1: 4,350 ms/op
Iteration   2: 4,206 ms/op
Iteration   3: 4,281 ms/op
Iteration   4: 3,985 ms/op
Iteration   5: 4,145 ms/op
Iteration   6: 4,026 ms/op
Iteration   7: 4,004 ms/op
Iteration   8: 4,036 ms/op
Iteration   9: 4,033 ms/op
Iteration  10: 4,015 ms/op


Result "benchmarkFind":
  4,108 ±(99.9%) 0,196 ms/op [Average]
  (min, avg, max) = (3,985, 4,108, 4,350), stdev = 0,130
  CI (99.9%): [3,912, 4,304] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 2, patternSize = 32)

# Run progress: 11,95% complete, ETA 11:51:04
# Fork: 1 of 1
# Warmup Iteration   1: 4,519 ms/op
# Warmup Iteration   2: 4,197 ms/op
# Warmup Iteration   3: 4,224 ms/op
# Warmup Iteration   4: 4,151 ms/op
# Warmup Iteration   5: 4,244 ms/op
# Warmup Iteration   6: 4,192 ms/op
# Warmup Iteration   7: 4,150 ms/op
# Warmup Iteration   8: 4,127 ms/op
# Warmup Iteration   9: 4,194 ms/op
# Warmup Iteration  10: 4,143 ms/op
Iteration   1: 4,304 ms/op
Iteration   2: 4,045 ms/op
Iteration   3: 4,092 ms/op
Iteration   4: 4,270 ms/op
Iteration   5: 4,091 ms/op
Iteration   6: 4,095 ms/op
Iteration   7: 4,253 ms/op
Iteration   8: 4,509 ms/op
Iteration   9: 4,475 ms/op
Iteration  10: 4,027 ms/op


Result "benchmarkFind":
  4,216 ±(99.9%) 0,264 ms/op [Average]
  (min, avg, max) = (4,027, 4,216, 4,509), stdev = 0,175
  CI (99.9%): [3,952, 4,480] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 2, patternSize = 64)

# Run progress: 11,99% complete, ETA 11:50:31
# Fork: 1 of 1
# Warmup Iteration   1: 4,311 ms/op
# Warmup Iteration   2: 4,331 ms/op
# Warmup Iteration   3: 4,211 ms/op
# Warmup Iteration   4: 4,102 ms/op
# Warmup Iteration   5: 4,071 ms/op
# Warmup Iteration   6: 4,094 ms/op
# Warmup Iteration   7: 4,516 ms/op
# Warmup Iteration   8: 4,482 ms/op
# Warmup Iteration   9: 4,647 ms/op
# Warmup Iteration  10: 4,620 ms/op
Iteration   1: 4,057 ms/op
Iteration   2: 4,026 ms/op
Iteration   3: 4,028 ms/op
Iteration   4: 3,997 ms/op
Iteration   5: 4,022 ms/op
Iteration   6: 4,002 ms/op
Iteration   7: 4,009 ms/op
Iteration   8: 4,011 ms/op
Iteration   9: 3,999 ms/op
Iteration  10: 3,999 ms/op


Result "benchmarkFind":
  4,015 ±(99.9%) 0,028 ms/op [Average]
  (min, avg, max) = (3,997, 4,015, 4,057), stdev = 0,019
  CI (99.9%): [3,987, 4,043] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 2, patternSize = 128)

# Run progress: 12,04% complete, ETA 11:49:57
# Fork: 1 of 1
# Warmup Iteration   1: 4,137 ms/op
# Warmup Iteration   2: 4,067 ms/op
# Warmup Iteration   3: 4,053 ms/op
# Warmup Iteration   4: 4,073 ms/op
# Warmup Iteration   5: 4,059 ms/op
# Warmup Iteration   6: 4,059 ms/op
# Warmup Iteration   7: 4,034 ms/op
# Warmup Iteration   8: 4,036 ms/op
# Warmup Iteration   9: 4,056 ms/op
# Warmup Iteration  10: 4,065 ms/op
Iteration   1: 4,071 ms/op
Iteration   2: 4,067 ms/op
Iteration   3: 3,985 ms/op
Iteration   4: 3,979 ms/op
Iteration   5: 3,980 ms/op
Iteration   6: 3,997 ms/op
Iteration   7: 3,972 ms/op
Iteration   8: 4,040 ms/op
Iteration   9: 4,349 ms/op
Iteration  10: 3,982 ms/op


Result "benchmarkFind":
  4,042 ±(99.9%) 0,173 ms/op [Average]
  (min, avg, max) = (3,972, 4,042, 4,349), stdev = 0,114
  CI (99.9%): [3,869, 4,215] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 2, patternSize = 256)

# Run progress: 12,09% complete, ETA 11:49:22
# Fork: 1 of 1
# Warmup Iteration   1: 4,125 ms/op
# Warmup Iteration   2: 4,063 ms/op
# Warmup Iteration   3: 4,026 ms/op
# Warmup Iteration   4: 4,023 ms/op
# Warmup Iteration   5: 4,014 ms/op
# Warmup Iteration   6: 4,035 ms/op
# Warmup Iteration   7: 4,044 ms/op
# Warmup Iteration   8: 4,026 ms/op
# Warmup Iteration   9: 4,023 ms/op
# Warmup Iteration  10: 4,033 ms/op
Iteration   1: 4,027 ms/op
Iteration   2: 4,026 ms/op
Iteration   3: 3,994 ms/op
Iteration   4: 3,978 ms/op
Iteration   5: 3,957 ms/op
Iteration   6: 3,963 ms/op
Iteration   7: 3,950 ms/op
Iteration   8: 3,953 ms/op
Iteration   9: 3,949 ms/op
Iteration  10: 3,972 ms/op


Result "benchmarkFind":
  3,977 ±(99.9%) 0,045 ms/op [Average]
  (min, avg, max) = (3,949, 3,977, 4,027), stdev = 0,030
  CI (99.9%): [3,932, 4,022] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 8, patternSize = 2)

# Run progress: 12,13% complete, ETA 11:48:49
# Fork: 1 of 1
# Warmup Iteration   1: 18,141 ms/op
# Warmup Iteration   2: 17,473 ms/op
# Warmup Iteration   3: 17,378 ms/op
# Warmup Iteration   4: 17,434 ms/op
# Warmup Iteration   5: 17,547 ms/op
# Warmup Iteration   6: 17,608 ms/op
# Warmup Iteration   7: 17,736 ms/op
# Warmup Iteration   8: 17,522 ms/op
# Warmup Iteration   9: 17,423 ms/op
# Warmup Iteration  10: 17,471 ms/op
Iteration   1: 17,382 ms/op
Iteration   2: 17,495 ms/op
Iteration   3: 17,558 ms/op
Iteration   4: 17,569 ms/op
Iteration   5: 17,443 ms/op
Iteration   6: 17,533 ms/op
Iteration   7: 17,459 ms/op
Iteration   8: 17,428 ms/op
Iteration   9: 17,598 ms/op
Iteration  10: 17,402 ms/op


Result "benchmarkFind":
  17,487 ±(99.9%) 0,113 ms/op [Average]
  (min, avg, max) = (17,382, 17,487, 17,598), stdev = 0,075
  CI (99.9%): [17,373, 17,600] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 8, patternSize = 4)

# Run progress: 12,18% complete, ETA 11:48:16
# Fork: 1 of 1
# Warmup Iteration   1: 16,423 ms/op
# Warmup Iteration   2: 16,168 ms/op
# Warmup Iteration   3: 16,161 ms/op
# Warmup Iteration   4: 16,124 ms/op
# Warmup Iteration   5: 16,202 ms/op
# Warmup Iteration   6: 16,172 ms/op
# Warmup Iteration   7: 16,221 ms/op
# Warmup Iteration   8: 16,242 ms/op
# Warmup Iteration   9: 16,193 ms/op
# Warmup Iteration  10: 16,195 ms/op
Iteration   1: 16,016 ms/op
Iteration   2: 15,822 ms/op
Iteration   3: 15,811 ms/op
Iteration   4: 15,806 ms/op
Iteration   5: 15,929 ms/op
Iteration   6: 15,871 ms/op
Iteration   7: 17,483 ms/op
Iteration   8: 15,782 ms/op
Iteration   9: 15,892 ms/op
Iteration  10: 15,896 ms/op


Result "benchmarkFind":
  16,031 ±(99.9%) 0,779 ms/op [Average]
  (min, avg, max) = (15,782, 16,031, 17,483), stdev = 0,515
  CI (99.9%): [15,252, 16,809] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 8, patternSize = 8)

# Run progress: 12,22% complete, ETA 11:47:44
# Fork: 1 of 1
# Warmup Iteration   1: 16,458 ms/op
# Warmup Iteration   2: 16,300 ms/op
# Warmup Iteration   3: 16,196 ms/op
# Warmup Iteration   4: 16,209 ms/op
# Warmup Iteration   5: 16,141 ms/op
# Warmup Iteration   6: 16,108 ms/op
# Warmup Iteration   7: 16,205 ms/op
# Warmup Iteration   8: 16,126 ms/op
# Warmup Iteration   9: 16,098 ms/op
# Warmup Iteration  10: 16,182 ms/op
Iteration   1: 16,128 ms/op
Iteration   2: 16,078 ms/op
Iteration   3: 16,216 ms/op
Iteration   4: 16,174 ms/op
Iteration   5: 15,837 ms/op
Iteration   6: 15,893 ms/op
Iteration   7: 15,780 ms/op
Iteration   8: 16,143 ms/op
Iteration   9: 15,897 ms/op
Iteration  10: 15,802 ms/op


Result "benchmarkFind":
  15,995 ±(99.9%) 0,255 ms/op [Average]
  (min, avg, max) = (15,780, 15,995, 16,216), stdev = 0,169
  CI (99.9%): [15,740, 16,250] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 8, patternSize = 16)

# Run progress: 12,27% complete, ETA 11:47:11
# Fork: 1 of 1
# Warmup Iteration   1: 16,591 ms/op
# Warmup Iteration   2: 16,255 ms/op
# Warmup Iteration   3: 16,110 ms/op
# Warmup Iteration   4: 16,146 ms/op
# Warmup Iteration   5: 16,205 ms/op
# Warmup Iteration   6: 16,066 ms/op
# Warmup Iteration   7: 16,203 ms/op
# Warmup Iteration   8: 16,120 ms/op
# Warmup Iteration   9: 16,150 ms/op
# Warmup Iteration  10: 16,155 ms/op
Iteration   1: 16,246 ms/op
Iteration   2: 16,121 ms/op
Iteration   3: 16,105 ms/op
Iteration   4: 15,962 ms/op
Iteration   5: 15,808 ms/op
Iteration   6: 15,850 ms/op
Iteration   7: 16,000 ms/op
Iteration   8: 15,863 ms/op
Iteration   9: 16,040 ms/op
Iteration  10: 16,006 ms/op


Result "benchmarkFind":
  16,000 ±(99.9%) 0,206 ms/op [Average]
  (min, avg, max) = (15,808, 16,000, 16,246), stdev = 0,136
  CI (99.9%): [15,794, 16,206] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 8, patternSize = 32)

# Run progress: 12,32% complete, ETA 11:46:39
# Fork: 1 of 1
# Warmup Iteration   1: 16,375 ms/op
# Warmup Iteration   2: 16,251 ms/op
# Warmup Iteration   3: 16,084 ms/op
# Warmup Iteration   4: 15,949 ms/op
# Warmup Iteration   5: 16,090 ms/op
# Warmup Iteration   6: 15,976 ms/op
# Warmup Iteration   7: 15,998 ms/op
# Warmup Iteration   8: 16,127 ms/op
# Warmup Iteration   9: 16,054 ms/op
# Warmup Iteration  10: 16,010 ms/op
Iteration   1: 16,108 ms/op
Iteration   2: 16,050 ms/op
Iteration   3: 16,011 ms/op
Iteration   4: 15,747 ms/op
Iteration   5: 17,178 ms/op
Iteration   6: 15,608 ms/op
Iteration   7: 15,610 ms/op
Iteration   8: 15,741 ms/op
Iteration   9: 15,740 ms/op
Iteration  10: 15,592 ms/op


Result "benchmarkFind":
  15,939 ±(99.9%) 0,719 ms/op [Average]
  (min, avg, max) = (15,592, 15,939, 17,178), stdev = 0,476
  CI (99.9%): [15,219, 16,658] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 8, patternSize = 64)

# Run progress: 12,36% complete, ETA 11:46:07
# Fork: 1 of 1
# Warmup Iteration   1: 16,276 ms/op
# Warmup Iteration   2: 16,116 ms/op
# Warmup Iteration   3: 16,024 ms/op
# Warmup Iteration   4: 15,984 ms/op
# Warmup Iteration   5: 15,951 ms/op
# Warmup Iteration   6: 16,139 ms/op
# Warmup Iteration   7: 16,019 ms/op
# Warmup Iteration   8: 16,065 ms/op
# Warmup Iteration   9: 15,959 ms/op
# Warmup Iteration  10: 15,972 ms/op
Iteration   1: 16,049 ms/op
Iteration   2: 15,966 ms/op
Iteration   3: 15,949 ms/op
Iteration   4: 15,967 ms/op
Iteration   5: 15,752 ms/op
Iteration   6: 15,896 ms/op
Iteration   7: 15,808 ms/op
Iteration   8: 15,774 ms/op
Iteration   9: 15,671 ms/op
Iteration  10: 15,680 ms/op


Result "benchmarkFind":
  15,851 ±(99.9%) 0,200 ms/op [Average]
  (min, avg, max) = (15,671, 15,851, 16,049), stdev = 0,132
  CI (99.9%): [15,652, 16,051] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 8, patternSize = 128)

# Run progress: 12,41% complete, ETA 11:45:34
# Fork: 1 of 1
# Warmup Iteration   1: 16,351 ms/op
# Warmup Iteration   2: 16,274 ms/op
# Warmup Iteration   3: 16,166 ms/op
# Warmup Iteration   4: 16,145 ms/op
# Warmup Iteration   5: 16,334 ms/op
# Warmup Iteration   6: 16,152 ms/op
# Warmup Iteration   7: 16,093 ms/op
# Warmup Iteration   8: 16,160 ms/op
# Warmup Iteration   9: 16,130 ms/op
# Warmup Iteration  10: 16,186 ms/op
Iteration   1: 16,185 ms/op
Iteration   2: 16,096 ms/op
Iteration   3: 16,168 ms/op
Iteration   4: 16,043 ms/op
Iteration   5: 16,008 ms/op
Iteration   6: 15,952 ms/op
Iteration   7: 15,815 ms/op
Iteration   8: 15,956 ms/op
Iteration   9: 15,921 ms/op
Iteration  10: 16,005 ms/op


Result "benchmarkFind":
  16,015 ±(99.9%) 0,171 ms/op [Average]
  (min, avg, max) = (15,815, 16,015, 16,185), stdev = 0,113
  CI (99.9%): [15,844, 16,186] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 8, patternSize = 256)

# Run progress: 12,45% complete, ETA 11:45:02
# Fork: 1 of 1
# Warmup Iteration   1: 16,463 ms/op
# Warmup Iteration   2: 16,084 ms/op
# Warmup Iteration   3: 16,111 ms/op
# Warmup Iteration   4: 16,049 ms/op
# Warmup Iteration   5: 15,996 ms/op
# Warmup Iteration   6: 16,124 ms/op
# Warmup Iteration   7: 15,995 ms/op
# Warmup Iteration   8: 16,067 ms/op
# Warmup Iteration   9: 16,130 ms/op
# Warmup Iteration  10: 16,022 ms/op
Iteration   1: 16,131 ms/op
Iteration   2: 17,804 ms/op
Iteration   3: 16,042 ms/op
Iteration   4: 15,833 ms/op
Iteration   5: 15,795 ms/op
Iteration   6: 15,659 ms/op
Iteration   7: 15,799 ms/op
Iteration   8: 15,723 ms/op
Iteration   9: 15,695 ms/op
Iteration  10: 15,810 ms/op


Result "benchmarkFind":
  16,029 ±(99.9%) 0,969 ms/op [Average]
  (min, avg, max) = (15,659, 16,029, 17,804), stdev = 0,641
  CI (99.9%): [15,060, 16,998] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 32, patternSize = 2)

# Run progress: 12,50% complete, ETA 11:44:30
# Fork: 1 of 1
# Warmup Iteration   1: 97,707 ms/op
# Warmup Iteration   2: 94,000 ms/op
# Warmup Iteration   3: 93,722 ms/op
# Warmup Iteration   4: 93,924 ms/op
# Warmup Iteration   5: 93,841 ms/op
# Warmup Iteration   6: 95,902 ms/op
# Warmup Iteration   7: 94,303 ms/op
# Warmup Iteration   8: 94,169 ms/op
# Warmup Iteration   9: 94,643 ms/op
# Warmup Iteration  10: 95,121 ms/op
Iteration   1: 96,036 ms/op
Iteration   2: 93,764 ms/op
Iteration   3: 94,225 ms/op
Iteration   4: 93,848 ms/op
Iteration   5: 93,971 ms/op
Iteration   6: 95,499 ms/op
Iteration   7: 94,863 ms/op
Iteration   8: 95,199 ms/op
Iteration   9: 94,582 ms/op
Iteration  10: 94,601 ms/op


Result "benchmarkFind":
  94,659 ±(99.9%) 1,134 ms/op [Average]
  (min, avg, max) = (93,764, 94,659, 96,036), stdev = 0,750
  CI (99.9%): [93,525, 95,793] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 32, patternSize = 4)

# Run progress: 12,55% complete, ETA 11:44:03
# Fork: 1 of 1
# Warmup Iteration   1: 64,660 ms/op
# Warmup Iteration   2: 63,770 ms/op
# Warmup Iteration   3: 63,601 ms/op
# Warmup Iteration   4: 63,666 ms/op
# Warmup Iteration   5: 63,366 ms/op
# Warmup Iteration   6: 62,858 ms/op
# Warmup Iteration   7: 62,644 ms/op
# Warmup Iteration   8: 62,464 ms/op
# Warmup Iteration   9: 62,653 ms/op
# Warmup Iteration  10: 62,848 ms/op
Iteration   1: 62,506 ms/op
Iteration   2: 62,574 ms/op
Iteration   3: 62,611 ms/op
Iteration   4: 62,891 ms/op
Iteration   5: 63,101 ms/op
Iteration   6: 62,730 ms/op
Iteration   7: 62,735 ms/op
Iteration   8: 62,907 ms/op
Iteration   9: 62,505 ms/op
Iteration  10: 62,424 ms/op


Result "benchmarkFind":
  62,698 ±(99.9%) 0,326 ms/op [Average]
  (min, avg, max) = (62,424, 62,698, 63,101), stdev = 0,215
  CI (99.9%): [62,373, 63,024] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 32, patternSize = 8)

# Run progress: 12,59% complete, ETA 11:43:32
# Fork: 1 of 1
# Warmup Iteration   1: 65,521 ms/op
# Warmup Iteration   2: 64,034 ms/op
# Warmup Iteration   3: 63,895 ms/op
# Warmup Iteration   4: 64,026 ms/op
# Warmup Iteration   5: 63,821 ms/op
# Warmup Iteration   6: 63,880 ms/op
# Warmup Iteration   7: 63,963 ms/op
# Warmup Iteration   8: 63,837 ms/op
# Warmup Iteration   9: 71,992 ms/op
# Warmup Iteration  10: 64,482 ms/op
Iteration   1: 64,452 ms/op
Iteration   2: 63,547 ms/op
Iteration   3: 62,778 ms/op
Iteration   4: 63,099 ms/op
Iteration   5: 62,417 ms/op
Iteration   6: 63,050 ms/op
Iteration   7: 62,834 ms/op
Iteration   8: 62,725 ms/op
Iteration   9: 64,273 ms/op
Iteration  10: 63,004 ms/op


Result "benchmarkFind":
  63,218 ±(99.9%) 1,015 ms/op [Average]
  (min, avg, max) = (62,417, 63,218, 64,452), stdev = 0,671
  CI (99.9%): [62,203, 64,233] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 32, patternSize = 16)

# Run progress: 12,64% complete, ETA 11:43:01
# Fork: 1 of 1
# Warmup Iteration   1: 65,904 ms/op
# Warmup Iteration   2: 64,372 ms/op
# Warmup Iteration   3: 64,588 ms/op
# Warmup Iteration   4: 64,353 ms/op
# Warmup Iteration   5: 64,505 ms/op
# Warmup Iteration   6: 64,703 ms/op
# Warmup Iteration   7: 64,546 ms/op
# Warmup Iteration   8: 64,303 ms/op
# Warmup Iteration   9: 64,222 ms/op
# Warmup Iteration  10: 64,167 ms/op
Iteration   1: 63,903 ms/op
Iteration   2: 63,928 ms/op
Iteration   3: 63,618 ms/op
Iteration   4: 63,173 ms/op
Iteration   5: 63,967 ms/op
Iteration   6: 63,093 ms/op
Iteration   7: 63,495 ms/op
Iteration   8: 63,256 ms/op
Iteration   9: 63,289 ms/op
Iteration  10: 63,488 ms/op


Result "benchmarkFind":
  63,521 ±(99.9%) 0,491 ms/op [Average]
  (min, avg, max) = (63,093, 63,521, 63,967), stdev = 0,325
  CI (99.9%): [63,030, 64,012] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 32, patternSize = 32)

# Run progress: 12,68% complete, ETA 11:42:32
# Fork: 1 of 1
# Warmup Iteration   1: 64,861 ms/op
# Warmup Iteration   2: 64,095 ms/op
# Warmup Iteration   3: 64,071 ms/op
# Warmup Iteration   4: 64,032 ms/op
# Warmup Iteration   5: 64,084 ms/op
# Warmup Iteration   6: 63,958 ms/op
# Warmup Iteration   7: 63,783 ms/op
# Warmup Iteration   8: 63,707 ms/op
# Warmup Iteration   9: 65,385 ms/op
# Warmup Iteration  10: 64,727 ms/op
Iteration   1: 65,419 ms/op
Iteration   2: 66,305 ms/op
Iteration   3: 66,982 ms/op
Iteration   4: 63,463 ms/op
Iteration   5: 62,891 ms/op
Iteration   6: 62,980 ms/op
Iteration   7: 63,137 ms/op
Iteration   8: 63,116 ms/op
Iteration   9: 62,817 ms/op
Iteration  10: 62,722 ms/op


Result "benchmarkFind":
  63,983 ±(99.9%) 2,434 ms/op [Average]
  (min, avg, max) = (62,722, 63,983, 66,982), stdev = 1,610
  CI (99.9%): [61,549, 66,417] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 32, patternSize = 64)

# Run progress: 12,73% complete, ETA 11:42:03
# Fork: 1 of 1
# Warmup Iteration   1: 66,295 ms/op
# Warmup Iteration   2: 65,201 ms/op
# Warmup Iteration   3: 64,367 ms/op
# Warmup Iteration   4: 64,464 ms/op
# Warmup Iteration   5: 64,495 ms/op
# Warmup Iteration   6: 71,515 ms/op
# Warmup Iteration   7: 64,504 ms/op
# Warmup Iteration   8: 64,312 ms/op
# Warmup Iteration   9: 63,870 ms/op
# Warmup Iteration  10: 64,301 ms/op
Iteration   1: 64,486 ms/op
Iteration   2: 64,088 ms/op
Iteration   3: 63,569 ms/op
Iteration   4: 63,259 ms/op
Iteration   5: 63,016 ms/op
Iteration   6: 63,228 ms/op
Iteration   7: 63,761 ms/op
Iteration   8: 63,168 ms/op
Iteration   9: 63,752 ms/op
Iteration  10: 63,739 ms/op


Result "benchmarkFind":
  63,607 ±(99.9%) 0,690 ms/op [Average]
  (min, avg, max) = (63,016, 63,607, 64,486), stdev = 0,456
  CI (99.9%): [62,917, 64,297] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 32, patternSize = 128)

# Run progress: 12,78% complete, ETA 11:41:33
# Fork: 1 of 1
# Warmup Iteration   1: 65,254 ms/op
# Warmup Iteration   2: 64,818 ms/op
# Warmup Iteration   3: 64,876 ms/op
# Warmup Iteration   4: 65,034 ms/op
# Warmup Iteration   5: 64,885 ms/op
# Warmup Iteration   6: 65,015 ms/op
# Warmup Iteration   7: 64,789 ms/op
# Warmup Iteration   8: 65,035 ms/op
# Warmup Iteration   9: 64,646 ms/op
# Warmup Iteration  10: 64,485 ms/op
Iteration   1: 64,795 ms/op
Iteration   2: 64,519 ms/op
Iteration   3: 63,887 ms/op
Iteration   4: 63,061 ms/op
Iteration   5: 62,939 ms/op
Iteration   6: 62,715 ms/op
Iteration   7: 62,959 ms/op
Iteration   8: 62,828 ms/op
Iteration   9: 63,288 ms/op
Iteration  10: 62,910 ms/op


Result "benchmarkFind":
  63,390 ±(99.9%) 1,127 ms/op [Average]
  (min, avg, max) = (62,715, 63,390, 64,795), stdev = 0,746
  CI (99.9%): [62,263, 64,517] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 32, patternSize = 256)

# Run progress: 12,82% complete, ETA 11:41:04
# Fork: 1 of 1
# Warmup Iteration   1: 65,060 ms/op
# Warmup Iteration   2: 64,867 ms/op
# Warmup Iteration   3: 64,651 ms/op
# Warmup Iteration   4: 64,586 ms/op
# Warmup Iteration   5: 64,774 ms/op
# Warmup Iteration   6: 64,717 ms/op
# Warmup Iteration   7: 64,842 ms/op
# Warmup Iteration   8: 64,440 ms/op
# Warmup Iteration   9: 63,901 ms/op
# Warmup Iteration  10: 64,508 ms/op
Iteration   1: 64,607 ms/op
Iteration   2: 64,380 ms/op
Iteration   3: 63,922 ms/op
Iteration   4: 63,685 ms/op
Iteration   5: 63,450 ms/op
Iteration   6: 63,801 ms/op
Iteration   7: 64,112 ms/op
Iteration   8: 63,044 ms/op
Iteration   9: 63,899 ms/op
Iteration  10: 63,071 ms/op


Result "benchmarkFind":
  63,797 ±(99.9%) 0,772 ms/op [Average]
  (min, avg, max) = (63,044, 63,797, 64,607), stdev = 0,511
  CI (99.9%): [63,025, 64,569] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 128, patternSize = 2)

# Run progress: 12,87% complete, ETA 11:40:35
# Fork: 1 of 1
# Warmup Iteration   1: 773,061 ms/op
# Warmup Iteration   2: 798,039 ms/op
# Warmup Iteration   3: 743,218 ms/op
# Warmup Iteration   4: 740,245 ms/op
# Warmup Iteration   5: 744,265 ms/op
# Warmup Iteration   6: 746,860 ms/op
# Warmup Iteration   7: 750,444 ms/op
# Warmup Iteration   8: 740,552 ms/op
# Warmup Iteration   9: 742,149 ms/op
# Warmup Iteration  10: 742,545 ms/op
Iteration   1: 745,888 ms/op
Iteration   2: 745,860 ms/op
Iteration   3: 741,745 ms/op
Iteration   4: 745,039 ms/op
Iteration   5: 745,366 ms/op
Iteration   6: 752,709 ms/op
Iteration   7: 742,810 ms/op
Iteration   8: 744,621 ms/op
Iteration   9: 749,095 ms/op
Iteration  10: 739,581 ms/op


Result "benchmarkFind":
  745,271 ±(99.9%) 5,567 ms/op [Average]
  (min, avg, max) = (739,581, 745,271, 752,709), stdev = 3,682
  CI (99.9%): [739,705, 750,838] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 128, patternSize = 4)

# Run progress: 12,91% complete, ETA 11:41:09
# Fork: 1 of 1
# Warmup Iteration   1: 263,696 ms/op
# Warmup Iteration   2: 254,634 ms/op
# Warmup Iteration   3: 251,784 ms/op
# Warmup Iteration   4: 255,385 ms/op
# Warmup Iteration   5: 251,409 ms/op
# Warmup Iteration   6: 253,504 ms/op
# Warmup Iteration   7: 255,418 ms/op
# Warmup Iteration   8: 252,890 ms/op
# Warmup Iteration   9: 251,865 ms/op
# Warmup Iteration  10: 253,531 ms/op
Iteration   1: 252,346 ms/op
Iteration   2: 254,803 ms/op
Iteration   3: 255,765 ms/op
Iteration   4: 250,935 ms/op
Iteration   5: 252,513 ms/op
Iteration   6: 252,510 ms/op
Iteration   7: 250,430 ms/op
Iteration   8: 251,327 ms/op
Iteration   9: 251,161 ms/op
Iteration  10: 251,933 ms/op


Result "benchmarkFind":
  252,372 ±(99.9%) 2,572 ms/op [Average]
  (min, avg, max) = (250,430, 252,372, 255,765), stdev = 1,701
  CI (99.9%): [249,800, 254,944] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 128, patternSize = 8)

# Run progress: 12,96% complete, ETA 11:40:39
# Fork: 1 of 1
# Warmup Iteration   1: 261,455 ms/op
# Warmup Iteration   2: 256,023 ms/op
# Warmup Iteration   3: 256,175 ms/op
# Warmup Iteration   4: 251,793 ms/op
# Warmup Iteration   5: 251,771 ms/op
# Warmup Iteration   6: 251,120 ms/op
# Warmup Iteration   7: 251,062 ms/op
# Warmup Iteration   8: 251,844 ms/op
# Warmup Iteration   9: 251,079 ms/op
# Warmup Iteration  10: 251,759 ms/op
Iteration   1: 275,813 ms/op
Iteration   2: 251,892 ms/op
Iteration   3: 250,411 ms/op
Iteration   4: 253,052 ms/op
Iteration   5: 251,053 ms/op
Iteration   6: 249,923 ms/op
Iteration   7: 251,691 ms/op
Iteration   8: 253,287 ms/op
Iteration   9: 251,680 ms/op
Iteration  10: 251,199 ms/op


Result "benchmarkFind":
  254,000 ±(99.9%) 11,694 ms/op [Average]
  (min, avg, max) = (249,923, 254,000, 275,813), stdev = 7,735
  CI (99.9%): [242,306, 265,694] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 128, patternSize = 16)

# Run progress: 13,01% complete, ETA 11:40:09
# Fork: 1 of 1
# Warmup Iteration   1: 262,135 ms/op
# Warmup Iteration   2: 260,091 ms/op
# Warmup Iteration   3: 258,252 ms/op
# Warmup Iteration   4: 256,672 ms/op
# Warmup Iteration   5: 252,739 ms/op
# Warmup Iteration   6: 250,327 ms/op
# Warmup Iteration   7: 251,240 ms/op
# Warmup Iteration   8: 250,725 ms/op
# Warmup Iteration   9: 250,789 ms/op
# Warmup Iteration  10: 252,301 ms/op
Iteration   1: 252,632 ms/op
Iteration   2: 251,005 ms/op
Iteration   3: 250,053 ms/op
Iteration   4: 251,891 ms/op
Iteration   5: 251,966 ms/op
Iteration   6: 252,553 ms/op
Iteration   7: 252,749 ms/op
Iteration   8: 251,632 ms/op
Iteration   9: 251,753 ms/op
Iteration  10: 253,637 ms/op


Result "benchmarkFind":
  251,987 ±(99.9%) 1,507 ms/op [Average]
  (min, avg, max) = (250,053, 251,987, 253,637), stdev = 0,996
  CI (99.9%): [250,480, 253,494] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 128, patternSize = 32)

# Run progress: 13,05% complete, ETA 11:39:40
# Fork: 1 of 1
# Warmup Iteration   1: 258,444 ms/op
# Warmup Iteration   2: 255,345 ms/op
# Warmup Iteration   3: 255,263 ms/op
# Warmup Iteration   4: 253,324 ms/op
# Warmup Iteration   5: 248,225 ms/op
# Warmup Iteration   6: 248,261 ms/op
# Warmup Iteration   7: 247,802 ms/op
# Warmup Iteration   8: 248,316 ms/op
# Warmup Iteration   9: 247,873 ms/op
# Warmup Iteration  10: 247,929 ms/op
Iteration   1: 248,858 ms/op
Iteration   2: 248,167 ms/op
Iteration   3: 247,926 ms/op
Iteration   4: 248,368 ms/op
Iteration   5: 248,844 ms/op
Iteration   6: 248,919 ms/op
Iteration   7: 248,599 ms/op
Iteration   8: 248,915 ms/op
Iteration   9: 249,579 ms/op
Iteration  10: 248,642 ms/op


Result "benchmarkFind":
  248,682 ±(99.9%) 0,698 ms/op [Average]
  (min, avg, max) = (247,926, 248,682, 249,579), stdev = 0,461
  CI (99.9%): [247,984, 249,379] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 128, patternSize = 64)

# Run progress: 13,10% complete, ETA 11:39:34
# Fork: 1 of 1
# Warmup Iteration   1: 258,853 ms/op
# Warmup Iteration   2: 256,359 ms/op
# Warmup Iteration   3: 254,882 ms/op
# Warmup Iteration   4: 281,099 ms/op
# Warmup Iteration   5: 251,679 ms/op
# Warmup Iteration   6: 252,939 ms/op
# Warmup Iteration   7: 252,044 ms/op
# Warmup Iteration   8: 253,737 ms/op
# Warmup Iteration   9: 251,232 ms/op
# Warmup Iteration  10: 252,390 ms/op
Iteration   1: 252,697 ms/op
Iteration   2: 252,512 ms/op
Iteration   3: 250,539 ms/op
Iteration   4: 250,820 ms/op
Iteration   5: 252,305 ms/op
Iteration   6: 252,586 ms/op
Iteration   7: 250,324 ms/op
Iteration   8: 251,020 ms/op
Iteration   9: 252,036 ms/op
Iteration  10: 250,772 ms/op


Result "benchmarkFind":
  251,561 ±(99.9%) 1,431 ms/op [Average]
  (min, avg, max) = (250,324, 251,561, 252,697), stdev = 0,947
  CI (99.9%): [250,130, 252,992] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 128, patternSize = 128)

# Run progress: 13,14% complete, ETA 11:39:04
# Fork: 1 of 1
# Warmup Iteration   1: 258,619 ms/op
# Warmup Iteration   2: 255,398 ms/op
# Warmup Iteration   3: 253,828 ms/op
# Warmup Iteration   4: 252,391 ms/op
# Warmup Iteration   5: 247,984 ms/op
# Warmup Iteration   6: 247,544 ms/op
# Warmup Iteration   7: 249,378 ms/op
# Warmup Iteration   8: 247,965 ms/op
# Warmup Iteration   9: 247,796 ms/op
# Warmup Iteration  10: 247,997 ms/op
Iteration   1: 248,823 ms/op
Iteration   2: 248,781 ms/op
Iteration   3: 248,237 ms/op
Iteration   4: 247,526 ms/op
Iteration   5: 248,303 ms/op
Iteration   6: 248,221 ms/op
Iteration   7: 247,828 ms/op
Iteration   8: 247,634 ms/op
Iteration   9: 247,681 ms/op
Iteration  10: 248,228 ms/op


Result "benchmarkFind":
  248,126 ±(99.9%) 0,688 ms/op [Average]
  (min, avg, max) = (247,526, 248,126, 248,823), stdev = 0,455
  CI (99.9%): [247,438, 248,814] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 128, patternSize = 256)

# Run progress: 13,19% complete, ETA 11:38:58
# Fork: 1 of 1
# Warmup Iteration   1: 260,373 ms/op
# Warmup Iteration   2: 258,231 ms/op
# Warmup Iteration   3: 258,211 ms/op
# Warmup Iteration   4: 254,352 ms/op
# Warmup Iteration   5: 253,773 ms/op
# Warmup Iteration   6: 250,642 ms/op
# Warmup Iteration   7: 252,171 ms/op
# Warmup Iteration   8: 251,977 ms/op
# Warmup Iteration   9: 252,176 ms/op
# Warmup Iteration  10: 251,240 ms/op
Iteration   1: 278,314 ms/op
Iteration   2: 253,863 ms/op
Iteration   3: 253,514 ms/op
Iteration   4: 250,106 ms/op
Iteration   5: 250,171 ms/op
Iteration   6: 250,048 ms/op
Iteration   7: 249,039 ms/op
Iteration   8: 277,050 ms/op
Iteration   9: 251,467 ms/op
Iteration  10: 253,697 ms/op


Result "benchmarkFind":
  256,727 ±(99.9%) 16,903 ms/op [Average]
  (min, avg, max) = (249,039, 256,727, 278,314), stdev = 11,180
  CI (99.9%): [239,824, 273,629] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 2, patternSize = 2)

# Run progress: 13,24% complete, ETA 11:38:32
# Fork: 1 of 1
# Warmup Iteration   1: 14,896 ms/op
# Warmup Iteration   2: 13,950 ms/op
# Warmup Iteration   3: 13,952 ms/op
# Warmup Iteration   4: 13,947 ms/op
# Warmup Iteration   5: 13,942 ms/op
# Warmup Iteration   6: 13,871 ms/op
# Warmup Iteration   7: 14,316 ms/op
# Warmup Iteration   8: 13,803 ms/op
# Warmup Iteration   9: 13,822 ms/op
# Warmup Iteration  10: 13,814 ms/op
Iteration   1: 13,834 ms/op
Iteration   2: 13,802 ms/op
Iteration   3: 13,864 ms/op
Iteration   4: 13,833 ms/op
Iteration   5: 13,832 ms/op
Iteration   6: 13,803 ms/op
Iteration   7: 13,810 ms/op
Iteration   8: 13,817 ms/op
Iteration   9: 13,832 ms/op
Iteration  10: 13,837 ms/op


Result "benchmarkFind":
  13,826 ±(99.9%) 0,028 ms/op [Average]
  (min, avg, max) = (13,802, 13,826, 13,864), stdev = 0,019
  CI (99.9%): [13,798, 13,855] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 2, patternSize = 4)

# Run progress: 13,28% complete, ETA 11:38:03
# Fork: 1 of 1
# Warmup Iteration   1: 14,247 ms/op
# Warmup Iteration   2: 14,046 ms/op
# Warmup Iteration   3: 14,209 ms/op
# Warmup Iteration   4: 14,159 ms/op
# Warmup Iteration   5: 14,022 ms/op
# Warmup Iteration   6: 13,965 ms/op
# Warmup Iteration   7: 13,950 ms/op
# Warmup Iteration   8: 13,974 ms/op
# Warmup Iteration   9: 13,945 ms/op
# Warmup Iteration  10: 13,991 ms/op
Iteration   1: 13,962 ms/op
Iteration   2: 13,958 ms/op
Iteration   3: 13,978 ms/op
Iteration   4: 13,984 ms/op
Iteration   5: 13,953 ms/op
Iteration   6: 13,979 ms/op
Iteration   7: 14,007 ms/op
Iteration   8: 14,008 ms/op
Iteration   9: 13,950 ms/op
Iteration  10: 14,073 ms/op


Result "benchmarkFind":
  13,985 ±(99.9%) 0,056 ms/op [Average]
  (min, avg, max) = (13,950, 13,985, 14,073), stdev = 0,037
  CI (99.9%): [13,929, 14,041] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 2, patternSize = 8)

# Run progress: 13,33% complete, ETA 11:37:33
# Fork: 1 of 1
# Warmup Iteration   1: 14,489 ms/op
# Warmup Iteration   2: 14,139 ms/op
# Warmup Iteration   3: 14,101 ms/op
# Warmup Iteration   4: 14,211 ms/op
# Warmup Iteration   5: 14,262 ms/op
# Warmup Iteration   6: 14,095 ms/op
# Warmup Iteration   7: 14,124 ms/op
# Warmup Iteration   8: 14,103 ms/op
# Warmup Iteration   9: 14,143 ms/op
# Warmup Iteration  10: 14,147 ms/op
Iteration   1: 14,171 ms/op
Iteration   2: 14,143 ms/op
Iteration   3: 14,141 ms/op
Iteration   4: 14,635 ms/op
Iteration   5: 14,219 ms/op
Iteration   6: 14,134 ms/op
Iteration   7: 14,109 ms/op
Iteration   8: 14,115 ms/op
Iteration   9: 14,143 ms/op
Iteration  10: 14,193 ms/op


Result "benchmarkFind":
  14,200 ±(99.9%) 0,237 ms/op [Average]
  (min, avg, max) = (14,109, 14,200, 14,635), stdev = 0,156
  CI (99.9%): [13,964, 14,437] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 2, patternSize = 16)

# Run progress: 13,37% complete, ETA 11:37:04
# Fork: 1 of 1
# Warmup Iteration   1: 14,378 ms/op
# Warmup Iteration   2: 14,038 ms/op
# Warmup Iteration   3: 14,027 ms/op
# Warmup Iteration   4: 14,068 ms/op
# Warmup Iteration   5: 13,961 ms/op
# Warmup Iteration   6: 13,962 ms/op
# Warmup Iteration   7: 13,970 ms/op
# Warmup Iteration   8: 14,019 ms/op
# Warmup Iteration   9: 13,971 ms/op
# Warmup Iteration  10: 13,977 ms/op
Iteration   1: 14,006 ms/op
Iteration   2: 13,972 ms/op
Iteration   3: 13,944 ms/op
Iteration   4: 13,961 ms/op
Iteration   5: 13,968 ms/op
Iteration   6: 13,974 ms/op
Iteration   7: 14,116 ms/op
Iteration   8: 14,043 ms/op
Iteration   9: 13,970 ms/op
Iteration  10: 13,976 ms/op


Result "benchmarkFind":
  13,993 ±(99.9%) 0,077 ms/op [Average]
  (min, avg, max) = (13,944, 13,993, 14,116), stdev = 0,051
  CI (99.9%): [13,916, 14,070] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 2, patternSize = 32)

# Run progress: 13,42% complete, ETA 11:36:35
# Fork: 1 of 1
# Warmup Iteration   1: 14,588 ms/op
# Warmup Iteration   2: 14,107 ms/op
# Warmup Iteration   3: 14,123 ms/op
# Warmup Iteration   4: 14,271 ms/op
# Warmup Iteration   5: 14,132 ms/op
# Warmup Iteration   6: 14,145 ms/op
# Warmup Iteration   7: 14,167 ms/op
# Warmup Iteration   8: 14,124 ms/op
# Warmup Iteration   9: 14,112 ms/op
# Warmup Iteration  10: 14,178 ms/op
Iteration   1: 14,187 ms/op
Iteration   2: 14,117 ms/op
Iteration   3: 14,064 ms/op
Iteration   4: 14,061 ms/op
Iteration   5: 14,114 ms/op
Iteration   6: 14,194 ms/op
Iteration   7: 14,137 ms/op
Iteration   8: 14,072 ms/op
Iteration   9: 14,045 ms/op
Iteration  10: 14,165 ms/op


Result "benchmarkFind":
  14,116 ±(99.9%) 0,082 ms/op [Average]
  (min, avg, max) = (14,045, 14,116, 14,194), stdev = 0,054
  CI (99.9%): [14,033, 14,198] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 2, patternSize = 64)

# Run progress: 13,47% complete, ETA 11:36:05
# Fork: 1 of 1
# Warmup Iteration   1: 14,498 ms/op
# Warmup Iteration   2: 14,199 ms/op
# Warmup Iteration   3: 14,188 ms/op
# Warmup Iteration   4: 14,282 ms/op
# Warmup Iteration   5: 14,149 ms/op
# Warmup Iteration   6: 14,019 ms/op
# Warmup Iteration   7: 14,147 ms/op
# Warmup Iteration   8: 14,059 ms/op
# Warmup Iteration   9: 14,074 ms/op
# Warmup Iteration  10: 14,101 ms/op
Iteration   1: 15,242 ms/op
Iteration   2: 13,994 ms/op
Iteration   3: 13,961 ms/op
Iteration   4: 13,990 ms/op
Iteration   5: 13,953 ms/op
Iteration   6: 13,962 ms/op
Iteration   7: 13,958 ms/op
Iteration   8: 13,987 ms/op
Iteration   9: 13,968 ms/op
Iteration  10: 13,965 ms/op


Result "benchmarkFind":
  14,098 ±(99.9%) 0,608 ms/op [Average]
  (min, avg, max) = (13,953, 14,098, 15,242), stdev = 0,402
  CI (99.9%): [13,490, 14,706] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 2, patternSize = 128)

# Run progress: 13,51% complete, ETA 11:35:36
# Fork: 1 of 1
# Warmup Iteration   1: 14,432 ms/op
# Warmup Iteration   2: 14,066 ms/op
# Warmup Iteration   3: 14,203 ms/op
# Warmup Iteration   4: 14,147 ms/op
# Warmup Iteration   5: 14,046 ms/op
# Warmup Iteration   6: 14,131 ms/op
# Warmup Iteration   7: 14,068 ms/op
# Warmup Iteration   8: 14,096 ms/op
# Warmup Iteration   9: 14,172 ms/op
# Warmup Iteration  10: 14,198 ms/op
Iteration   1: 14,121 ms/op
Iteration   2: 14,392 ms/op
Iteration   3: 14,156 ms/op
Iteration   4: 14,255 ms/op
Iteration   5: 14,132 ms/op
Iteration   6: 14,064 ms/op
Iteration   7: 14,212 ms/op
Iteration   8: 14,125 ms/op
Iteration   9: 14,206 ms/op
Iteration  10: 14,143 ms/op


Result "benchmarkFind":
  14,181 ±(99.9%) 0,139 ms/op [Average]
  (min, avg, max) = (14,064, 14,181, 14,392), stdev = 0,092
  CI (99.9%): [14,041, 14,320] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 2, patternSize = 256)

# Run progress: 13,56% complete, ETA 11:35:07
# Fork: 1 of 1
# Warmup Iteration   1: 14,632 ms/op
# Warmup Iteration   2: 14,299 ms/op
# Warmup Iteration   3: 14,196 ms/op
# Warmup Iteration   4: 14,247 ms/op
# Warmup Iteration   5: 14,174 ms/op
# Warmup Iteration   6: 14,161 ms/op
# Warmup Iteration   7: 14,202 ms/op
# Warmup Iteration   8: 14,180 ms/op
# Warmup Iteration   9: 14,108 ms/op
# Warmup Iteration  10: 14,248 ms/op
Iteration   1: 14,172 ms/op
Iteration   2: 14,160 ms/op
Iteration   3: 14,148 ms/op
Iteration   4: 14,202 ms/op
Iteration   5: 14,215 ms/op
Iteration   6: 14,132 ms/op
Iteration   7: 14,187 ms/op
Iteration   8: 14,216 ms/op
Iteration   9: 14,216 ms/op
Iteration  10: 14,199 ms/op


Result "benchmarkFind":
  14,185 ±(99.9%) 0,046 ms/op [Average]
  (min, avg, max) = (14,132, 14,185, 14,216), stdev = 0,030
  CI (99.9%): [14,139, 14,230] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 8, patternSize = 2)

# Run progress: 13,60% complete, ETA 11:34:38
# Fork: 1 of 1
# Warmup Iteration   1: 58,494 ms/op
# Warmup Iteration   2: 56,408 ms/op
# Warmup Iteration   3: 56,406 ms/op
# Warmup Iteration   4: 56,550 ms/op
# Warmup Iteration   5: 56,923 ms/op
# Warmup Iteration   6: 56,310 ms/op
# Warmup Iteration   7: 56,614 ms/op
# Warmup Iteration   8: 61,871 ms/op
# Warmup Iteration   9: 56,241 ms/op
# Warmup Iteration  10: 56,057 ms/op
Iteration   1: 56,416 ms/op
Iteration   2: 56,366 ms/op
Iteration   3: 56,005 ms/op
Iteration   4: 56,020 ms/op
Iteration   5: 56,213 ms/op
Iteration   6: 55,994 ms/op
Iteration   7: 56,032 ms/op
Iteration   8: 56,012 ms/op
Iteration   9: 55,970 ms/op
Iteration  10: 56,053 ms/op


Result "benchmarkFind":
  56,108 ±(99.9%) 0,247 ms/op [Average]
  (min, avg, max) = (55,970, 56,108, 56,416), stdev = 0,164
  CI (99.9%): [55,861, 56,355] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 8, patternSize = 4)

# Run progress: 13,65% complete, ETA 11:34:10
# Fork: 1 of 1
# Warmup Iteration   1: 58,440 ms/op
# Warmup Iteration   2: 56,916 ms/op
# Warmup Iteration   3: 57,185 ms/op
# Warmup Iteration   4: 56,919 ms/op
# Warmup Iteration   5: 57,002 ms/op
# Warmup Iteration   6: 56,999 ms/op
# Warmup Iteration   7: 56,948 ms/op
# Warmup Iteration   8: 56,319 ms/op
# Warmup Iteration   9: 56,540 ms/op
# Warmup Iteration  10: 56,993 ms/op
Iteration   1: 56,414 ms/op
Iteration   2: 56,477 ms/op
Iteration   3: 56,214 ms/op
Iteration   4: 56,518 ms/op
Iteration   5: 56,778 ms/op
Iteration   6: 56,754 ms/op
Iteration   7: 56,654 ms/op
Iteration   8: 56,525 ms/op
Iteration   9: 56,320 ms/op
Iteration  10: 56,329 ms/op


Result "benchmarkFind":
  56,498 ±(99.9%) 0,284 ms/op [Average]
  (min, avg, max) = (56,214, 56,498, 56,778), stdev = 0,188
  CI (99.9%): [56,214, 56,782] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 8, patternSize = 8)

# Run progress: 13,69% complete, ETA 11:33:44
# Fork: 1 of 1
# Warmup Iteration   1: 57,880 ms/op
# Warmup Iteration   2: 56,800 ms/op
# Warmup Iteration   3: 56,921 ms/op
# Warmup Iteration   4: 57,010 ms/op
# Warmup Iteration   5: 56,918 ms/op
# Warmup Iteration   6: 57,052 ms/op
# Warmup Iteration   7: 56,992 ms/op
# Warmup Iteration   8: 56,552 ms/op
# Warmup Iteration   9: 56,475 ms/op
# Warmup Iteration  10: 56,419 ms/op
Iteration   1: 56,727 ms/op
Iteration   2: 56,607 ms/op
Iteration   3: 56,389 ms/op
Iteration   4: 56,774 ms/op
Iteration   5: 56,594 ms/op
Iteration   6: 56,432 ms/op
Iteration   7: 56,333 ms/op
Iteration   8: 56,485 ms/op
Iteration   9: 56,788 ms/op
Iteration  10: 56,337 ms/op


Result "benchmarkFind":
  56,547 ±(99.9%) 0,267 ms/op [Average]
  (min, avg, max) = (56,333, 56,547, 56,788), stdev = 0,176
  CI (99.9%): [56,280, 56,813] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 8, patternSize = 16)

# Run progress: 13,74% complete, ETA 11:33:17
# Fork: 1 of 1
# Warmup Iteration   1: 58,024 ms/op
# Warmup Iteration   2: 56,879 ms/op
# Warmup Iteration   3: 56,715 ms/op
# Warmup Iteration   4: 60,256 ms/op
# Warmup Iteration   5: 56,822 ms/op
# Warmup Iteration   6: 57,000 ms/op
# Warmup Iteration   7: 56,418 ms/op
# Warmup Iteration   8: 56,660 ms/op
# Warmup Iteration   9: 57,019 ms/op
# Warmup Iteration  10: 57,148 ms/op
Iteration   1: 56,736 ms/op
Iteration   2: 56,401 ms/op
Iteration   3: 56,554 ms/op
Iteration   4: 56,317 ms/op
Iteration   5: 56,947 ms/op
Iteration   6: 56,532 ms/op
Iteration   7: 56,791 ms/op
Iteration   8: 56,887 ms/op
Iteration   9: 56,456 ms/op
Iteration  10: 56,386 ms/op


Result "benchmarkFind":
  56,601 ±(99.9%) 0,338 ms/op [Average]
  (min, avg, max) = (56,317, 56,601, 56,947), stdev = 0,224
  CI (99.9%): [56,262, 56,939] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 8, patternSize = 32)

# Run progress: 13,79% complete, ETA 11:32:50
# Fork: 1 of 1
# Warmup Iteration   1: 57,840 ms/op
# Warmup Iteration   2: 56,763 ms/op
# Warmup Iteration   3: 57,228 ms/op
# Warmup Iteration   4: 56,735 ms/op
# Warmup Iteration   5: 56,741 ms/op
# Warmup Iteration   6: 56,789 ms/op
# Warmup Iteration   7: 56,676 ms/op
# Warmup Iteration   8: 56,768 ms/op
# Warmup Iteration   9: 56,363 ms/op
# Warmup Iteration  10: 56,969 ms/op
Iteration   1: 56,780 ms/op
Iteration   2: 56,920 ms/op
Iteration   3: 56,629 ms/op
Iteration   4: 56,562 ms/op
Iteration   5: 56,586 ms/op
Iteration   6: 57,149 ms/op
Iteration   7: 56,814 ms/op
Iteration   8: 56,585 ms/op
Iteration   9: 56,991 ms/op
Iteration  10: 56,279 ms/op


Result "benchmarkFind":
  56,729 ±(99.9%) 0,381 ms/op [Average]
  (min, avg, max) = (56,279, 56,729, 57,149), stdev = 0,252
  CI (99.9%): [56,348, 57,111] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 8, patternSize = 64)

# Run progress: 13,83% complete, ETA 11:32:24
# Fork: 1 of 1
# Warmup Iteration   1: 58,211 ms/op
# Warmup Iteration   2: 57,094 ms/op
# Warmup Iteration   3: 57,261 ms/op
# Warmup Iteration   4: 56,935 ms/op
# Warmup Iteration   5: 56,897 ms/op
# Warmup Iteration   6: 56,598 ms/op
# Warmup Iteration   7: 56,700 ms/op
# Warmup Iteration   8: 57,130 ms/op
# Warmup Iteration   9: 56,753 ms/op
# Warmup Iteration  10: 56,602 ms/op
Iteration   1: 56,500 ms/op
Iteration   2: 57,217 ms/op
Iteration   3: 56,782 ms/op
Iteration   4: 56,512 ms/op
Iteration   5: 56,977 ms/op
Iteration   6: 56,602 ms/op
Iteration   7: 56,839 ms/op
Iteration   8: 56,825 ms/op
Iteration   9: 56,431 ms/op
Iteration  10: 62,519 ms/op


Result "benchmarkFind":
  57,320 ±(99.9%) 2,786 ms/op [Average]
  (min, avg, max) = (56,431, 57,320, 62,519), stdev = 1,842
  CI (99.9%): [54,535, 60,106] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 8, patternSize = 128)

# Run progress: 13,88% complete, ETA 11:31:58
# Fork: 1 of 1
# Warmup Iteration   1: 57,922 ms/op
# Warmup Iteration   2: 56,611 ms/op
# Warmup Iteration   3: 57,302 ms/op
# Warmup Iteration   4: 57,149 ms/op
# Warmup Iteration   5: 57,495 ms/op
# Warmup Iteration   6: 56,527 ms/op
# Warmup Iteration   7: 56,570 ms/op
# Warmup Iteration   8: 56,315 ms/op
# Warmup Iteration   9: 57,684 ms/op
# Warmup Iteration  10: 56,390 ms/op
Iteration   1: 56,713 ms/op
Iteration   2: 56,829 ms/op
Iteration   3: 56,373 ms/op
Iteration   4: 56,516 ms/op
Iteration   5: 56,463 ms/op
Iteration   6: 56,702 ms/op
Iteration   7: 56,665 ms/op
Iteration   8: 56,788 ms/op
Iteration   9: 56,523 ms/op
Iteration  10: 56,753 ms/op


Result "benchmarkFind":
  56,633 ±(99.9%) 0,231 ms/op [Average]
  (min, avg, max) = (56,373, 56,633, 56,829), stdev = 0,153
  CI (99.9%): [56,401, 56,864] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 8, patternSize = 256)

# Run progress: 13,92% complete, ETA 11:31:31
# Fork: 1 of 1
# Warmup Iteration   1: 61,394 ms/op
# Warmup Iteration   2: 61,341 ms/op
# Warmup Iteration   3: 60,786 ms/op
# Warmup Iteration   4: 60,990 ms/op
# Warmup Iteration   5: 61,017 ms/op
# Warmup Iteration   6: 60,729 ms/op
# Warmup Iteration   7: 60,978 ms/op
# Warmup Iteration   8: 60,831 ms/op
# Warmup Iteration   9: 60,772 ms/op
# Warmup Iteration  10: 60,617 ms/op
Iteration   1: 60,889 ms/op
Iteration   2: 60,909 ms/op
Iteration   3: 61,018 ms/op
Iteration   4: 61,009 ms/op
Iteration   5: 60,679 ms/op
Iteration   6: 60,969 ms/op
Iteration   7: 60,643 ms/op
Iteration   8: 61,232 ms/op
Iteration   9: 60,708 ms/op
Iteration  10: 61,190 ms/op


Result "benchmarkFind":
  60,925 ±(99.9%) 0,307 ms/op [Average]
  (min, avg, max) = (60,643, 60,925, 61,232), stdev = 0,203
  CI (99.9%): [60,618, 61,231] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 32, patternSize = 2)

# Run progress: 13,97% complete, ETA 11:31:07
# Fork: 1 of 1
# Warmup Iteration   1: 258,032 ms/op
# Warmup Iteration   2: 248,269 ms/op
# Warmup Iteration   3: 246,745 ms/op
# Warmup Iteration   4: 248,087 ms/op
# Warmup Iteration   5: 247,830 ms/op
# Warmup Iteration   6: 246,572 ms/op
# Warmup Iteration   7: 247,123 ms/op
# Warmup Iteration   8: 246,050 ms/op
# Warmup Iteration   9: 246,392 ms/op
# Warmup Iteration  10: 245,328 ms/op
Iteration   1: 245,976 ms/op
Iteration   2: 248,390 ms/op
Iteration   3: 274,360 ms/op
Iteration   4: 246,584 ms/op
Iteration   5: 246,768 ms/op
Iteration   6: 245,677 ms/op
Iteration   7: 245,515 ms/op
Iteration   8: 246,845 ms/op
Iteration   9: 247,876 ms/op
Iteration  10: 247,768 ms/op


Result "benchmarkFind":
  249,576 ±(99.9%) 13,245 ms/op [Average]
  (min, avg, max) = (245,515, 249,576, 274,360), stdev = 8,761
  CI (99.9%): [236,331, 262,821] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 32, patternSize = 4)

# Run progress: 14,02% complete, ETA 11:31:05
# Fork: 1 of 1
# Warmup Iteration   1: 229,970 ms/op
# Warmup Iteration   2: 228,605 ms/op
# Warmup Iteration   3: 227,517 ms/op
# Warmup Iteration   4: 227,076 ms/op
# Warmup Iteration   5: 225,774 ms/op
# Warmup Iteration   6: 226,833 ms/op
# Warmup Iteration   7: 226,964 ms/op
# Warmup Iteration   8: 226,018 ms/op
# Warmup Iteration   9: 225,551 ms/op
# Warmup Iteration  10: 225,134 ms/op
Iteration   1: 226,571 ms/op
Iteration   2: 225,000 ms/op
Iteration   3: 225,098 ms/op
Iteration   4: 225,978 ms/op
Iteration   5: 226,171 ms/op
Iteration   6: 225,606 ms/op
Iteration   7: 224,855 ms/op
Iteration   8: 226,351 ms/op
Iteration   9: 224,848 ms/op
Iteration  10: 224,925 ms/op


Result "benchmarkFind":
  225,540 ±(99.9%) 1,024 ms/op [Average]
  (min, avg, max) = (224,848, 225,540, 226,571), stdev = 0,677
  CI (99.9%): [224,516, 226,564] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 32, patternSize = 8)

# Run progress: 14,06% complete, ETA 11:30:52
# Fork: 1 of 1
# Warmup Iteration   1: 245,075 ms/op
# Warmup Iteration   2: 243,847 ms/op
# Warmup Iteration   3: 244,098 ms/op
# Warmup Iteration   4: 243,612 ms/op
# Warmup Iteration   5: 243,969 ms/op
# Warmup Iteration   6: 243,090 ms/op
# Warmup Iteration   7: 242,219 ms/op
# Warmup Iteration   8: 243,288 ms/op
# Warmup Iteration   9: 243,279 ms/op
# Warmup Iteration  10: 244,196 ms/op
Iteration   1: 245,307 ms/op
Iteration   2: 244,536 ms/op
Iteration   3: 244,040 ms/op
Iteration   4: 243,741 ms/op
Iteration   5: 244,685 ms/op
Iteration   6: 244,303 ms/op
Iteration   7: 245,552 ms/op
Iteration   8: 244,886 ms/op
Iteration   9: 244,991 ms/op
Iteration  10: 244,839 ms/op


Result "benchmarkFind":
  244,688 ±(99.9%) 0,839 ms/op [Average]
  (min, avg, max) = (243,741, 244,688, 245,552), stdev = 0,555
  CI (99.9%): [243,849, 245,527] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 32, patternSize = 16)

# Run progress: 14,11% complete, ETA 11:30:49
# Fork: 1 of 1
# Warmup Iteration   1: 248,304 ms/op
# Warmup Iteration   2: 225,728 ms/op
# Warmup Iteration   3: 226,851 ms/op
# Warmup Iteration   4: 226,204 ms/op
# Warmup Iteration   5: 226,292 ms/op
# Warmup Iteration   6: 226,421 ms/op
# Warmup Iteration   7: 225,993 ms/op
# Warmup Iteration   8: 226,429 ms/op
# Warmup Iteration   9: 226,493 ms/op
# Warmup Iteration  10: 226,037 ms/op
Iteration   1: 226,017 ms/op
Iteration   2: 226,333 ms/op
Iteration   3: 227,430 ms/op
Iteration   4: 227,204 ms/op
Iteration   5: 226,115 ms/op
Iteration   6: 225,794 ms/op
Iteration   7: 226,676 ms/op
Iteration   8: 225,560 ms/op
Iteration   9: 225,761 ms/op
Iteration  10: 231,841 ms/op


Result "benchmarkFind":
  226,873 ±(99.9%) 2,800 ms/op [Average]
  (min, avg, max) = (225,560, 226,873, 231,841), stdev = 1,852
  CI (99.9%): [224,073, 229,673] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 32, patternSize = 32)

# Run progress: 14,15% complete, ETA 11:30:37
# Fork: 1 of 1
# Warmup Iteration   1: 229,067 ms/op
# Warmup Iteration   2: 226,596 ms/op
# Warmup Iteration   3: 229,005 ms/op
# Warmup Iteration   4: 226,743 ms/op
# Warmup Iteration   5: 227,128 ms/op
# Warmup Iteration   6: 226,423 ms/op
# Warmup Iteration   7: 226,403 ms/op
# Warmup Iteration   8: 227,759 ms/op
# Warmup Iteration   9: 225,490 ms/op
# Warmup Iteration  10: 225,496 ms/op
Iteration   1: 227,655 ms/op
Iteration   2: 226,276 ms/op
Iteration   3: 227,187 ms/op
Iteration   4: 225,884 ms/op
Iteration   5: 225,599 ms/op
Iteration   6: 227,572 ms/op
Iteration   7: 227,614 ms/op
Iteration   8: 226,545 ms/op
Iteration   9: 226,434 ms/op
Iteration  10: 226,466 ms/op


Result "benchmarkFind":
  226,723 ±(99.9%) 1,121 ms/op [Average]
  (min, avg, max) = (225,599, 226,723, 227,655), stdev = 0,741
  CI (99.9%): [225,602, 227,844] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 32, patternSize = 64)

# Run progress: 14,20% complete, ETA 11:30:24
# Fork: 1 of 1
# Warmup Iteration   1: 231,601 ms/op
# Warmup Iteration   2: 225,734 ms/op
# Warmup Iteration   3: 226,814 ms/op
# Warmup Iteration   4: 226,621 ms/op
# Warmup Iteration   5: 225,791 ms/op
# Warmup Iteration   6: 228,018 ms/op
# Warmup Iteration   7: 229,110 ms/op
# Warmup Iteration   8: 227,325 ms/op
# Warmup Iteration   9: 226,923 ms/op
# Warmup Iteration  10: 225,758 ms/op
Iteration   1: 226,009 ms/op
Iteration   2: 237,445 ms/op
Iteration   3: 226,413 ms/op
Iteration   4: 225,430 ms/op
Iteration   5: 227,056 ms/op
Iteration   6: 226,433 ms/op
Iteration   7: 227,989 ms/op
Iteration   8: 226,402 ms/op
Iteration   9: 228,101 ms/op
Iteration  10: 227,566 ms/op


Result "benchmarkFind":
  227,884 ±(99.9%) 5,244 ms/op [Average]
  (min, avg, max) = (225,430, 227,884, 237,445), stdev = 3,468
  CI (99.9%): [222,641, 233,128] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 32, patternSize = 128)

# Run progress: 14,25% complete, ETA 11:30:12
# Fork: 1 of 1
# Warmup Iteration   1: 228,471 ms/op
# Warmup Iteration   2: 224,612 ms/op
# Warmup Iteration   3: 225,312 ms/op
# Warmup Iteration   4: 224,174 ms/op
# Warmup Iteration   5: 223,834 ms/op
# Warmup Iteration   6: 224,061 ms/op
# Warmup Iteration   7: 223,850 ms/op
# Warmup Iteration   8: 223,502 ms/op
# Warmup Iteration   9: 223,874 ms/op
# Warmup Iteration  10: 223,751 ms/op
Iteration   1: 223,645 ms/op
Iteration   2: 223,836 ms/op
Iteration   3: 224,011 ms/op
Iteration   4: 223,917 ms/op
Iteration   5: 223,489 ms/op
Iteration   6: 224,145 ms/op
Iteration   7: 224,591 ms/op
Iteration   8: 224,075 ms/op
Iteration   9: 223,535 ms/op
Iteration  10: 223,503 ms/op


Result "benchmarkFind":
  223,875 ±(99.9%) 0,529 ms/op [Average]
  (min, avg, max) = (223,489, 223,875, 224,591), stdev = 0,350
  CI (99.9%): [223,346, 224,404] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 32, patternSize = 256)

# Run progress: 14,29% complete, ETA 11:29:58
# Fork: 1 of 1
# Warmup Iteration   1: 246,964 ms/op
# Warmup Iteration   2: 248,351 ms/op
# Warmup Iteration   3: 245,636 ms/op
# Warmup Iteration   4: 245,307 ms/op
# Warmup Iteration   5: 244,832 ms/op
# Warmup Iteration   6: 244,309 ms/op
# Warmup Iteration   7: 244,909 ms/op
# Warmup Iteration   8: 248,125 ms/op
# Warmup Iteration   9: 246,200 ms/op
# Warmup Iteration  10: 247,024 ms/op
Iteration   1: 245,833 ms/op
Iteration   2: 244,967 ms/op
Iteration   3: 246,911 ms/op
Iteration   4: 245,239 ms/op
Iteration   5: 245,287 ms/op
Iteration   6: 244,813 ms/op
Iteration   7: 247,607 ms/op
Iteration   8: 247,218 ms/op
Iteration   9: 245,466 ms/op
Iteration  10: 246,160 ms/op


Result "benchmarkFind":
  245,950 ±(99.9%) 1,493 ms/op [Average]
  (min, avg, max) = (244,813, 245,950, 247,607), stdev = 0,987
  CI (99.9%): [244,457, 247,443] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 128, patternSize = 2)

# Run progress: 14,34% complete, ETA 11:29:56
# Fork: 1 of 1
# Warmup Iteration   1: 1485,734 ms/op
# Warmup Iteration   2: 1352,901 ms/op
# Warmup Iteration   3: 1342,606 ms/op
# Warmup Iteration   4: 1346,028 ms/op
# Warmup Iteration   5: 1341,187 ms/op
# Warmup Iteration   6: 1341,721 ms/op
# Warmup Iteration   7: 1343,575 ms/op
# Warmup Iteration   8: 1346,234 ms/op
# Warmup Iteration   9: 1343,638 ms/op
# Warmup Iteration  10: 1341,126 ms/op
Iteration   1: 1342,084 ms/op
Iteration   2: 1341,964 ms/op
Iteration   3: 1349,164 ms/op
Iteration   4: 1340,797 ms/op
Iteration   5: 1342,042 ms/op
Iteration   6: 1341,937 ms/op
Iteration   7: 1341,089 ms/op
Iteration   8: 1341,801 ms/op
Iteration   9: 1341,034 ms/op
Iteration  10: 1342,781 ms/op


Result "benchmarkFind":
  1342,469 ±(99.9%) 3,669 ms/op [Average]
  (min, avg, max) = (1340,797, 1342,469, 1349,164), stdev = 2,426
  CI (99.9%): [1338,801, 1346,138] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 128, patternSize = 4)

# Run progress: 14,38% complete, ETA 11:30:18
# Fork: 1 of 1
# Warmup Iteration   1: 912,387 ms/op
# Warmup Iteration   2: 898,336 ms/op
# Warmup Iteration   3: 898,642 ms/op
# Warmup Iteration   4: 891,176 ms/op
# Warmup Iteration   5: 893,396 ms/op
# Warmup Iteration   6: 900,326 ms/op
# Warmup Iteration   7: 903,116 ms/op
# Warmup Iteration   8: 902,744 ms/op
# Warmup Iteration   9: 904,427 ms/op
# Warmup Iteration  10: 899,005 ms/op
Iteration   1: 900,826 ms/op
Iteration   2: 899,322 ms/op
Iteration   3: 899,184 ms/op
Iteration   4: 948,408 ms/op
Iteration   5: 909,098 ms/op
Iteration   6: 903,691 ms/op
Iteration   7: 901,219 ms/op
Iteration   8: 938,709 ms/op
Iteration   9: 892,454 ms/op
Iteration  10: 896,644 ms/op


Result "benchmarkFind":
  908,955 ±(99.9%) 28,542 ms/op [Average]
  (min, avg, max) = (892,454, 908,955, 948,408), stdev = 18,879
  CI (99.9%): [880,414, 937,497] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 128, patternSize = 8)

# Run progress: 14,43% complete, ETA 11:31:25
# Fork: 1 of 1
# Warmup Iteration   1: 913,096 ms/op
# Warmup Iteration   2: 903,646 ms/op
# Warmup Iteration   3: 920,943 ms/op
# Warmup Iteration   4: 905,611 ms/op
# Warmup Iteration   5: 900,257 ms/op
# Warmup Iteration   6: 908,106 ms/op
# Warmup Iteration   7: 891,101 ms/op
# Warmup Iteration   8: 891,205 ms/op
# Warmup Iteration   9: 888,373 ms/op
# Warmup Iteration  10: 893,096 ms/op
Iteration   1: 893,240 ms/op
Iteration   2: 890,887 ms/op
Iteration   3: 894,254 ms/op
Iteration   4: 890,743 ms/op
Iteration   5: 890,590 ms/op
Iteration   6: 897,308 ms/op
Iteration   7: 892,938 ms/op
Iteration   8: 901,175 ms/op
Iteration   9: 892,188 ms/op
Iteration  10: 892,200 ms/op


Result "benchmarkFind":
  893,552 ±(99.9%) 5,055 ms/op [Average]
  (min, avg, max) = (890,590, 893,552, 901,175), stdev = 3,344
  CI (99.9%): [888,497, 898,608] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 128, patternSize = 16)

# Run progress: 14,48% complete, ETA 11:32:29
# Fork: 1 of 1
# Warmup Iteration   1: 915,497 ms/op
# Warmup Iteration   2: 906,792 ms/op
# Warmup Iteration   3: 904,370 ms/op
# Warmup Iteration   4: 905,470 ms/op
# Warmup Iteration   5: 903,098 ms/op
# Warmup Iteration   6: 906,504 ms/op
# Warmup Iteration   7: 897,689 ms/op
# Warmup Iteration   8: 896,483 ms/op
# Warmup Iteration   9: 888,474 ms/op
# Warmup Iteration  10: 938,366 ms/op
Iteration   1: 892,025 ms/op
Iteration   2: 886,425 ms/op
Iteration   3: 889,455 ms/op
Iteration   4: 890,988 ms/op
Iteration   5: 893,615 ms/op
Iteration   6: 893,641 ms/op
Iteration   7: 889,572 ms/op
Iteration   8: 903,941 ms/op
Iteration   9: 908,966 ms/op
Iteration  10: 915,674 ms/op


Result "benchmarkFind":
  896,430 ±(99.9%) 14,644 ms/op [Average]
  (min, avg, max) = (886,425, 896,430, 915,674), stdev = 9,686
  CI (99.9%): [881,786, 911,074] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 128, patternSize = 32)

# Run progress: 14,52% complete, ETA 11:33:34
# Fork: 1 of 1
# Warmup Iteration   1: 1052,545 ms/op
# Warmup Iteration   2: 960,479 ms/op
# Warmup Iteration   3: 1023,009 ms/op
# Warmup Iteration   4: 960,249 ms/op
# Warmup Iteration   5: 960,016 ms/op
# Warmup Iteration   6: 1003,613 ms/op
# Warmup Iteration   7: 1243,115 ms/op
# Warmup Iteration   8: 985,478 ms/op
# Warmup Iteration   9: 1043,269 ms/op
# Warmup Iteration  10: 923,763 ms/op
Iteration   1: 942,442 ms/op
Iteration   2: 911,664 ms/op
Iteration   3: 910,593 ms/op
Iteration   4: 898,706 ms/op
Iteration   5: 893,206 ms/op
Iteration   6: 893,891 ms/op
Iteration   7: 892,066 ms/op
Iteration   8: 892,252 ms/op
Iteration   9: 889,618 ms/op
Iteration  10: 888,284 ms/op


Result "benchmarkFind":
  901,272 ±(99.9%) 25,130 ms/op [Average]
  (min, avg, max) = (888,284, 901,272, 942,442), stdev = 16,622
  CI (99.9%): [876,142, 926,402] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 128, patternSize = 64)

# Run progress: 14,57% complete, ETA 11:34:26
# Fork: 1 of 1
# Warmup Iteration   1: 920,283 ms/op
# Warmup Iteration   2: 905,738 ms/op
# Warmup Iteration   3: 943,109 ms/op
# Warmup Iteration   4: 897,334 ms/op
# Warmup Iteration   5: 893,207 ms/op
# Warmup Iteration   6: 894,212 ms/op
# Warmup Iteration   7: 893,677 ms/op
# Warmup Iteration   8: 887,533 ms/op
# Warmup Iteration   9: 888,319 ms/op
# Warmup Iteration  10: 891,369 ms/op
Iteration   1: 888,799 ms/op
Iteration   2: 889,653 ms/op
Iteration   3: 901,630 ms/op
Iteration   4: 903,305 ms/op
Iteration   5: 928,548 ms/op
Iteration   6: 899,091 ms/op
Iteration   7: 903,025 ms/op
Iteration   8: 894,225 ms/op
Iteration   9: 901,011 ms/op
Iteration  10: 894,819 ms/op


Result "benchmarkFind":
  900,411 ±(99.9%) 16,945 ms/op [Average]
  (min, avg, max) = (888,799, 900,411, 928,548), stdev = 11,208
  CI (99.9%): [883,465, 917,356] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 128, patternSize = 128)

# Run progress: 14,61% complete, ETA 11:35:30
# Fork: 1 of 1
# Warmup Iteration   1: 918,468 ms/op
# Warmup Iteration   2: 909,467 ms/op
# Warmup Iteration   3: 905,750 ms/op
# Warmup Iteration   4: 910,163 ms/op
# Warmup Iteration   5: 903,973 ms/op
# Warmup Iteration   6: 905,880 ms/op
# Warmup Iteration   7: 905,091 ms/op
# Warmup Iteration   8: 899,073 ms/op
# Warmup Iteration   9: 903,503 ms/op
# Warmup Iteration  10: 899,534 ms/op
Iteration   1: 895,366 ms/op
Iteration   2: 896,498 ms/op
Iteration   3: 903,942 ms/op
Iteration   4: 903,287 ms/op
Iteration   5: 902,907 ms/op
Iteration   6: 937,976 ms/op
Iteration   7: 901,177 ms/op
Iteration   8: 897,107 ms/op
Iteration   9: 899,954 ms/op
Iteration  10: 899,422 ms/op


Result "benchmarkFind":
  903,764 ±(99.9%) 18,715 ms/op [Average]
  (min, avg, max) = (895,366, 903,764, 937,976), stdev = 12,379
  CI (99.9%): [885,048, 922,479] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaIndexOfMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 128, patternSize = 256)

# Run progress: 14,66% complete, ETA 11:36:34
# Fork: 1 of 1
# Warmup Iteration   1: 920,784 ms/op
# Warmup Iteration   2: 909,121 ms/op
# Warmup Iteration   3: 904,230 ms/op
# Warmup Iteration   4: 909,383 ms/op
# Warmup Iteration   5: 905,378 ms/op
# Warmup Iteration   6: 902,849 ms/op
# Warmup Iteration   7: 904,889 ms/op
# Warmup Iteration   8: 896,919 ms/op
# Warmup Iteration   9: 900,521 ms/op
# Warmup Iteration  10: 903,507 ms/op
Iteration   1: 899,812 ms/op
Iteration   2: 897,870 ms/op
Iteration   3: 900,562 ms/op
Iteration   4: 905,884 ms/op
Iteration   5: 903,569 ms/op
Iteration   6: 899,587 ms/op
Iteration   7: 901,194 ms/op
Iteration   8: 895,409 ms/op
Iteration   9: 899,831 ms/op
Iteration  10: 902,802 ms/op


Result "benchmarkFind":
  900,652 ±(99.9%) 4,466 ms/op [Average]
  (min, avg, max) = (895,409, 900,652, 905,884), stdev = 2,954
  CI (99.9%): [896,185, 905,118] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternSize = 2)

# Run progress: 14,71% complete, ETA 11:37:37
# Fork: 1 of 1
# Warmup Iteration   1: 0,145 ms/op
# Warmup Iteration   2: 0,134 ms/op
# Warmup Iteration   3: 0,154 ms/op
# Warmup Iteration   4: 0,135 ms/op
# Warmup Iteration   5: 0,135 ms/op
# Warmup Iteration   6: 0,136 ms/op
# Warmup Iteration   7: 0,134 ms/op
# Warmup Iteration   8: 0,141 ms/op
# Warmup Iteration   9: 0,139 ms/op
# Warmup Iteration  10: 0,137 ms/op
Iteration   1: 0,134 ms/op
Iteration   2: 0,134 ms/op
Iteration   3: 0,147 ms/op
Iteration   4: 0,136 ms/op
Iteration   5: 0,136 ms/op
Iteration   6: 0,142 ms/op
Iteration   7: 0,140 ms/op
Iteration   8: 0,140 ms/op
Iteration   9: 0,141 ms/op
Iteration  10: 0,141 ms/op


Result "benchmarkFind":
  0,139 ±(99.9%) 0,006 ms/op [Average]
  (min, avg, max) = (0,134, 0,139, 0,147), stdev = 0,004
  CI (99.9%): [0,133, 0,145] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternSize = 4)

# Run progress: 14,75% complete, ETA 11:37:06
# Fork: 1 of 1
# Warmup Iteration   1: 0,488 ms/op
# Warmup Iteration   2: 0,461 ms/op
# Warmup Iteration   3: 0,473 ms/op
# Warmup Iteration   4: 0,465 ms/op
# Warmup Iteration   5: 0,472 ms/op
# Warmup Iteration   6: 0,462 ms/op
# Warmup Iteration   7: 0,464 ms/op
# Warmup Iteration   8: 0,467 ms/op
# Warmup Iteration   9: 0,459 ms/op
# Warmup Iteration  10: 0,472 ms/op
Iteration   1: 0,462 ms/op
Iteration   2: 0,461 ms/op
Iteration   3: 0,462 ms/op
Iteration   4: 0,462 ms/op
Iteration   5: 0,621 ms/op
Iteration   6: 0,648 ms/op
Iteration   7: 0,473 ms/op
Iteration   8: 0,467 ms/op
Iteration   9: 0,489 ms/op
Iteration  10: 0,466 ms/op


Result "benchmarkFind":
  0,501 ±(99.9%) 0,108 ms/op [Average]
  (min, avg, max) = (0,461, 0,501, 0,648), stdev = 0,071
  CI (99.9%): [0,393, 0,609] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternSize = 8)

# Run progress: 14,80% complete, ETA 11:36:32
# Fork: 1 of 1
# Warmup Iteration   1: 26,140 ms/op
# Warmup Iteration   2: 26,489 ms/op
# Warmup Iteration   3: 26,859 ms/op
# Warmup Iteration   4: 26,868 ms/op
# Warmup Iteration   5: 28,001 ms/op
# Warmup Iteration   6: 31,700 ms/op
# Warmup Iteration   7: 26,488 ms/op
# Warmup Iteration   8: 25,284 ms/op
# Warmup Iteration   9: 30,786 ms/op
# Warmup Iteration  10: 26,616 ms/op
Iteration   1: 24,959 ms/op
Iteration   2: 25,018 ms/op
Iteration   3: 24,920 ms/op
Iteration   4: 25,043 ms/op
Iteration   5: 25,147 ms/op
Iteration   6: 24,926 ms/op
Iteration   7: 24,847 ms/op
Iteration   8: 24,846 ms/op
Iteration   9: 25,172 ms/op
Iteration  10: 24,930 ms/op


Result "benchmarkFind":
  24,981 ±(99.9%) 0,171 ms/op [Average]
  (min, avg, max) = (24,846, 24,981, 25,172), stdev = 0,113
  CI (99.9%): [24,810, 25,152] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternSize = 16)

# Run progress: 14,84% complete, ETA 11:35:59
# Fork: 1 of 1
# Warmup Iteration   1: 341,365 ms/op
# Warmup Iteration   2: 346,836 ms/op
# Warmup Iteration   3: 348,002 ms/op
# Warmup Iteration   4: 348,407 ms/op
# Warmup Iteration   5: 347,819 ms/op
# Warmup Iteration   6: 349,034 ms/op
# Warmup Iteration   7: 347,453 ms/op
# Warmup Iteration   8: 347,072 ms/op
# Warmup Iteration   9: 348,051 ms/op
# Warmup Iteration  10: 360,786 ms/op
Iteration   1: 358,054 ms/op
Iteration   2: 346,281 ms/op
Iteration   3: 346,988 ms/op
Iteration   4: 346,600 ms/op
Iteration   5: 346,237 ms/op
Iteration   6: 349,154 ms/op
Iteration   7: 347,690 ms/op
Iteration   8: 347,001 ms/op
Iteration   9: 347,964 ms/op
Iteration  10: 353,617 ms/op


Result "benchmarkFind":
  348,959 ±(99.9%) 5,854 ms/op [Average]
  (min, avg, max) = (346,237, 348,959, 358,054), stdev = 3,872
  CI (99.9%): [343,105, 354,812] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternSize = 32)

# Run progress: 14,89% complete, ETA 11:35:34
# Fork: 1 of 1
# Warmup Iteration   1: 264,829 ms/op
# Warmup Iteration   2: 260,769 ms/op
# Warmup Iteration   3: 262,284 ms/op
# Warmup Iteration   4: 263,089 ms/op
# Warmup Iteration   5: 263,116 ms/op
# Warmup Iteration   6: 262,356 ms/op
# Warmup Iteration   7: 262,489 ms/op
# Warmup Iteration   8: 262,858 ms/op
# Warmup Iteration   9: 264,653 ms/op
# Warmup Iteration  10: 262,257 ms/op
Iteration   1: 273,592 ms/op
Iteration   2: 263,298 ms/op
Iteration   3: 277,602 ms/op
Iteration   4: 273,359 ms/op
Iteration   5: 278,082 ms/op
Iteration   6: 273,162 ms/op
Iteration   7: 262,596 ms/op
Iteration   8: 256,265 ms/op
Iteration   9: 253,805 ms/op
Iteration  10: 253,208 ms/op


Result "benchmarkFind":
  266,497 ±(99.9%) 14,841 ms/op [Average]
  (min, avg, max) = (253,208, 266,497, 278,082), stdev = 9,816
  CI (99.9%): [251,656, 281,338] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternSize = 64)

# Run progress: 14,94% complete, ETA 11:35:09
# Fork: 1 of 1
# Warmup Iteration   1: 218,742 ms/op
# Warmup Iteration   2: 216,655 ms/op
# Warmup Iteration   3: 217,203 ms/op
# Warmup Iteration   4: 217,644 ms/op
# Warmup Iteration   5: 217,556 ms/op
# Warmup Iteration   6: 217,525 ms/op
# Warmup Iteration   7: 217,368 ms/op
# Warmup Iteration   8: 217,569 ms/op
# Warmup Iteration   9: 226,405 ms/op
# Warmup Iteration  10: 219,797 ms/op
Iteration   1: 221,472 ms/op
Iteration   2: 216,303 ms/op
Iteration   3: 219,235 ms/op
Iteration   4: 215,639 ms/op
Iteration   5: 215,396 ms/op
Iteration   6: 214,615 ms/op
Iteration   7: 219,667 ms/op
Iteration   8: 293,293 ms/op
Iteration   9: 288,068 ms/op
Iteration  10: 242,372 ms/op


Result "benchmarkFind":
  234,606 ±(99.9%) 46,347 ms/op [Average]
  (min, avg, max) = (214,615, 234,606, 293,293), stdev = 30,656
  CI (99.9%): [188,259, 280,953] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternSize = 128)

# Run progress: 14,98% complete, ETA 11:34:50
# Fork: 1 of 1
# Warmup Iteration   1: 201,525 ms/op
# Warmup Iteration   2: 198,497 ms/op
# Warmup Iteration   3: 212,343 ms/op
# Warmup Iteration   4: 224,881 ms/op
# Warmup Iteration   5: 213,419 ms/op
# Warmup Iteration   6: 203,757 ms/op
# Warmup Iteration   7: 233,982 ms/op
# Warmup Iteration   8: 241,720 ms/op
# Warmup Iteration   9: 203,132 ms/op
# Warmup Iteration  10: 221,948 ms/op
Iteration   1: 193,610 ms/op
Iteration   2: 185,621 ms/op
Iteration   3: 186,790 ms/op
Iteration   4: 188,992 ms/op
Iteration   5: 187,298 ms/op
Iteration   6: 201,475 ms/op
Iteration   7: 210,859 ms/op
Iteration   8: 209,001 ms/op
Iteration   9: 211,760 ms/op
Iteration  10: 210,666 ms/op


Result "benchmarkFind":
  198,607 ±(99.9%) 17,003 ms/op [Average]
  (min, avg, max) = (185,621, 198,607, 211,760), stdev = 11,247
  CI (99.9%): [181,604, 215,610] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternSize = 256)

# Run progress: 15,03% complete, ETA 11:34:32
# Fork: 1 of 1
# Warmup Iteration   1: 162,824 ms/op
# Warmup Iteration   2: 162,879 ms/op
# Warmup Iteration   3: 167,113 ms/op
# Warmup Iteration   4: 161,327 ms/op
# Warmup Iteration   5: 162,029 ms/op
# Warmup Iteration   6: 163,563 ms/op
# Warmup Iteration   7: 161,384 ms/op
# Warmup Iteration   8: 158,872 ms/op
# Warmup Iteration   9: 161,548 ms/op
# Warmup Iteration  10: 158,405 ms/op
Iteration   1: 158,622 ms/op
Iteration   2: 158,167 ms/op
Iteration   3: 173,580 ms/op
Iteration   4: 176,499 ms/op
Iteration   5: 175,463 ms/op
Iteration   6: 175,254 ms/op
Iteration   7: 175,346 ms/op
Iteration   8: 176,549 ms/op
Iteration   9: 176,643 ms/op
Iteration  10: 177,627 ms/op


Result "benchmarkFind":
  172,375 ±(99.9%) 11,261 ms/op [Average]
  (min, avg, max) = (158,167, 172,375, 177,627), stdev = 7,449
  CI (99.9%): [161,114, 183,636] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternSize = 2)

# Run progress: 15,07% complete, ETA 11:34:12
# Fork: 1 of 1
# Warmup Iteration   1: 0,533 ms/op
# Warmup Iteration   2: 0,499 ms/op
# Warmup Iteration   3: 0,504 ms/op
# Warmup Iteration   4: 0,502 ms/op
# Warmup Iteration   5: 0,502 ms/op
# Warmup Iteration   6: 0,496 ms/op
# Warmup Iteration   7: 0,500 ms/op
# Warmup Iteration   8: 0,502 ms/op
# Warmup Iteration   9: 0,499 ms/op
# Warmup Iteration  10: 0,498 ms/op
Iteration   1: 0,498 ms/op
Iteration   2: 0,496 ms/op
Iteration   3: 0,503 ms/op
Iteration   4: 0,496 ms/op
Iteration   5: 0,503 ms/op
Iteration   6: 0,500 ms/op
Iteration   7: 0,501 ms/op
Iteration   8: 0,555 ms/op
Iteration   9: 0,494 ms/op
Iteration  10: 0,492 ms/op


Result "benchmarkFind":
  0,504 ±(99.9%) 0,028 ms/op [Average]
  (min, avg, max) = (0,492, 0,504, 0,555), stdev = 0,018
  CI (99.9%): [0,476, 0,532] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternSize = 4)

# Run progress: 15,12% complete, ETA 11:33:37
# Fork: 1 of 1
# Warmup Iteration   1: 21,110 ms/op
# Warmup Iteration   2: 20,606 ms/op
# Warmup Iteration   3: 20,692 ms/op
# Warmup Iteration   4: 20,630 ms/op
# Warmup Iteration   5: 21,137 ms/op
# Warmup Iteration   6: 20,619 ms/op
# Warmup Iteration   7: 20,782 ms/op
# Warmup Iteration   8: 20,738 ms/op
# Warmup Iteration   9: 20,720 ms/op
# Warmup Iteration  10: 20,842 ms/op
Iteration   1: 20,605 ms/op
Iteration   2: 20,468 ms/op
Iteration   3: 20,700 ms/op
Iteration   4: 20,414 ms/op
Iteration   5: 20,622 ms/op
Iteration   6: 20,502 ms/op
Iteration   7: 20,483 ms/op
Iteration   8: 20,644 ms/op
Iteration   9: 20,843 ms/op
Iteration  10: 20,459 ms/op


Result "benchmarkFind":
  20,574 ±(99.9%) 0,201 ms/op [Average]
  (min, avg, max) = (20,414, 20,574, 20,843), stdev = 0,133
  CI (99.9%): [20,373, 20,775] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternSize = 8)

# Run progress: 15,17% complete, ETA 11:33:04
# Fork: 1 of 1
# Warmup Iteration   1: 239,872 ms/op
# Warmup Iteration   2: 238,257 ms/op
# Warmup Iteration   3: 238,855 ms/op
# Warmup Iteration   4: 239,639 ms/op
# Warmup Iteration   5: 241,016 ms/op
# Warmup Iteration   6: 239,683 ms/op
# Warmup Iteration   7: 239,498 ms/op
# Warmup Iteration   8: 239,801 ms/op
# Warmup Iteration   9: 239,409 ms/op
# Warmup Iteration  10: 239,039 ms/op
Iteration   1: 238,733 ms/op
Iteration   2: 239,115 ms/op
Iteration   3: 239,382 ms/op
Iteration   4: 239,397 ms/op
Iteration   5: 239,665 ms/op
Iteration   6: 239,921 ms/op
Iteration   7: 240,745 ms/op
Iteration   8: 237,698 ms/op
Iteration   9: 239,570 ms/op
Iteration  10: 238,108 ms/op


Result "benchmarkFind":
  239,233 ±(99.9%) 1,333 ms/op [Average]
  (min, avg, max) = (237,698, 239,233, 240,745), stdev = 0,882
  CI (99.9%): [237,900, 240,566] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternSize = 16)

# Run progress: 15,21% complete, ETA 11:32:55
# Fork: 1 of 1
# Warmup Iteration   1: 178,500 ms/op
# Warmup Iteration   2: 176,205 ms/op
# Warmup Iteration   3: 176,469 ms/op
# Warmup Iteration   4: 176,113 ms/op
# Warmup Iteration   5: 174,737 ms/op
# Warmup Iteration   6: 175,575 ms/op
# Warmup Iteration   7: 175,914 ms/op
# Warmup Iteration   8: 175,555 ms/op
# Warmup Iteration   9: 167,923 ms/op
# Warmup Iteration  10: 163,067 ms/op
Iteration   1: 179,327 ms/op
Iteration   2: 161,780 ms/op
Iteration   3: 162,628 ms/op
Iteration   4: 178,260 ms/op
Iteration   5: 199,825 ms/op
Iteration   6: 199,365 ms/op
Iteration   7: 200,096 ms/op
Iteration   8: 200,238 ms/op
Iteration   9: 200,807 ms/op
Iteration  10: 200,121 ms/op


Result "benchmarkFind":
  188,245 ±(99.9%) 24,569 ms/op [Average]
  (min, avg, max) = (161,780, 188,245, 200,807), stdev = 16,251
  CI (99.9%): [163,676, 212,813] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternSize = 32)

# Run progress: 15,26% complete, ETA 11:32:32
# Fork: 1 of 1
# Warmup Iteration   1: 148,634 ms/op
# Warmup Iteration   2: 143,787 ms/op
# Warmup Iteration   3: 143,797 ms/op
# Warmup Iteration   4: 143,883 ms/op
# Warmup Iteration   5: 144,248 ms/op
# Warmup Iteration   6: 143,876 ms/op
# Warmup Iteration   7: 143,656 ms/op
# Warmup Iteration   8: 138,279 ms/op
# Warmup Iteration   9: 134,494 ms/op
# Warmup Iteration  10: 134,592 ms/op
Iteration   1: 133,731 ms/op
Iteration   2: 149,796 ms/op
Iteration   3: 162,430 ms/op
Iteration   4: 161,695 ms/op
Iteration   5: 162,119 ms/op
Iteration   6: 160,854 ms/op
Iteration   7: 162,500 ms/op
Iteration   8: 162,482 ms/op
Iteration   9: 162,606 ms/op
Iteration  10: 161,784 ms/op


Result "benchmarkFind":
  158,000 ±(99.9%) 14,169 ms/op [Average]
  (min, avg, max) = (133,731, 158,000, 162,606), stdev = 9,372
  CI (99.9%): [143,830, 172,169] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternSize = 64)

# Run progress: 15,30% complete, ETA 11:32:10
# Fork: 1 of 1
# Warmup Iteration   1: 138,299 ms/op
# Warmup Iteration   2: 134,124 ms/op
# Warmup Iteration   3: 133,845 ms/op
# Warmup Iteration   4: 134,284 ms/op
# Warmup Iteration   5: 133,838 ms/op
# Warmup Iteration   6: 133,802 ms/op
# Warmup Iteration   7: 129,244 ms/op
# Warmup Iteration   8: 125,003 ms/op
# Warmup Iteration   9: 124,364 ms/op
# Warmup Iteration  10: 124,208 ms/op
Iteration   1: 142,486 ms/op
Iteration   2: 148,543 ms/op
Iteration   3: 149,131 ms/op
Iteration   4: 148,483 ms/op
Iteration   5: 148,243 ms/op
Iteration   6: 147,864 ms/op
Iteration   7: 148,179 ms/op
Iteration   8: 147,668 ms/op
Iteration   9: 148,028 ms/op
Iteration  10: 147,814 ms/op


Result "benchmarkFind":
  147,644 ±(99.9%) 2,815 ms/op [Average]
  (min, avg, max) = (142,486, 147,644, 149,131), stdev = 1,862
  CI (99.9%): [144,829, 150,459] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternSize = 128)

# Run progress: 15,35% complete, ETA 11:31:45
# Fork: 1 of 1
# Warmup Iteration   1: 129,446 ms/op
# Warmup Iteration   2: 125,862 ms/op
# Warmup Iteration   3: 126,249 ms/op
# Warmup Iteration   4: 134,976 ms/op
# Warmup Iteration   5: 126,443 ms/op
# Warmup Iteration   6: 126,596 ms/op
# Warmup Iteration   7: 120,887 ms/op
# Warmup Iteration   8: 118,236 ms/op
# Warmup Iteration   9: 119,674 ms/op
# Warmup Iteration  10: 120,878 ms/op
Iteration   1: 141,585 ms/op
Iteration   2: 140,856 ms/op
Iteration   3: 141,669 ms/op
Iteration   4: 141,738 ms/op
Iteration   5: 141,516 ms/op
Iteration   6: 141,313 ms/op
Iteration   7: 140,619 ms/op
Iteration   8: 140,438 ms/op
Iteration   9: 141,158 ms/op
Iteration  10: 141,155 ms/op


Result "benchmarkFind":
  141,205 ±(99.9%) 0,678 ms/op [Average]
  (min, avg, max) = (140,438, 141,205, 141,738), stdev = 0,448
  CI (99.9%): [140,527, 141,883] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternSize = 256)

# Run progress: 15,40% complete, ETA 11:31:24
# Fork: 1 of 1
# Warmup Iteration   1: 100,710 ms/op
# Warmup Iteration   2: 95,960 ms/op
# Warmup Iteration   3: 95,728 ms/op
# Warmup Iteration   4: 95,633 ms/op
# Warmup Iteration   5: 94,249 ms/op
# Warmup Iteration   6: 88,890 ms/op
# Warmup Iteration   7: 89,468 ms/op
# Warmup Iteration   8: 97,007 ms/op
# Warmup Iteration   9: 108,047 ms/op
# Warmup Iteration  10: 108,568 ms/op
Iteration   1: 108,186 ms/op
Iteration   2: 107,818 ms/op
Iteration   3: 107,356 ms/op
Iteration   4: 107,162 ms/op
Iteration   5: 106,977 ms/op
Iteration   6: 108,482 ms/op
Iteration   7: 106,911 ms/op
Iteration   8: 107,676 ms/op
Iteration   9: 107,519 ms/op
Iteration  10: 107,592 ms/op


Result "benchmarkFind":
  107,568 ±(99.9%) 0,762 ms/op [Average]
  (min, avg, max) = (106,911, 107,568, 108,482), stdev = 0,504
  CI (99.9%): [106,806, 108,330] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternSize = 2)

# Run progress: 15,44% complete, ETA 11:31:01
# Fork: 1 of 1
# Warmup Iteration   1: 1,986 ms/op
# Warmup Iteration   2: 1,845 ms/op
# Warmup Iteration   3: 1,844 ms/op
# Warmup Iteration   4: 1,852 ms/op
# Warmup Iteration   5: 1,850 ms/op
# Warmup Iteration   6: 1,840 ms/op
# Warmup Iteration   7: 1,844 ms/op
# Warmup Iteration   8: 1,844 ms/op
# Warmup Iteration   9: 1,844 ms/op
# Warmup Iteration  10: 1,850 ms/op
Iteration   1: 1,843 ms/op
Iteration   2: 1,837 ms/op
Iteration   3: 1,840 ms/op
Iteration   4: 1,847 ms/op
Iteration   5: 2,007 ms/op
Iteration   6: 1,854 ms/op
Iteration   7: 1,842 ms/op
Iteration   8: 1,868 ms/op
Iteration   9: 1,976 ms/op
Iteration  10: 1,945 ms/op


Result "benchmarkFind":
  1,886 ±(99.9%) 0,097 ms/op [Average]
  (min, avg, max) = (1,837, 1,886, 2,007), stdev = 0,064
  CI (99.9%): [1,788, 1,983] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternSize = 4)

# Run progress: 15,49% complete, ETA 11:30:27
# Fork: 1 of 1
# Warmup Iteration   1: 167,897 ms/op
# Warmup Iteration   2: 193,086 ms/op
# Warmup Iteration   3: 194,120 ms/op
# Warmup Iteration   4: 193,292 ms/op
# Warmup Iteration   5: 193,983 ms/op
# Warmup Iteration   6: 194,300 ms/op
# Warmup Iteration   7: 192,910 ms/op
# Warmup Iteration   8: 195,453 ms/op
# Warmup Iteration   9: 193,815 ms/op
# Warmup Iteration  10: 192,809 ms/op
Iteration   1: 192,481 ms/op
Iteration   2: 193,073 ms/op
Iteration   3: 192,804 ms/op
Iteration   4: 193,239 ms/op
Iteration   5: 194,308 ms/op
Iteration   6: 193,533 ms/op
Iteration   7: 192,325 ms/op
Iteration   8: 195,789 ms/op
Iteration   9: 192,531 ms/op
Iteration  10: 193,498 ms/op


Result "benchmarkFind":
  193,358 ±(99.9%) 1,577 ms/op [Average]
  (min, avg, max) = (192,325, 193,358, 195,789), stdev = 1,043
  CI (99.9%): [191,782, 194,935] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternSize = 8)

# Run progress: 15,53% complete, ETA 11:30:13
# Fork: 1 of 1
# Warmup Iteration   1: 119,847 ms/op
# Warmup Iteration   2: 119,122 ms/op
# Warmup Iteration   3: 119,058 ms/op
# Warmup Iteration   4: 118,716 ms/op
# Warmup Iteration   5: 117,861 ms/op
# Warmup Iteration   6: 113,961 ms/op
# Warmup Iteration   7: 103,141 ms/op
# Warmup Iteration   8: 103,569 ms/op
# Warmup Iteration   9: 104,918 ms/op
# Warmup Iteration  10: 133,150 ms/op
Iteration   1: 132,807 ms/op
Iteration   2: 132,627 ms/op
Iteration   3: 131,548 ms/op
Iteration   4: 130,802 ms/op
Iteration   5: 132,063 ms/op
Iteration   6: 131,140 ms/op
Iteration   7: 131,694 ms/op
Iteration   8: 132,507 ms/op
Iteration   9: 132,213 ms/op
Iteration  10: 131,560 ms/op


Result "benchmarkFind":
  131,896 ±(99.9%) 0,997 ms/op [Average]
  (min, avg, max) = (130,802, 131,896, 132,807), stdev = 0,659
  CI (99.9%): [130,899, 132,893] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternSize = 16)

# Run progress: 15,58% complete, ETA 11:29:47
# Fork: 1 of 1
# Warmup Iteration   1: 89,904 ms/op
# Warmup Iteration   2: 89,076 ms/op
# Warmup Iteration   3: 89,468 ms/op
# Warmup Iteration   4: 89,280 ms/op
# Warmup Iteration   5: 82,397 ms/op
# Warmup Iteration   6: 77,989 ms/op
# Warmup Iteration   7: 83,851 ms/op
# Warmup Iteration   8: 98,489 ms/op
# Warmup Iteration   9: 98,426 ms/op
# Warmup Iteration  10: 98,284 ms/op
Iteration   1: 98,387 ms/op
Iteration   2: 107,409 ms/op
Iteration   3: 98,184 ms/op
Iteration   4: 99,045 ms/op
Iteration   5: 98,111 ms/op
Iteration   6: 98,363 ms/op
Iteration   7: 98,565 ms/op
Iteration   8: 98,126 ms/op
Iteration   9: 98,508 ms/op
Iteration  10: 97,711 ms/op


Result "benchmarkFind":
  99,241 ±(99.9%) 4,371 ms/op [Average]
  (min, avg, max) = (97,711, 99,241, 107,409), stdev = 2,891
  CI (99.9%): [94,870, 103,612] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternSize = 32)

# Run progress: 15,63% complete, ETA 11:29:24
# Fork: 1 of 1
# Warmup Iteration   1: 74,494 ms/op
# Warmup Iteration   2: 73,439 ms/op
# Warmup Iteration   3: 73,579 ms/op
# Warmup Iteration   4: 72,383 ms/op
# Warmup Iteration   5: 67,356 ms/op
# Warmup Iteration   6: 69,007 ms/op
# Warmup Iteration   7: 84,435 ms/op
# Warmup Iteration   8: 84,300 ms/op
# Warmup Iteration   9: 84,420 ms/op
# Warmup Iteration  10: 84,550 ms/op
Iteration   1: 84,227 ms/op
Iteration   2: 84,636 ms/op
Iteration   3: 84,045 ms/op
Iteration   4: 83,926 ms/op
Iteration   5: 84,172 ms/op
Iteration   6: 84,006 ms/op
Iteration   7: 84,192 ms/op
Iteration   8: 84,096 ms/op
Iteration   9: 84,009 ms/op
Iteration  10: 83,949 ms/op


Result "benchmarkFind":
  84,126 ±(99.9%) 0,312 ms/op [Average]
  (min, avg, max) = (83,926, 84,126, 84,636), stdev = 0,206
  CI (99.9%): [83,814, 84,438] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternSize = 64)

# Run progress: 15,67% complete, ETA 11:28:54
# Fork: 1 of 1
# Warmup Iteration   1: 76,041 ms/op
# Warmup Iteration   2: 74,408 ms/op
# Warmup Iteration   3: 74,120 ms/op
# Warmup Iteration   4: 73,115 ms/op
# Warmup Iteration   5: 64,874 ms/op
# Warmup Iteration   6: 68,459 ms/op
# Warmup Iteration   7: 83,069 ms/op
# Warmup Iteration   8: 83,475 ms/op
# Warmup Iteration   9: 83,577 ms/op
# Warmup Iteration  10: 83,540 ms/op
Iteration   1: 83,776 ms/op
Iteration   2: 83,890 ms/op
Iteration   3: 83,618 ms/op
Iteration   4: 83,788 ms/op
Iteration   5: 83,458 ms/op
Iteration   6: 83,146 ms/op
Iteration   7: 83,355 ms/op
Iteration   8: 83,650 ms/op
Iteration   9: 83,298 ms/op
Iteration  10: 83,800 ms/op


Result "benchmarkFind":
  83,578 ±(99.9%) 0,379 ms/op [Average]
  (min, avg, max) = (83,146, 83,578, 83,890), stdev = 0,251
  CI (99.9%): [83,199, 83,957] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternSize = 128)

# Run progress: 15,72% complete, ETA 11:28:25
# Fork: 1 of 1
# Warmup Iteration   1: 70,958 ms/op
# Warmup Iteration   2: 67,441 ms/op
# Warmup Iteration   3: 68,363 ms/op
# Warmup Iteration   4: 64,829 ms/op
# Warmup Iteration   5: 61,573 ms/op
# Warmup Iteration   6: 71,333 ms/op
# Warmup Iteration   7: 84,957 ms/op
# Warmup Iteration   8: 83,058 ms/op
# Warmup Iteration   9: 79,098 ms/op
# Warmup Iteration  10: 78,708 ms/op
Iteration   1: 79,195 ms/op
Iteration   2: 79,494 ms/op
Iteration   3: 79,287 ms/op
Iteration   4: 78,764 ms/op
Iteration   5: 79,117 ms/op
Iteration   6: 79,021 ms/op
Iteration   7: 78,970 ms/op
Iteration   8: 79,251 ms/op
Iteration   9: 79,624 ms/op
Iteration  10: 79,371 ms/op


Result "benchmarkFind":
  79,209 ±(99.9%) 0,386 ms/op [Average]
  (min, avg, max) = (78,764, 79,209, 79,624), stdev = 0,255
  CI (99.9%): [78,824, 79,595] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternSize = 256)

# Run progress: 15,76% complete, ETA 11:27:58
# Fork: 1 of 1
# Warmup Iteration   1: 65,614 ms/op
# Warmup Iteration   2: 64,117 ms/op
# Warmup Iteration   3: 64,951 ms/op
# Warmup Iteration   4: 59,715 ms/op
# Warmup Iteration   5: 57,466 ms/op
# Warmup Iteration   6: 72,678 ms/op
# Warmup Iteration   7: 73,493 ms/op
# Warmup Iteration   8: 74,849 ms/op
# Warmup Iteration   9: 73,253 ms/op
# Warmup Iteration  10: 73,227 ms/op
Iteration   1: 73,196 ms/op
Iteration   2: 73,487 ms/op
Iteration   3: 73,561 ms/op
Iteration   4: 73,431 ms/op
Iteration   5: 73,123 ms/op
Iteration   6: 72,831 ms/op
Iteration   7: 73,614 ms/op
Iteration   8: 73,370 ms/op
Iteration   9: 73,385 ms/op
Iteration  10: 73,101 ms/op


Result "benchmarkFind":
  73,310 ±(99.9%) 0,368 ms/op [Average]
  (min, avg, max) = (72,831, 73,310, 73,614), stdev = 0,243
  CI (99.9%): [72,942, 73,678] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternSize = 2)

# Run progress: 15,81% complete, ETA 11:27:30
# Fork: 1 of 1
# Warmup Iteration   1: 21,057 ms/op
# Warmup Iteration   2: 19,179 ms/op
# Warmup Iteration   3: 19,188 ms/op
# Warmup Iteration   4: 19,094 ms/op
# Warmup Iteration   5: 19,170 ms/op
# Warmup Iteration   6: 19,101 ms/op
# Warmup Iteration   7: 19,087 ms/op
# Warmup Iteration   8: 19,108 ms/op
# Warmup Iteration   9: 19,148 ms/op
# Warmup Iteration  10: 19,191 ms/op
Iteration   1: 19,190 ms/op
Iteration   2: 19,180 ms/op
Iteration   3: 19,103 ms/op
Iteration   4: 19,145 ms/op
Iteration   5: 19,007 ms/op
Iteration   6: 19,099 ms/op
Iteration   7: 19,205 ms/op
Iteration   8: 19,050 ms/op
Iteration   9: 19,011 ms/op
Iteration  10: 19,114 ms/op


Result "benchmarkFind":
  19,110 ±(99.9%) 0,108 ms/op [Average]
  (min, avg, max) = (19,007, 19,110, 19,205), stdev = 0,071
  CI (99.9%): [19,003, 19,218] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternSize = 4)

# Run progress: 15,85% complete, ETA 11:26:58
# Fork: 1 of 1
# Warmup Iteration   1: 175,318 ms/op
# Warmup Iteration   2: 179,861 ms/op
# Warmup Iteration   3: 179,687 ms/op
# Warmup Iteration   4: 195,240 ms/op
# Warmup Iteration   5: 180,434 ms/op
# Warmup Iteration   6: 178,961 ms/op
# Warmup Iteration   7: 178,600 ms/op
# Warmup Iteration   8: 180,323 ms/op
# Warmup Iteration   9: 180,507 ms/op
# Warmup Iteration  10: 179,135 ms/op
Iteration   1: 180,877 ms/op
Iteration   2: 179,967 ms/op
Iteration   3: 179,604 ms/op
Iteration   4: 178,967 ms/op
Iteration   5: 180,191 ms/op
Iteration   6: 180,392 ms/op
Iteration   7: 179,848 ms/op
Iteration   8: 181,431 ms/op
Iteration   9: 179,788 ms/op
Iteration  10: 180,419 ms/op


Result "benchmarkFind":
  180,148 ±(99.9%) 1,040 ms/op [Average]
  (min, avg, max) = (178,967, 180,148, 181,431), stdev = 0,688
  CI (99.9%): [179,109, 181,188] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternSize = 8)

# Run progress: 15,90% complete, ETA 11:26:35
# Fork: 1 of 1
# Warmup Iteration   1: 87,052 ms/op
# Warmup Iteration   2: 87,129 ms/op
# Warmup Iteration   3: 87,647 ms/op
# Warmup Iteration   4: 87,797 ms/op
# Warmup Iteration   5: 81,177 ms/op
# Warmup Iteration   6: 74,817 ms/op
# Warmup Iteration   7: 81,592 ms/op
# Warmup Iteration   8: 99,514 ms/op
# Warmup Iteration   9: 99,819 ms/op
# Warmup Iteration  10: 99,136 ms/op
Iteration   1: 98,018 ms/op
Iteration   2: 98,918 ms/op
Iteration   3: 98,142 ms/op
Iteration   4: 98,779 ms/op
Iteration   5: 99,131 ms/op
Iteration   6: 99,018 ms/op
Iteration   7: 98,628 ms/op
Iteration   8: 98,193 ms/op
Iteration   9: 98,160 ms/op
Iteration  10: 98,475 ms/op


Result "benchmarkFind":
  98,546 ±(99.9%) 0,614 ms/op [Average]
  (min, avg, max) = (98,018, 98,546, 99,131), stdev = 0,406
  CI (99.9%): [97,932, 99,160] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternSize = 16)

# Run progress: 15,95% complete, ETA 11:26:12
# Fork: 1 of 1
# Warmup Iteration   1: 56,690 ms/op
# Warmup Iteration   2: 57,204 ms/op
# Warmup Iteration   3: 57,064 ms/op
# Warmup Iteration   4: 48,284 ms/op
# Warmup Iteration   5: 55,711 ms/op
# Warmup Iteration   6: 63,648 ms/op
# Warmup Iteration   7: 63,983 ms/op
# Warmup Iteration   8: 63,215 ms/op
# Warmup Iteration   9: 63,250 ms/op
# Warmup Iteration  10: 63,183 ms/op
Iteration   1: 63,188 ms/op
Iteration   2: 63,063 ms/op
Iteration   3: 63,285 ms/op
Iteration   4: 63,747 ms/op
Iteration   5: 63,347 ms/op
Iteration   6: 63,517 ms/op
Iteration   7: 62,881 ms/op
Iteration   8: 63,536 ms/op
Iteration   9: 68,093 ms/op
Iteration  10: 63,295 ms/op


Result "benchmarkFind":
  63,795 ±(99.9%) 2,313 ms/op [Average]
  (min, avg, max) = (62,881, 63,795, 68,093), stdev = 1,530
  CI (99.9%): [61,482, 66,108] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternSize = 32)

# Run progress: 15,99% complete, ETA 11:25:43
# Fork: 1 of 1
# Warmup Iteration   1: 41,427 ms/op
# Warmup Iteration   2: 40,004 ms/op
# Warmup Iteration   3: 37,195 ms/op
# Warmup Iteration   4: 44,677 ms/op
# Warmup Iteration   5: 47,834 ms/op
# Warmup Iteration   6: 48,186 ms/op
# Warmup Iteration   7: 47,979 ms/op
# Warmup Iteration   8: 48,076 ms/op
# Warmup Iteration   9: 48,298 ms/op
# Warmup Iteration  10: 48,093 ms/op
Iteration   1: 48,117 ms/op
Iteration   2: 48,067 ms/op
Iteration   3: 48,413 ms/op
Iteration   4: 48,373 ms/op
Iteration   5: 48,013 ms/op
Iteration   6: 48,569 ms/op
Iteration   7: 48,043 ms/op
Iteration   8: 48,032 ms/op
Iteration   9: 47,862 ms/op
Iteration  10: 48,434 ms/op


Result "benchmarkFind":
  48,192 ±(99.9%) 0,354 ms/op [Average]
  (min, avg, max) = (47,862, 48,192, 48,569), stdev = 0,234
  CI (99.9%): [47,839, 48,546] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternSize = 64)

# Run progress: 16,04% complete, ETA 11:25:13
# Fork: 1 of 1
# Warmup Iteration   1: 38,065 ms/op
# Warmup Iteration   2: 36,399 ms/op
# Warmup Iteration   3: 33,616 ms/op
# Warmup Iteration   4: 43,941 ms/op
# Warmup Iteration   5: 43,923 ms/op
# Warmup Iteration   6: 43,943 ms/op
# Warmup Iteration   7: 43,879 ms/op
# Warmup Iteration   8: 43,869 ms/op
# Warmup Iteration   9: 43,757 ms/op
# Warmup Iteration  10: 43,724 ms/op
Iteration   1: 44,165 ms/op
Iteration   2: 43,988 ms/op
Iteration   3: 44,036 ms/op
Iteration   4: 43,669 ms/op
Iteration   5: 43,510 ms/op
Iteration   6: 43,691 ms/op
Iteration   7: 43,385 ms/op
Iteration   8: 43,372 ms/op
Iteration   9: 43,762 ms/op
Iteration  10: 43,571 ms/op


Result "benchmarkFind":
  43,715 ±(99.9%) 0,414 ms/op [Average]
  (min, avg, max) = (43,372, 43,715, 44,165), stdev = 0,274
  CI (99.9%): [43,301, 44,129] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternSize = 128)

# Run progress: 16,08% complete, ETA 11:24:43
# Fork: 1 of 1
# Warmup Iteration   1: 36,940 ms/op
# Warmup Iteration   2: 36,009 ms/op
# Warmup Iteration   3: 33,612 ms/op
# Warmup Iteration   4: 43,002 ms/op
# Warmup Iteration   5: 42,674 ms/op
# Warmup Iteration   6: 42,472 ms/op
# Warmup Iteration   7: 42,826 ms/op
# Warmup Iteration   8: 42,646 ms/op
# Warmup Iteration   9: 42,713 ms/op
# Warmup Iteration  10: 42,429 ms/op
Iteration   1: 43,016 ms/op
Iteration   2: 42,820 ms/op
Iteration   3: 42,934 ms/op
Iteration   4: 42,735 ms/op
Iteration   5: 46,553 ms/op
Iteration   6: 42,633 ms/op
Iteration   7: 42,748 ms/op
Iteration   8: 42,780 ms/op
Iteration   9: 42,584 ms/op
Iteration  10: 42,818 ms/op


Result "benchmarkFind":
  43,162 ±(99.9%) 1,812 ms/op [Average]
  (min, avg, max) = (42,584, 43,162, 46,553), stdev = 1,198
  CI (99.9%): [41,351, 44,974] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternSize = 256)

# Run progress: 16,13% complete, ETA 11:24:15
# Fork: 1 of 1
# Warmup Iteration   1: 35,933 ms/op
# Warmup Iteration   2: 34,633 ms/op
# Warmup Iteration   3: 32,276 ms/op
# Warmup Iteration   4: 41,742 ms/op
# Warmup Iteration   5: 40,296 ms/op
# Warmup Iteration   6: 40,096 ms/op
# Warmup Iteration   7: 40,282 ms/op
# Warmup Iteration   8: 40,208 ms/op
# Warmup Iteration   9: 40,311 ms/op
# Warmup Iteration  10: 40,494 ms/op
Iteration   1: 40,219 ms/op
Iteration   2: 40,161 ms/op
Iteration   3: 40,250 ms/op
Iteration   4: 40,542 ms/op
Iteration   5: 40,609 ms/op
Iteration   6: 40,179 ms/op
Iteration   7: 39,884 ms/op
Iteration   8: 39,939 ms/op
Iteration   9: 40,228 ms/op
Iteration  10: 40,237 ms/op


Result "benchmarkFind":
  40,225 ±(99.9%) 0,339 ms/op [Average]
  (min, avg, max) = (39,884, 40,225, 40,609), stdev = 0,224
  CI (99.9%): [39,886, 40,564] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternSize = 2)

# Run progress: 16,18% complete, ETA 11:23:45
# Fork: 1 of 1
# Warmup Iteration   1: 68,160 ms/op
# Warmup Iteration   2: 61,513 ms/op
# Warmup Iteration   3: 62,128 ms/op
# Warmup Iteration   4: 62,217 ms/op
# Warmup Iteration   5: 61,785 ms/op
# Warmup Iteration   6: 61,923 ms/op
# Warmup Iteration   7: 62,261 ms/op
# Warmup Iteration   8: 62,467 ms/op
# Warmup Iteration   9: 62,063 ms/op
# Warmup Iteration  10: 62,287 ms/op
Iteration   1: 62,160 ms/op
Iteration   2: 62,111 ms/op
Iteration   3: 61,653 ms/op
Iteration   4: 61,561 ms/op
Iteration   5: 62,378 ms/op
Iteration   6: 61,805 ms/op
Iteration   7: 61,947 ms/op
Iteration   8: 61,966 ms/op
Iteration   9: 61,846 ms/op
Iteration  10: 61,666 ms/op


Result "benchmarkFind":
  61,909 ±(99.9%) 0,387 ms/op [Average]
  (min, avg, max) = (61,561, 61,909, 62,378), stdev = 0,256
  CI (99.9%): [61,522, 62,296] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternSize = 4)

# Run progress: 16,22% complete, ETA 11:23:18
# Fork: 1 of 1
# Warmup Iteration   1: 1112,474 ms/op
# Warmup Iteration   2: 1073,924 ms/op
# Warmup Iteration   3: 1047,282 ms/op
# Warmup Iteration   4: 1043,919 ms/op
# Warmup Iteration   5: 1046,120 ms/op
# Warmup Iteration   6: 1046,098 ms/op
# Warmup Iteration   7: 1053,721 ms/op
# Warmup Iteration   8: 1050,163 ms/op
# Warmup Iteration   9: 1126,046 ms/op
# Warmup Iteration  10: 991,803 ms/op
Iteration   1: 987,531 ms/op
Iteration   2: 989,712 ms/op
Iteration   3: 988,634 ms/op
Iteration   4: 985,180 ms/op
Iteration   5: 985,001 ms/op
Iteration   6: 987,657 ms/op
Iteration   7: 987,367 ms/op
Iteration   8: 985,359 ms/op
Iteration   9: 990,757 ms/op
Iteration  10: 991,037 ms/op


Result "benchmarkFind":
  987,823 ±(99.9%) 3,362 ms/op [Average]
  (min, avg, max) = (985,001, 987,823, 991,037), stdev = 2,224
  CI (99.9%): [984,462, 991,185] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternSize = 8)

# Run progress: 16,27% complete, ETA 11:23:58
# Fork: 1 of 1
# Warmup Iteration   1: 590,507 ms/op
# Warmup Iteration   2: 583,270 ms/op
# Warmup Iteration   3: 584,305 ms/op
# Warmup Iteration   4: 588,776 ms/op
# Warmup Iteration   5: 593,504 ms/op
# Warmup Iteration   6: 605,852 ms/op
# Warmup Iteration   7: 606,764 ms/op
# Warmup Iteration   8: 607,462 ms/op
# Warmup Iteration   9: 609,875 ms/op
# Warmup Iteration  10: 603,171 ms/op
Iteration   1: 606,154 ms/op
Iteration   2: 606,484 ms/op
Iteration   3: 604,242 ms/op
Iteration   4: 611,054 ms/op
Iteration   5: 604,879 ms/op
Iteration   6: 603,928 ms/op
Iteration   7: 600,354 ms/op
Iteration   8: 605,482 ms/op
Iteration   9: 605,886 ms/op
Iteration  10: 607,577 ms/op


Result "benchmarkFind":
  605,604 ±(99.9%) 4,141 ms/op [Average]
  (min, avg, max) = (600,354, 605,604, 611,054), stdev = 2,739
  CI (99.9%): [601,463, 609,745] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternSize = 16)

# Run progress: 16,31% complete, ETA 11:24:01
# Fork: 1 of 1
# Warmup Iteration   1: 346,518 ms/op
# Warmup Iteration   2: 339,655 ms/op
# Warmup Iteration   3: 338,851 ms/op
# Warmup Iteration   4: 340,404 ms/op
# Warmup Iteration   5: 340,295 ms/op
# Warmup Iteration   6: 342,213 ms/op
# Warmup Iteration   7: 366,579 ms/op
# Warmup Iteration   8: 340,373 ms/op
# Warmup Iteration   9: 341,530 ms/op
# Warmup Iteration  10: 340,891 ms/op
Iteration   1: 340,248 ms/op
Iteration   2: 344,423 ms/op
Iteration   3: 342,407 ms/op
Iteration   4: 341,299 ms/op
Iteration   5: 341,883 ms/op
Iteration   6: 337,393 ms/op
Iteration   7: 338,886 ms/op
Iteration   8: 343,398 ms/op
Iteration   9: 327,923 ms/op
Iteration  10: 326,050 ms/op


Result "benchmarkFind":
  338,391 ±(99.9%) 9,625 ms/op [Average]
  (min, avg, max) = (326,050, 338,391, 344,423), stdev = 6,367
  CI (99.9%): [328,766, 348,016] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternSize = 32)

# Run progress: 16,36% complete, ETA 11:23:49
# Fork: 1 of 1
# Warmup Iteration   1: 239,838 ms/op
# Warmup Iteration   2: 234,447 ms/op
# Warmup Iteration   3: 232,223 ms/op
# Warmup Iteration   4: 224,785 ms/op
# Warmup Iteration   5: 223,003 ms/op
# Warmup Iteration   6: 223,152 ms/op
# Warmup Iteration   7: 224,447 ms/op
# Warmup Iteration   8: 223,604 ms/op
# Warmup Iteration   9: 222,749 ms/op
# Warmup Iteration  10: 224,160 ms/op
Iteration   1: 223,520 ms/op
Iteration   2: 213,132 ms/op
Iteration   3: 211,518 ms/op
Iteration   4: 210,838 ms/op
Iteration   5: 212,585 ms/op
Iteration   6: 212,187 ms/op
Iteration   7: 222,113 ms/op
Iteration   8: 270,988 ms/op
Iteration   9: 269,801 ms/op
Iteration  10: 269,440 ms/op


Result "benchmarkFind":
  231,612 ±(99.9%) 40,666 ms/op [Average]
  (min, avg, max) = (210,838, 231,612, 270,988), stdev = 26,898
  CI (99.9%): [190,946, 272,279] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternSize = 64)

# Run progress: 16,41% complete, ETA 11:23:43
# Fork: 1 of 1
# Warmup Iteration   1: 198,949 ms/op
# Warmup Iteration   2: 190,323 ms/op
# Warmup Iteration   3: 180,923 ms/op
# Warmup Iteration   4: 181,228 ms/op
# Warmup Iteration   5: 181,513 ms/op
# Warmup Iteration   6: 180,647 ms/op
# Warmup Iteration   7: 180,817 ms/op
# Warmup Iteration   8: 181,062 ms/op
# Warmup Iteration   9: 182,211 ms/op
# Warmup Iteration  10: 176,049 ms/op
Iteration   1: 175,313 ms/op
Iteration   2: 174,555 ms/op
Iteration   3: 174,496 ms/op
Iteration   4: 175,125 ms/op
Iteration   5: 241,009 ms/op
Iteration   6: 221,425 ms/op
Iteration   7: 223,103 ms/op
Iteration   8: 224,671 ms/op
Iteration   9: 222,375 ms/op
Iteration  10: 222,725 ms/op


Result "benchmarkFind":
  205,480 ±(99.9%) 40,712 ms/op [Average]
  (min, avg, max) = (174,496, 205,480, 241,009), stdev = 26,928
  CI (99.9%): [164,768, 246,191] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternSize = 128)

# Run progress: 16,45% complete, ETA 11:23:35
# Fork: 1 of 1
# Warmup Iteration   1: 192,365 ms/op
# Warmup Iteration   2: 185,090 ms/op
# Warmup Iteration   3: 175,748 ms/op
# Warmup Iteration   4: 176,096 ms/op
# Warmup Iteration   5: 175,560 ms/op
# Warmup Iteration   6: 175,410 ms/op
# Warmup Iteration   7: 175,478 ms/op
# Warmup Iteration   8: 176,022 ms/op
# Warmup Iteration   9: 176,056 ms/op
# Warmup Iteration  10: 171,081 ms/op
Iteration   1: 170,009 ms/op
Iteration   2: 170,034 ms/op
Iteration   3: 170,290 ms/op
Iteration   4: 169,967 ms/op
Iteration   5: 211,546 ms/op
Iteration   6: 212,291 ms/op
Iteration   7: 212,879 ms/op
Iteration   8: 213,795 ms/op
Iteration   9: 212,320 ms/op
Iteration  10: 212,416 ms/op


Result "benchmarkFind":
  195,555 ±(99.9%) 33,165 ms/op [Average]
  (min, avg, max) = (169,967, 195,555, 213,795), stdev = 21,937
  CI (99.9%): [162,390, 228,720] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternSize = 256)

# Run progress: 16,50% complete, ETA 11:23:22
# Fork: 1 of 1
# Warmup Iteration   1: 190,141 ms/op
# Warmup Iteration   2: 183,846 ms/op
# Warmup Iteration   3: 175,359 ms/op
# Warmup Iteration   4: 175,195 ms/op
# Warmup Iteration   5: 175,207 ms/op
# Warmup Iteration   6: 175,273 ms/op
# Warmup Iteration   7: 175,159 ms/op
# Warmup Iteration   8: 175,045 ms/op
# Warmup Iteration   9: 175,010 ms/op
# Warmup Iteration  10: 169,211 ms/op
Iteration   1: 167,234 ms/op
Iteration   2: 167,342 ms/op
Iteration   3: 167,443 ms/op
Iteration   4: 167,227 ms/op
Iteration   5: 205,687 ms/op
Iteration   6: 205,163 ms/op
Iteration   7: 205,703 ms/op
Iteration   8: 205,437 ms/op
Iteration   9: 205,683 ms/op
Iteration  10: 205,202 ms/op


Result "benchmarkFind":
  190,212 ±(99.9%) 29,800 ms/op [Average]
  (min, avg, max) = (167,227, 190,212, 205,703), stdev = 19,711
  CI (99.9%): [160,412, 220,012] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternSize = 2)

# Run progress: 16,54% complete, ETA 11:23:08
# Fork: 1 of 1
# Warmup Iteration   1: 406,811 ms/op
# Warmup Iteration   2: 368,637 ms/op
# Warmup Iteration   3: 319,418 ms/op
# Warmup Iteration   4: 348,402 ms/op
# Warmup Iteration   5: 333,467 ms/op
# Warmup Iteration   6: 319,531 ms/op
# Warmup Iteration   7: 321,017 ms/op
# Warmup Iteration   8: 323,025 ms/op
# Warmup Iteration   9: 320,952 ms/op
# Warmup Iteration  10: 321,008 ms/op
Iteration   1: 322,848 ms/op
Iteration   2: 322,405 ms/op
Iteration   3: 319,321 ms/op
Iteration   4: 321,584 ms/op
Iteration   5: 320,773 ms/op
Iteration   6: 320,940 ms/op
Iteration   7: 320,876 ms/op
Iteration   8: 323,263 ms/op
Iteration   9: 322,380 ms/op
Iteration  10: 319,660 ms/op


Result "benchmarkFind":
  321,405 ±(99.9%) 2,003 ms/op [Average]
  (min, avg, max) = (319,321, 321,405, 323,263), stdev = 1,325
  CI (99.9%): [319,402, 323,408] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternSize = 4)

# Run progress: 16,59% complete, ETA 11:23:01
# Fork: 1 of 1
# Warmup Iteration   1: 131,711 ms/op
# Warmup Iteration   2: 134,157 ms/op
# Warmup Iteration   3: 134,890 ms/op
# Warmup Iteration   4: 133,524 ms/op
# Warmup Iteration   5: 134,413 ms/op
# Warmup Iteration   6: 134,584 ms/op
# Warmup Iteration   7: 120,892 ms/op
# Warmup Iteration   8: 113,919 ms/op
# Warmup Iteration   9: 112,316 ms/op
# Warmup Iteration  10: 113,380 ms/op
Iteration   1: 151,148 ms/op
Iteration   2: 151,065 ms/op
Iteration   3: 150,742 ms/op
Iteration   4: 152,293 ms/op
Iteration   5: 153,230 ms/op
Iteration   6: 152,101 ms/op
Iteration   7: 151,829 ms/op
Iteration   8: 152,199 ms/op
Iteration   9: 151,544 ms/op
Iteration  10: 151,787 ms/op


Result "benchmarkFind":
  151,794 ±(99.9%) 1,091 ms/op [Average]
  (min, avg, max) = (150,742, 151,794, 153,230), stdev = 0,722
  CI (99.9%): [150,703, 152,885] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternSize = 8)

# Run progress: 16,64% complete, ETA 11:22:36
# Fork: 1 of 1
# Warmup Iteration   1: 68,531 ms/op
# Warmup Iteration   2: 68,606 ms/op
# Warmup Iteration   3: 69,083 ms/op
# Warmup Iteration   4: 66,930 ms/op
# Warmup Iteration   5: 63,332 ms/op
# Warmup Iteration   6: 70,445 ms/op
# Warmup Iteration   7: 78,419 ms/op
# Warmup Iteration   8: 78,325 ms/op
# Warmup Iteration   9: 78,992 ms/op
# Warmup Iteration  10: 77,589 ms/op
Iteration   1: 78,375 ms/op
Iteration   2: 78,137 ms/op
Iteration   3: 81,866 ms/op
Iteration   4: 78,217 ms/op
Iteration   5: 78,696 ms/op
Iteration   6: 78,626 ms/op
Iteration   7: 82,366 ms/op
Iteration   8: 77,076 ms/op
Iteration   9: 77,176 ms/op
Iteration  10: 77,190 ms/op


Result "benchmarkFind":
  78,773 ±(99.9%) 2,820 ms/op [Average]
  (min, avg, max) = (77,076, 78,773, 82,366), stdev = 1,865
  CI (99.9%): [75,953, 81,593] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternSize = 16)

# Run progress: 16,68% complete, ETA 11:22:07
# Fork: 1 of 1
# Warmup Iteration   1: 37,953 ms/op
# Warmup Iteration   2: 36,904 ms/op
# Warmup Iteration   3: 32,164 ms/op
# Warmup Iteration   4: 42,214 ms/op
# Warmup Iteration   5: 41,872 ms/op
# Warmup Iteration   6: 42,591 ms/op
# Warmup Iteration   7: 42,026 ms/op
# Warmup Iteration   8: 41,694 ms/op
# Warmup Iteration   9: 41,814 ms/op
# Warmup Iteration  10: 42,363 ms/op
Iteration   1: 42,402 ms/op
Iteration   2: 42,063 ms/op
Iteration   3: 41,800 ms/op
Iteration   4: 41,910 ms/op
Iteration   5: 41,876 ms/op
Iteration   6: 41,826 ms/op
Iteration   7: 41,669 ms/op
Iteration   8: 42,066 ms/op
Iteration   9: 42,012 ms/op
Iteration  10: 41,917 ms/op


Result "benchmarkFind":
  41,954 ±(99.9%) 0,302 ms/op [Average]
  (min, avg, max) = (41,669, 41,954, 42,402), stdev = 0,200
  CI (99.9%): [41,652, 42,256] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternSize = 32)

# Run progress: 16,73% complete, ETA 11:21:36
# Fork: 1 of 1
# Warmup Iteration   1: 21,413 ms/op
# Warmup Iteration   2: 21,291 ms/op
# Warmup Iteration   3: 24,899 ms/op
# Warmup Iteration   4: 24,967 ms/op
# Warmup Iteration   5: 24,781 ms/op
# Warmup Iteration   6: 24,781 ms/op
# Warmup Iteration   7: 24,874 ms/op
# Warmup Iteration   8: 24,813 ms/op
# Warmup Iteration   9: 24,803 ms/op
# Warmup Iteration  10: 24,837 ms/op
Iteration   1: 24,785 ms/op
Iteration   2: 24,735 ms/op
Iteration   3: 24,744 ms/op
Iteration   4: 24,701 ms/op
Iteration   5: 24,694 ms/op
Iteration   6: 24,781 ms/op
Iteration   7: 24,734 ms/op
Iteration   8: 24,829 ms/op
Iteration   9: 24,710 ms/op
Iteration  10: 24,734 ms/op


Result "benchmarkFind":
  24,745 ±(99.9%) 0,064 ms/op [Average]
  (min, avg, max) = (24,694, 24,745, 24,829), stdev = 0,042
  CI (99.9%): [24,681, 24,809] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternSize = 64)

# Run progress: 16,77% complete, ETA 11:21:07
# Fork: 1 of 1
# Warmup Iteration   1: 14,413 ms/op
# Warmup Iteration   2: 17,126 ms/op
# Warmup Iteration   3: 18,083 ms/op
# Warmup Iteration   4: 17,930 ms/op
# Warmup Iteration   5: 17,933 ms/op
# Warmup Iteration   6: 17,923 ms/op
# Warmup Iteration   7: 17,926 ms/op
# Warmup Iteration   8: 17,681 ms/op
# Warmup Iteration   9: 17,647 ms/op
# Warmup Iteration  10: 17,737 ms/op
Iteration   1: 17,718 ms/op
Iteration   2: 17,632 ms/op
Iteration   3: 17,703 ms/op
Iteration   4: 19,274 ms/op
Iteration   5: 17,778 ms/op
Iteration   6: 17,749 ms/op
Iteration   7: 17,669 ms/op
Iteration   8: 17,900 ms/op
Iteration   9: 17,724 ms/op
Iteration  10: 17,784 ms/op


Result "benchmarkFind":
  17,893 ±(99.9%) 0,742 ms/op [Average]
  (min, avg, max) = (17,632, 17,893, 19,274), stdev = 0,491
  CI (99.9%): [17,152, 18,635] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternSize = 128)

# Run progress: 16,82% complete, ETA 11:20:36
# Fork: 1 of 1
# Warmup Iteration   1: 12,435 ms/op
# Warmup Iteration   2: 14,782 ms/op
# Warmup Iteration   3: 14,539 ms/op
# Warmup Iteration   4: 14,534 ms/op
# Warmup Iteration   5: 14,357 ms/op
# Warmup Iteration   6: 14,266 ms/op
# Warmup Iteration   7: 14,321 ms/op
# Warmup Iteration   8: 14,282 ms/op
# Warmup Iteration   9: 14,284 ms/op
# Warmup Iteration  10: 14,323 ms/op
Iteration   1: 14,384 ms/op
Iteration   2: 14,285 ms/op
Iteration   3: 14,294 ms/op
Iteration   4: 14,266 ms/op
Iteration   5: 14,193 ms/op
Iteration   6: 14,176 ms/op
Iteration   7: 14,178 ms/op
Iteration   8: 14,212 ms/op
Iteration   9: 14,290 ms/op
Iteration  10: 14,186 ms/op


Result "benchmarkFind":
  14,246 ±(99.9%) 0,104 ms/op [Average]
  (min, avg, max) = (14,176, 14,246, 14,384), stdev = 0,068
  CI (99.9%): [14,143, 14,350] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternSize = 256)

# Run progress: 16,87% complete, ETA 11:20:06
# Fork: 1 of 1
# Warmup Iteration   1: 11,377 ms/op
# Warmup Iteration   2: 12,986 ms/op
# Warmup Iteration   3: 12,930 ms/op
# Warmup Iteration   4: 13,068 ms/op
# Warmup Iteration   5: 13,039 ms/op
# Warmup Iteration   6: 13,164 ms/op
# Warmup Iteration   7: 12,999 ms/op
# Warmup Iteration   8: 12,966 ms/op
# Warmup Iteration   9: 13,116 ms/op
# Warmup Iteration  10: 13,190 ms/op
Iteration   1: 13,090 ms/op
Iteration   2: 13,055 ms/op
Iteration   3: 13,040 ms/op
Iteration   4: 13,100 ms/op
Iteration   5: 13,083 ms/op
Iteration   6: 13,041 ms/op
Iteration   7: 13,023 ms/op
Iteration   8: 13,084 ms/op
Iteration   9: 13,073 ms/op
Iteration  10: 13,070 ms/op


Result "benchmarkFind":
  13,066 ±(99.9%) 0,038 ms/op [Average]
  (min, avg, max) = (13,023, 13,066, 13,100), stdev = 0,025
  CI (99.9%): [13,028, 13,104] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternSize = 2)

# Run progress: 16,91% complete, ETA 11:19:35
# Fork: 1 of 1
# Warmup Iteration   1: 1590,545 ms/op
# Warmup Iteration   2: 1571,640 ms/op
# Warmup Iteration   3: 1561,237 ms/op
# Warmup Iteration   4: 1557,598 ms/op
# Warmup Iteration   5: 1435,426 ms/op
# Warmup Iteration   6: 1248,201 ms/op
# Warmup Iteration   7: 1332,112 ms/op
# Warmup Iteration   8: 1246,488 ms/op
# Warmup Iteration   9: 1242,799 ms/op
# Warmup Iteration  10: 1242,281 ms/op
Iteration   1: 1244,977 ms/op
Iteration   2: 1241,253 ms/op
Iteration   3: 1243,419 ms/op
Iteration   4: 1243,781 ms/op
Iteration   5: 1258,084 ms/op
Iteration   6: 1251,069 ms/op
Iteration   7: 1236,282 ms/op
Iteration   8: 1242,707 ms/op
Iteration   9: 1271,252 ms/op
Iteration  10: 1251,421 ms/op


Result "benchmarkFind":
  1248,424 ±(99.9%) 15,289 ms/op [Average]
  (min, avg, max) = (1236,282, 1248,424, 1271,252), stdev = 10,113
  CI (99.9%): [1233,135, 1263,714] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternSize = 4)

# Run progress: 16,96% complete, ETA 11:19:42
# Fork: 1 of 1
# Warmup Iteration   1: 517,844 ms/op
# Warmup Iteration   2: 511,851 ms/op
# Warmup Iteration   3: 514,653 ms/op
# Warmup Iteration   4: 509,628 ms/op
# Warmup Iteration   5: 520,731 ms/op
# Warmup Iteration   6: 525,115 ms/op
# Warmup Iteration   7: 527,379 ms/op
# Warmup Iteration   8: 523,832 ms/op
# Warmup Iteration   9: 528,609 ms/op
# Warmup Iteration  10: 528,535 ms/op
Iteration   1: 524,493 ms/op
Iteration   2: 523,506 ms/op
Iteration   3: 523,311 ms/op
Iteration   4: 526,106 ms/op
Iteration   5: 526,407 ms/op
Iteration   6: 522,450 ms/op
Iteration   7: 527,521 ms/op
Iteration   8: 527,509 ms/op
Iteration   9: 525,464 ms/op
Iteration  10: 528,181 ms/op


Result "benchmarkFind":
  525,495 ±(99.9%) 3,006 ms/op [Average]
  (min, avg, max) = (522,450, 525,495, 528,181), stdev = 1,988
  CI (99.9%): [522,489, 528,501] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternSize = 8)

# Run progress: 17,00% complete, ETA 11:19:20
# Fork: 1 of 1
# Warmup Iteration   1: 265,573 ms/op
# Warmup Iteration   2: 261,698 ms/op
# Warmup Iteration   3: 263,898 ms/op
# Warmup Iteration   4: 265,340 ms/op
# Warmup Iteration   5: 267,410 ms/op
# Warmup Iteration   6: 264,667 ms/op
# Warmup Iteration   7: 267,322 ms/op
# Warmup Iteration   8: 264,956 ms/op
# Warmup Iteration   9: 264,846 ms/op
# Warmup Iteration  10: 264,803 ms/op
Iteration   1: 265,829 ms/op
Iteration   2: 265,747 ms/op
Iteration   3: 265,320 ms/op
Iteration   4: 259,259 ms/op
Iteration   5: 254,835 ms/op
Iteration   6: 254,347 ms/op
Iteration   7: 255,526 ms/op
Iteration   8: 283,421 ms/op
Iteration   9: 257,788 ms/op
Iteration  10: 256,692 ms/op


Result "benchmarkFind":
  261,876 ±(99.9%) 13,368 ms/op [Average]
  (min, avg, max) = (254,347, 261,876, 283,421), stdev = 8,842
  CI (99.9%): [248,508, 275,245] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternSize = 16)

# Run progress: 17,05% complete, ETA 11:18:59
# Fork: 1 of 1
# Warmup Iteration   1: 138,700 ms/op
# Warmup Iteration   2: 139,004 ms/op
# Warmup Iteration   3: 139,020 ms/op
# Warmup Iteration   4: 139,392 ms/op
# Warmup Iteration   5: 138,302 ms/op
# Warmup Iteration   6: 139,736 ms/op
# Warmup Iteration   7: 137,863 ms/op
# Warmup Iteration   8: 118,065 ms/op
# Warmup Iteration   9: 117,585 ms/op
# Warmup Iteration  10: 118,235 ms/op
Iteration   1: 152,158 ms/op
Iteration   2: 159,161 ms/op
Iteration   3: 157,960 ms/op
Iteration   4: 161,923 ms/op
Iteration   5: 158,181 ms/op
Iteration   6: 159,854 ms/op
Iteration   7: 158,188 ms/op
Iteration   8: 158,311 ms/op
Iteration   9: 160,175 ms/op
Iteration  10: 158,297 ms/op


Result "benchmarkFind":
  158,421 ±(99.9%) 3,822 ms/op [Average]
  (min, avg, max) = (152,158, 158,421, 161,923), stdev = 2,528
  CI (99.9%): [154,599, 162,243] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternSize = 32)

# Run progress: 17,10% complete, ETA 11:18:43
# Fork: 1 of 1
# Warmup Iteration   1: 82,728 ms/op
# Warmup Iteration   2: 78,862 ms/op
# Warmup Iteration   3: 78,588 ms/op
# Warmup Iteration   4: 78,471 ms/op
# Warmup Iteration   5: 78,283 ms/op
# Warmup Iteration   6: 78,041 ms/op
# Warmup Iteration   7: 84,938 ms/op
# Warmup Iteration   8: 90,571 ms/op
# Warmup Iteration   9: 89,892 ms/op
# Warmup Iteration  10: 89,910 ms/op
Iteration   1: 89,541 ms/op
Iteration   2: 89,313 ms/op
Iteration   3: 89,479 ms/op
Iteration   4: 89,527 ms/op
Iteration   5: 89,186 ms/op
Iteration   6: 89,470 ms/op
Iteration   7: 89,704 ms/op
Iteration   8: 89,410 ms/op
Iteration   9: 89,207 ms/op
Iteration  10: 89,068 ms/op


Result "benchmarkFind":
  89,390 ±(99.9%) 0,294 ms/op [Average]
  (min, avg, max) = (89,068, 89,390, 89,704), stdev = 0,194
  CI (99.9%): [89,097, 89,684] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternSize = 64)

# Run progress: 17,14% complete, ETA 11:18:23
# Fork: 1 of 1
# Warmup Iteration   1: 64,349 ms/op
# Warmup Iteration   2: 61,472 ms/op
# Warmup Iteration   3: 61,583 ms/op
# Warmup Iteration   4: 61,475 ms/op
# Warmup Iteration   5: 61,220 ms/op
# Warmup Iteration   6: 69,584 ms/op
# Warmup Iteration   7: 69,351 ms/op
# Warmup Iteration   8: 73,164 ms/op
# Warmup Iteration   9: 70,544 ms/op
# Warmup Iteration  10: 69,106 ms/op
Iteration   1: 69,537 ms/op
Iteration   2: 69,295 ms/op
Iteration   3: 68,739 ms/op
Iteration   4: 68,827 ms/op
Iteration   5: 69,294 ms/op
Iteration   6: 69,345 ms/op
Iteration   7: 69,277 ms/op
Iteration   8: 68,998 ms/op
Iteration   9: 69,021 ms/op
Iteration  10: 69,162 ms/op


Result "benchmarkFind":
  69,149 ±(99.9%) 0,377 ms/op [Average]
  (min, avg, max) = (68,739, 69,149, 69,537), stdev = 0,249
  CI (99.9%): [68,773, 69,526] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternSize = 128)

# Run progress: 17,19% complete, ETA 11:18:01
# Fork: 1 of 1
# Warmup Iteration   1: 86,677 ms/op
# Warmup Iteration   2: 83,642 ms/op
# Warmup Iteration   3: 83,619 ms/op
# Warmup Iteration   4: 83,525 ms/op
# Warmup Iteration   5: 83,314 ms/op
# Warmup Iteration   6: 82,966 ms/op
# Warmup Iteration   7: 83,810 ms/op
# Warmup Iteration   8: 88,171 ms/op
# Warmup Iteration   9: 88,183 ms/op
# Warmup Iteration  10: 87,957 ms/op
Iteration   1: 88,045 ms/op
Iteration   2: 87,991 ms/op
Iteration   3: 87,927 ms/op
Iteration   4: 87,909 ms/op
Iteration   5: 88,377 ms/op
Iteration   6: 87,789 ms/op
Iteration   7: 87,846 ms/op
Iteration   8: 87,898 ms/op
Iteration   9: 87,981 ms/op
Iteration  10: 87,966 ms/op


Result "benchmarkFind":
  87,973 ±(99.9%) 0,242 ms/op [Average]
  (min, avg, max) = (87,789, 87,973, 88,377), stdev = 0,160
  CI (99.9%): [87,731, 88,215] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternSize = 256)

# Run progress: 17,23% complete, ETA 11:17:39
# Fork: 1 of 1
# Warmup Iteration   1: 78,339 ms/op
# Warmup Iteration   2: 75,250 ms/op
# Warmup Iteration   3: 75,201 ms/op
# Warmup Iteration   4: 75,246 ms/op
# Warmup Iteration   5: 74,854 ms/op
# Warmup Iteration   6: 74,976 ms/op
# Warmup Iteration   7: 79,612 ms/op
# Warmup Iteration   8: 79,542 ms/op
# Warmup Iteration   9: 79,703 ms/op
# Warmup Iteration  10: 79,607 ms/op
Iteration   1: 79,304 ms/op
Iteration   2: 79,391 ms/op
Iteration   3: 79,297 ms/op
Iteration   4: 79,134 ms/op
Iteration   5: 79,364 ms/op
Iteration   6: 79,301 ms/op
Iteration   7: 79,155 ms/op
Iteration   8: 79,322 ms/op
Iteration   9: 79,404 ms/op
Iteration  10: 79,135 ms/op


Result "benchmarkFind":
  79,281 ±(99.9%) 0,156 ms/op [Average]
  (min, avg, max) = (79,134, 79,281, 79,404), stdev = 0,103
  CI (99.9%): [79,125, 79,437] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternSize = 2)

# Run progress: 17,28% complete, ETA 11:17:17
# Fork: 1 of 1
# Warmup Iteration   1: 6223,399 ms/op
# Warmup Iteration   2: 6193,251 ms/op
# Warmup Iteration   3: 6171,789 ms/op
# Warmup Iteration   4: 6183,817 ms/op
# Warmup Iteration   5: 5669,053 ms/op
# Warmup Iteration   6: 4848,116 ms/op
# Warmup Iteration   7: 4837,899 ms/op
# Warmup Iteration   8: 4830,178 ms/op
# Warmup Iteration   9: 4827,048 ms/op
# Warmup Iteration  10: 4824,547 ms/op
Iteration   1: 4894,921 ms/op
Iteration   2: 4809,172 ms/op
Iteration   3: 4808,863 ms/op
Iteration   4: 4806,547 ms/op
Iteration   5: 4816,448 ms/op
Iteration   6: 4802,142 ms/op
Iteration   7: 4800,869 ms/op
Iteration   8: 4796,975 ms/op
Iteration   9: 4791,143 ms/op
Iteration  10: 4789,406 ms/op


Result "benchmarkFind":
  4811,649 ±(99.9%) 46,007 ms/op [Average]
  (min, avg, max) = (4789,406, 4811,649, 4894,921), stdev = 30,431
  CI (99.9%): [4765,641, 4857,656] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternSize = 4)

# Run progress: 17,33% complete, ETA 11:23:46
# Fork: 1 of 1
# Warmup Iteration   1: 2027,588 ms/op
# Warmup Iteration   2: 2024,178 ms/op
# Warmup Iteration   3: 2019,043 ms/op
# Warmup Iteration   4: 2095,063 ms/op
# Warmup Iteration   5: 2008,889 ms/op
# Warmup Iteration   6: 2014,306 ms/op
# Warmup Iteration   7: 2016,545 ms/op
# Warmup Iteration   8: 2008,581 ms/op
# Warmup Iteration   9: 2007,232 ms/op
# Warmup Iteration  10: 2046,321 ms/op
Iteration   1: 2084,759 ms/op
Iteration   2: 2063,277 ms/op
Iteration   3: 2073,778 ms/op
Iteration   4: 2066,606 ms/op
Iteration   5: 2093,230 ms/op
Iteration   6: 2064,010 ms/op
Iteration   7: 2064,121 ms/op
Iteration   8: 2085,800 ms/op
Iteration   9: 2070,498 ms/op
Iteration  10: 2063,205 ms/op


Result "benchmarkFind":
  2072,928 ±(99.9%) 16,784 ms/op [Average]
  (min, avg, max) = (2063,205, 2072,928, 2093,230), stdev = 11,102
  CI (99.9%): [2056,144, 2089,712] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternSize = 8)

# Run progress: 17,37% complete, ETA 11:25:19
# Fork: 1 of 1
# Warmup Iteration   1: 1118,046 ms/op
# Warmup Iteration   2: 1114,094 ms/op
# Warmup Iteration   3: 1104,477 ms/op
# Warmup Iteration   4: 1098,078 ms/op
# Warmup Iteration   5: 1110,239 ms/op
# Warmup Iteration   6: 1104,161 ms/op
# Warmup Iteration   7: 1101,564 ms/op
# Warmup Iteration   8: 1097,169 ms/op
# Warmup Iteration   9: 1097,172 ms/op
# Warmup Iteration  10: 1076,308 ms/op
Iteration   1: 1069,778 ms/op
Iteration   2: 1067,182 ms/op
Iteration   3: 1061,268 ms/op
Iteration   4: 1068,642 ms/op
Iteration   5: 1064,338 ms/op
Iteration   6: 1058,983 ms/op
Iteration   7: 1063,481 ms/op
Iteration   8: 1061,110 ms/op
Iteration   9: 1162,302 ms/op
Iteration  10: 1065,974 ms/op


Result "benchmarkFind":
  1074,306 ±(99.9%) 47,037 ms/op [Average]
  (min, avg, max) = (1058,983, 1074,306, 1162,302), stdev = 31,112
  CI (99.9%): [1027,269, 1121,343] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternSize = 16)

# Run progress: 17,42% complete, ETA 11:25:20
# Fork: 1 of 1
# Warmup Iteration   1: 550,742 ms/op
# Warmup Iteration   2: 546,075 ms/op
# Warmup Iteration   3: 544,887 ms/op
# Warmup Iteration   4: 543,334 ms/op
# Warmup Iteration   5: 543,866 ms/op
# Warmup Iteration   6: 546,730 ms/op
# Warmup Iteration   7: 552,751 ms/op
# Warmup Iteration   8: 550,063 ms/op
# Warmup Iteration   9: 550,336 ms/op
# Warmup Iteration  10: 548,176 ms/op
Iteration   1: 552,755 ms/op
Iteration   2: 551,849 ms/op
Iteration   3: 549,434 ms/op
Iteration   4: 553,966 ms/op
Iteration   5: 554,615 ms/op
Iteration   6: 552,649 ms/op
Iteration   7: 546,569 ms/op
Iteration   8: 551,549 ms/op
Iteration   9: 547,445 ms/op
Iteration  10: 551,896 ms/op


Result "benchmarkFind":
  551,273 ±(99.9%) 4,015 ms/op [Average]
  (min, avg, max) = (546,569, 551,273, 554,615), stdev = 2,656
  CI (99.9%): [547,258, 555,287] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternSize = 32)

# Run progress: 17,46% complete, ETA 11:25:21
# Fork: 1 of 1
# Warmup Iteration   1: 331,029 ms/op
# Warmup Iteration   2: 324,617 ms/op
# Warmup Iteration   3: 317,002 ms/op
# Warmup Iteration   4: 313,646 ms/op
# Warmup Iteration   5: 313,313 ms/op
# Warmup Iteration   6: 312,889 ms/op
# Warmup Iteration   7: 312,516 ms/op
# Warmup Iteration   8: 312,025 ms/op
# Warmup Iteration   9: 314,778 ms/op
# Warmup Iteration  10: 312,573 ms/op
Iteration   1: 313,336 ms/op
Iteration   2: 314,910 ms/op
Iteration   3: 313,558 ms/op
Iteration   4: 312,407 ms/op
Iteration   5: 309,989 ms/op
Iteration   6: 313,179 ms/op
Iteration   7: 311,015 ms/op
Iteration   8: 310,387 ms/op
Iteration   9: 310,435 ms/op
Iteration  10: 342,532 ms/op


Result "benchmarkFind":
  315,175 ±(99.9%) 14,742 ms/op [Average]
  (min, avg, max) = (309,989, 315,175, 342,532), stdev = 9,751
  CI (99.9%): [300,433, 329,917] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternSize = 64)

# Run progress: 17,51% complete, ETA 11:25:36
# Fork: 1 of 1
# Warmup Iteration   1: 266,318 ms/op
# Warmup Iteration   2: 262,340 ms/op
# Warmup Iteration   3: 257,219 ms/op
# Warmup Iteration   4: 253,107 ms/op
# Warmup Iteration   5: 253,399 ms/op
# Warmup Iteration   6: 253,364 ms/op
# Warmup Iteration   7: 252,889 ms/op
# Warmup Iteration   8: 253,250 ms/op
# Warmup Iteration   9: 252,747 ms/op
# Warmup Iteration  10: 251,662 ms/op
Iteration   1: 252,359 ms/op
Iteration   2: 251,730 ms/op
Iteration   3: 252,311 ms/op
Iteration   4: 252,461 ms/op
Iteration   5: 250,915 ms/op
Iteration   6: 250,981 ms/op
Iteration   7: 251,105 ms/op
Iteration   8: 251,237 ms/op
Iteration   9: 251,412 ms/op
Iteration  10: 250,746 ms/op


Result "benchmarkFind":
  251,526 ±(99.9%) 0,980 ms/op [Average]
  (min, avg, max) = (250,746, 251,526, 252,461), stdev = 0,648
  CI (99.9%): [250,546, 252,505] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternSize = 128)

# Run progress: 17,56% complete, ETA 11:25:29
# Fork: 1 of 1
# Warmup Iteration   1: 389,661 ms/op
# Warmup Iteration   2: 386,837 ms/op
# Warmup Iteration   3: 386,506 ms/op
# Warmup Iteration   4: 379,046 ms/op
# Warmup Iteration   5: 377,635 ms/op
# Warmup Iteration   6: 378,275 ms/op
# Warmup Iteration   7: 377,882 ms/op
# Warmup Iteration   8: 377,256 ms/op
# Warmup Iteration   9: 377,999 ms/op
# Warmup Iteration  10: 377,684 ms/op
Iteration   1: 378,585 ms/op
Iteration   2: 378,032 ms/op
Iteration   3: 377,852 ms/op
Iteration   4: 377,294 ms/op
Iteration   5: 378,199 ms/op
Iteration   6: 378,040 ms/op
Iteration   7: 376,592 ms/op
Iteration   8: 377,739 ms/op
Iteration   9: 376,534 ms/op
Iteration  10: 375,786 ms/op


Result "benchmarkFind":
  377,465 ±(99.9%) 1,347 ms/op [Average]
  (min, avg, max) = (375,786, 377,465, 378,585), stdev = 0,891
  CI (99.9%): [376,118, 378,812] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternSize = 256)

# Run progress: 17,60% complete, ETA 11:25:34
# Fork: 1 of 1
# Warmup Iteration   1: 358,839 ms/op
# Warmup Iteration   2: 353,934 ms/op
# Warmup Iteration   3: 353,519 ms/op
# Warmup Iteration   4: 349,209 ms/op
# Warmup Iteration   5: 346,212 ms/op
# Warmup Iteration   6: 346,573 ms/op
# Warmup Iteration   7: 346,681 ms/op
# Warmup Iteration   8: 348,737 ms/op
# Warmup Iteration   9: 346,146 ms/op
# Warmup Iteration  10: 346,445 ms/op
Iteration   1: 346,632 ms/op
Iteration   2: 346,098 ms/op
Iteration   3: 346,196 ms/op
Iteration   4: 346,465 ms/op
Iteration   5: 346,783 ms/op
Iteration   6: 347,071 ms/op
Iteration   7: 346,101 ms/op
Iteration   8: 346,134 ms/op
Iteration   9: 345,159 ms/op
Iteration  10: 343,504 ms/op


Result "benchmarkFind":
  346,014 ±(99.9%) 1,544 ms/op [Average]
  (min, avg, max) = (343,504, 346,014, 347,071), stdev = 1,021
  CI (99.9%): [344,470, 347,558] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 2, patternSize = 2)

# Run progress: 17,65% complete, ETA 11:25:30
# Fork: 1 of 1
# Warmup Iteration   1: 0,087 ms/op
# Warmup Iteration   2: 0,078 ms/op
# Warmup Iteration   3: 0,078 ms/op
# Warmup Iteration   4: 0,078 ms/op
# Warmup Iteration   5: 0,078 ms/op
# Warmup Iteration   6: 0,079 ms/op
# Warmup Iteration   7: 0,079 ms/op
# Warmup Iteration   8: 0,078 ms/op
# Warmup Iteration   9: 0,079 ms/op
# Warmup Iteration  10: 0,078 ms/op
Iteration   1: 0,078 ms/op
Iteration   2: 0,078 ms/op
Iteration   3: 0,079 ms/op
Iteration   4: 0,077 ms/op
Iteration   5: 0,078 ms/op
Iteration   6: 0,079 ms/op
Iteration   7: 0,078 ms/op
Iteration   8: 0,078 ms/op
Iteration   9: 0,078 ms/op
Iteration  10: 0,078 ms/op


Result "benchmarkFind":
  0,078 ±(99.9%) 0,001 ms/op [Average]
  (min, avg, max) = (0,077, 0,078, 0,079), stdev = 0,001
  CI (99.9%): [0,078, 0,079] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 2, patternSize = 4)

# Run progress: 17,69% complete, ETA 11:24:56
# Fork: 1 of 1
# Warmup Iteration   1: 0,287 ms/op
# Warmup Iteration   2: 0,296 ms/op
# Warmup Iteration   3: 0,326 ms/op
# Warmup Iteration   4: 0,328 ms/op
# Warmup Iteration   5: 0,326 ms/op
# Warmup Iteration   6: 0,325 ms/op
# Warmup Iteration   7: 0,324 ms/op
# Warmup Iteration   8: 0,326 ms/op
# Warmup Iteration   9: 0,324 ms/op
# Warmup Iteration  10: 0,325 ms/op
Iteration   1: 0,327 ms/op
Iteration   2: 0,325 ms/op
Iteration   3: 0,328 ms/op
Iteration   4: 0,327 ms/op
Iteration   5: 0,325 ms/op
Iteration   6: 0,327 ms/op
Iteration   7: 0,350 ms/op
Iteration   8: 0,328 ms/op
Iteration   9: 0,326 ms/op
Iteration  10: 0,320 ms/op


Result "benchmarkFind":
  0,328 ±(99.9%) 0,012 ms/op [Average]
  (min, avg, max) = (0,320, 0,328, 0,350), stdev = 0,008
  CI (99.9%): [0,316, 0,340] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 2, patternSize = 8)

# Run progress: 17,74% complete, ETA 11:24:21
# Fork: 1 of 1
# Warmup Iteration   1: 2,353 ms/op
# Warmup Iteration   2: 2,194 ms/op
# Warmup Iteration   3: 2,215 ms/op
# Warmup Iteration   4: 2,217 ms/op
# Warmup Iteration   5: 2,213 ms/op
# Warmup Iteration   6: 2,284 ms/op
# Warmup Iteration   7: 2,306 ms/op
# Warmup Iteration   8: 2,295 ms/op
# Warmup Iteration   9: 2,294 ms/op
# Warmup Iteration  10: 2,291 ms/op
Iteration   1: 2,267 ms/op
Iteration   2: 2,299 ms/op
Iteration   3: 2,244 ms/op
Iteration   4: 2,221 ms/op
Iteration   5: 2,216 ms/op
Iteration   6: 2,222 ms/op
Iteration   7: 2,208 ms/op
Iteration   8: 2,190 ms/op
Iteration   9: 2,182 ms/op
Iteration  10: 2,185 ms/op


Result "benchmarkFind":
  2,223 ±(99.9%) 0,056 ms/op [Average]
  (min, avg, max) = (2,182, 2,223, 2,299), stdev = 0,037
  CI (99.9%): [2,167, 2,280] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 2, patternSize = 16)

# Run progress: 17,78% complete, ETA 11:23:47
# Fork: 1 of 1
# Warmup Iteration   1: 27,341 ms/op
# Warmup Iteration   2: 26,785 ms/op
# Warmup Iteration   3: 26,372 ms/op
# Warmup Iteration   4: 26,636 ms/op
# Warmup Iteration   5: 26,502 ms/op
# Warmup Iteration   6: 26,711 ms/op
# Warmup Iteration   7: 26,613 ms/op
# Warmup Iteration   8: 26,580 ms/op
# Warmup Iteration   9: 26,587 ms/op
# Warmup Iteration  10: 26,569 ms/op
Iteration   1: 26,376 ms/op
Iteration   2: 26,573 ms/op
Iteration   3: 26,353 ms/op
Iteration   4: 26,563 ms/op
Iteration   5: 26,629 ms/op
Iteration   6: 26,422 ms/op
Iteration   7: 26,501 ms/op
Iteration   8: 26,404 ms/op
Iteration   9: 26,374 ms/op
Iteration  10: 26,456 ms/op


Result "benchmarkFind":
  26,465 ±(99.9%) 0,146 ms/op [Average]
  (min, avg, max) = (26,353, 26,465, 26,629), stdev = 0,097
  CI (99.9%): [26,319, 26,611] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 2, patternSize = 32)

# Run progress: 17,83% complete, ETA 11:23:14
# Fork: 1 of 1
# Warmup Iteration   1: 23,597 ms/op
# Warmup Iteration   2: 22,792 ms/op
# Warmup Iteration   3: 22,755 ms/op
# Warmup Iteration   4: 22,710 ms/op
# Warmup Iteration   5: 22,687 ms/op
# Warmup Iteration   6: 22,700 ms/op
# Warmup Iteration   7: 22,756 ms/op
# Warmup Iteration   8: 22,703 ms/op
# Warmup Iteration   9: 22,786 ms/op
# Warmup Iteration  10: 22,694 ms/op
Iteration   1: 22,730 ms/op
Iteration   2: 22,813 ms/op
Iteration   3: 22,709 ms/op
Iteration   4: 22,709 ms/op
Iteration   5: 25,432 ms/op
Iteration   6: 22,919 ms/op
Iteration   7: 23,167 ms/op
Iteration   8: 23,119 ms/op
Iteration   9: 23,279 ms/op
Iteration  10: 23,200 ms/op


Result "benchmarkFind":
  23,208 ±(99.9%) 1,227 ms/op [Average]
  (min, avg, max) = (22,709, 23,208, 25,432), stdev = 0,811
  CI (99.9%): [21,981, 24,435] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 2, patternSize = 64)

# Run progress: 17,88% complete, ETA 11:22:41
# Fork: 1 of 1
# Warmup Iteration   1: 24,824 ms/op
# Warmup Iteration   2: 24,003 ms/op
# Warmup Iteration   3: 24,058 ms/op
# Warmup Iteration   4: 23,884 ms/op
# Warmup Iteration   5: 23,959 ms/op
# Warmup Iteration   6: 23,893 ms/op
# Warmup Iteration   7: 23,835 ms/op
# Warmup Iteration   8: 23,975 ms/op
# Warmup Iteration   9: 23,794 ms/op
# Warmup Iteration  10: 23,857 ms/op
Iteration   1: 23,859 ms/op
Iteration   2: 23,980 ms/op
Iteration   3: 23,858 ms/op
Iteration   4: 23,874 ms/op
Iteration   5: 23,994 ms/op
Iteration   6: 24,232 ms/op
Iteration   7: 24,062 ms/op
Iteration   8: 23,822 ms/op
Iteration   9: 23,950 ms/op
Iteration  10: 24,061 ms/op


Result "benchmarkFind":
  23,969 ±(99.9%) 0,190 ms/op [Average]
  (min, avg, max) = (23,822, 23,969, 24,232), stdev = 0,126
  CI (99.9%): [23,779, 24,160] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 2, patternSize = 128)

# Run progress: 17,92% complete, ETA 11:22:07
# Fork: 1 of 1
# Warmup Iteration   1: 25,265 ms/op
# Warmup Iteration   2: 24,291 ms/op
# Warmup Iteration   3: 24,063 ms/op
# Warmup Iteration   4: 24,055 ms/op
# Warmup Iteration   5: 24,072 ms/op
# Warmup Iteration   6: 24,215 ms/op
# Warmup Iteration   7: 24,083 ms/op
# Warmup Iteration   8: 24,173 ms/op
# Warmup Iteration   9: 24,259 ms/op
# Warmup Iteration  10: 24,340 ms/op
Iteration   1: 24,019 ms/op
Iteration   2: 24,169 ms/op
Iteration   3: 24,084 ms/op
Iteration   4: 24,292 ms/op
Iteration   5: 24,462 ms/op
Iteration   6: 24,131 ms/op
Iteration   7: 24,124 ms/op
Iteration   8: 24,194 ms/op
Iteration   9: 24,293 ms/op
Iteration  10: 24,223 ms/op


Result "benchmarkFind":
  24,199 ±(99.9%) 0,191 ms/op [Average]
  (min, avg, max) = (24,019, 24,199, 24,462), stdev = 0,127
  CI (99.9%): [24,008, 24,391] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 2, patternSize = 256)

# Run progress: 17,97% complete, ETA 11:21:35
# Fork: 1 of 1
# Warmup Iteration   1: 23,443 ms/op
# Warmup Iteration   2: 23,143 ms/op
# Warmup Iteration   3: 23,160 ms/op
# Warmup Iteration   4: 22,974 ms/op
# Warmup Iteration   5: 22,888 ms/op
# Warmup Iteration   6: 23,132 ms/op
# Warmup Iteration   7: 23,095 ms/op
# Warmup Iteration   8: 23,331 ms/op
# Warmup Iteration   9: 23,033 ms/op
# Warmup Iteration  10: 22,933 ms/op
Iteration   1: 22,947 ms/op
Iteration   2: 23,009 ms/op
Iteration   3: 25,712 ms/op
Iteration   4: 22,795 ms/op
Iteration   5: 22,768 ms/op
Iteration   6: 22,831 ms/op
Iteration   7: 23,642 ms/op
Iteration   8: 23,590 ms/op
Iteration   9: 23,656 ms/op
Iteration  10: 23,663 ms/op


Result "benchmarkFind":
  23,461 ±(99.9%) 1,332 ms/op [Average]
  (min, avg, max) = (22,768, 23,461, 25,712), stdev = 0,881
  CI (99.9%): [22,129, 24,793] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 8, patternSize = 2)

# Run progress: 18,01% complete, ETA 11:21:02
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

com.almondtools.stringbench.SampleNotQualifiedException
	at com.almondtools.stringbench.MultiPatternMatcherBenchmark.setup(MultiPatternMatcherBenchmark.java:36)
	at com.almondtools.stringbench.generated.JavaRegexMultiBenchmark_benchmarkFind_jmhTest._jmh_tryInit_f_javaregexmultibenchmark0_0(JavaRegexMultiBenchmark_benchmarkFind_jmhTest.java:425)
	at com.almondtools.stringbench.generated.JavaRegexMultiBenchmark_benchmarkFind_jmhTest.benchmarkFind_AverageTime(JavaRegexMultiBenchmark_benchmarkFind_jmhTest.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:430)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:412)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)




# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 8, patternSize = 4)

# Run progress: 18,06% complete, ETA 11:19:01
# Fork: 1 of 1
# Warmup Iteration   1: 0,710 ms/op
# Warmup Iteration   2: 0,682 ms/op
# Warmup Iteration   3: 0,680 ms/op
# Warmup Iteration   4: 0,681 ms/op
# Warmup Iteration   5: 0,679 ms/op
# Warmup Iteration   6: 0,683 ms/op
# Warmup Iteration   7: 0,682 ms/op
# Warmup Iteration   8: 0,681 ms/op
# Warmup Iteration   9: 0,685 ms/op
# Warmup Iteration  10: 0,685 ms/op
Iteration   1: 0,679 ms/op
Iteration   2: 0,679 ms/op
Iteration   3: 0,685 ms/op
Iteration   4: 0,683 ms/op
Iteration   5: 0,678 ms/op
Iteration   6: 0,678 ms/op
Iteration   7: 0,680 ms/op
Iteration   8: 0,680 ms/op
Iteration   9: 0,680 ms/op
Iteration  10: 0,684 ms/op


Result "benchmarkFind":
  0,681 ±(99.9%) 0,004 ms/op [Average]
  (min, avg, max) = (0,678, 0,681, 0,685), stdev = 0,002
  CI (99.9%): [0,677, 0,684] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 8, patternSize = 8)

# Run progress: 18,11% complete, ETA 11:18:28
# Fork: 1 of 1
# Warmup Iteration   1: 10,906 ms/op
# Warmup Iteration   2: 10,289 ms/op
# Warmup Iteration   3: 10,344 ms/op
# Warmup Iteration   4: 10,233 ms/op
# Warmup Iteration   5: 10,375 ms/op
# Warmup Iteration   6: 10,316 ms/op
# Warmup Iteration   7: 10,382 ms/op
# Warmup Iteration   8: 10,347 ms/op
# Warmup Iteration   9: 10,302 ms/op
# Warmup Iteration  10: 10,333 ms/op
Iteration   1: 10,251 ms/op
Iteration   2: 10,297 ms/op
Iteration   3: 10,288 ms/op
Iteration   4: 10,273 ms/op
Iteration   5: 10,285 ms/op
Iteration   6: 10,255 ms/op
Iteration   7: 10,329 ms/op
Iteration   8: 10,230 ms/op
Iteration   9: 10,389 ms/op
Iteration  10: 10,312 ms/op


Result "benchmarkFind":
  10,291 ±(99.9%) 0,069 ms/op [Average]
  (min, avg, max) = (10,230, 10,291, 10,389), stdev = 0,046
  CI (99.9%): [10,222, 10,360] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 8, patternSize = 16)

# Run progress: 18,15% complete, ETA 11:17:54
# Fork: 1 of 1
# Warmup Iteration   1: 78,609 ms/op
# Warmup Iteration   2: 76,099 ms/op
# Warmup Iteration   3: 77,014 ms/op
# Warmup Iteration   4: 76,811 ms/op
# Warmup Iteration   5: 76,883 ms/op
# Warmup Iteration   6: 76,631 ms/op
# Warmup Iteration   7: 76,608 ms/op
# Warmup Iteration   8: 76,956 ms/op
# Warmup Iteration   9: 82,446 ms/op
# Warmup Iteration  10: 79,480 ms/op
Iteration   1: 75,270 ms/op
Iteration   2: 75,427 ms/op
Iteration   3: 75,367 ms/op
Iteration   4: 75,772 ms/op
Iteration   5: 75,594 ms/op
Iteration   6: 75,439 ms/op
Iteration   7: 75,928 ms/op
Iteration   8: 75,719 ms/op
Iteration   9: 75,831 ms/op
Iteration  10: 75,150 ms/op


Result "benchmarkFind":
  75,550 ±(99.9%) 0,391 ms/op [Average]
  (min, avg, max) = (75,150, 75,550, 75,928), stdev = 0,258
  CI (99.9%): [75,159, 75,941] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 8, patternSize = 32)

# Run progress: 18,20% complete, ETA 11:17:26
# Fork: 1 of 1
# Warmup Iteration   1: 77,760 ms/op
# Warmup Iteration   2: 74,594 ms/op
# Warmup Iteration   3: 75,012 ms/op
# Warmup Iteration   4: 74,252 ms/op
# Warmup Iteration   5: 74,920 ms/op
# Warmup Iteration   6: 74,323 ms/op
# Warmup Iteration   7: 74,375 ms/op
# Warmup Iteration   8: 74,449 ms/op
# Warmup Iteration   9: 75,114 ms/op
# Warmup Iteration  10: 74,680 ms/op
Iteration   1: 74,708 ms/op
Iteration   2: 74,894 ms/op
Iteration   3: 74,271 ms/op
Iteration   4: 74,660 ms/op
Iteration   5: 74,487 ms/op
Iteration   6: 75,013 ms/op
Iteration   7: 75,381 ms/op
Iteration   8: 74,610 ms/op
Iteration   9: 74,713 ms/op
Iteration  10: 75,702 ms/op


Result "benchmarkFind":
  74,844 ±(99.9%) 0,645 ms/op [Average]
  (min, avg, max) = (74,271, 74,844, 75,702), stdev = 0,426
  CI (99.9%): [74,199, 75,488] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 8, patternSize = 64)

# Run progress: 18,24% complete, ETA 11:16:56
# Fork: 1 of 1
# Warmup Iteration   1: 75,203 ms/op
# Warmup Iteration   2: 73,879 ms/op
# Warmup Iteration   3: 73,965 ms/op
# Warmup Iteration   4: 73,939 ms/op
# Warmup Iteration   5: 73,638 ms/op
# Warmup Iteration   6: 73,787 ms/op
# Warmup Iteration   7: 73,774 ms/op
# Warmup Iteration   8: 73,796 ms/op
# Warmup Iteration   9: 73,670 ms/op
# Warmup Iteration  10: 74,020 ms/op
Iteration   1: 73,927 ms/op
Iteration   2: 73,813 ms/op
Iteration   3: 73,757 ms/op
Iteration   4: 73,648 ms/op
Iteration   5: 73,965 ms/op
Iteration   6: 74,389 ms/op
Iteration   7: 73,710 ms/op
Iteration   8: 73,746 ms/op
Iteration   9: 73,774 ms/op
Iteration  10: 73,570 ms/op


Result "benchmarkFind":
  73,830 ±(99.9%) 0,346 ms/op [Average]
  (min, avg, max) = (73,570, 73,830, 74,389), stdev = 0,229
  CI (99.9%): [73,484, 74,175] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 8, patternSize = 128)

# Run progress: 18,29% complete, ETA 11:16:26
# Fork: 1 of 1
# Warmup Iteration   1: 76,703 ms/op
# Warmup Iteration   2: 73,921 ms/op
# Warmup Iteration   3: 73,954 ms/op
# Warmup Iteration   4: 74,077 ms/op
# Warmup Iteration   5: 76,663 ms/op
# Warmup Iteration   6: 80,497 ms/op
# Warmup Iteration   7: 73,956 ms/op
# Warmup Iteration   8: 73,922 ms/op
# Warmup Iteration   9: 74,181 ms/op
# Warmup Iteration  10: 73,917 ms/op
Iteration   1: 73,764 ms/op
Iteration   2: 73,852 ms/op
Iteration   3: 73,433 ms/op
Iteration   4: 73,413 ms/op
Iteration   5: 74,947 ms/op
Iteration   6: 73,530 ms/op
Iteration   7: 74,589 ms/op
Iteration   8: 73,962 ms/op
Iteration   9: 73,988 ms/op
Iteration  10: 73,571 ms/op


Result "benchmarkFind":
  73,905 ±(99.9%) 0,765 ms/op [Average]
  (min, avg, max) = (73,413, 73,905, 74,947), stdev = 0,506
  CI (99.9%): [73,140, 74,670] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 8, patternSize = 256)

# Run progress: 18,34% complete, ETA 11:15:57
# Fork: 1 of 1
# Warmup Iteration   1: 75,940 ms/op
# Warmup Iteration   2: 74,325 ms/op
# Warmup Iteration   3: 74,583 ms/op
# Warmup Iteration   4: 74,936 ms/op
# Warmup Iteration   5: 74,814 ms/op
# Warmup Iteration   6: 74,846 ms/op
# Warmup Iteration   7: 74,217 ms/op
# Warmup Iteration   8: 74,654 ms/op
# Warmup Iteration   9: 74,264 ms/op
# Warmup Iteration  10: 74,237 ms/op
Iteration   1: 74,713 ms/op
Iteration   2: 73,926 ms/op
Iteration   3: 74,343 ms/op
Iteration   4: 74,454 ms/op
Iteration   5: 74,722 ms/op
Iteration   6: 75,005 ms/op
Iteration   7: 75,284 ms/op
Iteration   8: 75,564 ms/op
Iteration   9: 74,353 ms/op
Iteration  10: 75,350 ms/op


Result "benchmarkFind":
  74,771 ±(99.9%) 0,791 ms/op [Average]
  (min, avg, max) = (73,926, 74,771, 75,564), stdev = 0,523
  CI (99.9%): [73,981, 75,562] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 32, patternSize = 2)

# Run progress: 18,38% complete, ETA 11:15:28
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

com.almondtools.stringbench.SampleNotQualifiedException
	at com.almondtools.stringbench.MultiPatternMatcherBenchmark.setup(MultiPatternMatcherBenchmark.java:36)
	at com.almondtools.stringbench.generated.JavaRegexMultiBenchmark_benchmarkFind_jmhTest._jmh_tryInit_f_javaregexmultibenchmark0_0(JavaRegexMultiBenchmark_benchmarkFind_jmhTest.java:425)
	at com.almondtools.stringbench.generated.JavaRegexMultiBenchmark_benchmarkFind_jmhTest.benchmarkFind_AverageTime(JavaRegexMultiBenchmark_benchmarkFind_jmhTest.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:430)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:412)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)




# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 32, patternSize = 4)

# Run progress: 18,43% complete, ETA 11:13:30
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

com.almondtools.stringbench.SampleNotQualifiedException
	at com.almondtools.stringbench.MultiPatternMatcherBenchmark.setup(MultiPatternMatcherBenchmark.java:36)
	at com.almondtools.stringbench.generated.JavaRegexMultiBenchmark_benchmarkFind_jmhTest._jmh_tryInit_f_javaregexmultibenchmark0_0(JavaRegexMultiBenchmark_benchmarkFind_jmhTest.java:425)
	at com.almondtools.stringbench.generated.JavaRegexMultiBenchmark_benchmarkFind_jmhTest.benchmarkFind_AverageTime(JavaRegexMultiBenchmark_benchmarkFind_jmhTest.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:430)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:412)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)




# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 32, patternSize = 8)

# Run progress: 18,47% complete, ETA 11:11:33
# Fork: 1 of 1
# Warmup Iteration   1: 52,174 ms/op
# Warmup Iteration   2: 48,514 ms/op
# Warmup Iteration   3: 48,250 ms/op
# Warmup Iteration   4: 48,713 ms/op
# Warmup Iteration   5: 48,133 ms/op
# Warmup Iteration   6: 48,542 ms/op
# Warmup Iteration   7: 48,548 ms/op
# Warmup Iteration   8: 48,610 ms/op
# Warmup Iteration   9: 47,996 ms/op
# Warmup Iteration  10: 48,311 ms/op
Iteration   1: 48,562 ms/op
Iteration   2: 48,346 ms/op
Iteration   3: 48,402 ms/op
Iteration   4: 48,200 ms/op
Iteration   5: 48,553 ms/op
Iteration   6: 48,326 ms/op
Iteration   7: 48,252 ms/op
Iteration   8: 48,163 ms/op
Iteration   9: 48,439 ms/op
Iteration  10: 50,260 ms/op


Result "benchmarkFind":
  48,550 ±(99.9%) 0,931 ms/op [Average]
  (min, avg, max) = (48,163, 48,550, 50,260), stdev = 0,616
  CI (99.9%): [47,619, 49,481] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 32, patternSize = 16)

# Run progress: 18,52% complete, ETA 11:11:02
# Fork: 1 of 1
# Warmup Iteration   1: 323,435 ms/op
# Warmup Iteration   2: 316,169 ms/op
# Warmup Iteration   3: 314,799 ms/op
# Warmup Iteration   4: 312,772 ms/op
# Warmup Iteration   5: 314,544 ms/op
# Warmup Iteration   6: 313,671 ms/op
# Warmup Iteration   7: 315,590 ms/op
# Warmup Iteration   8: 313,697 ms/op
# Warmup Iteration   9: 312,770 ms/op
# Warmup Iteration  10: 312,089 ms/op
Iteration   1: 313,776 ms/op
Iteration   2: 313,545 ms/op
Iteration   3: 313,454 ms/op
Iteration   4: 314,721 ms/op
Iteration   5: 312,769 ms/op
Iteration   6: 314,422 ms/op
Iteration   7: 310,775 ms/op
Iteration   8: 312,032 ms/op
Iteration   9: 312,146 ms/op
Iteration  10: 311,961 ms/op


Result "benchmarkFind":
  312,960 ±(99.9%) 1,874 ms/op [Average]
  (min, avg, max) = (310,775, 312,960, 314,721), stdev = 1,240
  CI (99.9%): [311,086, 314,834] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 32, patternSize = 32)

# Run progress: 18,57% complete, ETA 11:10:52
# Fork: 1 of 1
# Warmup Iteration   1: 287,651 ms/op
# Warmup Iteration   2: 280,629 ms/op
# Warmup Iteration   3: 281,359 ms/op
# Warmup Iteration   4: 281,911 ms/op
# Warmup Iteration   5: 280,301 ms/op
# Warmup Iteration   6: 277,531 ms/op
# Warmup Iteration   7: 282,484 ms/op
# Warmup Iteration   8: 279,416 ms/op
# Warmup Iteration   9: 277,990 ms/op
# Warmup Iteration  10: 277,881 ms/op
Iteration   1: 281,299 ms/op
Iteration   2: 279,483 ms/op
Iteration   3: 277,382 ms/op
Iteration   4: 278,256 ms/op
Iteration   5: 279,949 ms/op
Iteration   6: 280,352 ms/op
Iteration   7: 280,729 ms/op
Iteration   8: 278,455 ms/op
Iteration   9: 280,745 ms/op
Iteration  10: 279,389 ms/op


Result "benchmarkFind":
  279,604 ±(99.9%) 1,903 ms/op [Average]
  (min, avg, max) = (277,382, 279,604, 281,299), stdev = 1,258
  CI (99.9%): [277,701, 281,507] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 32, patternSize = 64)

# Run progress: 18,61% complete, ETA 11:10:30
# Fork: 1 of 1
# Warmup Iteration   1: 280,152 ms/op
# Warmup Iteration   2: 281,270 ms/op
# Warmup Iteration   3: 279,114 ms/op
# Warmup Iteration   4: 278,831 ms/op
# Warmup Iteration   5: 276,634 ms/op
# Warmup Iteration   6: 281,259 ms/op
# Warmup Iteration   7: 277,355 ms/op
# Warmup Iteration   8: 279,596 ms/op
# Warmup Iteration   9: 276,779 ms/op
# Warmup Iteration  10: 303,926 ms/op
Iteration   1: 282,021 ms/op
Iteration   2: 281,824 ms/op
Iteration   3: 282,027 ms/op
Iteration   4: 283,624 ms/op
Iteration   5: 283,646 ms/op
Iteration   6: 281,505 ms/op
Iteration   7: 279,631 ms/op
Iteration   8: 278,628 ms/op
Iteration   9: 280,577 ms/op
Iteration  10: 278,608 ms/op


Result "benchmarkFind":
  281,209 ±(99.9%) 2,755 ms/op [Average]
  (min, avg, max) = (278,608, 281,209, 283,646), stdev = 1,822
  CI (99.9%): [278,454, 283,964] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 32, patternSize = 128)

# Run progress: 18,66% complete, ETA 11:10:08
# Fork: 1 of 1
# Warmup Iteration   1: 292,361 ms/op
# Warmup Iteration   2: 286,026 ms/op
# Warmup Iteration   3: 285,549 ms/op
# Warmup Iteration   4: 284,015 ms/op
# Warmup Iteration   5: 279,967 ms/op
# Warmup Iteration   6: 284,295 ms/op
# Warmup Iteration   7: 280,117 ms/op
# Warmup Iteration   8: 282,875 ms/op
# Warmup Iteration   9: 278,458 ms/op
# Warmup Iteration  10: 278,964 ms/op
Iteration   1: 282,015 ms/op
Iteration   2: 278,342 ms/op
Iteration   3: 279,333 ms/op
Iteration   4: 279,481 ms/op
Iteration   5: 280,685 ms/op
Iteration   6: 283,285 ms/op
Iteration   7: 279,132 ms/op
Iteration   8: 280,297 ms/op
Iteration   9: 282,584 ms/op
Iteration  10: 281,717 ms/op


Result "benchmarkFind":
  280,687 ±(99.9%) 2,496 ms/op [Average]
  (min, avg, max) = (278,342, 280,687, 283,285), stdev = 1,651
  CI (99.9%): [278,191, 283,183] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 32, patternSize = 256)

# Run progress: 18,70% complete, ETA 11:09:47
# Fork: 1 of 1
# Warmup Iteration   1: 286,697 ms/op
# Warmup Iteration   2: 277,342 ms/op
# Warmup Iteration   3: 277,600 ms/op
# Warmup Iteration   4: 276,530 ms/op
# Warmup Iteration   5: 275,665 ms/op
# Warmup Iteration   6: 274,467 ms/op
# Warmup Iteration   7: 274,852 ms/op
# Warmup Iteration   8: 276,004 ms/op
# Warmup Iteration   9: 276,067 ms/op
# Warmup Iteration  10: 275,263 ms/op
Iteration   1: 276,760 ms/op
Iteration   2: 275,151 ms/op
Iteration   3: 276,501 ms/op
Iteration   4: 275,206 ms/op
Iteration   5: 274,114 ms/op
Iteration   6: 277,219 ms/op
Iteration   7: 276,731 ms/op
Iteration   8: 272,724 ms/op
Iteration   9: 275,322 ms/op
Iteration  10: 273,876 ms/op


Result "benchmarkFind":
  275,360 ±(99.9%) 2,218 ms/op [Average]
  (min, avg, max) = (272,724, 275,360, 277,219), stdev = 1,467
  CI (99.9%): [273,142, 277,578] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 128, patternSize = 2)

# Run progress: 18,75% complete, ETA 11:09:24
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

com.almondtools.stringbench.SampleNotQualifiedException
	at com.almondtools.stringbench.MultiPatternMatcherBenchmark.setup(MultiPatternMatcherBenchmark.java:36)
	at com.almondtools.stringbench.generated.JavaRegexMultiBenchmark_benchmarkFind_jmhTest._jmh_tryInit_f_javaregexmultibenchmark0_0(JavaRegexMultiBenchmark_benchmarkFind_jmhTest.java:425)
	at com.almondtools.stringbench.generated.JavaRegexMultiBenchmark_benchmarkFind_jmhTest.benchmarkFind_AverageTime(JavaRegexMultiBenchmark_benchmarkFind_jmhTest.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:430)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:412)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)




# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 128, patternSize = 4)

# Run progress: 18,80% complete, ETA 11:07:29
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

com.almondtools.stringbench.SampleNotQualifiedException
	at com.almondtools.stringbench.MultiPatternMatcherBenchmark.setup(MultiPatternMatcherBenchmark.java:36)
	at com.almondtools.stringbench.generated.JavaRegexMultiBenchmark_benchmarkFind_jmhTest._jmh_tryInit_f_javaregexmultibenchmark0_0(JavaRegexMultiBenchmark_benchmarkFind_jmhTest.java:425)
	at com.almondtools.stringbench.generated.JavaRegexMultiBenchmark_benchmarkFind_jmhTest.benchmarkFind_AverageTime(JavaRegexMultiBenchmark_benchmarkFind_jmhTest.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:430)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:412)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)




# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 128, patternSize = 8)

# Run progress: 18,84% complete, ETA 11:05:35
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

com.almondtools.stringbench.ResultNotAcceptedException
	at com.almondtools.stringbench.MultiPatternSample.validate(MultiPatternSample.java:157)
	at com.almondtools.stringbench.MultiPatternMatcherBenchmark.benchmarkFind(MultiPatternMatcherBenchmark.java:50)
	at com.almondtools.stringbench.generated.JavaRegexMultiBenchmark_benchmarkFind_jmhTest.benchmarkFind_avgt_jmhStub(JavaRegexMultiBenchmark_benchmarkFind_jmhTest.java:208)
	at com.almondtools.stringbench.generated.JavaRegexMultiBenchmark_benchmarkFind_jmhTest.benchmarkFind_AverageTime(JavaRegexMultiBenchmark_benchmarkFind_jmhTest.java:152)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:430)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:412)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)




# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 128, patternSize = 16)

# Run progress: 18,89% complete, ETA 11:03:41
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

com.almondtools.stringbench.ResultNotAcceptedException
	at com.almondtools.stringbench.MultiPatternSample.validate(MultiPatternSample.java:157)
	at com.almondtools.stringbench.MultiPatternMatcherBenchmark.benchmarkFind(MultiPatternMatcherBenchmark.java:50)
	at com.almondtools.stringbench.generated.JavaRegexMultiBenchmark_benchmarkFind_jmhTest.benchmarkFind_avgt_jmhStub(JavaRegexMultiBenchmark_benchmarkFind_jmhTest.java:208)
	at com.almondtools.stringbench.generated.JavaRegexMultiBenchmark_benchmarkFind_jmhTest.benchmarkFind_AverageTime(JavaRegexMultiBenchmark_benchmarkFind_jmhTest.java:152)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:430)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:412)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)




# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 128, patternSize = 32)

# Run progress: 18,93% complete, ETA 11:01:49
# Fork: 1 of 1
# Warmup Iteration   1: 1499,731 ms/op
# Warmup Iteration   2: 1444,088 ms/op
# Warmup Iteration   3: 1428,439 ms/op
# Warmup Iteration   4: 1419,453 ms/op
# Warmup Iteration   5: 1424,507 ms/op
# Warmup Iteration   6: 1423,306 ms/op
# Warmup Iteration   7: 1419,902 ms/op
# Warmup Iteration   8: 1421,014 ms/op
# Warmup Iteration   9: 1422,704 ms/op
# Warmup Iteration  10: 1419,617 ms/op
Iteration   1: 1418,445 ms/op
Iteration   2: 1430,777 ms/op
Iteration   3: 1422,255 ms/op
Iteration   4: 1422,160 ms/op
Iteration   5: 1426,297 ms/op
Iteration   6: 1424,287 ms/op
Iteration   7: 1418,578 ms/op
Iteration   8: 1428,856 ms/op
Iteration   9: 1431,795 ms/op
Iteration  10: 1431,023 ms/op


Result "benchmarkFind":
  1425,447 ±(99.9%) 7,654 ms/op [Average]
  (min, avg, max) = (1418,445, 1425,447, 1431,795), stdev = 5,063
  CI (99.9%): [1417,793, 1433,102] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 128, patternSize = 64)

# Run progress: 18,98% complete, ETA 11:01:54
# Fork: 1 of 1
# Warmup Iteration   1: 1478,653 ms/op
# Warmup Iteration   2: 1460,686 ms/op
# Warmup Iteration   3: 1456,643 ms/op
# Warmup Iteration   4: 1462,885 ms/op
# Warmup Iteration   5: 1455,637 ms/op
# Warmup Iteration   6: 1445,117 ms/op
# Warmup Iteration   7: 1451,858 ms/op
# Warmup Iteration   8: 1464,256 ms/op
# Warmup Iteration   9: 1457,929 ms/op
# Warmup Iteration  10: 1469,275 ms/op
Iteration   1: 1448,388 ms/op
Iteration   2: 1441,846 ms/op
Iteration   3: 1436,672 ms/op
Iteration   4: 1451,238 ms/op
Iteration   5: 1455,170 ms/op
Iteration   6: 1440,095 ms/op
Iteration   7: 1456,963 ms/op
Iteration   8: 1463,994 ms/op
Iteration   9: 1527,844 ms/op
Iteration  10: 1445,456 ms/op


Result "benchmarkFind":
  1456,767 ±(99.9%) 39,809 ms/op [Average]
  (min, avg, max) = (1436,672, 1456,767, 1527,844), stdev = 26,331
  CI (99.9%): [1416,958, 1496,575] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 128, patternSize = 128)

# Run progress: 19,03% complete, ETA 11:02:02
# Fork: 1 of 1
# Warmup Iteration   1: 1485,984 ms/op
# Warmup Iteration   2: 1411,382 ms/op
# Warmup Iteration   3: 1399,345 ms/op
# Warmup Iteration   4: 1403,301 ms/op
# Warmup Iteration   5: 1402,191 ms/op
# Warmup Iteration   6: 1394,196 ms/op
# Warmup Iteration   7: 1431,828 ms/op
# Warmup Iteration   8: 1401,517 ms/op
# Warmup Iteration   9: 1453,766 ms/op
# Warmup Iteration  10: 1417,735 ms/op
Iteration   1: 1414,278 ms/op
Iteration   2: 1405,774 ms/op
Iteration   3: 1424,061 ms/op
Iteration   4: 1405,016 ms/op
Iteration   5: 1401,309 ms/op
Iteration   6: 1411,262 ms/op
Iteration   7: 1407,913 ms/op
Iteration   8: 1397,046 ms/op
Iteration   9: 1398,703 ms/op
Iteration  10: 1393,111 ms/op


Result "benchmarkFind":
  1405,847 ±(99.9%) 13,787 ms/op [Average]
  (min, avg, max) = (1393,111, 1405,847, 1424,061), stdev = 9,119
  CI (99.9%): [1392,060, 1419,634] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 128, patternSize = 256)

# Run progress: 19,07% complete, ETA 11:02:06
# Fork: 1 of 1
# Warmup Iteration   1: 1383,285 ms/op
# Warmup Iteration   2: 1408,474 ms/op
# Warmup Iteration   3: 1407,764 ms/op
# Warmup Iteration   4: 1424,017 ms/op
# Warmup Iteration   5: 1395,950 ms/op
# Warmup Iteration   6: 1396,190 ms/op
# Warmup Iteration   7: 1408,564 ms/op
# Warmup Iteration   8: 1415,075 ms/op
# Warmup Iteration   9: 1403,915 ms/op
# Warmup Iteration  10: 1414,364 ms/op
Iteration   1: 1411,449 ms/op
Iteration   2: 1402,734 ms/op
Iteration   3: 1421,180 ms/op
Iteration   4: 1404,860 ms/op
Iteration   5: 1405,316 ms/op
Iteration   6: 1419,279 ms/op
Iteration   7: 1407,615 ms/op
Iteration   8: 1395,754 ms/op
Iteration   9: 1496,875 ms/op
Iteration  10: 1412,435 ms/op


Result "benchmarkFind":
  1417,750 ±(99.9%) 43,572 ms/op [Average]
  (min, avg, max) = (1395,754, 1417,750, 1496,875), stdev = 28,820
  CI (99.9%): [1374,177, 1461,322] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 2, patternSize = 2)

# Run progress: 19,12% complete, ETA 11:02:10
# Fork: 1 of 1
# Warmup Iteration   1: 0,172 ms/op
# Warmup Iteration   2: 0,165 ms/op
# Warmup Iteration   3: 0,166 ms/op
# Warmup Iteration   4: 0,165 ms/op
# Warmup Iteration   5: 0,165 ms/op
# Warmup Iteration   6: 0,164 ms/op
# Warmup Iteration   7: 0,165 ms/op
# Warmup Iteration   8: 0,165 ms/op
# Warmup Iteration   9: 0,166 ms/op
# Warmup Iteration  10: 0,166 ms/op
Iteration   1: 0,165 ms/op
Iteration   2: 0,163 ms/op
Iteration   3: 0,165 ms/op
Iteration   4: 0,163 ms/op
Iteration   5: 0,162 ms/op
Iteration   6: 0,163 ms/op
Iteration   7: 0,164 ms/op
Iteration   8: 0,165 ms/op
Iteration   9: 0,168 ms/op
Iteration  10: 0,168 ms/op


Result "benchmarkFind":
  0,165 ±(99.9%) 0,003 ms/op [Average]
  (min, avg, max) = (0,162, 0,165, 0,168), stdev = 0,002
  CI (99.9%): [0,162, 0,168] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 2, patternSize = 4)

# Run progress: 19,16% complete, ETA 11:01:39
# Fork: 1 of 1
# Warmup Iteration   1: 2,219 ms/op
# Warmup Iteration   2: 2,075 ms/op
# Warmup Iteration   3: 2,072 ms/op
# Warmup Iteration   4: 2,065 ms/op
# Warmup Iteration   5: 2,073 ms/op
# Warmup Iteration   6: 2,067 ms/op
# Warmup Iteration   7: 2,068 ms/op
# Warmup Iteration   8: 2,070 ms/op
# Warmup Iteration   9: 2,086 ms/op
# Warmup Iteration  10: 2,068 ms/op
Iteration   1: 2,071 ms/op
Iteration   2: 2,071 ms/op
Iteration   3: 2,078 ms/op
Iteration   4: 2,069 ms/op
Iteration   5: 2,081 ms/op
Iteration   6: 2,074 ms/op
Iteration   7: 2,075 ms/op
Iteration   8: 2,067 ms/op
Iteration   9: 2,075 ms/op
Iteration  10: 2,069 ms/op


Result "benchmarkFind":
  2,073 ±(99.9%) 0,007 ms/op [Average]
  (min, avg, max) = (2,067, 2,073, 2,081), stdev = 0,005
  CI (99.9%): [2,066, 2,080] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 2, patternSize = 8)

# Run progress: 19,21% complete, ETA 11:01:08
# Fork: 1 of 1
# Warmup Iteration   1: 22,697 ms/op
# Warmup Iteration   2: 21,817 ms/op
# Warmup Iteration   3: 21,530 ms/op
# Warmup Iteration   4: 21,616 ms/op
# Warmup Iteration   5: 21,559 ms/op
# Warmup Iteration   6: 21,598 ms/op
# Warmup Iteration   7: 21,501 ms/op
# Warmup Iteration   8: 21,451 ms/op
# Warmup Iteration   9: 21,472 ms/op
# Warmup Iteration  10: 21,459 ms/op
Iteration   1: 21,536 ms/op
Iteration   2: 21,472 ms/op
Iteration   3: 21,443 ms/op
Iteration   4: 21,539 ms/op
Iteration   5: 21,548 ms/op
Iteration   6: 21,533 ms/op
Iteration   7: 21,518 ms/op
Iteration   8: 21,517 ms/op
Iteration   9: 24,145 ms/op
Iteration  10: 21,502 ms/op


Result "benchmarkFind":
  21,775 ±(99.9%) 1,260 ms/op [Average]
  (min, avg, max) = (21,443, 21,775, 24,145), stdev = 0,833
  CI (99.9%): [20,515, 23,035] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 2, patternSize = 16)

# Run progress: 19,26% complete, ETA 11:00:37
# Fork: 1 of 1
# Warmup Iteration   1: 23,333 ms/op
# Warmup Iteration   2: 22,568 ms/op
# Warmup Iteration   3: 22,688 ms/op
# Warmup Iteration   4: 22,667 ms/op
# Warmup Iteration   5: 22,553 ms/op
# Warmup Iteration   6: 22,871 ms/op
# Warmup Iteration   7: 22,672 ms/op
# Warmup Iteration   8: 22,568 ms/op
# Warmup Iteration   9: 22,463 ms/op
# Warmup Iteration  10: 22,776 ms/op
Iteration   1: 22,616 ms/op
Iteration   2: 22,628 ms/op
Iteration   3: 22,631 ms/op
Iteration   4: 22,642 ms/op
Iteration   5: 22,513 ms/op
Iteration   6: 22,616 ms/op
Iteration   7: 22,525 ms/op
Iteration   8: 22,731 ms/op
Iteration   9: 22,664 ms/op
Iteration  10: 22,724 ms/op


Result "benchmarkFind":
  22,629 ±(99.9%) 0,107 ms/op [Average]
  (min, avg, max) = (22,513, 22,629, 22,731), stdev = 0,071
  CI (99.9%): [22,522, 22,736] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 2, patternSize = 32)

# Run progress: 19,30% complete, ETA 11:00:07
# Fork: 1 of 1
# Warmup Iteration   1: 23,560 ms/op
# Warmup Iteration   2: 22,884 ms/op
# Warmup Iteration   3: 22,671 ms/op
# Warmup Iteration   4: 22,799 ms/op
# Warmup Iteration   5: 22,867 ms/op
# Warmup Iteration   6: 22,853 ms/op
# Warmup Iteration   7: 22,955 ms/op
# Warmup Iteration   8: 22,735 ms/op
# Warmup Iteration   9: 23,124 ms/op
# Warmup Iteration  10: 22,716 ms/op
Iteration   1: 22,948 ms/op
Iteration   2: 22,734 ms/op
Iteration   3: 22,775 ms/op
Iteration   4: 23,051 ms/op
Iteration   5: 22,740 ms/op
Iteration   6: 22,777 ms/op
Iteration   7: 22,745 ms/op
Iteration   8: 22,773 ms/op
Iteration   9: 22,735 ms/op
Iteration  10: 22,749 ms/op


Result "benchmarkFind":
  22,803 ±(99.9%) 0,163 ms/op [Average]
  (min, avg, max) = (22,734, 22,803, 23,051), stdev = 0,108
  CI (99.9%): [22,640, 22,966] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 2, patternSize = 64)

# Run progress: 19,35% complete, ETA 10:59:36
# Fork: 1 of 1
# Warmup Iteration   1: 24,477 ms/op
# Warmup Iteration   2: 23,770 ms/op
# Warmup Iteration   3: 23,735 ms/op
# Warmup Iteration   4: 24,786 ms/op
# Warmup Iteration   5: 24,704 ms/op
# Warmup Iteration   6: 24,701 ms/op
# Warmup Iteration   7: 23,154 ms/op
# Warmup Iteration   8: 22,662 ms/op
# Warmup Iteration   9: 22,870 ms/op
# Warmup Iteration  10: 22,760 ms/op
Iteration   1: 22,976 ms/op
Iteration   2: 22,656 ms/op
Iteration   3: 22,844 ms/op
Iteration   4: 22,613 ms/op
Iteration   5: 22,666 ms/op
Iteration   6: 22,823 ms/op
Iteration   7: 24,284 ms/op
Iteration   8: 22,777 ms/op
Iteration   9: 22,710 ms/op
Iteration  10: 22,666 ms/op


Result "benchmarkFind":
  22,902 ±(99.9%) 0,753 ms/op [Average]
  (min, avg, max) = (22,613, 22,902, 24,284), stdev = 0,498
  CI (99.9%): [22,148, 23,655] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 2, patternSize = 128)

# Run progress: 19,39% complete, ETA 10:59:07
# Fork: 1 of 1
# Warmup Iteration   1: 23,478 ms/op
# Warmup Iteration   2: 22,935 ms/op
# Warmup Iteration   3: 22,684 ms/op
# Warmup Iteration   4: 22,547 ms/op
# Warmup Iteration   5: 22,701 ms/op
# Warmup Iteration   6: 22,753 ms/op
# Warmup Iteration   7: 22,846 ms/op
# Warmup Iteration   8: 22,619 ms/op
# Warmup Iteration   9: 22,677 ms/op
# Warmup Iteration  10: 22,519 ms/op
Iteration   1: 22,629 ms/op
Iteration   2: 22,725 ms/op
Iteration   3: 22,586 ms/op
Iteration   4: 22,779 ms/op
Iteration   5: 22,677 ms/op
Iteration   6: 22,789 ms/op
Iteration   7: 22,615 ms/op
Iteration   8: 22,790 ms/op
Iteration   9: 22,729 ms/op
Iteration  10: 22,868 ms/op


Result "benchmarkFind":
  22,719 ±(99.9%) 0,137 ms/op [Average]
  (min, avg, max) = (22,586, 22,719, 22,868), stdev = 0,091
  CI (99.9%): [22,581, 22,856] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 2, patternSize = 256)

# Run progress: 19,44% complete, ETA 10:58:36
# Fork: 1 of 1
# Warmup Iteration   1: 23,503 ms/op
# Warmup Iteration   2: 22,806 ms/op
# Warmup Iteration   3: 22,979 ms/op
# Warmup Iteration   4: 22,773 ms/op
# Warmup Iteration   5: 22,932 ms/op
# Warmup Iteration   6: 22,698 ms/op
# Warmup Iteration   7: 22,815 ms/op
# Warmup Iteration   8: 22,803 ms/op
# Warmup Iteration   9: 22,868 ms/op
# Warmup Iteration  10: 22,790 ms/op
Iteration   1: 22,858 ms/op
Iteration   2: 22,787 ms/op
Iteration   3: 22,733 ms/op
Iteration   4: 22,743 ms/op
Iteration   5: 22,801 ms/op
Iteration   6: 22,763 ms/op
Iteration   7: 22,795 ms/op
Iteration   8: 22,785 ms/op
Iteration   9: 22,748 ms/op
Iteration  10: 22,836 ms/op


Result "benchmarkFind":
  22,785 ±(99.9%) 0,061 ms/op [Average]
  (min, avg, max) = (22,733, 22,785, 22,858), stdev = 0,040
  CI (99.9%): [22,724, 22,846] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 8, patternSize = 2)

# Run progress: 19,49% complete, ETA 10:58:06
# Fork: 1 of 1
# Warmup Iteration   1: 0,791 ms/op
# Warmup Iteration   2: 0,747 ms/op
# Warmup Iteration   3: 0,749 ms/op
# Warmup Iteration   4: 0,745 ms/op
# Warmup Iteration   5: 0,750 ms/op
# Warmup Iteration   6: 0,745 ms/op
# Warmup Iteration   7: 0,749 ms/op
# Warmup Iteration   8: 0,746 ms/op
# Warmup Iteration   9: 0,747 ms/op
# Warmup Iteration  10: 0,750 ms/op
Iteration   1: 0,753 ms/op
Iteration   2: 0,748 ms/op
Iteration   3: 0,742 ms/op
Iteration   4: 0,750 ms/op
Iteration   5: 0,842 ms/op
Iteration   6: 0,742 ms/op
Iteration   7: 0,749 ms/op
Iteration   8: 0,746 ms/op
Iteration   9: 0,744 ms/op
Iteration  10: 0,743 ms/op


Result "benchmarkFind":
  0,756 ±(99.9%) 0,046 ms/op [Average]
  (min, avg, max) = (0,742, 0,756, 0,842), stdev = 0,031
  CI (99.9%): [0,710, 0,802] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 8, patternSize = 4)

# Run progress: 19,53% complete, ETA 10:57:35
# Fork: 1 of 1
# Warmup Iteration   1: 21,696 ms/op
# Warmup Iteration   2: 19,937 ms/op
# Warmup Iteration   3: 20,127 ms/op
# Warmup Iteration   4: 19,934 ms/op
# Warmup Iteration   5: 19,997 ms/op
# Warmup Iteration   6: 19,924 ms/op
# Warmup Iteration   7: 20,031 ms/op
# Warmup Iteration   8: 19,927 ms/op
# Warmup Iteration   9: 20,049 ms/op
# Warmup Iteration  10: 19,944 ms/op
Iteration   1: 19,931 ms/op
Iteration   2: 19,965 ms/op
Iteration   3: 19,921 ms/op
Iteration   4: 19,890 ms/op
Iteration   5: 19,952 ms/op
Iteration   6: 19,889 ms/op
Iteration   7: 20,074 ms/op
Iteration   8: 19,856 ms/op
Iteration   9: 20,057 ms/op
Iteration  10: 20,026 ms/op


Result "benchmarkFind":
  19,956 ±(99.9%) 0,113 ms/op [Average]
  (min, avg, max) = (19,856, 19,956, 20,074), stdev = 0,074
  CI (99.9%): [19,844, 20,069] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 8, patternSize = 8)

# Run progress: 19,58% complete, ETA 10:57:04
# Fork: 1 of 1
# Warmup Iteration   1: 68,591 ms/op
# Warmup Iteration   2: 65,280 ms/op
# Warmup Iteration   3: 65,945 ms/op
# Warmup Iteration   4: 65,230 ms/op
# Warmup Iteration   5: 64,866 ms/op
# Warmup Iteration   6: 64,753 ms/op
# Warmup Iteration   7: 64,841 ms/op
# Warmup Iteration   8: 64,769 ms/op
# Warmup Iteration   9: 65,054 ms/op
# Warmup Iteration  10: 65,675 ms/op
Iteration   1: 65,013 ms/op
Iteration   2: 65,516 ms/op
Iteration   3: 65,247 ms/op
Iteration   4: 65,570 ms/op
Iteration   5: 65,533 ms/op
Iteration   6: 65,410 ms/op
Iteration   7: 65,132 ms/op
Iteration   8: 65,266 ms/op
Iteration   9: 64,678 ms/op
Iteration  10: 65,893 ms/op


Result "benchmarkFind":
  65,326 ±(99.9%) 0,512 ms/op [Average]
  (min, avg, max) = (64,678, 65,326, 65,893), stdev = 0,339
  CI (99.9%): [64,814, 65,838] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 8, patternSize = 16)

# Run progress: 19,62% complete, ETA 10:56:37
# Fork: 1 of 1
# Warmup Iteration   1: 71,670 ms/op
# Warmup Iteration   2: 70,018 ms/op
# Warmup Iteration   3: 69,975 ms/op
# Warmup Iteration   4: 70,140 ms/op
# Warmup Iteration   5: 70,552 ms/op
# Warmup Iteration   6: 70,956 ms/op
# Warmup Iteration   7: 70,201 ms/op
# Warmup Iteration   8: 70,732 ms/op
# Warmup Iteration   9: 70,712 ms/op
# Warmup Iteration  10: 71,200 ms/op
Iteration   1: 70,060 ms/op
Iteration   2: 77,584 ms/op
Iteration   3: 69,397 ms/op
Iteration   4: 69,079 ms/op
Iteration   5: 69,136 ms/op
Iteration   6: 69,145 ms/op
Iteration   7: 69,622 ms/op
Iteration   8: 69,680 ms/op
Iteration   9: 69,013 ms/op
Iteration  10: 69,106 ms/op


Result "benchmarkFind":
  70,182 ±(99.9%) 3,965 ms/op [Average]
  (min, avg, max) = (69,013, 70,182, 77,584), stdev = 2,623
  CI (99.9%): [66,217, 74,147] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 8, patternSize = 32)

# Run progress: 19,67% complete, ETA 10:56:10
# Fork: 1 of 1
# Warmup Iteration   1: 70,650 ms/op
# Warmup Iteration   2: 69,829 ms/op
# Warmup Iteration   3: 69,735 ms/op
# Warmup Iteration   4: 69,485 ms/op
# Warmup Iteration   5: 69,838 ms/op
# Warmup Iteration   6: 69,796 ms/op
# Warmup Iteration   7: 69,914 ms/op
# Warmup Iteration   8: 69,146 ms/op
# Warmup Iteration   9: 68,696 ms/op
# Warmup Iteration  10: 69,923 ms/op
Iteration   1: 70,045 ms/op
Iteration   2: 70,090 ms/op
Iteration   3: 69,492 ms/op
Iteration   4: 70,046 ms/op
Iteration   5: 70,493 ms/op
Iteration   6: 70,249 ms/op
Iteration   7: 69,989 ms/op
Iteration   8: 69,063 ms/op
Iteration   9: 69,894 ms/op
Iteration  10: 69,049 ms/op


Result "benchmarkFind":
  69,841 ±(99.9%) 0,733 ms/op [Average]
  (min, avg, max) = (69,049, 69,841, 70,493), stdev = 0,485
  CI (99.9%): [69,108, 70,574] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 8, patternSize = 64)

# Run progress: 19,72% complete, ETA 10:55:43
# Fork: 1 of 1
# Warmup Iteration   1: 69,257 ms/op
# Warmup Iteration   2: 68,719 ms/op
# Warmup Iteration   3: 68,738 ms/op
# Warmup Iteration   4: 69,137 ms/op
# Warmup Iteration   5: 68,946 ms/op
# Warmup Iteration   6: 68,537 ms/op
# Warmup Iteration   7: 68,370 ms/op
# Warmup Iteration   8: 68,724 ms/op
# Warmup Iteration   9: 68,816 ms/op
# Warmup Iteration  10: 68,654 ms/op
Iteration   1: 68,822 ms/op
Iteration   2: 68,709 ms/op
Iteration   3: 68,872 ms/op
Iteration   4: 69,211 ms/op
Iteration   5: 68,482 ms/op
Iteration   6: 68,802 ms/op
Iteration   7: 68,522 ms/op
Iteration   8: 68,517 ms/op
Iteration   9: 68,526 ms/op
Iteration  10: 68,700 ms/op


Result "benchmarkFind":
  68,716 ±(99.9%) 0,340 ms/op [Average]
  (min, avg, max) = (68,482, 68,716, 69,211), stdev = 0,225
  CI (99.9%): [68,376, 69,057] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 8, patternSize = 128)

# Run progress: 19,76% complete, ETA 10:55:15
# Fork: 1 of 1
# Warmup Iteration   1: 71,139 ms/op
# Warmup Iteration   2: 69,077 ms/op
# Warmup Iteration   3: 69,013 ms/op
# Warmup Iteration   4: 69,097 ms/op
# Warmup Iteration   5: 69,469 ms/op
# Warmup Iteration   6: 69,328 ms/op
# Warmup Iteration   7: 69,826 ms/op
# Warmup Iteration   8: 73,571 ms/op
# Warmup Iteration   9: 69,824 ms/op
# Warmup Iteration  10: 69,073 ms/op
Iteration   1: 69,054 ms/op
Iteration   2: 68,844 ms/op
Iteration   3: 68,830 ms/op
Iteration   4: 68,987 ms/op
Iteration   5: 68,841 ms/op
Iteration   6: 69,801 ms/op
Iteration   7: 71,110 ms/op
Iteration   8: 69,211 ms/op
Iteration   9: 69,070 ms/op
Iteration  10: 69,426 ms/op


Result "benchmarkFind":
  69,317 ±(99.9%) 1,057 ms/op [Average]
  (min, avg, max) = (68,830, 69,317, 71,110), stdev = 0,699
  CI (99.9%): [68,260, 70,375] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 8, patternSize = 256)

# Run progress: 19,81% complete, ETA 10:54:47
# Fork: 1 of 1
# Warmup Iteration   1: 70,367 ms/op
# Warmup Iteration   2: 69,758 ms/op
# Warmup Iteration   3: 69,513 ms/op
# Warmup Iteration   4: 69,776 ms/op
# Warmup Iteration   5: 68,601 ms/op
# Warmup Iteration   6: 68,948 ms/op
# Warmup Iteration   7: 69,320 ms/op
# Warmup Iteration   8: 68,890 ms/op
# Warmup Iteration   9: 68,666 ms/op
# Warmup Iteration  10: 68,534 ms/op
Iteration   1: 69,804 ms/op
Iteration   2: 69,360 ms/op
Iteration   3: 69,333 ms/op
Iteration   4: 69,658 ms/op
Iteration   5: 69,343 ms/op
Iteration   6: 69,364 ms/op
Iteration   7: 69,763 ms/op
Iteration   8: 69,551 ms/op
Iteration   9: 68,963 ms/op
Iteration  10: 68,839 ms/op


Result "benchmarkFind":
  69,398 ±(99.9%) 0,478 ms/op [Average]
  (min, avg, max) = (68,839, 69,398, 69,804), stdev = 0,316
  CI (99.9%): [68,920, 69,876] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 32, patternSize = 2)

# Run progress: 19,85% complete, ETA 10:54:20
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

com.almondtools.stringbench.SampleNotQualifiedException
	at com.almondtools.stringbench.MultiPatternMatcherBenchmark.setup(MultiPatternMatcherBenchmark.java:36)
	at com.almondtools.stringbench.generated.JavaRegexMultiBenchmark_benchmarkFind_jmhTest._jmh_tryInit_f_javaregexmultibenchmark0_0(JavaRegexMultiBenchmark_benchmarkFind_jmhTest.java:425)
	at com.almondtools.stringbench.generated.JavaRegexMultiBenchmark_benchmarkFind_jmhTest.benchmarkFind_AverageTime(JavaRegexMultiBenchmark_benchmarkFind_jmhTest.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:430)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:412)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)




# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 32, patternSize = 4)

# Run progress: 19,90% complete, ETA 10:52:33
# Fork: 1 of 1
# Warmup Iteration   1: 94,140 ms/op
# Warmup Iteration   2: 89,835 ms/op
# Warmup Iteration   3: 89,010 ms/op
# Warmup Iteration   4: 89,466 ms/op
# Warmup Iteration   5: 89,835 ms/op
# Warmup Iteration   6: 89,062 ms/op
# Warmup Iteration   7: 89,627 ms/op
# Warmup Iteration   8: 89,123 ms/op
# Warmup Iteration   9: 90,133 ms/op
# Warmup Iteration  10: 89,450 ms/op
Iteration   1: 89,696 ms/op
Iteration   2: 89,977 ms/op
Iteration   3: 89,945 ms/op
Iteration   4: 89,055 ms/op
Iteration   5: 89,117 ms/op
Iteration   6: 89,993 ms/op
Iteration   7: 89,053 ms/op
Iteration   8: 89,602 ms/op
Iteration   9: 89,104 ms/op
Iteration  10: 89,627 ms/op


Result "benchmarkFind":
  89,517 ±(99.9%) 0,603 ms/op [Average]
  (min, avg, max) = (89,053, 89,517, 89,993), stdev = 0,399
  CI (99.9%): [88,914, 90,120] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 32, patternSize = 8)

# Run progress: 19,94% complete, ETA 10:52:08
# Fork: 1 of 1
# Warmup Iteration   1: 270,695 ms/op
# Warmup Iteration   2: 258,628 ms/op
# Warmup Iteration   3: 273,164 ms/op
# Warmup Iteration   4: 257,193 ms/op
# Warmup Iteration   5: 256,961 ms/op
# Warmup Iteration   6: 256,966 ms/op
# Warmup Iteration   7: 256,989 ms/op
# Warmup Iteration   8: 255,729 ms/op
# Warmup Iteration   9: 263,362 ms/op
# Warmup Iteration  10: 256,870 ms/op
Iteration   1: 258,666 ms/op
Iteration   2: 258,243 ms/op
Iteration   3: 259,010 ms/op
Iteration   4: 258,126 ms/op
Iteration   5: 258,610 ms/op
Iteration   6: 260,562 ms/op
Iteration   7: 260,640 ms/op
Iteration   8: 260,990 ms/op
Iteration   9: 262,304 ms/op
Iteration  10: 260,987 ms/op


Result "benchmarkFind":
  259,814 ±(99.9%) 2,193 ms/op [Average]
  (min, avg, max) = (258,126, 259,814, 262,304), stdev = 1,451
  CI (99.9%): [257,621, 262,007] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 32, patternSize = 16)

# Run progress: 19,99% complete, ETA 10:51:41
# Fork: 1 of 1
# Warmup Iteration   1: 251,063 ms/op
# Warmup Iteration   2: 244,543 ms/op
# Warmup Iteration   3: 241,873 ms/op
# Warmup Iteration   4: 240,613 ms/op
# Warmup Iteration   5: 241,622 ms/op
# Warmup Iteration   6: 242,547 ms/op
# Warmup Iteration   7: 246,916 ms/op
# Warmup Iteration   8: 241,472 ms/op
# Warmup Iteration   9: 244,752 ms/op
# Warmup Iteration  10: 243,492 ms/op
Iteration   1: 243,377 ms/op
Iteration   2: 240,663 ms/op
Iteration   3: 241,398 ms/op
Iteration   4: 243,792 ms/op
Iteration   5: 243,794 ms/op
Iteration   6: 242,579 ms/op
Iteration   7: 243,135 ms/op
Iteration   8: 242,018 ms/op
Iteration   9: 244,731 ms/op
Iteration  10: 242,347 ms/op


Result "benchmarkFind":
  242,783 ±(99.9%) 1,854 ms/op [Average]
  (min, avg, max) = (240,663, 242,783, 244,731), stdev = 1,227
  CI (99.9%): [240,929, 244,638] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 32, patternSize = 32)

# Run progress: 20,04% complete, ETA 10:51:27
# Fork: 1 of 1
# Warmup Iteration   1: 247,911 ms/op
# Warmup Iteration   2: 241,871 ms/op
# Warmup Iteration   3: 241,046 ms/op
# Warmup Iteration   4: 241,888 ms/op
# Warmup Iteration   5: 241,412 ms/op
# Warmup Iteration   6: 240,857 ms/op
# Warmup Iteration   7: 240,656 ms/op
# Warmup Iteration   8: 242,434 ms/op
# Warmup Iteration   9: 241,331 ms/op
# Warmup Iteration  10: 241,501 ms/op
Iteration   1: 240,724 ms/op
Iteration   2: 243,131 ms/op
Iteration   3: 242,017 ms/op
Iteration   4: 259,522 ms/op
Iteration   5: 242,632 ms/op
Iteration   6: 240,482 ms/op
Iteration   7: 240,241 ms/op
Iteration   8: 241,729 ms/op
Iteration   9: 241,366 ms/op
Iteration  10: 243,812 ms/op


Result "benchmarkFind":
  243,566 ±(99.9%) 8,655 ms/op [Average]
  (min, avg, max) = (240,241, 243,566, 259,522), stdev = 5,725
  CI (99.9%): [234,910, 252,221] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 32, patternSize = 64)

# Run progress: 20,08% complete, ETA 10:51:13
# Fork: 1 of 1
# Warmup Iteration   1: 243,398 ms/op
# Warmup Iteration   2: 240,879 ms/op
# Warmup Iteration   3: 239,275 ms/op
# Warmup Iteration   4: 237,948 ms/op
# Warmup Iteration   5: 238,664 ms/op
# Warmup Iteration   6: 238,179 ms/op
# Warmup Iteration   7: 238,176 ms/op
# Warmup Iteration   8: 238,782 ms/op
# Warmup Iteration   9: 238,453 ms/op
# Warmup Iteration  10: 238,826 ms/op
Iteration   1: 240,641 ms/op
Iteration   2: 241,757 ms/op
Iteration   3: 239,957 ms/op
Iteration   4: 243,318 ms/op
Iteration   5: 243,161 ms/op
Iteration   6: 241,843 ms/op
Iteration   7: 242,693 ms/op
Iteration   8: 242,587 ms/op
Iteration   9: 238,890 ms/op
Iteration  10: 238,661 ms/op


Result "benchmarkFind":
  241,351 ±(99.9%) 2,600 ms/op [Average]
  (min, avg, max) = (238,661, 241,351, 243,318), stdev = 1,720
  CI (99.9%): [238,751, 243,951] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 32, patternSize = 128)

# Run progress: 20,13% complete, ETA 10:50:59
# Fork: 1 of 1
# Warmup Iteration   1: 244,246 ms/op
# Warmup Iteration   2: 240,976 ms/op
# Warmup Iteration   3: 239,573 ms/op
# Warmup Iteration   4: 239,461 ms/op
# Warmup Iteration   5: 238,943 ms/op
# Warmup Iteration   6: 238,821 ms/op
# Warmup Iteration   7: 238,527 ms/op
# Warmup Iteration   8: 238,842 ms/op
# Warmup Iteration   9: 238,576 ms/op
# Warmup Iteration  10: 238,227 ms/op
Iteration   1: 238,465 ms/op
Iteration   2: 238,120 ms/op
Iteration   3: 238,659 ms/op
Iteration   4: 238,123 ms/op
Iteration   5: 239,234 ms/op
Iteration   6: 239,140 ms/op
Iteration   7: 238,346 ms/op
Iteration   8: 237,736 ms/op
Iteration   9: 237,950 ms/op
Iteration  10: 237,904 ms/op


Result "benchmarkFind":
  238,368 ±(99.9%) 0,773 ms/op [Average]
  (min, avg, max) = (237,736, 238,368, 239,234), stdev = 0,511
  CI (99.9%): [237,594, 239,141] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 32, patternSize = 256)

# Run progress: 20,17% complete, ETA 10:50:44
# Fork: 1 of 1
# Warmup Iteration   1: 240,703 ms/op
# Warmup Iteration   2: 238,274 ms/op
# Warmup Iteration   3: 265,283 ms/op
# Warmup Iteration   4: 234,995 ms/op
# Warmup Iteration   5: 235,735 ms/op
# Warmup Iteration   6: 235,323 ms/op
# Warmup Iteration   7: 235,335 ms/op
# Warmup Iteration   8: 235,807 ms/op
# Warmup Iteration   9: 235,463 ms/op
# Warmup Iteration  10: 235,609 ms/op
Iteration   1: 235,416 ms/op
Iteration   2: 236,085 ms/op
Iteration   3: 235,402 ms/op
Iteration   4: 235,494 ms/op
Iteration   5: 235,411 ms/op
Iteration   6: 234,920 ms/op
Iteration   7: 236,110 ms/op
Iteration   8: 235,814 ms/op
Iteration   9: 235,142 ms/op
Iteration  10: 235,226 ms/op


Result "benchmarkFind":
  235,502 ±(99.9%) 0,591 ms/op [Average]
  (min, avg, max) = (234,920, 235,502, 236,110), stdev = 0,391
  CI (99.9%): [234,911, 236,093] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 128, patternSize = 2)

# Run progress: 20,22% complete, ETA 10:50:27
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

com.almondtools.stringbench.SampleNotQualifiedException
	at com.almondtools.stringbench.MultiPatternMatcherBenchmark.setup(MultiPatternMatcherBenchmark.java:36)
	at com.almondtools.stringbench.generated.JavaRegexMultiBenchmark_benchmarkFind_jmhTest._jmh_tryInit_f_javaregexmultibenchmark0_0(JavaRegexMultiBenchmark_benchmarkFind_jmhTest.java:425)
	at com.almondtools.stringbench.generated.JavaRegexMultiBenchmark_benchmarkFind_jmhTest.benchmarkFind_AverageTime(JavaRegexMultiBenchmark_benchmarkFind_jmhTest.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:430)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:412)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)




# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 128, patternSize = 4)

# Run progress: 20,27% complete, ETA 10:48:42
# Fork: 1 of 1
# Warmup Iteration   1: 163,477 ms/op
# Warmup Iteration   2: 155,381 ms/op
# Warmup Iteration   3: 155,379 ms/op
# Warmup Iteration   4: 154,700 ms/op
# Warmup Iteration   5: 155,414 ms/op
# Warmup Iteration   6: 155,818 ms/op
# Warmup Iteration   7: 154,833 ms/op
# Warmup Iteration   8: 155,806 ms/op
# Warmup Iteration   9: 156,265 ms/op
# Warmup Iteration  10: 156,448 ms/op
Iteration   1: 154,609 ms/op
Iteration   2: 155,500 ms/op
Iteration   3: 156,925 ms/op
Iteration   4: 155,488 ms/op
Iteration   5: 154,666 ms/op
Iteration   6: 154,276 ms/op
Iteration   7: 156,179 ms/op
Iteration   8: 156,298 ms/op
Iteration   9: 156,221 ms/op
Iteration  10: 155,185 ms/op


Result "benchmarkFind":
  155,535 ±(99.9%) 1,307 ms/op [Average]
  (min, avg, max) = (154,276, 155,535, 156,925), stdev = 0,864
  CI (99.9%): [154,228, 156,841] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 128, patternSize = 8)

# Run progress: 20,31% complete, ETA 10:48:19
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

com.almondtools.stringbench.ResultNotAcceptedException
	at com.almondtools.stringbench.MultiPatternSample.validate(MultiPatternSample.java:157)
	at com.almondtools.stringbench.MultiPatternMatcherBenchmark.benchmarkFind(MultiPatternMatcherBenchmark.java:50)
	at com.almondtools.stringbench.generated.JavaRegexMultiBenchmark_benchmarkFind_jmhTest.benchmarkFind_avgt_jmhStub(JavaRegexMultiBenchmark_benchmarkFind_jmhTest.java:208)
	at com.almondtools.stringbench.generated.JavaRegexMultiBenchmark_benchmarkFind_jmhTest.benchmarkFind_AverageTime(JavaRegexMultiBenchmark_benchmarkFind_jmhTest.java:152)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:430)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:412)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)




# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 128, patternSize = 16)

# Run progress: 20,36% complete, ETA 10:46:36
# Fork: 1 of 1
# Warmup Iteration   1: 1052,271 ms/op
# Warmup Iteration   2: 1069,158 ms/op
# Warmup Iteration   3: 1081,649 ms/op
# Warmup Iteration   4: 1074,010 ms/op
# Warmup Iteration   5: 1073,001 ms/op
# Warmup Iteration   6: 1076,108 ms/op
# Warmup Iteration   7: 1082,091 ms/op
# Warmup Iteration   8: 1083,709 ms/op
# Warmup Iteration   9: 1076,506 ms/op
# Warmup Iteration  10: 1078,742 ms/op
Iteration   1: 1072,166 ms/op
Iteration   2: 1078,794 ms/op
Iteration   3: 1139,248 ms/op
Iteration   4: 1062,288 ms/op
Iteration   5: 1062,886 ms/op
Iteration   6: 1060,450 ms/op
Iteration   7: 1055,365 ms/op
Iteration   8: 1053,141 ms/op
Iteration   9: 1056,602 ms/op
Iteration  10: 1054,112 ms/op


Result "benchmarkFind":
  1069,505 ±(99.9%) 39,057 ms/op [Average]
  (min, avg, max) = (1053,141, 1069,505, 1139,248), stdev = 25,834
  CI (99.9%): [1030,448, 1108,562] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 128, patternSize = 32)

# Run progress: 20,40% complete, ETA 10:46:11
# Fork: 1 of 1
# Warmup Iteration   1: 983,949 ms/op
# Warmup Iteration   2: 987,281 ms/op
# Warmup Iteration   3: 992,785 ms/op
# Warmup Iteration   4: 987,305 ms/op
# Warmup Iteration   5: 989,347 ms/op
# Warmup Iteration   6: 986,760 ms/op
# Warmup Iteration   7: 985,336 ms/op
# Warmup Iteration   8: 983,902 ms/op
# Warmup Iteration   9: 989,525 ms/op
# Warmup Iteration  10: 994,566 ms/op
Iteration   1: 987,932 ms/op
Iteration   2: 988,408 ms/op
Iteration   3: 986,725 ms/op
Iteration   4: 984,744 ms/op
Iteration   5: 987,702 ms/op
Iteration   6: 989,926 ms/op
Iteration   7: 991,921 ms/op
Iteration   8: 986,895 ms/op
Iteration   9: 988,617 ms/op
Iteration  10: 1008,167 ms/op


Result "benchmarkFind":
  990,104 ±(99.9%) 10,024 ms/op [Average]
  (min, avg, max) = (984,744, 990,104, 1008,167), stdev = 6,630
  CI (99.9%): [980,080, 1000,128] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 128, patternSize = 64)

# Run progress: 20,45% complete, ETA 10:46:54
# Fork: 1 of 1
# Warmup Iteration   1: 980,933 ms/op
# Warmup Iteration   2: 967,468 ms/op
# Warmup Iteration   3: 969,417 ms/op
# Warmup Iteration   4: 969,828 ms/op
# Warmup Iteration   5: 968,610 ms/op
# Warmup Iteration   6: 1013,037 ms/op
# Warmup Iteration   7: 1029,082 ms/op
# Warmup Iteration   8: 971,329 ms/op
# Warmup Iteration   9: 967,353 ms/op
# Warmup Iteration  10: 974,048 ms/op
Iteration   1: 970,756 ms/op
Iteration   2: 979,162 ms/op
Iteration   3: 973,666 ms/op
Iteration   4: 971,770 ms/op
Iteration   5: 976,688 ms/op
Iteration   6: 978,848 ms/op
Iteration   7: 981,376 ms/op
Iteration   8: 979,675 ms/op
Iteration   9: 982,640 ms/op
Iteration  10: 975,414 ms/op


Result "benchmarkFind":
  976,999 ±(99.9%) 6,095 ms/op [Average]
  (min, avg, max) = (970,756, 976,999, 982,640), stdev = 4,031
  CI (99.9%): [970,905, 983,094] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 128, patternSize = 128)

# Run progress: 20,50% complete, ETA 10:47:35
# Fork: 1 of 1
# Warmup Iteration   1: 1042,979 ms/op
# Warmup Iteration   2: 1119,843 ms/op
# Warmup Iteration   3: 1119,576 ms/op
# Warmup Iteration   4: 1113,905 ms/op
# Warmup Iteration   5: 1119,875 ms/op
# Warmup Iteration   6: 1119,883 ms/op
# Warmup Iteration   7: 1123,503 ms/op
# Warmup Iteration   8: 1114,516 ms/op
# Warmup Iteration   9: 1117,923 ms/op
# Warmup Iteration  10: 1115,863 ms/op
Iteration   1: 1117,619 ms/op
Iteration   2: 1109,600 ms/op
Iteration   3: 1118,521 ms/op
Iteration   4: 1114,618 ms/op
Iteration   5: 1115,239 ms/op
Iteration   6: 1112,264 ms/op
Iteration   7: 1113,669 ms/op
Iteration   8: 1129,273 ms/op
Iteration   9: 1126,551 ms/op
Iteration  10: 1114,583 ms/op


Result "benchmarkFind":
  1117,194 ±(99.9%) 9,389 ms/op [Average]
  (min, avg, max) = (1109,600, 1117,194, 1129,273), stdev = 6,210
  CI (99.9%): [1107,805, 1126,582] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 128, patternSize = 256)

# Run progress: 20,54% complete, ETA 10:47:18
# Fork: 1 of 1
# Warmup Iteration   1: 1055,207 ms/op
# Warmup Iteration   2: 1126,371 ms/op
# Warmup Iteration   3: 1119,485 ms/op
# Warmup Iteration   4: 1125,728 ms/op
# Warmup Iteration   5: 1125,853 ms/op
# Warmup Iteration   6: 1122,048 ms/op
# Warmup Iteration   7: 1119,763 ms/op
# Warmup Iteration   8: 1232,567 ms/op
# Warmup Iteration   9: 1116,883 ms/op
# Warmup Iteration  10: 1112,605 ms/op
Iteration   1: 1115,568 ms/op
Iteration   2: 1116,123 ms/op
Iteration   3: 1120,954 ms/op
Iteration   4: 1119,071 ms/op
Iteration   5: 1117,556 ms/op
Iteration   6: 1114,503 ms/op
Iteration   7: 1124,825 ms/op
Iteration   8: 1116,967 ms/op
Iteration   9: 1111,263 ms/op
Iteration  10: 1117,259 ms/op


Result "benchmarkFind":
  1117,409 ±(99.9%) 5,562 ms/op [Average]
  (min, avg, max) = (1111,263, 1117,409, 1124,825), stdev = 3,679
  CI (99.9%): [1111,846, 1122,971] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 2, patternSize = 2)

# Run progress: 20,59% complete, ETA 10:47:01
# Fork: 1 of 1
# Warmup Iteration   1: 0,442 ms/op
# Warmup Iteration   2: 0,416 ms/op
# Warmup Iteration   3: 0,420 ms/op
# Warmup Iteration   4: 0,438 ms/op
# Warmup Iteration   5: 0,446 ms/op
# Warmup Iteration   6: 0,445 ms/op
# Warmup Iteration   7: 0,440 ms/op
# Warmup Iteration   8: 0,440 ms/op
# Warmup Iteration   9: 0,441 ms/op
# Warmup Iteration  10: 0,440 ms/op
Iteration   1: 0,441 ms/op
Iteration   2: 0,443 ms/op
Iteration   3: 0,441 ms/op
Iteration   4: 0,441 ms/op
Iteration   5: 0,444 ms/op
Iteration   6: 0,445 ms/op
Iteration   7: 0,416 ms/op
Iteration   8: 0,412 ms/op
Iteration   9: 0,415 ms/op
Iteration  10: 0,418 ms/op


Result "benchmarkFind":
  0,432 ±(99.9%) 0,022 ms/op [Average]
  (min, avg, max) = (0,412, 0,432, 0,445), stdev = 0,014
  CI (99.9%): [0,410, 0,453] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 2, patternSize = 4)

# Run progress: 20,63% complete, ETA 10:46:31
# Fork: 1 of 1
# Warmup Iteration   1: 19,875 ms/op
# Warmup Iteration   2: 18,985 ms/op
# Warmup Iteration   3: 19,067 ms/op
# Warmup Iteration   4: 18,878 ms/op
# Warmup Iteration   5: 19,050 ms/op
# Warmup Iteration   6: 19,010 ms/op
# Warmup Iteration   7: 19,063 ms/op
# Warmup Iteration   8: 18,988 ms/op
# Warmup Iteration   9: 19,039 ms/op
# Warmup Iteration  10: 19,030 ms/op
Iteration   1: 18,881 ms/op
Iteration   2: 18,990 ms/op
Iteration   3: 19,099 ms/op
Iteration   4: 19,149 ms/op
Iteration   5: 19,162 ms/op
Iteration   6: 18,946 ms/op
Iteration   7: 19,149 ms/op
Iteration   8: 18,903 ms/op
Iteration   9: 19,080 ms/op
Iteration  10: 18,960 ms/op


Result "benchmarkFind":
  19,032 ±(99.9%) 0,163 ms/op [Average]
  (min, avg, max) = (18,881, 19,032, 19,162), stdev = 0,108
  CI (99.9%): [18,869, 19,195] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 2, patternSize = 8)

# Run progress: 20,68% complete, ETA 10:46:01
# Fork: 1 of 1
# Warmup Iteration   1: 19,020 ms/op
# Warmup Iteration   2: 18,502 ms/op
# Warmup Iteration   3: 18,608 ms/op
# Warmup Iteration   4: 18,613 ms/op
# Warmup Iteration   5: 20,287 ms/op
# Warmup Iteration   6: 18,407 ms/op
# Warmup Iteration   7: 18,367 ms/op
# Warmup Iteration   8: 18,254 ms/op
# Warmup Iteration   9: 18,253 ms/op
# Warmup Iteration  10: 18,288 ms/op
Iteration   1: 18,352 ms/op
Iteration   2: 18,458 ms/op
Iteration   3: 18,460 ms/op
Iteration   4: 18,317 ms/op
Iteration   5: 18,412 ms/op
Iteration   6: 18,299 ms/op
Iteration   7: 18,518 ms/op
Iteration   8: 18,403 ms/op
Iteration   9: 18,313 ms/op
Iteration  10: 18,498 ms/op


Result "benchmarkFind":
  18,403 ±(99.9%) 0,121 ms/op [Average]
  (min, avg, max) = (18,299, 18,403, 18,518), stdev = 0,080
  CI (99.9%): [18,282, 18,524] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 2, patternSize = 16)

# Run progress: 20,73% complete, ETA 10:45:32
# Fork: 1 of 1
# Warmup Iteration   1: 19,173 ms/op
# Warmup Iteration   2: 18,392 ms/op
# Warmup Iteration   3: 18,493 ms/op
# Warmup Iteration   4: 18,387 ms/op
# Warmup Iteration   5: 18,384 ms/op
# Warmup Iteration   6: 18,667 ms/op
# Warmup Iteration   7: 18,244 ms/op
# Warmup Iteration   8: 18,304 ms/op
# Warmup Iteration   9: 18,258 ms/op
# Warmup Iteration  10: 18,507 ms/op
Iteration   1: 18,315 ms/op
Iteration   2: 18,183 ms/op
Iteration   3: 18,311 ms/op
Iteration   4: 18,425 ms/op
Iteration   5: 18,283 ms/op
Iteration   6: 18,351 ms/op
Iteration   7: 18,316 ms/op
Iteration   8: 18,290 ms/op
Iteration   9: 18,274 ms/op
Iteration  10: 18,279 ms/op


Result "benchmarkFind":
  18,303 ±(99.9%) 0,093 ms/op [Average]
  (min, avg, max) = (18,183, 18,303, 18,425), stdev = 0,061
  CI (99.9%): [18,210, 18,395] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 2, patternSize = 32)

# Run progress: 20,77% complete, ETA 10:45:03
# Fork: 1 of 1
# Warmup Iteration   1: 18,804 ms/op
# Warmup Iteration   2: 18,323 ms/op
# Warmup Iteration   3: 18,271 ms/op
# Warmup Iteration   4: 18,349 ms/op
# Warmup Iteration   5: 18,211 ms/op
# Warmup Iteration   6: 18,266 ms/op
# Warmup Iteration   7: 18,461 ms/op
# Warmup Iteration   8: 18,166 ms/op
# Warmup Iteration   9: 18,389 ms/op
# Warmup Iteration  10: 18,290 ms/op
Iteration   1: 18,423 ms/op
Iteration   2: 18,180 ms/op
Iteration   3: 18,265 ms/op
Iteration   4: 18,290 ms/op
Iteration   5: 18,166 ms/op
Iteration   6: 18,158 ms/op
Iteration   7: 19,601 ms/op
Iteration   8: 19,505 ms/op
Iteration   9: 19,499 ms/op
Iteration  10: 19,610 ms/op


Result "benchmarkFind":
  18,770 ±(99.9%) 1,028 ms/op [Average]
  (min, avg, max) = (18,158, 18,770, 19,610), stdev = 0,680
  CI (99.9%): [17,742, 19,798] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 2, patternSize = 64)

# Run progress: 20,82% complete, ETA 10:44:33
# Fork: 1 of 1
# Warmup Iteration   1: 18,812 ms/op
# Warmup Iteration   2: 18,371 ms/op
# Warmup Iteration   3: 20,134 ms/op
# Warmup Iteration   4: 18,235 ms/op
# Warmup Iteration   5: 18,331 ms/op
# Warmup Iteration   6: 18,397 ms/op
# Warmup Iteration   7: 18,337 ms/op
# Warmup Iteration   8: 18,297 ms/op
# Warmup Iteration   9: 18,384 ms/op
# Warmup Iteration  10: 18,219 ms/op
Iteration   1: 18,302 ms/op
Iteration   2: 18,190 ms/op
Iteration   3: 18,214 ms/op
Iteration   4: 18,183 ms/op
Iteration   5: 18,229 ms/op
Iteration   6: 18,319 ms/op
Iteration   7: 18,268 ms/op
Iteration   8: 18,426 ms/op
Iteration   9: 18,320 ms/op
Iteration  10: 18,289 ms/op


Result "benchmarkFind":
  18,274 ±(99.9%) 0,112 ms/op [Average]
  (min, avg, max) = (18,183, 18,274, 18,426), stdev = 0,074
  CI (99.9%): [18,162, 18,386] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 2, patternSize = 128)

# Run progress: 20,86% complete, ETA 10:44:04
# Fork: 1 of 1
# Warmup Iteration   1: 18,915 ms/op
# Warmup Iteration   2: 18,194 ms/op
# Warmup Iteration   3: 18,346 ms/op
# Warmup Iteration   4: 18,363 ms/op
# Warmup Iteration   5: 18,369 ms/op
# Warmup Iteration   6: 18,175 ms/op
# Warmup Iteration   7: 18,272 ms/op
# Warmup Iteration   8: 18,351 ms/op
# Warmup Iteration   9: 18,277 ms/op
# Warmup Iteration  10: 18,481 ms/op
Iteration   1: 18,150 ms/op
Iteration   2: 18,275 ms/op
Iteration   3: 18,339 ms/op
Iteration   4: 18,268 ms/op
Iteration   5: 18,356 ms/op
Iteration   6: 18,321 ms/op
Iteration   7: 18,908 ms/op
Iteration   8: 18,766 ms/op
Iteration   9: 18,706 ms/op
Iteration  10: 18,446 ms/op


Result "benchmarkFind":
  18,454 ±(99.9%) 0,379 ms/op [Average]
  (min, avg, max) = (18,150, 18,454, 18,908), stdev = 0,251
  CI (99.9%): [18,074, 18,833] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 2, patternSize = 256)

# Run progress: 20,91% complete, ETA 10:43:35
# Fork: 1 of 1
# Warmup Iteration   1: 18,524 ms/op
# Warmup Iteration   2: 17,877 ms/op
# Warmup Iteration   3: 17,854 ms/op
# Warmup Iteration   4: 17,875 ms/op
# Warmup Iteration   5: 17,927 ms/op
# Warmup Iteration   6: 17,932 ms/op
# Warmup Iteration   7: 17,974 ms/op
# Warmup Iteration   8: 17,949 ms/op
# Warmup Iteration   9: 17,936 ms/op
# Warmup Iteration  10: 17,941 ms/op
Iteration   1: 17,976 ms/op
Iteration   2: 18,038 ms/op
Iteration   3: 18,033 ms/op
Iteration   4: 18,074 ms/op
Iteration   5: 18,064 ms/op
Iteration   6: 18,104 ms/op
Iteration   7: 17,911 ms/op
Iteration   8: 17,906 ms/op
Iteration   9: 17,978 ms/op
Iteration  10: 18,042 ms/op


Result "benchmarkFind":
  18,013 ±(99.9%) 0,102 ms/op [Average]
  (min, avg, max) = (17,906, 18,013, 18,104), stdev = 0,067
  CI (99.9%): [17,911, 18,114] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 8, patternSize = 2)

# Run progress: 20,96% complete, ETA 10:43:06
# Fork: 1 of 1
# Warmup Iteration   1: 2,825 ms/op
# Warmup Iteration   2: 2,526 ms/op
# Warmup Iteration   3: 2,443 ms/op
# Warmup Iteration   4: 2,440 ms/op
# Warmup Iteration   5: 2,434 ms/op
# Warmup Iteration   6: 2,429 ms/op
# Warmup Iteration   7: 2,434 ms/op
# Warmup Iteration   8: 2,432 ms/op
# Warmup Iteration   9: 2,433 ms/op
# Warmup Iteration  10: 2,425 ms/op
Iteration   1: 2,431 ms/op
Iteration   2: 2,427 ms/op
Iteration   3: 2,431 ms/op
Iteration   4: 2,437 ms/op
Iteration   5: 2,431 ms/op
Iteration   6: 2,424 ms/op
Iteration   7: 2,441 ms/op
Iteration   8: 2,438 ms/op
Iteration   9: 2,432 ms/op
Iteration  10: 2,424 ms/op


Result "benchmarkFind":
  2,432 ±(99.9%) 0,009 ms/op [Average]
  (min, avg, max) = (2,424, 2,432, 2,441), stdev = 0,006
  CI (99.9%): [2,423, 2,440] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 8, patternSize = 4)

# Run progress: 21,00% complete, ETA 10:42:36
# Fork: 1 of 1
# Warmup Iteration   1: 93,096 ms/op
# Warmup Iteration   2: 87,525 ms/op
# Warmup Iteration   3: 86,782 ms/op
# Warmup Iteration   4: 87,240 ms/op
# Warmup Iteration   5: 86,573 ms/op
# Warmup Iteration   6: 87,047 ms/op
# Warmup Iteration   7: 86,984 ms/op
# Warmup Iteration   8: 86,873 ms/op
# Warmup Iteration   9: 86,702 ms/op
# Warmup Iteration  10: 87,027 ms/op
Iteration   1: 86,898 ms/op
Iteration   2: 86,712 ms/op
Iteration   3: 87,089 ms/op
Iteration   4: 88,324 ms/op
Iteration   5: 86,747 ms/op
Iteration   6: 87,073 ms/op
Iteration   7: 86,883 ms/op
Iteration   8: 87,093 ms/op
Iteration   9: 86,801 ms/op
Iteration  10: 86,858 ms/op


Result "benchmarkFind":
  87,048 ±(99.9%) 0,710 ms/op [Average]
  (min, avg, max) = (86,712, 87,048, 88,324), stdev = 0,470
  CI (99.9%): [86,338, 87,758] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 8, patternSize = 8)

# Run progress: 21,05% complete, ETA 10:42:10
# Fork: 1 of 1
# Warmup Iteration   1: 61,982 ms/op
# Warmup Iteration   2: 59,805 ms/op
# Warmup Iteration   3: 59,494 ms/op
# Warmup Iteration   4: 60,585 ms/op
# Warmup Iteration   5: 59,755 ms/op
# Warmup Iteration   6: 59,930 ms/op
# Warmup Iteration   7: 59,961 ms/op
# Warmup Iteration   8: 59,523 ms/op
# Warmup Iteration   9: 60,115 ms/op
# Warmup Iteration  10: 59,415 ms/op
Iteration   1: 59,548 ms/op
Iteration   2: 59,632 ms/op
Iteration   3: 59,508 ms/op
Iteration   4: 59,333 ms/op
Iteration   5: 59,766 ms/op
Iteration   6: 59,767 ms/op
Iteration   7: 59,619 ms/op
Iteration   8: 59,532 ms/op
Iteration   9: 63,769 ms/op
Iteration  10: 59,589 ms/op


Result "benchmarkFind":
  60,006 ±(99.9%) 2,008 ms/op [Average]
  (min, avg, max) = (59,333, 60,006, 63,769), stdev = 1,328
  CI (99.9%): [57,999, 62,014] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 8, patternSize = 16)

# Run progress: 21,09% complete, ETA 10:41:41
# Fork: 1 of 1
# Warmup Iteration   1: 62,551 ms/op
# Warmup Iteration   2: 61,012 ms/op
# Warmup Iteration   3: 60,980 ms/op
# Warmup Iteration   4: 60,691 ms/op
# Warmup Iteration   5: 60,828 ms/op
# Warmup Iteration   6: 60,968 ms/op
# Warmup Iteration   7: 61,452 ms/op
# Warmup Iteration   8: 62,146 ms/op
# Warmup Iteration   9: 61,345 ms/op
# Warmup Iteration  10: 61,056 ms/op
Iteration   1: 61,274 ms/op
Iteration   2: 60,986 ms/op
Iteration   3: 61,563 ms/op
Iteration   4: 60,948 ms/op
Iteration   5: 61,037 ms/op
Iteration   6: 62,083 ms/op
Iteration   7: 61,882 ms/op
Iteration   8: 61,012 ms/op
Iteration   9: 60,871 ms/op
Iteration  10: 61,193 ms/op


Result "benchmarkFind":
  61,285 ±(99.9%) 0,635 ms/op [Average]
  (min, avg, max) = (60,871, 61,285, 62,083), stdev = 0,420
  CI (99.9%): [60,650, 61,920] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 8, patternSize = 32)

# Run progress: 21,14% complete, ETA 10:41:14
# Fork: 1 of 1
# Warmup Iteration   1: 62,920 ms/op
# Warmup Iteration   2: 61,437 ms/op
# Warmup Iteration   3: 61,799 ms/op
# Warmup Iteration   4: 61,997 ms/op
# Warmup Iteration   5: 61,299 ms/op
# Warmup Iteration   6: 62,196 ms/op
# Warmup Iteration   7: 61,232 ms/op
# Warmup Iteration   8: 62,059 ms/op
# Warmup Iteration   9: 61,683 ms/op
# Warmup Iteration  10: 61,447 ms/op
Iteration   1: 61,186 ms/op
Iteration   2: 61,944 ms/op
Iteration   3: 61,590 ms/op
Iteration   4: 61,215 ms/op
Iteration   5: 61,647 ms/op
Iteration   6: 61,256 ms/op
Iteration   7: 61,177 ms/op
Iteration   8: 61,837 ms/op
Iteration   9: 61,693 ms/op
Iteration  10: 61,563 ms/op


Result "benchmarkFind":
  61,511 ±(99.9%) 0,429 ms/op [Average]
  (min, avg, max) = (61,177, 61,511, 61,944), stdev = 0,284
  CI (99.9%): [61,082, 61,940] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 8, patternSize = 64)

# Run progress: 21,19% complete, ETA 10:40:48
# Fork: 1 of 1
# Warmup Iteration   1: 64,450 ms/op
# Warmup Iteration   2: 62,823 ms/op
# Warmup Iteration   3: 62,955 ms/op
# Warmup Iteration   4: 62,823 ms/op
# Warmup Iteration   5: 62,074 ms/op
# Warmup Iteration   6: 62,863 ms/op
# Warmup Iteration   7: 62,706 ms/op
# Warmup Iteration   8: 62,255 ms/op
# Warmup Iteration   9: 62,295 ms/op
# Warmup Iteration  10: 62,698 ms/op
Iteration   1: 62,101 ms/op
Iteration   2: 62,962 ms/op
Iteration   3: 62,527 ms/op
Iteration   4: 62,914 ms/op
Iteration   5: 62,536 ms/op
Iteration   6: 67,095 ms/op
Iteration   7: 62,780 ms/op
Iteration   8: 62,142 ms/op
Iteration   9: 63,232 ms/op
Iteration  10: 62,563 ms/op


Result "benchmarkFind":
  63,085 ±(99.9%) 2,196 ms/op [Average]
  (min, avg, max) = (62,101, 63,085, 67,095), stdev = 1,452
  CI (99.9%): [60,890, 65,281] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 8, patternSize = 128)

# Run progress: 21,23% complete, ETA 10:40:20
# Fork: 1 of 1
# Warmup Iteration   1: 64,036 ms/op
# Warmup Iteration   2: 61,725 ms/op
# Warmup Iteration   3: 61,677 ms/op
# Warmup Iteration   4: 61,558 ms/op
# Warmup Iteration   5: 61,516 ms/op
# Warmup Iteration   6: 61,536 ms/op
# Warmup Iteration   7: 61,555 ms/op
# Warmup Iteration   8: 61,585 ms/op
# Warmup Iteration   9: 61,650 ms/op
# Warmup Iteration  10: 61,796 ms/op
Iteration   1: 61,790 ms/op
Iteration   2: 61,761 ms/op
Iteration   3: 61,800 ms/op
Iteration   4: 61,473 ms/op
Iteration   5: 61,493 ms/op
Iteration   6: 62,428 ms/op
Iteration   7: 62,126 ms/op
Iteration   8: 62,085 ms/op
Iteration   9: 62,289 ms/op
Iteration  10: 62,245 ms/op


Result "benchmarkFind":
  61,949 ±(99.9%) 0,504 ms/op [Average]
  (min, avg, max) = (61,473, 61,949, 62,428), stdev = 0,333
  CI (99.9%): [61,445, 62,453] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 8, patternSize = 256)

# Run progress: 21,28% complete, ETA 10:39:54
# Fork: 1 of 1
# Warmup Iteration   1: 63,658 ms/op
# Warmup Iteration   2: 63,017 ms/op
# Warmup Iteration   3: 62,943 ms/op
# Warmup Iteration   4: 62,615 ms/op
# Warmup Iteration   5: 63,167 ms/op
# Warmup Iteration   6: 62,956 ms/op
# Warmup Iteration   7: 62,641 ms/op
# Warmup Iteration   8: 62,817 ms/op
# Warmup Iteration   9: 63,043 ms/op
# Warmup Iteration  10: 62,861 ms/op
Iteration   1: 63,331 ms/op
Iteration   2: 62,995 ms/op
Iteration   3: 62,358 ms/op
Iteration   4: 62,520 ms/op
Iteration   5: 62,802 ms/op
Iteration   6: 62,526 ms/op
Iteration   7: 62,053 ms/op
Iteration   8: 62,381 ms/op
Iteration   9: 62,039 ms/op
Iteration  10: 62,898 ms/op


Result "benchmarkFind":
  62,590 ±(99.9%) 0,627 ms/op [Average]
  (min, avg, max) = (62,039, 62,590, 63,331), stdev = 0,415
  CI (99.9%): [61,963, 63,218] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 32, patternSize = 2)

# Run progress: 21,32% complete, ETA 10:39:26
# Fork: 1 of 1
# Warmup Iteration   1: 12,891 ms/op
# Warmup Iteration   2: 12,139 ms/op
# Warmup Iteration   3: 12,199 ms/op
# Warmup Iteration   4: 12,254 ms/op
# Warmup Iteration   5: 12,218 ms/op
# Warmup Iteration   6: 12,158 ms/op
# Warmup Iteration   7: 12,152 ms/op
# Warmup Iteration   8: 12,251 ms/op
# Warmup Iteration   9: 12,254 ms/op
# Warmup Iteration  10: 12,330 ms/op
Iteration   1: 12,235 ms/op
Iteration   2: 12,173 ms/op
Iteration   3: 13,349 ms/op
Iteration   4: 12,075 ms/op
Iteration   5: 12,053 ms/op
Iteration   6: 12,135 ms/op
Iteration   7: 12,043 ms/op
Iteration   8: 12,080 ms/op
Iteration   9: 12,128 ms/op
Iteration  10: 12,148 ms/op


Result "benchmarkFind":
  12,242 ±(99.9%) 0,595 ms/op [Average]
  (min, avg, max) = (12,043, 12,242, 13,349), stdev = 0,393
  CI (99.9%): [11,647, 12,836] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 32, patternSize = 4)

# Run progress: 21,37% complete, ETA 10:38:57
# Fork: 1 of 1
# Warmup Iteration   1: 788,707 ms/op
# Warmup Iteration   2: 733,240 ms/op
# Warmup Iteration   3: 730,192 ms/op
# Warmup Iteration   4: 732,862 ms/op
# Warmup Iteration   5: 730,013 ms/op
# Warmup Iteration   6: 737,230 ms/op
# Warmup Iteration   7: 730,846 ms/op
# Warmup Iteration   8: 732,040 ms/op
# Warmup Iteration   9: 736,371 ms/op
# Warmup Iteration  10: 737,743 ms/op
Iteration   1: 738,942 ms/op
Iteration   2: 736,636 ms/op
Iteration   3: 748,061 ms/op
Iteration   4: 738,596 ms/op
Iteration   5: 731,809 ms/op
Iteration   6: 731,002 ms/op
Iteration   7: 730,426 ms/op
Iteration   8: 733,071 ms/op
Iteration   9: 730,993 ms/op
Iteration  10: 737,821 ms/op


Result "benchmarkFind":
  735,736 ±(99.9%) 8,298 ms/op [Average]
  (min, avg, max) = (730,426, 735,736, 748,061), stdev = 5,489
  CI (99.9%): [727,437, 744,034] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 32, patternSize = 8)

# Run progress: 21,42% complete, ETA 10:39:05
# Fork: 1 of 1
# Warmup Iteration   1: 239,995 ms/op
# Warmup Iteration   2: 234,818 ms/op
# Warmup Iteration   3: 234,446 ms/op
# Warmup Iteration   4: 234,993 ms/op
# Warmup Iteration   5: 232,500 ms/op
# Warmup Iteration   6: 234,258 ms/op
# Warmup Iteration   7: 234,051 ms/op
# Warmup Iteration   8: 234,317 ms/op
# Warmup Iteration   9: 232,483 ms/op
# Warmup Iteration  10: 235,145 ms/op
Iteration   1: 233,743 ms/op
Iteration   2: 234,123 ms/op
Iteration   3: 232,980 ms/op
Iteration   4: 234,726 ms/op
Iteration   5: 232,946 ms/op
Iteration   6: 235,768 ms/op
Iteration   7: 233,352 ms/op
Iteration   8: 233,174 ms/op
Iteration   9: 255,574 ms/op
Iteration  10: 232,732 ms/op


Result "benchmarkFind":
  235,912 ±(99.9%) 10,541 ms/op [Average]
  (min, avg, max) = (232,732, 235,912, 255,574), stdev = 6,972
  CI (99.9%): [225,371, 246,452] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 32, patternSize = 16)

# Run progress: 21,46% complete, ETA 10:38:47
# Fork: 1 of 1
# Warmup Iteration   1: 236,403 ms/op
# Warmup Iteration   2: 236,861 ms/op
# Warmup Iteration   3: 236,818 ms/op
# Warmup Iteration   4: 237,483 ms/op
# Warmup Iteration   5: 234,401 ms/op
# Warmup Iteration   6: 234,559 ms/op
# Warmup Iteration   7: 234,701 ms/op
# Warmup Iteration   8: 235,095 ms/op
# Warmup Iteration   9: 234,529 ms/op
# Warmup Iteration  10: 235,158 ms/op
Iteration   1: 234,212 ms/op
Iteration   2: 235,174 ms/op
Iteration   3: 234,552 ms/op
Iteration   4: 236,547 ms/op
Iteration   5: 235,850 ms/op
Iteration   6: 235,849 ms/op
Iteration   7: 234,772 ms/op
Iteration   8: 234,705 ms/op
Iteration   9: 234,443 ms/op
Iteration  10: 234,709 ms/op


Result "benchmarkFind":
  235,081 ±(99.9%) 1,144 ms/op [Average]
  (min, avg, max) = (234,212, 235,081, 236,547), stdev = 0,757
  CI (99.9%): [233,937, 236,225] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 32, patternSize = 32)

# Run progress: 21,51% complete, ETA 10:38:31
# Fork: 1 of 1
# Warmup Iteration   1: 237,747 ms/op
# Warmup Iteration   2: 232,031 ms/op
# Warmup Iteration   3: 232,723 ms/op
# Warmup Iteration   4: 233,063 ms/op
# Warmup Iteration   5: 233,777 ms/op
# Warmup Iteration   6: 234,981 ms/op
# Warmup Iteration   7: 234,199 ms/op
# Warmup Iteration   8: 233,704 ms/op
# Warmup Iteration   9: 233,868 ms/op
# Warmup Iteration  10: 234,572 ms/op
Iteration   1: 235,246 ms/op
Iteration   2: 234,350 ms/op
Iteration   3: 235,744 ms/op
Iteration   4: 236,081 ms/op
Iteration   5: 235,959 ms/op
Iteration   6: 235,595 ms/op
Iteration   7: 237,590 ms/op
Iteration   8: 239,073 ms/op
Iteration   9: 237,442 ms/op
Iteration  10: 237,439 ms/op


Result "benchmarkFind":
  236,452 ±(99.9%) 2,115 ms/op [Average]
  (min, avg, max) = (234,350, 236,452, 239,073), stdev = 1,399
  CI (99.9%): [234,337, 238,567] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 32, patternSize = 64)

# Run progress: 21,55% complete, ETA 10:38:14
# Fork: 1 of 1
# Warmup Iteration   1: 238,029 ms/op
# Warmup Iteration   2: 240,301 ms/op
# Warmup Iteration   3: 237,566 ms/op
# Warmup Iteration   4: 236,591 ms/op
# Warmup Iteration   5: 238,776 ms/op
# Warmup Iteration   6: 237,846 ms/op
# Warmup Iteration   7: 239,019 ms/op
# Warmup Iteration   8: 255,689 ms/op
# Warmup Iteration   9: 235,017 ms/op
# Warmup Iteration  10: 234,013 ms/op
Iteration   1: 233,701 ms/op
Iteration   2: 233,645 ms/op
Iteration   3: 233,892 ms/op
Iteration   4: 234,389 ms/op
Iteration   5: 234,435 ms/op
Iteration   6: 234,087 ms/op
Iteration   7: 234,354 ms/op
Iteration   8: 234,833 ms/op
Iteration   9: 234,351 ms/op
Iteration  10: 234,509 ms/op


Result "benchmarkFind":
  234,220 ±(99.9%) 0,573 ms/op [Average]
  (min, avg, max) = (233,645, 234,220, 234,833), stdev = 0,379
  CI (99.9%): [233,646, 234,793] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 32, patternSize = 128)

# Run progress: 21,60% complete, ETA 10:37:58
# Fork: 1 of 1
# Warmup Iteration   1: 240,642 ms/op
# Warmup Iteration   2: 237,935 ms/op
# Warmup Iteration   3: 235,715 ms/op
# Warmup Iteration   4: 235,390 ms/op
# Warmup Iteration   5: 236,675 ms/op
# Warmup Iteration   6: 237,811 ms/op
# Warmup Iteration   7: 234,904 ms/op
# Warmup Iteration   8: 235,115 ms/op
# Warmup Iteration   9: 237,270 ms/op
# Warmup Iteration  10: 236,707 ms/op
Iteration   1: 236,919 ms/op
Iteration   2: 238,440 ms/op
Iteration   3: 238,486 ms/op
Iteration   4: 235,559 ms/op
Iteration   5: 236,436 ms/op
Iteration   6: 236,119 ms/op
Iteration   7: 234,436 ms/op
Iteration   8: 235,923 ms/op
Iteration   9: 234,513 ms/op
Iteration  10: 235,108 ms/op


Result "benchmarkFind":
  236,194 ±(99.9%) 2,165 ms/op [Average]
  (min, avg, max) = (234,436, 236,194, 238,486), stdev = 1,432
  CI (99.9%): [234,029, 238,359] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 32, patternSize = 256)

# Run progress: 21,65% complete, ETA 10:37:42
# Fork: 1 of 1
# Warmup Iteration   1: 235,111 ms/op
# Warmup Iteration   2: 231,337 ms/op
# Warmup Iteration   3: 229,792 ms/op
# Warmup Iteration   4: 233,389 ms/op
# Warmup Iteration   5: 233,728 ms/op
# Warmup Iteration   6: 232,113 ms/op
# Warmup Iteration   7: 232,421 ms/op
# Warmup Iteration   8: 232,812 ms/op
# Warmup Iteration   9: 234,187 ms/op
# Warmup Iteration  10: 232,645 ms/op
Iteration   1: 234,383 ms/op
Iteration   2: 231,743 ms/op
Iteration   3: 230,289 ms/op
Iteration   4: 230,795 ms/op
Iteration   5: 231,860 ms/op
Iteration   6: 230,181 ms/op
Iteration   7: 239,269 ms/op
Iteration   8: 269,819 ms/op
Iteration   9: 250,005 ms/op
Iteration  10: 242,571 ms/op


Result "benchmarkFind":
  239,092 ±(99.9%) 19,055 ms/op [Average]
  (min, avg, max) = (230,181, 239,092, 269,819), stdev = 12,603
  CI (99.9%): [220,037, 258,146] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 128, patternSize = 2)

# Run progress: 21,69% complete, ETA 10:37:23
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

com.almondtools.stringbench.SampleNotQualifiedException
	at com.almondtools.stringbench.MultiPatternMatcherBenchmark.setup(MultiPatternMatcherBenchmark.java:36)
	at com.almondtools.stringbench.generated.JavaRegexMultiBenchmark_benchmarkFind_jmhTest._jmh_tryInit_f_javaregexmultibenchmark0_0(JavaRegexMultiBenchmark_benchmarkFind_jmhTest.java:425)
	at com.almondtools.stringbench.generated.JavaRegexMultiBenchmark_benchmarkFind_jmhTest.benchmarkFind_AverageTime(JavaRegexMultiBenchmark_benchmarkFind_jmhTest.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:430)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:412)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)




# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 128, patternSize = 4)

# Run progress: 21,74% complete, ETA 10:35:45
# Fork: 1 of 1
# Warmup Iteration   1: 6268,311 ms/op
# Warmup Iteration   2: 5905,012 ms/op
# Warmup Iteration   3: 5928,893 ms/op
# Warmup Iteration   4: 5927,489 ms/op
# Warmup Iteration   5: 5958,484 ms/op
# Warmup Iteration   6: 5922,784 ms/op
# Warmup Iteration   7: 6279,799 ms/op
# Warmup Iteration   8: 6029,788 ms/op
# Warmup Iteration   9: 6031,019 ms/op
# Warmup Iteration  10: 6314,512 ms/op
Iteration   1: 5953,271 ms/op
Iteration   2: 5909,628 ms/op
Iteration   3: 5896,038 ms/op
Iteration   4: 5890,445 ms/op
Iteration   5: 5951,614 ms/op
Iteration   6: 5941,863 ms/op
Iteration   7: 6237,424 ms/op
Iteration   8: 6605,658 ms/op
Iteration   9: 6009,234 ms/op
Iteration  10: 6119,609 ms/op


Result "benchmarkFind":
  6051,478 ±(99.9%) 338,048 ms/op [Average]
  (min, avg, max) = (5890,445, 6051,478, 6605,658), stdev = 223,598
  CI (99.9%): [5713,430, 6389,527] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 128, patternSize = 8)

# Run progress: 21,78% complete, ETA 10:41:42
# Fork: 1 of 1
# Warmup Iteration   1: 831,277 ms/op
# Warmup Iteration   2: 741,143 ms/op
# Warmup Iteration   3: 742,511 ms/op
# Warmup Iteration   4: 746,344 ms/op
# Warmup Iteration   5: 742,557 ms/op
# Warmup Iteration   6: 741,350 ms/op
# Warmup Iteration   7: 751,894 ms/op
# Warmup Iteration   8: 736,759 ms/op
# Warmup Iteration   9: 737,099 ms/op
# Warmup Iteration  10: 745,100 ms/op
Iteration   1: 743,368 ms/op
Iteration   2: 739,846 ms/op
Iteration   3: 737,135 ms/op
Iteration   4: 744,558 ms/op
Iteration   5: 739,874 ms/op
Iteration   6: 747,383 ms/op
Iteration   7: 742,935 ms/op
Iteration   8: 740,037 ms/op
Iteration   9: 736,131 ms/op
Iteration  10: 743,025 ms/op


Result "benchmarkFind":
  741,429 ±(99.9%) 5,217 ms/op [Average]
  (min, avg, max) = (736,131, 741,429, 747,383), stdev = 3,451
  CI (99.9%): [736,212, 746,646] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 128, patternSize = 16)

# Run progress: 21,83% complete, ETA 10:41:47
# Fork: 1 of 1
# Warmup Iteration   1: 939,524 ms/op
# Warmup Iteration   2: 941,963 ms/op
# Warmup Iteration   3: 940,172 ms/op
# Warmup Iteration   4: 941,354 ms/op
# Warmup Iteration   5: 943,522 ms/op
# Warmup Iteration   6: 939,662 ms/op
# Warmup Iteration   7: 940,698 ms/op
# Warmup Iteration   8: 946,249 ms/op
# Warmup Iteration   9: 942,762 ms/op
# Warmup Iteration  10: 957,914 ms/op
Iteration   1: 931,717 ms/op
Iteration   2: 940,734 ms/op
Iteration   3: 939,894 ms/op
Iteration   4: 937,876 ms/op
Iteration   5: 935,191 ms/op
Iteration   6: 932,814 ms/op
Iteration   7: 936,411 ms/op
Iteration   8: 933,515 ms/op
Iteration   9: 937,532 ms/op
Iteration  10: 938,887 ms/op


Result "benchmarkFind":
  936,457 ±(99.9%) 4,651 ms/op [Average]
  (min, avg, max) = (931,717, 936,457, 940,734), stdev = 3,076
  CI (99.9%): [931,806, 941,108] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 128, patternSize = 32)

# Run progress: 21,88% complete, ETA 10:42:19
# Fork: 1 of 1
# Warmup Iteration   1: 939,729 ms/op
# Warmup Iteration   2: 957,083 ms/op
# Warmup Iteration   3: 941,357 ms/op
# Warmup Iteration   4: 949,038 ms/op
# Warmup Iteration   5: 952,999 ms/op
# Warmup Iteration   6: 941,102 ms/op
# Warmup Iteration   7: 970,276 ms/op
# Warmup Iteration   8: 996,584 ms/op
# Warmup Iteration   9: 1001,786 ms/op
# Warmup Iteration  10: 998,544 ms/op
Iteration   1: 996,925 ms/op
Iteration   2: 997,360 ms/op
Iteration   3: 1001,464 ms/op
Iteration   4: 993,542 ms/op
Iteration   5: 1001,001 ms/op
Iteration   6: 996,123 ms/op
Iteration   7: 943,560 ms/op
Iteration   8: 936,818 ms/op
Iteration   9: 941,501 ms/op
Iteration  10: 941,734 ms/op


Result "benchmarkFind":
  975,003 ±(99.9%) 44,571 ms/op [Average]
  (min, avg, max) = (936,818, 975,003, 1001,464), stdev = 29,481
  CI (99.9%): [930,432, 1019,574] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 128, patternSize = 64)

# Run progress: 21,92% complete, ETA 10:42:49
# Fork: 1 of 1
# Warmup Iteration   1: 969,868 ms/op
# Warmup Iteration   2: 1054,103 ms/op
# Warmup Iteration   3: 979,059 ms/op
# Warmup Iteration   4: 993,158 ms/op
# Warmup Iteration   5: 1006,345 ms/op
# Warmup Iteration   6: 997,430 ms/op
# Warmup Iteration   7: 995,432 ms/op
# Warmup Iteration   8: 933,412 ms/op
# Warmup Iteration   9: 920,359 ms/op
# Warmup Iteration  10: 934,627 ms/op
Iteration   1: 919,909 ms/op
Iteration   2: 923,407 ms/op
Iteration   3: 931,255 ms/op
Iteration   4: 922,508 ms/op
Iteration   5: 923,067 ms/op
Iteration   6: 928,098 ms/op
Iteration   7: 934,537 ms/op
Iteration   8: 938,497 ms/op
Iteration   9: 938,587 ms/op
Iteration  10: 942,086 ms/op


Result "benchmarkFind":
  930,195 ±(99.9%) 11,999 ms/op [Average]
  (min, avg, max) = (919,909, 930,195, 942,086), stdev = 7,936
  CI (99.9%): [918,196, 942,194] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 128, patternSize = 128)

# Run progress: 21,97% complete, ETA 10:43:16
# Fork: 1 of 1
# Warmup Iteration   1: 931,380 ms/op
# Warmup Iteration   2: 931,667 ms/op
# Warmup Iteration   3: 928,227 ms/op
# Warmup Iteration   4: 935,099 ms/op
# Warmup Iteration   5: 932,203 ms/op
# Warmup Iteration   6: 935,439 ms/op
# Warmup Iteration   7: 941,056 ms/op
# Warmup Iteration   8: 942,429 ms/op
# Warmup Iteration   9: 935,573 ms/op
# Warmup Iteration  10: 938,131 ms/op
Iteration   1: 939,126 ms/op
Iteration   2: 937,803 ms/op
Iteration   3: 939,840 ms/op
Iteration   4: 986,339 ms/op
Iteration   5: 928,372 ms/op
Iteration   6: 930,022 ms/op
Iteration   7: 925,010 ms/op
Iteration   8: 921,372 ms/op
Iteration   9: 932,807 ms/op
Iteration  10: 920,773 ms/op


Result "benchmarkFind":
  936,146 ±(99.9%) 28,651 ms/op [Average]
  (min, avg, max) = (920,773, 936,146, 986,339), stdev = 18,951
  CI (99.9%): [907,495, 964,798] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 128, patternSize = 256)

# Run progress: 22,01% complete, ETA 10:43:47
# Fork: 1 of 1
# Warmup Iteration   1: 906,610 ms/op
# Warmup Iteration   2: 897,161 ms/op
# Warmup Iteration   3: 901,152 ms/op
# Warmup Iteration   4: 897,450 ms/op
# Warmup Iteration   5: 901,722 ms/op
# Warmup Iteration   6: 891,183 ms/op
# Warmup Iteration   7: 814,705 ms/op
# Warmup Iteration   8: 728,890 ms/op
# Warmup Iteration   9: 731,776 ms/op
# Warmup Iteration  10: 726,236 ms/op
Iteration   1: 730,974 ms/op
Iteration   2: 730,082 ms/op
Iteration   3: 734,906 ms/op
Iteration   4: 732,536 ms/op
Iteration   5: 730,858 ms/op
Iteration   6: 731,609 ms/op
Iteration   7: 734,302 ms/op
Iteration   8: 731,297 ms/op
Iteration   9: 732,205 ms/op
Iteration  10: 734,622 ms/op


Result "benchmarkFind":
  732,339 ±(99.9%) 2,593 ms/op [Average]
  (min, avg, max) = (730,082, 732,339, 734,906), stdev = 1,715
  CI (99.9%): [729,746, 734,932] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 2, patternSize = 2)

# Run progress: 22,06% complete, ETA 10:43:57
# Fork: 1 of 1
# Warmup Iteration   1: 1,241 ms/op
# Warmup Iteration   2: 1,159 ms/op
# Warmup Iteration   3: 1,170 ms/op
# Warmup Iteration   4: 1,215 ms/op
# Warmup Iteration   5: 1,218 ms/op
# Warmup Iteration   6: 1,216 ms/op
# Warmup Iteration   7: 1,170 ms/op
# Warmup Iteration   8: 1,172 ms/op
# Warmup Iteration   9: 1,173 ms/op
# Warmup Iteration  10: 1,173 ms/op
Iteration   1: 1,161 ms/op
Iteration   2: 1,171 ms/op
Iteration   3: 1,175 ms/op
Iteration   4: 1,178 ms/op
Iteration   5: 1,168 ms/op
Iteration   6: 1,226 ms/op
Iteration   7: 1,157 ms/op
Iteration   8: 1,154 ms/op
Iteration   9: 1,160 ms/op
Iteration  10: 1,152 ms/op


Result "benchmarkFind":
  1,170 ±(99.9%) 0,033 ms/op [Average]
  (min, avg, max) = (1,152, 1,170, 1,226), stdev = 0,022
  CI (99.9%): [1,138, 1,203] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 2, patternSize = 4)

# Run progress: 22,10% complete, ETA 10:43:26
# Fork: 1 of 1
# Warmup Iteration   1: 17,058 ms/op
# Warmup Iteration   2: 16,555 ms/op
# Warmup Iteration   3: 17,866 ms/op
# Warmup Iteration   4: 17,654 ms/op
# Warmup Iteration   5: 17,838 ms/op
# Warmup Iteration   6: 16,310 ms/op
# Warmup Iteration   7: 15,866 ms/op
# Warmup Iteration   8: 15,894 ms/op
# Warmup Iteration   9: 15,702 ms/op
# Warmup Iteration  10: 15,783 ms/op
Iteration   1: 15,865 ms/op
Iteration   2: 15,794 ms/op
Iteration   3: 15,751 ms/op
Iteration   4: 15,817 ms/op
Iteration   5: 15,762 ms/op
Iteration   6: 15,892 ms/op
Iteration   7: 15,805 ms/op
Iteration   8: 15,912 ms/op
Iteration   9: 15,843 ms/op
Iteration  10: 15,926 ms/op


Result "benchmarkFind":
  15,837 ±(99.9%) 0,093 ms/op [Average]
  (min, avg, max) = (15,751, 15,837, 15,926), stdev = 0,061
  CI (99.9%): [15,744, 15,929] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 2, patternSize = 8)

# Run progress: 22,15% complete, ETA 10:42:56
# Fork: 1 of 1
# Warmup Iteration   1: 16,926 ms/op
# Warmup Iteration   2: 16,226 ms/op
# Warmup Iteration   3: 16,206 ms/op
# Warmup Iteration   4: 16,297 ms/op
# Warmup Iteration   5: 16,186 ms/op
# Warmup Iteration   6: 16,242 ms/op
# Warmup Iteration   7: 16,235 ms/op
# Warmup Iteration   8: 16,159 ms/op
# Warmup Iteration   9: 16,299 ms/op
# Warmup Iteration  10: 16,341 ms/op
Iteration   1: 16,199 ms/op
Iteration   2: 16,166 ms/op
Iteration   3: 16,230 ms/op
Iteration   4: 16,355 ms/op
Iteration   5: 16,284 ms/op
Iteration   6: 16,166 ms/op
Iteration   7: 17,506 ms/op
Iteration   8: 17,320 ms/op
Iteration   9: 17,472 ms/op
Iteration  10: 17,418 ms/op


Result "benchmarkFind":
  16,712 ±(99.9%) 0,940 ms/op [Average]
  (min, avg, max) = (16,166, 16,712, 17,506), stdev = 0,622
  CI (99.9%): [15,772, 17,651] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 2, patternSize = 16)

# Run progress: 22,20% complete, ETA 10:42:26
# Fork: 1 of 1
# Warmup Iteration   1: 16,757 ms/op
# Warmup Iteration   2: 16,286 ms/op
# Warmup Iteration   3: 16,346 ms/op
# Warmup Iteration   4: 16,324 ms/op
# Warmup Iteration   5: 16,119 ms/op
# Warmup Iteration   6: 16,272 ms/op
# Warmup Iteration   7: 16,233 ms/op
# Warmup Iteration   8: 16,442 ms/op
# Warmup Iteration   9: 16,263 ms/op
# Warmup Iteration  10: 16,388 ms/op
Iteration   1: 16,160 ms/op
Iteration   2: 16,377 ms/op
Iteration   3: 16,367 ms/op
Iteration   4: 17,955 ms/op
Iteration   5: 16,447 ms/op
Iteration   6: 16,374 ms/op
Iteration   7: 16,275 ms/op
Iteration   8: 16,160 ms/op
Iteration   9: 16,342 ms/op
Iteration  10: 16,366 ms/op


Result "benchmarkFind":
  16,482 ±(99.9%) 0,795 ms/op [Average]
  (min, avg, max) = (16,160, 16,482, 17,955), stdev = 0,526
  CI (99.9%): [15,687, 17,277] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 2, patternSize = 32)

# Run progress: 22,24% complete, ETA 10:41:56
# Fork: 1 of 1
# Warmup Iteration   1: 16,827 ms/op
# Warmup Iteration   2: 16,179 ms/op
# Warmup Iteration   3: 16,081 ms/op
# Warmup Iteration   4: 16,176 ms/op
# Warmup Iteration   5: 16,135 ms/op
# Warmup Iteration   6: 16,120 ms/op
# Warmup Iteration   7: 16,087 ms/op
# Warmup Iteration   8: 16,026 ms/op
# Warmup Iteration   9: 16,335 ms/op
# Warmup Iteration  10: 16,167 ms/op
Iteration   1: 16,133 ms/op
Iteration   2: 16,110 ms/op
Iteration   3: 16,128 ms/op
Iteration   4: 16,163 ms/op
Iteration   5: 16,362 ms/op
Iteration   6: 16,263 ms/op
Iteration   7: 16,177 ms/op
Iteration   8: 16,216 ms/op
Iteration   9: 16,135 ms/op
Iteration  10: 16,077 ms/op


Result "benchmarkFind":
  16,176 ±(99.9%) 0,127 ms/op [Average]
  (min, avg, max) = (16,077, 16,176, 16,362), stdev = 0,084
  CI (99.9%): [16,049, 16,304] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 2, patternSize = 64)

# Run progress: 22,29% complete, ETA 10:41:26
# Fork: 1 of 1
# Warmup Iteration   1: 16,499 ms/op
# Warmup Iteration   2: 16,033 ms/op
# Warmup Iteration   3: 16,200 ms/op
# Warmup Iteration   4: 16,208 ms/op
# Warmup Iteration   5: 16,013 ms/op
# Warmup Iteration   6: 16,071 ms/op
# Warmup Iteration   7: 16,010 ms/op
# Warmup Iteration   8: 16,009 ms/op
# Warmup Iteration   9: 15,953 ms/op
# Warmup Iteration  10: 16,023 ms/op
Iteration   1: 15,972 ms/op
Iteration   2: 15,959 ms/op
Iteration   3: 15,890 ms/op
Iteration   4: 15,923 ms/op
Iteration   5: 15,918 ms/op
Iteration   6: 16,009 ms/op
Iteration   7: 15,996 ms/op
Iteration   8: 15,994 ms/op
Iteration   9: 15,990 ms/op
Iteration  10: 16,031 ms/op


Result "benchmarkFind":
  15,968 ±(99.9%) 0,068 ms/op [Average]
  (min, avg, max) = (15,890, 15,968, 16,031), stdev = 0,045
  CI (99.9%): [15,900, 16,036] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 2, patternSize = 128)

# Run progress: 22,33% complete, ETA 10:40:56
# Fork: 1 of 1
# Warmup Iteration   1: 16,676 ms/op
# Warmup Iteration   2: 16,229 ms/op
# Warmup Iteration   3: 16,531 ms/op
# Warmup Iteration   4: 16,776 ms/op
# Warmup Iteration   5: 16,447 ms/op
# Warmup Iteration   6: 16,148 ms/op
# Warmup Iteration   7: 16,178 ms/op
# Warmup Iteration   8: 16,004 ms/op
# Warmup Iteration   9: 16,177 ms/op
# Warmup Iteration  10: 16,188 ms/op
Iteration   1: 16,141 ms/op
Iteration   2: 17,243 ms/op
Iteration   3: 16,085 ms/op
Iteration   4: 16,043 ms/op
Iteration   5: 16,041 ms/op
Iteration   6: 16,061 ms/op
Iteration   7: 16,076 ms/op
Iteration   8: 16,099 ms/op
Iteration   9: 16,306 ms/op
Iteration  10: 16,163 ms/op


Result "benchmarkFind":
  16,226 ±(99.9%) 0,553 ms/op [Average]
  (min, avg, max) = (16,041, 16,226, 17,243), stdev = 0,366
  CI (99.9%): [15,673, 16,779] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 2, patternSize = 256)

# Run progress: 22,38% complete, ETA 10:40:26
# Fork: 1 of 1
# Warmup Iteration   1: 16,469 ms/op
# Warmup Iteration   2: 16,223 ms/op
# Warmup Iteration   3: 17,170 ms/op
# Warmup Iteration   4: 17,173 ms/op
# Warmup Iteration   5: 16,268 ms/op
# Warmup Iteration   6: 15,975 ms/op
# Warmup Iteration   7: 16,157 ms/op
# Warmup Iteration   8: 15,859 ms/op
# Warmup Iteration   9: 15,963 ms/op
# Warmup Iteration  10: 16,080 ms/op
Iteration   1: 15,801 ms/op
Iteration   2: 16,017 ms/op
Iteration   3: 15,929 ms/op
Iteration   4: 15,975 ms/op
Iteration   5: 15,897 ms/op
Iteration   6: 15,871 ms/op
Iteration   7: 16,022 ms/op
Iteration   8: 16,070 ms/op
Iteration   9: 15,940 ms/op
Iteration  10: 15,886 ms/op


Result "benchmarkFind":
  15,941 ±(99.9%) 0,123 ms/op [Average]
  (min, avg, max) = (15,801, 15,941, 16,070), stdev = 0,082
  CI (99.9%): [15,817, 16,064] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 8, patternSize = 2)

# Run progress: 22,43% complete, ETA 10:39:56
# Fork: 1 of 1
# Warmup Iteration   1: 4,904 ms/op
# Warmup Iteration   2: 4,763 ms/op
# Warmup Iteration   3: 4,724 ms/op
# Warmup Iteration   4: 4,679 ms/op
# Warmup Iteration   5: 4,691 ms/op
# Warmup Iteration   6: 4,738 ms/op
# Warmup Iteration   7: 4,704 ms/op
# Warmup Iteration   8: 4,730 ms/op
# Warmup Iteration   9: 4,707 ms/op
# Warmup Iteration  10: 4,703 ms/op
Iteration   1: 4,683 ms/op
Iteration   2: 4,695 ms/op
Iteration   3: 4,703 ms/op
Iteration   4: 4,676 ms/op
Iteration   5: 4,740 ms/op
Iteration   6: 4,700 ms/op
Iteration   7: 4,722 ms/op
Iteration   8: 4,702 ms/op
Iteration   9: 4,716 ms/op
Iteration  10: 4,734 ms/op


Result "benchmarkFind":
  4,707 ±(99.9%) 0,032 ms/op [Average]
  (min, avg, max) = (4,676, 4,707, 4,740), stdev = 0,021
  CI (99.9%): [4,675, 4,739] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 8, patternSize = 4)

# Run progress: 22,47% complete, ETA 10:39:25
# Fork: 1 of 1
# Warmup Iteration   1: 62,815 ms/op
# Warmup Iteration   2: 60,823 ms/op
# Warmup Iteration   3: 61,046 ms/op
# Warmup Iteration   4: 61,694 ms/op
# Warmup Iteration   5: 61,099 ms/op
# Warmup Iteration   6: 61,544 ms/op
# Warmup Iteration   7: 61,691 ms/op
# Warmup Iteration   8: 60,800 ms/op
# Warmup Iteration   9: 61,366 ms/op
# Warmup Iteration  10: 64,490 ms/op
Iteration   1: 61,209 ms/op
Iteration   2: 61,222 ms/op
Iteration   3: 61,223 ms/op
Iteration   4: 60,823 ms/op
Iteration   5: 61,119 ms/op
Iteration   6: 60,971 ms/op
Iteration   7: 60,984 ms/op
Iteration   8: 61,334 ms/op
Iteration   9: 61,481 ms/op
Iteration  10: 60,766 ms/op


Result "benchmarkFind":
  61,113 ±(99.9%) 0,342 ms/op [Average]
  (min, avg, max) = (60,766, 61,113, 61,481), stdev = 0,226
  CI (99.9%): [60,772, 61,455] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 8, patternSize = 8)

# Run progress: 22,52% complete, ETA 10:38:57
# Fork: 1 of 1
# Warmup Iteration   1: 58,210 ms/op
# Warmup Iteration   2: 57,738 ms/op
# Warmup Iteration   3: 57,755 ms/op
# Warmup Iteration   4: 57,371 ms/op
# Warmup Iteration   5: 57,967 ms/op
# Warmup Iteration   6: 58,006 ms/op
# Warmup Iteration   7: 57,625 ms/op
# Warmup Iteration   8: 57,592 ms/op
# Warmup Iteration   9: 56,096 ms/op
# Warmup Iteration  10: 56,832 ms/op
Iteration   1: 56,600 ms/op
Iteration   2: 56,811 ms/op
Iteration   3: 56,206 ms/op
Iteration   4: 56,861 ms/op
Iteration   5: 58,426 ms/op
Iteration   6: 58,418 ms/op
Iteration   7: 57,192 ms/op
Iteration   8: 57,019 ms/op
Iteration   9: 56,836 ms/op
Iteration  10: 57,758 ms/op


Result "benchmarkFind":
  57,213 ±(99.9%) 1,136 ms/op [Average]
  (min, avg, max) = (56,206, 57,213, 58,426), stdev = 0,751
  CI (99.9%): [56,077, 58,348] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 8, patternSize = 16)

# Run progress: 22,56% complete, ETA 10:38:29
# Fork: 1 of 1
# Warmup Iteration   1: 61,179 ms/op
# Warmup Iteration   2: 59,753 ms/op
# Warmup Iteration   3: 63,563 ms/op
# Warmup Iteration   4: 63,781 ms/op
# Warmup Iteration   5: 63,135 ms/op
# Warmup Iteration   6: 63,476 ms/op
# Warmup Iteration   7: 63,158 ms/op
# Warmup Iteration   8: 63,611 ms/op
# Warmup Iteration   9: 63,159 ms/op
# Warmup Iteration  10: 63,091 ms/op
Iteration   1: 62,832 ms/op
Iteration   2: 62,831 ms/op
Iteration   3: 62,735 ms/op
Iteration   4: 63,192 ms/op
Iteration   5: 62,754 ms/op
Iteration   6: 62,216 ms/op
Iteration   7: 58,854 ms/op
Iteration   8: 58,825 ms/op
Iteration   9: 58,805 ms/op
Iteration  10: 58,995 ms/op


Result "benchmarkFind":
  61,204 ±(99.9%) 3,058 ms/op [Average]
  (min, avg, max) = (58,805, 61,204, 63,192), stdev = 2,023
  CI (99.9%): [58,145, 64,262] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 8, patternSize = 32)

# Run progress: 22,61% complete, ETA 10:38:00
# Fork: 1 of 1
# Warmup Iteration   1: 60,077 ms/op
# Warmup Iteration   2: 59,984 ms/op
# Warmup Iteration   3: 60,019 ms/op
# Warmup Iteration   4: 59,900 ms/op
# Warmup Iteration   5: 60,098 ms/op
# Warmup Iteration   6: 59,796 ms/op
# Warmup Iteration   7: 73,620 ms/op
# Warmup Iteration   8: 59,993 ms/op
# Warmup Iteration   9: 59,260 ms/op
# Warmup Iteration  10: 59,227 ms/op
Iteration   1: 59,241 ms/op
Iteration   2: 59,086 ms/op
Iteration   3: 59,225 ms/op
Iteration   4: 58,980 ms/op
Iteration   5: 59,392 ms/op
Iteration   6: 61,223 ms/op
Iteration   7: 59,984 ms/op
Iteration   8: 59,077 ms/op
Iteration   9: 59,063 ms/op
Iteration  10: 59,134 ms/op


Result "benchmarkFind":
  59,441 ±(99.9%) 1,041 ms/op [Average]
  (min, avg, max) = (58,980, 59,441, 61,223), stdev = 0,689
  CI (99.9%): [58,400, 60,482] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 8, patternSize = 64)

# Run progress: 22,66% complete, ETA 10:37:30
# Fork: 1 of 1
# Warmup Iteration   1: 60,338 ms/op
# Warmup Iteration   2: 59,874 ms/op
# Warmup Iteration   3: 60,108 ms/op
# Warmup Iteration   4: 62,936 ms/op
# Warmup Iteration   5: 62,743 ms/op
# Warmup Iteration   6: 62,868 ms/op
# Warmup Iteration   7: 62,975 ms/op
# Warmup Iteration   8: 63,075 ms/op
# Warmup Iteration   9: 62,732 ms/op
# Warmup Iteration  10: 62,868 ms/op
Iteration   1: 62,678 ms/op
Iteration   2: 60,408 ms/op
Iteration   3: 58,904 ms/op
Iteration   4: 58,938 ms/op
Iteration   5: 58,942 ms/op
Iteration   6: 59,159 ms/op
Iteration   7: 61,319 ms/op
Iteration   8: 61,005 ms/op
Iteration   9: 60,692 ms/op
Iteration  10: 60,488 ms/op


Result "benchmarkFind":
  60,253 ±(99.9%) 1,907 ms/op [Average]
  (min, avg, max) = (58,904, 60,253, 62,678), stdev = 1,261
  CI (99.9%): [58,346, 62,160] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 8, patternSize = 128)

# Run progress: 22,70% complete, ETA 10:37:01
# Fork: 1 of 1
# Warmup Iteration   1: 60,843 ms/op
# Warmup Iteration   2: 58,847 ms/op
# Warmup Iteration   3: 58,746 ms/op
# Warmup Iteration   4: 59,302 ms/op
# Warmup Iteration   5: 58,936 ms/op
# Warmup Iteration   6: 59,091 ms/op
# Warmup Iteration   7: 59,034 ms/op
# Warmup Iteration   8: 58,824 ms/op
# Warmup Iteration   9: 58,860 ms/op
# Warmup Iteration  10: 58,837 ms/op
Iteration   1: 59,067 ms/op
Iteration   2: 59,214 ms/op
Iteration   3: 58,981 ms/op
Iteration   4: 58,860 ms/op
Iteration   5: 59,009 ms/op
Iteration   6: 58,847 ms/op
Iteration   7: 58,792 ms/op
Iteration   8: 58,881 ms/op
Iteration   9: 58,795 ms/op
Iteration  10: 58,753 ms/op


Result "benchmarkFind":
  58,920 ±(99.9%) 0,220 ms/op [Average]
  (min, avg, max) = (58,753, 58,920, 59,214), stdev = 0,145
  CI (99.9%): [58,700, 59,140] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 8, patternSize = 256)

# Run progress: 22,75% complete, ETA 10:36:31
# Fork: 1 of 1
# Warmup Iteration   1: 60,903 ms/op
# Warmup Iteration   2: 59,667 ms/op
# Warmup Iteration   3: 59,439 ms/op
# Warmup Iteration   4: 59,606 ms/op
# Warmup Iteration   5: 63,788 ms/op
# Warmup Iteration   6: 59,547 ms/op
# Warmup Iteration   7: 59,593 ms/op
# Warmup Iteration   8: 59,250 ms/op
# Warmup Iteration   9: 59,305 ms/op
# Warmup Iteration  10: 59,290 ms/op
Iteration   1: 59,725 ms/op
Iteration   2: 59,480 ms/op
Iteration   3: 59,366 ms/op
Iteration   4: 59,889 ms/op
Iteration   5: 59,301 ms/op
Iteration   6: 62,577 ms/op
Iteration   7: 59,051 ms/op
Iteration   8: 59,624 ms/op
Iteration   9: 59,525 ms/op
Iteration  10: 59,657 ms/op


Result "benchmarkFind":
  59,819 ±(99.9%) 1,508 ms/op [Average]
  (min, avg, max) = (59,051, 59,819, 62,577), stdev = 0,997
  CI (99.9%): [58,312, 61,327] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 32, patternSize = 2)

# Run progress: 22,79% complete, ETA 10:36:02
# Fork: 1 of 1
# Warmup Iteration   1: 33,911 ms/op
# Warmup Iteration   2: 31,814 ms/op
# Warmup Iteration   3: 31,161 ms/op
# Warmup Iteration   4: 31,207 ms/op
# Warmup Iteration   5: 31,223 ms/op
# Warmup Iteration   6: 31,226 ms/op
# Warmup Iteration   7: 31,317 ms/op
# Warmup Iteration   8: 31,319 ms/op
# Warmup Iteration   9: 31,225 ms/op
# Warmup Iteration  10: 31,210 ms/op
Iteration   1: 31,117 ms/op
Iteration   2: 31,126 ms/op
Iteration   3: 31,250 ms/op
Iteration   4: 31,119 ms/op
Iteration   5: 31,580 ms/op
Iteration   6: 32,012 ms/op
Iteration   7: 31,273 ms/op
Iteration   8: 31,154 ms/op
Iteration   9: 31,299 ms/op
Iteration  10: 31,226 ms/op


Result "benchmarkFind":
  31,316 ±(99.9%) 0,425 ms/op [Average]
  (min, avg, max) = (31,117, 31,316, 32,012), stdev = 0,281
  CI (99.9%): [30,891, 31,740] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 32, patternSize = 4)

# Run progress: 22,84% complete, ETA 10:35:33
# Fork: 1 of 1
# Warmup Iteration   1: 201,005 ms/op
# Warmup Iteration   2: 190,881 ms/op
# Warmup Iteration   3: 190,998 ms/op
# Warmup Iteration   4: 190,476 ms/op
# Warmup Iteration   5: 191,782 ms/op
# Warmup Iteration   6: 190,498 ms/op
# Warmup Iteration   7: 190,953 ms/op
# Warmup Iteration   8: 190,568 ms/op
# Warmup Iteration   9: 189,735 ms/op
# Warmup Iteration  10: 190,758 ms/op
Iteration   1: 189,878 ms/op
Iteration   2: 189,525 ms/op
Iteration   3: 190,484 ms/op
Iteration   4: 190,393 ms/op
Iteration   5: 189,301 ms/op
Iteration   6: 191,528 ms/op
Iteration   7: 192,498 ms/op
Iteration   8: 194,303 ms/op
Iteration   9: 192,882 ms/op
Iteration  10: 192,716 ms/op


Result "benchmarkFind":
  191,351 ±(99.9%) 2,552 ms/op [Average]
  (min, avg, max) = (189,301, 191,351, 194,303), stdev = 1,688
  CI (99.9%): [188,799, 193,903] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 32, patternSize = 8)

# Run progress: 22,89% complete, ETA 10:35:13
# Fork: 1 of 1
# Warmup Iteration   1: 238,043 ms/op
# Warmup Iteration   2: 229,891 ms/op
# Warmup Iteration   3: 227,289 ms/op
# Warmup Iteration   4: 228,220 ms/op
# Warmup Iteration   5: 227,406 ms/op
# Warmup Iteration   6: 228,556 ms/op
# Warmup Iteration   7: 227,116 ms/op
# Warmup Iteration   8: 227,987 ms/op
# Warmup Iteration   9: 227,229 ms/op
# Warmup Iteration  10: 228,083 ms/op
Iteration   1: 226,970 ms/op
Iteration   2: 227,565 ms/op
Iteration   3: 227,679 ms/op
Iteration   4: 227,222 ms/op
Iteration   5: 227,012 ms/op
Iteration   6: 227,424 ms/op
Iteration   7: 226,217 ms/op
Iteration   8: 226,941 ms/op
Iteration   9: 231,974 ms/op
Iteration  10: 226,837 ms/op


Result "benchmarkFind":
  227,584 ±(99.9%) 2,416 ms/op [Average]
  (min, avg, max) = (226,217, 227,584, 231,974), stdev = 1,598
  CI (99.9%): [225,168, 230,000] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 32, patternSize = 16)

# Run progress: 22,93% complete, ETA 10:34:52
# Fork: 1 of 1
# Warmup Iteration   1: 234,521 ms/op
# Warmup Iteration   2: 233,059 ms/op
# Warmup Iteration   3: 231,753 ms/op
# Warmup Iteration   4: 233,824 ms/op
# Warmup Iteration   5: 233,290 ms/op
# Warmup Iteration   6: 233,563 ms/op
# Warmup Iteration   7: 234,049 ms/op
# Warmup Iteration   8: 233,599 ms/op
# Warmup Iteration   9: 232,357 ms/op
# Warmup Iteration  10: 234,642 ms/op
Iteration   1: 230,707 ms/op
Iteration   2: 230,920 ms/op
Iteration   3: 232,306 ms/op
Iteration   4: 231,789 ms/op
Iteration   5: 232,111 ms/op
Iteration   6: 230,926 ms/op
Iteration   7: 234,012 ms/op
Iteration   8: 232,439 ms/op
Iteration   9: 233,144 ms/op
Iteration  10: 233,271 ms/op


Result "benchmarkFind":
  232,163 ±(99.9%) 1,675 ms/op [Average]
  (min, avg, max) = (230,707, 232,163, 234,012), stdev = 1,108
  CI (99.9%): [230,488, 233,837] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 32, patternSize = 32)

# Run progress: 22,98% complete, ETA 10:34:33
# Fork: 1 of 1
# Warmup Iteration   1: 232,921 ms/op
# Warmup Iteration   2: 228,725 ms/op
# Warmup Iteration   3: 230,370 ms/op
# Warmup Iteration   4: 230,922 ms/op
# Warmup Iteration   5: 230,956 ms/op
# Warmup Iteration   6: 231,335 ms/op
# Warmup Iteration   7: 232,056 ms/op
# Warmup Iteration   8: 230,339 ms/op
# Warmup Iteration   9: 230,795 ms/op
# Warmup Iteration  10: 231,823 ms/op
Iteration   1: 249,429 ms/op
Iteration   2: 229,422 ms/op
Iteration   3: 229,184 ms/op
Iteration   4: 228,834 ms/op
Iteration   5: 228,256 ms/op
Iteration   6: 229,569 ms/op
Iteration   7: 231,098 ms/op
Iteration   8: 230,628 ms/op
Iteration   9: 232,132 ms/op
Iteration  10: 230,509 ms/op


Result "benchmarkFind":
  231,906 ±(99.9%) 9,471 ms/op [Average]
  (min, avg, max) = (228,256, 231,906, 249,429), stdev = 6,264
  CI (99.9%): [222,436, 241,377] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 32, patternSize = 64)

# Run progress: 23,02% complete, ETA 10:34:13
# Fork: 1 of 1
# Warmup Iteration   1: 234,335 ms/op
# Warmup Iteration   2: 231,019 ms/op
# Warmup Iteration   3: 232,245 ms/op
# Warmup Iteration   4: 230,988 ms/op
# Warmup Iteration   5: 230,751 ms/op
# Warmup Iteration   6: 230,724 ms/op
# Warmup Iteration   7: 231,031 ms/op
# Warmup Iteration   8: 233,250 ms/op
# Warmup Iteration   9: 231,626 ms/op
# Warmup Iteration  10: 231,553 ms/op
Iteration   1: 230,110 ms/op
Iteration   2: 231,930 ms/op
Iteration   3: 231,350 ms/op
Iteration   4: 230,066 ms/op
Iteration   5: 231,753 ms/op
Iteration   6: 231,325 ms/op
Iteration   7: 233,925 ms/op
Iteration   8: 232,731 ms/op
Iteration   9: 233,072 ms/op
Iteration  10: 232,766 ms/op


Result "benchmarkFind":
  231,903 ±(99.9%) 1,895 ms/op [Average]
  (min, avg, max) = (230,066, 231,903, 233,925), stdev = 1,253
  CI (99.9%): [230,008, 233,798] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 32, patternSize = 128)

# Run progress: 23,07% complete, ETA 10:33:54
# Fork: 1 of 1
# Warmup Iteration   1: 233,988 ms/op
# Warmup Iteration   2: 228,694 ms/op
# Warmup Iteration   3: 231,788 ms/op
# Warmup Iteration   4: 232,237 ms/op
# Warmup Iteration   5: 231,359 ms/op
# Warmup Iteration   6: 230,902 ms/op
# Warmup Iteration   7: 232,243 ms/op
# Warmup Iteration   8: 231,052 ms/op
# Warmup Iteration   9: 232,038 ms/op
# Warmup Iteration  10: 231,333 ms/op
Iteration   1: 232,241 ms/op
Iteration   2: 230,981 ms/op
Iteration   3: 230,491 ms/op
Iteration   4: 229,659 ms/op
Iteration   5: 232,224 ms/op
Iteration   6: 231,143 ms/op
Iteration   7: 231,482 ms/op
Iteration   8: 231,883 ms/op
Iteration   9: 231,275 ms/op
Iteration  10: 230,921 ms/op


Result "benchmarkFind":
  231,230 ±(99.9%) 1,201 ms/op [Average]
  (min, avg, max) = (229,659, 231,230, 232,241), stdev = 0,795
  CI (99.9%): [230,029, 232,431] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 32, patternSize = 256)

# Run progress: 23,12% complete, ETA 10:33:34
# Fork: 1 of 1
# Warmup Iteration   1: 231,726 ms/op
# Warmup Iteration   2: 251,887 ms/op
# Warmup Iteration   3: 231,742 ms/op
# Warmup Iteration   4: 231,132 ms/op
# Warmup Iteration   5: 230,411 ms/op
# Warmup Iteration   6: 230,334 ms/op
# Warmup Iteration   7: 231,307 ms/op
# Warmup Iteration   8: 229,529 ms/op
# Warmup Iteration   9: 231,226 ms/op
# Warmup Iteration  10: 228,319 ms/op
Iteration   1: 230,552 ms/op
Iteration   2: 231,449 ms/op
Iteration   3: 230,020 ms/op
Iteration   4: 230,159 ms/op
Iteration   5: 230,426 ms/op
Iteration   6: 229,827 ms/op
Iteration   7: 230,459 ms/op
Iteration   8: 229,370 ms/op
Iteration   9: 231,461 ms/op
Iteration  10: 231,537 ms/op


Result "benchmarkFind":
  230,526 ±(99.9%) 1,125 ms/op [Average]
  (min, avg, max) = (229,370, 230,526, 231,537), stdev = 0,744
  CI (99.9%): [229,402, 231,651] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 128, patternSize = 2)

# Run progress: 23,16% complete, ETA 10:33:14
# Fork: 1 of 1
# Warmup Iteration   1: 160,667 ms/op
# Warmup Iteration   2: 153,565 ms/op
# Warmup Iteration   3: 153,167 ms/op
# Warmup Iteration   4: 154,063 ms/op
# Warmup Iteration   5: 153,467 ms/op
# Warmup Iteration   6: 152,317 ms/op
# Warmup Iteration   7: 153,351 ms/op
# Warmup Iteration   8: 153,315 ms/op
# Warmup Iteration   9: 153,289 ms/op
# Warmup Iteration  10: 152,443 ms/op
Iteration   1: 152,740 ms/op
Iteration   2: 152,785 ms/op
Iteration   3: 152,465 ms/op
Iteration   4: 152,377 ms/op
Iteration   5: 153,130 ms/op
Iteration   6: 153,140 ms/op
Iteration   7: 153,518 ms/op
Iteration   8: 152,504 ms/op
Iteration   9: 152,316 ms/op
Iteration  10: 152,343 ms/op


Result "benchmarkFind":
  152,732 ±(99.9%) 0,621 ms/op [Average]
  (min, avg, max) = (152,316, 152,732, 153,518), stdev = 0,411
  CI (99.9%): [152,110, 153,353] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 128, patternSize = 4)

# Run progress: 23,21% complete, ETA 10:32:49
# Fork: 1 of 1
# Warmup Iteration   1: 891,893 ms/op
# Warmup Iteration   2: 830,524 ms/op
# Warmup Iteration   3: 832,327 ms/op
# Warmup Iteration   4: 823,673 ms/op
# Warmup Iteration   5: 822,352 ms/op
# Warmup Iteration   6: 821,980 ms/op
# Warmup Iteration   7: 823,763 ms/op
# Warmup Iteration   8: 821,820 ms/op
# Warmup Iteration   9: 827,020 ms/op
# Warmup Iteration  10: 860,248 ms/op
Iteration   1: 816,280 ms/op
Iteration   2: 821,449 ms/op
Iteration   3: 816,137 ms/op
Iteration   4: 829,145 ms/op
Iteration   5: 828,403 ms/op
Iteration   6: 827,424 ms/op
Iteration   7: 833,668 ms/op
Iteration   8: 818,797 ms/op
Iteration   9: 818,776 ms/op
Iteration  10: 821,066 ms/op


Result "benchmarkFind":
  823,115 ±(99.9%) 9,212 ms/op [Average]
  (min, avg, max) = (816,137, 823,115, 833,668), stdev = 6,093
  CI (99.9%): [813,903, 832,326] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 128, patternSize = 8)

# Run progress: 23,25% complete, ETA 10:33:02
# Fork: 1 of 1
# Warmup Iteration   1: 889,920 ms/op
# Warmup Iteration   2: 895,279 ms/op
# Warmup Iteration   3: 895,071 ms/op
# Warmup Iteration   4: 894,159 ms/op
# Warmup Iteration   5: 905,224 ms/op
# Warmup Iteration   6: 904,520 ms/op
# Warmup Iteration   7: 905,375 ms/op
# Warmup Iteration   8: 903,115 ms/op
# Warmup Iteration   9: 903,020 ms/op
# Warmup Iteration  10: 902,659 ms/op
Iteration   1: 903,201 ms/op
Iteration   2: 902,144 ms/op
Iteration   3: 902,731 ms/op
Iteration   4: 903,899 ms/op
Iteration   5: 902,501 ms/op
Iteration   6: 903,466 ms/op
Iteration   7: 956,355 ms/op
Iteration   8: 955,908 ms/op
Iteration   9: 955,917 ms/op
Iteration  10: 955,583 ms/op


Result "benchmarkFind":
  924,170 ±(99.9%) 41,347 ms/op [Average]
  (min, avg, max) = (902,144, 924,170, 956,355), stdev = 27,349
  CI (99.9%): [882,823, 965,517] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 128, patternSize = 16)

# Run progress: 23,30% complete, ETA 10:33:26
# Fork: 1 of 1
# Warmup Iteration   1: 898,975 ms/op
# Warmup Iteration   2: 908,683 ms/op
# Warmup Iteration   3: 909,963 ms/op
# Warmup Iteration   4: 1041,092 ms/op
# Warmup Iteration   5: 910,004 ms/op
# Warmup Iteration   6: 914,517 ms/op
# Warmup Iteration   7: 909,629 ms/op
# Warmup Iteration   8: 908,438 ms/op
# Warmup Iteration   9: 915,866 ms/op
# Warmup Iteration  10: 913,392 ms/op
Iteration   1: 907,988 ms/op
Iteration   2: 910,886 ms/op
Iteration   3: 909,982 ms/op
Iteration   4: 908,217 ms/op
Iteration   5: 908,396 ms/op
Iteration   6: 909,585 ms/op
Iteration   7: 918,989 ms/op
Iteration   8: 916,731 ms/op
Iteration   9: 914,647 ms/op
Iteration  10: 923,177 ms/op


Result "benchmarkFind":
  912,860 ±(99.9%) 7,973 ms/op [Average]
  (min, avg, max) = (907,988, 912,860, 923,177), stdev = 5,274
  CI (99.9%): [904,887, 920,833] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 128, patternSize = 32)

# Run progress: 23,35% complete, ETA 10:33:47
# Fork: 1 of 1
# Warmup Iteration   1: 904,763 ms/op
# Warmup Iteration   2: 914,931 ms/op
# Warmup Iteration   3: 909,974 ms/op
# Warmup Iteration   4: 917,367 ms/op
# Warmup Iteration   5: 906,484 ms/op
# Warmup Iteration   6: 909,262 ms/op
# Warmup Iteration   7: 906,883 ms/op
# Warmup Iteration   8: 908,377 ms/op
# Warmup Iteration   9: 905,574 ms/op
# Warmup Iteration  10: 906,195 ms/op
Iteration   1: 913,656 ms/op
Iteration   2: 905,961 ms/op
Iteration   3: 909,400 ms/op
Iteration   4: 909,911 ms/op
Iteration   5: 904,342 ms/op
Iteration   6: 908,968 ms/op
Iteration   7: 923,516 ms/op
Iteration   8: 902,166 ms/op
Iteration   9: 906,367 ms/op
Iteration  10: 897,172 ms/op


Result "benchmarkFind":
  908,146 ±(99.9%) 10,697 ms/op [Average]
  (min, avg, max) = (897,172, 908,146, 923,516), stdev = 7,075
  CI (99.9%): [897,449, 918,843] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 128, patternSize = 64)

# Run progress: 23,39% complete, ETA 10:34:10
# Fork: 1 of 1
# Warmup Iteration   1: 924,586 ms/op
# Warmup Iteration   2: 977,755 ms/op
# Warmup Iteration   3: 1004,528 ms/op
# Warmup Iteration   4: 1002,196 ms/op
# Warmup Iteration   5: 990,576 ms/op
# Warmup Iteration   6: 995,331 ms/op
# Warmup Iteration   7: 998,741 ms/op
# Warmup Iteration   8: 1004,823 ms/op
# Warmup Iteration   9: 1021,595 ms/op
# Warmup Iteration  10: 997,989 ms/op
Iteration   1: 993,837 ms/op
Iteration   2: 1000,398 ms/op
Iteration   3: 1001,361 ms/op
Iteration   4: 1009,427 ms/op
Iteration   5: 1003,508 ms/op
Iteration   6: 1011,729 ms/op
Iteration   7: 964,840 ms/op
Iteration   8: 965,373 ms/op
Iteration   9: 963,380 ms/op
Iteration  10: 969,675 ms/op


Result "benchmarkFind":
  988,353 ±(99.9%) 30,313 ms/op [Average]
  (min, avg, max) = (963,380, 988,353, 1011,729), stdev = 20,050
  CI (99.9%): [958,040, 1018,665] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 128, patternSize = 128)

# Run progress: 23,44% complete, ETA 10:34:24
# Fork: 1 of 1
# Warmup Iteration   1: 890,446 ms/op
# Warmup Iteration   2: 918,851 ms/op
# Warmup Iteration   3: 952,708 ms/op
# Warmup Iteration   4: 945,425 ms/op
# Warmup Iteration   5: 940,874 ms/op
# Warmup Iteration   6: 947,010 ms/op
# Warmup Iteration   7: 919,575 ms/op
# Warmup Iteration   8: 897,850 ms/op
# Warmup Iteration   9: 894,462 ms/op
# Warmup Iteration  10: 891,719 ms/op
Iteration   1: 941,422 ms/op
Iteration   2: 897,389 ms/op
Iteration   3: 904,988 ms/op
Iteration   4: 898,487 ms/op
Iteration   5: 900,501 ms/op
Iteration   6: 903,297 ms/op
Iteration   7: 894,973 ms/op
Iteration   8: 896,263 ms/op
Iteration   9: 898,572 ms/op
Iteration  10: 896,548 ms/op


Result "benchmarkFind":
  903,244 ±(99.9%) 20,832 ms/op [Average]
  (min, avg, max) = (894,973, 903,244, 941,422), stdev = 13,779
  CI (99.9%): [882,411, 924,076] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 128, patternSize = 256)

# Run progress: 23,48% complete, ETA 10:34:47
# Fork: 1 of 1
# Warmup Iteration   1: 916,877 ms/op
# Warmup Iteration   2: 945,028 ms/op
# Warmup Iteration   3: 943,609 ms/op
# Warmup Iteration   4: 944,826 ms/op
# Warmup Iteration   5: 943,524 ms/op
# Warmup Iteration   6: 946,699 ms/op
# Warmup Iteration   7: 942,624 ms/op
# Warmup Iteration   8: 945,250 ms/op
# Warmup Iteration   9: 942,882 ms/op
# Warmup Iteration  10: 947,109 ms/op
Iteration   1: 943,715 ms/op
Iteration   2: 944,006 ms/op
Iteration   3: 946,949 ms/op
Iteration   4: 945,304 ms/op
Iteration   5: 943,328 ms/op
Iteration   6: 947,074 ms/op
Iteration   7: 949,572 ms/op
Iteration   8: 951,462 ms/op
Iteration   9: 951,298 ms/op
Iteration  10: 950,039 ms/op


Result "benchmarkFind":
  947,275 ±(99.9%) 4,770 ms/op [Average]
  (min, avg, max) = (943,328, 947,275, 951,462), stdev = 3,155
  CI (99.9%): [942,504, 952,045] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 2, patternSize = 2)

# Run progress: 23,53% complete, ETA 10:35:15
# Fork: 1 of 1
# Warmup Iteration   1: 4,364 ms/op
# Warmup Iteration   2: 4,086 ms/op
# Warmup Iteration   3: 4,095 ms/op
# Warmup Iteration   4: 4,529 ms/op
# Warmup Iteration   5: 4,064 ms/op
# Warmup Iteration   6: 4,047 ms/op
# Warmup Iteration   7: 4,047 ms/op
# Warmup Iteration   8: 4,033 ms/op
# Warmup Iteration   9: 4,035 ms/op
# Warmup Iteration  10: 4,036 ms/op
Iteration   1: 4,051 ms/op
Iteration   2: 4,044 ms/op
Iteration   3: 4,051 ms/op
Iteration   4: 4,053 ms/op
Iteration   5: 4,111 ms/op
Iteration   6: 4,242 ms/op
Iteration   7: 4,059 ms/op
Iteration   8: 4,048 ms/op
Iteration   9: 4,049 ms/op
Iteration  10: 4,057 ms/op


Result "benchmarkFind":
  4,077 ±(99.9%) 0,093 ms/op [Average]
  (min, avg, max) = (4,044, 4,077, 4,242), stdev = 0,061
  CI (99.9%): [3,984, 4,169] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 2, patternSize = 4)

# Run progress: 23,58% complete, ETA 10:34:44
# Fork: 1 of 1
# Warmup Iteration   1: 119,992 ms/op
# Warmup Iteration   2: 119,133 ms/op
# Warmup Iteration   3: 117,916 ms/op
# Warmup Iteration   4: 117,668 ms/op
# Warmup Iteration   5: 118,387 ms/op
# Warmup Iteration   6: 118,115 ms/op
# Warmup Iteration   7: 117,946 ms/op
# Warmup Iteration   8: 118,789 ms/op
# Warmup Iteration   9: 117,307 ms/op
# Warmup Iteration  10: 118,063 ms/op
Iteration   1: 118,143 ms/op
Iteration   2: 117,799 ms/op
Iteration   3: 117,897 ms/op
Iteration   4: 119,015 ms/op
Iteration   5: 118,113 ms/op
Iteration   6: 117,915 ms/op
Iteration   7: 118,300 ms/op
Iteration   8: 117,471 ms/op
Iteration   9: 118,176 ms/op
Iteration  10: 118,555 ms/op


Result "benchmarkFind":
  118,138 ±(99.9%) 0,645 ms/op [Average]
  (min, avg, max) = (117,471, 118,138, 119,015), stdev = 0,427
  CI (99.9%): [117,493, 118,784] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 2, patternSize = 8)

# Run progress: 23,62% complete, ETA 10:34:18
# Fork: 1 of 1
# Warmup Iteration   1: 124,887 ms/op
# Warmup Iteration   2: 125,637 ms/op
# Warmup Iteration   3: 126,113 ms/op
# Warmup Iteration   4: 124,732 ms/op
# Warmup Iteration   5: 125,432 ms/op
# Warmup Iteration   6: 125,046 ms/op
# Warmup Iteration   7: 125,509 ms/op
# Warmup Iteration   8: 122,685 ms/op
# Warmup Iteration   9: 119,058 ms/op
# Warmup Iteration  10: 118,980 ms/op
Iteration   1: 118,062 ms/op
Iteration   2: 118,278 ms/op
Iteration   3: 118,690 ms/op
Iteration   4: 118,034 ms/op
Iteration   5: 118,894 ms/op
Iteration   6: 119,520 ms/op
Iteration   7: 118,028 ms/op
Iteration   8: 118,799 ms/op
Iteration   9: 117,791 ms/op
Iteration  10: 129,892 ms/op


Result "benchmarkFind":
  119,599 ±(99.9%) 5,525 ms/op [Average]
  (min, avg, max) = (117,791, 119,599, 129,892), stdev = 3,655
  CI (99.9%): [114,074, 125,124] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 2, patternSize = 16)

# Run progress: 23,67% complete, ETA 10:33:52
# Fork: 1 of 1
# Warmup Iteration   1: 120,777 ms/op
# Warmup Iteration   2: 118,463 ms/op
# Warmup Iteration   3: 116,674 ms/op
# Warmup Iteration   4: 118,541 ms/op
# Warmup Iteration   5: 117,750 ms/op
# Warmup Iteration   6: 118,137 ms/op
# Warmup Iteration   7: 118,112 ms/op
# Warmup Iteration   8: 119,633 ms/op
# Warmup Iteration   9: 117,878 ms/op
# Warmup Iteration  10: 117,502 ms/op
Iteration   1: 118,070 ms/op
Iteration   2: 118,591 ms/op
Iteration   3: 117,883 ms/op
Iteration   4: 118,456 ms/op
Iteration   5: 117,493 ms/op
Iteration   6: 117,497 ms/op
Iteration   7: 117,379 ms/op
Iteration   8: 118,437 ms/op
Iteration   9: 118,941 ms/op
Iteration  10: 117,730 ms/op


Result "benchmarkFind":
  118,048 ±(99.9%) 0,812 ms/op [Average]
  (min, avg, max) = (117,379, 118,048, 118,941), stdev = 0,537
  CI (99.9%): [117,236, 118,860] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 2, patternSize = 32)

# Run progress: 23,71% complete, ETA 10:33:26
# Fork: 1 of 1
# Warmup Iteration   1: 118,671 ms/op
# Warmup Iteration   2: 116,590 ms/op
# Warmup Iteration   3: 116,596 ms/op
# Warmup Iteration   4: 117,061 ms/op
# Warmup Iteration   5: 116,593 ms/op
# Warmup Iteration   6: 116,876 ms/op
# Warmup Iteration   7: 116,017 ms/op
# Warmup Iteration   8: 116,378 ms/op
# Warmup Iteration   9: 115,742 ms/op
# Warmup Iteration  10: 116,097 ms/op
Iteration   1: 116,602 ms/op
Iteration   2: 115,914 ms/op
Iteration   3: 116,612 ms/op
Iteration   4: 116,902 ms/op
Iteration   5: 116,014 ms/op
Iteration   6: 116,173 ms/op
Iteration   7: 116,420 ms/op
Iteration   8: 117,013 ms/op
Iteration   9: 116,708 ms/op
Iteration  10: 116,341 ms/op


Result "benchmarkFind":
  116,470 ±(99.9%) 0,552 ms/op [Average]
  (min, avg, max) = (115,914, 116,470, 117,013), stdev = 0,365
  CI (99.9%): [115,918, 117,022] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 2, patternSize = 64)

# Run progress: 23,76% complete, ETA 10:32:59
# Fork: 1 of 1
# Warmup Iteration   1: 119,788 ms/op
# Warmup Iteration   2: 118,349 ms/op
# Warmup Iteration   3: 118,367 ms/op
# Warmup Iteration   4: 118,244 ms/op
# Warmup Iteration   5: 117,883 ms/op
# Warmup Iteration   6: 117,877 ms/op
# Warmup Iteration   7: 119,034 ms/op
# Warmup Iteration   8: 118,945 ms/op
# Warmup Iteration   9: 118,497 ms/op
# Warmup Iteration  10: 117,947 ms/op
Iteration   1: 119,480 ms/op
Iteration   2: 119,546 ms/op
Iteration   3: 118,966 ms/op
Iteration   4: 117,691 ms/op
Iteration   5: 127,946 ms/op
Iteration   6: 116,317 ms/op
Iteration   7: 116,188 ms/op
Iteration   8: 116,451 ms/op
Iteration   9: 116,434 ms/op
Iteration  10: 118,194 ms/op


Result "benchmarkFind":
  118,721 ±(99.9%) 5,293 ms/op [Average]
  (min, avg, max) = (116,188, 118,721, 127,946), stdev = 3,501
  CI (99.9%): [113,428, 124,015] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 2, patternSize = 128)

# Run progress: 23,81% complete, ETA 10:32:33
# Fork: 1 of 1
# Warmup Iteration   1: 120,243 ms/op
# Warmup Iteration   2: 119,507 ms/op
# Warmup Iteration   3: 119,754 ms/op
# Warmup Iteration   4: 119,737 ms/op
# Warmup Iteration   5: 120,070 ms/op
# Warmup Iteration   6: 119,621 ms/op
# Warmup Iteration   7: 120,225 ms/op
# Warmup Iteration   8: 119,593 ms/op
# Warmup Iteration   9: 119,840 ms/op
# Warmup Iteration  10: 120,111 ms/op
Iteration   1: 119,574 ms/op
Iteration   2: 120,539 ms/op
Iteration   3: 121,061 ms/op
Iteration   4: 120,382 ms/op
Iteration   5: 119,477 ms/op
Iteration   6: 119,279 ms/op
Iteration   7: 120,086 ms/op
Iteration   8: 119,760 ms/op
Iteration   9: 119,721 ms/op
Iteration  10: 119,346 ms/op


Result "benchmarkFind":
  119,922 ±(99.9%) 0,880 ms/op [Average]
  (min, avg, max) = (119,279, 119,922, 121,061), stdev = 0,582
  CI (99.9%): [119,043, 120,802] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 2, patternSize = 256)

# Run progress: 23,85% complete, ETA 10:32:08
# Fork: 1 of 1
# Warmup Iteration   1: 127,371 ms/op
# Warmup Iteration   2: 128,638 ms/op
# Warmup Iteration   3: 127,600 ms/op
# Warmup Iteration   4: 128,065 ms/op
# Warmup Iteration   5: 128,110 ms/op
# Warmup Iteration   6: 128,864 ms/op
# Warmup Iteration   7: 123,522 ms/op
# Warmup Iteration   8: 120,026 ms/op
# Warmup Iteration   9: 120,234 ms/op
# Warmup Iteration  10: 119,409 ms/op
Iteration   1: 119,443 ms/op
Iteration   2: 119,260 ms/op
Iteration   3: 119,725 ms/op
Iteration   4: 119,688 ms/op
Iteration   5: 119,678 ms/op
Iteration   6: 119,784 ms/op
Iteration   7: 119,522 ms/op
Iteration   8: 119,980 ms/op
Iteration   9: 119,924 ms/op
Iteration  10: 120,170 ms/op


Result "benchmarkFind":
  119,717 ±(99.9%) 0,405 ms/op [Average]
  (min, avg, max) = (119,260, 119,717, 120,170), stdev = 0,268
  CI (99.9%): [119,312, 120,122] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 8, patternSize = 2)

# Run progress: 23,90% complete, ETA 10:31:43
# Fork: 1 of 1
# Warmup Iteration   1: 15,549 ms/op
# Warmup Iteration   2: 14,910 ms/op
# Warmup Iteration   3: 14,843 ms/op
# Warmup Iteration   4: 14,861 ms/op
# Warmup Iteration   5: 14,849 ms/op
# Warmup Iteration   6: 14,881 ms/op
# Warmup Iteration   7: 14,855 ms/op
# Warmup Iteration   8: 14,822 ms/op
# Warmup Iteration   9: 14,869 ms/op
# Warmup Iteration  10: 17,304 ms/op
Iteration   1: 15,084 ms/op
Iteration   2: 15,086 ms/op
Iteration   3: 15,083 ms/op
Iteration   4: 14,996 ms/op
Iteration   5: 15,074 ms/op
Iteration   6: 15,181 ms/op
Iteration   7: 15,020 ms/op
Iteration   8: 15,077 ms/op
Iteration   9: 15,007 ms/op
Iteration  10: 15,119 ms/op


Result "benchmarkFind":
  15,073 ±(99.9%) 0,083 ms/op [Average]
  (min, avg, max) = (14,996, 15,073, 15,181), stdev = 0,055
  CI (99.9%): [14,989, 15,156] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 8, patternSize = 4)

# Run progress: 23,94% complete, ETA 10:31:12
# Fork: 1 of 1
# Warmup Iteration   1: 458,270 ms/op
# Warmup Iteration   2: 460,307 ms/op
# Warmup Iteration   3: 460,555 ms/op
# Warmup Iteration   4: 459,719 ms/op
# Warmup Iteration   5: 460,887 ms/op
# Warmup Iteration   6: 459,566 ms/op
# Warmup Iteration   7: 460,461 ms/op
# Warmup Iteration   8: 460,301 ms/op
# Warmup Iteration   9: 461,118 ms/op
# Warmup Iteration  10: 460,060 ms/op
Iteration   1: 460,600 ms/op
Iteration   2: 459,654 ms/op
Iteration   3: 460,028 ms/op
Iteration   4: 462,790 ms/op
Iteration   5: 461,645 ms/op
Iteration   6: 459,584 ms/op
Iteration   7: 461,780 ms/op
Iteration   8: 460,763 ms/op
Iteration   9: 472,810 ms/op
Iteration  10: 487,776 ms/op


Result "benchmarkFind":
  464,743 ±(99.9%) 13,575 ms/op [Average]
  (min, avg, max) = (459,584, 464,743, 487,776), stdev = 8,979
  CI (99.9%): [451,168, 478,318] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 8, patternSize = 8)

# Run progress: 23,99% complete, ETA 10:31:07
# Fork: 1 of 1
# Warmup Iteration   1: 424,985 ms/op
# Warmup Iteration   2: 448,200 ms/op
# Warmup Iteration   3: 446,784 ms/op
# Warmup Iteration   4: 447,706 ms/op
# Warmup Iteration   5: 448,573 ms/op
# Warmup Iteration   6: 451,072 ms/op
# Warmup Iteration   7: 445,499 ms/op
# Warmup Iteration   8: 440,905 ms/op
# Warmup Iteration   9: 439,975 ms/op
# Warmup Iteration  10: 444,341 ms/op
Iteration   1: 441,037 ms/op
Iteration   2: 441,494 ms/op
Iteration   3: 441,823 ms/op
Iteration   4: 441,970 ms/op
Iteration   5: 480,389 ms/op
Iteration   6: 437,891 ms/op
Iteration   7: 435,034 ms/op
Iteration   8: 436,619 ms/op
Iteration   9: 435,561 ms/op
Iteration  10: 435,794 ms/op


Result "benchmarkFind":
  442,761 ±(99.9%) 20,430 ms/op [Average]
  (min, avg, max) = (435,034, 442,761, 480,389), stdev = 13,513
  CI (99.9%): [422,331, 463,191] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 8, patternSize = 16)

# Run progress: 24,03% complete, ETA 10:30:58
# Fork: 1 of 1
# Warmup Iteration   1: 425,671 ms/op
# Warmup Iteration   2: 452,151 ms/op
# Warmup Iteration   3: 455,929 ms/op
# Warmup Iteration   4: 453,519 ms/op
# Warmup Iteration   5: 454,868 ms/op
# Warmup Iteration   6: 453,038 ms/op
# Warmup Iteration   7: 451,856 ms/op
# Warmup Iteration   8: 446,220 ms/op
# Warmup Iteration   9: 446,140 ms/op
# Warmup Iteration  10: 446,892 ms/op
Iteration   1: 446,663 ms/op
Iteration   2: 445,294 ms/op
Iteration   3: 444,683 ms/op
Iteration   4: 446,749 ms/op
Iteration   5: 446,722 ms/op
Iteration   6: 444,622 ms/op
Iteration   7: 436,586 ms/op
Iteration   8: 436,027 ms/op
Iteration   9: 433,484 ms/op
Iteration  10: 432,801 ms/op


Result "benchmarkFind":
  441,363 ±(99.9%) 8,867 ms/op [Average]
  (min, avg, max) = (432,801, 441,363, 446,749), stdev = 5,865
  CI (99.9%): [432,496, 450,230] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 8, patternSize = 32)

# Run progress: 24,08% complete, ETA 10:30:50
# Fork: 1 of 1
# Warmup Iteration   1: 414,610 ms/op
# Warmup Iteration   2: 439,412 ms/op
# Warmup Iteration   3: 435,234 ms/op
# Warmup Iteration   4: 434,809 ms/op
# Warmup Iteration   5: 436,747 ms/op
# Warmup Iteration   6: 434,358 ms/op
# Warmup Iteration   7: 439,263 ms/op
# Warmup Iteration   8: 439,101 ms/op
# Warmup Iteration   9: 438,252 ms/op
# Warmup Iteration  10: 439,772 ms/op
Iteration   1: 438,800 ms/op
Iteration   2: 438,213 ms/op
Iteration   3: 437,554 ms/op
Iteration   4: 438,093 ms/op
Iteration   5: 437,146 ms/op
Iteration   6: 439,697 ms/op
Iteration   7: 433,702 ms/op
Iteration   8: 438,374 ms/op
Iteration   9: 438,320 ms/op
Iteration  10: 475,322 ms/op


Result "benchmarkFind":
  441,522 ±(99.9%) 18,115 ms/op [Average]
  (min, avg, max) = (433,702, 441,522, 475,322), stdev = 11,982
  CI (99.9%): [423,407, 459,637] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 8, patternSize = 64)

# Run progress: 24,13% complete, ETA 10:30:40
# Fork: 1 of 1
# Warmup Iteration   1: 418,650 ms/op
# Warmup Iteration   2: 451,378 ms/op
# Warmup Iteration   3: 450,590 ms/op
# Warmup Iteration   4: 445,476 ms/op
# Warmup Iteration   5: 442,835 ms/op
# Warmup Iteration   6: 444,271 ms/op
# Warmup Iteration   7: 444,916 ms/op
# Warmup Iteration   8: 448,808 ms/op
# Warmup Iteration   9: 447,838 ms/op
# Warmup Iteration  10: 445,907 ms/op
Iteration   1: 441,538 ms/op
Iteration   2: 442,499 ms/op
Iteration   3: 448,266 ms/op
Iteration   4: 445,279 ms/op
Iteration   5: 444,542 ms/op
Iteration   6: 442,004 ms/op
Iteration   7: 446,724 ms/op
Iteration   8: 447,599 ms/op
Iteration   9: 449,914 ms/op
Iteration  10: 446,915 ms/op


Result "benchmarkFind":
  445,528 ±(99.9%) 4,304 ms/op [Average]
  (min, avg, max) = (441,538, 445,528, 449,914), stdev = 2,847
  CI (99.9%): [441,224, 449,832] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 8, patternSize = 128)

# Run progress: 24,17% complete, ETA 10:30:31
# Fork: 1 of 1
# Warmup Iteration   1: 420,873 ms/op
# Warmup Iteration   2: 444,950 ms/op
# Warmup Iteration   3: 445,609 ms/op
# Warmup Iteration   4: 444,641 ms/op
# Warmup Iteration   5: 445,399 ms/op
# Warmup Iteration   6: 447,777 ms/op
# Warmup Iteration   7: 443,525 ms/op
# Warmup Iteration   8: 443,031 ms/op
# Warmup Iteration   9: 440,501 ms/op
# Warmup Iteration  10: 442,019 ms/op
Iteration   1: 439,983 ms/op
Iteration   2: 443,676 ms/op
Iteration   3: 442,127 ms/op
Iteration   4: 440,171 ms/op
Iteration   5: 440,277 ms/op
Iteration   6: 443,318 ms/op
Iteration   7: 446,318 ms/op
Iteration   8: 441,520 ms/op
Iteration   9: 440,593 ms/op
Iteration  10: 444,354 ms/op


Result "benchmarkFind":
  442,234 ±(99.9%) 3,219 ms/op [Average]
  (min, avg, max) = (439,983, 442,234, 446,318), stdev = 2,129
  CI (99.9%): [439,015, 445,453] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 8, patternSize = 256)

# Run progress: 24,22% complete, ETA 10:30:22
# Fork: 1 of 1
# Warmup Iteration   1: 421,535 ms/op
# Warmup Iteration   2: 454,844 ms/op
# Warmup Iteration   3: 478,185 ms/op
# Warmup Iteration   4: 445,840 ms/op
# Warmup Iteration   5: 447,771 ms/op
# Warmup Iteration   6: 445,002 ms/op
# Warmup Iteration   7: 446,224 ms/op
# Warmup Iteration   8: 445,519 ms/op
# Warmup Iteration   9: 448,018 ms/op
# Warmup Iteration  10: 452,596 ms/op
Iteration   1: 448,835 ms/op
Iteration   2: 446,708 ms/op
Iteration   3: 445,829 ms/op
Iteration   4: 449,076 ms/op
Iteration   5: 446,257 ms/op
Iteration   6: 447,796 ms/op
Iteration   7: 447,805 ms/op
Iteration   8: 446,223 ms/op
Iteration   9: 446,172 ms/op
Iteration  10: 449,415 ms/op


Result "benchmarkFind":
  447,412 ±(99.9%) 2,041 ms/op [Average]
  (min, avg, max) = (445,829, 447,412, 449,415), stdev = 1,350
  CI (99.9%): [445,371, 449,452] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 32, patternSize = 2)

# Run progress: 24,26% complete, ETA 10:30:13
# Fork: 1 of 1
# Warmup Iteration   1: 75,215 ms/op
# Warmup Iteration   2: 71,111 ms/op
# Warmup Iteration   3: 71,205 ms/op
# Warmup Iteration   4: 70,252 ms/op
# Warmup Iteration   5: 70,750 ms/op
# Warmup Iteration   6: 70,519 ms/op
# Warmup Iteration   7: 70,724 ms/op
# Warmup Iteration   8: 70,688 ms/op
# Warmup Iteration   9: 71,245 ms/op
# Warmup Iteration  10: 70,706 ms/op
Iteration   1: 71,008 ms/op
Iteration   2: 70,893 ms/op
Iteration   3: 71,038 ms/op
Iteration   4: 70,715 ms/op
Iteration   5: 70,548 ms/op
Iteration   6: 71,666 ms/op
Iteration   7: 70,819 ms/op
Iteration   8: 70,851 ms/op
Iteration   9: 71,079 ms/op
Iteration  10: 71,189 ms/op


Result "benchmarkFind":
  70,981 ±(99.9%) 0,461 ms/op [Average]
  (min, avg, max) = (70,548, 70,981, 71,666), stdev = 0,305
  CI (99.9%): [70,520, 71,441] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 32, patternSize = 4)

# Run progress: 24,31% complete, ETA 10:29:46
# Fork: 1 of 1
# Warmup Iteration   1: 1903,478 ms/op
# Warmup Iteration   2: 1434,588 ms/op
# Warmup Iteration   3: 1432,766 ms/op
# Warmup Iteration   4: 1432,925 ms/op
# Warmup Iteration   5: 1439,169 ms/op
# Warmup Iteration   6: 1431,567 ms/op
# Warmup Iteration   7: 1438,353 ms/op
# Warmup Iteration   8: 1434,342 ms/op
# Warmup Iteration   9: 1439,210 ms/op
# Warmup Iteration  10: 1526,569 ms/op
Iteration   1: 1453,490 ms/op
Iteration   2: 1443,400 ms/op
Iteration   3: 1440,300 ms/op
Iteration   4: 1435,388 ms/op
Iteration   5: 1433,677 ms/op
Iteration   6: 1454,622 ms/op
Iteration   7: 1447,057 ms/op
Iteration   8: 1451,995 ms/op
Iteration   9: 1448,389 ms/op
Iteration  10: 1450,940 ms/op


Result "benchmarkFind":
  1445,926 ±(99.9%) 11,283 ms/op [Average]
  (min, avg, max) = (1433,677, 1445,926, 1454,622), stdev = 7,463
  CI (99.9%): [1434,643, 1457,209] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 32, patternSize = 8)

# Run progress: 24,36% complete, ETA 10:29:46
# Fork: 1 of 1
# Warmup Iteration   1: 1756,041 ms/op
# Warmup Iteration   2: 1641,538 ms/op
# Warmup Iteration   3: 1623,870 ms/op
# Warmup Iteration   4: 1620,385 ms/op
# Warmup Iteration   5: 1628,048 ms/op
# Warmup Iteration   6: 1626,545 ms/op
# Warmup Iteration   7: 1620,428 ms/op
# Warmup Iteration   8: 1631,635 ms/op
# Warmup Iteration   9: 1623,394 ms/op
# Warmup Iteration  10: 1622,475 ms/op
Iteration   1: 1620,720 ms/op
Iteration   2: 1624,945 ms/op
Iteration   3: 1625,429 ms/op
Iteration   4: 1623,164 ms/op
Iteration   5: 1647,189 ms/op
Iteration   6: 1624,156 ms/op
Iteration   7: 1627,046 ms/op
Iteration   8: 1626,142 ms/op
Iteration   9: 1628,929 ms/op
Iteration  10: 1627,611 ms/op


Result "benchmarkFind":
  1627,533 ±(99.9%) 11,024 ms/op [Average]
  (min, avg, max) = (1620,720, 1627,533, 1647,189), stdev = 7,292
  CI (99.9%): [1616,509, 1638,557] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 32, patternSize = 16)

# Run progress: 24,40% complete, ETA 10:29:55
# Fork: 1 of 1
# Warmup Iteration   1: 1674,471 ms/op
# Warmup Iteration   2: 1663,506 ms/op
# Warmup Iteration   3: 1638,486 ms/op
# Warmup Iteration   4: 1643,040 ms/op
# Warmup Iteration   5: 1652,595 ms/op
# Warmup Iteration   6: 1641,604 ms/op
# Warmup Iteration   7: 1719,349 ms/op
# Warmup Iteration   8: 1649,930 ms/op
# Warmup Iteration   9: 1633,402 ms/op
# Warmup Iteration  10: 1656,398 ms/op
Iteration   1: 1669,512 ms/op
Iteration   2: 1656,218 ms/op
Iteration   3: 1644,960 ms/op
Iteration   4: 1644,067 ms/op
Iteration   5: 1667,785 ms/op
Iteration   6: 1662,345 ms/op
Iteration   7: 1644,487 ms/op
Iteration   8: 1650,589 ms/op
Iteration   9: 1649,444 ms/op
Iteration  10: 1651,140 ms/op


Result "benchmarkFind":
  1654,055 ±(99.9%) 14,401 ms/op [Average]
  (min, avg, max) = (1644,067, 1654,055, 1669,512), stdev = 9,526
  CI (99.9%): [1639,653, 1668,456] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 32, patternSize = 32)

# Run progress: 24,45% complete, ETA 10:30:06
# Fork: 1 of 1
# Warmup Iteration   1: 1735,515 ms/op
# Warmup Iteration   2: 1652,800 ms/op
# Warmup Iteration   3: 1656,869 ms/op
# Warmup Iteration   4: 1639,187 ms/op
# Warmup Iteration   5: 1628,933 ms/op
# Warmup Iteration   6: 1631,888 ms/op
# Warmup Iteration   7: 1636,605 ms/op
# Warmup Iteration   8: 1639,083 ms/op
# Warmup Iteration   9: 1630,994 ms/op
# Warmup Iteration  10: 1631,863 ms/op
Iteration   1: 1624,098 ms/op
Iteration   2: 1659,777 ms/op
Iteration   3: 1643,303 ms/op
Iteration   4: 1632,316 ms/op
Iteration   5: 1639,642 ms/op
Iteration   6: 1677,730 ms/op
Iteration   7: 1666,451 ms/op
Iteration   8: 1670,788 ms/op
Iteration   9: 1663,229 ms/op
Iteration  10: 1702,525 ms/op


Result "benchmarkFind":
  1657,986 ±(99.9%) 35,632 ms/op [Average]
  (min, avg, max) = (1624,098, 1657,986, 1702,525), stdev = 23,568
  CI (99.9%): [1622,354, 1693,617] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 32, patternSize = 64)

# Run progress: 24,49% complete, ETA 10:30:17
# Fork: 1 of 1
# Warmup Iteration   1: 1757,552 ms/op
# Warmup Iteration   2: 1721,055 ms/op
# Warmup Iteration   3: 1674,683 ms/op
# Warmup Iteration   4: 1633,531 ms/op
# Warmup Iteration   5: 1641,505 ms/op
# Warmup Iteration   6: 1645,726 ms/op
# Warmup Iteration   7: 1664,284 ms/op
# Warmup Iteration   8: 1654,930 ms/op
# Warmup Iteration   9: 1643,331 ms/op
# Warmup Iteration  10: 1632,752 ms/op
Iteration   1: 1657,904 ms/op
Iteration   2: 1645,132 ms/op
Iteration   3: 1636,725 ms/op
Iteration   4: 1670,130 ms/op
Iteration   5: 1655,760 ms/op
Iteration   6: 1648,991 ms/op
Iteration   7: 1677,238 ms/op
Iteration   8: 1674,984 ms/op
Iteration   9: 1681,764 ms/op
Iteration  10: 1685,804 ms/op


Result "benchmarkFind":
  1663,443 ±(99.9%) 25,457 ms/op [Average]
  (min, avg, max) = (1636,725, 1663,443, 1685,804), stdev = 16,838
  CI (99.9%): [1637,987, 1688,900] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 32, patternSize = 128)

# Run progress: 24,54% complete, ETA 10:30:28
# Fork: 1 of 1
# Warmup Iteration   1: 1707,697 ms/op
# Warmup Iteration   2: 1789,083 ms/op
# Warmup Iteration   3: 1788,803 ms/op
# Warmup Iteration   4: 1795,589 ms/op
# Warmup Iteration   5: 1787,354 ms/op
# Warmup Iteration   6: 1787,478 ms/op
# Warmup Iteration   7: 1787,845 ms/op
# Warmup Iteration   8: 1794,718 ms/op
# Warmup Iteration   9: 1780,366 ms/op
# Warmup Iteration  10: 1778,018 ms/op
Iteration   1: 1782,717 ms/op
Iteration   2: 1796,400 ms/op
Iteration   3: 1782,299 ms/op
Iteration   4: 1784,062 ms/op
Iteration   5: 1795,407 ms/op
Iteration   6: 1798,183 ms/op
Iteration   7: 1875,219 ms/op
Iteration   8: 1812,049 ms/op
Iteration   9: 1789,502 ms/op
Iteration  10: 1800,854 ms/op


Result "benchmarkFind":
  1801,669 ±(99.9%) 41,525 ms/op [Average]
  (min, avg, max) = (1782,299, 1801,669, 1875,219), stdev = 27,466
  CI (99.9%): [1760,144, 1843,194] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 32, patternSize = 256)

# Run progress: 24,59% complete, ETA 10:30:46
# Fork: 1 of 1
# Warmup Iteration   1: 1726,211 ms/op
# Warmup Iteration   2: 1681,846 ms/op
# Warmup Iteration   3: 1652,062 ms/op
# Warmup Iteration   4: 1639,329 ms/op
# Warmup Iteration   5: 1650,113 ms/op
# Warmup Iteration   6: 1649,497 ms/op
# Warmup Iteration   7: 1641,193 ms/op
# Warmup Iteration   8: 1646,173 ms/op
# Warmup Iteration   9: 1641,991 ms/op
# Warmup Iteration  10: 1636,303 ms/op
Iteration   1: 1635,514 ms/op
Iteration   2: 1628,614 ms/op
Iteration   3: 1668,928 ms/op
Iteration   4: 1646,915 ms/op
Iteration   5: 1631,826 ms/op
Iteration   6: 1650,952 ms/op
Iteration   7: 1647,820 ms/op
Iteration   8: 1637,559 ms/op
Iteration   9: 1659,723 ms/op
Iteration  10: 1642,232 ms/op


Result "benchmarkFind":
  1645,008 ±(99.9%) 19,066 ms/op [Average]
  (min, avg, max) = (1628,614, 1645,008, 1668,928), stdev = 12,611
  CI (99.9%): [1625,942, 1664,075] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 128, patternSize = 2)

# Run progress: 24,63% complete, ETA 10:30:56
# Fork: 1 of 1
# Warmup Iteration   1: 485,182 ms/op
# Warmup Iteration   2: 473,139 ms/op
# Warmup Iteration   3: 470,685 ms/op
# Warmup Iteration   4: 470,297 ms/op
# Warmup Iteration   5: 471,411 ms/op
# Warmup Iteration   6: 470,702 ms/op
# Warmup Iteration   7: 475,343 ms/op
# Warmup Iteration   8: 474,771 ms/op
# Warmup Iteration   9: 470,984 ms/op
# Warmup Iteration  10: 471,181 ms/op
Iteration   1: 471,631 ms/op
Iteration   2: 471,905 ms/op
Iteration   3: 471,924 ms/op
Iteration   4: 529,367 ms/op
Iteration   5: 529,416 ms/op
Iteration   6: 474,187 ms/op
Iteration   7: 470,516 ms/op
Iteration   8: 470,500 ms/op
Iteration   9: 470,239 ms/op
Iteration  10: 489,656 ms/op


Result "benchmarkFind":
  484,934 ±(99.9%) 36,476 ms/op [Average]
  (min, avg, max) = (470,239, 484,934, 529,416), stdev = 24,127
  CI (99.9%): [448,458, 521,410] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 128, patternSize = 4)

# Run progress: 24,68% complete, ETA 10:30:48
# Fork: 1 of 1
# Warmup Iteration   1: 7358,044 ms/op
# Warmup Iteration   2: 5406,144 ms/op
# Warmup Iteration   3: 5390,831 ms/op
# Warmup Iteration   4: 5376,344 ms/op
# Warmup Iteration   5: 5385,289 ms/op
# Warmup Iteration   6: 5385,914 ms/op
# Warmup Iteration   7: 5447,246 ms/op
# Warmup Iteration   8: 5465,073 ms/op
# Warmup Iteration   9: 5580,197 ms/op
# Warmup Iteration  10: 5476,752 ms/op
Iteration   1: 5463,186 ms/op
Iteration   2: 5455,565 ms/op
Iteration   3: 5485,815 ms/op
Iteration   4: 5429,653 ms/op
Iteration   5: 5447,491 ms/op
Iteration   6: 5459,030 ms/op
Iteration   7: 5379,927 ms/op
Iteration   8: 5401,324 ms/op
Iteration   9: 5424,636 ms/op
Iteration  10: 5529,347 ms/op


Result "benchmarkFind":
  5447,597 ±(99.9%) 64,045 ms/op [Average]
  (min, avg, max) = (5379,927, 5447,597, 5529,347), stdev = 42,362
  CI (99.9%): [5383,553, 5511,642] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 128, patternSize = 8)

# Run progress: 24,72% complete, ETA 10:34:54
# Fork: 1 of 1
# Warmup Iteration   1: 6665,449 ms/op
# Warmup Iteration   2: 7620,998 ms/op
# Warmup Iteration   3: 7696,048 ms/op
# Warmup Iteration   4: 7647,658 ms/op
# Warmup Iteration   5: 7659,347 ms/op
# Warmup Iteration   6: 7642,937 ms/op
# Warmup Iteration   7: 7640,391 ms/op
# Warmup Iteration   8: 7695,224 ms/op
# Warmup Iteration   9: 7613,517 ms/op
# Warmup Iteration  10: 7607,594 ms/op
Iteration   1: 7622,081 ms/op
Iteration   2: 7610,015 ms/op
Iteration   3: 7631,280 ms/op
Iteration   4: 7632,014 ms/op
Iteration   5: 7630,355 ms/op
Iteration   6: 7720,432 ms/op
Iteration   7: 7575,157 ms/op
Iteration   8: 7579,645 ms/op
Iteration   9: 7556,356 ms/op
Iteration  10: 7587,355 ms/op


Result "benchmarkFind":
  7614,469 ±(99.9%) 69,500 ms/op [Average]
  (min, avg, max) = (7556,356, 7614,469, 7720,432), stdev = 45,970
  CI (99.9%): [7544,969, 7683,969] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 128, patternSize = 16)

# Run progress: 24,77% complete, ETA 10:41:04
# Fork: 1 of 1
# Warmup Iteration   1: 6466,701 ms/op
# Warmup Iteration   2: 6960,798 ms/op
# Warmup Iteration   3: 6926,173 ms/op
# Warmup Iteration   4: 7051,595 ms/op
# Warmup Iteration   5: 6982,325 ms/op
# Warmup Iteration   6: 7022,508 ms/op
# Warmup Iteration   7: 7014,416 ms/op
# Warmup Iteration   8: 7005,950 ms/op
# Warmup Iteration   9: 7013,512 ms/op
# Warmup Iteration  10: 6995,099 ms/op
Iteration   1: 7009,450 ms/op
Iteration   2: 6999,814 ms/op
Iteration   3: 7105,250 ms/op
Iteration   4: 7045,921 ms/op
Iteration   5: 7069,648 ms/op
Iteration   6: 7037,690 ms/op
Iteration   7: 6994,789 ms/op
Iteration   8: 6974,885 ms/op
Iteration   9: 6960,580 ms/op
Iteration  10: 6981,098 ms/op


Result "benchmarkFind":
  7017,913 ±(99.9%) 69,296 ms/op [Average]
  (min, avg, max) = (6960,580, 7017,913, 7105,250), stdev = 45,835
  CI (99.9%): [6948,617, 7087,209] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 128, patternSize = 32)

# Run progress: 24,82% complete, ETA 10:46:34
# Fork: 1 of 1
# Warmup Iteration   1: 6934,504 ms/op
# Warmup Iteration   2: 6989,580 ms/op
# Warmup Iteration   3: 6973,528 ms/op
# Warmup Iteration   4: 7046,912 ms/op
# Warmup Iteration   5: 7133,289 ms/op
# Warmup Iteration   6: 7126,065 ms/op
# Warmup Iteration   7: 7108,885 ms/op
# Warmup Iteration   8: 7111,985 ms/op
# Warmup Iteration   9: 7132,738 ms/op
# Warmup Iteration  10: 7230,159 ms/op
Iteration   1: 7134,011 ms/op
Iteration   2: 7470,565 ms/op
Iteration   3: 7235,416 ms/op
Iteration   4: 7179,550 ms/op
Iteration   5: 7121,906 ms/op
Iteration   6: 7241,437 ms/op
Iteration   7: 7682,350 ms/op
Iteration   8: 7717,668 ms/op
Iteration   9: 7728,343 ms/op
Iteration  10: 8001,616 ms/op


Result "benchmarkFind":
  7451,286 ±(99.9%) 472,206 ms/op [Average]
  (min, avg, max) = (7121,906, 7451,286, 8001,616), stdev = 312,335
  CI (99.9%): [6979,081, 7923,492] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 128, patternSize = 64)

# Run progress: 24,86% complete, ETA 10:52:20
# Fork: 1 of 1
# Warmup Iteration   1: 6933,603 ms/op
# Warmup Iteration   2: 7398,300 ms/op
# Warmup Iteration   3: 7003,996 ms/op
# Warmup Iteration   4: 6910,527 ms/op
# Warmup Iteration   5: 6939,480 ms/op
# Warmup Iteration   6: 7151,435 ms/op
# Warmup Iteration   7: 7026,343 ms/op
# Warmup Iteration   8: 7022,415 ms/op
# Warmup Iteration   9: 7041,470 ms/op
# Warmup Iteration  10: 7049,899 ms/op
Iteration   1: 7047,176 ms/op
Iteration   2: 7015,181 ms/op
Iteration   3: 7052,043 ms/op
Iteration   4: 7017,010 ms/op
Iteration   5: 7076,082 ms/op
Iteration   6: 6988,161 ms/op
Iteration   7: 7011,883 ms/op
Iteration   8: 6985,229 ms/op
Iteration   9: 6987,086 ms/op
Iteration  10: 6973,836 ms/op


Result "benchmarkFind":
  7015,369 ±(99.9%) 50,975 ms/op [Average]
  (min, avg, max) = (6973,836, 7015,369, 7076,082), stdev = 33,717
  CI (99.9%): [6964,394, 7066,343] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 128, patternSize = 128)

# Run progress: 24,91% complete, ETA 10:57:52
# Fork: 1 of 1
# Warmup Iteration   1: 6721,622 ms/op
# Warmup Iteration   2: 7444,076 ms/op
# Warmup Iteration   3: 7626,132 ms/op
# Warmup Iteration   4: 7596,534 ms/op
# Warmup Iteration   5: 7576,392 ms/op
# Warmup Iteration   6: 7601,522 ms/op
# Warmup Iteration   7: 7605,985 ms/op
# Warmup Iteration   8: 7599,470 ms/op
# Warmup Iteration   9: 7602,649 ms/op
# Warmup Iteration  10: 7599,224 ms/op
Iteration   1: 7661,940 ms/op
Iteration   2: 7569,562 ms/op
Iteration   3: 7554,484 ms/op
Iteration   4: 7542,042 ms/op
Iteration   5: 7560,968 ms/op
Iteration   6: 7548,469 ms/op
Iteration   7: 7607,784 ms/op
Iteration   8: 7562,662 ms/op
Iteration   9: 7672,089 ms/op
Iteration  10: 7593,204 ms/op


Result "benchmarkFind":
  7587,320 ±(99.9%) 70,306 ms/op [Average]
  (min, avg, max) = (7542,042, 7587,320, 7672,089), stdev = 46,503
  CI (99.9%): [7517,015, 7657,626] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 128, patternSize = 256)

# Run progress: 24,95% complete, ETA 11:03:52
# Fork: 1 of 1
# Warmup Iteration   1: 6889,885 ms/op
# Warmup Iteration   2: 7635,396 ms/op
# Warmup Iteration   3: 7597,918 ms/op
# Warmup Iteration   4: 7616,602 ms/op
# Warmup Iteration   5: 7656,095 ms/op
# Warmup Iteration   6: 7688,255 ms/op
# Warmup Iteration   7: 7740,537 ms/op
# Warmup Iteration   8: 7691,939 ms/op
# Warmup Iteration   9: 7651,577 ms/op
# Warmup Iteration  10: 7678,650 ms/op
Iteration   1: 7639,583 ms/op
Iteration   2: 7638,273 ms/op
Iteration   3: 7656,053 ms/op
Iteration   4: 7786,910 ms/op
Iteration   5: 7524,339 ms/op
Iteration   6: 7536,739 ms/op
Iteration   7: 7471,743 ms/op
Iteration   8: 7474,394 ms/op
Iteration   9: 7510,720 ms/op
Iteration  10: 7469,058 ms/op


Result "benchmarkFind":
  7570,781 ±(99.9%) 159,078 ms/op [Average]
  (min, avg, max) = (7469,058, 7570,781, 7786,910), stdev = 105,220
  CI (99.9%): [7411,703, 7729,859] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 2, patternSize = 2)

# Run progress: 25,00% complete, ETA 11:09:51
# Fork: 1 of 1
# Warmup Iteration   1: 15,592 ms/op
# Warmup Iteration   2: 14,950 ms/op
# Warmup Iteration   3: 14,873 ms/op
# Warmup Iteration   4: 14,957 ms/op
# Warmup Iteration   5: 14,868 ms/op
# Warmup Iteration   6: 14,822 ms/op
# Warmup Iteration   7: 14,817 ms/op
# Warmup Iteration   8: 14,864 ms/op
# Warmup Iteration   9: 14,846 ms/op
# Warmup Iteration  10: 14,889 ms/op
Iteration   1: 14,851 ms/op
Iteration   2: 14,816 ms/op
Iteration   3: 14,796 ms/op
Iteration   4: 15,989 ms/op
Iteration   5: 15,387 ms/op
Iteration   6: 15,092 ms/op
Iteration   7: 15,101 ms/op
Iteration   8: 15,207 ms/op
Iteration   9: 15,103 ms/op
Iteration  10: 15,148 ms/op


Result "benchmarkFind":
  15,149 ±(99.9%) 0,528 ms/op [Average]
  (min, avg, max) = (14,796, 15,149, 15,989), stdev = 0,349
  CI (99.9%): [14,621, 15,677] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 2, patternSize = 4)

# Run progress: 25,05% complete, ETA 11:09:15
# Fork: 1 of 1
# Warmup Iteration   1: 14,941 ms/op
# Warmup Iteration   2: 14,459 ms/op
# Warmup Iteration   3: 14,331 ms/op
# Warmup Iteration   4: 14,288 ms/op
# Warmup Iteration   5: 14,497 ms/op
# Warmup Iteration   6: 14,397 ms/op
# Warmup Iteration   7: 14,364 ms/op
# Warmup Iteration   8: 14,382 ms/op
# Warmup Iteration   9: 14,316 ms/op
# Warmup Iteration  10: 14,524 ms/op
Iteration   1: 14,365 ms/op
Iteration   2: 14,407 ms/op
Iteration   3: 14,485 ms/op
Iteration   4: 14,281 ms/op
Iteration   5: 14,569 ms/op
Iteration   6: 14,441 ms/op
Iteration   7: 14,409 ms/op
Iteration   8: 14,320 ms/op
Iteration   9: 14,406 ms/op
Iteration  10: 14,379 ms/op


Result "benchmarkFind":
  14,406 ±(99.9%) 0,123 ms/op [Average]
  (min, avg, max) = (14,281, 14,406, 14,569), stdev = 0,081
  CI (99.9%): [14,283, 14,529] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 2, patternSize = 8)

# Run progress: 25,09% complete, ETA 11:08:38
# Fork: 1 of 1
# Warmup Iteration   1: 15,125 ms/op
# Warmup Iteration   2: 14,444 ms/op
# Warmup Iteration   3: 14,567 ms/op
# Warmup Iteration   4: 14,590 ms/op
# Warmup Iteration   5: 14,414 ms/op
# Warmup Iteration   6: 14,479 ms/op
# Warmup Iteration   7: 14,447 ms/op
# Warmup Iteration   8: 14,474 ms/op
# Warmup Iteration   9: 14,459 ms/op
# Warmup Iteration  10: 14,489 ms/op
Iteration   1: 14,496 ms/op
Iteration   2: 14,409 ms/op
Iteration   3: 14,469 ms/op
Iteration   4: 14,435 ms/op
Iteration   5: 14,452 ms/op
Iteration   6: 14,455 ms/op
Iteration   7: 14,597 ms/op
Iteration   8: 14,455 ms/op
Iteration   9: 14,464 ms/op
Iteration  10: 14,475 ms/op


Result "benchmarkFind":
  14,471 ±(99.9%) 0,076 ms/op [Average]
  (min, avg, max) = (14,409, 14,471, 14,597), stdev = 0,050
  CI (99.9%): [14,395, 14,547] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 2, patternSize = 16)

# Run progress: 25,14% complete, ETA 11:08:02
# Fork: 1 of 1
# Warmup Iteration   1: 14,758 ms/op
# Warmup Iteration   2: 14,268 ms/op
# Warmup Iteration   3: 14,345 ms/op
# Warmup Iteration   4: 14,254 ms/op
# Warmup Iteration   5: 14,245 ms/op
# Warmup Iteration   6: 14,211 ms/op
# Warmup Iteration   7: 14,238 ms/op
# Warmup Iteration   8: 14,282 ms/op
# Warmup Iteration   9: 14,259 ms/op
# Warmup Iteration  10: 14,244 ms/op
Iteration   1: 14,259 ms/op
Iteration   2: 15,192 ms/op
Iteration   3: 15,138 ms/op
Iteration   4: 14,414 ms/op
Iteration   5: 14,422 ms/op
Iteration   6: 14,341 ms/op
Iteration   7: 14,585 ms/op
Iteration   8: 14,399 ms/op
Iteration   9: 14,332 ms/op
Iteration  10: 14,467 ms/op


Result "benchmarkFind":
  14,555 ±(99.9%) 0,504 ms/op [Average]
  (min, avg, max) = (14,259, 14,555, 15,192), stdev = 0,333
  CI (99.9%): [14,051, 15,059] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 2, patternSize = 32)

# Run progress: 25,18% complete, ETA 11:07:26
# Fork: 1 of 1
# Warmup Iteration   1: 15,597 ms/op
# Warmup Iteration   2: 15,095 ms/op
# Warmup Iteration   3: 14,305 ms/op
# Warmup Iteration   4: 14,288 ms/op
# Warmup Iteration   5: 14,303 ms/op
# Warmup Iteration   6: 14,166 ms/op
# Warmup Iteration   7: 14,163 ms/op
# Warmup Iteration   8: 14,172 ms/op
# Warmup Iteration   9: 14,212 ms/op
# Warmup Iteration  10: 14,174 ms/op
Iteration   1: 14,205 ms/op
Iteration   2: 14,340 ms/op
Iteration   3: 14,209 ms/op
Iteration   4: 14,222 ms/op
Iteration   5: 14,314 ms/op
Iteration   6: 14,286 ms/op
Iteration   7: 14,157 ms/op
Iteration   8: 14,123 ms/op
Iteration   9: 14,173 ms/op
Iteration  10: 14,179 ms/op


Result "benchmarkFind":
  14,221 ±(99.9%) 0,107 ms/op [Average]
  (min, avg, max) = (14,123, 14,221, 14,340), stdev = 0,071
  CI (99.9%): [14,114, 14,328] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 2, patternSize = 64)

# Run progress: 25,23% complete, ETA 11:06:49
# Fork: 1 of 1
# Warmup Iteration   1: 14,617 ms/op
# Warmup Iteration   2: 14,193 ms/op
# Warmup Iteration   3: 14,118 ms/op
# Warmup Iteration   4: 14,095 ms/op
# Warmup Iteration   5: 14,160 ms/op
# Warmup Iteration   6: 14,081 ms/op
# Warmup Iteration   7: 14,195 ms/op
# Warmup Iteration   8: 14,119 ms/op
# Warmup Iteration   9: 14,087 ms/op
# Warmup Iteration  10: 14,063 ms/op
Iteration   1: 14,057 ms/op
Iteration   2: 14,005 ms/op
Iteration   3: 14,217 ms/op
Iteration   4: 14,175 ms/op
Iteration   5: 14,075 ms/op
Iteration   6: 14,081 ms/op
Iteration   7: 16,356 ms/op
Iteration   8: 16,353 ms/op
Iteration   9: 16,373 ms/op
Iteration  10: 16,295 ms/op


Result "benchmarkFind":
  14,999 ±(99.9%) 1,753 ms/op [Average]
  (min, avg, max) = (14,005, 14,999, 16,373), stdev = 1,160
  CI (99.9%): [13,245, 16,752] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 2, patternSize = 128)

# Run progress: 25,28% complete, ETA 11:06:13
# Fork: 1 of 1
# Warmup Iteration   1: 15,080 ms/op
# Warmup Iteration   2: 14,696 ms/op
# Warmup Iteration   3: 14,389 ms/op
# Warmup Iteration   4: 14,273 ms/op
# Warmup Iteration   5: 14,380 ms/op
# Warmup Iteration   6: 14,408 ms/op
# Warmup Iteration   7: 14,415 ms/op
# Warmup Iteration   8: 14,300 ms/op
# Warmup Iteration   9: 14,232 ms/op
# Warmup Iteration  10: 14,306 ms/op
Iteration   1: 15,747 ms/op
Iteration   2: 14,335 ms/op
Iteration   3: 14,288 ms/op
Iteration   4: 14,337 ms/op
Iteration   5: 14,301 ms/op
Iteration   6: 14,213 ms/op
Iteration   7: 14,327 ms/op
Iteration   8: 14,287 ms/op
Iteration   9: 14,252 ms/op
Iteration  10: 14,344 ms/op


Result "benchmarkFind":
  14,443 ±(99.9%) 0,695 ms/op [Average]
  (min, avg, max) = (14,213, 14,443, 15,747), stdev = 0,460
  CI (99.9%): [13,748, 15,138] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 2, patternSize = 256)

# Run progress: 25,32% complete, ETA 11:05:37
# Fork: 1 of 1
# Warmup Iteration   1: 14,824 ms/op
# Warmup Iteration   2: 14,389 ms/op
# Warmup Iteration   3: 14,477 ms/op
# Warmup Iteration   4: 14,382 ms/op
# Warmup Iteration   5: 14,399 ms/op
# Warmup Iteration   6: 14,466 ms/op
# Warmup Iteration   7: 14,518 ms/op
# Warmup Iteration   8: 14,349 ms/op
# Warmup Iteration   9: 14,407 ms/op
# Warmup Iteration  10: 14,441 ms/op
Iteration   1: 14,505 ms/op
Iteration   2: 14,412 ms/op
Iteration   3: 14,470 ms/op
Iteration   4: 14,461 ms/op
Iteration   5: 14,458 ms/op
Iteration   6: 14,396 ms/op
Iteration   7: 14,410 ms/op
Iteration   8: 14,515 ms/op
Iteration   9: 14,363 ms/op
Iteration  10: 14,371 ms/op


Result "benchmarkFind":
  14,436 ±(99.9%) 0,081 ms/op [Average]
  (min, avg, max) = (14,363, 14,436, 14,515), stdev = 0,053
  CI (99.9%): [14,355, 14,517] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 8, patternSize = 2)

# Run progress: 25,37% complete, ETA 11:05:01
# Fork: 1 of 1
# Warmup Iteration   1: 59,819 ms/op
# Warmup Iteration   2: 58,907 ms/op
# Warmup Iteration   3: 58,634 ms/op
# Warmup Iteration   4: 58,992 ms/op
# Warmup Iteration   5: 58,234 ms/op
# Warmup Iteration   6: 58,490 ms/op
# Warmup Iteration   7: 59,389 ms/op
# Warmup Iteration   8: 58,373 ms/op
# Warmup Iteration   9: 58,543 ms/op
# Warmup Iteration  10: 58,661 ms/op
Iteration   1: 58,439 ms/op
Iteration   2: 58,772 ms/op
Iteration   3: 58,482 ms/op
Iteration   4: 58,618 ms/op
Iteration   5: 58,332 ms/op
Iteration   6: 58,504 ms/op
Iteration   7: 59,297 ms/op
Iteration   8: 59,024 ms/op
Iteration   9: 59,092 ms/op
Iteration  10: 59,551 ms/op


Result "benchmarkFind":
  58,811 ±(99.9%) 0,621 ms/op [Average]
  (min, avg, max) = (58,332, 58,811, 59,551), stdev = 0,411
  CI (99.9%): [58,190, 59,432] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 8, patternSize = 4)

# Run progress: 25,41% complete, ETA 11:04:26
# Fork: 1 of 1
# Warmup Iteration   1: 55,149 ms/op
# Warmup Iteration   2: 53,445 ms/op
# Warmup Iteration   3: 53,894 ms/op
# Warmup Iteration   4: 54,419 ms/op
# Warmup Iteration   5: 54,721 ms/op
# Warmup Iteration   6: 54,131 ms/op
# Warmup Iteration   7: 54,686 ms/op
# Warmup Iteration   8: 58,948 ms/op
# Warmup Iteration   9: 54,129 ms/op
# Warmup Iteration  10: 53,862 ms/op
Iteration   1: 57,732 ms/op
Iteration   2: 53,944 ms/op
Iteration   3: 53,925 ms/op
Iteration   4: 53,519 ms/op
Iteration   5: 53,401 ms/op
Iteration   6: 53,149 ms/op
Iteration   7: 54,512 ms/op
Iteration   8: 53,936 ms/op
Iteration   9: 53,952 ms/op
Iteration  10: 53,749 ms/op


Result "benchmarkFind":
  54,182 ±(99.9%) 1,968 ms/op [Average]
  (min, avg, max) = (53,149, 54,182, 57,732), stdev = 1,302
  CI (99.9%): [52,214, 56,150] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 8, patternSize = 8)

# Run progress: 25,46% complete, ETA 11:03:51
# Fork: 1 of 1
# Warmup Iteration   1: 54,823 ms/op
# Warmup Iteration   2: 54,053 ms/op
# Warmup Iteration   3: 53,341 ms/op
# Warmup Iteration   4: 53,157 ms/op
# Warmup Iteration   5: 53,116 ms/op
# Warmup Iteration   6: 53,107 ms/op
# Warmup Iteration   7: 53,013 ms/op
# Warmup Iteration   8: 53,181 ms/op
# Warmup Iteration   9: 52,844 ms/op
# Warmup Iteration  10: 53,295 ms/op
Iteration   1: 53,877 ms/op
Iteration   2: 53,959 ms/op
Iteration   3: 53,465 ms/op
Iteration   4: 53,298 ms/op
Iteration   5: 53,475 ms/op
Iteration   6: 53,498 ms/op
Iteration   7: 53,802 ms/op
Iteration   8: 53,269 ms/op
Iteration   9: 53,954 ms/op
Iteration  10: 53,643 ms/op


Result "benchmarkFind":
  53,624 ±(99.9%) 0,395 ms/op [Average]
  (min, avg, max) = (53,269, 53,624, 53,959), stdev = 0,261
  CI (99.9%): [53,229, 54,019] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 8, patternSize = 16)

# Run progress: 25,51% complete, ETA 11:03:16
# Fork: 1 of 1
# Warmup Iteration   1: 54,162 ms/op
# Warmup Iteration   2: 55,071 ms/op
# Warmup Iteration   3: 55,421 ms/op
# Warmup Iteration   4: 55,899 ms/op
# Warmup Iteration   5: 55,578 ms/op
# Warmup Iteration   6: 55,275 ms/op
# Warmup Iteration   7: 55,408 ms/op
# Warmup Iteration   8: 55,226 ms/op
# Warmup Iteration   9: 54,724 ms/op
# Warmup Iteration  10: 54,484 ms/op
Iteration   1: 54,166 ms/op
Iteration   2: 53,661 ms/op
Iteration   3: 53,722 ms/op
Iteration   4: 53,421 ms/op
Iteration   5: 53,720 ms/op
Iteration   6: 53,594 ms/op
Iteration   7: 53,866 ms/op
Iteration   8: 54,327 ms/op
Iteration   9: 53,803 ms/op
Iteration  10: 53,929 ms/op


Result "benchmarkFind":
  53,821 ±(99.9%) 0,405 ms/op [Average]
  (min, avg, max) = (53,421, 53,821, 54,327), stdev = 0,268
  CI (99.9%): [53,416, 54,226] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 8, patternSize = 32)

# Run progress: 25,55% complete, ETA 11:02:41
# Fork: 1 of 1
# Warmup Iteration   1: 54,743 ms/op
# Warmup Iteration   2: 53,546 ms/op
# Warmup Iteration   3: 53,580 ms/op
# Warmup Iteration   4: 54,020 ms/op
# Warmup Iteration   5: 57,600 ms/op
# Warmup Iteration   6: 53,500 ms/op
# Warmup Iteration   7: 53,967 ms/op
# Warmup Iteration   8: 53,871 ms/op
# Warmup Iteration   9: 53,473 ms/op
# Warmup Iteration  10: 54,286 ms/op
Iteration   1: 53,892 ms/op
Iteration   2: 53,766 ms/op
Iteration   3: 53,789 ms/op
Iteration   4: 53,695 ms/op
Iteration   5: 53,504 ms/op
Iteration   6: 53,868 ms/op
Iteration   7: 53,388 ms/op
Iteration   8: 53,228 ms/op
Iteration   9: 53,054 ms/op
Iteration  10: 53,430 ms/op


Result "benchmarkFind":
  53,561 ±(99.9%) 0,432 ms/op [Average]
  (min, avg, max) = (53,054, 53,561, 53,892), stdev = 0,286
  CI (99.9%): [53,130, 53,993] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 8, patternSize = 64)

# Run progress: 25,60% complete, ETA 11:02:06
# Fork: 1 of 1
# Warmup Iteration   1: 54,807 ms/op
# Warmup Iteration   2: 53,522 ms/op
# Warmup Iteration   3: 54,197 ms/op
# Warmup Iteration   4: 53,667 ms/op
# Warmup Iteration   5: 54,021 ms/op
# Warmup Iteration   6: 54,019 ms/op
# Warmup Iteration   7: 53,749 ms/op
# Warmup Iteration   8: 53,537 ms/op
# Warmup Iteration   9: 53,603 ms/op
# Warmup Iteration  10: 54,054 ms/op
Iteration   1: 54,189 ms/op
Iteration   2: 54,669 ms/op
Iteration   3: 54,267 ms/op
Iteration   4: 53,995 ms/op
Iteration   5: 53,814 ms/op
Iteration   6: 53,840 ms/op
Iteration   7: 53,937 ms/op
Iteration   8: 53,634 ms/op
Iteration   9: 53,808 ms/op
Iteration  10: 53,640 ms/op


Result "benchmarkFind":
  53,979 ±(99.9%) 0,482 ms/op [Average]
  (min, avg, max) = (53,634, 53,979, 54,669), stdev = 0,319
  CI (99.9%): [53,497, 54,461] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 8, patternSize = 128)

# Run progress: 25,64% complete, ETA 11:01:31
# Fork: 1 of 1
# Warmup Iteration   1: 55,701 ms/op
# Warmup Iteration   2: 53,610 ms/op
# Warmup Iteration   3: 54,545 ms/op
# Warmup Iteration   4: 54,750 ms/op
# Warmup Iteration   5: 54,708 ms/op
# Warmup Iteration   6: 55,030 ms/op
# Warmup Iteration   7: 54,733 ms/op
# Warmup Iteration   8: 54,557 ms/op
# Warmup Iteration   9: 54,560 ms/op
# Warmup Iteration  10: 54,753 ms/op
Iteration   1: 53,600 ms/op
Iteration   2: 53,836 ms/op
Iteration   3: 53,752 ms/op
Iteration   4: 53,728 ms/op
Iteration   5: 54,163 ms/op
Iteration   6: 53,895 ms/op
Iteration   7: 53,660 ms/op
Iteration   8: 53,814 ms/op
Iteration   9: 53,556 ms/op
Iteration  10: 53,861 ms/op


Result "benchmarkFind":
  53,786 ±(99.9%) 0,262 ms/op [Average]
  (min, avg, max) = (53,556, 53,786, 54,163), stdev = 0,173
  CI (99.9%): [53,524, 54,049] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 8, patternSize = 256)

# Run progress: 25,69% complete, ETA 11:00:56
# Fork: 1 of 1
# Warmup Iteration   1: 53,499 ms/op
# Warmup Iteration   2: 57,321 ms/op
# Warmup Iteration   3: 54,952 ms/op
# Warmup Iteration   4: 52,840 ms/op
# Warmup Iteration   5: 52,716 ms/op
# Warmup Iteration   6: 52,722 ms/op
# Warmup Iteration   7: 52,806 ms/op
# Warmup Iteration   8: 52,595 ms/op
# Warmup Iteration   9: 52,337 ms/op
# Warmup Iteration  10: 52,995 ms/op
Iteration   1: 52,526 ms/op
Iteration   2: 52,878 ms/op
Iteration   3: 53,217 ms/op
Iteration   4: 52,970 ms/op
Iteration   5: 53,465 ms/op
Iteration   6: 52,503 ms/op
Iteration   7: 53,801 ms/op
Iteration   8: 53,625 ms/op
Iteration   9: 53,714 ms/op
Iteration  10: 53,355 ms/op


Result "benchmarkFind":
  53,205 ±(99.9%) 0,712 ms/op [Average]
  (min, avg, max) = (52,503, 53,205, 53,801), stdev = 0,471
  CI (99.9%): [52,493, 53,918] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 32, patternSize = 2)

# Run progress: 25,74% complete, ETA 11:00:22
# Fork: 1 of 1
# Warmup Iteration   1: 262,498 ms/op
# Warmup Iteration   2: 258,441 ms/op
# Warmup Iteration   3: 257,674 ms/op
# Warmup Iteration   4: 255,688 ms/op
# Warmup Iteration   5: 253,592 ms/op
# Warmup Iteration   6: 254,166 ms/op
# Warmup Iteration   7: 255,212 ms/op
# Warmup Iteration   8: 259,031 ms/op
# Warmup Iteration   9: 255,194 ms/op
# Warmup Iteration  10: 256,205 ms/op
Iteration   1: 256,119 ms/op
Iteration   2: 255,781 ms/op
Iteration   3: 256,497 ms/op
Iteration   4: 253,712 ms/op
Iteration   5: 256,773 ms/op
Iteration   6: 256,129 ms/op
Iteration   7: 255,510 ms/op
Iteration   8: 255,465 ms/op
Iteration   9: 256,234 ms/op
Iteration  10: 255,364 ms/op


Result "benchmarkFind":
  255,758 ±(99.9%) 1,291 ms/op [Average]
  (min, avg, max) = (253,712, 255,758, 256,773), stdev = 0,854
  CI (99.9%): [254,467, 257,049] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 32, patternSize = 4)

# Run progress: 25,78% complete, ETA 10:59:47
# Fork: 1 of 1
# Warmup Iteration   1: 212,630 ms/op
# Warmup Iteration   2: 208,415 ms/op
# Warmup Iteration   3: 209,016 ms/op
# Warmup Iteration   4: 208,848 ms/op
# Warmup Iteration   5: 209,024 ms/op
# Warmup Iteration   6: 208,786 ms/op
# Warmup Iteration   7: 208,613 ms/op
# Warmup Iteration   8: 208,508 ms/op
# Warmup Iteration   9: 209,037 ms/op
# Warmup Iteration  10: 208,754 ms/op
Iteration   1: 209,689 ms/op
Iteration   2: 208,881 ms/op
Iteration   3: 208,491 ms/op
Iteration   4: 208,688 ms/op
Iteration   5: 209,415 ms/op
Iteration   6: 211,213 ms/op
Iteration   7: 207,769 ms/op
Iteration   8: 209,637 ms/op
Iteration   9: 207,660 ms/op
Iteration  10: 238,667 ms/op


Result "benchmarkFind":
  212,011 ±(99.9%) 14,246 ms/op [Average]
  (min, avg, max) = (207,660, 212,011, 238,667), stdev = 9,423
  CI (99.9%): [197,765, 226,257] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 32, patternSize = 8)

# Run progress: 25,83% complete, ETA 10:59:14
# Fork: 1 of 1
# Warmup Iteration   1: 211,656 ms/op
# Warmup Iteration   2: 210,856 ms/op
# Warmup Iteration   3: 210,922 ms/op
# Warmup Iteration   4: 212,585 ms/op
# Warmup Iteration   5: 213,736 ms/op
# Warmup Iteration   6: 212,199 ms/op
# Warmup Iteration   7: 212,900 ms/op
# Warmup Iteration   8: 211,797 ms/op
# Warmup Iteration   9: 212,701 ms/op
# Warmup Iteration  10: 212,685 ms/op
Iteration   1: 210,737 ms/op
Iteration   2: 208,478 ms/op
Iteration   3: 208,468 ms/op
Iteration   4: 209,363 ms/op
Iteration   5: 208,661 ms/op
Iteration   6: 210,426 ms/op
Iteration   7: 210,794 ms/op
Iteration   8: 211,408 ms/op
Iteration   9: 212,611 ms/op
Iteration  10: 213,601 ms/op


Result "benchmarkFind":
  210,455 ±(99.9%) 2,663 ms/op [Average]
  (min, avg, max) = (208,468, 210,455, 213,601), stdev = 1,761
  CI (99.9%): [207,792, 213,118] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 32, patternSize = 16)

# Run progress: 25,87% complete, ETA 10:58:41
# Fork: 1 of 1
# Warmup Iteration   1: 220,049 ms/op
# Warmup Iteration   2: 218,307 ms/op
# Warmup Iteration   3: 218,818 ms/op
# Warmup Iteration   4: 216,620 ms/op
# Warmup Iteration   5: 215,873 ms/op
# Warmup Iteration   6: 216,818 ms/op
# Warmup Iteration   7: 216,253 ms/op
# Warmup Iteration   8: 217,640 ms/op
# Warmup Iteration   9: 216,035 ms/op
# Warmup Iteration  10: 215,804 ms/op
Iteration   1: 218,079 ms/op
Iteration   2: 221,595 ms/op
Iteration   3: 219,464 ms/op
Iteration   4: 217,774 ms/op
Iteration   5: 221,309 ms/op
Iteration   6: 220,308 ms/op
Iteration   7: 217,710 ms/op
Iteration   8: 216,736 ms/op
Iteration   9: 216,967 ms/op
Iteration  10: 218,229 ms/op


Result "benchmarkFind":
  218,817 ±(99.9%) 2,644 ms/op [Average]
  (min, avg, max) = (216,736, 218,817, 221,595), stdev = 1,749
  CI (99.9%): [216,173, 221,461] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 32, patternSize = 32)

# Run progress: 25,92% complete, ETA 10:58:10
# Fork: 1 of 1
# Warmup Iteration   1: 227,969 ms/op
# Warmup Iteration   2: 230,086 ms/op
# Warmup Iteration   3: 229,495 ms/op
# Warmup Iteration   4: 227,942 ms/op
# Warmup Iteration   5: 227,680 ms/op
# Warmup Iteration   6: 227,637 ms/op
# Warmup Iteration   7: 227,719 ms/op
# Warmup Iteration   8: 227,547 ms/op
# Warmup Iteration   9: 228,117 ms/op
# Warmup Iteration  10: 227,540 ms/op
Iteration   1: 227,503 ms/op
Iteration   2: 227,358 ms/op
Iteration   3: 249,182 ms/op
Iteration   4: 229,098 ms/op
Iteration   5: 230,663 ms/op
Iteration   6: 228,938 ms/op
Iteration   7: 231,620 ms/op
Iteration   8: 229,278 ms/op
Iteration   9: 229,353 ms/op
Iteration  10: 228,372 ms/op


Result "benchmarkFind":
  231,137 ±(99.9%) 9,783 ms/op [Average]
  (min, avg, max) = (227,358, 231,137, 249,182), stdev = 6,471
  CI (99.9%): [221,354, 240,919] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 32, patternSize = 64)

# Run progress: 25,97% complete, ETA 10:57:43
# Fork: 1 of 1
# Warmup Iteration   1: 224,692 ms/op
# Warmup Iteration   2: 226,596 ms/op
# Warmup Iteration   3: 226,746 ms/op
# Warmup Iteration   4: 224,646 ms/op
# Warmup Iteration   5: 224,649 ms/op
# Warmup Iteration   6: 224,303 ms/op
# Warmup Iteration   7: 223,703 ms/op
# Warmup Iteration   8: 226,693 ms/op
# Warmup Iteration   9: 223,960 ms/op
# Warmup Iteration  10: 224,922 ms/op
Iteration   1: 224,139 ms/op
Iteration   2: 225,147 ms/op
Iteration   3: 224,921 ms/op
Iteration   4: 224,285 ms/op
Iteration   5: 224,757 ms/op
Iteration   6: 223,073 ms/op
Iteration   7: 229,265 ms/op
Iteration   8: 229,129 ms/op
Iteration   9: 228,384 ms/op
Iteration  10: 228,678 ms/op


Result "benchmarkFind":
  226,178 ±(99.9%) 3,613 ms/op [Average]
  (min, avg, max) = (223,073, 226,178, 229,265), stdev = 2,390
  CI (99.9%): [222,565, 229,791] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 32, patternSize = 128)

# Run progress: 26,01% complete, ETA 10:57:14
# Fork: 1 of 1
# Warmup Iteration   1: 215,312 ms/op
# Warmup Iteration   2: 211,988 ms/op
# Warmup Iteration   3: 213,400 ms/op
# Warmup Iteration   4: 210,971 ms/op
# Warmup Iteration   5: 210,113 ms/op
# Warmup Iteration   6: 210,601 ms/op
# Warmup Iteration   7: 210,155 ms/op
# Warmup Iteration   8: 210,640 ms/op
# Warmup Iteration   9: 210,142 ms/op
# Warmup Iteration  10: 210,307 ms/op
Iteration   1: 210,607 ms/op
Iteration   2: 210,282 ms/op
Iteration   3: 210,453 ms/op
Iteration   4: 210,455 ms/op
Iteration   5: 210,487 ms/op
Iteration   6: 210,399 ms/op
Iteration   7: 210,049 ms/op
Iteration   8: 209,809 ms/op
Iteration   9: 210,233 ms/op
Iteration  10: 209,953 ms/op


Result "benchmarkFind":
  210,273 ±(99.9%) 0,393 ms/op [Average]
  (min, avg, max) = (209,809, 210,273, 210,607), stdev = 0,260
  CI (99.9%): [209,880, 210,666] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 32, patternSize = 256)

# Run progress: 26,06% complete, ETA 10:56:41
# Fork: 1 of 1
# Warmup Iteration   1: 214,650 ms/op
# Warmup Iteration   2: 209,759 ms/op
# Warmup Iteration   3: 209,234 ms/op
# Warmup Iteration   4: 207,724 ms/op
# Warmup Iteration   5: 208,964 ms/op
# Warmup Iteration   6: 208,418 ms/op
# Warmup Iteration   7: 223,942 ms/op
# Warmup Iteration   8: 207,878 ms/op
# Warmup Iteration   9: 208,324 ms/op
# Warmup Iteration  10: 210,031 ms/op
Iteration   1: 207,805 ms/op
Iteration   2: 208,899 ms/op
Iteration   3: 208,168 ms/op
Iteration   4: 208,639 ms/op
Iteration   5: 211,502 ms/op
Iteration   6: 207,816 ms/op
Iteration   7: 207,351 ms/op
Iteration   8: 208,400 ms/op
Iteration   9: 207,677 ms/op
Iteration  10: 207,704 ms/op


Result "benchmarkFind":
  208,396 ±(99.9%) 1,802 ms/op [Average]
  (min, avg, max) = (207,351, 208,396, 211,502), stdev = 1,192
  CI (99.9%): [206,594, 210,198] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 128, patternSize = 2)

# Run progress: 26,10% complete, ETA 10:56:08
# Fork: 1 of 1
# Warmup Iteration   1: 1161,630 ms/op
# Warmup Iteration   2: 1141,929 ms/op
# Warmup Iteration   3: 1137,922 ms/op
# Warmup Iteration   4: 1130,681 ms/op
# Warmup Iteration   5: 1144,161 ms/op
# Warmup Iteration   6: 1143,299 ms/op
# Warmup Iteration   7: 1138,531 ms/op
# Warmup Iteration   8: 1145,268 ms/op
# Warmup Iteration   9: 1140,684 ms/op
# Warmup Iteration  10: 1135,742 ms/op
Iteration   1: 1143,389 ms/op
Iteration   2: 1142,947 ms/op
Iteration   3: 1145,442 ms/op
Iteration   4: 1139,213 ms/op
Iteration   5: 1137,716 ms/op
Iteration   6: 1134,822 ms/op
Iteration   7: 1144,341 ms/op
Iteration   8: 1139,223 ms/op
Iteration   9: 1130,620 ms/op
Iteration  10: 1134,275 ms/op


Result "benchmarkFind":
  1139,199 ±(99.9%) 7,410 ms/op [Average]
  (min, avg, max) = (1130,620, 1139,199, 1145,442), stdev = 4,901
  CI (99.9%): [1131,788, 1146,609] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 128, patternSize = 4)

# Run progress: 26,15% complete, ETA 10:55:44
# Fork: 1 of 1
# Warmup Iteration   1: 846,983 ms/op
# Warmup Iteration   2: 803,272 ms/op
# Warmup Iteration   3: 791,283 ms/op
# Warmup Iteration   4: 793,304 ms/op
# Warmup Iteration   5: 787,296 ms/op
# Warmup Iteration   6: 783,271 ms/op
# Warmup Iteration   7: 782,148 ms/op
# Warmup Iteration   8: 786,069 ms/op
# Warmup Iteration   9: 785,284 ms/op
# Warmup Iteration  10: 783,907 ms/op
Iteration   1: 788,089 ms/op
Iteration   2: 782,725 ms/op
Iteration   3: 799,751 ms/op
Iteration   4: 801,997 ms/op
Iteration   5: 779,111 ms/op
Iteration   6: 779,869 ms/op
Iteration   7: 775,833 ms/op
Iteration   8: 775,286 ms/op
Iteration   9: 774,807 ms/op
Iteration  10: 787,713 ms/op


Result "benchmarkFind":
  784,518 ±(99.9%) 14,861 ms/op [Average]
  (min, avg, max) = (774,807, 784,518, 801,997), stdev = 9,830
  CI (99.9%): [769,657, 799,379] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 128, patternSize = 8)

# Run progress: 26,19% complete, ETA 10:55:41
# Fork: 1 of 1
# Warmup Iteration   1: 839,959 ms/op
# Warmup Iteration   2: 844,093 ms/op
# Warmup Iteration   3: 845,840 ms/op
# Warmup Iteration   4: 840,248 ms/op
# Warmup Iteration   5: 838,738 ms/op
# Warmup Iteration   6: 839,459 ms/op
# Warmup Iteration   7: 839,145 ms/op
# Warmup Iteration   8: 837,911 ms/op
# Warmup Iteration   9: 838,043 ms/op
# Warmup Iteration  10: 839,959 ms/op
Iteration   1: 840,143 ms/op
Iteration   2: 837,642 ms/op
Iteration   3: 838,266 ms/op
Iteration   4: 841,095 ms/op
Iteration   5: 838,707 ms/op
Iteration   6: 837,819 ms/op
Iteration   7: 840,964 ms/op
Iteration   8: 836,733 ms/op
Iteration   9: 840,797 ms/op
Iteration  10: 838,847 ms/op


Result "benchmarkFind":
  839,101 ±(99.9%) 2,348 ms/op [Average]
  (min, avg, max) = (836,733, 839,101, 841,095), stdev = 1,553
  CI (99.9%): [836,754, 841,449] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 128, patternSize = 16)

# Run progress: 26,24% complete, ETA 10:55:43
# Fork: 1 of 1
# Warmup Iteration   1: 810,554 ms/op
# Warmup Iteration   2: 770,507 ms/op
# Warmup Iteration   3: 768,816 ms/op
# Warmup Iteration   4: 769,656 ms/op
# Warmup Iteration   5: 768,337 ms/op
# Warmup Iteration   6: 774,936 ms/op
# Warmup Iteration   7: 769,052 ms/op
# Warmup Iteration   8: 775,955 ms/op
# Warmup Iteration   9: 775,646 ms/op
# Warmup Iteration  10: 835,648 ms/op
Iteration   1: 786,271 ms/op
Iteration   2: 783,347 ms/op
Iteration   3: 794,539 ms/op
Iteration   4: 782,510 ms/op
Iteration   5: 778,027 ms/op
Iteration   6: 781,422 ms/op
Iteration   7: 796,783 ms/op
Iteration   8: 784,663 ms/op
Iteration   9: 775,066 ms/op
Iteration  10: 782,621 ms/op


Result "benchmarkFind":
  784,525 ±(99.9%) 10,129 ms/op [Average]
  (min, avg, max) = (775,066, 784,525, 796,783), stdev = 6,700
  CI (99.9%): [774,395, 794,654] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 128, patternSize = 32)

# Run progress: 26,29% complete, ETA 10:55:39
# Fork: 1 of 1
# Warmup Iteration   1: 864,947 ms/op
# Warmup Iteration   2: 894,372 ms/op
# Warmup Iteration   3: 865,711 ms/op
# Warmup Iteration   4: 859,850 ms/op
# Warmup Iteration   5: 865,014 ms/op
# Warmup Iteration   6: 865,551 ms/op
# Warmup Iteration   7: 861,406 ms/op
# Warmup Iteration   8: 861,380 ms/op
# Warmup Iteration   9: 862,477 ms/op
# Warmup Iteration  10: 863,801 ms/op
Iteration   1: 859,473 ms/op
Iteration   2: 859,442 ms/op
Iteration   3: 858,871 ms/op
Iteration   4: 859,495 ms/op
Iteration   5: 857,037 ms/op
Iteration   6: 861,715 ms/op
Iteration   7: 862,647 ms/op
Iteration   8: 859,453 ms/op
Iteration   9: 856,582 ms/op
Iteration  10: 861,189 ms/op


Result "benchmarkFind":
  859,590 ±(99.9%) 2,876 ms/op [Average]
  (min, avg, max) = (856,582, 859,590, 862,647), stdev = 1,902
  CI (99.9%): [856,715, 862,466] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 128, patternSize = 64)

# Run progress: 26,33% complete, ETA 10:55:44
# Fork: 1 of 1
# Warmup Iteration   1: 848,865 ms/op
# Warmup Iteration   2: 847,815 ms/op
# Warmup Iteration   3: 850,206 ms/op
# Warmup Iteration   4: 845,193 ms/op
# Warmup Iteration   5: 904,930 ms/op
# Warmup Iteration   6: 846,511 ms/op
# Warmup Iteration   7: 841,668 ms/op
# Warmup Iteration   8: 846,294 ms/op
# Warmup Iteration   9: 845,974 ms/op
# Warmup Iteration  10: 846,867 ms/op
Iteration   1: 841,896 ms/op
Iteration   2: 845,646 ms/op
Iteration   3: 847,072 ms/op
Iteration   4: 854,112 ms/op
Iteration   5: 849,924 ms/op
Iteration   6: 849,327 ms/op
Iteration   7: 854,703 ms/op
Iteration   8: 852,507 ms/op
Iteration   9: 847,243 ms/op
Iteration  10: 845,374 ms/op


Result "benchmarkFind":
  848,780 ±(99.9%) 6,236 ms/op [Average]
  (min, avg, max) = (841,896, 848,780, 854,703), stdev = 4,125
  CI (99.9%): [842,545, 855,016] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 128, patternSize = 128)

# Run progress: 26,38% complete, ETA 10:55:47
# Fork: 1 of 1
# Warmup Iteration   1: 858,164 ms/op
# Warmup Iteration   2: 892,198 ms/op
# Warmup Iteration   3: 887,361 ms/op
# Warmup Iteration   4: 887,734 ms/op
# Warmup Iteration   5: 895,293 ms/op
# Warmup Iteration   6: 888,889 ms/op
# Warmup Iteration   7: 891,017 ms/op
# Warmup Iteration   8: 885,580 ms/op
# Warmup Iteration   9: 885,274 ms/op
# Warmup Iteration  10: 888,742 ms/op
Iteration   1: 891,504 ms/op
Iteration   2: 890,703 ms/op
Iteration   3: 887,617 ms/op
Iteration   4: 889,715 ms/op
Iteration   5: 888,680 ms/op
Iteration   6: 891,369 ms/op
Iteration   7: 885,155 ms/op
Iteration   8: 885,817 ms/op
Iteration   9: 922,134 ms/op
Iteration  10: 873,605 ms/op


Result "benchmarkFind":
  890,630 ±(99.9%) 18,520 ms/op [Average]
  (min, avg, max) = (873,605, 890,630, 922,134), stdev = 12,250
  CI (99.9%): [872,110, 909,150] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 128, patternSize = 256)

# Run progress: 26,42% complete, ETA 10:55:55
# Fork: 1 of 1
# Warmup Iteration   1: 890,489 ms/op
# Warmup Iteration   2: 917,416 ms/op
# Warmup Iteration   3: 921,253 ms/op
# Warmup Iteration   4: 914,778 ms/op
# Warmup Iteration   5: 921,688 ms/op
# Warmup Iteration   6: 917,037 ms/op
# Warmup Iteration   7: 915,784 ms/op
# Warmup Iteration   8: 922,335 ms/op
# Warmup Iteration   9: 922,639 ms/op
# Warmup Iteration  10: 929,961 ms/op
Iteration   1: 921,184 ms/op
Iteration   2: 926,785 ms/op
Iteration   3: 924,783 ms/op
Iteration   4: 920,303 ms/op
Iteration   5: 922,847 ms/op
Iteration   6: 923,172 ms/op
Iteration   7: 920,288 ms/op
Iteration   8: 924,481 ms/op
Iteration   9: 921,843 ms/op
Iteration  10: 919,025 ms/op


Result "benchmarkFind":
  922,471 ±(99.9%) 3,635 ms/op [Average]
  (min, avg, max) = (919,025, 922,471, 926,785), stdev = 2,404
  CI (99.9%): [918,836, 926,106] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 2, patternSize = 2)

# Run progress: 26,47% complete, ETA 10:56:06
# Fork: 1 of 1
# Warmup Iteration   1: 65,268 ms/op
# Warmup Iteration   2: 64,835 ms/op
# Warmup Iteration   3: 64,410 ms/op
# Warmup Iteration   4: 64,585 ms/op
# Warmup Iteration   5: 64,607 ms/op
# Warmup Iteration   6: 64,473 ms/op
# Warmup Iteration   7: 60,315 ms/op
# Warmup Iteration   8: 58,633 ms/op
# Warmup Iteration   9: 58,618 ms/op
# Warmup Iteration  10: 58,359 ms/op
Iteration   1: 58,491 ms/op
Iteration   2: 62,563 ms/op
Iteration   3: 64,135 ms/op
Iteration   4: 64,273 ms/op
Iteration   5: 64,003 ms/op
Iteration   6: 64,850 ms/op
Iteration   7: 58,259 ms/op
Iteration   8: 58,334 ms/op
Iteration   9: 61,268 ms/op
Iteration  10: 59,039 ms/op


Result "benchmarkFind":
  61,521 ±(99.9%) 4,185 ms/op [Average]
  (min, avg, max) = (58,259, 61,521, 64,850), stdev = 2,768
  CI (99.9%): [57,337, 65,706] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 2, patternSize = 4)

# Run progress: 26,52% complete, ETA 10:55:32
# Fork: 1 of 1
# Warmup Iteration   1: 55,362 ms/op
# Warmup Iteration   2: 56,679 ms/op
# Warmup Iteration   3: 59,744 ms/op
# Warmup Iteration   4: 55,436 ms/op
# Warmup Iteration   5: 55,579 ms/op
# Warmup Iteration   6: 55,078 ms/op
# Warmup Iteration   7: 56,647 ms/op
# Warmup Iteration   8: 54,796 ms/op
# Warmup Iteration   9: 55,364 ms/op
# Warmup Iteration  10: 54,955 ms/op
Iteration   1: 54,978 ms/op
Iteration   2: 54,987 ms/op
Iteration   3: 55,055 ms/op
Iteration   4: 54,848 ms/op
Iteration   5: 55,133 ms/op
Iteration   6: 55,081 ms/op
Iteration   7: 55,036 ms/op
Iteration   8: 54,596 ms/op
Iteration   9: 55,120 ms/op
Iteration  10: 55,309 ms/op


Result "benchmarkFind":
  55,014 ±(99.9%) 0,287 ms/op [Average]
  (min, avg, max) = (54,596, 55,014, 55,309), stdev = 0,190
  CI (99.9%): [54,728, 55,301] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 2, patternSize = 8)

# Run progress: 26,56% complete, ETA 10:54:59
# Fork: 1 of 1
# Warmup Iteration   1: 56,852 ms/op
# Warmup Iteration   2: 55,799 ms/op
# Warmup Iteration   3: 55,415 ms/op
# Warmup Iteration   4: 55,269 ms/op
# Warmup Iteration   5: 55,778 ms/op
# Warmup Iteration   6: 55,379 ms/op
# Warmup Iteration   7: 56,067 ms/op
# Warmup Iteration   8: 56,111 ms/op
# Warmup Iteration   9: 55,991 ms/op
# Warmup Iteration  10: 55,540 ms/op
Iteration   1: 55,691 ms/op
Iteration   2: 55,407 ms/op
Iteration   3: 55,554 ms/op
Iteration   4: 55,795 ms/op
Iteration   5: 55,603 ms/op
Iteration   6: 55,408 ms/op
Iteration   7: 55,659 ms/op
Iteration   8: 55,374 ms/op
Iteration   9: 55,728 ms/op
Iteration  10: 55,988 ms/op


Result "benchmarkFind":
  55,621 ±(99.9%) 0,294 ms/op [Average]
  (min, avg, max) = (55,374, 55,621, 55,988), stdev = 0,194
  CI (99.9%): [55,327, 55,914] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 2, patternSize = 16)

# Run progress: 26,61% complete, ETA 10:54:25
# Fork: 1 of 1
# Warmup Iteration   1: 57,242 ms/op
# Warmup Iteration   2: 56,311 ms/op
# Warmup Iteration   3: 54,894 ms/op
# Warmup Iteration   4: 55,845 ms/op
# Warmup Iteration   5: 55,352 ms/op
# Warmup Iteration   6: 55,357 ms/op
# Warmup Iteration   7: 55,105 ms/op
# Warmup Iteration   8: 55,084 ms/op
# Warmup Iteration   9: 54,910 ms/op
# Warmup Iteration  10: 55,745 ms/op
Iteration   1: 55,513 ms/op
Iteration   2: 55,130 ms/op
Iteration   3: 54,698 ms/op
Iteration   4: 55,416 ms/op
Iteration   5: 55,452 ms/op
Iteration   6: 59,937 ms/op
Iteration   7: 55,136 ms/op
Iteration   8: 55,126 ms/op
Iteration   9: 55,165 ms/op
Iteration  10: 55,218 ms/op


Result "benchmarkFind":
  55,679 ±(99.9%) 2,288 ms/op [Average]
  (min, avg, max) = (54,698, 55,679, 59,937), stdev = 1,514
  CI (99.9%): [53,391, 57,968] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 2, patternSize = 32)

# Run progress: 26,65% complete, ETA 10:53:51
# Fork: 1 of 1
# Warmup Iteration   1: 55,132 ms/op
# Warmup Iteration   2: 54,648 ms/op
# Warmup Iteration   3: 54,420 ms/op
# Warmup Iteration   4: 54,824 ms/op
# Warmup Iteration   5: 54,702 ms/op
# Warmup Iteration   6: 54,595 ms/op
# Warmup Iteration   7: 54,663 ms/op
# Warmup Iteration   8: 54,822 ms/op
# Warmup Iteration   9: 54,615 ms/op
# Warmup Iteration  10: 54,674 ms/op
Iteration   1: 54,626 ms/op
Iteration   2: 54,764 ms/op
Iteration   3: 54,694 ms/op
Iteration   4: 54,907 ms/op
Iteration   5: 54,852 ms/op
Iteration   6: 54,600 ms/op
Iteration   7: 54,311 ms/op
Iteration   8: 54,637 ms/op
Iteration   9: 54,292 ms/op
Iteration  10: 54,327 ms/op


Result "benchmarkFind":
  54,601 ±(99.9%) 0,337 ms/op [Average]
  (min, avg, max) = (54,292, 54,601, 54,907), stdev = 0,223
  CI (99.9%): [54,264, 54,938] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 2, patternSize = 64)

# Run progress: 26,70% complete, ETA 10:53:18
# Fork: 1 of 1
# Warmup Iteration   1: 56,649 ms/op
# Warmup Iteration   2: 54,969 ms/op
# Warmup Iteration   3: 55,346 ms/op
# Warmup Iteration   4: 55,055 ms/op
# Warmup Iteration   5: 55,056 ms/op
# Warmup Iteration   6: 55,103 ms/op
# Warmup Iteration   7: 55,168 ms/op
# Warmup Iteration   8: 55,593 ms/op
# Warmup Iteration   9: 55,332 ms/op
# Warmup Iteration  10: 55,323 ms/op
Iteration   1: 55,252 ms/op
Iteration   2: 56,176 ms/op
Iteration   3: 55,419 ms/op
Iteration   4: 55,154 ms/op
Iteration   5: 55,076 ms/op
Iteration   6: 55,506 ms/op
Iteration   7: 54,888 ms/op
Iteration   8: 55,010 ms/op
Iteration   9: 55,205 ms/op
Iteration  10: 54,650 ms/op


Result "benchmarkFind":
  55,234 ±(99.9%) 0,625 ms/op [Average]
  (min, avg, max) = (54,650, 55,234, 56,176), stdev = 0,414
  CI (99.9%): [54,608, 55,859] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 2, patternSize = 128)

# Run progress: 26,75% complete, ETA 10:52:45
# Fork: 1 of 1
# Warmup Iteration   1: 60,718 ms/op
# Warmup Iteration   2: 59,633 ms/op
# Warmup Iteration   3: 59,580 ms/op
# Warmup Iteration   4: 62,549 ms/op
# Warmup Iteration   5: 63,641 ms/op
# Warmup Iteration   6: 63,271 ms/op
# Warmup Iteration   7: 63,448 ms/op
# Warmup Iteration   8: 61,355 ms/op
# Warmup Iteration   9: 55,352 ms/op
# Warmup Iteration  10: 56,185 ms/op
Iteration   1: 55,582 ms/op
Iteration   2: 58,589 ms/op
Iteration   3: 54,705 ms/op
Iteration   4: 54,786 ms/op
Iteration   5: 54,588 ms/op
Iteration   6: 54,646 ms/op
Iteration   7: 54,485 ms/op
Iteration   8: 54,564 ms/op
Iteration   9: 54,576 ms/op
Iteration  10: 54,621 ms/op


Result "benchmarkFind":
  55,114 ±(99.9%) 1,905 ms/op [Average]
  (min, avg, max) = (54,485, 55,114, 58,589), stdev = 1,260
  CI (99.9%): [53,209, 57,020] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 2, patternSize = 256)

# Run progress: 26,79% complete, ETA 10:52:11
# Fork: 1 of 1
# Warmup Iteration   1: 57,825 ms/op
# Warmup Iteration   2: 55,921 ms/op
# Warmup Iteration   3: 56,053 ms/op
# Warmup Iteration   4: 55,215 ms/op
# Warmup Iteration   5: 55,308 ms/op
# Warmup Iteration   6: 55,484 ms/op
# Warmup Iteration   7: 55,835 ms/op
# Warmup Iteration   8: 54,845 ms/op
# Warmup Iteration   9: 54,717 ms/op
# Warmup Iteration  10: 54,975 ms/op
Iteration   1: 55,246 ms/op
Iteration   2: 55,314 ms/op
Iteration   3: 55,825 ms/op
Iteration   4: 55,569 ms/op
Iteration   5: 55,494 ms/op
Iteration   6: 55,988 ms/op
Iteration   7: 55,408 ms/op
Iteration   8: 55,207 ms/op
Iteration   9: 55,429 ms/op
Iteration  10: 55,372 ms/op


Result "benchmarkFind":
  55,485 ±(99.9%) 0,377 ms/op [Average]
  (min, avg, max) = (55,207, 55,485, 55,988), stdev = 0,249
  CI (99.9%): [55,108, 55,862] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 8, patternSize = 2)

# Run progress: 26,84% complete, ETA 10:51:37
# Fork: 1 of 1
# Warmup Iteration   1: 206,865 ms/op
# Warmup Iteration   2: 201,221 ms/op
# Warmup Iteration   3: 201,278 ms/op
# Warmup Iteration   4: 201,648 ms/op
# Warmup Iteration   5: 201,613 ms/op
# Warmup Iteration   6: 201,867 ms/op
# Warmup Iteration   7: 201,248 ms/op
# Warmup Iteration   8: 201,041 ms/op
# Warmup Iteration   9: 200,728 ms/op
# Warmup Iteration  10: 201,049 ms/op
Iteration   1: 201,364 ms/op
Iteration   2: 201,250 ms/op
Iteration   3: 201,187 ms/op
Iteration   4: 201,278 ms/op
Iteration   5: 201,047 ms/op
Iteration   6: 201,080 ms/op
Iteration   7: 201,078 ms/op
Iteration   8: 200,822 ms/op
Iteration   9: 201,338 ms/op
Iteration  10: 200,991 ms/op


Result "benchmarkFind":
  201,144 ±(99.9%) 0,258 ms/op [Average]
  (min, avg, max) = (200,822, 201,144, 201,364), stdev = 0,171
  CI (99.9%): [200,885, 201,402] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 8, patternSize = 4)

# Run progress: 26,88% complete, ETA 10:51:02
# Fork: 1 of 1
# Warmup Iteration   1: 206,490 ms/op
# Warmup Iteration   2: 208,474 ms/op
# Warmup Iteration   3: 211,342 ms/op
# Warmup Iteration   4: 210,517 ms/op
# Warmup Iteration   5: 210,705 ms/op
# Warmup Iteration   6: 210,089 ms/op
# Warmup Iteration   7: 209,440 ms/op
# Warmup Iteration   8: 222,049 ms/op
# Warmup Iteration   9: 216,241 ms/op
# Warmup Iteration  10: 207,690 ms/op
Iteration   1: 209,248 ms/op
Iteration   2: 208,359 ms/op
Iteration   3: 208,547 ms/op
Iteration   4: 210,444 ms/op
Iteration   5: 208,405 ms/op
Iteration   6: 208,067 ms/op
Iteration   7: 218,427 ms/op
Iteration   8: 219,596 ms/op
Iteration   9: 216,547 ms/op
Iteration  10: 212,258 ms/op


Result "benchmarkFind":
  211,990 ±(99.9%) 6,823 ms/op [Average]
  (min, avg, max) = (208,067, 211,990, 219,596), stdev = 4,513
  CI (99.9%): [205,167, 218,813] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 8, patternSize = 8)

# Run progress: 26,93% complete, ETA 10:50:30
# Fork: 1 of 1
# Warmup Iteration   1: 203,782 ms/op
# Warmup Iteration   2: 205,478 ms/op
# Warmup Iteration   3: 204,463 ms/op
# Warmup Iteration   4: 204,303 ms/op
# Warmup Iteration   5: 208,247 ms/op
# Warmup Iteration   6: 206,776 ms/op
# Warmup Iteration   7: 208,449 ms/op
# Warmup Iteration   8: 205,865 ms/op
# Warmup Iteration   9: 209,809 ms/op
# Warmup Iteration  10: 207,437 ms/op
Iteration   1: 207,902 ms/op
Iteration   2: 204,869 ms/op
Iteration   3: 205,532 ms/op
Iteration   4: 205,226 ms/op
Iteration   5: 204,974 ms/op
Iteration   6: 205,832 ms/op
Iteration   7: 206,426 ms/op
Iteration   8: 208,270 ms/op
Iteration   9: 205,359 ms/op
Iteration  10: 206,414 ms/op


Result "benchmarkFind":
  206,080 ±(99.9%) 1,792 ms/op [Average]
  (min, avg, max) = (204,869, 206,080, 208,270), stdev = 1,185
  CI (99.9%): [204,288, 207,873] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 8, patternSize = 16)

# Run progress: 26,98% complete, ETA 10:49:57
# Fork: 1 of 1
# Warmup Iteration   1: 204,949 ms/op
# Warmup Iteration   2: 205,375 ms/op
# Warmup Iteration   3: 205,152 ms/op
# Warmup Iteration   4: 204,442 ms/op
# Warmup Iteration   5: 205,864 ms/op
# Warmup Iteration   6: 205,510 ms/op
# Warmup Iteration   7: 206,653 ms/op
# Warmup Iteration   8: 205,413 ms/op
# Warmup Iteration   9: 204,642 ms/op
# Warmup Iteration  10: 207,227 ms/op
Iteration   1: 205,191 ms/op
Iteration   2: 205,795 ms/op
Iteration   3: 204,960 ms/op
Iteration   4: 205,323 ms/op
Iteration   5: 205,448 ms/op
Iteration   6: 205,878 ms/op
Iteration   7: 204,496 ms/op
Iteration   8: 204,855 ms/op
Iteration   9: 204,381 ms/op
Iteration  10: 206,482 ms/op


Result "benchmarkFind":
  205,281 ±(99.9%) 0,984 ms/op [Average]
  (min, avg, max) = (204,381, 205,281, 206,482), stdev = 0,651
  CI (99.9%): [204,297, 206,265] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 8, patternSize = 32)

# Run progress: 27,02% complete, ETA 10:49:23
# Fork: 1 of 1
# Warmup Iteration   1: 204,857 ms/op
# Warmup Iteration   2: 207,436 ms/op
# Warmup Iteration   3: 205,040 ms/op
# Warmup Iteration   4: 205,669 ms/op
# Warmup Iteration   5: 221,018 ms/op
# Warmup Iteration   6: 205,361 ms/op
# Warmup Iteration   7: 205,343 ms/op
# Warmup Iteration   8: 205,587 ms/op
# Warmup Iteration   9: 205,685 ms/op
# Warmup Iteration  10: 205,229 ms/op
Iteration   1: 204,980 ms/op
Iteration   2: 203,935 ms/op
Iteration   3: 206,499 ms/op
Iteration   4: 203,920 ms/op
Iteration   5: 205,598 ms/op
Iteration   6: 205,284 ms/op
Iteration   7: 207,800 ms/op
Iteration   8: 207,537 ms/op
Iteration   9: 208,274 ms/op
Iteration  10: 206,729 ms/op


Result "benchmarkFind":
  206,056 ±(99.9%) 2,355 ms/op [Average]
  (min, avg, max) = (203,920, 206,056, 208,274), stdev = 1,557
  CI (99.9%): [203,701, 208,410] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 8, patternSize = 64)

# Run progress: 27,07% complete, ETA 10:48:49
# Fork: 1 of 1
# Warmup Iteration   1: 207,489 ms/op
# Warmup Iteration   2: 209,631 ms/op
# Warmup Iteration   3: 210,796 ms/op
# Warmup Iteration   4: 210,370 ms/op
# Warmup Iteration   5: 213,892 ms/op
# Warmup Iteration   6: 212,461 ms/op
# Warmup Iteration   7: 214,844 ms/op
# Warmup Iteration   8: 215,273 ms/op
# Warmup Iteration   9: 214,283 ms/op
# Warmup Iteration  10: 214,875 ms/op
Iteration   1: 219,944 ms/op
Iteration   2: 220,859 ms/op
Iteration   3: 219,206 ms/op
Iteration   4: 221,168 ms/op
Iteration   5: 219,358 ms/op
Iteration   6: 220,337 ms/op
Iteration   7: 207,904 ms/op
Iteration   8: 207,456 ms/op
Iteration   9: 207,143 ms/op
Iteration  10: 206,739 ms/op


Result "benchmarkFind":
  215,011 ±(99.9%) 10,069 ms/op [Average]
  (min, avg, max) = (206,739, 215,011, 221,168), stdev = 6,660
  CI (99.9%): [204,942, 225,080] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 8, patternSize = 128)

# Run progress: 27,11% complete, ETA 10:48:18
# Fork: 1 of 1
# Warmup Iteration   1: 210,037 ms/op
# Warmup Iteration   2: 212,991 ms/op
# Warmup Iteration   3: 213,399 ms/op
# Warmup Iteration   4: 215,390 ms/op
# Warmup Iteration   5: 217,612 ms/op
# Warmup Iteration   6: 215,867 ms/op
# Warmup Iteration   7: 215,501 ms/op
# Warmup Iteration   8: 216,401 ms/op
# Warmup Iteration   9: 216,575 ms/op
# Warmup Iteration  10: 214,876 ms/op
Iteration   1: 216,006 ms/op
Iteration   2: 217,737 ms/op
Iteration   3: 216,398 ms/op
Iteration   4: 216,451 ms/op
Iteration   5: 214,753 ms/op
Iteration   6: 215,799 ms/op
Iteration   7: 214,185 ms/op
Iteration   8: 213,125 ms/op
Iteration   9: 212,485 ms/op
Iteration  10: 227,957 ms/op


Result "benchmarkFind":
  216,490 ±(99.9%) 6,560 ms/op [Average]
  (min, avg, max) = (212,485, 216,490, 227,957), stdev = 4,339
  CI (99.9%): [209,929, 223,050] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 8, patternSize = 256)

# Run progress: 27,16% complete, ETA 10:47:47
# Fork: 1 of 1
# Warmup Iteration   1: 209,769 ms/op
# Warmup Iteration   2: 215,559 ms/op
# Warmup Iteration   3: 215,191 ms/op
# Warmup Iteration   4: 214,630 ms/op
# Warmup Iteration   5: 217,278 ms/op
# Warmup Iteration   6: 216,466 ms/op
# Warmup Iteration   7: 219,940 ms/op
# Warmup Iteration   8: 215,362 ms/op
# Warmup Iteration   9: 215,772 ms/op
# Warmup Iteration  10: 215,307 ms/op
Iteration   1: 214,876 ms/op
Iteration   2: 214,305 ms/op
Iteration   3: 216,183 ms/op
Iteration   4: 214,249 ms/op
Iteration   5: 213,264 ms/op
Iteration   6: 213,080 ms/op
Iteration   7: 215,012 ms/op
Iteration   8: 217,556 ms/op
Iteration   9: 214,244 ms/op
Iteration  10: 214,872 ms/op


Result "benchmarkFind":
  214,764 ±(99.9%) 1,998 ms/op [Average]
  (min, avg, max) = (213,080, 214,764, 217,556), stdev = 1,322
  CI (99.9%): [212,766, 216,762] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 32, patternSize = 2)

# Run progress: 27,21% complete, ETA 10:47:16
# Fork: 1 of 1
# Warmup Iteration   1: 923,211 ms/op
# Warmup Iteration   2: 949,416 ms/op
# Warmup Iteration   3: 953,626 ms/op
# Warmup Iteration   4: 952,099 ms/op
# Warmup Iteration   5: 942,314 ms/op
# Warmup Iteration   6: 955,061 ms/op
# Warmup Iteration   7: 948,777 ms/op
# Warmup Iteration   8: 945,202 ms/op
# Warmup Iteration   9: 943,687 ms/op
# Warmup Iteration  10: 942,957 ms/op
Iteration   1: 948,252 ms/op
Iteration   2: 944,350 ms/op
Iteration   3: 947,512 ms/op
Iteration   4: 949,716 ms/op
Iteration   5: 947,969 ms/op
Iteration   6: 953,785 ms/op
Iteration   7: 943,280 ms/op
Iteration   8: 942,398 ms/op
Iteration   9: 944,030 ms/op
Iteration  10: 979,975 ms/op


Result "benchmarkFind":
  950,127 ±(99.9%) 16,689 ms/op [Average]
  (min, avg, max) = (942,398, 950,127, 979,975), stdev = 11,038
  CI (99.9%): [933,438, 966,815] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 32, patternSize = 4)

# Run progress: 27,25% complete, ETA 10:47:29
# Fork: 1 of 1
# Warmup Iteration   1: 829,520 ms/op
# Warmup Iteration   2: 828,273 ms/op
# Warmup Iteration   3: 832,127 ms/op
# Warmup Iteration   4: 833,500 ms/op
# Warmup Iteration   5: 827,799 ms/op
# Warmup Iteration   6: 830,200 ms/op
# Warmup Iteration   7: 824,871 ms/op
# Warmup Iteration   8: 828,843 ms/op
# Warmup Iteration   9: 823,063 ms/op
# Warmup Iteration  10: 821,427 ms/op
Iteration   1: 823,873 ms/op
Iteration   2: 830,362 ms/op
Iteration   3: 829,106 ms/op
Iteration   4: 826,680 ms/op
Iteration   5: 834,298 ms/op
Iteration   6: 828,072 ms/op
Iteration   7: 825,810 ms/op
Iteration   8: 821,285 ms/op
Iteration   9: 821,798 ms/op
Iteration  10: 826,820 ms/op


Result "benchmarkFind":
  826,810 ±(99.9%) 5,981 ms/op [Average]
  (min, avg, max) = (821,285, 826,810, 834,298), stdev = 3,956
  CI (99.9%): [820,830, 832,791] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 32, patternSize = 8)

# Run progress: 27,30% complete, ETA 10:47:29
# Fork: 1 of 1
# Warmup Iteration   1: 827,551 ms/op
# Warmup Iteration   2: 835,513 ms/op
# Warmup Iteration   3: 837,651 ms/op
# Warmup Iteration   4: 838,769 ms/op
# Warmup Iteration   5: 840,778 ms/op
# Warmup Iteration   6: 840,776 ms/op
# Warmup Iteration   7: 840,331 ms/op
# Warmup Iteration   8: 837,996 ms/op
# Warmup Iteration   9: 835,767 ms/op
# Warmup Iteration  10: 840,374 ms/op
Iteration   1: 840,224 ms/op
Iteration   2: 836,068 ms/op
Iteration   3: 840,277 ms/op
Iteration   4: 849,591 ms/op
Iteration   5: 859,672 ms/op
Iteration   6: 838,019 ms/op
Iteration   7: 824,354 ms/op
Iteration   8: 825,144 ms/op
Iteration   9: 826,594 ms/op
Iteration  10: 826,704 ms/op


Result "benchmarkFind":
  836,665 ±(99.9%) 17,525 ms/op [Average]
  (min, avg, max) = (824,354, 836,665, 859,672), stdev = 11,592
  CI (99.9%): [819,140, 854,189] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 32, patternSize = 16)

# Run progress: 27,34% complete, ETA 10:47:30
# Fork: 1 of 1
# Warmup Iteration   1: 823,086 ms/op
# Warmup Iteration   2: 816,739 ms/op
# Warmup Iteration   3: 822,396 ms/op
# Warmup Iteration   4: 823,290 ms/op
# Warmup Iteration   5: 825,454 ms/op
# Warmup Iteration   6: 819,057 ms/op
# Warmup Iteration   7: 821,735 ms/op
# Warmup Iteration   8: 826,188 ms/op
# Warmup Iteration   9: 819,532 ms/op
# Warmup Iteration  10: 824,683 ms/op
Iteration   1: 815,943 ms/op
Iteration   2: 813,440 ms/op
Iteration   3: 817,839 ms/op
Iteration   4: 814,061 ms/op
Iteration   5: 812,301 ms/op
Iteration   6: 813,822 ms/op
Iteration   7: 816,429 ms/op
Iteration   8: 819,189 ms/op
Iteration   9: 819,578 ms/op
Iteration  10: 817,633 ms/op


Result "benchmarkFind":
  816,024 ±(99.9%) 3,836 ms/op [Average]
  (min, avg, max) = (812,301, 816,024, 819,578), stdev = 2,537
  CI (99.9%): [812,187, 819,860] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 32, patternSize = 32)

# Run progress: 27,39% complete, ETA 10:47:28
# Fork: 1 of 1
# Warmup Iteration   1: 807,215 ms/op
# Warmup Iteration   2: 855,736 ms/op
# Warmup Iteration   3: 853,741 ms/op
# Warmup Iteration   4: 846,813 ms/op
# Warmup Iteration   5: 849,008 ms/op
# Warmup Iteration   6: 850,122 ms/op
# Warmup Iteration   7: 854,885 ms/op
# Warmup Iteration   8: 849,492 ms/op
# Warmup Iteration   9: 842,553 ms/op
# Warmup Iteration  10: 852,512 ms/op
Iteration   1: 861,800 ms/op
Iteration   2: 845,408 ms/op
Iteration   3: 843,963 ms/op
Iteration   4: 839,001 ms/op
Iteration   5: 843,614 ms/op
Iteration   6: 848,018 ms/op
Iteration   7: 852,401 ms/op
Iteration   8: 842,717 ms/op
Iteration   9: 845,361 ms/op
Iteration  10: 841,493 ms/op


Result "benchmarkFind":
  846,378 ±(99.9%) 9,875 ms/op [Average]
  (min, avg, max) = (839,001, 846,378, 861,800), stdev = 6,532
  CI (99.9%): [836,503, 856,252] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 32, patternSize = 64)

# Run progress: 27,44% complete, ETA 10:47:30
# Fork: 1 of 1
# Warmup Iteration   1: 800,067 ms/op
# Warmup Iteration   2: 830,736 ms/op
# Warmup Iteration   3: 830,793 ms/op
# Warmup Iteration   4: 838,141 ms/op
# Warmup Iteration   5: 830,951 ms/op
# Warmup Iteration   6: 832,597 ms/op
# Warmup Iteration   7: 832,553 ms/op
# Warmup Iteration   8: 836,836 ms/op
# Warmup Iteration   9: 828,510 ms/op
# Warmup Iteration  10: 833,353 ms/op
Iteration   1: 829,575 ms/op
Iteration   2: 831,396 ms/op
Iteration   3: 829,587 ms/op
Iteration   4: 829,775 ms/op
Iteration   5: 838,832 ms/op
Iteration   6: 825,345 ms/op
Iteration   7: 857,842 ms/op
Iteration   8: 864,792 ms/op
Iteration   9: 855,756 ms/op
Iteration  10: 853,629 ms/op


Result "benchmarkFind":
  841,653 ±(99.9%) 22,262 ms/op [Average]
  (min, avg, max) = (825,345, 841,653, 864,792), stdev = 14,725
  CI (99.9%): [819,391, 863,915] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 32, patternSize = 128)

# Run progress: 27,48% complete, ETA 10:47:30
# Fork: 1 of 1
# Warmup Iteration   1: 820,611 ms/op
# Warmup Iteration   2: 816,330 ms/op
# Warmup Iteration   3: 815,843 ms/op
# Warmup Iteration   4: 812,599 ms/op
# Warmup Iteration   5: 812,285 ms/op
# Warmup Iteration   6: 874,610 ms/op
# Warmup Iteration   7: 811,848 ms/op
# Warmup Iteration   8: 811,807 ms/op
# Warmup Iteration   9: 816,435 ms/op
# Warmup Iteration  10: 814,232 ms/op
Iteration   1: 811,100 ms/op
Iteration   2: 811,672 ms/op
Iteration   3: 812,088 ms/op
Iteration   4: 812,170 ms/op
Iteration   5: 811,688 ms/op
Iteration   6: 815,509 ms/op
Iteration   7: 812,507 ms/op
Iteration   8: 814,667 ms/op
Iteration   9: 812,869 ms/op
Iteration  10: 814,240 ms/op


Result "benchmarkFind":
  812,851 ±(99.9%) 2,212 ms/op [Average]
  (min, avg, max) = (811,100, 812,851, 815,509), stdev = 1,463
  CI (99.9%): [810,639, 815,063] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 32, patternSize = 256)

# Run progress: 27,53% complete, ETA 10:47:28
# Fork: 1 of 1
# Warmup Iteration   1: 839,601 ms/op
# Warmup Iteration   2: 904,239 ms/op
# Warmup Iteration   3: 897,224 ms/op
# Warmup Iteration   4: 892,154 ms/op
# Warmup Iteration   5: 893,090 ms/op
# Warmup Iteration   6: 894,465 ms/op
# Warmup Iteration   7: 894,513 ms/op
# Warmup Iteration   8: 895,277 ms/op
# Warmup Iteration   9: 894,490 ms/op
# Warmup Iteration  10: 893,773 ms/op
Iteration   1: 888,764 ms/op
Iteration   2: 894,358 ms/op
Iteration   3: 893,975 ms/op
Iteration   4: 895,700 ms/op
Iteration   5: 894,347 ms/op
Iteration   6: 895,148 ms/op
Iteration   7: 899,715 ms/op
Iteration   8: 899,875 ms/op
Iteration   9: 893,968 ms/op
Iteration  10: 946,188 ms/op


Result "benchmarkFind":
  900,204 ±(99.9%) 24,882 ms/op [Average]
  (min, avg, max) = (888,764, 900,204, 946,188), stdev = 16,458
  CI (99.9%): [875,321, 925,086] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 128, patternSize = 2)

# Run progress: 27,57% complete, ETA 10:47:35
# Fork: 1 of 1
# Warmup Iteration   1: 4109,399 ms/op
# Warmup Iteration   2: 3389,789 ms/op
# Warmup Iteration   3: 3310,121 ms/op
# Warmup Iteration   4: 3201,752 ms/op
# Warmup Iteration   5: 3428,884 ms/op
# Warmup Iteration   6: 3428,793 ms/op
# Warmup Iteration   7: 3441,189 ms/op
# Warmup Iteration   8: 3434,715 ms/op
# Warmup Iteration   9: 3410,699 ms/op
# Warmup Iteration  10: 3409,781 ms/op
Iteration   1: 3403,301 ms/op
Iteration   2: 3406,665 ms/op
Iteration   3: 3407,829 ms/op
Iteration   4: 3405,181 ms/op
Iteration   5: 3410,121 ms/op
Iteration   6: 3425,465 ms/op
Iteration   7: 3430,329 ms/op
Iteration   8: 3579,734 ms/op
Iteration   9: 3443,783 ms/op
Iteration  10: 3455,822 ms/op


Result "benchmarkFind":
  3436,823 ±(99.9%) 80,620 ms/op [Average]
  (min, avg, max) = (3403,301, 3436,823, 3579,734), stdev = 53,325
  CI (99.9%): [3356,203, 3517,443] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 128, patternSize = 4)

# Run progress: 27,62% complete, ETA 10:49:08
# Fork: 1 of 1
# Warmup Iteration   1: 3189,070 ms/op
# Warmup Iteration   2: 3269,057 ms/op
# Warmup Iteration   3: 3258,377 ms/op
# Warmup Iteration   4: 3266,550 ms/op
# Warmup Iteration   5: 3268,484 ms/op
# Warmup Iteration   6: 3271,659 ms/op
# Warmup Iteration   7: 3279,160 ms/op
# Warmup Iteration   8: 3293,712 ms/op
# Warmup Iteration   9: 3286,671 ms/op
# Warmup Iteration  10: 3292,361 ms/op
Iteration   1: 3312,932 ms/op
Iteration   2: 3281,741 ms/op
Iteration   3: 3275,159 ms/op
Iteration   4: 3268,186 ms/op
Iteration   5: 3271,065 ms/op
Iteration   6: 3382,569 ms/op
Iteration   7: 3315,500 ms/op
Iteration   8: 3298,065 ms/op
Iteration   9: 3332,082 ms/op
Iteration  10: 3303,432 ms/op


Result "benchmarkFind":
  3304,073 ±(99.9%) 52,624 ms/op [Average]
  (min, avg, max) = (3268,186, 3304,073, 3382,569), stdev = 34,807
  CI (99.9%): [3251,449, 3356,696] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 128, patternSize = 8)

# Run progress: 27,67% complete, ETA 10:50:32
# Fork: 1 of 1
# Warmup Iteration   1: 3374,031 ms/op
# Warmup Iteration   2: 3062,582 ms/op
# Warmup Iteration   3: 3026,937 ms/op
# Warmup Iteration   4: 3032,758 ms/op
# Warmup Iteration   5: 3031,339 ms/op
# Warmup Iteration   6: 3029,192 ms/op
# Warmup Iteration   7: 3024,653 ms/op
# Warmup Iteration   8: 3022,724 ms/op
# Warmup Iteration   9: 3059,287 ms/op
# Warmup Iteration  10: 3042,817 ms/op
Iteration   1: 3026,326 ms/op
Iteration   2: 3023,714 ms/op
Iteration   3: 3027,419 ms/op
Iteration   4: 3031,902 ms/op
Iteration   5: 3208,712 ms/op
Iteration   6: 3056,669 ms/op
Iteration   7: 3073,216 ms/op
Iteration   8: 3067,915 ms/op
Iteration   9: 3086,153 ms/op
Iteration  10: 3097,534 ms/op


Result "benchmarkFind":
  3069,956 ±(99.9%) 83,975 ms/op [Average]
  (min, avg, max) = (3023,714, 3069,956, 3208,712), stdev = 55,545
  CI (99.9%): [2985,981, 3153,932] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 128, patternSize = 16)

# Run progress: 27,71% complete, ETA 10:51:44
# Fork: 1 of 1
# Warmup Iteration   1: 3148,813 ms/op
# Warmup Iteration   2: 3267,163 ms/op
# Warmup Iteration   3: 3252,500 ms/op
# Warmup Iteration   4: 3252,685 ms/op
# Warmup Iteration   5: 3251,152 ms/op
# Warmup Iteration   6: 3251,316 ms/op
# Warmup Iteration   7: 3250,598 ms/op
# Warmup Iteration   8: 3256,580 ms/op
# Warmup Iteration   9: 3250,319 ms/op
# Warmup Iteration  10: 3252,430 ms/op
Iteration   1: 3253,865 ms/op
Iteration   2: 3254,478 ms/op
Iteration   3: 3354,185 ms/op
Iteration   4: 3259,491 ms/op
Iteration   5: 3274,369 ms/op
Iteration   6: 3269,862 ms/op
Iteration   7: 3256,342 ms/op
Iteration   8: 3256,087 ms/op
Iteration   9: 3259,549 ms/op
Iteration  10: 3263,374 ms/op


Result "benchmarkFind":
  3270,160 ±(99.9%) 45,777 ms/op [Average]
  (min, avg, max) = (3253,865, 3270,160, 3354,185), stdev = 30,278
  CI (99.9%): [3224,384, 3315,937] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 128, patternSize = 32)

# Run progress: 27,76% complete, ETA 10:53:06
# Fork: 1 of 1
# Warmup Iteration   1: 3138,434 ms/op
# Warmup Iteration   2: 3049,551 ms/op
# Warmup Iteration   3: 3028,086 ms/op
# Warmup Iteration   4: 3038,057 ms/op
# Warmup Iteration   5: 3028,875 ms/op
# Warmup Iteration   6: 3029,560 ms/op
# Warmup Iteration   7: 3035,706 ms/op
# Warmup Iteration   8: 3027,673 ms/op
# Warmup Iteration   9: 3032,711 ms/op
# Warmup Iteration  10: 3032,156 ms/op
Iteration   1: 3036,899 ms/op
Iteration   2: 3162,045 ms/op
Iteration   3: 3083,621 ms/op
Iteration   4: 3058,156 ms/op
Iteration   5: 3092,675 ms/op
Iteration   6: 3061,543 ms/op
Iteration   7: 3072,930 ms/op
Iteration   8: 3065,245 ms/op
Iteration   9: 3073,566 ms/op
Iteration  10: 3073,670 ms/op


Result "benchmarkFind":
  3078,035 ±(99.9%) 50,120 ms/op [Average]
  (min, avg, max) = (3036,899, 3078,035, 3162,045), stdev = 33,151
  CI (99.9%): [3027,915, 3128,155] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 128, patternSize = 64)

# Run progress: 27,80% complete, ETA 10:54:17
# Fork: 1 of 1
# Warmup Iteration   1: 3165,559 ms/op
# Warmup Iteration   2: 3200,292 ms/op
# Warmup Iteration   3: 3181,038 ms/op
# Warmup Iteration   4: 3180,066 ms/op
# Warmup Iteration   5: 3185,706 ms/op
# Warmup Iteration   6: 3182,464 ms/op
# Warmup Iteration   7: 3184,439 ms/op
# Warmup Iteration   8: 3181,456 ms/op
# Warmup Iteration   9: 3182,454 ms/op
# Warmup Iteration  10: 3182,980 ms/op
Iteration   1: 3301,267 ms/op
Iteration   2: 3207,884 ms/op
Iteration   3: 3224,609 ms/op
Iteration   4: 3215,169 ms/op
Iteration   5: 3218,147 ms/op
Iteration   6: 3214,372 ms/op
Iteration   7: 3220,044 ms/op
Iteration   8: 3202,033 ms/op
Iteration   9: 3209,687 ms/op
Iteration  10: 3223,879 ms/op


Result "benchmarkFind":
  3223,709 ±(99.9%) 42,576 ms/op [Average]
  (min, avg, max) = (3202,033, 3223,709, 3301,267), stdev = 28,161
  CI (99.9%): [3181,133, 3266,285] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 128, patternSize = 128)

# Run progress: 27,85% complete, ETA 10:55:35
# Fork: 1 of 1
# Warmup Iteration   1: 3143,384 ms/op
# Warmup Iteration   2: 3226,306 ms/op
# Warmup Iteration   3: 3203,433 ms/op
# Warmup Iteration   4: 3195,336 ms/op
# Warmup Iteration   5: 3211,085 ms/op
# Warmup Iteration   6: 3202,767 ms/op
# Warmup Iteration   7: 3200,870 ms/op
# Warmup Iteration   8: 3213,543 ms/op
# Warmup Iteration   9: 3322,647 ms/op
# Warmup Iteration  10: 3212,303 ms/op
Iteration   1: 3228,656 ms/op
Iteration   2: 3228,098 ms/op
Iteration   3: 3231,396 ms/op
Iteration   4: 3225,563 ms/op
Iteration   5: 3239,641 ms/op
Iteration   6: 3258,558 ms/op
Iteration   7: 3237,251 ms/op
Iteration   8: 3227,884 ms/op
Iteration   9: 3228,348 ms/op
Iteration  10: 3219,944 ms/op


Result "benchmarkFind":
  3232,534 ±(99.9%) 16,192 ms/op [Average]
  (min, avg, max) = (3219,944, 3232,534, 3258,558), stdev = 10,710
  CI (99.9%): [3216,342, 3248,725] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 128, patternSize = 256)

# Run progress: 27,90% complete, ETA 10:56:53
# Fork: 1 of 1
# Warmup Iteration   1: 3210,491 ms/op
# Warmup Iteration   2: 3349,839 ms/op
# Warmup Iteration   3: 3370,133 ms/op
# Warmup Iteration   4: 3356,745 ms/op
# Warmup Iteration   5: 3348,128 ms/op
# Warmup Iteration   6: 3346,157 ms/op
# Warmup Iteration   7: 3351,776 ms/op
# Warmup Iteration   8: 3439,344 ms/op
# Warmup Iteration   9: 3336,528 ms/op
# Warmup Iteration  10: 3336,143 ms/op
Iteration   1: 3328,067 ms/op
Iteration   2: 3333,459 ms/op
Iteration   3: 3336,627 ms/op
Iteration   4: 3335,103 ms/op
Iteration   5: 3348,664 ms/op
Iteration   6: 3335,661 ms/op
Iteration   7: 3320,989 ms/op
Iteration   8: 3326,195 ms/op
Iteration   9: 3329,824 ms/op
Iteration  10: 3325,451 ms/op


Result "benchmarkFind":
  3332,004 ±(99.9%) 11,735 ms/op [Average]
  (min, avg, max) = (3320,989, 3332,004, 3348,664), stdev = 7,762
  CI (99.9%): [3320,269, 3343,739] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 2, patternSize = 2)

# Run progress: 27,94% complete, ETA 10:58:18
# Fork: 1 of 1
# Warmup Iteration   1: 225,735 ms/op
# Warmup Iteration   2: 233,347 ms/op
# Warmup Iteration   3: 228,715 ms/op
# Warmup Iteration   4: 228,894 ms/op
# Warmup Iteration   5: 228,548 ms/op
# Warmup Iteration   6: 229,233 ms/op
# Warmup Iteration   7: 228,098 ms/op
# Warmup Iteration   8: 229,574 ms/op
# Warmup Iteration   9: 228,695 ms/op
# Warmup Iteration  10: 229,582 ms/op
Iteration   1: 228,753 ms/op
Iteration   2: 228,509 ms/op
Iteration   3: 228,149 ms/op
Iteration   4: 244,682 ms/op
Iteration   5: 227,780 ms/op
Iteration   6: 227,924 ms/op
Iteration   7: 227,202 ms/op
Iteration   8: 227,355 ms/op
Iteration   9: 227,043 ms/op
Iteration  10: 227,249 ms/op


Result "benchmarkFind":
  229,465 ±(99.9%) 8,130 ms/op [Average]
  (min, avg, max) = (227,043, 229,465, 244,682), stdev = 5,378
  CI (99.9%): [221,334, 237,595] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 2, patternSize = 4)

# Run progress: 27,99% complete, ETA 10:57:49
# Fork: 1 of 1
# Warmup Iteration   1: 218,104 ms/op
# Warmup Iteration   2: 227,862 ms/op
# Warmup Iteration   3: 225,912 ms/op
# Warmup Iteration   4: 224,042 ms/op
# Warmup Iteration   5: 225,513 ms/op
# Warmup Iteration   6: 226,291 ms/op
# Warmup Iteration   7: 225,533 ms/op
# Warmup Iteration   8: 226,035 ms/op
# Warmup Iteration   9: 224,749 ms/op
# Warmup Iteration  10: 223,972 ms/op
Iteration   1: 222,985 ms/op
Iteration   2: 221,923 ms/op
Iteration   3: 223,135 ms/op
Iteration   4: 223,177 ms/op
Iteration   5: 223,429 ms/op
Iteration   6: 222,821 ms/op
Iteration   7: 220,577 ms/op
Iteration   8: 222,437 ms/op
Iteration   9: 222,728 ms/op
Iteration  10: 221,629 ms/op


Result "benchmarkFind":
  222,484 ±(99.9%) 1,324 ms/op [Average]
  (min, avg, max) = (220,577, 222,484, 223,429), stdev = 0,876
  CI (99.9%): [221,160, 223,808] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 2, patternSize = 8)

# Run progress: 28,03% complete, ETA 10:57:19
# Fork: 1 of 1
# Warmup Iteration   1: 225,451 ms/op
# Warmup Iteration   2: 239,638 ms/op
# Warmup Iteration   3: 240,379 ms/op
# Warmup Iteration   4: 238,426 ms/op
# Warmup Iteration   5: 239,314 ms/op
# Warmup Iteration   6: 239,126 ms/op
# Warmup Iteration   7: 238,927 ms/op
# Warmup Iteration   8: 238,876 ms/op
# Warmup Iteration   9: 238,487 ms/op
# Warmup Iteration  10: 245,934 ms/op
Iteration   1: 234,825 ms/op
Iteration   2: 223,291 ms/op
Iteration   3: 223,234 ms/op
Iteration   4: 222,787 ms/op
Iteration   5: 222,442 ms/op
Iteration   6: 222,322 ms/op
Iteration   7: 224,748 ms/op
Iteration   8: 224,180 ms/op
Iteration   9: 223,669 ms/op
Iteration  10: 223,456 ms/op


Result "benchmarkFind":
  224,495 ±(99.9%) 5,601 ms/op [Average]
  (min, avg, max) = (222,322, 224,495, 234,825), stdev = 3,705
  CI (99.9%): [218,894, 230,096] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 2, patternSize = 16)

# Run progress: 28,08% complete, ETA 10:56:51
# Fork: 1 of 1
# Warmup Iteration   1: 218,561 ms/op
# Warmup Iteration   2: 220,605 ms/op
# Warmup Iteration   3: 220,672 ms/op
# Warmup Iteration   4: 218,919 ms/op
# Warmup Iteration   5: 239,256 ms/op
# Warmup Iteration   6: 222,549 ms/op
# Warmup Iteration   7: 222,110 ms/op
# Warmup Iteration   8: 220,006 ms/op
# Warmup Iteration   9: 234,894 ms/op
# Warmup Iteration  10: 223,244 ms/op
Iteration   1: 219,461 ms/op
Iteration   2: 228,184 ms/op
Iteration   3: 220,375 ms/op
Iteration   4: 218,016 ms/op
Iteration   5: 219,012 ms/op
Iteration   6: 218,056 ms/op
Iteration   7: 220,291 ms/op
Iteration   8: 219,892 ms/op
Iteration   9: 217,611 ms/op
Iteration  10: 218,356 ms/op


Result "benchmarkFind":
  219,925 ±(99.9%) 4,634 ms/op [Average]
  (min, avg, max) = (217,611, 219,925, 228,184), stdev = 3,065
  CI (99.9%): [215,292, 224,559] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 2, patternSize = 32)

# Run progress: 28,13% complete, ETA 10:56:21
# Fork: 1 of 1
# Warmup Iteration   1: 217,420 ms/op
# Warmup Iteration   2: 218,888 ms/op
# Warmup Iteration   3: 217,524 ms/op
# Warmup Iteration   4: 218,688 ms/op
# Warmup Iteration   5: 219,416 ms/op
# Warmup Iteration   6: 218,227 ms/op
# Warmup Iteration   7: 218,635 ms/op
# Warmup Iteration   8: 218,039 ms/op
# Warmup Iteration   9: 218,717 ms/op
# Warmup Iteration  10: 219,464 ms/op
Iteration   1: 220,215 ms/op
Iteration   2: 217,366 ms/op
Iteration   3: 219,487 ms/op
Iteration   4: 218,592 ms/op
Iteration   5: 218,154 ms/op
Iteration   6: 218,564 ms/op
Iteration   7: 218,077 ms/op
Iteration   8: 218,036 ms/op
Iteration   9: 217,947 ms/op
Iteration  10: 218,019 ms/op


Result "benchmarkFind":
  218,446 ±(99.9%) 1,259 ms/op [Average]
  (min, avg, max) = (217,366, 218,446, 220,215), stdev = 0,833
  CI (99.9%): [217,187, 219,704] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 2, patternSize = 64)

# Run progress: 28,17% complete, ETA 10:55:50
# Fork: 1 of 1
# Warmup Iteration   1: 223,996 ms/op
# Warmup Iteration   2: 229,742 ms/op
# Warmup Iteration   3: 230,930 ms/op
# Warmup Iteration   4: 231,466 ms/op
# Warmup Iteration   5: 231,293 ms/op
# Warmup Iteration   6: 230,146 ms/op
# Warmup Iteration   7: 229,120 ms/op
# Warmup Iteration   8: 229,861 ms/op
# Warmup Iteration   9: 229,986 ms/op
# Warmup Iteration  10: 229,257 ms/op
Iteration   1: 233,803 ms/op
Iteration   2: 234,498 ms/op
Iteration   3: 235,153 ms/op
Iteration   4: 235,546 ms/op
Iteration   5: 235,504 ms/op
Iteration   6: 237,434 ms/op
Iteration   7: 228,285 ms/op
Iteration   8: 222,062 ms/op
Iteration   9: 223,848 ms/op
Iteration  10: 222,830 ms/op


Result "benchmarkFind":
  230,896 ±(99.9%) 9,082 ms/op [Average]
  (min, avg, max) = (222,062, 230,896, 237,434), stdev = 6,007
  CI (99.9%): [221,815, 239,978] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 2, patternSize = 128)

# Run progress: 28,22% complete, ETA 10:55:21
# Fork: 1 of 1
# Warmup Iteration   1: 214,748 ms/op
# Warmup Iteration   2: 216,316 ms/op
# Warmup Iteration   3: 216,230 ms/op
# Warmup Iteration   4: 215,190 ms/op
# Warmup Iteration   5: 215,405 ms/op
# Warmup Iteration   6: 214,983 ms/op
# Warmup Iteration   7: 217,320 ms/op
# Warmup Iteration   8: 215,093 ms/op
# Warmup Iteration   9: 215,141 ms/op
# Warmup Iteration  10: 215,412 ms/op
Iteration   1: 214,881 ms/op
Iteration   2: 214,857 ms/op
Iteration   3: 215,105 ms/op
Iteration   4: 215,265 ms/op
Iteration   5: 214,484 ms/op
Iteration   6: 214,432 ms/op
Iteration   7: 214,551 ms/op
Iteration   8: 214,648 ms/op
Iteration   9: 214,708 ms/op
Iteration  10: 216,108 ms/op


Result "benchmarkFind":
  214,904 ±(99.9%) 0,756 ms/op [Average]
  (min, avg, max) = (214,432, 214,904, 216,108), stdev = 0,500
  CI (99.9%): [214,148, 215,660] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 2, patternSize = 256)

# Run progress: 28,26% complete, ETA 10:54:49
# Fork: 1 of 1
# Warmup Iteration   1: 217,675 ms/op
# Warmup Iteration   2: 224,517 ms/op
# Warmup Iteration   3: 221,240 ms/op
# Warmup Iteration   4: 220,447 ms/op
# Warmup Iteration   5: 222,043 ms/op
# Warmup Iteration   6: 221,799 ms/op
# Warmup Iteration   7: 220,827 ms/op
# Warmup Iteration   8: 221,920 ms/op
# Warmup Iteration   9: 220,329 ms/op
# Warmup Iteration  10: 220,464 ms/op
Iteration   1: 222,747 ms/op
Iteration   2: 221,558 ms/op
Iteration   3: 219,505 ms/op
Iteration   4: 223,219 ms/op
Iteration   5: 222,277 ms/op
Iteration   6: 222,910 ms/op
Iteration   7: 227,231 ms/op
Iteration   8: 225,599 ms/op
Iteration   9: 227,052 ms/op
Iteration  10: 228,987 ms/op


Result "benchmarkFind":
  224,109 ±(99.9%) 4,495 ms/op [Average]
  (min, avg, max) = (219,505, 224,109, 228,987), stdev = 2,973
  CI (99.9%): [219,613, 228,604] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 8, patternSize = 2)

# Run progress: 28,31% complete, ETA 10:54:19
# Fork: 1 of 1
# Warmup Iteration   1: 813,796 ms/op
# Warmup Iteration   2: 800,414 ms/op
# Warmup Iteration   3: 795,813 ms/op
# Warmup Iteration   4: 792,323 ms/op
# Warmup Iteration   5: 802,624 ms/op
# Warmup Iteration   6: 836,896 ms/op
# Warmup Iteration   7: 797,293 ms/op
# Warmup Iteration   8: 798,098 ms/op
# Warmup Iteration   9: 799,885 ms/op
# Warmup Iteration  10: 798,511 ms/op
Iteration   1: 796,888 ms/op
Iteration   2: 793,411 ms/op
Iteration   3: 799,217 ms/op
Iteration   4: 801,210 ms/op
Iteration   5: 794,734 ms/op
Iteration   6: 799,412 ms/op
Iteration   7: 801,797 ms/op
Iteration   8: 799,023 ms/op
Iteration   9: 803,145 ms/op
Iteration  10: 798,288 ms/op


Result "benchmarkFind":
  798,712 ±(99.9%) 4,610 ms/op [Average]
  (min, avg, max) = (793,411, 798,712, 803,145), stdev = 3,049
  CI (99.9%): [794,102, 803,322] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 8, patternSize = 4)

# Run progress: 28,35% complete, ETA 10:54:14
# Fork: 1 of 1
# Warmup Iteration   1: 792,575 ms/op
# Warmup Iteration   2: 831,156 ms/op
# Warmup Iteration   3: 825,698 ms/op
# Warmup Iteration   4: 825,753 ms/op
# Warmup Iteration   5: 829,624 ms/op
# Warmup Iteration   6: 826,766 ms/op
# Warmup Iteration   7: 829,963 ms/op
# Warmup Iteration   8: 828,950 ms/op
# Warmup Iteration   9: 825,059 ms/op
# Warmup Iteration  10: 832,333 ms/op
Iteration   1: 831,469 ms/op
Iteration   2: 826,773 ms/op
Iteration   3: 828,547 ms/op
Iteration   4: 826,851 ms/op
Iteration   5: 830,186 ms/op
Iteration   6: 828,617 ms/op
Iteration   7: 829,410 ms/op
Iteration   8: 823,666 ms/op
Iteration   9: 832,318 ms/op
Iteration  10: 827,935 ms/op


Result "benchmarkFind":
  828,577 ±(99.9%) 3,785 ms/op [Average]
  (min, avg, max) = (823,666, 828,577, 832,318), stdev = 2,504
  CI (99.9%): [824,792, 832,362] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 8, patternSize = 8)

# Run progress: 28,40% complete, ETA 10:54:11
# Fork: 1 of 1
# Warmup Iteration   1: 792,510 ms/op
# Warmup Iteration   2: 869,816 ms/op
# Warmup Iteration   3: 818,992 ms/op
# Warmup Iteration   4: 823,454 ms/op
# Warmup Iteration   5: 821,529 ms/op
# Warmup Iteration   6: 821,402 ms/op
# Warmup Iteration   7: 819,393 ms/op
# Warmup Iteration   8: 821,464 ms/op
# Warmup Iteration   9: 819,152 ms/op
# Warmup Iteration  10: 820,646 ms/op
Iteration   1: 818,251 ms/op
Iteration   2: 819,378 ms/op
Iteration   3: 818,689 ms/op
Iteration   4: 820,829 ms/op
Iteration   5: 818,191 ms/op
Iteration   6: 817,856 ms/op
Iteration   7: 819,159 ms/op
Iteration   8: 818,424 ms/op
Iteration   9: 818,868 ms/op
Iteration  10: 818,900 ms/op


Result "benchmarkFind":
  818,854 ±(99.9%) 1,263 ms/op [Average]
  (min, avg, max) = (817,856, 818,854, 820,829), stdev = 0,836
  CI (99.9%): [817,591, 820,118] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 8, patternSize = 16)

# Run progress: 28,45% complete, ETA 10:54:08
# Fork: 1 of 1
# Warmup Iteration   1: 786,230 ms/op
# Warmup Iteration   2: 814,741 ms/op
# Warmup Iteration   3: 819,012 ms/op
# Warmup Iteration   4: 812,841 ms/op
# Warmup Iteration   5: 811,535 ms/op
# Warmup Iteration   6: 808,916 ms/op
# Warmup Iteration   7: 811,771 ms/op
# Warmup Iteration   8: 811,726 ms/op
# Warmup Iteration   9: 817,749 ms/op
# Warmup Iteration  10: 819,793 ms/op
Iteration   1: 818,324 ms/op
Iteration   2: 817,341 ms/op
Iteration   3: 816,202 ms/op
Iteration   4: 815,435 ms/op
Iteration   5: 817,233 ms/op
Iteration   6: 820,662 ms/op
Iteration   7: 829,105 ms/op
Iteration   8: 865,025 ms/op
Iteration   9: 825,168 ms/op
Iteration  10: 826,406 ms/op


Result "benchmarkFind":
  825,090 ±(99.9%) 22,379 ms/op [Average]
  (min, avg, max) = (815,435, 825,090, 865,025), stdev = 14,803
  CI (99.9%): [802,711, 847,469] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 8, patternSize = 32)

# Run progress: 28,49% complete, ETA 10:54:04
# Fork: 1 of 1
# Warmup Iteration   1: 793,511 ms/op
# Warmup Iteration   2: 810,418 ms/op
# Warmup Iteration   3: 813,579 ms/op
# Warmup Iteration   4: 812,796 ms/op
# Warmup Iteration   5: 820,658 ms/op
# Warmup Iteration   6: 815,426 ms/op
# Warmup Iteration   7: 812,053 ms/op
# Warmup Iteration   8: 818,855 ms/op
# Warmup Iteration   9: 812,639 ms/op
# Warmup Iteration  10: 817,283 ms/op
Iteration   1: 813,779 ms/op
Iteration   2: 814,114 ms/op
Iteration   3: 813,673 ms/op
Iteration   4: 810,602 ms/op
Iteration   5: 826,544 ms/op
Iteration   6: 814,230 ms/op
Iteration   7: 806,469 ms/op
Iteration   8: 813,193 ms/op
Iteration   9: 817,699 ms/op
Iteration  10: 825,825 ms/op


Result "benchmarkFind":
  815,613 ±(99.9%) 9,482 ms/op [Average]
  (min, avg, max) = (806,469, 815,613, 826,544), stdev = 6,272
  CI (99.9%): [806,131, 825,094] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 8, patternSize = 64)

# Run progress: 28,54% complete, ETA 10:54:00
# Fork: 1 of 1
# Warmup Iteration   1: 788,599 ms/op
# Warmup Iteration   2: 815,456 ms/op
# Warmup Iteration   3: 816,142 ms/op
# Warmup Iteration   4: 816,476 ms/op
# Warmup Iteration   5: 816,079 ms/op
# Warmup Iteration   6: 814,434 ms/op
# Warmup Iteration   7: 816,384 ms/op
# Warmup Iteration   8: 815,418 ms/op
# Warmup Iteration   9: 814,837 ms/op
# Warmup Iteration  10: 815,002 ms/op
Iteration   1: 818,106 ms/op
Iteration   2: 815,933 ms/op
Iteration   3: 877,885 ms/op
Iteration   4: 821,873 ms/op
Iteration   5: 824,793 ms/op
Iteration   6: 825,506 ms/op
Iteration   7: 829,319 ms/op
Iteration   8: 845,122 ms/op
Iteration   9: 834,314 ms/op
Iteration  10: 829,131 ms/op


Result "benchmarkFind":
  832,198 ±(99.9%) 27,352 ms/op [Average]
  (min, avg, max) = (815,933, 832,198, 877,885), stdev = 18,092
  CI (99.9%): [804,846, 859,550] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 8, patternSize = 128)

# Run progress: 28,58% complete, ETA 10:53:56
# Fork: 1 of 1
# Warmup Iteration   1: 788,909 ms/op
# Warmup Iteration   2: 817,808 ms/op
# Warmup Iteration   3: 824,581 ms/op
# Warmup Iteration   4: 823,634 ms/op
# Warmup Iteration   5: 819,576 ms/op
# Warmup Iteration   6: 822,740 ms/op
# Warmup Iteration   7: 825,243 ms/op
# Warmup Iteration   8: 822,078 ms/op
# Warmup Iteration   9: 823,952 ms/op
# Warmup Iteration  10: 830,775 ms/op
Iteration   1: 815,129 ms/op
Iteration   2: 809,549 ms/op
Iteration   3: 811,107 ms/op
Iteration   4: 805,956 ms/op
Iteration   5: 810,745 ms/op
Iteration   6: 812,467 ms/op
Iteration   7: 812,142 ms/op
Iteration   8: 816,284 ms/op
Iteration   9: 813,093 ms/op
Iteration  10: 817,774 ms/op


Result "benchmarkFind":
  812,425 ±(99.9%) 5,189 ms/op [Average]
  (min, avg, max) = (805,956, 812,425, 817,774), stdev = 3,432
  CI (99.9%): [807,236, 817,614] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 8, patternSize = 256)

# Run progress: 28,63% complete, ETA 10:53:52
# Fork: 1 of 1
# Warmup Iteration   1: 793,168 ms/op
# Warmup Iteration   2: 818,653 ms/op
# Warmup Iteration   3: 817,612 ms/op
# Warmup Iteration   4: 819,604 ms/op
# Warmup Iteration   5: 820,537 ms/op
# Warmup Iteration   6: 820,481 ms/op
# Warmup Iteration   7: 823,783 ms/op
# Warmup Iteration   8: 854,156 ms/op
# Warmup Iteration   9: 819,880 ms/op
# Warmup Iteration  10: 818,344 ms/op
Iteration   1: 821,663 ms/op
Iteration   2: 819,489 ms/op
Iteration   3: 820,277 ms/op
Iteration   4: 820,792 ms/op
Iteration   5: 825,905 ms/op
Iteration   6: 822,381 ms/op
Iteration   7: 826,722 ms/op
Iteration   8: 826,858 ms/op
Iteration   9: 822,318 ms/op
Iteration  10: 817,745 ms/op


Result "benchmarkFind":
  822,415 ±(99.9%) 4,744 ms/op [Average]
  (min, avg, max) = (817,745, 822,415, 826,858), stdev = 3,138
  CI (99.9%): [817,671, 827,159] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 32, patternSize = 2)

# Run progress: 28,68% complete, ETA 10:53:48
# Fork: 1 of 1
# Warmup Iteration   1: 3406,828 ms/op
# Warmup Iteration   2: 3166,005 ms/op
# Warmup Iteration   3: 3163,249 ms/op
# Warmup Iteration   4: 3151,072 ms/op
# Warmup Iteration   5: 3165,804 ms/op
# Warmup Iteration   6: 3156,390 ms/op
# Warmup Iteration   7: 3158,183 ms/op
# Warmup Iteration   8: 3164,870 ms/op
# Warmup Iteration   9: 3166,072 ms/op
# Warmup Iteration  10: 3157,408 ms/op
Iteration   1: 3162,874 ms/op
Iteration   2: 3167,082 ms/op
Iteration   3: 3253,795 ms/op
Iteration   4: 3174,157 ms/op
Iteration   5: 3165,379 ms/op
Iteration   6: 3171,697 ms/op
Iteration   7: 3173,078 ms/op
Iteration   8: 3167,429 ms/op
Iteration   9: 3219,185 ms/op
Iteration  10: 3195,497 ms/op


Result "benchmarkFind":
  3185,017 ±(99.9%) 44,941 ms/op [Average]
  (min, avg, max) = (3162,874, 3185,017, 3253,795), stdev = 29,726
  CI (99.9%): [3140,076, 3229,958] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 32, patternSize = 4)

# Run progress: 28,72% complete, ETA 10:55:01
# Fork: 1 of 1
# Warmup Iteration   1: 3065,840 ms/op
# Warmup Iteration   2: 3231,679 ms/op
# Warmup Iteration   3: 3234,319 ms/op
# Warmup Iteration   4: 3279,457 ms/op
# Warmup Iteration   5: 3243,568 ms/op
# Warmup Iteration   6: 3226,455 ms/op
# Warmup Iteration   7: 3236,778 ms/op
# Warmup Iteration   8: 3226,494 ms/op
# Warmup Iteration   9: 3236,810 ms/op
# Warmup Iteration  10: 3244,289 ms/op
Iteration   1: 3278,108 ms/op
Iteration   2: 3220,011 ms/op
Iteration   3: 3240,073 ms/op
Iteration   4: 3223,516 ms/op
Iteration   5: 3225,261 ms/op
Iteration   6: 3228,802 ms/op
Iteration   7: 3218,003 ms/op
Iteration   8: 3237,363 ms/op
Iteration   9: 3240,342 ms/op
Iteration  10: 3228,009 ms/op


Result "benchmarkFind":
  3233,949 ±(99.9%) 26,354 ms/op [Average]
  (min, avg, max) = (3218,003, 3233,949, 3278,108), stdev = 17,431
  CI (99.9%): [3207,595, 3260,303] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 32, patternSize = 8)

# Run progress: 28,77% complete, ETA 10:56:16
# Fork: 1 of 1
# Warmup Iteration   1: 3041,114 ms/op
# Warmup Iteration   2: 3329,399 ms/op
# Warmup Iteration   3: 3362,197 ms/op
# Warmup Iteration   4: 3365,517 ms/op
# Warmup Iteration   5: 3376,036 ms/op
# Warmup Iteration   6: 3372,941 ms/op
# Warmup Iteration   7: 3384,274 ms/op
# Warmup Iteration   8: 3377,433 ms/op
# Warmup Iteration   9: 3481,319 ms/op
# Warmup Iteration  10: 3328,684 ms/op
Iteration   1: 3330,644 ms/op
Iteration   2: 3333,802 ms/op
Iteration   3: 3332,678 ms/op
Iteration   4: 3327,596 ms/op
Iteration   5: 3344,263 ms/op
Iteration   6: 3324,792 ms/op
Iteration   7: 3344,273 ms/op
Iteration   8: 3344,764 ms/op
Iteration   9: 3343,080 ms/op
Iteration  10: 3343,860 ms/op


Result "benchmarkFind":
  3336,975 ±(99.9%) 11,891 ms/op [Average]
  (min, avg, max) = (3324,792, 3336,975, 3344,764), stdev = 7,865
  CI (99.9%): [3325,085, 3348,866] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 32, patternSize = 16)

# Run progress: 28,81% complete, ETA 10:57:35
# Fork: 1 of 1
# Warmup Iteration   1: 3111,828 ms/op
# Warmup Iteration   2: 3411,061 ms/op
# Warmup Iteration   3: 3407,090 ms/op
# Warmup Iteration   4: 3410,245 ms/op
# Warmup Iteration   5: 3424,688 ms/op
# Warmup Iteration   6: 3409,252 ms/op
# Warmup Iteration   7: 3476,157 ms/op
# Warmup Iteration   8: 3428,419 ms/op
# Warmup Iteration   9: 3457,081 ms/op
# Warmup Iteration  10: 3359,795 ms/op
Iteration   1: 3354,757 ms/op
Iteration   2: 3354,733 ms/op
Iteration   3: 3358,177 ms/op
Iteration   4: 3381,860 ms/op
Iteration   5: 3359,055 ms/op
Iteration   6: 3365,362 ms/op
Iteration   7: 3358,248 ms/op
Iteration   8: 3355,185 ms/op
Iteration   9: 3361,258 ms/op
Iteration  10: 3371,438 ms/op


Result "benchmarkFind":
  3362,007 ±(99.9%) 13,184 ms/op [Average]
  (min, avg, max) = (3354,733, 3362,007, 3381,860), stdev = 8,720
  CI (99.9%): [3348,823, 3375,191] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 32, patternSize = 32)

# Run progress: 28,86% complete, ETA 10:58:56
# Fork: 1 of 1
# Warmup Iteration   1: 3257,551 ms/op
# Warmup Iteration   2: 3296,108 ms/op
# Warmup Iteration   3: 3290,086 ms/op
# Warmup Iteration   4: 3361,335 ms/op
# Warmup Iteration   5: 3242,952 ms/op
# Warmup Iteration   6: 3257,835 ms/op
# Warmup Iteration   7: 3303,715 ms/op
# Warmup Iteration   8: 3321,022 ms/op
# Warmup Iteration   9: 3307,924 ms/op
# Warmup Iteration  10: 3309,548 ms/op
Iteration   1: 3308,450 ms/op
Iteration   2: 3301,221 ms/op
Iteration   3: 3314,823 ms/op
Iteration   4: 3319,666 ms/op
Iteration   5: 3323,633 ms/op
Iteration   6: 3308,973 ms/op
Iteration   7: 3224,844 ms/op
Iteration   8: 3293,910 ms/op
Iteration   9: 3220,733 ms/op
Iteration  10: 3212,447 ms/op


Result "benchmarkFind":
  3282,870 ±(99.9%) 67,647 ms/op [Average]
  (min, avg, max) = (3212,447, 3282,870, 3323,633), stdev = 44,744
  CI (99.9%): [3215,223, 3350,517] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 32, patternSize = 64)

# Run progress: 28,91% complete, ETA 11:00:12
# Fork: 1 of 1
# Warmup Iteration   1: 3070,102 ms/op
# Warmup Iteration   2: 3386,453 ms/op
# Warmup Iteration   3: 3245,810 ms/op
# Warmup Iteration   4: 3234,602 ms/op
# Warmup Iteration   5: 3236,301 ms/op
# Warmup Iteration   6: 3239,126 ms/op
# Warmup Iteration   7: 3254,579 ms/op
# Warmup Iteration   8: 3239,895 ms/op
# Warmup Iteration   9: 3289,045 ms/op
# Warmup Iteration  10: 3267,235 ms/op
Iteration   1: 3260,622 ms/op
Iteration   2: 3264,895 ms/op
Iteration   3: 3267,346 ms/op
Iteration   4: 3264,997 ms/op
Iteration   5: 3257,451 ms/op
Iteration   6: 3251,497 ms/op
Iteration   7: 3296,128 ms/op
Iteration   8: 3282,037 ms/op
Iteration   9: 3293,348 ms/op
Iteration  10: 3259,052 ms/op


Result "benchmarkFind":
  3269,737 ±(99.9%) 23,301 ms/op [Average]
  (min, avg, max) = (3251,497, 3269,737, 3296,128), stdev = 15,412
  CI (99.9%): [3246,436, 3293,038] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 32, patternSize = 128)

# Run progress: 28,95% complete, ETA 11:01:26
# Fork: 1 of 1
# Warmup Iteration   1: 3119,042 ms/op
# Warmup Iteration   2: 3480,088 ms/op
# Warmup Iteration   3: 3484,149 ms/op
# Warmup Iteration   4: 3479,799 ms/op
# Warmup Iteration   5: 3483,038 ms/op
# Warmup Iteration   6: 3474,934 ms/op
# Warmup Iteration   7: 3501,021 ms/op
# Warmup Iteration   8: 3480,598 ms/op
# Warmup Iteration   9: 3479,646 ms/op
# Warmup Iteration  10: 3484,765 ms/op
Iteration   1: 3498,856 ms/op
Iteration   2: 3475,777 ms/op
Iteration   3: 3471,591 ms/op
Iteration   4: 3473,265 ms/op
Iteration   5: 3474,335 ms/op
Iteration   6: 3469,432 ms/op
Iteration   7: 3520,217 ms/op
Iteration   8: 3554,205 ms/op
Iteration   9: 3479,463 ms/op
Iteration  10: 3485,395 ms/op


Result "benchmarkFind":
  3490,254 ±(99.9%) 41,358 ms/op [Average]
  (min, avg, max) = (3469,432, 3490,254, 3554,205), stdev = 27,356
  CI (99.9%): [3448,896, 3531,612] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 32, patternSize = 256)

# Run progress: 29,00% complete, ETA 11:02:50
# Fork: 1 of 1
# Warmup Iteration   1: 3042,815 ms/op
# Warmup Iteration   2: 3457,115 ms/op
# Warmup Iteration   3: 3514,014 ms/op
# Warmup Iteration   4: 3490,964 ms/op
# Warmup Iteration   5: 3489,297 ms/op
# Warmup Iteration   6: 3475,003 ms/op
# Warmup Iteration   7: 3489,611 ms/op
# Warmup Iteration   8: 3488,596 ms/op
# Warmup Iteration   9: 3488,117 ms/op
# Warmup Iteration  10: 3477,210 ms/op
Iteration   1: 3488,417 ms/op
Iteration   2: 3494,419 ms/op
Iteration   3: 3488,629 ms/op
Iteration   4: 3485,895 ms/op
Iteration   5: 3548,798 ms/op
Iteration   6: 3514,668 ms/op
Iteration   7: 3520,185 ms/op
Iteration   8: 3491,754 ms/op
Iteration   9: 3516,519 ms/op
Iteration  10: 3480,885 ms/op


Result "benchmarkFind":
  3503,017 ±(99.9%) 32,318 ms/op [Average]
  (min, avg, max) = (3480,885, 3503,017, 3548,798), stdev = 21,377
  CI (99.9%): [3470,699, 3535,335] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 128, patternSize = 2)

# Run progress: 29,04% complete, ETA 11:04:14
# Fork: 1 of 1
# Warmup Iteration   1: 14189,634 ms/op
# Warmup Iteration   2: 12781,082 ms/op
# Warmup Iteration   3: 12929,526 ms/op
# Warmup Iteration   4: 12936,802 ms/op
# Warmup Iteration   5: 12911,742 ms/op
# Warmup Iteration   6: 12894,410 ms/op
# Warmup Iteration   7: 12895,549 ms/op
# Warmup Iteration   8: 12955,015 ms/op
# Warmup Iteration   9: 12787,750 ms/op
# Warmup Iteration  10: 12817,763 ms/op
Iteration   1: 12786,961 ms/op
Iteration   2: 12777,038 ms/op
Iteration   3: 12996,986 ms/op
Iteration   4: 12928,526 ms/op
Iteration   5: 12975,673 ms/op
Iteration   6: 12962,522 ms/op
Iteration   7: 13009,004 ms/op
Iteration   8: 12831,297 ms/op
Iteration   9: 12873,717 ms/op
Iteration  10: 12848,948 ms/op


Result "benchmarkFind":
  12899,067 ±(99.9%) 131,070 ms/op [Average]
  (min, avg, max) = (12777,038, 12899,067, 13009,004), stdev = 86,695
  CI (99.9%): [12767,997, 13030,137] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 128, patternSize = 4)

# Run progress: 29,09% complete, ETA 11:13:19
# Fork: 1 of 1
# Warmup Iteration   1: 11967,150 ms/op
# Warmup Iteration   2: 12696,244 ms/op
# Warmup Iteration   3: 12800,463 ms/op
# Warmup Iteration   4: 12680,632 ms/op
# Warmup Iteration   5: 12624,645 ms/op
# Warmup Iteration   6: 12694,992 ms/op
# Warmup Iteration   7: 12653,380 ms/op
# Warmup Iteration   8: 12549,166 ms/op
# Warmup Iteration   9: 12550,280 ms/op
# Warmup Iteration  10: 12549,499 ms/op
Iteration   1: 12653,214 ms/op
Iteration   2: 12675,220 ms/op
Iteration   3: 12703,179 ms/op
Iteration   4: 12727,224 ms/op
Iteration   5: 12753,311 ms/op
Iteration   6: 12785,786 ms/op
Iteration   7: 12471,848 ms/op
Iteration   8: 12529,164 ms/op
Iteration   9: 12484,865 ms/op
Iteration  10: 12469,932 ms/op


Result "benchmarkFind":
  12625,374 ±(99.9%) 187,561 ms/op [Average]
  (min, avg, max) = (12469,932, 12625,374, 12785,786), stdev = 124,060
  CI (99.9%): [12437,813, 12812,936] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 128, patternSize = 8)

# Run progress: 29,14% complete, ETA 11:22:05
# Fork: 1 of 1
# Warmup Iteration   1: 12341,862 ms/op
# Warmup Iteration   2: 12540,097 ms/op
# Warmup Iteration   3: 12620,906 ms/op
# Warmup Iteration   4: 12629,689 ms/op
# Warmup Iteration   5: 12600,914 ms/op
# Warmup Iteration   6: 12751,256 ms/op
# Warmup Iteration   7: 12613,009 ms/op
# Warmup Iteration   8: 12602,352 ms/op
# Warmup Iteration   9: 12570,629 ms/op
# Warmup Iteration  10: 12687,916 ms/op
Iteration   1: 12626,077 ms/op
Iteration   2: 12612,582 ms/op
Iteration   3: 12615,036 ms/op
Iteration   4: 12633,977 ms/op
Iteration   5: 12676,610 ms/op
Iteration   6: 12447,900 ms/op
Iteration   7: 12537,017 ms/op
Iteration   8: 12530,988 ms/op
Iteration   9: 12546,660 ms/op
Iteration  10: 12673,616 ms/op


Result "benchmarkFind":
  12590,047 ±(99.9%) 109,516 ms/op [Average]
  (min, avg, max) = (12447,900, 12590,047, 12676,610), stdev = 72,438
  CI (99.9%): [12480,531, 12699,562] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 128, patternSize = 16)

# Run progress: 29,18% complete, ETA 11:30:48
# Fork: 1 of 1
# Warmup Iteration   1: 12491,201 ms/op
# Warmup Iteration   2: 12880,284 ms/op
# Warmup Iteration   3: 12924,493 ms/op
# Warmup Iteration   4: 12908,836 ms/op
# Warmup Iteration   5: 12839,020 ms/op
# Warmup Iteration   6: 12712,629 ms/op
# Warmup Iteration   7: 12787,766 ms/op
# Warmup Iteration   8: 12791,317 ms/op
# Warmup Iteration   9: 12921,363 ms/op
# Warmup Iteration  10: 12864,843 ms/op
Iteration   1: 12711,269 ms/op
Iteration   2: 12734,241 ms/op
Iteration   3: 12715,121 ms/op
Iteration   4: 12930,788 ms/op
Iteration   5: 12848,397 ms/op
Iteration   6: 12947,076 ms/op
Iteration   7: 12948,755 ms/op
Iteration   8: 12871,267 ms/op
Iteration   9: 12791,131 ms/op
Iteration  10: 12829,336 ms/op


Result "benchmarkFind":
  12832,738 ±(99.9%) 140,665 ms/op [Average]
  (min, avg, max) = (12711,269, 12832,738, 12948,755), stdev = 93,041
  CI (99.9%): [12692,073, 12973,403] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 128, patternSize = 32)

# Run progress: 29,23% complete, ETA 11:39:40
# Fork: 1 of 1
# Warmup Iteration   1: 12111,405 ms/op
# Warmup Iteration   2: 12680,639 ms/op
# Warmup Iteration   3: 12835,447 ms/op
# Warmup Iteration   4: 12688,532 ms/op
# Warmup Iteration   5: 12745,778 ms/op
# Warmup Iteration   6: 12774,808 ms/op
# Warmup Iteration   7: 12718,454 ms/op
# Warmup Iteration   8: 12794,759 ms/op
# Warmup Iteration   9: 12658,619 ms/op
# Warmup Iteration  10: 12698,958 ms/op
Iteration   1: 12786,533 ms/op
Iteration   2: 12803,091 ms/op
Iteration   3: 12944,603 ms/op
Iteration   4: 12751,419 ms/op
Iteration   5: 12739,218 ms/op
Iteration   6: 12732,790 ms/op
Iteration   7: 12876,310 ms/op
Iteration   8: 12795,470 ms/op
Iteration   9: 12793,016 ms/op
Iteration  10: 12797,636 ms/op


Result "benchmarkFind":
  12802,009 ±(99.9%) 97,630 ms/op [Average]
  (min, avg, max) = (12732,790, 12802,009, 12944,603), stdev = 64,576
  CI (99.9%): [12704,379, 12899,638] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 128, patternSize = 64)

# Run progress: 29,27% complete, ETA 11:48:24
# Fork: 1 of 1
# Warmup Iteration   1: 12084,759 ms/op
# Warmup Iteration   2: 12722,015 ms/op
# Warmup Iteration   3: 12618,017 ms/op
# Warmup Iteration   4: 12675,341 ms/op
# Warmup Iteration   5: 12699,561 ms/op
# Warmup Iteration   6: 12701,980 ms/op
# Warmup Iteration   7: 12644,518 ms/op
# Warmup Iteration   8: 12511,051 ms/op
# Warmup Iteration   9: 12504,653 ms/op
# Warmup Iteration  10: 12514,017 ms/op
Iteration   1: 12519,088 ms/op
Iteration   2: 12852,122 ms/op
Iteration   3: 12723,188 ms/op
Iteration   4: 12727,405 ms/op
Iteration   5: 12757,049 ms/op
Iteration   6: 12743,742 ms/op
Iteration   7: 12844,964 ms/op
Iteration   8: 12737,273 ms/op
Iteration   9: 12688,043 ms/op
Iteration  10: 12727,099 ms/op


Result "benchmarkFind":
  12731,997 ±(99.9%) 138,353 ms/op [Average]
  (min, avg, max) = (12519,088, 12731,997, 12852,122), stdev = 91,512
  CI (99.9%): [12593,644, 12870,351] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 128, patternSize = 128)

# Run progress: 29,32% complete, ETA 11:57:03
# Fork: 1 of 1
# Warmup Iteration   1: 12098,181 ms/op
# Warmup Iteration   2: 12671,988 ms/op
# Warmup Iteration   3: 12660,697 ms/op
# Warmup Iteration   4: 12689,374 ms/op
# Warmup Iteration   5: 12831,826 ms/op
# Warmup Iteration   6: 12924,812 ms/op
# Warmup Iteration   7: 12850,536 ms/op
# Warmup Iteration   8: 12871,944 ms/op
# Warmup Iteration   9: 12866,476 ms/op
# Warmup Iteration  10: 12909,626 ms/op
Iteration   1: 12790,305 ms/op
Iteration   2: 12821,313 ms/op
Iteration   3: 12811,058 ms/op
Iteration   4: 12849,896 ms/op
Iteration   5: 12800,130 ms/op
Iteration   6: 12681,057 ms/op
Iteration   7: 12830,598 ms/op
Iteration   8: 12851,869 ms/op
Iteration   9: 12842,959 ms/op
Iteration  10: 12950,208 ms/op


Result "benchmarkFind":
  12822,939 ±(99.9%) 100,891 ms/op [Average]
  (min, avg, max) = (12681,057, 12822,939, 12950,208), stdev = 66,733
  CI (99.9%): [12722,048, 12923,830] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.JavaRegexMultiBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 128, patternSize = 256)

# Run progress: 29,37% complete, ETA 12:05:45
# Fork: 1 of 1
# Warmup Iteration   1: 12230,406 ms/op
# Warmup Iteration   2: 12706,234 ms/op
# Warmup Iteration   3: 12711,921 ms/op
# Warmup Iteration   4: 12816,831 ms/op
# Warmup Iteration   5: 12818,117 ms/op
# Warmup Iteration   6: 12829,255 ms/op
# Warmup Iteration   7: 12882,795 ms/op
# Warmup Iteration   8: 12842,437 ms/op
# Warmup Iteration   9: 12915,148 ms/op
# Warmup Iteration  10: 12841,279 ms/op
Iteration   1: 12890,454 ms/op
Iteration   2: 12897,963 ms/op
Iteration   3: 12900,424 ms/op
Iteration   4: 12804,471 ms/op
Iteration   5: 12595,946 ms/op
Iteration   6: 12604,634 ms/op
Iteration   7: 12686,255 ms/op
Iteration   8: 12823,652 ms/op
Iteration   9: 12877,239 ms/op
Iteration  10: 12848,102 ms/op


Result "benchmarkFind":
  12792,914 ±(99.9%) 180,978 ms/op [Average]
  (min, avg, max) = (12595,946, 12792,914, 12900,424), stdev = 119,705
  CI (99.9%): [12611,936, 12973,891] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 2, patternSize = 2)

# Run progress: 29,41% complete, ETA 12:14:25
# Fork: 1 of 1
# Warmup Iteration   1: 0,153 ms/op
# Warmup Iteration   2: 0,140 ms/op
# Warmup Iteration   3: 0,136 ms/op
# Warmup Iteration   4: 0,136 ms/op
# Warmup Iteration   5: 0,136 ms/op
# Warmup Iteration   6: 0,136 ms/op
# Warmup Iteration   7: 0,136 ms/op
# Warmup Iteration   8: 0,139 ms/op
# Warmup Iteration   9: 0,138 ms/op
# Warmup Iteration  10: 0,139 ms/op
Iteration   1: 0,139 ms/op
Iteration   2: 0,138 ms/op
Iteration   3: 0,139 ms/op
Iteration   4: 0,138 ms/op
Iteration   5: 0,139 ms/op
Iteration   6: 0,140 ms/op
Iteration   7: 0,138 ms/op
Iteration   8: 0,138 ms/op
Iteration   9: 0,138 ms/op
Iteration  10: 0,140 ms/op


Result "benchmarkFind":
  0,139 ±(99.9%) 0,001 ms/op [Average]
  (min, avg, max) = (0,138, 0,139, 0,140), stdev = 0,001
  CI (99.9%): [0,137, 0,140] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 2, patternSize = 4)

# Run progress: 29,46% complete, ETA 12:13:37
# Fork: 1 of 1
# Warmup Iteration   1: 0,387 ms/op
# Warmup Iteration   2: 0,354 ms/op
# Warmup Iteration   3: 0,347 ms/op
# Warmup Iteration   4: 0,344 ms/op
# Warmup Iteration   5: 0,345 ms/op
# Warmup Iteration   6: 0,348 ms/op
# Warmup Iteration   7: 0,344 ms/op
# Warmup Iteration   8: 0,347 ms/op
# Warmup Iteration   9: 0,345 ms/op
# Warmup Iteration  10: 0,346 ms/op
Iteration   1: 0,347 ms/op
Iteration   2: 0,375 ms/op
Iteration   3: 0,341 ms/op
Iteration   4: 0,341 ms/op
Iteration   5: 0,341 ms/op
Iteration   6: 0,341 ms/op
Iteration   7: 0,343 ms/op
Iteration   8: 0,342 ms/op
Iteration   9: 0,345 ms/op
Iteration  10: 0,358 ms/op


Result "benchmarkFind":
  0,348 ±(99.9%) 0,017 ms/op [Average]
  (min, avg, max) = (0,341, 0,348, 0,375), stdev = 0,011
  CI (99.9%): [0,331, 0,364] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 2, patternSize = 8)

# Run progress: 29,50% complete, ETA 12:12:48
# Fork: 1 of 1
# Warmup Iteration   1: 2,595 ms/op
# Warmup Iteration   2: 2,049 ms/op
# Warmup Iteration   3: 2,067 ms/op
# Warmup Iteration   4: 2,049 ms/op
# Warmup Iteration   5: 2,056 ms/op
# Warmup Iteration   6: 2,055 ms/op
# Warmup Iteration   7: 2,041 ms/op
# Warmup Iteration   8: 2,046 ms/op
# Warmup Iteration   9: 2,046 ms/op
# Warmup Iteration  10: 2,051 ms/op
Iteration   1: 2,051 ms/op
Iteration   2: 2,074 ms/op
Iteration   3: 2,040 ms/op
Iteration   4: 2,052 ms/op
Iteration   5: 2,047 ms/op
Iteration   6: 2,068 ms/op
Iteration   7: 2,042 ms/op
Iteration   8: 2,046 ms/op
Iteration   9: 2,064 ms/op
Iteration  10: 2,047 ms/op


Result "benchmarkFind":
  2,053 ±(99.9%) 0,017 ms/op [Average]
  (min, avg, max) = (2,040, 2,053, 2,074), stdev = 0,012
  CI (99.9%): [2,036, 2,071] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 2, patternSize = 16)

# Run progress: 29,55% complete, ETA 12:12:00
# Fork: 1 of 1
# Warmup Iteration   1: 24,432 ms/op
# Warmup Iteration   2: 21,357 ms/op
# Warmup Iteration   3: 21,240 ms/op
# Warmup Iteration   4: 21,300 ms/op
# Warmup Iteration   5: 21,237 ms/op
# Warmup Iteration   6: 21,296 ms/op
# Warmup Iteration   7: 21,080 ms/op
# Warmup Iteration   8: 21,296 ms/op
# Warmup Iteration   9: 21,192 ms/op
# Warmup Iteration  10: 21,288 ms/op
Iteration   1: 21,096 ms/op
Iteration   2: 21,194 ms/op
Iteration   3: 21,314 ms/op
Iteration   4: 21,239 ms/op
Iteration   5: 21,161 ms/op
Iteration   6: 21,176 ms/op
Iteration   7: 21,115 ms/op
Iteration   8: 21,100 ms/op
Iteration   9: 21,266 ms/op
Iteration  10: 21,124 ms/op


Result "benchmarkFind":
  21,179 ±(99.9%) 0,113 ms/op [Average]
  (min, avg, max) = (21,096, 21,179, 21,314), stdev = 0,075
  CI (99.9%): [21,066, 21,292] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 2, patternSize = 32)

# Run progress: 29,60% complete, ETA 12:11:13
# Fork: 1 of 1
# Warmup Iteration   1: 20,560 ms/op
# Warmup Iteration   2: 19,671 ms/op
# Warmup Iteration   3: 19,657 ms/op
# Warmup Iteration   4: 19,708 ms/op
# Warmup Iteration   5: 19,634 ms/op
# Warmup Iteration   6: 19,728 ms/op
# Warmup Iteration   7: 19,657 ms/op
# Warmup Iteration   8: 19,566 ms/op
# Warmup Iteration   9: 19,586 ms/op
# Warmup Iteration  10: 21,860 ms/op
Iteration   1: 20,140 ms/op
Iteration   2: 19,995 ms/op
Iteration   3: 19,878 ms/op
Iteration   4: 19,892 ms/op
Iteration   5: 20,058 ms/op
Iteration   6: 20,050 ms/op
Iteration   7: 19,950 ms/op
Iteration   8: 19,956 ms/op
Iteration   9: 20,096 ms/op
Iteration  10: 19,761 ms/op


Result "benchmarkFind":
  19,978 ±(99.9%) 0,173 ms/op [Average]
  (min, avg, max) = (19,761, 19,978, 20,140), stdev = 0,114
  CI (99.9%): [19,805, 20,150] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 2, patternSize = 64)

# Run progress: 29,64% complete, ETA 12:10:25
# Fork: 1 of 1
# Warmup Iteration   1: 20,849 ms/op
# Warmup Iteration   2: 20,218 ms/op
# Warmup Iteration   3: 20,113 ms/op
# Warmup Iteration   4: 19,982 ms/op
# Warmup Iteration   5: 20,007 ms/op
# Warmup Iteration   6: 20,103 ms/op
# Warmup Iteration   7: 20,083 ms/op
# Warmup Iteration   8: 20,057 ms/op
# Warmup Iteration   9: 20,177 ms/op
# Warmup Iteration  10: 20,189 ms/op
Iteration   1: 20,325 ms/op
Iteration   2: 19,950 ms/op
Iteration   3: 20,030 ms/op
Iteration   4: 20,004 ms/op
Iteration   5: 20,038 ms/op
Iteration   6: 20,117 ms/op
Iteration   7: 20,395 ms/op
Iteration   8: 20,382 ms/op
Iteration   9: 20,545 ms/op
Iteration  10: 20,428 ms/op


Result "benchmarkFind":
  20,221 ±(99.9%) 0,325 ms/op [Average]
  (min, avg, max) = (19,950, 20,221, 20,545), stdev = 0,215
  CI (99.9%): [19,896, 20,546] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 2, patternSize = 128)

# Run progress: 29,69% complete, ETA 12:09:38
# Fork: 1 of 1
# Warmup Iteration   1: 20,749 ms/op
# Warmup Iteration   2: 20,022 ms/op
# Warmup Iteration   3: 19,984 ms/op
# Warmup Iteration   4: 20,162 ms/op
# Warmup Iteration   5: 19,864 ms/op
# Warmup Iteration   6: 19,955 ms/op
# Warmup Iteration   7: 19,914 ms/op
# Warmup Iteration   8: 19,971 ms/op
# Warmup Iteration   9: 19,939 ms/op
# Warmup Iteration  10: 19,886 ms/op
Iteration   1: 19,942 ms/op
Iteration   2: 19,877 ms/op
Iteration   3: 19,938 ms/op
Iteration   4: 19,847 ms/op
Iteration   5: 19,998 ms/op
Iteration   6: 19,885 ms/op
Iteration   7: 19,897 ms/op
Iteration   8: 19,766 ms/op
Iteration   9: 19,802 ms/op
Iteration  10: 19,985 ms/op


Result "benchmarkFind":
  19,894 ±(99.9%) 0,114 ms/op [Average]
  (min, avg, max) = (19,766, 19,894, 19,998), stdev = 0,075
  CI (99.9%): [19,780, 20,007] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 2, patternSize = 256)

# Run progress: 29,73% complete, ETA 12:08:51
# Fork: 1 of 1
# Warmup Iteration   1: 20,139 ms/op
# Warmup Iteration   2: 19,443 ms/op
# Warmup Iteration   3: 19,536 ms/op
# Warmup Iteration   4: 19,399 ms/op
# Warmup Iteration   5: 19,507 ms/op
# Warmup Iteration   6: 19,408 ms/op
# Warmup Iteration   7: 19,467 ms/op
# Warmup Iteration   8: 21,802 ms/op
# Warmup Iteration   9: 20,035 ms/op
# Warmup Iteration  10: 19,727 ms/op
Iteration   1: 19,675 ms/op
Iteration   2: 19,670 ms/op
Iteration   3: 19,919 ms/op
Iteration   4: 19,642 ms/op
Iteration   5: 19,675 ms/op
Iteration   6: 19,699 ms/op
Iteration   7: 19,568 ms/op
Iteration   8: 19,776 ms/op
Iteration   9: 19,604 ms/op
Iteration  10: 19,596 ms/op


Result "benchmarkFind":
  19,682 ±(99.9%) 0,154 ms/op [Average]
  (min, avg, max) = (19,568, 19,682, 19,919), stdev = 0,102
  CI (99.9%): [19,528, 19,837] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 8, patternSize = 2)

# Run progress: 29,78% complete, ETA 12:08:03
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

com.almondtools.stringbench.SampleNotQualifiedException
	at com.almondtools.stringbench.MultiPatternMatcherBenchmark.setup(MultiPatternMatcherBenchmark.java:36)
	at com.almondtools.stringbench.generated.SCAhoCorasickBenchmark_benchmarkFind_jmhTest._jmh_tryInit_f_scahocorasickbenchmark0_0(SCAhoCorasickBenchmark_benchmarkFind_jmhTest.java:425)
	at com.almondtools.stringbench.generated.SCAhoCorasickBenchmark_benchmarkFind_jmhTest.benchmarkFind_AverageTime(SCAhoCorasickBenchmark_benchmarkFind_jmhTest.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:430)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:412)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)




# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 8, patternSize = 4)

# Run progress: 29,83% complete, ETA 12:06:31
# Fork: 1 of 1
# Warmup Iteration   1: 1,851 ms/op
# Warmup Iteration   2: 1,689 ms/op
# Warmup Iteration   3: 1,661 ms/op
# Warmup Iteration   4: 1,658 ms/op
# Warmup Iteration   5: 1,658 ms/op
# Warmup Iteration   6: 1,657 ms/op
# Warmup Iteration   7: 1,677 ms/op
# Warmup Iteration   8: 1,662 ms/op
# Warmup Iteration   9: 1,660 ms/op
# Warmup Iteration  10: 1,880 ms/op
Iteration   1: 1,898 ms/op
Iteration   2: 1,896 ms/op
Iteration   3: 1,895 ms/op
Iteration   4: 1,897 ms/op
Iteration   5: 1,913 ms/op
Iteration   6: 1,902 ms/op
Iteration   7: 1,899 ms/op
Iteration   8: 1,895 ms/op
Iteration   9: 1,895 ms/op
Iteration  10: 1,897 ms/op


Result "benchmarkFind":
  1,899 ±(99.9%) 0,008 ms/op [Average]
  (min, avg, max) = (1,895, 1,899, 1,913), stdev = 0,005
  CI (99.9%): [1,891, 1,907] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 8, patternSize = 8)

# Run progress: 29,87% complete, ETA 12:05:43
# Fork: 1 of 1
# Warmup Iteration   1: 16,549 ms/op
# Warmup Iteration   2: 15,013 ms/op
# Warmup Iteration   3: 15,051 ms/op
# Warmup Iteration   4: 15,066 ms/op
# Warmup Iteration   5: 14,937 ms/op
# Warmup Iteration   6: 15,079 ms/op
# Warmup Iteration   7: 14,946 ms/op
# Warmup Iteration   8: 14,975 ms/op
# Warmup Iteration   9: 15,092 ms/op
# Warmup Iteration  10: 15,130 ms/op
Iteration   1: 15,063 ms/op
Iteration   2: 15,012 ms/op
Iteration   3: 15,131 ms/op
Iteration   4: 14,980 ms/op
Iteration   5: 15,021 ms/op
Iteration   6: 14,953 ms/op
Iteration   7: 15,065 ms/op
Iteration   8: 15,546 ms/op
Iteration   9: 14,936 ms/op
Iteration  10: 14,868 ms/op


Result "benchmarkFind":
  15,058 ±(99.9%) 0,283 ms/op [Average]
  (min, avg, max) = (14,868, 15,058, 15,546), stdev = 0,187
  CI (99.9%): [14,775, 15,341] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 8, patternSize = 16)

# Run progress: 29,92% complete, ETA 12:04:56
# Fork: 1 of 1
# Warmup Iteration   1: 32,838 ms/op
# Warmup Iteration   2: 28,572 ms/op
# Warmup Iteration   3: 29,242 ms/op
# Warmup Iteration   4: 28,427 ms/op
# Warmup Iteration   5: 30,810 ms/op
# Warmup Iteration   6: 28,628 ms/op
# Warmup Iteration   7: 28,595 ms/op
# Warmup Iteration   8: 28,602 ms/op
# Warmup Iteration   9: 28,677 ms/op
# Warmup Iteration  10: 28,525 ms/op
Iteration   1: 28,431 ms/op
Iteration   2: 28,758 ms/op
Iteration   3: 28,778 ms/op
Iteration   4: 28,405 ms/op
Iteration   5: 28,738 ms/op
Iteration   6: 28,377 ms/op
Iteration   7: 28,666 ms/op
Iteration   8: 28,602 ms/op
Iteration   9: 28,569 ms/op
Iteration  10: 28,558 ms/op


Result "benchmarkFind":
  28,588 ±(99.9%) 0,224 ms/op [Average]
  (min, avg, max) = (28,377, 28,588, 28,778), stdev = 0,148
  CI (99.9%): [28,364, 28,812] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 8, patternSize = 32)

# Run progress: 29,96% complete, ETA 12:04:09
# Fork: 1 of 1
# Warmup Iteration   1: 20,228 ms/op
# Warmup Iteration   2: 19,276 ms/op
# Warmup Iteration   3: 19,306 ms/op
# Warmup Iteration   4: 19,316 ms/op
# Warmup Iteration   5: 19,265 ms/op
# Warmup Iteration   6: 19,420 ms/op
# Warmup Iteration   7: 19,418 ms/op
# Warmup Iteration   8: 19,328 ms/op
# Warmup Iteration   9: 19,336 ms/op
# Warmup Iteration  10: 19,391 ms/op
Iteration   1: 19,477 ms/op
Iteration   2: 19,407 ms/op
Iteration   3: 19,709 ms/op
Iteration   4: 19,456 ms/op
Iteration   5: 19,497 ms/op
Iteration   6: 19,394 ms/op
Iteration   7: 19,333 ms/op
Iteration   8: 19,384 ms/op
Iteration   9: 19,254 ms/op
Iteration  10: 19,237 ms/op


Result "benchmarkFind":
  19,415 ±(99.9%) 0,204 ms/op [Average]
  (min, avg, max) = (19,237, 19,415, 19,709), stdev = 0,135
  CI (99.9%): [19,211, 19,619] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 8, patternSize = 64)

# Run progress: 30,01% complete, ETA 12:03:22
# Fork: 1 of 1
# Warmup Iteration   1: 21,115 ms/op
# Warmup Iteration   2: 19,924 ms/op
# Warmup Iteration   3: 20,058 ms/op
# Warmup Iteration   4: 20,072 ms/op
# Warmup Iteration   5: 20,027 ms/op
# Warmup Iteration   6: 19,942 ms/op
# Warmup Iteration   7: 20,171 ms/op
# Warmup Iteration   8: 20,203 ms/op
# Warmup Iteration   9: 20,094 ms/op
# Warmup Iteration  10: 20,036 ms/op
Iteration   1: 20,087 ms/op
Iteration   2: 19,923 ms/op
Iteration   3: 20,206 ms/op
Iteration   4: 20,126 ms/op
Iteration   5: 19,883 ms/op
Iteration   6: 20,088 ms/op
Iteration   7: 20,346 ms/op
Iteration   8: 20,346 ms/op
Iteration   9: 20,482 ms/op
Iteration  10: 20,463 ms/op


Result "benchmarkFind":
  20,195 ±(99.9%) 0,318 ms/op [Average]
  (min, avg, max) = (19,883, 20,195, 20,482), stdev = 0,211
  CI (99.9%): [19,877, 20,513] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 8, patternSize = 128)

# Run progress: 30,06% complete, ETA 12:02:36
# Fork: 1 of 1
# Warmup Iteration   1: 21,673 ms/op
# Warmup Iteration   2: 21,108 ms/op
# Warmup Iteration   3: 22,779 ms/op
# Warmup Iteration   4: 21,127 ms/op
# Warmup Iteration   5: 21,166 ms/op
# Warmup Iteration   6: 21,132 ms/op
# Warmup Iteration   7: 21,299 ms/op
# Warmup Iteration   8: 21,031 ms/op
# Warmup Iteration   9: 21,026 ms/op
# Warmup Iteration  10: 21,004 ms/op
Iteration   1: 21,141 ms/op
Iteration   2: 20,878 ms/op
Iteration   3: 20,931 ms/op
Iteration   4: 21,146 ms/op
Iteration   5: 21,099 ms/op
Iteration   6: 21,032 ms/op
Iteration   7: 21,018 ms/op
Iteration   8: 21,109 ms/op
Iteration   9: 21,130 ms/op
Iteration  10: 20,977 ms/op


Result "benchmarkFind":
  21,046 ±(99.9%) 0,143 ms/op [Average]
  (min, avg, max) = (20,878, 21,046, 21,146), stdev = 0,094
  CI (99.9%): [20,903, 21,189] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 8, patternSize = 256)

# Run progress: 30,10% complete, ETA 12:01:49
# Fork: 1 of 1
# Warmup Iteration   1: 21,796 ms/op
# Warmup Iteration   2: 20,880 ms/op
# Warmup Iteration   3: 20,828 ms/op
# Warmup Iteration   4: 20,938 ms/op
# Warmup Iteration   5: 20,954 ms/op
# Warmup Iteration   6: 20,704 ms/op
# Warmup Iteration   7: 20,680 ms/op
# Warmup Iteration   8: 20,561 ms/op
# Warmup Iteration   9: 20,703 ms/op
# Warmup Iteration  10: 20,762 ms/op
Iteration   1: 20,680 ms/op
Iteration   2: 20,714 ms/op
Iteration   3: 20,665 ms/op
Iteration   4: 20,546 ms/op
Iteration   5: 20,600 ms/op
Iteration   6: 20,619 ms/op
Iteration   7: 20,698 ms/op
Iteration   8: 20,800 ms/op
Iteration   9: 20,963 ms/op
Iteration  10: 20,669 ms/op


Result "benchmarkFind":
  20,695 ±(99.9%) 0,176 ms/op [Average]
  (min, avg, max) = (20,546, 20,695, 20,963), stdev = 0,116
  CI (99.9%): [20,520, 20,871] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 32, patternSize = 2)

# Run progress: 30,15% complete, ETA 12:01:03
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

com.almondtools.stringbench.SampleNotQualifiedException
	at com.almondtools.stringbench.MultiPatternMatcherBenchmark.setup(MultiPatternMatcherBenchmark.java:36)
	at com.almondtools.stringbench.generated.SCAhoCorasickBenchmark_benchmarkFind_jmhTest._jmh_tryInit_f_scahocorasickbenchmark0_0(SCAhoCorasickBenchmark_benchmarkFind_jmhTest.java:425)
	at com.almondtools.stringbench.generated.SCAhoCorasickBenchmark_benchmarkFind_jmhTest.benchmarkFind_AverageTime(SCAhoCorasickBenchmark_benchmarkFind_jmhTest.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:430)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:412)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)




# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 32, patternSize = 4)

# Run progress: 30,19% complete, ETA 11:59:32
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

com.almondtools.stringbench.SampleNotQualifiedException
	at com.almondtools.stringbench.MultiPatternMatcherBenchmark.setup(MultiPatternMatcherBenchmark.java:36)
	at com.almondtools.stringbench.generated.SCAhoCorasickBenchmark_benchmarkFind_jmhTest._jmh_tryInit_f_scahocorasickbenchmark0_0(SCAhoCorasickBenchmark_benchmarkFind_jmhTest.java:425)
	at com.almondtools.stringbench.generated.SCAhoCorasickBenchmark_benchmarkFind_jmhTest.benchmarkFind_AverageTime(SCAhoCorasickBenchmark_benchmarkFind_jmhTest.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:430)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:412)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)




# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 32, patternSize = 8)

# Run progress: 30,24% complete, ETA 11:58:01
# Fork: 1 of 1
# Warmup Iteration   1: 169,060 ms/op
# Warmup Iteration   2: 151,986 ms/op
# Warmup Iteration   3: 150,837 ms/op
# Warmup Iteration   4: 150,524 ms/op
# Warmup Iteration   5: 149,170 ms/op
# Warmup Iteration   6: 149,341 ms/op
# Warmup Iteration   7: 149,404 ms/op
# Warmup Iteration   8: 150,921 ms/op
# Warmup Iteration   9: 149,147 ms/op
# Warmup Iteration  10: 149,895 ms/op
Iteration   1: 150,050 ms/op
Iteration   2: 150,921 ms/op
Iteration   3: 151,135 ms/op
Iteration   4: 149,701 ms/op
Iteration   5: 149,575 ms/op
Iteration   6: 150,437 ms/op
Iteration   7: 150,950 ms/op
Iteration   8: 162,589 ms/op
Iteration   9: 148,767 ms/op
Iteration  10: 150,607 ms/op


Result "benchmarkFind":
  151,473 ±(99.9%) 6,009 ms/op [Average]
  (min, avg, max) = (148,767, 151,473, 162,589), stdev = 3,974
  CI (99.9%): [145,464, 157,482] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 32, patternSize = 16)

# Run progress: 30,28% complete, ETA 11:57:17
# Fork: 1 of 1
# Warmup Iteration   1: 147,597 ms/op
# Warmup Iteration   2: 131,001 ms/op
# Warmup Iteration   3: 129,019 ms/op
# Warmup Iteration   4: 129,332 ms/op
# Warmup Iteration   5: 130,473 ms/op
# Warmup Iteration   6: 128,641 ms/op
# Warmup Iteration   7: 128,184 ms/op
# Warmup Iteration   8: 127,642 ms/op
# Warmup Iteration   9: 128,424 ms/op
# Warmup Iteration  10: 128,603 ms/op
Iteration   1: 128,818 ms/op
Iteration   2: 128,154 ms/op
Iteration   3: 128,097 ms/op
Iteration   4: 128,051 ms/op
Iteration   5: 128,521 ms/op
Iteration   6: 128,269 ms/op
Iteration   7: 128,427 ms/op
Iteration   8: 129,959 ms/op
Iteration   9: 127,750 ms/op
Iteration  10: 128,736 ms/op


Result "benchmarkFind":
  128,478 ±(99.9%) 0,927 ms/op [Average]
  (min, avg, max) = (127,750, 128,478, 129,959), stdev = 0,613
  CI (99.9%): [127,551, 129,405] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 32, patternSize = 32)

# Run progress: 30,33% complete, ETA 11:56:32
# Fork: 1 of 1
# Warmup Iteration   1: 22,910 ms/op
# Warmup Iteration   2: 21,786 ms/op
# Warmup Iteration   3: 21,956 ms/op
# Warmup Iteration   4: 21,901 ms/op
# Warmup Iteration   5: 21,766 ms/op
# Warmup Iteration   6: 21,955 ms/op
# Warmup Iteration   7: 21,790 ms/op
# Warmup Iteration   8: 21,824 ms/op
# Warmup Iteration   9: 21,815 ms/op
# Warmup Iteration  10: 21,774 ms/op
Iteration   1: 21,943 ms/op
Iteration   2: 21,409 ms/op
Iteration   3: 21,396 ms/op
Iteration   4: 21,371 ms/op
Iteration   5: 21,320 ms/op
Iteration   6: 21,271 ms/op
Iteration   7: 21,263 ms/op
Iteration   8: 21,380 ms/op
Iteration   9: 21,270 ms/op
Iteration  10: 21,459 ms/op


Result "benchmarkFind":
  21,408 ±(99.9%) 0,301 ms/op [Average]
  (min, avg, max) = (21,263, 21,408, 21,943), stdev = 0,199
  CI (99.9%): [21,107, 21,709] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 32, patternSize = 64)

# Run progress: 30,38% complete, ETA 11:55:46
# Fork: 1 of 1
# Warmup Iteration   1: 24,023 ms/op
# Warmup Iteration   2: 23,248 ms/op
# Warmup Iteration   3: 23,198 ms/op
# Warmup Iteration   4: 23,227 ms/op
# Warmup Iteration   5: 23,243 ms/op
# Warmup Iteration   6: 23,188 ms/op
# Warmup Iteration   7: 22,877 ms/op
# Warmup Iteration   8: 22,870 ms/op
# Warmup Iteration   9: 22,991 ms/op
# Warmup Iteration  10: 23,023 ms/op
Iteration   1: 23,118 ms/op
Iteration   2: 22,966 ms/op
Iteration   3: 22,969 ms/op
Iteration   4: 22,808 ms/op
Iteration   5: 24,227 ms/op
Iteration   6: 22,604 ms/op
Iteration   7: 22,559 ms/op
Iteration   8: 22,584 ms/op
Iteration   9: 22,621 ms/op
Iteration  10: 22,622 ms/op


Result "benchmarkFind":
  22,908 ±(99.9%) 0,762 ms/op [Average]
  (min, avg, max) = (22,559, 22,908, 24,227), stdev = 0,504
  CI (99.9%): [22,146, 23,669] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 32, patternSize = 128)

# Run progress: 30,42% complete, ETA 11:55:00
# Fork: 1 of 1
# Warmup Iteration   1: 23,993 ms/op
# Warmup Iteration   2: 23,204 ms/op
# Warmup Iteration   3: 23,371 ms/op
# Warmup Iteration   4: 23,401 ms/op
# Warmup Iteration   5: 23,336 ms/op
# Warmup Iteration   6: 23,192 ms/op
# Warmup Iteration   7: 22,999 ms/op
# Warmup Iteration   8: 22,924 ms/op
# Warmup Iteration   9: 22,966 ms/op
# Warmup Iteration  10: 22,904 ms/op
Iteration   1: 23,094 ms/op
Iteration   2: 23,350 ms/op
Iteration   3: 23,675 ms/op
Iteration   4: 23,661 ms/op
Iteration   5: 23,667 ms/op
Iteration   6: 23,898 ms/op
Iteration   7: 23,459 ms/op
Iteration   8: 23,429 ms/op
Iteration   9: 23,500 ms/op
Iteration  10: 23,363 ms/op


Result "benchmarkFind":
  23,510 ±(99.9%) 0,340 ms/op [Average]
  (min, avg, max) = (23,094, 23,510, 23,898), stdev = 0,225
  CI (99.9%): [23,170, 23,850] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 32, patternSize = 256)

# Run progress: 30,47% complete, ETA 11:54:15
# Fork: 1 of 1
# Warmup Iteration   1: 22,101 ms/op
# Warmup Iteration   2: 21,274 ms/op
# Warmup Iteration   3: 21,112 ms/op
# Warmup Iteration   4: 20,987 ms/op
# Warmup Iteration   5: 21,097 ms/op
# Warmup Iteration   6: 21,079 ms/op
# Warmup Iteration   7: 21,095 ms/op
# Warmup Iteration   8: 21,132 ms/op
# Warmup Iteration   9: 21,208 ms/op
# Warmup Iteration  10: 21,150 ms/op
Iteration   1: 21,781 ms/op
Iteration   2: 22,061 ms/op
Iteration   3: 21,445 ms/op
Iteration   4: 21,146 ms/op
Iteration   5: 21,247 ms/op
Iteration   6: 21,230 ms/op
Iteration   7: 21,118 ms/op
Iteration   8: 21,173 ms/op
Iteration   9: 21,200 ms/op
Iteration  10: 20,994 ms/op


Result "benchmarkFind":
  21,339 ±(99.9%) 0,504 ms/op [Average]
  (min, avg, max) = (20,994, 21,339, 22,061), stdev = 0,333
  CI (99.9%): [20,836, 21,843] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 128, patternSize = 2)

# Run progress: 30,51% complete, ETA 11:53:29
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

com.almondtools.stringbench.SampleNotQualifiedException
	at com.almondtools.stringbench.MultiPatternMatcherBenchmark.setup(MultiPatternMatcherBenchmark.java:36)
	at com.almondtools.stringbench.generated.SCAhoCorasickBenchmark_benchmarkFind_jmhTest._jmh_tryInit_f_scahocorasickbenchmark0_0(SCAhoCorasickBenchmark_benchmarkFind_jmhTest.java:425)
	at com.almondtools.stringbench.generated.SCAhoCorasickBenchmark_benchmarkFind_jmhTest.benchmarkFind_AverageTime(SCAhoCorasickBenchmark_benchmarkFind_jmhTest.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:430)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:412)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)




# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 128, patternSize = 4)

# Run progress: 30,56% complete, ETA 11:52:00
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

com.almondtools.stringbench.SampleNotQualifiedException
	at com.almondtools.stringbench.MultiPatternMatcherBenchmark.setup(MultiPatternMatcherBenchmark.java:36)
	at com.almondtools.stringbench.generated.SCAhoCorasickBenchmark_benchmarkFind_jmhTest._jmh_tryInit_f_scahocorasickbenchmark0_0(SCAhoCorasickBenchmark_benchmarkFind_jmhTest.java:425)
	at com.almondtools.stringbench.generated.SCAhoCorasickBenchmark_benchmarkFind_jmhTest.benchmarkFind_AverageTime(SCAhoCorasickBenchmark_benchmarkFind_jmhTest.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:430)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:412)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)




# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 128, patternSize = 8)

# Run progress: 30,61% complete, ETA 11:50:31
# Fork: 1 of 1
# Warmup Iteration   1: 465,391 ms/op
# Warmup Iteration   2: 423,560 ms/op
# Warmup Iteration   3: 422,688 ms/op
# Warmup Iteration   4: 447,488 ms/op
# Warmup Iteration   5: 488,722 ms/op
# Warmup Iteration   6: 483,596 ms/op
# Warmup Iteration   7: 484,811 ms/op
# Warmup Iteration   8: 538,586 ms/op
# Warmup Iteration   9: 490,454 ms/op
# Warmup Iteration  10: 485,392 ms/op
Iteration   1: 484,735 ms/op
Iteration   2: 485,800 ms/op
Iteration   3: 486,932 ms/op
Iteration   4: 489,663 ms/op
Iteration   5: 487,187 ms/op
Iteration   6: 487,568 ms/op
Iteration   7: 488,430 ms/op
Iteration   8: 485,679 ms/op
Iteration   9: 486,632 ms/op
Iteration  10: 487,479 ms/op


Result "benchmarkFind":
  487,011 ±(99.9%) 2,149 ms/op [Average]
  (min, avg, max) = (484,735, 487,011, 489,663), stdev = 1,421
  CI (99.9%): [484,862, 489,159] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 128, patternSize = 16)

# Run progress: 30,65% complete, ETA 11:50:04
# Fork: 1 of 1
# Warmup Iteration   1: 1664,311 ms/op
# Warmup Iteration   2: 1551,488 ms/op
# Warmup Iteration   3: 1478,660 ms/op
# Warmup Iteration   4: 1464,381 ms/op
# Warmup Iteration   5: 1461,098 ms/op
# Warmup Iteration   6: 1464,016 ms/op
# Warmup Iteration   7: 1465,000 ms/op
# Warmup Iteration   8: 1466,832 ms/op
# Warmup Iteration   9: 1465,521 ms/op
# Warmup Iteration  10: 1465,368 ms/op
Iteration   1: 1467,098 ms/op
Iteration   2: 1465,771 ms/op
Iteration   3: 1470,516 ms/op
Iteration   4: 1459,891 ms/op
Iteration   5: 1466,356 ms/op
Iteration   6: 1462,579 ms/op
Iteration   7: 1469,531 ms/op
Iteration   8: 1462,673 ms/op
Iteration   9: 1472,976 ms/op
Iteration  10: 1463,850 ms/op


Result "benchmarkFind":
  1466,124 ±(99.9%) 6,120 ms/op [Average]
  (min, avg, max) = (1459,891, 1466,124, 1472,976), stdev = 4,048
  CI (99.9%): [1460,004, 1472,244] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 128, patternSize = 32)

# Run progress: 30,70% complete, ETA 11:49:43
# Fork: 1 of 1
# Warmup Iteration   1: 32,296 ms/op
# Warmup Iteration   2: 30,470 ms/op
# Warmup Iteration   3: 29,301 ms/op
# Warmup Iteration   4: 28,983 ms/op
# Warmup Iteration   5: 28,931 ms/op
# Warmup Iteration   6: 28,983 ms/op
# Warmup Iteration   7: 29,161 ms/op
# Warmup Iteration   8: 28,692 ms/op
# Warmup Iteration   9: 28,746 ms/op
# Warmup Iteration  10: 31,626 ms/op
Iteration   1: 28,592 ms/op
Iteration   2: 28,911 ms/op
Iteration   3: 28,821 ms/op
Iteration   4: 29,006 ms/op
Iteration   5: 29,189 ms/op
Iteration   6: 29,051 ms/op
Iteration   7: 28,831 ms/op
Iteration   8: 29,439 ms/op
Iteration   9: 28,922 ms/op
Iteration  10: 29,284 ms/op


Result "benchmarkFind":
  29,005 ±(99.9%) 0,375 ms/op [Average]
  (min, avg, max) = (28,592, 29,005, 29,439), stdev = 0,248
  CI (99.9%): [28,630, 29,379] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 128, patternSize = 64)

# Run progress: 30,74% complete, ETA 11:48:58
# Fork: 1 of 1
# Warmup Iteration   1: 33,007 ms/op
# Warmup Iteration   2: 31,139 ms/op
# Warmup Iteration   3: 32,308 ms/op
# Warmup Iteration   4: 30,839 ms/op
# Warmup Iteration   5: 30,522 ms/op
# Warmup Iteration   6: 29,578 ms/op
# Warmup Iteration   7: 29,519 ms/op
# Warmup Iteration   8: 29,578 ms/op
# Warmup Iteration   9: 29,526 ms/op
# Warmup Iteration  10: 31,107 ms/op
Iteration   1: 32,811 ms/op
Iteration   2: 30,655 ms/op
Iteration   3: 31,295 ms/op
Iteration   4: 29,378 ms/op
Iteration   5: 29,686 ms/op
Iteration   6: 29,792 ms/op
Iteration   7: 29,493 ms/op
Iteration   8: 29,813 ms/op
Iteration   9: 29,752 ms/op
Iteration  10: 29,603 ms/op


Result "benchmarkFind":
  30,228 ±(99.9%) 1,635 ms/op [Average]
  (min, avg, max) = (29,378, 30,228, 32,811), stdev = 1,082
  CI (99.9%): [28,593, 31,863] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 128, patternSize = 128)

# Run progress: 30,79% complete, ETA 11:48:13
# Fork: 1 of 1
# Warmup Iteration   1: 31,613 ms/op
# Warmup Iteration   2: 30,391 ms/op
# Warmup Iteration   3: 30,543 ms/op
# Warmup Iteration   4: 30,434 ms/op
# Warmup Iteration   5: 30,211 ms/op
# Warmup Iteration   6: 30,419 ms/op
# Warmup Iteration   7: 30,373 ms/op
# Warmup Iteration   8: 30,497 ms/op
# Warmup Iteration   9: 33,715 ms/op
# Warmup Iteration  10: 30,662 ms/op
Iteration   1: 30,548 ms/op
Iteration   2: 30,606 ms/op
Iteration   3: 30,649 ms/op
Iteration   4: 30,784 ms/op
Iteration   5: 30,335 ms/op
Iteration   6: 30,633 ms/op
Iteration   7: 30,927 ms/op
Iteration   8: 30,485 ms/op
Iteration   9: 29,262 ms/op
Iteration  10: 29,212 ms/op


Result "benchmarkFind":
  30,344 ±(99.9%) 0,915 ms/op [Average]
  (min, avg, max) = (29,212, 30,344, 30,927), stdev = 0,605
  CI (99.9%): [29,429, 31,259] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 128, patternSize = 256)

# Run progress: 30,84% complete, ETA 11:47:28
# Fork: 1 of 1
# Warmup Iteration   1: 29,593 ms/op
# Warmup Iteration   2: 28,443 ms/op
# Warmup Iteration   3: 28,195 ms/op
# Warmup Iteration   4: 28,212 ms/op
# Warmup Iteration   5: 28,132 ms/op
# Warmup Iteration   6: 28,179 ms/op
# Warmup Iteration   7: 28,759 ms/op
# Warmup Iteration   8: 28,972 ms/op
# Warmup Iteration   9: 28,149 ms/op
# Warmup Iteration  10: 28,108 ms/op
Iteration   1: 27,988 ms/op
Iteration   2: 28,208 ms/op
Iteration   3: 28,049 ms/op
Iteration   4: 27,975 ms/op
Iteration   5: 28,124 ms/op
Iteration   6: 27,845 ms/op
Iteration   7: 28,027 ms/op
Iteration   8: 28,103 ms/op
Iteration   9: 28,025 ms/op
Iteration  10: 28,045 ms/op


Result "benchmarkFind":
  28,039 ±(99.9%) 0,146 ms/op [Average]
  (min, avg, max) = (27,845, 28,039, 28,208), stdev = 0,097
  CI (99.9%): [27,892, 28,185] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 2, patternSize = 2)

# Run progress: 30,88% complete, ETA 11:46:43
# Fork: 1 of 1
# Warmup Iteration   1: 0,211 ms/op
# Warmup Iteration   2: 0,193 ms/op
# Warmup Iteration   3: 0,187 ms/op
# Warmup Iteration   4: 0,187 ms/op
# Warmup Iteration   5: 0,186 ms/op
# Warmup Iteration   6: 0,186 ms/op
# Warmup Iteration   7: 0,185 ms/op
# Warmup Iteration   8: 0,186 ms/op
# Warmup Iteration   9: 0,186 ms/op
# Warmup Iteration  10: 0,186 ms/op
Iteration   1: 0,186 ms/op
Iteration   2: 0,192 ms/op
Iteration   3: 0,190 ms/op
Iteration   4: 0,189 ms/op
Iteration   5: 0,187 ms/op
Iteration   6: 0,189 ms/op
Iteration   7: 0,186 ms/op
Iteration   8: 0,189 ms/op
Iteration   9: 0,189 ms/op
Iteration  10: 0,188 ms/op


Result "benchmarkFind":
  0,188 ±(99.9%) 0,003 ms/op [Average]
  (min, avg, max) = (0,186, 0,188, 0,192), stdev = 0,002
  CI (99.9%): [0,185, 0,191] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 2, patternSize = 4)

# Run progress: 30,93% complete, ETA 11:45:58
# Fork: 1 of 1
# Warmup Iteration   1: 2,154 ms/op
# Warmup Iteration   2: 1,907 ms/op
# Warmup Iteration   3: 1,885 ms/op
# Warmup Iteration   4: 1,890 ms/op
# Warmup Iteration   5: 1,880 ms/op
# Warmup Iteration   6: 1,875 ms/op
# Warmup Iteration   7: 1,891 ms/op
# Warmup Iteration   8: 1,891 ms/op
# Warmup Iteration   9: 1,869 ms/op
# Warmup Iteration  10: 1,884 ms/op
Iteration   1: 1,881 ms/op
Iteration   2: 1,881 ms/op
Iteration   3: 1,880 ms/op
Iteration   4: 1,889 ms/op
Iteration   5: 1,886 ms/op
Iteration   6: 1,908 ms/op
Iteration   7: 1,904 ms/op
Iteration   8: 1,873 ms/op
Iteration   9: 1,888 ms/op
Iteration  10: 1,888 ms/op


Result "benchmarkFind":
  1,888 ±(99.9%) 0,016 ms/op [Average]
  (min, avg, max) = (1,873, 1,888, 1,908), stdev = 0,011
  CI (99.9%): [1,872, 1,904] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 2, patternSize = 8)

# Run progress: 30,97% complete, ETA 11:45:12
# Fork: 1 of 1
# Warmup Iteration   1: 18,148 ms/op
# Warmup Iteration   2: 16,357 ms/op
# Warmup Iteration   3: 16,312 ms/op
# Warmup Iteration   4: 16,370 ms/op
# Warmup Iteration   5: 16,309 ms/op
# Warmup Iteration   6: 17,444 ms/op
# Warmup Iteration   7: 16,351 ms/op
# Warmup Iteration   8: 16,327 ms/op
# Warmup Iteration   9: 16,397 ms/op
# Warmup Iteration  10: 16,563 ms/op
Iteration   1: 16,513 ms/op
Iteration   2: 16,463 ms/op
Iteration   3: 16,889 ms/op
Iteration   4: 16,698 ms/op
Iteration   5: 16,686 ms/op
Iteration   6: 17,701 ms/op
Iteration   7: 16,814 ms/op
Iteration   8: 16,568 ms/op
Iteration   9: 16,507 ms/op
Iteration  10: 16,581 ms/op


Result "benchmarkFind":
  16,742 ±(99.9%) 0,550 ms/op [Average]
  (min, avg, max) = (16,463, 16,742, 17,701), stdev = 0,364
  CI (99.9%): [16,192, 17,292] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 2, patternSize = 16)

# Run progress: 31,02% complete, ETA 11:44:28
# Fork: 1 of 1
# Warmup Iteration   1: 19,067 ms/op
# Warmup Iteration   2: 17,843 ms/op
# Warmup Iteration   3: 17,935 ms/op
# Warmup Iteration   4: 17,882 ms/op
# Warmup Iteration   5: 18,061 ms/op
# Warmup Iteration   6: 18,156 ms/op
# Warmup Iteration   7: 18,172 ms/op
# Warmup Iteration   8: 18,087 ms/op
# Warmup Iteration   9: 18,058 ms/op
# Warmup Iteration  10: 18,081 ms/op
Iteration   1: 18,113 ms/op
Iteration   2: 18,097 ms/op
Iteration   3: 18,148 ms/op
Iteration   4: 18,154 ms/op
Iteration   5: 18,229 ms/op
Iteration   6: 18,249 ms/op
Iteration   7: 17,792 ms/op
Iteration   8: 17,809 ms/op
Iteration   9: 17,758 ms/op
Iteration  10: 17,976 ms/op


Result "benchmarkFind":
  18,032 ±(99.9%) 0,281 ms/op [Average]
  (min, avg, max) = (17,758, 18,032, 18,249), stdev = 0,186
  CI (99.9%): [17,752, 18,313] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 2, patternSize = 32)

# Run progress: 31,07% complete, ETA 11:43:43
# Fork: 1 of 1
# Warmup Iteration   1: 18,760 ms/op
# Warmup Iteration   2: 17,762 ms/op
# Warmup Iteration   3: 17,838 ms/op
# Warmup Iteration   4: 17,863 ms/op
# Warmup Iteration   5: 17,965 ms/op
# Warmup Iteration   6: 18,286 ms/op
# Warmup Iteration   7: 18,213 ms/op
# Warmup Iteration   8: 18,255 ms/op
# Warmup Iteration   9: 18,251 ms/op
# Warmup Iteration  10: 18,270 ms/op
Iteration   1: 18,266 ms/op
Iteration   2: 18,190 ms/op
Iteration   3: 18,231 ms/op
Iteration   4: 18,141 ms/op
Iteration   5: 18,392 ms/op
Iteration   6: 18,358 ms/op
Iteration   7: 17,945 ms/op
Iteration   8: 17,936 ms/op
Iteration   9: 17,886 ms/op
Iteration  10: 17,944 ms/op


Result "benchmarkFind":
  18,129 ±(99.9%) 0,284 ms/op [Average]
  (min, avg, max) = (17,886, 18,129, 18,392), stdev = 0,188
  CI (99.9%): [17,845, 18,413] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 2, patternSize = 64)

# Run progress: 31,11% complete, ETA 11:42:58
# Fork: 1 of 1
# Warmup Iteration   1: 19,022 ms/op
# Warmup Iteration   2: 18,337 ms/op
# Warmup Iteration   3: 18,284 ms/op
# Warmup Iteration   4: 19,182 ms/op
# Warmup Iteration   5: 18,523 ms/op
# Warmup Iteration   6: 18,438 ms/op
# Warmup Iteration   7: 18,348 ms/op
# Warmup Iteration   8: 18,546 ms/op
# Warmup Iteration   9: 18,553 ms/op
# Warmup Iteration  10: 18,498 ms/op
Iteration   1: 18,571 ms/op
Iteration   2: 18,532 ms/op
Iteration   3: 18,477 ms/op
Iteration   4: 18,387 ms/op
Iteration   5: 18,416 ms/op
Iteration   6: 18,392 ms/op
Iteration   7: 18,320 ms/op
Iteration   8: 18,436 ms/op
Iteration   9: 18,375 ms/op
Iteration  10: 18,424 ms/op


Result "benchmarkFind":
  18,433 ±(99.9%) 0,114 ms/op [Average]
  (min, avg, max) = (18,320, 18,433, 18,571), stdev = 0,075
  CI (99.9%): [18,319, 18,547] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 2, patternSize = 128)

# Run progress: 31,16% complete, ETA 11:42:14
# Fork: 1 of 1
# Warmup Iteration   1: 19,093 ms/op
# Warmup Iteration   2: 18,349 ms/op
# Warmup Iteration   3: 18,218 ms/op
# Warmup Iteration   4: 18,196 ms/op
# Warmup Iteration   5: 18,273 ms/op
# Warmup Iteration   6: 18,289 ms/op
# Warmup Iteration   7: 18,247 ms/op
# Warmup Iteration   8: 18,150 ms/op
# Warmup Iteration   9: 18,106 ms/op
# Warmup Iteration  10: 18,068 ms/op
Iteration   1: 18,069 ms/op
Iteration   2: 18,110 ms/op
Iteration   3: 18,116 ms/op
Iteration   4: 18,149 ms/op
Iteration   5: 18,160 ms/op
Iteration   6: 18,077 ms/op
Iteration   7: 18,039 ms/op
Iteration   8: 18,139 ms/op
Iteration   9: 18,077 ms/op
Iteration  10: 18,112 ms/op


Result "benchmarkFind":
  18,105 ±(99.9%) 0,058 ms/op [Average]
  (min, avg, max) = (18,039, 18,105, 18,160), stdev = 0,039
  CI (99.9%): [18,046, 18,163] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 2, patternSize = 256)

# Run progress: 31,20% complete, ETA 11:41:29
# Fork: 1 of 1
# Warmup Iteration   1: 19,209 ms/op
# Warmup Iteration   2: 18,289 ms/op
# Warmup Iteration   3: 18,433 ms/op
# Warmup Iteration   4: 18,440 ms/op
# Warmup Iteration   5: 18,412 ms/op
# Warmup Iteration   6: 18,286 ms/op
# Warmup Iteration   7: 18,449 ms/op
# Warmup Iteration   8: 18,685 ms/op
# Warmup Iteration   9: 18,618 ms/op
# Warmup Iteration  10: 18,794 ms/op
Iteration   1: 18,765 ms/op
Iteration   2: 18,780 ms/op
Iteration   3: 18,644 ms/op
Iteration   4: 18,762 ms/op
Iteration   5: 18,579 ms/op
Iteration   6: 18,499 ms/op
Iteration   7: 18,437 ms/op
Iteration   8: 18,236 ms/op
Iteration   9: 18,153 ms/op
Iteration  10: 18,542 ms/op


Result "benchmarkFind":
  18,540 ±(99.9%) 0,328 ms/op [Average]
  (min, avg, max) = (18,153, 18,540, 18,780), stdev = 0,217
  CI (99.9%): [18,211, 18,868] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 8, patternSize = 2)

# Run progress: 31,25% complete, ETA 11:40:45
# Fork: 1 of 1
# Warmup Iteration   1: 1,060 ms/op
# Warmup Iteration   2: 1,107 ms/op
# Warmup Iteration   3: 0,968 ms/op
# Warmup Iteration   4: 0,955 ms/op
# Warmup Iteration   5: 0,956 ms/op
# Warmup Iteration   6: 0,960 ms/op
# Warmup Iteration   7: 0,963 ms/op
# Warmup Iteration   8: 0,960 ms/op
# Warmup Iteration   9: 0,963 ms/op
# Warmup Iteration  10: 0,966 ms/op
Iteration   1: 0,961 ms/op
Iteration   2: 0,964 ms/op
Iteration   3: 0,972 ms/op
Iteration   4: 0,971 ms/op
Iteration   5: 0,973 ms/op
Iteration   6: 0,971 ms/op
Iteration   7: 0,973 ms/op
Iteration   8: 0,963 ms/op
Iteration   9: 0,977 ms/op
Iteration  10: 0,967 ms/op


Result "benchmarkFind":
  0,969 ±(99.9%) 0,008 ms/op [Average]
  (min, avg, max) = (0,961, 0,969, 0,977), stdev = 0,005
  CI (99.9%): [0,961, 0,977] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 8, patternSize = 4)

# Run progress: 31,30% complete, ETA 11:40:00
# Fork: 1 of 1
# Warmup Iteration   1: 22,694 ms/op
# Warmup Iteration   2: 21,018 ms/op
# Warmup Iteration   3: 20,934 ms/op
# Warmup Iteration   4: 20,803 ms/op
# Warmup Iteration   5: 20,876 ms/op
# Warmup Iteration   6: 20,830 ms/op
# Warmup Iteration   7: 20,805 ms/op
# Warmup Iteration   8: 20,931 ms/op
# Warmup Iteration   9: 20,789 ms/op
# Warmup Iteration  10: 20,907 ms/op
Iteration   1: 20,865 ms/op
Iteration   2: 20,882 ms/op
Iteration   3: 20,831 ms/op
Iteration   4: 20,829 ms/op
Iteration   5: 20,800 ms/op
Iteration   6: 20,779 ms/op
Iteration   7: 20,817 ms/op
Iteration   8: 20,790 ms/op
Iteration   9: 20,834 ms/op
Iteration  10: 20,763 ms/op


Result "benchmarkFind":
  20,819 ±(99.9%) 0,057 ms/op [Average]
  (min, avg, max) = (20,763, 20,819, 20,882), stdev = 0,037
  CI (99.9%): [20,763, 20,876] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 8, patternSize = 8)

# Run progress: 31,34% complete, ETA 11:39:16
# Fork: 1 of 1
# Warmup Iteration   1: 28,138 ms/op
# Warmup Iteration   2: 24,708 ms/op
# Warmup Iteration   3: 24,750 ms/op
# Warmup Iteration   4: 24,663 ms/op
# Warmup Iteration   5: 24,858 ms/op
# Warmup Iteration   6: 24,623 ms/op
# Warmup Iteration   7: 24,603 ms/op
# Warmup Iteration   8: 24,628 ms/op
# Warmup Iteration   9: 24,595 ms/op
# Warmup Iteration  10: 24,629 ms/op
Iteration   1: 24,696 ms/op
Iteration   2: 24,582 ms/op
Iteration   3: 24,654 ms/op
Iteration   4: 24,718 ms/op
Iteration   5: 24,650 ms/op
Iteration   6: 24,586 ms/op
Iteration   7: 24,813 ms/op
Iteration   8: 24,631 ms/op
Iteration   9: 24,607 ms/op
Iteration  10: 28,121 ms/op


Result "benchmarkFind":
  25,006 ±(99.9%) 1,658 ms/op [Average]
  (min, avg, max) = (24,582, 25,006, 28,121), stdev = 1,097
  CI (99.9%): [23,348, 26,664] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 8, patternSize = 16)

# Run progress: 31,39% complete, ETA 11:38:32
# Fork: 1 of 1
# Warmup Iteration   1: 21,448 ms/op
# Warmup Iteration   2: 20,116 ms/op
# Warmup Iteration   3: 20,264 ms/op
# Warmup Iteration   4: 20,362 ms/op
# Warmup Iteration   5: 20,200 ms/op
# Warmup Iteration   6: 20,282 ms/op
# Warmup Iteration   7: 20,251 ms/op
# Warmup Iteration   8: 20,127 ms/op
# Warmup Iteration   9: 20,294 ms/op
# Warmup Iteration  10: 20,398 ms/op
Iteration   1: 20,410 ms/op
Iteration   2: 20,128 ms/op
Iteration   3: 20,374 ms/op
Iteration   4: 20,431 ms/op
Iteration   5: 20,316 ms/op
Iteration   6: 20,193 ms/op
Iteration   7: 20,204 ms/op
Iteration   8: 20,288 ms/op
Iteration   9: 20,132 ms/op
Iteration  10: 20,281 ms/op


Result "benchmarkFind":
  20,276 ±(99.9%) 0,166 ms/op [Average]
  (min, avg, max) = (20,128, 20,276, 20,431), stdev = 0,110
  CI (99.9%): [20,110, 20,442] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 8, patternSize = 32)

# Run progress: 31,43% complete, ETA 11:37:47
# Fork: 1 of 1
# Warmup Iteration   1: 22,915 ms/op
# Warmup Iteration   2: 21,336 ms/op
# Warmup Iteration   3: 21,423 ms/op
# Warmup Iteration   4: 21,191 ms/op
# Warmup Iteration   5: 21,374 ms/op
# Warmup Iteration   6: 21,189 ms/op
# Warmup Iteration   7: 21,349 ms/op
# Warmup Iteration   8: 21,415 ms/op
# Warmup Iteration   9: 21,276 ms/op
# Warmup Iteration  10: 21,315 ms/op
Iteration   1: 21,269 ms/op
Iteration   2: 21,105 ms/op
Iteration   3: 21,115 ms/op
Iteration   4: 21,298 ms/op
Iteration   5: 21,165 ms/op
Iteration   6: 21,571 ms/op
Iteration   7: 21,193 ms/op
Iteration   8: 21,249 ms/op
Iteration   9: 21,134 ms/op
Iteration  10: 21,406 ms/op


Result "benchmarkFind":
  21,250 ±(99.9%) 0,221 ms/op [Average]
  (min, avg, max) = (21,105, 21,250, 21,571), stdev = 0,146
  CI (99.9%): [21,029, 21,472] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 8, patternSize = 64)

# Run progress: 31,48% complete, ETA 11:37:03
# Fork: 1 of 1
# Warmup Iteration   1: 20,877 ms/op
# Warmup Iteration   2: 19,586 ms/op
# Warmup Iteration   3: 19,624 ms/op
# Warmup Iteration   4: 19,688 ms/op
# Warmup Iteration   5: 19,565 ms/op
# Warmup Iteration   6: 19,913 ms/op
# Warmup Iteration   7: 20,023 ms/op
# Warmup Iteration   8: 19,932 ms/op
# Warmup Iteration   9: 19,864 ms/op
# Warmup Iteration  10: 19,985 ms/op
Iteration   1: 19,913 ms/op
Iteration   2: 19,904 ms/op
Iteration   3: 19,925 ms/op
Iteration   4: 19,900 ms/op
Iteration   5: 19,914 ms/op
Iteration   6: 19,930 ms/op
Iteration   7: 19,666 ms/op
Iteration   8: 21,957 ms/op
Iteration   9: 19,700 ms/op
Iteration  10: 19,698 ms/op


Result "benchmarkFind":
  20,051 ±(99.9%) 1,026 ms/op [Average]
  (min, avg, max) = (19,666, 20,051, 21,957), stdev = 0,679
  CI (99.9%): [19,025, 21,076] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 8, patternSize = 128)

# Run progress: 31,53% complete, ETA 11:36:19
# Fork: 1 of 1
# Warmup Iteration   1: 21,320 ms/op
# Warmup Iteration   2: 20,382 ms/op
# Warmup Iteration   3: 20,436 ms/op
# Warmup Iteration   4: 20,464 ms/op
# Warmup Iteration   5: 20,337 ms/op
# Warmup Iteration   6: 20,331 ms/op
# Warmup Iteration   7: 20,374 ms/op
# Warmup Iteration   8: 20,171 ms/op
# Warmup Iteration   9: 20,191 ms/op
# Warmup Iteration  10: 20,629 ms/op
Iteration   1: 20,226 ms/op
Iteration   2: 20,341 ms/op
Iteration   3: 20,237 ms/op
Iteration   4: 20,213 ms/op
Iteration   5: 20,165 ms/op
Iteration   6: 20,206 ms/op
Iteration   7: 20,518 ms/op
Iteration   8: 20,340 ms/op
Iteration   9: 20,319 ms/op
Iteration  10: 20,347 ms/op


Result "benchmarkFind":
  20,291 ±(99.9%) 0,157 ms/op [Average]
  (min, avg, max) = (20,165, 20,291, 20,518), stdev = 0,104
  CI (99.9%): [20,135, 20,448] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 8, patternSize = 256)

# Run progress: 31,57% complete, ETA 11:35:36
# Fork: 1 of 1
# Warmup Iteration   1: 21,307 ms/op
# Warmup Iteration   2: 20,689 ms/op
# Warmup Iteration   3: 20,722 ms/op
# Warmup Iteration   4: 20,509 ms/op
# Warmup Iteration   5: 20,545 ms/op
# Warmup Iteration   6: 20,684 ms/op
# Warmup Iteration   7: 20,620 ms/op
# Warmup Iteration   8: 20,638 ms/op
# Warmup Iteration   9: 20,649 ms/op
# Warmup Iteration  10: 20,744 ms/op
Iteration   1: 20,602 ms/op
Iteration   2: 20,799 ms/op
Iteration   3: 20,783 ms/op
Iteration   4: 20,670 ms/op
Iteration   5: 20,699 ms/op
Iteration   6: 20,954 ms/op
Iteration   7: 20,595 ms/op
Iteration   8: 20,529 ms/op
Iteration   9: 20,683 ms/op
Iteration  10: 20,645 ms/op


Result "benchmarkFind":
  20,696 ±(99.9%) 0,185 ms/op [Average]
  (min, avg, max) = (20,529, 20,696, 20,954), stdev = 0,123
  CI (99.9%): [20,511, 20,881] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 32, patternSize = 2)

# Run progress: 31,62% complete, ETA 11:34:52
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

com.almondtools.stringbench.SampleNotQualifiedException
	at com.almondtools.stringbench.MultiPatternMatcherBenchmark.setup(MultiPatternMatcherBenchmark.java:36)
	at com.almondtools.stringbench.generated.SCAhoCorasickBenchmark_benchmarkFind_jmhTest._jmh_tryInit_f_scahocorasickbenchmark0_0(SCAhoCorasickBenchmark_benchmarkFind_jmhTest.java:425)
	at com.almondtools.stringbench.generated.SCAhoCorasickBenchmark_benchmarkFind_jmhTest.benchmarkFind_AverageTime(SCAhoCorasickBenchmark_benchmarkFind_jmhTest.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:430)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:412)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)




# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 32, patternSize = 4)

# Run progress: 31,66% complete, ETA 11:33:26
# Fork: 1 of 1
# Warmup Iteration   1: 176,790 ms/op
# Warmup Iteration   2: 157,310 ms/op
# Warmup Iteration   3: 157,815 ms/op
# Warmup Iteration   4: 157,943 ms/op
# Warmup Iteration   5: 157,160 ms/op
# Warmup Iteration   6: 157,041 ms/op
# Warmup Iteration   7: 156,961 ms/op
# Warmup Iteration   8: 160,461 ms/op
# Warmup Iteration   9: 158,879 ms/op
# Warmup Iteration  10: 157,403 ms/op
Iteration   1: 157,520 ms/op
Iteration   2: 157,771 ms/op
Iteration   3: 164,457 ms/op
Iteration   4: 165,027 ms/op
Iteration   5: 157,618 ms/op
Iteration   6: 160,008 ms/op
Iteration   7: 160,196 ms/op
Iteration   8: 159,446 ms/op
Iteration   9: 158,531 ms/op
Iteration  10: 161,381 ms/op


Result "benchmarkFind":
  160,196 ±(99.9%) 4,093 ms/op [Average]
  (min, avg, max) = (157,520, 160,196, 165,027), stdev = 2,707
  CI (99.9%): [156,103, 164,288] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 32, patternSize = 8)

# Run progress: 31,71% complete, ETA 11:32:47
# Fork: 1 of 1
# Warmup Iteration   1: 96,205 ms/op
# Warmup Iteration   2: 84,999 ms/op
# Warmup Iteration   3: 84,441 ms/op
# Warmup Iteration   4: 84,815 ms/op
# Warmup Iteration   5: 85,136 ms/op
# Warmup Iteration   6: 83,996 ms/op
# Warmup Iteration   7: 84,735 ms/op
# Warmup Iteration   8: 84,175 ms/op
# Warmup Iteration   9: 84,349 ms/op
# Warmup Iteration  10: 84,268 ms/op
Iteration   1: 84,117 ms/op
Iteration   2: 84,783 ms/op
Iteration   3: 84,148 ms/op
Iteration   4: 84,304 ms/op
Iteration   5: 84,341 ms/op
Iteration   6: 84,739 ms/op
Iteration   7: 84,818 ms/op
Iteration   8: 84,822 ms/op
Iteration   9: 84,239 ms/op
Iteration  10: 84,696 ms/op


Result "benchmarkFind":
  84,501 ±(99.9%) 0,446 ms/op [Average]
  (min, avg, max) = (84,117, 84,501, 84,822), stdev = 0,295
  CI (99.9%): [84,055, 84,947] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 32, patternSize = 16)

# Run progress: 31,76% complete, ETA 11:32:04
# Fork: 1 of 1
# Warmup Iteration   1: 21,244 ms/op
# Warmup Iteration   2: 20,472 ms/op
# Warmup Iteration   3: 20,404 ms/op
# Warmup Iteration   4: 20,380 ms/op
# Warmup Iteration   5: 20,446 ms/op
# Warmup Iteration   6: 20,437 ms/op
# Warmup Iteration   7: 20,346 ms/op
# Warmup Iteration   8: 20,353 ms/op
# Warmup Iteration   9: 20,353 ms/op
# Warmup Iteration  10: 20,460 ms/op
Iteration   1: 20,412 ms/op
Iteration   2: 20,332 ms/op
Iteration   3: 20,409 ms/op
Iteration   4: 20,468 ms/op
Iteration   5: 20,355 ms/op
Iteration   6: 20,513 ms/op
Iteration   7: 20,564 ms/op
Iteration   8: 20,298 ms/op
Iteration   9: 20,358 ms/op
Iteration  10: 20,268 ms/op


Result "benchmarkFind":
  20,398 ±(99.9%) 0,143 ms/op [Average]
  (min, avg, max) = (20,268, 20,398, 20,564), stdev = 0,095
  CI (99.9%): [20,254, 20,541] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 32, patternSize = 32)

# Run progress: 31,80% complete, ETA 11:31:20
# Fork: 1 of 1
# Warmup Iteration   1: 22,360 ms/op
# Warmup Iteration   2: 21,410 ms/op
# Warmup Iteration   3: 21,354 ms/op
# Warmup Iteration   4: 21,388 ms/op
# Warmup Iteration   5: 21,342 ms/op
# Warmup Iteration   6: 21,200 ms/op
# Warmup Iteration   7: 21,221 ms/op
# Warmup Iteration   8: 21,041 ms/op
# Warmup Iteration   9: 21,297 ms/op
# Warmup Iteration  10: 22,114 ms/op
Iteration   1: 21,321 ms/op
Iteration   2: 20,893 ms/op
Iteration   3: 21,071 ms/op
Iteration   4: 21,229 ms/op
Iteration   5: 21,167 ms/op
Iteration   6: 21,110 ms/op
Iteration   7: 21,012 ms/op
Iteration   8: 21,065 ms/op
Iteration   9: 21,067 ms/op
Iteration  10: 21,086 ms/op


Result "benchmarkFind":
  21,102 ±(99.9%) 0,177 ms/op [Average]
  (min, avg, max) = (20,893, 21,102, 21,321), stdev = 0,117
  CI (99.9%): [20,925, 21,279] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 32, patternSize = 64)

# Run progress: 31,85% complete, ETA 11:30:37
# Fork: 1 of 1
# Warmup Iteration   1: 20,561 ms/op
# Warmup Iteration   2: 19,871 ms/op
# Warmup Iteration   3: 19,766 ms/op
# Warmup Iteration   4: 19,720 ms/op
# Warmup Iteration   5: 19,738 ms/op
# Warmup Iteration   6: 19,724 ms/op
# Warmup Iteration   7: 19,624 ms/op
# Warmup Iteration   8: 19,626 ms/op
# Warmup Iteration   9: 19,608 ms/op
# Warmup Iteration  10: 19,694 ms/op
Iteration   1: 19,812 ms/op
Iteration   2: 19,885 ms/op
Iteration   3: 19,694 ms/op
Iteration   4: 19,647 ms/op
Iteration   5: 19,701 ms/op
Iteration   6: 19,665 ms/op
Iteration   7: 19,807 ms/op
Iteration   8: 19,824 ms/op
Iteration   9: 19,951 ms/op
Iteration  10: 19,881 ms/op


Result "benchmarkFind":
  19,787 ±(99.9%) 0,158 ms/op [Average]
  (min, avg, max) = (19,647, 19,787, 19,951), stdev = 0,105
  CI (99.9%): [19,629, 19,945] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 32, patternSize = 128)

# Run progress: 31,89% complete, ETA 11:29:53
# Fork: 1 of 1
# Warmup Iteration   1: 22,414 ms/op
# Warmup Iteration   2: 21,585 ms/op
# Warmup Iteration   3: 21,477 ms/op
# Warmup Iteration   4: 21,428 ms/op
# Warmup Iteration   5: 21,655 ms/op
# Warmup Iteration   6: 21,451 ms/op
# Warmup Iteration   7: 21,414 ms/op
# Warmup Iteration   8: 21,443 ms/op
# Warmup Iteration   9: 21,403 ms/op
# Warmup Iteration  10: 21,355 ms/op
Iteration   1: 21,385 ms/op
Iteration   2: 21,230 ms/op
Iteration   3: 21,380 ms/op
Iteration   4: 21,400 ms/op
Iteration   5: 21,276 ms/op
Iteration   6: 21,377 ms/op
Iteration   7: 21,356 ms/op
Iteration   8: 21,395 ms/op
Iteration   9: 21,511 ms/op
Iteration  10: 21,499 ms/op


Result "benchmarkFind":
  21,381 ±(99.9%) 0,129 ms/op [Average]
  (min, avg, max) = (21,230, 21,381, 21,511), stdev = 0,085
  CI (99.9%): [21,252, 21,510] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 32, patternSize = 256)

# Run progress: 31,94% complete, ETA 11:29:10
# Fork: 1 of 1
# Warmup Iteration   1: 22,081 ms/op
# Warmup Iteration   2: 21,216 ms/op
# Warmup Iteration   3: 21,071 ms/op
# Warmup Iteration   4: 20,898 ms/op
# Warmup Iteration   5: 20,886 ms/op
# Warmup Iteration   6: 21,182 ms/op
# Warmup Iteration   7: 20,889 ms/op
# Warmup Iteration   8: 21,868 ms/op
# Warmup Iteration   9: 21,906 ms/op
# Warmup Iteration  10: 20,812 ms/op
Iteration   1: 20,994 ms/op
Iteration   2: 20,762 ms/op
Iteration   3: 20,906 ms/op
Iteration   4: 21,000 ms/op
Iteration   5: 20,884 ms/op
Iteration   6: 20,940 ms/op
Iteration   7: 21,010 ms/op
Iteration   8: 21,054 ms/op
Iteration   9: 20,915 ms/op
Iteration  10: 21,103 ms/op


Result "benchmarkFind":
  20,957 ±(99.9%) 0,147 ms/op [Average]
  (min, avg, max) = (20,762, 20,957, 21,103), stdev = 0,097
  CI (99.9%): [20,810, 21,104] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 128, patternSize = 2)

# Run progress: 31,99% complete, ETA 11:28:26
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

com.almondtools.stringbench.SampleNotQualifiedException
	at com.almondtools.stringbench.MultiPatternMatcherBenchmark.setup(MultiPatternMatcherBenchmark.java:36)
	at com.almondtools.stringbench.generated.SCAhoCorasickBenchmark_benchmarkFind_jmhTest._jmh_tryInit_f_scahocorasickbenchmark0_0(SCAhoCorasickBenchmark_benchmarkFind_jmhTest.java:425)
	at com.almondtools.stringbench.generated.SCAhoCorasickBenchmark_benchmarkFind_jmhTest.benchmarkFind_AverageTime(SCAhoCorasickBenchmark_benchmarkFind_jmhTest.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:430)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:412)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)




# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 128, patternSize = 4)

# Run progress: 32,03% complete, ETA 11:27:02
# Fork: 1 of 1
# Warmup Iteration   1: 491,721 ms/op
# Warmup Iteration   2: 452,027 ms/op
# Warmup Iteration   3: 446,198 ms/op
# Warmup Iteration   4: 444,813 ms/op
# Warmup Iteration   5: 443,964 ms/op
# Warmup Iteration   6: 449,273 ms/op
# Warmup Iteration   7: 446,110 ms/op
# Warmup Iteration   8: 444,984 ms/op
# Warmup Iteration   9: 445,883 ms/op
# Warmup Iteration  10: 443,701 ms/op
Iteration   1: 445,993 ms/op
Iteration   2: 446,308 ms/op
Iteration   3: 448,287 ms/op
Iteration   4: 445,649 ms/op
Iteration   5: 444,162 ms/op
Iteration   6: 444,240 ms/op
Iteration   7: 447,679 ms/op
Iteration   8: 444,975 ms/op
Iteration   9: 445,227 ms/op
Iteration  10: 446,431 ms/op


Result "benchmarkFind":
  445,895 ±(99.9%) 2,045 ms/op [Average]
  (min, avg, max) = (444,162, 445,895, 448,287), stdev = 1,353
  CI (99.9%): [443,850, 447,940] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 128, patternSize = 8)

# Run progress: 32,08% complete, ETA 11:26:33
# Fork: 1 of 1
# Warmup Iteration   1: 904,668 ms/op
# Warmup Iteration   2: 853,660 ms/op
# Warmup Iteration   3: 851,214 ms/op
# Warmup Iteration   4: 847,775 ms/op
# Warmup Iteration   5: 847,495 ms/op
# Warmup Iteration   6: 851,151 ms/op
# Warmup Iteration   7: 845,597 ms/op
# Warmup Iteration   8: 847,840 ms/op
# Warmup Iteration   9: 847,413 ms/op
# Warmup Iteration  10: 843,333 ms/op
Iteration   1: 886,202 ms/op
Iteration   2: 841,010 ms/op
Iteration   3: 844,867 ms/op
Iteration   4: 845,500 ms/op
Iteration   5: 843,989 ms/op
Iteration   6: 849,694 ms/op
Iteration   7: 841,844 ms/op
Iteration   8: 841,594 ms/op
Iteration   9: 846,737 ms/op
Iteration  10: 849,282 ms/op


Result "benchmarkFind":
  849,072 ±(99.9%) 20,246 ms/op [Average]
  (min, avg, max) = (841,010, 849,072, 886,202), stdev = 13,391
  CI (99.9%): [828,826, 869,318] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 128, patternSize = 16)

# Run progress: 32,12% complete, ETA 11:26:20
# Fork: 1 of 1
# Warmup Iteration   1: 25,943 ms/op
# Warmup Iteration   2: 24,589 ms/op
# Warmup Iteration   3: 24,430 ms/op
# Warmup Iteration   4: 24,154 ms/op
# Warmup Iteration   5: 23,787 ms/op
# Warmup Iteration   6: 23,867 ms/op
# Warmup Iteration   7: 23,716 ms/op
# Warmup Iteration   8: 23,544 ms/op
# Warmup Iteration   9: 23,657 ms/op
# Warmup Iteration  10: 23,770 ms/op
Iteration   1: 23,543 ms/op
Iteration   2: 23,629 ms/op
Iteration   3: 23,622 ms/op
Iteration   4: 23,629 ms/op
Iteration   5: 23,702 ms/op
Iteration   6: 23,680 ms/op
Iteration   7: 23,800 ms/op
Iteration   8: 23,776 ms/op
Iteration   9: 23,677 ms/op
Iteration  10: 23,838 ms/op


Result "benchmarkFind":
  23,690 ±(99.9%) 0,139 ms/op [Average]
  (min, avg, max) = (23,543, 23,690, 23,838), stdev = 0,092
  CI (99.9%): [23,551, 23,828] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 128, patternSize = 32)

# Run progress: 32,17% complete, ETA 11:25:37
# Fork: 1 of 1
# Warmup Iteration   1: 27,010 ms/op
# Warmup Iteration   2: 25,769 ms/op
# Warmup Iteration   3: 25,545 ms/op
# Warmup Iteration   4: 25,938 ms/op
# Warmup Iteration   5: 26,637 ms/op
# Warmup Iteration   6: 25,979 ms/op
# Warmup Iteration   7: 24,732 ms/op
# Warmup Iteration   8: 24,688 ms/op
# Warmup Iteration   9: 24,905 ms/op
# Warmup Iteration  10: 24,530 ms/op
Iteration   1: 24,559 ms/op
Iteration   2: 24,495 ms/op
Iteration   3: 24,798 ms/op
Iteration   4: 24,772 ms/op
Iteration   5: 24,461 ms/op
Iteration   6: 24,645 ms/op
Iteration   7: 24,873 ms/op
Iteration   8: 24,934 ms/op
Iteration   9: 24,798 ms/op
Iteration  10: 25,001 ms/op


Result "benchmarkFind":
  24,734 ±(99.9%) 0,281 ms/op [Average]
  (min, avg, max) = (24,461, 24,734, 25,001), stdev = 0,186
  CI (99.9%): [24,453, 25,014] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 128, patternSize = 64)

# Run progress: 32,22% complete, ETA 11:24:54
# Fork: 1 of 1
# Warmup Iteration   1: 27,329 ms/op
# Warmup Iteration   2: 25,772 ms/op
# Warmup Iteration   3: 27,425 ms/op
# Warmup Iteration   4: 24,960 ms/op
# Warmup Iteration   5: 24,858 ms/op
# Warmup Iteration   6: 25,068 ms/op
# Warmup Iteration   7: 25,120 ms/op
# Warmup Iteration   8: 25,278 ms/op
# Warmup Iteration   9: 25,291 ms/op
# Warmup Iteration  10: 25,151 ms/op
Iteration   1: 25,040 ms/op
Iteration   2: 24,929 ms/op
Iteration   3: 24,965 ms/op
Iteration   4: 25,013 ms/op
Iteration   5: 24,858 ms/op
Iteration   6: 24,872 ms/op
Iteration   7: 25,160 ms/op
Iteration   8: 25,163 ms/op
Iteration   9: 24,939 ms/op
Iteration  10: 25,098 ms/op


Result "benchmarkFind":
  25,004 ±(99.9%) 0,167 ms/op [Average]
  (min, avg, max) = (24,858, 25,004, 25,163), stdev = 0,111
  CI (99.9%): [24,837, 25,171] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 128, patternSize = 128)

# Run progress: 32,26% complete, ETA 11:24:11
# Fork: 1 of 1
# Warmup Iteration   1: 27,138 ms/op
# Warmup Iteration   2: 25,830 ms/op
# Warmup Iteration   3: 25,814 ms/op
# Warmup Iteration   4: 26,038 ms/op
# Warmup Iteration   5: 25,857 ms/op
# Warmup Iteration   6: 25,841 ms/op
# Warmup Iteration   7: 25,872 ms/op
# Warmup Iteration   8: 25,818 ms/op
# Warmup Iteration   9: 26,052 ms/op
# Warmup Iteration  10: 25,986 ms/op
Iteration   1: 26,027 ms/op
Iteration   2: 25,973 ms/op
Iteration   3: 26,218 ms/op
Iteration   4: 26,221 ms/op
Iteration   5: 26,170 ms/op
Iteration   6: 26,139 ms/op
Iteration   7: 26,072 ms/op
Iteration   8: 26,008 ms/op
Iteration   9: 25,819 ms/op
Iteration  10: 25,882 ms/op


Result "benchmarkFind":
  26,053 ±(99.9%) 0,208 ms/op [Average]
  (min, avg, max) = (25,819, 26,053, 26,221), stdev = 0,138
  CI (99.9%): [25,845, 26,261] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 128, patternSize = 256)

# Run progress: 32,31% complete, ETA 11:23:28
# Fork: 1 of 1
# Warmup Iteration   1: 26,039 ms/op
# Warmup Iteration   2: 24,949 ms/op
# Warmup Iteration   3: 24,927 ms/op
# Warmup Iteration   4: 24,795 ms/op
# Warmup Iteration   5: 24,858 ms/op
# Warmup Iteration   6: 24,790 ms/op
# Warmup Iteration   7: 24,835 ms/op
# Warmup Iteration   8: 24,757 ms/op
# Warmup Iteration   9: 24,765 ms/op
# Warmup Iteration  10: 24,800 ms/op
Iteration   1: 24,837 ms/op
Iteration   2: 24,798 ms/op
Iteration   3: 24,777 ms/op
Iteration   4: 24,861 ms/op
Iteration   5: 24,844 ms/op
Iteration   6: 24,878 ms/op
Iteration   7: 24,962 ms/op
Iteration   8: 24,932 ms/op
Iteration   9: 24,767 ms/op
Iteration  10: 24,703 ms/op


Result "benchmarkFind":
  24,836 ±(99.9%) 0,118 ms/op [Average]
  (min, avg, max) = (24,703, 24,836, 24,962), stdev = 0,078
  CI (99.9%): [24,718, 24,954] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 2, patternSize = 2)

# Run progress: 32,35% complete, ETA 11:22:46
# Fork: 1 of 1
# Warmup Iteration   1: 0,417 ms/op
# Warmup Iteration   2: 0,337 ms/op
# Warmup Iteration   3: 0,336 ms/op
# Warmup Iteration   4: 0,339 ms/op
# Warmup Iteration   5: 0,341 ms/op
# Warmup Iteration   6: 0,339 ms/op
# Warmup Iteration   7: 0,342 ms/op
# Warmup Iteration   8: 0,351 ms/op
# Warmup Iteration   9: 0,343 ms/op
# Warmup Iteration  10: 0,342 ms/op
Iteration   1: 0,342 ms/op
Iteration   2: 0,358 ms/op
Iteration   3: 0,340 ms/op
Iteration   4: 0,342 ms/op
Iteration   5: 0,340 ms/op
Iteration   6: 0,342 ms/op
Iteration   7: 0,342 ms/op
Iteration   8: 0,341 ms/op
Iteration   9: 0,342 ms/op
Iteration  10: 0,341 ms/op


Result "benchmarkFind":
  0,343 ±(99.9%) 0,008 ms/op [Average]
  (min, avg, max) = (0,340, 0,343, 0,358), stdev = 0,005
  CI (99.9%): [0,335, 0,351] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 2, patternSize = 4)

# Run progress: 32,40% complete, ETA 11:22:03
# Fork: 1 of 1
# Warmup Iteration   1: 16,563 ms/op
# Warmup Iteration   2: 14,168 ms/op
# Warmup Iteration   3: 14,058 ms/op
# Warmup Iteration   4: 14,233 ms/op
# Warmup Iteration   5: 14,096 ms/op
# Warmup Iteration   6: 14,075 ms/op
# Warmup Iteration   7: 14,057 ms/op
# Warmup Iteration   8: 14,105 ms/op
# Warmup Iteration   9: 14,079 ms/op
# Warmup Iteration  10: 14,091 ms/op
Iteration   1: 14,070 ms/op
Iteration   2: 14,146 ms/op
Iteration   3: 14,014 ms/op
Iteration   4: 14,102 ms/op
Iteration   5: 14,145 ms/op
Iteration   6: 14,092 ms/op
Iteration   7: 14,156 ms/op
Iteration   8: 14,122 ms/op
Iteration   9: 14,114 ms/op
Iteration  10: 14,021 ms/op


Result "benchmarkFind":
  14,098 ±(99.9%) 0,076 ms/op [Average]
  (min, avg, max) = (14,014, 14,098, 14,156), stdev = 0,050
  CI (99.9%): [14,023, 14,174] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 2, patternSize = 8)

# Run progress: 32,44% complete, ETA 11:21:20
# Fork: 1 of 1
# Warmup Iteration   1: 13,214 ms/op
# Warmup Iteration   2: 12,673 ms/op
# Warmup Iteration   3: 12,543 ms/op
# Warmup Iteration   4: 12,595 ms/op
# Warmup Iteration   5: 12,708 ms/op
# Warmup Iteration   6: 12,573 ms/op
# Warmup Iteration   7: 12,598 ms/op
# Warmup Iteration   8: 12,558 ms/op
# Warmup Iteration   9: 12,617 ms/op
# Warmup Iteration  10: 12,632 ms/op
Iteration   1: 12,685 ms/op
Iteration   2: 12,701 ms/op
Iteration   3: 12,610 ms/op
Iteration   4: 12,605 ms/op
Iteration   5: 12,564 ms/op
Iteration   6: 12,599 ms/op
Iteration   7: 12,730 ms/op
Iteration   8: 12,719 ms/op
Iteration   9: 13,954 ms/op
Iteration  10: 12,687 ms/op


Result "benchmarkFind":
  12,785 ±(99.9%) 0,627 ms/op [Average]
  (min, avg, max) = (12,564, 12,785, 13,954), stdev = 0,415
  CI (99.9%): [12,159, 13,412] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 2, patternSize = 16)

# Run progress: 32,49% complete, ETA 11:20:37
# Fork: 1 of 1
# Warmup Iteration   1: 13,380 ms/op
# Warmup Iteration   2: 12,640 ms/op
# Warmup Iteration   3: 12,617 ms/op
# Warmup Iteration   4: 12,704 ms/op
# Warmup Iteration   5: 12,628 ms/op
# Warmup Iteration   6: 12,613 ms/op
# Warmup Iteration   7: 12,715 ms/op
# Warmup Iteration   8: 12,672 ms/op
# Warmup Iteration   9: 12,635 ms/op
# Warmup Iteration  10: 12,610 ms/op
Iteration   1: 12,704 ms/op
Iteration   2: 12,631 ms/op
Iteration   3: 12,650 ms/op
Iteration   4: 12,657 ms/op
Iteration   5: 12,845 ms/op
Iteration   6: 12,655 ms/op
Iteration   7: 12,616 ms/op
Iteration   8: 12,617 ms/op
Iteration   9: 12,603 ms/op
Iteration  10: 12,556 ms/op


Result "benchmarkFind":
  12,653 ±(99.9%) 0,118 ms/op [Average]
  (min, avg, max) = (12,556, 12,653, 12,845), stdev = 0,078
  CI (99.9%): [12,535, 12,771] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 2, patternSize = 32)

# Run progress: 32,54% complete, ETA 11:19:55
# Fork: 1 of 1
# Warmup Iteration   1: 13,580 ms/op
# Warmup Iteration   2: 12,860 ms/op
# Warmup Iteration   3: 12,919 ms/op
# Warmup Iteration   4: 12,869 ms/op
# Warmup Iteration   5: 12,884 ms/op
# Warmup Iteration   6: 12,881 ms/op
# Warmup Iteration   7: 12,922 ms/op
# Warmup Iteration   8: 12,946 ms/op
# Warmup Iteration   9: 12,996 ms/op
# Warmup Iteration  10: 12,901 ms/op
Iteration   1: 12,948 ms/op
Iteration   2: 13,050 ms/op
Iteration   3: 13,055 ms/op
Iteration   4: 12,947 ms/op
Iteration   5: 12,993 ms/op
Iteration   6: 12,923 ms/op
Iteration   7: 12,995 ms/op
Iteration   8: 12,948 ms/op
Iteration   9: 12,827 ms/op
Iteration  10: 12,910 ms/op


Result "benchmarkFind":
  12,960 ±(99.9%) 0,103 ms/op [Average]
  (min, avg, max) = (12,827, 12,960, 13,055), stdev = 0,068
  CI (99.9%): [12,857, 13,062] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 2, patternSize = 64)

# Run progress: 32,58% complete, ETA 11:19:12
# Fork: 1 of 1
# Warmup Iteration   1: 13,639 ms/op
# Warmup Iteration   2: 13,114 ms/op
# Warmup Iteration   3: 13,020 ms/op
# Warmup Iteration   4: 13,139 ms/op
# Warmup Iteration   5: 13,082 ms/op
# Warmup Iteration   6: 13,254 ms/op
# Warmup Iteration   7: 13,130 ms/op
# Warmup Iteration   8: 13,088 ms/op
# Warmup Iteration   9: 13,270 ms/op
# Warmup Iteration  10: 13,146 ms/op
Iteration   1: 13,069 ms/op
Iteration   2: 12,989 ms/op
Iteration   3: 12,957 ms/op
Iteration   4: 13,035 ms/op
Iteration   5: 12,958 ms/op
Iteration   6: 13,014 ms/op
Iteration   7: 13,337 ms/op
Iteration   8: 13,658 ms/op
Iteration   9: 12,953 ms/op
Iteration  10: 12,925 ms/op


Result "benchmarkFind":
  13,090 ±(99.9%) 0,351 ms/op [Average]
  (min, avg, max) = (12,925, 13,090, 13,658), stdev = 0,232
  CI (99.9%): [12,739, 13,440] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 2, patternSize = 128)

# Run progress: 32,63% complete, ETA 11:18:29
# Fork: 1 of 1
# Warmup Iteration   1: 13,381 ms/op
# Warmup Iteration   2: 12,786 ms/op
# Warmup Iteration   3: 12,755 ms/op
# Warmup Iteration   4: 12,764 ms/op
# Warmup Iteration   5: 12,964 ms/op
# Warmup Iteration   6: 12,940 ms/op
# Warmup Iteration   7: 12,938 ms/op
# Warmup Iteration   8: 12,938 ms/op
# Warmup Iteration   9: 13,055 ms/op
# Warmup Iteration  10: 12,785 ms/op
Iteration   1: 12,789 ms/op
Iteration   2: 12,864 ms/op
Iteration   3: 12,879 ms/op
Iteration   4: 12,888 ms/op
Iteration   5: 12,888 ms/op
Iteration   6: 13,059 ms/op
Iteration   7: 12,723 ms/op
Iteration   8: 12,911 ms/op
Iteration   9: 12,695 ms/op
Iteration  10: 12,602 ms/op


Result "benchmarkFind":
  12,830 ±(99.9%) 0,197 ms/op [Average]
  (min, avg, max) = (12,602, 12,830, 13,059), stdev = 0,130
  CI (99.9%): [12,633, 13,027] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 2, patternSize = 256)

# Run progress: 32,67% complete, ETA 11:17:47
# Fork: 1 of 1
# Warmup Iteration   1: 13,490 ms/op
# Warmup Iteration   2: 12,777 ms/op
# Warmup Iteration   3: 12,781 ms/op
# Warmup Iteration   4: 12,728 ms/op
# Warmup Iteration   5: 12,678 ms/op
# Warmup Iteration   6: 12,689 ms/op
# Warmup Iteration   7: 12,618 ms/op
# Warmup Iteration   8: 12,703 ms/op
# Warmup Iteration   9: 12,635 ms/op
# Warmup Iteration  10: 13,144 ms/op
Iteration   1: 12,590 ms/op
Iteration   2: 12,622 ms/op
Iteration   3: 12,613 ms/op
Iteration   4: 12,612 ms/op
Iteration   5: 12,580 ms/op
Iteration   6: 12,613 ms/op
Iteration   7: 12,763 ms/op
Iteration   8: 12,751 ms/op
Iteration   9: 12,781 ms/op
Iteration  10: 12,775 ms/op


Result "benchmarkFind":
  12,670 ±(99.9%) 0,129 ms/op [Average]
  (min, avg, max) = (12,580, 12,670, 12,781), stdev = 0,085
  CI (99.9%): [12,541, 12,799] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 8, patternSize = 2)

# Run progress: 32,72% complete, ETA 11:17:05
# Fork: 1 of 1
# Warmup Iteration   1: 2,499 ms/op
# Warmup Iteration   2: 2,294 ms/op
# Warmup Iteration   3: 2,279 ms/op
# Warmup Iteration   4: 2,281 ms/op
# Warmup Iteration   5: 2,276 ms/op
# Warmup Iteration   6: 2,273 ms/op
# Warmup Iteration   7: 2,294 ms/op
# Warmup Iteration   8: 2,282 ms/op
# Warmup Iteration   9: 2,269 ms/op
# Warmup Iteration  10: 2,294 ms/op
Iteration   1: 2,267 ms/op
Iteration   2: 2,279 ms/op
Iteration   3: 2,273 ms/op
Iteration   4: 2,287 ms/op
Iteration   5: 2,274 ms/op
Iteration   6: 2,551 ms/op
Iteration   7: 2,282 ms/op
Iteration   8: 2,297 ms/op
Iteration   9: 2,274 ms/op
Iteration  10: 2,297 ms/op


Result "benchmarkFind":
  2,308 ±(99.9%) 0,130 ms/op [Average]
  (min, avg, max) = (2,267, 2,308, 2,551), stdev = 0,086
  CI (99.9%): [2,178, 2,438] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 8, patternSize = 4)

# Run progress: 32,77% complete, ETA 11:16:22
# Fork: 1 of 1
# Warmup Iteration   1: 66,984 ms/op
# Warmup Iteration   2: 58,173 ms/op
# Warmup Iteration   3: 57,926 ms/op
# Warmup Iteration   4: 58,616 ms/op
# Warmup Iteration   5: 58,109 ms/op
# Warmup Iteration   6: 58,492 ms/op
# Warmup Iteration   7: 58,197 ms/op
# Warmup Iteration   8: 58,360 ms/op
# Warmup Iteration   9: 57,870 ms/op
# Warmup Iteration  10: 58,311 ms/op
Iteration   1: 57,800 ms/op
Iteration   2: 57,851 ms/op
Iteration   3: 58,697 ms/op
Iteration   4: 57,820 ms/op
Iteration   5: 58,280 ms/op
Iteration   6: 58,131 ms/op
Iteration   7: 58,696 ms/op
Iteration   8: 58,371 ms/op
Iteration   9: 58,400 ms/op
Iteration  10: 57,918 ms/op


Result "benchmarkFind":
  58,196 ±(99.9%) 0,524 ms/op [Average]
  (min, avg, max) = (57,800, 58,196, 58,697), stdev = 0,346
  CI (99.9%): [57,673, 58,720] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 8, patternSize = 8)

# Run progress: 32,81% complete, ETA 11:15:41
# Fork: 1 of 1
# Warmup Iteration   1: 18,976 ms/op
# Warmup Iteration   2: 17,904 ms/op
# Warmup Iteration   3: 17,927 ms/op
# Warmup Iteration   4: 17,778 ms/op
# Warmup Iteration   5: 17,931 ms/op
# Warmup Iteration   6: 17,841 ms/op
# Warmup Iteration   7: 17,568 ms/op
# Warmup Iteration   8: 17,722 ms/op
# Warmup Iteration   9: 17,747 ms/op
# Warmup Iteration  10: 17,623 ms/op
Iteration   1: 17,599 ms/op
Iteration   2: 17,950 ms/op
Iteration   3: 17,866 ms/op
Iteration   4: 17,783 ms/op
Iteration   5: 17,875 ms/op
Iteration   6: 17,793 ms/op
Iteration   7: 17,959 ms/op
Iteration   8: 17,817 ms/op
Iteration   9: 17,981 ms/op
Iteration  10: 17,912 ms/op


Result "benchmarkFind":
  17,854 ±(99.9%) 0,171 ms/op [Average]
  (min, avg, max) = (17,599, 17,854, 17,981), stdev = 0,113
  CI (99.9%): [17,683, 18,025] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 8, patternSize = 16)

# Run progress: 32,86% complete, ETA 11:14:59
# Fork: 1 of 1
# Warmup Iteration   1: 19,258 ms/op
# Warmup Iteration   2: 18,994 ms/op
# Warmup Iteration   3: 19,163 ms/op
# Warmup Iteration   4: 18,534 ms/op
# Warmup Iteration   5: 18,236 ms/op
# Warmup Iteration   6: 18,072 ms/op
# Warmup Iteration   7: 18,249 ms/op
# Warmup Iteration   8: 18,086 ms/op
# Warmup Iteration   9: 18,375 ms/op
# Warmup Iteration  10: 18,464 ms/op
Iteration   1: 18,120 ms/op
Iteration   2: 18,493 ms/op
Iteration   3: 21,273 ms/op
Iteration   4: 18,186 ms/op
Iteration   5: 18,253 ms/op
Iteration   6: 18,087 ms/op
Iteration   7: 18,209 ms/op
Iteration   8: 18,246 ms/op
Iteration   9: 18,402 ms/op
Iteration  10: 17,981 ms/op


Result "benchmarkFind":
  18,525 ±(99.9%) 1,477 ms/op [Average]
  (min, avg, max) = (17,981, 18,525, 21,273), stdev = 0,977
  CI (99.9%): [17,048, 20,002] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 8, patternSize = 32)

# Run progress: 32,90% complete, ETA 11:14:17
# Fork: 1 of 1
# Warmup Iteration   1: 19,062 ms/op
# Warmup Iteration   2: 17,760 ms/op
# Warmup Iteration   3: 17,711 ms/op
# Warmup Iteration   4: 17,829 ms/op
# Warmup Iteration   5: 17,817 ms/op
# Warmup Iteration   6: 17,875 ms/op
# Warmup Iteration   7: 17,862 ms/op
# Warmup Iteration   8: 17,836 ms/op
# Warmup Iteration   9: 17,850 ms/op
# Warmup Iteration  10: 17,854 ms/op
Iteration   1: 18,239 ms/op
Iteration   2: 17,967 ms/op
Iteration   3: 18,010 ms/op
Iteration   4: 18,093 ms/op
Iteration   5: 18,079 ms/op
Iteration   6: 18,049 ms/op
Iteration   7: 17,777 ms/op
Iteration   8: 17,919 ms/op
Iteration   9: 17,880 ms/op
Iteration  10: 17,767 ms/op


Result "benchmarkFind":
  17,978 ±(99.9%) 0,223 ms/op [Average]
  (min, avg, max) = (17,767, 17,978, 18,239), stdev = 0,148
  CI (99.9%): [17,755, 18,201] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 8, patternSize = 64)

# Run progress: 32,95% complete, ETA 11:13:35
# Fork: 1 of 1
# Warmup Iteration   1: 18,152 ms/op
# Warmup Iteration   2: 17,308 ms/op
# Warmup Iteration   3: 17,223 ms/op
# Warmup Iteration   4: 17,084 ms/op
# Warmup Iteration   5: 17,241 ms/op
# Warmup Iteration   6: 17,268 ms/op
# Warmup Iteration   7: 17,134 ms/op
# Warmup Iteration   8: 17,199 ms/op
# Warmup Iteration   9: 16,980 ms/op
# Warmup Iteration  10: 17,124 ms/op
Iteration   1: 17,123 ms/op
Iteration   2: 17,039 ms/op
Iteration   3: 17,105 ms/op
Iteration   4: 17,117 ms/op
Iteration   5: 17,107 ms/op
Iteration   6: 17,125 ms/op
Iteration   7: 17,100 ms/op
Iteration   8: 17,166 ms/op
Iteration   9: 17,095 ms/op
Iteration  10: 17,075 ms/op


Result "benchmarkFind":
  17,105 ±(99.9%) 0,050 ms/op [Average]
  (min, avg, max) = (17,039, 17,105, 17,166), stdev = 0,033
  CI (99.9%): [17,055, 17,155] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 8, patternSize = 128)

# Run progress: 33,00% complete, ETA 11:12:53
# Fork: 1 of 1
# Warmup Iteration   1: 18,144 ms/op
# Warmup Iteration   2: 17,490 ms/op
# Warmup Iteration   3: 17,539 ms/op
# Warmup Iteration   4: 17,496 ms/op
# Warmup Iteration   5: 17,449 ms/op
# Warmup Iteration   6: 17,604 ms/op
# Warmup Iteration   7: 17,415 ms/op
# Warmup Iteration   8: 17,388 ms/op
# Warmup Iteration   9: 17,615 ms/op
# Warmup Iteration  10: 17,528 ms/op
Iteration   1: 18,600 ms/op
Iteration   2: 17,515 ms/op
Iteration   3: 17,440 ms/op
Iteration   4: 17,500 ms/op
Iteration   5: 17,576 ms/op
Iteration   6: 17,576 ms/op
Iteration   7: 17,471 ms/op
Iteration   8: 17,646 ms/op
Iteration   9: 17,278 ms/op
Iteration  10: 17,349 ms/op


Result "benchmarkFind":
  17,595 ±(99.9%) 0,559 ms/op [Average]
  (min, avg, max) = (17,278, 17,595, 18,600), stdev = 0,370
  CI (99.9%): [17,036, 18,154] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 8, patternSize = 256)

# Run progress: 33,04% complete, ETA 11:12:11
# Fork: 1 of 1
# Warmup Iteration   1: 19,155 ms/op
# Warmup Iteration   2: 17,450 ms/op
# Warmup Iteration   3: 17,576 ms/op
# Warmup Iteration   4: 17,575 ms/op
# Warmup Iteration   5: 17,443 ms/op
# Warmup Iteration   6: 17,422 ms/op
# Warmup Iteration   7: 17,228 ms/op
# Warmup Iteration   8: 17,432 ms/op
# Warmup Iteration   9: 17,415 ms/op
# Warmup Iteration  10: 17,378 ms/op
Iteration   1: 17,263 ms/op
Iteration   2: 17,378 ms/op
Iteration   3: 17,325 ms/op
Iteration   4: 17,401 ms/op
Iteration   5: 17,357 ms/op
Iteration   6: 17,470 ms/op
Iteration   7: 17,366 ms/op
Iteration   8: 17,522 ms/op
Iteration   9: 17,498 ms/op
Iteration  10: 17,259 ms/op


Result "benchmarkFind":
  17,384 ±(99.9%) 0,137 ms/op [Average]
  (min, avg, max) = (17,259, 17,384, 17,522), stdev = 0,091
  CI (99.9%): [17,247, 17,522] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 32, patternSize = 2)

# Run progress: 33,09% complete, ETA 11:11:29
# Fork: 1 of 1
# Warmup Iteration   1: 16,008 ms/op
# Warmup Iteration   2: 14,988 ms/op
# Warmup Iteration   3: 14,905 ms/op
# Warmup Iteration   4: 14,889 ms/op
# Warmup Iteration   5: 14,908 ms/op
# Warmup Iteration   6: 14,842 ms/op
# Warmup Iteration   7: 14,927 ms/op
# Warmup Iteration   8: 14,912 ms/op
# Warmup Iteration   9: 14,876 ms/op
# Warmup Iteration  10: 14,932 ms/op
Iteration   1: 14,871 ms/op
Iteration   2: 14,828 ms/op
Iteration   3: 14,844 ms/op
Iteration   4: 14,877 ms/op
Iteration   5: 14,806 ms/op
Iteration   6: 14,824 ms/op
Iteration   7: 14,793 ms/op
Iteration   8: 14,807 ms/op
Iteration   9: 14,905 ms/op
Iteration  10: 14,868 ms/op


Result "benchmarkFind":
  14,842 ±(99.9%) 0,056 ms/op [Average]
  (min, avg, max) = (14,793, 14,842, 14,905), stdev = 0,037
  CI (99.9%): [14,787, 14,898] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 32, patternSize = 4)

# Run progress: 33,13% complete, ETA 11:10:48
# Fork: 1 of 1
# Warmup Iteration   1: 725,562 ms/op
# Warmup Iteration   2: 685,018 ms/op
# Warmup Iteration   3: 683,869 ms/op
# Warmup Iteration   4: 683,462 ms/op
# Warmup Iteration   5: 680,226 ms/op
# Warmup Iteration   6: 680,073 ms/op
# Warmup Iteration   7: 716,490 ms/op
# Warmup Iteration   8: 667,924 ms/op
# Warmup Iteration   9: 670,858 ms/op
# Warmup Iteration  10: 671,179 ms/op
Iteration   1: 677,865 ms/op
Iteration   2: 671,145 ms/op
Iteration   3: 671,046 ms/op
Iteration   4: 674,860 ms/op
Iteration   5: 669,593 ms/op
Iteration   6: 669,172 ms/op
Iteration   7: 668,800 ms/op
Iteration   8: 670,795 ms/op
Iteration   9: 672,133 ms/op
Iteration  10: 669,124 ms/op


Result "benchmarkFind":
  671,453 ±(99.9%) 4,364 ms/op [Average]
  (min, avg, max) = (668,800, 671,453, 677,865), stdev = 2,887
  CI (99.9%): [667,089, 675,818] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 32, patternSize = 8)

# Run progress: 33,18% complete, ETA 11:10:20
# Fork: 1 of 1
# Warmup Iteration   1: 20,720 ms/op
# Warmup Iteration   2: 19,498 ms/op
# Warmup Iteration   3: 19,474 ms/op
# Warmup Iteration   4: 19,180 ms/op
# Warmup Iteration   5: 19,372 ms/op
# Warmup Iteration   6: 19,466 ms/op
# Warmup Iteration   7: 19,394 ms/op
# Warmup Iteration   8: 19,449 ms/op
# Warmup Iteration   9: 19,424 ms/op
# Warmup Iteration  10: 19,402 ms/op
Iteration   1: 19,380 ms/op
Iteration   2: 19,319 ms/op
Iteration   3: 19,366 ms/op
Iteration   4: 19,412 ms/op
Iteration   5: 19,392 ms/op
Iteration   6: 19,355 ms/op
Iteration   7: 19,384 ms/op
Iteration   8: 19,499 ms/op
Iteration   9: 19,502 ms/op
Iteration  10: 19,563 ms/op


Result "benchmarkFind":
  19,417 ±(99.9%) 0,118 ms/op [Average]
  (min, avg, max) = (19,319, 19,417, 19,563), stdev = 0,078
  CI (99.9%): [19,300, 19,535] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 32, patternSize = 16)

# Run progress: 33,23% complete, ETA 11:09:38
# Fork: 1 of 1
# Warmup Iteration   1: 20,876 ms/op
# Warmup Iteration   2: 19,979 ms/op
# Warmup Iteration   3: 20,054 ms/op
# Warmup Iteration   4: 19,877 ms/op
# Warmup Iteration   5: 19,919 ms/op
# Warmup Iteration   6: 20,033 ms/op
# Warmup Iteration   7: 20,034 ms/op
# Warmup Iteration   8: 20,016 ms/op
# Warmup Iteration   9: 20,010 ms/op
# Warmup Iteration  10: 19,907 ms/op
Iteration   1: 19,972 ms/op
Iteration   2: 19,813 ms/op
Iteration   3: 20,030 ms/op
Iteration   4: 19,934 ms/op
Iteration   5: 20,089 ms/op
Iteration   6: 19,945 ms/op
Iteration   7: 20,021 ms/op
Iteration   8: 19,946 ms/op
Iteration   9: 20,034 ms/op
Iteration  10: 20,174 ms/op


Result "benchmarkFind":
  19,996 ±(99.9%) 0,148 ms/op [Average]
  (min, avg, max) = (19,813, 19,996, 20,174), stdev = 0,098
  CI (99.9%): [19,847, 20,144] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 32, patternSize = 32)

# Run progress: 33,27% complete, ETA 11:08:57
# Fork: 1 of 1
# Warmup Iteration   1: 20,767 ms/op
# Warmup Iteration   2: 19,933 ms/op
# Warmup Iteration   3: 19,902 ms/op
# Warmup Iteration   4: 19,943 ms/op
# Warmup Iteration   5: 19,924 ms/op
# Warmup Iteration   6: 19,947 ms/op
# Warmup Iteration   7: 19,906 ms/op
# Warmup Iteration   8: 19,878 ms/op
# Warmup Iteration   9: 19,970 ms/op
# Warmup Iteration  10: 19,919 ms/op
Iteration   1: 19,791 ms/op
Iteration   2: 19,832 ms/op
Iteration   3: 19,973 ms/op
Iteration   4: 19,741 ms/op
Iteration   5: 19,636 ms/op
Iteration   6: 19,855 ms/op
Iteration   7: 19,658 ms/op
Iteration   8: 19,889 ms/op
Iteration   9: 19,855 ms/op
Iteration  10: 19,851 ms/op


Result "benchmarkFind":
  19,808 ±(99.9%) 0,158 ms/op [Average]
  (min, avg, max) = (19,636, 19,808, 19,973), stdev = 0,104
  CI (99.9%): [19,650, 19,966] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 32, patternSize = 64)

# Run progress: 33,32% complete, ETA 11:08:15
# Fork: 1 of 1
# Warmup Iteration   1: 21,667 ms/op
# Warmup Iteration   2: 20,521 ms/op
# Warmup Iteration   3: 20,581 ms/op
# Warmup Iteration   4: 20,422 ms/op
# Warmup Iteration   5: 20,465 ms/op
# Warmup Iteration   6: 20,454 ms/op
# Warmup Iteration   7: 20,491 ms/op
# Warmup Iteration   8: 20,529 ms/op
# Warmup Iteration   9: 20,448 ms/op
# Warmup Iteration  10: 20,360 ms/op
Iteration   1: 20,478 ms/op
Iteration   2: 20,662 ms/op
Iteration   3: 20,515 ms/op
Iteration   4: 20,507 ms/op
Iteration   5: 20,364 ms/op
Iteration   6: 20,416 ms/op
Iteration   7: 20,763 ms/op
Iteration   8: 20,842 ms/op
Iteration   9: 20,872 ms/op
Iteration  10: 20,790 ms/op


Result "benchmarkFind":
  20,621 ±(99.9%) 0,283 ms/op [Average]
  (min, avg, max) = (20,364, 20,621, 20,872), stdev = 0,187
  CI (99.9%): [20,338, 20,904] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 32, patternSize = 128)

# Run progress: 33,36% complete, ETA 11:07:34
# Fork: 1 of 1
# Warmup Iteration   1: 19,421 ms/op
# Warmup Iteration   2: 18,539 ms/op
# Warmup Iteration   3: 18,478 ms/op
# Warmup Iteration   4: 18,418 ms/op
# Warmup Iteration   5: 18,449 ms/op
# Warmup Iteration   6: 18,539 ms/op
# Warmup Iteration   7: 18,680 ms/op
# Warmup Iteration   8: 18,666 ms/op
# Warmup Iteration   9: 18,684 ms/op
# Warmup Iteration  10: 18,532 ms/op
Iteration   1: 18,661 ms/op
Iteration   2: 18,651 ms/op
Iteration   3: 18,620 ms/op
Iteration   4: 18,509 ms/op
Iteration   5: 18,653 ms/op
Iteration   6: 18,419 ms/op
Iteration   7: 18,282 ms/op
Iteration   8: 19,371 ms/op
Iteration   9: 18,698 ms/op
Iteration  10: 18,077 ms/op


Result "benchmarkFind":
  18,594 ±(99.9%) 0,511 ms/op [Average]
  (min, avg, max) = (18,077, 18,594, 19,371), stdev = 0,338
  CI (99.9%): [18,083, 19,105] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 32, patternSize = 256)

# Run progress: 33,41% complete, ETA 11:06:52
# Fork: 1 of 1
# Warmup Iteration   1: 20,682 ms/op
# Warmup Iteration   2: 19,382 ms/op
# Warmup Iteration   3: 19,566 ms/op
# Warmup Iteration   4: 19,526 ms/op
# Warmup Iteration   5: 19,644 ms/op
# Warmup Iteration   6: 19,433 ms/op
# Warmup Iteration   7: 19,376 ms/op
# Warmup Iteration   8: 19,296 ms/op
# Warmup Iteration   9: 19,656 ms/op
# Warmup Iteration  10: 19,731 ms/op
Iteration   1: 19,589 ms/op
Iteration   2: 19,684 ms/op
Iteration   3: 19,537 ms/op
Iteration   4: 19,612 ms/op
Iteration   5: 19,466 ms/op
Iteration   6: 19,689 ms/op
Iteration   7: 19,748 ms/op
Iteration   8: 19,850 ms/op
Iteration   9: 19,426 ms/op
Iteration  10: 19,617 ms/op


Result "benchmarkFind":
  19,622 ±(99.9%) 0,194 ms/op [Average]
  (min, avg, max) = (19,426, 19,622, 19,850), stdev = 0,128
  CI (99.9%): [19,428, 19,815] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 128, patternSize = 2)

# Run progress: 33,46% complete, ETA 11:06:11
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

com.almondtools.stringbench.SampleNotQualifiedException
	at com.almondtools.stringbench.MultiPatternMatcherBenchmark.setup(MultiPatternMatcherBenchmark.java:36)
	at com.almondtools.stringbench.generated.SCAhoCorasickBenchmark_benchmarkFind_jmhTest._jmh_tryInit_f_scahocorasickbenchmark0_0(SCAhoCorasickBenchmark_benchmarkFind_jmhTest.java:425)
	at com.almondtools.stringbench.generated.SCAhoCorasickBenchmark_benchmarkFind_jmhTest.benchmarkFind_AverageTime(SCAhoCorasickBenchmark_benchmarkFind_jmhTest.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:430)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:412)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)




# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 128, patternSize = 4)

# Run progress: 33,50% complete, ETA 11:04:51
# Fork: 1 of 1
# Warmup Iteration   1: 7984,875 ms/op
# Warmup Iteration   2: 7424,141 ms/op
# Warmup Iteration   3: 7323,056 ms/op
# Warmup Iteration   4: 7273,688 ms/op
# Warmup Iteration   5: 7460,331 ms/op
# Warmup Iteration   6: 7403,012 ms/op
# Warmup Iteration   7: 7370,953 ms/op
# Warmup Iteration   8: 7573,307 ms/op
# Warmup Iteration   9: 7483,036 ms/op
# Warmup Iteration  10: 7344,052 ms/op
Iteration   1: 7471,680 ms/op
Iteration   2: 8483,892 ms/op
Iteration   3: 7762,955 ms/op
Iteration   4: 7232,139 ms/op
Iteration   5: 7202,432 ms/op
Iteration   6: 7179,256 ms/op
Iteration   7: 7111,373 ms/op
Iteration   8: 7513,935 ms/op
Iteration   9: 7188,532 ms/op
Iteration  10: 7163,205 ms/op


Result "benchmarkFind":
  7430,940 ±(99.9%) 640,464 ms/op [Average]
  (min, avg, max) = (7111,373, 7430,940, 8483,892), stdev = 423,627
  CI (99.9%): [6790,476, 8071,403] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 128, patternSize = 8)

# Run progress: 33,55% complete, ETA 11:08:57
# Fork: 1 of 1
# Warmup Iteration   1: 21,526 ms/op
# Warmup Iteration   2: 19,559 ms/op
# Warmup Iteration   3: 19,603 ms/op
# Warmup Iteration   4: 19,388 ms/op
# Warmup Iteration   5: 19,370 ms/op
# Warmup Iteration   6: 19,320 ms/op
# Warmup Iteration   7: 19,310 ms/op
# Warmup Iteration   8: 19,300 ms/op
# Warmup Iteration   9: 19,495 ms/op
# Warmup Iteration  10: 19,532 ms/op
Iteration   1: 19,771 ms/op
Iteration   2: 19,633 ms/op
Iteration   3: 19,553 ms/op
Iteration   4: 19,417 ms/op
Iteration   5: 19,467 ms/op
Iteration   6: 19,697 ms/op
Iteration   7: 19,565 ms/op
Iteration   8: 19,472 ms/op
Iteration   9: 19,740 ms/op
Iteration  10: 19,444 ms/op


Result "benchmarkFind":
  19,576 ±(99.9%) 0,195 ms/op [Average]
  (min, avg, max) = (19,417, 19,576, 19,771), stdev = 0,129
  CI (99.9%): [19,381, 19,771] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 128, patternSize = 16)

# Run progress: 33,59% complete, ETA 11:08:16
# Fork: 1 of 1
# Warmup Iteration   1: 20,776 ms/op
# Warmup Iteration   2: 19,931 ms/op
# Warmup Iteration   3: 19,820 ms/op
# Warmup Iteration   4: 19,759 ms/op
# Warmup Iteration   5: 20,113 ms/op
# Warmup Iteration   6: 20,256 ms/op
# Warmup Iteration   7: 19,846 ms/op
# Warmup Iteration   8: 19,955 ms/op
# Warmup Iteration   9: 19,868 ms/op
# Warmup Iteration  10: 20,187 ms/op
Iteration   1: 20,027 ms/op
Iteration   2: 20,115 ms/op
Iteration   3: 19,966 ms/op
Iteration   4: 19,722 ms/op
Iteration   5: 20,019 ms/op
Iteration   6: 19,920 ms/op
Iteration   7: 19,944 ms/op
Iteration   8: 19,925 ms/op
Iteration   9: 20,012 ms/op
Iteration  10: 20,243 ms/op


Result "benchmarkFind":
  19,989 ±(99.9%) 0,205 ms/op [Average]
  (min, avg, max) = (19,722, 19,989, 20,243), stdev = 0,136
  CI (99.9%): [19,784, 20,195] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 128, patternSize = 32)

# Run progress: 33,64% complete, ETA 11:07:34
# Fork: 1 of 1
# Warmup Iteration   1: 21,732 ms/op
# Warmup Iteration   2: 20,901 ms/op
# Warmup Iteration   3: 20,879 ms/op
# Warmup Iteration   4: 20,789 ms/op
# Warmup Iteration   5: 20,879 ms/op
# Warmup Iteration   6: 20,645 ms/op
# Warmup Iteration   7: 20,348 ms/op
# Warmup Iteration   8: 20,652 ms/op
# Warmup Iteration   9: 21,271 ms/op
# Warmup Iteration  10: 20,319 ms/op
Iteration   1: 20,412 ms/op
Iteration   2: 20,346 ms/op
Iteration   3: 20,295 ms/op
Iteration   4: 20,502 ms/op
Iteration   5: 20,239 ms/op
Iteration   6: 20,425 ms/op
Iteration   7: 20,297 ms/op
Iteration   8: 20,281 ms/op
Iteration   9: 20,310 ms/op
Iteration  10: 20,320 ms/op


Result "benchmarkFind":
  20,343 ±(99.9%) 0,121 ms/op [Average]
  (min, avg, max) = (20,239, 20,343, 20,502), stdev = 0,080
  CI (99.9%): [20,222, 20,464] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 128, patternSize = 64)

# Run progress: 33,69% complete, ETA 11:06:53
# Fork: 1 of 1
# Warmup Iteration   1: 22,032 ms/op
# Warmup Iteration   2: 20,857 ms/op
# Warmup Iteration   3: 20,457 ms/op
# Warmup Iteration   4: 20,421 ms/op
# Warmup Iteration   5: 20,476 ms/op
# Warmup Iteration   6: 20,491 ms/op
# Warmup Iteration   7: 20,499 ms/op
# Warmup Iteration   8: 20,784 ms/op
# Warmup Iteration   9: 21,474 ms/op
# Warmup Iteration  10: 20,520 ms/op
Iteration   1: 20,412 ms/op
Iteration   2: 20,432 ms/op
Iteration   3: 20,296 ms/op
Iteration   4: 20,393 ms/op
Iteration   5: 20,419 ms/op
Iteration   6: 20,434 ms/op
Iteration   7: 20,506 ms/op
Iteration   8: 20,311 ms/op
Iteration   9: 20,358 ms/op
Iteration  10: 20,329 ms/op


Result "benchmarkFind":
  20,389 ±(99.9%) 0,099 ms/op [Average]
  (min, avg, max) = (20,296, 20,389, 20,506), stdev = 0,065
  CI (99.9%): [20,290, 20,487] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 128, patternSize = 128)

# Run progress: 33,73% complete, ETA 11:06:11
# Fork: 1 of 1
# Warmup Iteration   1: 22,373 ms/op
# Warmup Iteration   2: 21,549 ms/op
# Warmup Iteration   3: 21,521 ms/op
# Warmup Iteration   4: 21,529 ms/op
# Warmup Iteration   5: 21,461 ms/op
# Warmup Iteration   6: 21,471 ms/op
# Warmup Iteration   7: 21,587 ms/op
# Warmup Iteration   8: 21,525 ms/op
# Warmup Iteration   9: 21,402 ms/op
# Warmup Iteration  10: 21,445 ms/op
Iteration   1: 21,508 ms/op
Iteration   2: 21,357 ms/op
Iteration   3: 21,434 ms/op
Iteration   4: 21,354 ms/op
Iteration   5: 21,338 ms/op
Iteration   6: 21,564 ms/op
Iteration   7: 21,570 ms/op
Iteration   8: 21,406 ms/op
Iteration   9: 21,257 ms/op
Iteration  10: 21,474 ms/op


Result "benchmarkFind":
  21,426 ±(99.9%) 0,156 ms/op [Average]
  (min, avg, max) = (21,257, 21,426, 21,570), stdev = 0,103
  CI (99.9%): [21,270, 21,582] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 128, patternSize = 256)

# Run progress: 33,78% complete, ETA 11:05:30
# Fork: 1 of 1
# Warmup Iteration   1: 22,752 ms/op
# Warmup Iteration   2: 21,986 ms/op
# Warmup Iteration   3: 21,985 ms/op
# Warmup Iteration   4: 21,771 ms/op
# Warmup Iteration   5: 21,643 ms/op
# Warmup Iteration   6: 24,006 ms/op
# Warmup Iteration   7: 21,943 ms/op
# Warmup Iteration   8: 21,681 ms/op
# Warmup Iteration   9: 21,751 ms/op
# Warmup Iteration  10: 21,697 ms/op
Iteration   1: 21,778 ms/op
Iteration   2: 22,020 ms/op
Iteration   3: 21,784 ms/op
Iteration   4: 21,902 ms/op
Iteration   5: 21,856 ms/op
Iteration   6: 21,866 ms/op
Iteration   7: 21,670 ms/op
Iteration   8: 21,861 ms/op
Iteration   9: 21,545 ms/op
Iteration  10: 21,872 ms/op


Result "benchmarkFind":
  21,815 ±(99.9%) 0,199 ms/op [Average]
  (min, avg, max) = (21,545, 21,815, 22,020), stdev = 0,131
  CI (99.9%): [21,617, 22,014] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 2, patternSize = 2)

# Run progress: 33,82% complete, ETA 11:04:49
# Fork: 1 of 1
# Warmup Iteration   1: 0,773 ms/op
# Warmup Iteration   2: 0,688 ms/op
# Warmup Iteration   3: 0,698 ms/op
# Warmup Iteration   4: 0,697 ms/op
# Warmup Iteration   5: 0,693 ms/op
# Warmup Iteration   6: 0,691 ms/op
# Warmup Iteration   7: 0,698 ms/op
# Warmup Iteration   8: 0,693 ms/op
# Warmup Iteration   9: 0,696 ms/op
# Warmup Iteration  10: 0,691 ms/op
Iteration   1: 0,692 ms/op
Iteration   2: 0,693 ms/op
Iteration   3: 0,691 ms/op
Iteration   4: 0,693 ms/op
Iteration   5: 0,696 ms/op
Iteration   6: 0,693 ms/op
Iteration   7: 0,697 ms/op
Iteration   8: 0,693 ms/op
Iteration   9: 0,695 ms/op
Iteration  10: 0,694 ms/op


Result "benchmarkFind":
  0,694 ±(99.9%) 0,003 ms/op [Average]
  (min, avg, max) = (0,691, 0,694, 0,697), stdev = 0,002
  CI (99.9%): [0,691, 0,696] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 2, patternSize = 4)

# Run progress: 33,87% complete, ETA 11:04:07
# Fork: 1 of 1
# Warmup Iteration   1: 10,808 ms/op
# Warmup Iteration   2: 10,137 ms/op
# Warmup Iteration   3: 10,182 ms/op
# Warmup Iteration   4: 10,139 ms/op
# Warmup Iteration   5: 10,101 ms/op
# Warmup Iteration   6: 9,950 ms/op
# Warmup Iteration   7: 9,989 ms/op
# Warmup Iteration   8: 9,869 ms/op
# Warmup Iteration   9: 9,942 ms/op
# Warmup Iteration  10: 9,942 ms/op
Iteration   1: 9,888 ms/op
Iteration   2: 9,891 ms/op
Iteration   3: 9,853 ms/op
Iteration   4: 9,829 ms/op
Iteration   5: 9,865 ms/op
Iteration   6: 9,917 ms/op
Iteration   7: 9,929 ms/op
Iteration   8: 9,920 ms/op
Iteration   9: 9,868 ms/op
Iteration  10: 9,844 ms/op


Result "benchmarkFind":
  9,880 ±(99.9%) 0,052 ms/op [Average]
  (min, avg, max) = (9,829, 9,880, 9,929), stdev = 0,034
  CI (99.9%): [9,828, 9,932] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 2, patternSize = 8)

# Run progress: 33,92% complete, ETA 11:03:25
# Fork: 1 of 1
# Warmup Iteration   1: 10,767 ms/op
# Warmup Iteration   2: 9,939 ms/op
# Warmup Iteration   3: 9,942 ms/op
# Warmup Iteration   4: 10,530 ms/op
# Warmup Iteration   5: 10,584 ms/op
# Warmup Iteration   6: 10,113 ms/op
# Warmup Iteration   7: 10,078 ms/op
# Warmup Iteration   8: 10,092 ms/op
# Warmup Iteration   9: 10,167 ms/op
# Warmup Iteration  10: 10,180 ms/op
Iteration   1: 10,094 ms/op
Iteration   2: 10,034 ms/op
Iteration   3: 10,196 ms/op
Iteration   4: 10,075 ms/op
Iteration   5: 10,091 ms/op
Iteration   6: 10,029 ms/op
Iteration   7: 10,346 ms/op
Iteration   8: 10,283 ms/op
Iteration   9: 10,282 ms/op
Iteration  10: 10,313 ms/op


Result "benchmarkFind":
  10,174 ±(99.9%) 0,186 ms/op [Average]
  (min, avg, max) = (10,029, 10,174, 10,346), stdev = 0,123
  CI (99.9%): [9,988, 10,361] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 2, patternSize = 16)

# Run progress: 33,96% complete, ETA 11:02:44
# Fork: 1 of 1
# Warmup Iteration   1: 10,895 ms/op
# Warmup Iteration   2: 10,116 ms/op
# Warmup Iteration   3: 10,247 ms/op
# Warmup Iteration   4: 10,414 ms/op
# Warmup Iteration   5: 10,797 ms/op
# Warmup Iteration   6: 10,528 ms/op
# Warmup Iteration   7: 10,494 ms/op
# Warmup Iteration   8: 10,510 ms/op
# Warmup Iteration   9: 10,491 ms/op
# Warmup Iteration  10: 10,428 ms/op
Iteration   1: 10,487 ms/op
Iteration   2: 10,536 ms/op
Iteration   3: 10,515 ms/op
Iteration   4: 10,522 ms/op
Iteration   5: 10,531 ms/op
Iteration   6: 10,482 ms/op
Iteration   7: 10,327 ms/op
Iteration   8: 10,254 ms/op
Iteration   9: 10,220 ms/op
Iteration  10: 10,276 ms/op


Result "benchmarkFind":
  10,415 ±(99.9%) 0,196 ms/op [Average]
  (min, avg, max) = (10,220, 10,415, 10,536), stdev = 0,129
  CI (99.9%): [10,219, 10,611] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 2, patternSize = 32)

# Run progress: 34,01% complete, ETA 11:02:03
# Fork: 1 of 1
# Warmup Iteration   1: 10,881 ms/op
# Warmup Iteration   2: 10,240 ms/op
# Warmup Iteration   3: 10,405 ms/op
# Warmup Iteration   4: 10,608 ms/op
# Warmup Iteration   5: 10,575 ms/op
# Warmup Iteration   6: 10,635 ms/op
# Warmup Iteration   7: 10,775 ms/op
# Warmup Iteration   8: 10,645 ms/op
# Warmup Iteration   9: 10,578 ms/op
# Warmup Iteration  10: 10,622 ms/op
Iteration   1: 10,689 ms/op
Iteration   2: 10,692 ms/op
Iteration   3: 10,577 ms/op
Iteration   4: 10,622 ms/op
Iteration   5: 10,589 ms/op
Iteration   6: 10,615 ms/op
Iteration   7: 10,099 ms/op
Iteration   8: 10,151 ms/op
Iteration   9: 10,232 ms/op
Iteration  10: 10,109 ms/op


Result "benchmarkFind":
  10,437 ±(99.9%) 0,385 ms/op [Average]
  (min, avg, max) = (10,099, 10,437, 10,692), stdev = 0,255
  CI (99.9%): [10,052, 10,822] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 2, patternSize = 64)

# Run progress: 34,05% complete, ETA 11:01:21
# Fork: 1 of 1
# Warmup Iteration   1: 10,896 ms/op
# Warmup Iteration   2: 10,170 ms/op
# Warmup Iteration   3: 11,520 ms/op
# Warmup Iteration   4: 10,198 ms/op
# Warmup Iteration   5: 10,162 ms/op
# Warmup Iteration   6: 10,188 ms/op
# Warmup Iteration   7: 10,195 ms/op
# Warmup Iteration   8: 10,158 ms/op
# Warmup Iteration   9: 10,245 ms/op
# Warmup Iteration  10: 10,523 ms/op
Iteration   1: 10,269 ms/op
Iteration   2: 10,213 ms/op
Iteration   3: 10,203 ms/op
Iteration   4: 10,193 ms/op
Iteration   5: 10,170 ms/op
Iteration   6: 10,203 ms/op
Iteration   7: 10,335 ms/op
Iteration   8: 10,385 ms/op
Iteration   9: 10,349 ms/op
Iteration  10: 10,356 ms/op


Result "benchmarkFind":
  10,268 ±(99.9%) 0,123 ms/op [Average]
  (min, avg, max) = (10,170, 10,268, 10,385), stdev = 0,081
  CI (99.9%): [10,145, 10,390] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 2, patternSize = 128)

# Run progress: 34,10% complete, ETA 11:00:40
# Fork: 1 of 1
# Warmup Iteration   1: 10,796 ms/op
# Warmup Iteration   2: 10,404 ms/op
# Warmup Iteration   3: 10,268 ms/op
# Warmup Iteration   4: 10,251 ms/op
# Warmup Iteration   5: 10,467 ms/op
# Warmup Iteration   6: 10,461 ms/op
# Warmup Iteration   7: 10,456 ms/op
# Warmup Iteration   8: 10,526 ms/op
# Warmup Iteration   9: 10,408 ms/op
# Warmup Iteration  10: 10,637 ms/op
Iteration   1: 10,392 ms/op
Iteration   2: 10,523 ms/op
Iteration   3: 10,488 ms/op
Iteration   4: 10,345 ms/op
Iteration   5: 10,342 ms/op
Iteration   6: 10,455 ms/op
Iteration   7: 10,435 ms/op
Iteration   8: 10,378 ms/op
Iteration   9: 10,426 ms/op
Iteration  10: 10,365 ms/op


Result "benchmarkFind":
  10,415 ±(99.9%) 0,093 ms/op [Average]
  (min, avg, max) = (10,342, 10,415, 10,523), stdev = 0,061
  CI (99.9%): [10,322, 10,508] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 2, patternSize = 256)

# Run progress: 34,15% complete, ETA 10:59:59
# Fork: 1 of 1
# Warmup Iteration   1: 10,957 ms/op
# Warmup Iteration   2: 10,378 ms/op
# Warmup Iteration   3: 10,395 ms/op
# Warmup Iteration   4: 10,469 ms/op
# Warmup Iteration   5: 10,423 ms/op
# Warmup Iteration   6: 10,404 ms/op
# Warmup Iteration   7: 10,384 ms/op
# Warmup Iteration   8: 10,357 ms/op
# Warmup Iteration   9: 10,464 ms/op
# Warmup Iteration  10: 10,481 ms/op
Iteration   1: 10,378 ms/op
Iteration   2: 10,404 ms/op
Iteration   3: 10,445 ms/op
Iteration   4: 10,485 ms/op
Iteration   5: 10,568 ms/op
Iteration   6: 10,335 ms/op
Iteration   7: 10,323 ms/op
Iteration   8: 10,323 ms/op
Iteration   9: 10,423 ms/op
Iteration  10: 10,436 ms/op


Result "benchmarkFind":
  10,412 ±(99.9%) 0,118 ms/op [Average]
  (min, avg, max) = (10,323, 10,412, 10,568), stdev = 0,078
  CI (99.9%): [10,294, 10,529] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 8, patternSize = 2)

# Run progress: 34,19% complete, ETA 10:59:18
# Fork: 1 of 1
# Warmup Iteration   1: 3,682 ms/op
# Warmup Iteration   2: 2,903 ms/op
# Warmup Iteration   3: 2,890 ms/op
# Warmup Iteration   4: 2,891 ms/op
# Warmup Iteration   5: 2,974 ms/op
# Warmup Iteration   6: 2,896 ms/op
# Warmup Iteration   7: 2,910 ms/op
# Warmup Iteration   8: 2,899 ms/op
# Warmup Iteration   9: 2,954 ms/op
# Warmup Iteration  10: 2,904 ms/op
Iteration   1: 2,889 ms/op
Iteration   2: 2,889 ms/op
Iteration   3: 2,903 ms/op
Iteration   4: 2,888 ms/op
Iteration   5: 2,889 ms/op
Iteration   6: 2,892 ms/op
Iteration   7: 2,903 ms/op
Iteration   8: 2,894 ms/op
Iteration   9: 2,886 ms/op
Iteration  10: 2,895 ms/op


Result "benchmarkFind":
  2,893 ±(99.9%) 0,009 ms/op [Average]
  (min, avg, max) = (2,886, 2,893, 2,903), stdev = 0,006
  CI (99.9%): [2,884, 2,902] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 8, patternSize = 4)

# Run progress: 34,24% complete, ETA 10:58:36
# Fork: 1 of 1
# Warmup Iteration   1: 18,320 ms/op
# Warmup Iteration   2: 16,391 ms/op
# Warmup Iteration   3: 16,185 ms/op
# Warmup Iteration   4: 16,311 ms/op
# Warmup Iteration   5: 16,377 ms/op
# Warmup Iteration   6: 16,222 ms/op
# Warmup Iteration   7: 16,328 ms/op
# Warmup Iteration   8: 16,179 ms/op
# Warmup Iteration   9: 16,253 ms/op
# Warmup Iteration  10: 16,581 ms/op
Iteration   1: 16,288 ms/op
Iteration   2: 16,300 ms/op
Iteration   3: 16,308 ms/op
Iteration   4: 16,280 ms/op
Iteration   5: 16,314 ms/op
Iteration   6: 16,548 ms/op
Iteration   7: 16,297 ms/op
Iteration   8: 16,313 ms/op
Iteration   9: 16,419 ms/op
Iteration  10: 16,458 ms/op


Result "benchmarkFind":
  16,353 ±(99.9%) 0,137 ms/op [Average]
  (min, avg, max) = (16,280, 16,353, 16,548), stdev = 0,091
  CI (99.9%): [16,215, 16,490] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 8, patternSize = 8)

# Run progress: 34,28% complete, ETA 10:57:55
# Fork: 1 of 1
# Warmup Iteration   1: 13,306 ms/op
# Warmup Iteration   2: 12,790 ms/op
# Warmup Iteration   3: 12,733 ms/op
# Warmup Iteration   4: 13,081 ms/op
# Warmup Iteration   5: 13,114 ms/op
# Warmup Iteration   6: 13,070 ms/op
# Warmup Iteration   7: 13,183 ms/op
# Warmup Iteration   8: 13,094 ms/op
# Warmup Iteration   9: 13,214 ms/op
# Warmup Iteration  10: 13,157 ms/op
Iteration   1: 13,022 ms/op
Iteration   2: 13,076 ms/op
Iteration   3: 13,129 ms/op
Iteration   4: 13,156 ms/op
Iteration   5: 12,979 ms/op
Iteration   6: 13,029 ms/op
Iteration   7: 12,857 ms/op
Iteration   8: 12,760 ms/op
Iteration   9: 12,762 ms/op
Iteration  10: 13,989 ms/op


Result "benchmarkFind":
  13,076 ±(99.9%) 0,530 ms/op [Average]
  (min, avg, max) = (12,760, 13,076, 13,989), stdev = 0,350
  CI (99.9%): [12,546, 13,605] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 8, patternSize = 16)

# Run progress: 34,33% complete, ETA 10:57:14
# Fork: 1 of 1
# Warmup Iteration   1: 17,208 ms/op
# Warmup Iteration   2: 16,498 ms/op
# Warmup Iteration   3: 16,667 ms/op
# Warmup Iteration   4: 16,291 ms/op
# Warmup Iteration   5: 16,391 ms/op
# Warmup Iteration   6: 16,505 ms/op
# Warmup Iteration   7: 16,465 ms/op
# Warmup Iteration   8: 16,336 ms/op
# Warmup Iteration   9: 16,454 ms/op
# Warmup Iteration  10: 16,309 ms/op
Iteration   1: 16,298 ms/op
Iteration   2: 16,240 ms/op
Iteration   3: 16,291 ms/op
Iteration   4: 16,273 ms/op
Iteration   5: 16,374 ms/op
Iteration   6: 16,298 ms/op
Iteration   7: 16,765 ms/op
Iteration   8: 16,719 ms/op
Iteration   9: 16,636 ms/op
Iteration  10: 16,832 ms/op


Result "benchmarkFind":
  16,473 ±(99.9%) 0,356 ms/op [Average]
  (min, avg, max) = (16,240, 16,473, 16,832), stdev = 0,235
  CI (99.9%): [16,117, 16,829] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 8, patternSize = 32)

# Run progress: 34,38% complete, ETA 10:56:34
# Fork: 1 of 1
# Warmup Iteration   1: 18,112 ms/op
# Warmup Iteration   2: 17,148 ms/op
# Warmup Iteration   3: 17,120 ms/op
# Warmup Iteration   4: 17,282 ms/op
# Warmup Iteration   5: 17,407 ms/op
# Warmup Iteration   6: 17,704 ms/op
# Warmup Iteration   7: 17,516 ms/op
# Warmup Iteration   8: 17,407 ms/op
# Warmup Iteration   9: 17,517 ms/op
# Warmup Iteration  10: 17,549 ms/op
Iteration   1: 17,527 ms/op
Iteration   2: 17,450 ms/op
Iteration   3: 17,462 ms/op
Iteration   4: 17,422 ms/op
Iteration   5: 17,490 ms/op
Iteration   6: 17,403 ms/op
Iteration   7: 17,034 ms/op
Iteration   8: 17,135 ms/op
Iteration   9: 17,106 ms/op
Iteration  10: 17,107 ms/op


Result "benchmarkFind":
  17,314 ±(99.9%) 0,291 ms/op [Average]
  (min, avg, max) = (17,034, 17,314, 17,527), stdev = 0,192
  CI (99.9%): [17,023, 17,604] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 8, patternSize = 64)

# Run progress: 34,42% complete, ETA 10:55:53
# Fork: 1 of 1
# Warmup Iteration   1: 18,162 ms/op
# Warmup Iteration   2: 17,062 ms/op
# Warmup Iteration   3: 16,979 ms/op
# Warmup Iteration   4: 17,098 ms/op
# Warmup Iteration   5: 17,045 ms/op
# Warmup Iteration   6: 17,166 ms/op
# Warmup Iteration   7: 17,125 ms/op
# Warmup Iteration   8: 17,139 ms/op
# Warmup Iteration   9: 17,177 ms/op
# Warmup Iteration  10: 17,078 ms/op
Iteration   1: 16,988 ms/op
Iteration   2: 17,069 ms/op
Iteration   3: 17,118 ms/op
Iteration   4: 17,583 ms/op
Iteration   5: 17,142 ms/op
Iteration   6: 17,051 ms/op
Iteration   7: 17,376 ms/op
Iteration   8: 19,048 ms/op
Iteration   9: 17,420 ms/op
Iteration  10: 17,176 ms/op


Result "benchmarkFind":
  17,397 ±(99.9%) 0,922 ms/op [Average]
  (min, avg, max) = (16,988, 17,397, 19,048), stdev = 0,610
  CI (99.9%): [16,475, 18,319] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 8, patternSize = 128)

# Run progress: 34,47% complete, ETA 10:55:12
# Fork: 1 of 1
# Warmup Iteration   1: 17,257 ms/op
# Warmup Iteration   2: 16,439 ms/op
# Warmup Iteration   3: 16,604 ms/op
# Warmup Iteration   4: 16,402 ms/op
# Warmup Iteration   5: 16,499 ms/op
# Warmup Iteration   6: 17,032 ms/op
# Warmup Iteration   7: 16,548 ms/op
# Warmup Iteration   8: 16,567 ms/op
# Warmup Iteration   9: 16,620 ms/op
# Warmup Iteration  10: 16,751 ms/op
Iteration   1: 16,701 ms/op
Iteration   2: 16,585 ms/op
Iteration   3: 16,465 ms/op
Iteration   4: 16,519 ms/op
Iteration   5: 16,723 ms/op
Iteration   6: 16,615 ms/op
Iteration   7: 16,691 ms/op
Iteration   8: 16,602 ms/op
Iteration   9: 16,525 ms/op
Iteration  10: 17,042 ms/op


Result "benchmarkFind":
  16,647 ±(99.9%) 0,246 ms/op [Average]
  (min, avg, max) = (16,465, 16,647, 17,042), stdev = 0,163
  CI (99.9%): [16,401, 16,893] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 8, patternSize = 256)

# Run progress: 34,51% complete, ETA 10:54:31
# Fork: 1 of 1
# Warmup Iteration   1: 17,440 ms/op
# Warmup Iteration   2: 16,577 ms/op
# Warmup Iteration   3: 16,577 ms/op
# Warmup Iteration   4: 16,562 ms/op
# Warmup Iteration   5: 16,717 ms/op
# Warmup Iteration   6: 16,646 ms/op
# Warmup Iteration   7: 16,600 ms/op
# Warmup Iteration   8: 16,600 ms/op
# Warmup Iteration   9: 16,626 ms/op
# Warmup Iteration  10: 16,631 ms/op
Iteration   1: 16,623 ms/op
Iteration   2: 16,604 ms/op
Iteration   3: 17,112 ms/op
Iteration   4: 16,855 ms/op
Iteration   5: 16,613 ms/op
Iteration   6: 16,607 ms/op
Iteration   7: 16,782 ms/op
Iteration   8: 16,603 ms/op
Iteration   9: 16,655 ms/op
Iteration  10: 16,662 ms/op


Result "benchmarkFind":
  16,712 ±(99.9%) 0,249 ms/op [Average]
  (min, avg, max) = (16,603, 16,712, 17,112), stdev = 0,165
  CI (99.9%): [16,463, 16,960] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 32, patternSize = 2)

# Run progress: 34,56% complete, ETA 10:53:51
# Fork: 1 of 1
# Warmup Iteration   1: 25,764 ms/op
# Warmup Iteration   2: 24,032 ms/op
# Warmup Iteration   3: 23,605 ms/op
# Warmup Iteration   4: 23,791 ms/op
# Warmup Iteration   5: 23,954 ms/op
# Warmup Iteration   6: 23,874 ms/op
# Warmup Iteration   7: 23,829 ms/op
# Warmup Iteration   8: 23,862 ms/op
# Warmup Iteration   9: 23,737 ms/op
# Warmup Iteration  10: 23,889 ms/op
Iteration   1: 23,826 ms/op
Iteration   2: 23,964 ms/op
Iteration   3: 23,763 ms/op
Iteration   4: 24,137 ms/op
Iteration   5: 23,740 ms/op
Iteration   6: 25,010 ms/op
Iteration   7: 23,755 ms/op
Iteration   8: 23,745 ms/op
Iteration   9: 23,823 ms/op
Iteration  10: 23,736 ms/op


Result "benchmarkFind":
  23,950 ±(99.9%) 0,595 ms/op [Average]
  (min, avg, max) = (23,736, 23,950, 25,010), stdev = 0,394
  CI (99.9%): [23,355, 24,545] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 32, patternSize = 4)

# Run progress: 34,60% complete, ETA 10:53:11
# Fork: 1 of 1
# Warmup Iteration   1: 28,863 ms/op
# Warmup Iteration   2: 25,383 ms/op
# Warmup Iteration   3: 25,246 ms/op
# Warmup Iteration   4: 25,441 ms/op
# Warmup Iteration   5: 25,383 ms/op
# Warmup Iteration   6: 25,152 ms/op
# Warmup Iteration   7: 25,117 ms/op
# Warmup Iteration   8: 25,358 ms/op
# Warmup Iteration   9: 25,488 ms/op
# Warmup Iteration  10: 25,425 ms/op
Iteration   1: 25,324 ms/op
Iteration   2: 25,438 ms/op
Iteration   3: 25,469 ms/op
Iteration   4: 25,386 ms/op
Iteration   5: 25,251 ms/op
Iteration   6: 25,195 ms/op
Iteration   7: 25,267 ms/op
Iteration   8: 25,285 ms/op
Iteration   9: 25,299 ms/op
Iteration  10: 25,333 ms/op


Result "benchmarkFind":
  25,325 ±(99.9%) 0,129 ms/op [Average]
  (min, avg, max) = (25,195, 25,325, 25,469), stdev = 0,085
  CI (99.9%): [25,196, 25,454] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 32, patternSize = 8)

# Run progress: 34,65% complete, ETA 10:52:30
# Fork: 1 of 1
# Warmup Iteration   1: 16,847 ms/op
# Warmup Iteration   2: 15,826 ms/op
# Warmup Iteration   3: 16,002 ms/op
# Warmup Iteration   4: 15,897 ms/op
# Warmup Iteration   5: 15,933 ms/op
# Warmup Iteration   6: 16,040 ms/op
# Warmup Iteration   7: 16,144 ms/op
# Warmup Iteration   8: 16,197 ms/op
# Warmup Iteration   9: 16,371 ms/op
# Warmup Iteration  10: 16,347 ms/op
Iteration   1: 16,149 ms/op
Iteration   2: 16,371 ms/op
Iteration   3: 16,135 ms/op
Iteration   4: 15,928 ms/op
Iteration   5: 15,920 ms/op
Iteration   6: 16,025 ms/op
Iteration   7: 15,884 ms/op
Iteration   8: 15,765 ms/op
Iteration   9: 15,759 ms/op
Iteration  10: 15,760 ms/op


Result "benchmarkFind":
  15,970 ±(99.9%) 0,305 ms/op [Average]
  (min, avg, max) = (15,759, 15,970, 16,371), stdev = 0,202
  CI (99.9%): [15,665, 16,274] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 32, patternSize = 16)

# Run progress: 34,70% complete, ETA 10:51:50
# Fork: 1 of 1
# Warmup Iteration   1: 15,936 ms/op
# Warmup Iteration   2: 15,149 ms/op
# Warmup Iteration   3: 14,984 ms/op
# Warmup Iteration   4: 14,989 ms/op
# Warmup Iteration   5: 15,075 ms/op
# Warmup Iteration   6: 15,198 ms/op
# Warmup Iteration   7: 15,124 ms/op
# Warmup Iteration   8: 15,080 ms/op
# Warmup Iteration   9: 15,029 ms/op
# Warmup Iteration  10: 15,089 ms/op
Iteration   1: 15,034 ms/op
Iteration   2: 15,047 ms/op
Iteration   3: 16,406 ms/op
Iteration   4: 15,944 ms/op
Iteration   5: 15,305 ms/op
Iteration   6: 15,196 ms/op
Iteration   7: 15,132 ms/op
Iteration   8: 15,336 ms/op
Iteration   9: 15,067 ms/op
Iteration  10: 15,151 ms/op


Result "benchmarkFind":
  15,362 ±(99.9%) 0,686 ms/op [Average]
  (min, avg, max) = (15,034, 15,362, 16,406), stdev = 0,454
  CI (99.9%): [14,676, 16,048] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 32, patternSize = 32)

# Run progress: 34,74% complete, ETA 10:51:09
# Fork: 1 of 1
# Warmup Iteration   1: 16,725 ms/op
# Warmup Iteration   2: 16,171 ms/op
# Warmup Iteration   3: 16,033 ms/op
# Warmup Iteration   4: 16,057 ms/op
# Warmup Iteration   5: 16,060 ms/op
# Warmup Iteration   6: 17,020 ms/op
# Warmup Iteration   7: 15,982 ms/op
# Warmup Iteration   8: 15,937 ms/op
# Warmup Iteration   9: 15,953 ms/op
# Warmup Iteration  10: 15,983 ms/op
Iteration   1: 15,917 ms/op
Iteration   2: 15,968 ms/op
Iteration   3: 15,826 ms/op
Iteration   4: 15,967 ms/op
Iteration   5: 15,919 ms/op
Iteration   6: 15,999 ms/op
Iteration   7: 15,929 ms/op
Iteration   8: 15,941 ms/op
Iteration   9: 15,944 ms/op
Iteration  10: 15,847 ms/op


Result "benchmarkFind":
  15,926 ±(99.9%) 0,081 ms/op [Average]
  (min, avg, max) = (15,826, 15,926, 15,999), stdev = 0,053
  CI (99.9%): [15,845, 16,006] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 32, patternSize = 64)

# Run progress: 34,79% complete, ETA 10:50:29
# Fork: 1 of 1
# Warmup Iteration   1: 16,350 ms/op
# Warmup Iteration   2: 15,645 ms/op
# Warmup Iteration   3: 15,714 ms/op
# Warmup Iteration   4: 15,681 ms/op
# Warmup Iteration   5: 15,621 ms/op
# Warmup Iteration   6: 15,703 ms/op
# Warmup Iteration   7: 15,653 ms/op
# Warmup Iteration   8: 15,643 ms/op
# Warmup Iteration   9: 15,697 ms/op
# Warmup Iteration  10: 15,565 ms/op
Iteration   1: 15,614 ms/op
Iteration   2: 15,985 ms/op
Iteration   3: 15,561 ms/op
Iteration   4: 15,677 ms/op
Iteration   5: 15,597 ms/op
Iteration   6: 15,654 ms/op
Iteration   7: 15,858 ms/op
Iteration   8: 15,745 ms/op
Iteration   9: 15,538 ms/op
Iteration  10: 15,800 ms/op


Result "benchmarkFind":
  15,703 ±(99.9%) 0,216 ms/op [Average]
  (min, avg, max) = (15,538, 15,703, 15,985), stdev = 0,143
  CI (99.9%): [15,487, 15,919] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 32, patternSize = 128)

# Run progress: 34,83% complete, ETA 10:49:49
# Fork: 1 of 1
# Warmup Iteration   1: 17,948 ms/op
# Warmup Iteration   2: 17,013 ms/op
# Warmup Iteration   3: 17,097 ms/op
# Warmup Iteration   4: 16,966 ms/op
# Warmup Iteration   5: 16,932 ms/op
# Warmup Iteration   6: 16,834 ms/op
# Warmup Iteration   7: 16,891 ms/op
# Warmup Iteration   8: 16,834 ms/op
# Warmup Iteration   9: 16,846 ms/op
# Warmup Iteration  10: 16,789 ms/op
Iteration   1: 16,841 ms/op
Iteration   2: 19,489 ms/op
Iteration   3: 17,248 ms/op
Iteration   4: 17,117 ms/op
Iteration   5: 16,988 ms/op
Iteration   6: 17,029 ms/op
Iteration   7: 16,904 ms/op
Iteration   8: 17,096 ms/op
Iteration   9: 16,942 ms/op
Iteration  10: 16,909 ms/op


Result "benchmarkFind":
  17,256 ±(99.9%) 1,200 ms/op [Average]
  (min, avg, max) = (16,841, 17,256, 19,489), stdev = 0,794
  CI (99.9%): [16,056, 18,456] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 32, patternSize = 256)

# Run progress: 34,88% complete, ETA 10:49:08
# Fork: 1 of 1
# Warmup Iteration   1: 16,582 ms/op
# Warmup Iteration   2: 15,998 ms/op
# Warmup Iteration   3: 15,906 ms/op
# Warmup Iteration   4: 15,799 ms/op
# Warmup Iteration   5: 15,980 ms/op
# Warmup Iteration   6: 15,935 ms/op
# Warmup Iteration   7: 15,702 ms/op
# Warmup Iteration   8: 15,957 ms/op
# Warmup Iteration   9: 15,782 ms/op
# Warmup Iteration  10: 16,060 ms/op
Iteration   1: 15,834 ms/op
Iteration   2: 15,899 ms/op
Iteration   3: 15,905 ms/op
Iteration   4: 15,765 ms/op
Iteration   5: 15,828 ms/op
Iteration   6: 15,992 ms/op
Iteration   7: 15,820 ms/op
Iteration   8: 16,065 ms/op
Iteration   9: 15,742 ms/op
Iteration  10: 15,786 ms/op


Result "benchmarkFind":
  15,864 ±(99.9%) 0,155 ms/op [Average]
  (min, avg, max) = (15,742, 15,864, 16,065), stdev = 0,102
  CI (99.9%): [15,709, 16,018] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 128, patternSize = 2)

# Run progress: 34,93% complete, ETA 10:48:28
# Fork: 1 of 1
# Warmup Iteration   1: 189,624 ms/op
# Warmup Iteration   2: 175,698 ms/op
# Warmup Iteration   3: 176,364 ms/op
# Warmup Iteration   4: 175,758 ms/op
# Warmup Iteration   5: 175,428 ms/op
# Warmup Iteration   6: 175,365 ms/op
# Warmup Iteration   7: 173,882 ms/op
# Warmup Iteration   8: 176,101 ms/op
# Warmup Iteration   9: 174,441 ms/op
# Warmup Iteration  10: 174,839 ms/op
Iteration   1: 175,932 ms/op
Iteration   2: 175,427 ms/op
Iteration   3: 175,872 ms/op
Iteration   4: 174,439 ms/op
Iteration   5: 174,539 ms/op
Iteration   6: 175,116 ms/op
Iteration   7: 176,267 ms/op
Iteration   8: 175,193 ms/op
Iteration   9: 174,371 ms/op
Iteration  10: 175,340 ms/op


Result "benchmarkFind":
  175,250 ±(99.9%) 0,993 ms/op [Average]
  (min, avg, max) = (174,371, 175,250, 176,267), stdev = 0,657
  CI (99.9%): [174,257, 176,243] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 128, patternSize = 4)

# Run progress: 34,97% complete, ETA 10:47:50
# Fork: 1 of 1
# Warmup Iteration   1: 193,616 ms/op
# Warmup Iteration   2: 168,689 ms/op
# Warmup Iteration   3: 167,379 ms/op
# Warmup Iteration   4: 168,049 ms/op
# Warmup Iteration   5: 169,475 ms/op
# Warmup Iteration   6: 168,534 ms/op
# Warmup Iteration   7: 167,533 ms/op
# Warmup Iteration   8: 186,511 ms/op
# Warmup Iteration   9: 169,629 ms/op
# Warmup Iteration  10: 168,350 ms/op
Iteration   1: 167,739 ms/op
Iteration   2: 168,520 ms/op
Iteration   3: 169,345 ms/op
Iteration   4: 168,701 ms/op
Iteration   5: 167,867 ms/op
Iteration   6: 166,582 ms/op
Iteration   7: 167,489 ms/op
Iteration   8: 167,406 ms/op
Iteration   9: 167,817 ms/op
Iteration  10: 168,913 ms/op


Result "benchmarkFind":
  168,038 ±(99.9%) 1,248 ms/op [Average]
  (min, avg, max) = (166,582, 168,038, 169,345), stdev = 0,826
  CI (99.9%): [166,790, 169,286] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 128, patternSize = 8)

# Run progress: 35,02% complete, ETA 10:47:10
# Fork: 1 of 1
# Warmup Iteration   1: 21,560 ms/op
# Warmup Iteration   2: 20,595 ms/op
# Warmup Iteration   3: 20,685 ms/op
# Warmup Iteration   4: 20,708 ms/op
# Warmup Iteration   5: 20,553 ms/op
# Warmup Iteration   6: 20,580 ms/op
# Warmup Iteration   7: 21,212 ms/op
# Warmup Iteration   8: 21,304 ms/op
# Warmup Iteration   9: 20,733 ms/op
# Warmup Iteration  10: 20,419 ms/op
Iteration   1: 20,487 ms/op
Iteration   2: 20,346 ms/op
Iteration   3: 20,421 ms/op
Iteration   4: 20,271 ms/op
Iteration   5: 20,439 ms/op
Iteration   6: 20,463 ms/op
Iteration   7: 20,367 ms/op
Iteration   8: 20,366 ms/op
Iteration   9: 20,350 ms/op
Iteration  10: 20,297 ms/op


Result "benchmarkFind":
  20,381 ±(99.9%) 0,107 ms/op [Average]
  (min, avg, max) = (20,271, 20,381, 20,487), stdev = 0,070
  CI (99.9%): [20,274, 20,487] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 128, patternSize = 16)

# Run progress: 35,06% complete, ETA 10:46:31
# Fork: 1 of 1
# Warmup Iteration   1: 21,380 ms/op
# Warmup Iteration   2: 20,565 ms/op
# Warmup Iteration   3: 20,366 ms/op
# Warmup Iteration   4: 20,365 ms/op
# Warmup Iteration   5: 20,489 ms/op
# Warmup Iteration   6: 20,389 ms/op
# Warmup Iteration   7: 20,343 ms/op
# Warmup Iteration   8: 20,157 ms/op
# Warmup Iteration   9: 20,170 ms/op
# Warmup Iteration  10: 20,194 ms/op
Iteration   1: 20,264 ms/op
Iteration   2: 20,334 ms/op
Iteration   3: 20,405 ms/op
Iteration   4: 20,250 ms/op
Iteration   5: 20,369 ms/op
Iteration   6: 20,300 ms/op
Iteration   7: 20,257 ms/op
Iteration   8: 20,214 ms/op
Iteration   9: 20,080 ms/op
Iteration  10: 20,073 ms/op


Result "benchmarkFind":
  20,255 ±(99.9%) 0,167 ms/op [Average]
  (min, avg, max) = (20,073, 20,255, 20,405), stdev = 0,110
  CI (99.9%): [20,088, 20,421] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 128, patternSize = 32)

# Run progress: 35,11% complete, ETA 10:45:51
# Fork: 1 of 1
# Warmup Iteration   1: 20,334 ms/op
# Warmup Iteration   2: 19,551 ms/op
# Warmup Iteration   3: 19,682 ms/op
# Warmup Iteration   4: 19,567 ms/op
# Warmup Iteration   5: 19,483 ms/op
# Warmup Iteration   6: 21,170 ms/op
# Warmup Iteration   7: 19,256 ms/op
# Warmup Iteration   8: 19,325 ms/op
# Warmup Iteration   9: 19,331 ms/op
# Warmup Iteration  10: 19,361 ms/op
Iteration   1: 19,473 ms/op
Iteration   2: 19,382 ms/op
Iteration   3: 19,224 ms/op
Iteration   4: 19,263 ms/op
Iteration   5: 19,226 ms/op
Iteration   6: 19,268 ms/op
Iteration   7: 19,647 ms/op
Iteration   8: 19,509 ms/op
Iteration   9: 19,547 ms/op
Iteration  10: 19,714 ms/op


Result "benchmarkFind":
  19,426 ±(99.9%) 0,272 ms/op [Average]
  (min, avg, max) = (19,224, 19,426, 19,714), stdev = 0,180
  CI (99.9%): [19,154, 19,697] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 128, patternSize = 64)

# Run progress: 35,16% complete, ETA 10:45:11
# Fork: 1 of 1
# Warmup Iteration   1: 21,098 ms/op
# Warmup Iteration   2: 20,255 ms/op
# Warmup Iteration   3: 20,118 ms/op
# Warmup Iteration   4: 20,227 ms/op
# Warmup Iteration   5: 20,126 ms/op
# Warmup Iteration   6: 20,293 ms/op
# Warmup Iteration   7: 20,363 ms/op
# Warmup Iteration   8: 20,323 ms/op
# Warmup Iteration   9: 20,234 ms/op
# Warmup Iteration  10: 20,199 ms/op
Iteration   1: 20,267 ms/op
Iteration   2: 20,233 ms/op
Iteration   3: 20,349 ms/op
Iteration   4: 20,390 ms/op
Iteration   5: 20,440 ms/op
Iteration   6: 20,410 ms/op
Iteration   7: 20,064 ms/op
Iteration   8: 20,021 ms/op
Iteration   9: 20,208 ms/op
Iteration  10: 20,275 ms/op


Result "benchmarkFind":
  20,266 ±(99.9%) 0,213 ms/op [Average]
  (min, avg, max) = (20,021, 20,266, 20,440), stdev = 0,141
  CI (99.9%): [20,053, 20,479] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 128, patternSize = 128)

# Run progress: 35,20% complete, ETA 10:44:31
# Fork: 1 of 1
# Warmup Iteration   1: 20,639 ms/op
# Warmup Iteration   2: 19,870 ms/op
# Warmup Iteration   3: 20,204 ms/op
# Warmup Iteration   4: 19,787 ms/op
# Warmup Iteration   5: 19,923 ms/op
# Warmup Iteration   6: 19,677 ms/op
# Warmup Iteration   7: 19,873 ms/op
# Warmup Iteration   8: 19,993 ms/op
# Warmup Iteration   9: 19,811 ms/op
# Warmup Iteration  10: 19,930 ms/op
Iteration   1: 19,734 ms/op
Iteration   2: 19,722 ms/op
Iteration   3: 19,805 ms/op
Iteration   4: 19,863 ms/op
Iteration   5: 19,755 ms/op
Iteration   6: 19,873 ms/op
Iteration   7: 19,750 ms/op
Iteration   8: 19,709 ms/op
Iteration   9: 19,719 ms/op
Iteration  10: 19,543 ms/op


Result "benchmarkFind":
  19,747 ±(99.9%) 0,140 ms/op [Average]
  (min, avg, max) = (19,543, 19,747, 19,873), stdev = 0,093
  CI (99.9%): [19,607, 19,888] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 128, patternSize = 256)

# Run progress: 35,25% complete, ETA 10:43:51
# Fork: 1 of 1
# Warmup Iteration   1: 21,112 ms/op
# Warmup Iteration   2: 20,002 ms/op
# Warmup Iteration   3: 19,858 ms/op
# Warmup Iteration   4: 21,822 ms/op
# Warmup Iteration   5: 20,014 ms/op
# Warmup Iteration   6: 20,171 ms/op
# Warmup Iteration   7: 19,995 ms/op
# Warmup Iteration   8: 19,943 ms/op
# Warmup Iteration   9: 19,963 ms/op
# Warmup Iteration  10: 20,240 ms/op
Iteration   1: 20,063 ms/op
Iteration   2: 20,173 ms/op
Iteration   3: 19,900 ms/op
Iteration   4: 19,992 ms/op
Iteration   5: 19,982 ms/op
Iteration   6: 19,971 ms/op
Iteration   7: 20,030 ms/op
Iteration   8: 20,086 ms/op
Iteration   9: 20,062 ms/op
Iteration  10: 19,999 ms/op


Result "benchmarkFind":
  20,026 ±(99.9%) 0,113 ms/op [Average]
  (min, avg, max) = (19,900, 20,026, 20,173), stdev = 0,075
  CI (99.9%): [19,912, 20,139] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 2, patternSize = 2)

# Run progress: 35,29% complete, ETA 10:43:12
# Fork: 1 of 1
# Warmup Iteration   1: 2,921 ms/op
# Warmup Iteration   2: 2,667 ms/op
# Warmup Iteration   3: 2,659 ms/op
# Warmup Iteration   4: 2,653 ms/op
# Warmup Iteration   5: 2,642 ms/op
# Warmup Iteration   6: 2,636 ms/op
# Warmup Iteration   7: 2,644 ms/op
# Warmup Iteration   8: 2,644 ms/op
# Warmup Iteration   9: 2,634 ms/op
# Warmup Iteration  10: 2,665 ms/op
Iteration   1: 2,643 ms/op
Iteration   2: 2,633 ms/op
Iteration   3: 2,650 ms/op
Iteration   4: 2,664 ms/op
Iteration   5: 2,678 ms/op
Iteration   6: 2,643 ms/op
Iteration   7: 2,654 ms/op
Iteration   8: 2,669 ms/op
Iteration   9: 2,671 ms/op
Iteration  10: 2,645 ms/op


Result "benchmarkFind":
  2,655 ±(99.9%) 0,022 ms/op [Average]
  (min, avg, max) = (2,633, 2,655, 2,678), stdev = 0,015
  CI (99.9%): [2,633, 2,677] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 2, patternSize = 4)

# Run progress: 35,34% complete, ETA 10:42:31
# Fork: 1 of 1
# Warmup Iteration   1: 82,413 ms/op
# Warmup Iteration   2: 78,560 ms/op
# Warmup Iteration   3: 77,762 ms/op
# Warmup Iteration   4: 76,756 ms/op
# Warmup Iteration   5: 77,707 ms/op
# Warmup Iteration   6: 77,777 ms/op
# Warmup Iteration   7: 76,701 ms/op
# Warmup Iteration   8: 77,185 ms/op
# Warmup Iteration   9: 77,588 ms/op
# Warmup Iteration  10: 77,215 ms/op
Iteration   1: 78,675 ms/op
Iteration   2: 76,950 ms/op
Iteration   3: 78,967 ms/op
Iteration   4: 77,422 ms/op
Iteration   5: 77,916 ms/op
Iteration   6: 77,132 ms/op
Iteration   7: 76,628 ms/op
Iteration   8: 77,135 ms/op
Iteration   9: 78,219 ms/op
Iteration  10: 77,986 ms/op


Result "benchmarkFind":
  77,703 ±(99.9%) 1,170 ms/op [Average]
  (min, avg, max) = (76,628, 77,703, 78,967), stdev = 0,774
  CI (99.9%): [76,533, 78,873] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 2, patternSize = 8)

# Run progress: 35,39% complete, ETA 10:41:53
# Fork: 1 of 1
# Warmup Iteration   1: 95,939 ms/op
# Warmup Iteration   2: 85,507 ms/op
# Warmup Iteration   3: 83,735 ms/op
# Warmup Iteration   4: 83,403 ms/op
# Warmup Iteration   5: 82,648 ms/op
# Warmup Iteration   6: 83,666 ms/op
# Warmup Iteration   7: 82,799 ms/op
# Warmup Iteration   8: 85,059 ms/op
# Warmup Iteration   9: 83,282 ms/op
# Warmup Iteration  10: 83,773 ms/op
Iteration   1: 82,092 ms/op
Iteration   2: 82,991 ms/op
Iteration   3: 84,252 ms/op
Iteration   4: 82,353 ms/op
Iteration   5: 82,434 ms/op
Iteration   6: 82,727 ms/op
Iteration   7: 82,059 ms/op
Iteration   8: 82,694 ms/op
Iteration   9: 82,530 ms/op
Iteration  10: 82,034 ms/op


Result "benchmarkFind":
  82,617 ±(99.9%) 0,991 ms/op [Average]
  (min, avg, max) = (82,034, 82,617, 84,252), stdev = 0,656
  CI (99.9%): [81,626, 83,608] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 2, patternSize = 16)

# Run progress: 35,43% complete, ETA 10:41:15
# Fork: 1 of 1
# Warmup Iteration   1: 97,436 ms/op
# Warmup Iteration   2: 92,036 ms/op
# Warmup Iteration   3: 90,734 ms/op
# Warmup Iteration   4: 91,033 ms/op
# Warmup Iteration   5: 92,121 ms/op
# Warmup Iteration   6: 92,128 ms/op
# Warmup Iteration   7: 91,016 ms/op
# Warmup Iteration   8: 90,465 ms/op
# Warmup Iteration   9: 90,973 ms/op
# Warmup Iteration  10: 90,950 ms/op
Iteration   1: 91,696 ms/op
Iteration   2: 91,239 ms/op
Iteration   3: 90,997 ms/op
Iteration   4: 91,103 ms/op
Iteration   5: 92,175 ms/op
Iteration   6: 90,628 ms/op
Iteration   7: 89,936 ms/op
Iteration   8: 89,966 ms/op
Iteration   9: 90,487 ms/op
Iteration  10: 89,701 ms/op


Result "benchmarkFind":
  90,793 ±(99.9%) 1,213 ms/op [Average]
  (min, avg, max) = (89,701, 90,793, 92,175), stdev = 0,802
  CI (99.9%): [89,580, 92,006] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 2, patternSize = 32)

# Run progress: 35,48% complete, ETA 10:40:37
# Fork: 1 of 1
# Warmup Iteration   1: 91,752 ms/op
# Warmup Iteration   2: 89,884 ms/op
# Warmup Iteration   3: 89,127 ms/op
# Warmup Iteration   4: 87,931 ms/op
# Warmup Iteration   5: 87,887 ms/op
# Warmup Iteration   6: 88,608 ms/op
# Warmup Iteration   7: 88,803 ms/op
# Warmup Iteration   8: 88,073 ms/op
# Warmup Iteration   9: 88,752 ms/op
# Warmup Iteration  10: 87,673 ms/op
Iteration   1: 88,312 ms/op
Iteration   2: 88,283 ms/op
Iteration   3: 87,442 ms/op
Iteration   4: 88,551 ms/op
Iteration   5: 87,555 ms/op
Iteration   6: 87,737 ms/op
Iteration   7: 97,344 ms/op
Iteration   8: 88,872 ms/op
Iteration   9: 90,356 ms/op
Iteration  10: 89,162 ms/op


Result "benchmarkFind":
  89,362 ±(99.9%) 4,436 ms/op [Average]
  (min, avg, max) = (87,442, 89,362, 97,344), stdev = 2,934
  CI (99.9%): [84,925, 93,798] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 2, patternSize = 64)

# Run progress: 35,52% complete, ETA 10:40:00
# Fork: 1 of 1
# Warmup Iteration   1: 89,824 ms/op
# Warmup Iteration   2: 88,317 ms/op
# Warmup Iteration   3: 87,615 ms/op
# Warmup Iteration   4: 89,463 ms/op
# Warmup Iteration   5: 88,029 ms/op
# Warmup Iteration   6: 87,975 ms/op
# Warmup Iteration   7: 88,186 ms/op
# Warmup Iteration   8: 88,518 ms/op
# Warmup Iteration   9: 88,744 ms/op
# Warmup Iteration  10: 89,198 ms/op
Iteration   1: 87,902 ms/op
Iteration   2: 88,445 ms/op
Iteration   3: 88,188 ms/op
Iteration   4: 87,736 ms/op
Iteration   5: 87,799 ms/op
Iteration   6: 88,067 ms/op
Iteration   7: 88,880 ms/op
Iteration   8: 88,944 ms/op
Iteration   9: 88,555 ms/op
Iteration  10: 88,528 ms/op


Result "benchmarkFind":
  88,304 ±(99.9%) 0,654 ms/op [Average]
  (min, avg, max) = (87,736, 88,304, 88,944), stdev = 0,432
  CI (99.9%): [87,651, 88,958] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 2, patternSize = 128)

# Run progress: 35,57% complete, ETA 10:39:22
# Fork: 1 of 1
# Warmup Iteration   1: 92,114 ms/op
# Warmup Iteration   2: 87,511 ms/op
# Warmup Iteration   3: 87,273 ms/op
# Warmup Iteration   4: 88,155 ms/op
# Warmup Iteration   5: 87,181 ms/op
# Warmup Iteration   6: 87,428 ms/op
# Warmup Iteration   7: 87,966 ms/op
# Warmup Iteration   8: 87,561 ms/op
# Warmup Iteration   9: 87,624 ms/op
# Warmup Iteration  10: 87,234 ms/op
Iteration   1: 87,185 ms/op
Iteration   2: 87,279 ms/op
Iteration   3: 88,771 ms/op
Iteration   4: 87,384 ms/op
Iteration   5: 88,107 ms/op
Iteration   6: 87,727 ms/op
Iteration   7: 86,663 ms/op
Iteration   8: 89,005 ms/op
Iteration   9: 88,200 ms/op
Iteration  10: 87,096 ms/op


Result "benchmarkFind":
  87,742 ±(99.9%) 1,152 ms/op [Average]
  (min, avg, max) = (86,663, 87,742, 89,005), stdev = 0,762
  CI (99.9%): [86,589, 88,894] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 2, patternSize = 256)

# Run progress: 35,62% complete, ETA 10:38:45
# Fork: 1 of 1
# Warmup Iteration   1: 92,136 ms/op
# Warmup Iteration   2: 87,692 ms/op
# Warmup Iteration   3: 87,594 ms/op
# Warmup Iteration   4: 87,767 ms/op
# Warmup Iteration   5: 87,352 ms/op
# Warmup Iteration   6: 87,326 ms/op
# Warmup Iteration   7: 88,417 ms/op
# Warmup Iteration   8: 87,738 ms/op
# Warmup Iteration   9: 87,130 ms/op
# Warmup Iteration  10: 86,858 ms/op
Iteration   1: 87,730 ms/op
Iteration   2: 96,128 ms/op
Iteration   3: 88,972 ms/op
Iteration   4: 88,005 ms/op
Iteration   5: 88,070 ms/op
Iteration   6: 88,696 ms/op
Iteration   7: 89,039 ms/op
Iteration   8: 88,540 ms/op
Iteration   9: 87,950 ms/op
Iteration  10: 88,323 ms/op


Result "benchmarkFind":
  89,145 ±(99.9%) 3,769 ms/op [Average]
  (min, avg, max) = (87,730, 89,145, 96,128), stdev = 2,493
  CI (99.9%): [85,376, 92,914] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 8, patternSize = 2)

# Run progress: 35,66% complete, ETA 10:38:08
# Fork: 1 of 1
# Warmup Iteration   1: 6,812 ms/op
# Warmup Iteration   2: 6,017 ms/op
# Warmup Iteration   3: 6,047 ms/op
# Warmup Iteration   4: 6,004 ms/op
# Warmup Iteration   5: 6,011 ms/op
# Warmup Iteration   6: 6,041 ms/op
# Warmup Iteration   7: 6,034 ms/op
# Warmup Iteration   8: 6,062 ms/op
# Warmup Iteration   9: 6,000 ms/op
# Warmup Iteration  10: 6,088 ms/op
Iteration   1: 6,034 ms/op
Iteration   2: 6,061 ms/op
Iteration   3: 6,015 ms/op
Iteration   4: 6,011 ms/op
Iteration   5: 6,042 ms/op
Iteration   6: 6,021 ms/op
Iteration   7: 6,010 ms/op
Iteration   8: 6,049 ms/op
Iteration   9: 5,994 ms/op
Iteration  10: 6,004 ms/op


Result "benchmarkFind":
  6,024 ±(99.9%) 0,032 ms/op [Average]
  (min, avg, max) = (5,994, 6,024, 6,061), stdev = 0,021
  CI (99.9%): [5,992, 6,057] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 8, patternSize = 4)

# Run progress: 35,71% complete, ETA 10:37:28
# Fork: 1 of 1
# Warmup Iteration   1: 157,475 ms/op
# Warmup Iteration   2: 142,826 ms/op
# Warmup Iteration   3: 142,629 ms/op
# Warmup Iteration   4: 142,394 ms/op
# Warmup Iteration   5: 144,006 ms/op
# Warmup Iteration   6: 142,357 ms/op
# Warmup Iteration   7: 142,478 ms/op
# Warmup Iteration   8: 142,133 ms/op
# Warmup Iteration   9: 142,958 ms/op
# Warmup Iteration  10: 142,048 ms/op
Iteration   1: 143,532 ms/op
Iteration   2: 143,382 ms/op
Iteration   3: 143,151 ms/op
Iteration   4: 143,087 ms/op
Iteration   5: 144,484 ms/op
Iteration   6: 142,722 ms/op
Iteration   7: 141,658 ms/op
Iteration   8: 143,934 ms/op
Iteration   9: 143,361 ms/op
Iteration  10: 141,452 ms/op


Result "benchmarkFind":
  143,076 ±(99.9%) 1,415 ms/op [Average]
  (min, avg, max) = (141,452, 143,076, 144,484), stdev = 0,936
  CI (99.9%): [141,662, 144,491] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 8, patternSize = 8)

# Run progress: 35,75% complete, ETA 10:36:52
# Fork: 1 of 1
# Warmup Iteration   1: 152,740 ms/op
# Warmup Iteration   2: 144,755 ms/op
# Warmup Iteration   3: 144,727 ms/op
# Warmup Iteration   4: 144,763 ms/op
# Warmup Iteration   5: 145,258 ms/op
# Warmup Iteration   6: 143,180 ms/op
# Warmup Iteration   7: 145,811 ms/op
# Warmup Iteration   8: 154,306 ms/op
# Warmup Iteration   9: 145,429 ms/op
# Warmup Iteration  10: 145,083 ms/op
Iteration   1: 144,723 ms/op
Iteration   2: 145,177 ms/op
Iteration   3: 144,428 ms/op
Iteration   4: 144,281 ms/op
Iteration   5: 144,342 ms/op
Iteration   6: 144,355 ms/op
Iteration   7: 144,019 ms/op
Iteration   8: 145,237 ms/op
Iteration   9: 144,353 ms/op
Iteration  10: 144,845 ms/op


Result "benchmarkFind":
  144,576 ±(99.9%) 0,610 ms/op [Average]
  (min, avg, max) = (144,019, 144,576, 145,237), stdev = 0,403
  CI (99.9%): [143,966, 145,186] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 8, patternSize = 16)

# Run progress: 35,80% complete, ETA 10:36:13
# Fork: 1 of 1
# Warmup Iteration   1: 138,944 ms/op
# Warmup Iteration   2: 135,484 ms/op
# Warmup Iteration   3: 134,555 ms/op
# Warmup Iteration   4: 133,893 ms/op
# Warmup Iteration   5: 135,529 ms/op
# Warmup Iteration   6: 133,433 ms/op
# Warmup Iteration   7: 134,918 ms/op
# Warmup Iteration   8: 134,283 ms/op
# Warmup Iteration   9: 134,599 ms/op
# Warmup Iteration  10: 135,966 ms/op
Iteration   1: 135,052 ms/op
Iteration   2: 135,101 ms/op
Iteration   3: 135,330 ms/op
Iteration   4: 135,404 ms/op
Iteration   5: 133,929 ms/op
Iteration   6: 134,036 ms/op
Iteration   7: 133,891 ms/op
Iteration   8: 133,224 ms/op
Iteration   9: 134,497 ms/op
Iteration  10: 135,664 ms/op


Result "benchmarkFind":
  134,613 ±(99.9%) 1,228 ms/op [Average]
  (min, avg, max) = (133,224, 134,613, 135,664), stdev = 0,812
  CI (99.9%): [133,385, 135,841] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 8, patternSize = 32)

# Run progress: 35,85% complete, ETA 10:35:37
# Fork: 1 of 1
# Warmup Iteration   1: 153,611 ms/op
# Warmup Iteration   2: 146,361 ms/op
# Warmup Iteration   3: 147,581 ms/op
# Warmup Iteration   4: 146,256 ms/op
# Warmup Iteration   5: 147,958 ms/op
# Warmup Iteration   6: 148,544 ms/op
# Warmup Iteration   7: 148,484 ms/op
# Warmup Iteration   8: 147,689 ms/op
# Warmup Iteration   9: 146,027 ms/op
# Warmup Iteration  10: 153,313 ms/op
Iteration   1: 148,183 ms/op
Iteration   2: 148,468 ms/op
Iteration   3: 147,146 ms/op
Iteration   4: 148,757 ms/op
Iteration   5: 147,487 ms/op
Iteration   6: 146,961 ms/op
Iteration   7: 147,275 ms/op
Iteration   8: 146,646 ms/op
Iteration   9: 148,313 ms/op
Iteration  10: 148,003 ms/op


Result "benchmarkFind":
  147,724 ±(99.9%) 1,080 ms/op [Average]
  (min, avg, max) = (146,646, 147,724, 148,757), stdev = 0,714
  CI (99.9%): [146,644, 148,804] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 8, patternSize = 64)

# Run progress: 35,89% complete, ETA 10:34:59
# Fork: 1 of 1
# Warmup Iteration   1: 123,974 ms/op
# Warmup Iteration   2: 120,075 ms/op
# Warmup Iteration   3: 139,355 ms/op
# Warmup Iteration   4: 122,585 ms/op
# Warmup Iteration   5: 121,156 ms/op
# Warmup Iteration   6: 121,845 ms/op
# Warmup Iteration   7: 121,732 ms/op
# Warmup Iteration   8: 120,727 ms/op
# Warmup Iteration   9: 121,240 ms/op
# Warmup Iteration  10: 121,333 ms/op
Iteration   1: 122,533 ms/op
Iteration   2: 120,608 ms/op
Iteration   3: 120,851 ms/op
Iteration   4: 120,086 ms/op
Iteration   5: 120,703 ms/op
Iteration   6: 120,812 ms/op
Iteration   7: 120,225 ms/op
Iteration   8: 119,077 ms/op
Iteration   9: 119,218 ms/op
Iteration  10: 119,903 ms/op


Result "benchmarkFind":
  120,402 ±(99.9%) 1,476 ms/op [Average]
  (min, avg, max) = (119,077, 120,402, 122,533), stdev = 0,976
  CI (99.9%): [118,925, 121,878] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 8, patternSize = 128)

# Run progress: 35,94% complete, ETA 10:34:23
# Fork: 1 of 1
# Warmup Iteration   1: 129,309 ms/op
# Warmup Iteration   2: 121,517 ms/op
# Warmup Iteration   3: 120,851 ms/op
# Warmup Iteration   4: 120,382 ms/op
# Warmup Iteration   5: 120,585 ms/op
# Warmup Iteration   6: 122,274 ms/op
# Warmup Iteration   7: 120,564 ms/op
# Warmup Iteration   8: 120,756 ms/op
# Warmup Iteration   9: 120,948 ms/op
# Warmup Iteration  10: 120,646 ms/op
Iteration   1: 120,834 ms/op
Iteration   2: 121,826 ms/op
Iteration   3: 120,686 ms/op
Iteration   4: 124,260 ms/op
Iteration   5: 120,457 ms/op
Iteration   6: 120,796 ms/op
Iteration   7: 126,156 ms/op
Iteration   8: 124,957 ms/op
Iteration   9: 124,489 ms/op
Iteration  10: 125,377 ms/op


Result "benchmarkFind":
  122,984 ±(99.9%) 3,417 ms/op [Average]
  (min, avg, max) = (120,457, 122,984, 126,156), stdev = 2,260
  CI (99.9%): [119,566, 126,401] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 8, patternSize = 256)

# Run progress: 35,98% complete, ETA 10:33:47
# Fork: 1 of 1
# Warmup Iteration   1: 142,936 ms/op
# Warmup Iteration   2: 138,561 ms/op
# Warmup Iteration   3: 137,216 ms/op
# Warmup Iteration   4: 137,219 ms/op
# Warmup Iteration   5: 136,849 ms/op
# Warmup Iteration   6: 138,105 ms/op
# Warmup Iteration   7: 139,129 ms/op
# Warmup Iteration   8: 138,082 ms/op
# Warmup Iteration   9: 137,660 ms/op
# Warmup Iteration  10: 137,941 ms/op
Iteration   1: 136,957 ms/op
Iteration   2: 138,026 ms/op
Iteration   3: 137,157 ms/op
Iteration   4: 136,151 ms/op
Iteration   5: 137,108 ms/op
Iteration   6: 137,979 ms/op
Iteration   7: 148,413 ms/op
Iteration   8: 138,353 ms/op
Iteration   9: 138,531 ms/op
Iteration  10: 138,708 ms/op


Result "benchmarkFind":
  138,738 ±(99.9%) 5,283 ms/op [Average]
  (min, avg, max) = (136,151, 138,738, 148,413), stdev = 3,494
  CI (99.9%): [133,455, 144,021] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 32, patternSize = 2)

# Run progress: 36,03% complete, ETA 10:33:11
# Fork: 1 of 1
# Warmup Iteration   1: 37,950 ms/op
# Warmup Iteration   2: 33,925 ms/op
# Warmup Iteration   3: 35,323 ms/op
# Warmup Iteration   4: 33,815 ms/op
# Warmup Iteration   5: 33,837 ms/op
# Warmup Iteration   6: 34,142 ms/op
# Warmup Iteration   7: 33,929 ms/op
# Warmup Iteration   8: 34,035 ms/op
# Warmup Iteration   9: 33,892 ms/op
# Warmup Iteration  10: 36,881 ms/op
Iteration   1: 33,796 ms/op
Iteration   2: 34,265 ms/op
Iteration   3: 34,039 ms/op
Iteration   4: 33,945 ms/op
Iteration   5: 33,576 ms/op
Iteration   6: 34,074 ms/op
Iteration   7: 33,711 ms/op
Iteration   8: 33,931 ms/op
Iteration   9: 33,764 ms/op
Iteration  10: 33,953 ms/op


Result "benchmarkFind":
  33,905 ±(99.9%) 0,302 ms/op [Average]
  (min, avg, max) = (33,576, 33,905, 34,265), stdev = 0,200
  CI (99.9%): [33,604, 34,207] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 32, patternSize = 4)

# Run progress: 36,08% complete, ETA 10:32:32
# Fork: 1 of 1
# Warmup Iteration   1: 176,197 ms/op
# Warmup Iteration   2: 158,922 ms/op
# Warmup Iteration   3: 156,510 ms/op
# Warmup Iteration   4: 159,084 ms/op
# Warmup Iteration   5: 158,973 ms/op
# Warmup Iteration   6: 157,502 ms/op
# Warmup Iteration   7: 157,410 ms/op
# Warmup Iteration   8: 157,888 ms/op
# Warmup Iteration   9: 156,733 ms/op
# Warmup Iteration  10: 156,853 ms/op
Iteration   1: 157,284 ms/op
Iteration   2: 155,752 ms/op
Iteration   3: 156,421 ms/op
Iteration   4: 158,782 ms/op
Iteration   5: 156,618 ms/op
Iteration   6: 157,126 ms/op
Iteration   7: 156,197 ms/op
Iteration   8: 157,269 ms/op
Iteration   9: 157,415 ms/op
Iteration  10: 157,414 ms/op


Result "benchmarkFind":
  157,028 ±(99.9%) 1,271 ms/op [Average]
  (min, avg, max) = (155,752, 157,028, 158,782), stdev = 0,841
  CI (99.9%): [155,756, 158,299] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 32, patternSize = 8)

# Run progress: 36,12% complete, ETA 10:31:57
# Fork: 1 of 1
# Warmup Iteration   1: 174,657 ms/op
# Warmup Iteration   2: 165,192 ms/op
# Warmup Iteration   3: 165,298 ms/op
# Warmup Iteration   4: 164,902 ms/op
# Warmup Iteration   5: 165,346 ms/op
# Warmup Iteration   6: 164,849 ms/op
# Warmup Iteration   7: 165,223 ms/op
# Warmup Iteration   8: 165,574 ms/op
# Warmup Iteration   9: 165,256 ms/op
# Warmup Iteration  10: 164,743 ms/op
Iteration   1: 181,813 ms/op
Iteration   2: 166,132 ms/op
Iteration   3: 167,187 ms/op
Iteration   4: 167,041 ms/op
Iteration   5: 166,669 ms/op
Iteration   6: 166,175 ms/op
Iteration   7: 165,548 ms/op
Iteration   8: 163,562 ms/op
Iteration   9: 165,396 ms/op
Iteration  10: 164,569 ms/op


Result "benchmarkFind":
  167,409 ±(99.9%) 7,835 ms/op [Average]
  (min, avg, max) = (163,562, 167,409, 181,813), stdev = 5,183
  CI (99.9%): [159,574, 175,244] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 32, patternSize = 16)

# Run progress: 36,17% complete, ETA 10:31:23
# Fork: 1 of 1
# Warmup Iteration   1: 175,472 ms/op
# Warmup Iteration   2: 167,314 ms/op
# Warmup Iteration   3: 166,990 ms/op
# Warmup Iteration   4: 166,454 ms/op
# Warmup Iteration   5: 169,536 ms/op
# Warmup Iteration   6: 169,005 ms/op
# Warmup Iteration   7: 167,051 ms/op
# Warmup Iteration   8: 165,850 ms/op
# Warmup Iteration   9: 166,275 ms/op
# Warmup Iteration  10: 167,804 ms/op
Iteration   1: 166,186 ms/op
Iteration   2: 167,774 ms/op
Iteration   3: 166,751 ms/op
Iteration   4: 167,162 ms/op
Iteration   5: 167,086 ms/op
Iteration   6: 168,078 ms/op
Iteration   7: 166,897 ms/op
Iteration   8: 164,814 ms/op
Iteration   9: 166,218 ms/op
Iteration  10: 168,242 ms/op


Result "benchmarkFind":
  166,921 ±(99.9%) 1,545 ms/op [Average]
  (min, avg, max) = (164,814, 166,921, 168,242), stdev = 1,022
  CI (99.9%): [165,376, 168,466] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 32, patternSize = 32)

# Run progress: 36,21% complete, ETA 10:30:46
# Fork: 1 of 1
# Warmup Iteration   1: 148,402 ms/op
# Warmup Iteration   2: 143,562 ms/op
# Warmup Iteration   3: 148,812 ms/op
# Warmup Iteration   4: 145,428 ms/op
# Warmup Iteration   5: 145,871 ms/op
# Warmup Iteration   6: 144,998 ms/op
# Warmup Iteration   7: 144,997 ms/op
# Warmup Iteration   8: 145,443 ms/op
# Warmup Iteration   9: 145,831 ms/op
# Warmup Iteration  10: 145,211 ms/op
Iteration   1: 145,070 ms/op
Iteration   2: 145,241 ms/op
Iteration   3: 145,153 ms/op
Iteration   4: 145,939 ms/op
Iteration   5: 145,532 ms/op
Iteration   6: 145,388 ms/op
Iteration   7: 142,450 ms/op
Iteration   8: 143,684 ms/op
Iteration   9: 142,999 ms/op
Iteration  10: 143,145 ms/op


Result "benchmarkFind":
  144,460 ±(99.9%) 1,897 ms/op [Average]
  (min, avg, max) = (142,450, 144,460, 145,939), stdev = 1,255
  CI (99.9%): [142,563, 146,357] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 32, patternSize = 64)

# Run progress: 36,26% complete, ETA 10:30:08
# Fork: 1 of 1
# Warmup Iteration   1: 156,025 ms/op
# Warmup Iteration   2: 148,447 ms/op
# Warmup Iteration   3: 147,568 ms/op
# Warmup Iteration   4: 148,369 ms/op
# Warmup Iteration   5: 154,463 ms/op
# Warmup Iteration   6: 151,529 ms/op
# Warmup Iteration   7: 148,000 ms/op
# Warmup Iteration   8: 147,453 ms/op
# Warmup Iteration   9: 147,754 ms/op
# Warmup Iteration  10: 146,876 ms/op
Iteration   1: 147,890 ms/op
Iteration   2: 146,658 ms/op
Iteration   3: 147,621 ms/op
Iteration   4: 147,924 ms/op
Iteration   5: 146,190 ms/op
Iteration   6: 148,888 ms/op
Iteration   7: 145,776 ms/op
Iteration   8: 146,368 ms/op
Iteration   9: 145,918 ms/op
Iteration  10: 148,275 ms/op


Result "benchmarkFind":
  147,151 ±(99.9%) 1,659 ms/op [Average]
  (min, avg, max) = (145,776, 147,151, 148,888), stdev = 1,097
  CI (99.9%): [145,492, 148,810] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 32, patternSize = 128)

# Run progress: 36,31% complete, ETA 10:29:31
# Fork: 1 of 1
# Warmup Iteration   1: 159,058 ms/op
# Warmup Iteration   2: 155,877 ms/op
# Warmup Iteration   3: 152,943 ms/op
# Warmup Iteration   4: 152,011 ms/op
# Warmup Iteration   5: 155,490 ms/op
# Warmup Iteration   6: 153,781 ms/op
# Warmup Iteration   7: 154,431 ms/op
# Warmup Iteration   8: 153,486 ms/op
# Warmup Iteration   9: 154,026 ms/op
# Warmup Iteration  10: 154,246 ms/op
Iteration   1: 153,732 ms/op
Iteration   2: 153,513 ms/op
Iteration   3: 152,794 ms/op
Iteration   4: 155,776 ms/op
Iteration   5: 154,498 ms/op
Iteration   6: 155,751 ms/op
Iteration   7: 153,494 ms/op
Iteration   8: 153,247 ms/op
Iteration   9: 154,370 ms/op
Iteration  10: 152,803 ms/op


Result "benchmarkFind":
  153,998 ±(99.9%) 1,642 ms/op [Average]
  (min, avg, max) = (152,794, 153,998, 155,776), stdev = 1,086
  CI (99.9%): [152,355, 155,640] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 32, patternSize = 256)

# Run progress: 36,35% complete, ETA 10:28:55
# Fork: 1 of 1
# Warmup Iteration   1: 159,515 ms/op
# Warmup Iteration   2: 154,158 ms/op
# Warmup Iteration   3: 153,474 ms/op
# Warmup Iteration   4: 146,478 ms/op
# Warmup Iteration   5: 146,305 ms/op
# Warmup Iteration   6: 146,190 ms/op
# Warmup Iteration   7: 146,975 ms/op
# Warmup Iteration   8: 145,981 ms/op
# Warmup Iteration   9: 145,913 ms/op
# Warmup Iteration  10: 146,443 ms/op
Iteration   1: 146,570 ms/op
Iteration   2: 146,867 ms/op
Iteration   3: 146,962 ms/op
Iteration   4: 147,934 ms/op
Iteration   5: 146,298 ms/op
Iteration   6: 147,037 ms/op
Iteration   7: 149,383 ms/op
Iteration   8: 148,670 ms/op
Iteration   9: 148,668 ms/op
Iteration  10: 148,929 ms/op


Result "benchmarkFind":
  147,732 ±(99.9%) 1,685 ms/op [Average]
  (min, avg, max) = (146,298, 147,732, 149,383), stdev = 1,115
  CI (99.9%): [146,046, 149,417] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 128, patternSize = 2)

# Run progress: 36,40% complete, ETA 10:28:18
# Fork: 1 of 1
# Warmup Iteration   1: 414,746 ms/op
# Warmup Iteration   2: 353,753 ms/op
# Warmup Iteration   3: 352,889 ms/op
# Warmup Iteration   4: 357,271 ms/op
# Warmup Iteration   5: 354,603 ms/op
# Warmup Iteration   6: 352,270 ms/op
# Warmup Iteration   7: 351,421 ms/op
# Warmup Iteration   8: 354,039 ms/op
# Warmup Iteration   9: 355,007 ms/op
# Warmup Iteration  10: 353,970 ms/op
Iteration   1: 351,995 ms/op
Iteration   2: 352,456 ms/op
Iteration   3: 350,093 ms/op
Iteration   4: 355,153 ms/op
Iteration   5: 353,705 ms/op
Iteration   6: 354,067 ms/op
Iteration   7: 351,545 ms/op
Iteration   8: 352,670 ms/op
Iteration   9: 349,354 ms/op
Iteration  10: 351,865 ms/op


Result "benchmarkFind":
  352,290 ±(99.9%) 2,657 ms/op [Average]
  (min, avg, max) = (349,354, 352,290, 355,153), stdev = 1,757
  CI (99.9%): [349,633, 354,947] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 128, patternSize = 4)

# Run progress: 36,44% complete, ETA 10:27:41
# Fork: 1 of 1
# Warmup Iteration   1: 356,135 ms/op
# Warmup Iteration   2: 303,436 ms/op
# Warmup Iteration   3: 304,395 ms/op
# Warmup Iteration   4: 303,329 ms/op
# Warmup Iteration   5: 303,792 ms/op
# Warmup Iteration   6: 301,474 ms/op
# Warmup Iteration   7: 309,890 ms/op
# Warmup Iteration   8: 304,384 ms/op
# Warmup Iteration   9: 310,394 ms/op
# Warmup Iteration  10: 301,319 ms/op
Iteration   1: 306,218 ms/op
Iteration   2: 302,817 ms/op
Iteration   3: 305,833 ms/op
Iteration   4: 305,753 ms/op
Iteration   5: 304,108 ms/op
Iteration   6: 304,364 ms/op
Iteration   7: 301,570 ms/op
Iteration   8: 304,477 ms/op
Iteration   9: 307,052 ms/op
Iteration  10: 307,912 ms/op


Result "benchmarkFind":
  305,010 ±(99.9%) 2,914 ms/op [Average]
  (min, avg, max) = (301,570, 305,010, 307,912), stdev = 1,927
  CI (99.9%): [302,096, 307,925] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 128, patternSize = 8)

# Run progress: 36,49% complete, ETA 10:27:10
# Fork: 1 of 1
# Warmup Iteration   1: 155,758 ms/op
# Warmup Iteration   2: 150,019 ms/op
# Warmup Iteration   3: 148,254 ms/op
# Warmup Iteration   4: 149,690 ms/op
# Warmup Iteration   5: 148,565 ms/op
# Warmup Iteration   6: 149,034 ms/op
# Warmup Iteration   7: 149,123 ms/op
# Warmup Iteration   8: 148,714 ms/op
# Warmup Iteration   9: 155,107 ms/op
# Warmup Iteration  10: 149,349 ms/op
Iteration   1: 149,064 ms/op
Iteration   2: 149,302 ms/op
Iteration   3: 157,399 ms/op
Iteration   4: 147,493 ms/op
Iteration   5: 148,033 ms/op
Iteration   6: 148,118 ms/op
Iteration   7: 149,596 ms/op
Iteration   8: 148,623 ms/op
Iteration   9: 148,488 ms/op
Iteration  10: 148,505 ms/op


Result "benchmarkFind":
  149,462 ±(99.9%) 4,320 ms/op [Average]
  (min, avg, max) = (147,493, 149,462, 157,399), stdev = 2,858
  CI (99.9%): [145,142, 153,782] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 128, patternSize = 16)

# Run progress: 36,53% complete, ETA 10:26:33
# Fork: 1 of 1
# Warmup Iteration   1: 169,000 ms/op
# Warmup Iteration   2: 161,536 ms/op
# Warmup Iteration   3: 161,458 ms/op
# Warmup Iteration   4: 161,806 ms/op
# Warmup Iteration   5: 160,638 ms/op
# Warmup Iteration   6: 161,348 ms/op
# Warmup Iteration   7: 160,787 ms/op
# Warmup Iteration   8: 160,298 ms/op
# Warmup Iteration   9: 165,128 ms/op
# Warmup Iteration  10: 161,251 ms/op
Iteration   1: 159,944 ms/op
Iteration   2: 160,744 ms/op
Iteration   3: 160,799 ms/op
Iteration   4: 161,119 ms/op
Iteration   5: 160,500 ms/op
Iteration   6: 160,881 ms/op
Iteration   7: 168,257 ms/op
Iteration   8: 164,807 ms/op
Iteration   9: 169,158 ms/op
Iteration  10: 161,754 ms/op


Result "benchmarkFind":
  162,796 ±(99.9%) 5,127 ms/op [Average]
  (min, avg, max) = (159,944, 162,796, 169,158), stdev = 3,391
  CI (99.9%): [157,669, 167,924] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 128, patternSize = 32)

# Run progress: 36,58% complete, ETA 10:25:59
# Fork: 1 of 1
# Warmup Iteration   1: 154,512 ms/op
# Warmup Iteration   2: 151,412 ms/op
# Warmup Iteration   3: 154,492 ms/op
# Warmup Iteration   4: 154,632 ms/op
# Warmup Iteration   5: 158,142 ms/op
# Warmup Iteration   6: 159,606 ms/op
# Warmup Iteration   7: 154,581 ms/op
# Warmup Iteration   8: 156,108 ms/op
# Warmup Iteration   9: 151,841 ms/op
# Warmup Iteration  10: 153,242 ms/op
Iteration   1: 158,263 ms/op
Iteration   2: 157,505 ms/op
Iteration   3: 157,839 ms/op
Iteration   4: 152,851 ms/op
Iteration   5: 150,591 ms/op
Iteration   6: 153,683 ms/op
Iteration   7: 159,661 ms/op
Iteration   8: 154,051 ms/op
Iteration   9: 154,055 ms/op
Iteration  10: 151,951 ms/op


Result "benchmarkFind":
  155,045 ±(99.9%) 4,607 ms/op [Average]
  (min, avg, max) = (150,591, 155,045, 159,661), stdev = 3,047
  CI (99.9%): [150,438, 159,652] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 128, patternSize = 64)

# Run progress: 36,63% complete, ETA 10:25:23
# Fork: 1 of 1
# Warmup Iteration   1: 169,188 ms/op
# Warmup Iteration   2: 159,866 ms/op
# Warmup Iteration   3: 159,676 ms/op
# Warmup Iteration   4: 154,587 ms/op
# Warmup Iteration   5: 154,593 ms/op
# Warmup Iteration   6: 167,963 ms/op
# Warmup Iteration   7: 158,089 ms/op
# Warmup Iteration   8: 153,892 ms/op
# Warmup Iteration   9: 155,534 ms/op
# Warmup Iteration  10: 154,888 ms/op
Iteration   1: 154,420 ms/op
Iteration   2: 157,002 ms/op
Iteration   3: 154,883 ms/op
Iteration   4: 154,986 ms/op
Iteration   5: 156,993 ms/op
Iteration   6: 154,465 ms/op
Iteration   7: 156,350 ms/op
Iteration   8: 153,280 ms/op
Iteration   9: 153,697 ms/op
Iteration  10: 153,555 ms/op


Result "benchmarkFind":
  154,963 ±(99.9%) 2,088 ms/op [Average]
  (min, avg, max) = (153,280, 154,963, 157,002), stdev = 1,381
  CI (99.9%): [152,875, 157,051] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 128, patternSize = 128)

# Run progress: 36,67% complete, ETA 10:24:48
# Fork: 1 of 1
# Warmup Iteration   1: 171,987 ms/op
# Warmup Iteration   2: 160,945 ms/op
# Warmup Iteration   3: 160,048 ms/op
# Warmup Iteration   4: 159,956 ms/op
# Warmup Iteration   5: 159,951 ms/op
# Warmup Iteration   6: 158,457 ms/op
# Warmup Iteration   7: 161,391 ms/op
# Warmup Iteration   8: 160,470 ms/op
# Warmup Iteration   9: 158,434 ms/op
# Warmup Iteration  10: 160,079 ms/op
Iteration   1: 158,559 ms/op
Iteration   2: 159,736 ms/op
Iteration   3: 159,041 ms/op
Iteration   4: 164,954 ms/op
Iteration   5: 160,208 ms/op
Iteration   6: 162,347 ms/op
Iteration   7: 160,099 ms/op
Iteration   8: 161,986 ms/op
Iteration   9: 161,358 ms/op
Iteration  10: 160,415 ms/op


Result "benchmarkFind":
  160,870 ±(99.9%) 2,831 ms/op [Average]
  (min, avg, max) = (158,559, 160,870, 164,954), stdev = 1,873
  CI (99.9%): [158,039, 163,701] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 128, patternSize = 256)

# Run progress: 36,72% complete, ETA 10:24:14
# Fork: 1 of 1
# Warmup Iteration   1: 154,465 ms/op
# Warmup Iteration   2: 151,649 ms/op
# Warmup Iteration   3: 146,767 ms/op
# Warmup Iteration   4: 147,890 ms/op
# Warmup Iteration   5: 147,736 ms/op
# Warmup Iteration   6: 147,191 ms/op
# Warmup Iteration   7: 147,374 ms/op
# Warmup Iteration   8: 146,655 ms/op
# Warmup Iteration   9: 146,662 ms/op
# Warmup Iteration  10: 146,930 ms/op
Iteration   1: 146,305 ms/op
Iteration   2: 148,381 ms/op
Iteration   3: 149,398 ms/op
Iteration   4: 146,660 ms/op
Iteration   5: 146,160 ms/op
Iteration   6: 146,288 ms/op
Iteration   7: 147,172 ms/op
Iteration   8: 146,481 ms/op
Iteration   9: 145,954 ms/op
Iteration  10: 160,267 ms/op


Result "benchmarkFind":
  148,307 ±(99.9%) 6,567 ms/op [Average]
  (min, avg, max) = (145,954, 148,307, 160,267), stdev = 4,344
  CI (99.9%): [141,740, 154,874] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 2, patternSize = 2)

# Run progress: 36,76% complete, ETA 10:23:37
# Fork: 1 of 1
# Warmup Iteration   1: 17,780 ms/op
# Warmup Iteration   2: 16,318 ms/op
# Warmup Iteration   3: 15,891 ms/op
# Warmup Iteration   4: 15,840 ms/op
# Warmup Iteration   5: 15,780 ms/op
# Warmup Iteration   6: 15,826 ms/op
# Warmup Iteration   7: 15,721 ms/op
# Warmup Iteration   8: 15,848 ms/op
# Warmup Iteration   9: 15,853 ms/op
# Warmup Iteration  10: 15,935 ms/op
Iteration   1: 15,948 ms/op
Iteration   2: 15,995 ms/op
Iteration   3: 15,996 ms/op
Iteration   4: 16,170 ms/op
Iteration   5: 16,076 ms/op
Iteration   6: 16,087 ms/op
Iteration   7: 15,951 ms/op
Iteration   8: 16,102 ms/op
Iteration   9: 15,983 ms/op
Iteration  10: 16,022 ms/op


Result "benchmarkFind":
  16,033 ±(99.9%) 0,110 ms/op [Average]
  (min, avg, max) = (15,948, 16,033, 16,170), stdev = 0,073
  CI (99.9%): [15,923, 16,143] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 2, patternSize = 4)

# Run progress: 36,81% complete, ETA 10:22:59
# Fork: 1 of 1
# Warmup Iteration   1: 16,879 ms/op
# Warmup Iteration   2: 15,088 ms/op
# Warmup Iteration   3: 15,150 ms/op
# Warmup Iteration   4: 15,132 ms/op
# Warmup Iteration   5: 15,228 ms/op
# Warmup Iteration   6: 15,429 ms/op
# Warmup Iteration   7: 15,349 ms/op
# Warmup Iteration   8: 15,504 ms/op
# Warmup Iteration   9: 15,411 ms/op
# Warmup Iteration  10: 15,361 ms/op
Iteration   1: 15,528 ms/op
Iteration   2: 15,474 ms/op
Iteration   3: 15,368 ms/op
Iteration   4: 15,391 ms/op
Iteration   5: 15,523 ms/op
Iteration   6: 15,339 ms/op
Iteration   7: 15,214 ms/op
Iteration   8: 15,347 ms/op
Iteration   9: 15,356 ms/op
Iteration  10: 15,342 ms/op


Result "benchmarkFind":
  15,388 ±(99.9%) 0,145 ms/op [Average]
  (min, avg, max) = (15,214, 15,388, 15,528), stdev = 0,096
  CI (99.9%): [15,243, 15,534] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 2, patternSize = 8)

# Run progress: 36,86% complete, ETA 10:22:20
# Fork: 1 of 1
# Warmup Iteration   1: 17,139 ms/op
# Warmup Iteration   2: 15,677 ms/op
# Warmup Iteration   3: 15,522 ms/op
# Warmup Iteration   4: 15,643 ms/op
# Warmup Iteration   5: 15,591 ms/op
# Warmup Iteration   6: 15,752 ms/op
# Warmup Iteration   7: 15,934 ms/op
# Warmup Iteration   8: 15,808 ms/op
# Warmup Iteration   9: 15,881 ms/op
# Warmup Iteration  10: 15,916 ms/op
Iteration   1: 15,884 ms/op
Iteration   2: 15,886 ms/op
Iteration   3: 15,848 ms/op
Iteration   4: 15,803 ms/op
Iteration   5: 15,968 ms/op
Iteration   6: 15,802 ms/op
Iteration   7: 15,800 ms/op
Iteration   8: 17,149 ms/op
Iteration   9: 15,574 ms/op
Iteration  10: 15,523 ms/op


Result "benchmarkFind":
  15,924 ±(99.9%) 0,684 ms/op [Average]
  (min, avg, max) = (15,523, 15,924, 17,149), stdev = 0,452
  CI (99.9%): [15,240, 16,607] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 2, patternSize = 16)

# Run progress: 36,90% complete, ETA 10:21:42
# Fork: 1 of 1
# Warmup Iteration   1: 17,167 ms/op
# Warmup Iteration   2: 15,617 ms/op
# Warmup Iteration   3: 15,606 ms/op
# Warmup Iteration   4: 15,670 ms/op
# Warmup Iteration   5: 15,710 ms/op
# Warmup Iteration   6: 15,738 ms/op
# Warmup Iteration   7: 15,735 ms/op
# Warmup Iteration   8: 15,635 ms/op
# Warmup Iteration   9: 15,765 ms/op
# Warmup Iteration  10: 15,795 ms/op
Iteration   1: 15,809 ms/op
Iteration   2: 15,933 ms/op
Iteration   3: 15,885 ms/op
Iteration   4: 15,723 ms/op
Iteration   5: 15,716 ms/op
Iteration   6: 15,872 ms/op
Iteration   7: 15,887 ms/op
Iteration   8: 15,868 ms/op
Iteration   9: 15,850 ms/op
Iteration  10: 15,788 ms/op


Result "benchmarkFind":
  15,833 ±(99.9%) 0,109 ms/op [Average]
  (min, avg, max) = (15,716, 15,833, 15,933), stdev = 0,072
  CI (99.9%): [15,724, 15,942] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 2, patternSize = 32)

# Run progress: 36,95% complete, ETA 10:21:04
# Fork: 1 of 1
# Warmup Iteration   1: 17,257 ms/op
# Warmup Iteration   2: 15,853 ms/op
# Warmup Iteration   3: 15,550 ms/op
# Warmup Iteration   4: 15,516 ms/op
# Warmup Iteration   5: 15,718 ms/op
# Warmup Iteration   6: 15,649 ms/op
# Warmup Iteration   7: 15,830 ms/op
# Warmup Iteration   8: 15,907 ms/op
# Warmup Iteration   9: 15,987 ms/op
# Warmup Iteration  10: 15,998 ms/op
Iteration   1: 16,103 ms/op
Iteration   2: 16,096 ms/op
Iteration   3: 16,151 ms/op
Iteration   4: 16,118 ms/op
Iteration   5: 16,014 ms/op
Iteration   6: 16,012 ms/op
Iteration   7: 15,728 ms/op
Iteration   8: 15,778 ms/op
Iteration   9: 15,808 ms/op
Iteration  10: 15,792 ms/op


Result "benchmarkFind":
  15,960 ±(99.9%) 0,249 ms/op [Average]
  (min, avg, max) = (15,728, 15,960, 16,151), stdev = 0,165
  CI (99.9%): [15,711, 16,209] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 2, patternSize = 64)

# Run progress: 36,99% complete, ETA 10:20:25
# Fork: 1 of 1
# Warmup Iteration   1: 18,272 ms/op
# Warmup Iteration   2: 15,616 ms/op
# Warmup Iteration   3: 15,530 ms/op
# Warmup Iteration   4: 15,500 ms/op
# Warmup Iteration   5: 15,417 ms/op
# Warmup Iteration   6: 15,448 ms/op
# Warmup Iteration   7: 15,528 ms/op
# Warmup Iteration   8: 15,406 ms/op
# Warmup Iteration   9: 15,651 ms/op
# Warmup Iteration  10: 15,673 ms/op
Iteration   1: 15,575 ms/op
Iteration   2: 15,734 ms/op
Iteration   3: 15,537 ms/op
Iteration   4: 15,678 ms/op
Iteration   5: 15,665 ms/op
Iteration   6: 18,067 ms/op
Iteration   7: 15,587 ms/op
Iteration   8: 15,585 ms/op
Iteration   9: 15,746 ms/op
Iteration  10: 15,759 ms/op


Result "benchmarkFind":
  15,893 ±(99.9%) 1,161 ms/op [Average]
  (min, avg, max) = (15,537, 15,893, 18,067), stdev = 0,768
  CI (99.9%): [14,732, 17,054] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 2, patternSize = 128)

# Run progress: 37,04% complete, ETA 10:19:47
# Fork: 1 of 1
# Warmup Iteration   1: 17,030 ms/op
# Warmup Iteration   2: 15,606 ms/op
# Warmup Iteration   3: 15,662 ms/op
# Warmup Iteration   4: 15,678 ms/op
# Warmup Iteration   5: 15,750 ms/op
# Warmup Iteration   6: 15,776 ms/op
# Warmup Iteration   7: 15,860 ms/op
# Warmup Iteration   8: 15,901 ms/op
# Warmup Iteration   9: 15,866 ms/op
# Warmup Iteration  10: 15,749 ms/op
Iteration   1: 15,744 ms/op
Iteration   2: 15,969 ms/op
Iteration   3: 15,851 ms/op
Iteration   4: 15,770 ms/op
Iteration   5: 15,970 ms/op
Iteration   6: 15,837 ms/op
Iteration   7: 15,919 ms/op
Iteration   8: 15,825 ms/op
Iteration   9: 15,916 ms/op
Iteration  10: 15,752 ms/op


Result "benchmarkFind":
  15,855 ±(99.9%) 0,129 ms/op [Average]
  (min, avg, max) = (15,744, 15,855, 15,970), stdev = 0,085
  CI (99.9%): [15,726, 15,984] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 2, patternSize = 256)

# Run progress: 37,09% complete, ETA 10:19:09
# Fork: 1 of 1
# Warmup Iteration   1: 16,832 ms/op
# Warmup Iteration   2: 15,868 ms/op
# Warmup Iteration   3: 15,750 ms/op
# Warmup Iteration   4: 15,806 ms/op
# Warmup Iteration   5: 15,786 ms/op
# Warmup Iteration   6: 15,946 ms/op
# Warmup Iteration   7: 15,851 ms/op
# Warmup Iteration   8: 16,108 ms/op
# Warmup Iteration   9: 16,091 ms/op
# Warmup Iteration  10: 16,130 ms/op
Iteration   1: 16,261 ms/op
Iteration   2: 16,187 ms/op
Iteration   3: 16,065 ms/op
Iteration   4: 16,179 ms/op
Iteration   5: 16,209 ms/op
Iteration   6: 16,078 ms/op
Iteration   7: 15,852 ms/op
Iteration   8: 15,892 ms/op
Iteration   9: 15,930 ms/op
Iteration  10: 15,825 ms/op


Result "benchmarkFind":
  16,048 ±(99.9%) 0,245 ms/op [Average]
  (min, avg, max) = (15,825, 16,048, 16,261), stdev = 0,162
  CI (99.9%): [15,803, 16,292] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 8, patternSize = 2)

# Run progress: 37,13% complete, ETA 10:18:31
# Fork: 1 of 1
# Warmup Iteration   1: 24,707 ms/op
# Warmup Iteration   2: 21,544 ms/op
# Warmup Iteration   3: 21,648 ms/op
# Warmup Iteration   4: 21,620 ms/op
# Warmup Iteration   5: 21,529 ms/op
# Warmup Iteration   6: 21,594 ms/op
# Warmup Iteration   7: 21,826 ms/op
# Warmup Iteration   8: 21,897 ms/op
# Warmup Iteration   9: 21,768 ms/op
# Warmup Iteration  10: 21,766 ms/op
Iteration   1: 21,752 ms/op
Iteration   2: 21,640 ms/op
Iteration   3: 21,849 ms/op
Iteration   4: 24,023 ms/op
Iteration   5: 21,605 ms/op
Iteration   6: 21,554 ms/op
Iteration   7: 21,550 ms/op
Iteration   8: 21,439 ms/op
Iteration   9: 21,514 ms/op
Iteration  10: 21,552 ms/op


Result "benchmarkFind":
  21,848 ±(99.9%) 1,169 ms/op [Average]
  (min, avg, max) = (21,439, 21,848, 24,023), stdev = 0,773
  CI (99.9%): [20,679, 23,017] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 8, patternSize = 4)

# Run progress: 37,18% complete, ETA 10:17:53
# Fork: 1 of 1
# Warmup Iteration   1: 23,650 ms/op
# Warmup Iteration   2: 21,473 ms/op
# Warmup Iteration   3: 21,541 ms/op
# Warmup Iteration   4: 21,507 ms/op
# Warmup Iteration   5: 21,605 ms/op
# Warmup Iteration   6: 21,691 ms/op
# Warmup Iteration   7: 21,696 ms/op
# Warmup Iteration   8: 21,731 ms/op
# Warmup Iteration   9: 21,666 ms/op
# Warmup Iteration  10: 21,899 ms/op
Iteration   1: 21,626 ms/op
Iteration   2: 21,624 ms/op
Iteration   3: 21,548 ms/op
Iteration   4: 21,777 ms/op
Iteration   5: 21,587 ms/op
Iteration   6: 21,748 ms/op
Iteration   7: 21,647 ms/op
Iteration   8: 21,685 ms/op
Iteration   9: 21,706 ms/op
Iteration  10: 21,746 ms/op


Result "benchmarkFind":
  21,669 ±(99.9%) 0,114 ms/op [Average]
  (min, avg, max) = (21,548, 21,669, 21,777), stdev = 0,075
  CI (99.9%): [21,556, 21,783] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 8, patternSize = 8)

# Run progress: 37,22% complete, ETA 10:17:16
# Fork: 1 of 1
# Warmup Iteration   1: 22,539 ms/op
# Warmup Iteration   2: 20,891 ms/op
# Warmup Iteration   3: 20,796 ms/op
# Warmup Iteration   4: 20,638 ms/op
# Warmup Iteration   5: 20,664 ms/op
# Warmup Iteration   6: 21,078 ms/op
# Warmup Iteration   7: 21,161 ms/op
# Warmup Iteration   8: 21,355 ms/op
# Warmup Iteration   9: 21,368 ms/op
# Warmup Iteration  10: 21,356 ms/op
Iteration   1: 21,380 ms/op
Iteration   2: 21,543 ms/op
Iteration   3: 21,320 ms/op
Iteration   4: 21,210 ms/op
Iteration   5: 21,358 ms/op
Iteration   6: 21,302 ms/op
Iteration   7: 21,054 ms/op
Iteration   8: 21,015 ms/op
Iteration   9: 20,905 ms/op
Iteration  10: 20,972 ms/op


Result "benchmarkFind":
  21,206 ±(99.9%) 0,316 ms/op [Average]
  (min, avg, max) = (20,905, 21,206, 21,543), stdev = 0,209
  CI (99.9%): [20,889, 21,522] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 8, patternSize = 16)

# Run progress: 37,27% complete, ETA 10:16:38
# Fork: 1 of 1
# Warmup Iteration   1: 21,981 ms/op
# Warmup Iteration   2: 19,994 ms/op
# Warmup Iteration   3: 19,980 ms/op
# Warmup Iteration   4: 20,011 ms/op
# Warmup Iteration   5: 20,082 ms/op
# Warmup Iteration   6: 20,237 ms/op
# Warmup Iteration   7: 20,273 ms/op
# Warmup Iteration   8: 20,476 ms/op
# Warmup Iteration   9: 20,509 ms/op
# Warmup Iteration  10: 20,650 ms/op
Iteration   1: 20,419 ms/op
Iteration   2: 22,582 ms/op
Iteration   3: 20,066 ms/op
Iteration   4: 19,938 ms/op
Iteration   5: 20,223 ms/op
Iteration   6: 20,248 ms/op
Iteration   7: 20,274 ms/op
Iteration   8: 20,471 ms/op
Iteration   9: 20,706 ms/op
Iteration  10: 20,595 ms/op


Result "benchmarkFind":
  20,552 ±(99.9%) 1,134 ms/op [Average]
  (min, avg, max) = (19,938, 20,552, 22,582), stdev = 0,750
  CI (99.9%): [19,418, 21,686] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 8, patternSize = 32)

# Run progress: 37,32% complete, ETA 10:16:00
# Fork: 1 of 1
# Warmup Iteration   1: 23,474 ms/op
# Warmup Iteration   2: 21,358 ms/op
# Warmup Iteration   3: 21,366 ms/op
# Warmup Iteration   4: 21,457 ms/op
# Warmup Iteration   5: 21,599 ms/op
# Warmup Iteration   6: 23,515 ms/op
# Warmup Iteration   7: 21,817 ms/op
# Warmup Iteration   8: 21,692 ms/op
# Warmup Iteration   9: 21,825 ms/op
# Warmup Iteration  10: 21,873 ms/op
Iteration   1: 21,827 ms/op
Iteration   2: 21,769 ms/op
Iteration   3: 21,800 ms/op
Iteration   4: 21,771 ms/op
Iteration   5: 21,778 ms/op
Iteration   6: 21,687 ms/op
Iteration   7: 21,959 ms/op
Iteration   8: 21,803 ms/op
Iteration   9: 21,959 ms/op
Iteration  10: 21,740 ms/op


Result "benchmarkFind":
  21,809 ±(99.9%) 0,132 ms/op [Average]
  (min, avg, max) = (21,687, 21,809, 21,959), stdev = 0,088
  CI (99.9%): [21,677, 21,942] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 8, patternSize = 64)

# Run progress: 37,36% complete, ETA 10:15:22
# Fork: 1 of 1
# Warmup Iteration   1: 23,353 ms/op
# Warmup Iteration   2: 21,374 ms/op
# Warmup Iteration   3: 21,288 ms/op
# Warmup Iteration   4: 21,262 ms/op
# Warmup Iteration   5: 21,445 ms/op
# Warmup Iteration   6: 21,327 ms/op
# Warmup Iteration   7: 21,762 ms/op
# Warmup Iteration   8: 21,819 ms/op
# Warmup Iteration   9: 21,806 ms/op
# Warmup Iteration  10: 22,005 ms/op
Iteration   1: 21,828 ms/op
Iteration   2: 21,818 ms/op
Iteration   3: 21,822 ms/op
Iteration   4: 21,786 ms/op
Iteration   5: 21,918 ms/op
Iteration   6: 21,758 ms/op
Iteration   7: 21,879 ms/op
Iteration   8: 21,728 ms/op
Iteration   9: 21,972 ms/op
Iteration  10: 21,729 ms/op


Result "benchmarkFind":
  21,824 ±(99.9%) 0,121 ms/op [Average]
  (min, avg, max) = (21,728, 21,824, 21,972), stdev = 0,080
  CI (99.9%): [21,703, 21,945] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 8, patternSize = 128)

# Run progress: 37,41% complete, ETA 10:14:44
# Fork: 1 of 1
# Warmup Iteration   1: 23,301 ms/op
# Warmup Iteration   2: 21,764 ms/op
# Warmup Iteration   3: 21,703 ms/op
# Warmup Iteration   4: 21,697 ms/op
# Warmup Iteration   5: 21,725 ms/op
# Warmup Iteration   6: 21,618 ms/op
# Warmup Iteration   7: 21,663 ms/op
# Warmup Iteration   8: 21,835 ms/op
# Warmup Iteration   9: 21,885 ms/op
# Warmup Iteration  10: 23,803 ms/op
Iteration   1: 21,396 ms/op
Iteration   2: 21,367 ms/op
Iteration   3: 21,384 ms/op
Iteration   4: 21,410 ms/op
Iteration   5: 21,470 ms/op
Iteration   6: 21,615 ms/op
Iteration   7: 21,924 ms/op
Iteration   8: 22,018 ms/op
Iteration   9: 21,844 ms/op
Iteration  10: 21,872 ms/op


Result "benchmarkFind":
  21,630 ±(99.9%) 0,390 ms/op [Average]
  (min, avg, max) = (21,367, 21,630, 22,018), stdev = 0,258
  CI (99.9%): [21,240, 22,020] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 8, patternSize = 256)

# Run progress: 37,45% complete, ETA 10:14:06
# Fork: 1 of 1
# Warmup Iteration   1: 21,909 ms/op
# Warmup Iteration   2: 20,140 ms/op
# Warmup Iteration   3: 19,993 ms/op
# Warmup Iteration   4: 20,109 ms/op
# Warmup Iteration   5: 20,057 ms/op
# Warmup Iteration   6: 20,130 ms/op
# Warmup Iteration   7: 20,043 ms/op
# Warmup Iteration   8: 20,331 ms/op
# Warmup Iteration   9: 20,119 ms/op
# Warmup Iteration  10: 20,304 ms/op
Iteration   1: 20,235 ms/op
Iteration   2: 20,170 ms/op
Iteration   3: 20,201 ms/op
Iteration   4: 20,198 ms/op
Iteration   5: 20,127 ms/op
Iteration   6: 20,157 ms/op
Iteration   7: 20,444 ms/op
Iteration   8: 20,609 ms/op
Iteration   9: 20,471 ms/op
Iteration  10: 20,549 ms/op


Result "benchmarkFind":
  20,316 ±(99.9%) 0,274 ms/op [Average]
  (min, avg, max) = (20,127, 20,316, 20,609), stdev = 0,182
  CI (99.9%): [20,041, 20,590] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 32, patternSize = 2)

# Run progress: 37,50% complete, ETA 10:13:29
# Fork: 1 of 1
# Warmup Iteration   1: 65,264 ms/op
# Warmup Iteration   2: 53,757 ms/op
# Warmup Iteration   3: 54,153 ms/op
# Warmup Iteration   4: 53,984 ms/op
# Warmup Iteration   5: 54,217 ms/op
# Warmup Iteration   6: 55,195 ms/op
# Warmup Iteration   7: 54,072 ms/op
# Warmup Iteration   8: 54,610 ms/op
# Warmup Iteration   9: 54,466 ms/op
# Warmup Iteration  10: 54,607 ms/op
Iteration   1: 55,196 ms/op
Iteration   2: 54,345 ms/op
Iteration   3: 54,097 ms/op
Iteration   4: 54,727 ms/op
Iteration   5: 54,776 ms/op
Iteration   6: 53,995 ms/op
Iteration   7: 54,038 ms/op
Iteration   8: 54,099 ms/op
Iteration   9: 54,264 ms/op
Iteration  10: 54,283 ms/op


Result "benchmarkFind":
  54,382 ±(99.9%) 0,594 ms/op [Average]
  (min, avg, max) = (53,995, 54,382, 55,196), stdev = 0,393
  CI (99.9%): [53,788, 54,977] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 32, patternSize = 4)

# Run progress: 37,55% complete, ETA 10:12:52
# Fork: 1 of 1
# Warmup Iteration   1: 28,470 ms/op
# Warmup Iteration   2: 26,063 ms/op
# Warmup Iteration   3: 26,152 ms/op
# Warmup Iteration   4: 25,831 ms/op
# Warmup Iteration   5: 25,884 ms/op
# Warmup Iteration   6: 26,422 ms/op
# Warmup Iteration   7: 29,602 ms/op
# Warmup Iteration   8: 25,789 ms/op
# Warmup Iteration   9: 26,039 ms/op
# Warmup Iteration  10: 26,333 ms/op
Iteration   1: 26,167 ms/op
Iteration   2: 26,403 ms/op
Iteration   3: 26,107 ms/op
Iteration   4: 26,134 ms/op
Iteration   5: 26,273 ms/op
Iteration   6: 26,288 ms/op
Iteration   7: 26,210 ms/op
Iteration   8: 26,134 ms/op
Iteration   9: 26,194 ms/op
Iteration  10: 26,076 ms/op


Result "benchmarkFind":
  26,199 ±(99.9%) 0,150 ms/op [Average]
  (min, avg, max) = (26,076, 26,199, 26,403), stdev = 0,099
  CI (99.9%): [26,049, 26,349] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 32, patternSize = 8)

# Run progress: 37,59% complete, ETA 10:12:14
# Fork: 1 of 1
# Warmup Iteration   1: 23,423 ms/op
# Warmup Iteration   2: 22,053 ms/op
# Warmup Iteration   3: 21,246 ms/op
# Warmup Iteration   4: 21,249 ms/op
# Warmup Iteration   5: 21,205 ms/op
# Warmup Iteration   6: 21,082 ms/op
# Warmup Iteration   7: 21,305 ms/op
# Warmup Iteration   8: 21,139 ms/op
# Warmup Iteration   9: 21,061 ms/op
# Warmup Iteration  10: 21,197 ms/op
Iteration   1: 21,275 ms/op
Iteration   2: 21,336 ms/op
Iteration   3: 21,404 ms/op
Iteration   4: 21,480 ms/op
Iteration   5: 21,422 ms/op
Iteration   6: 21,247 ms/op
Iteration   7: 21,300 ms/op
Iteration   8: 21,295 ms/op
Iteration   9: 21,261 ms/op
Iteration  10: 21,357 ms/op


Result "benchmarkFind":
  21,338 ±(99.9%) 0,116 ms/op [Average]
  (min, avg, max) = (21,247, 21,338, 21,480), stdev = 0,077
  CI (99.9%): [21,221, 21,454] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 32, patternSize = 16)

# Run progress: 37,64% complete, ETA 10:11:37
# Fork: 1 of 1
# Warmup Iteration   1: 23,508 ms/op
# Warmup Iteration   2: 22,283 ms/op
# Warmup Iteration   3: 21,754 ms/op
# Warmup Iteration   4: 21,705 ms/op
# Warmup Iteration   5: 21,654 ms/op
# Warmup Iteration   6: 21,873 ms/op
# Warmup Iteration   7: 21,750 ms/op
# Warmup Iteration   8: 21,826 ms/op
# Warmup Iteration   9: 21,934 ms/op
# Warmup Iteration  10: 21,874 ms/op
Iteration   1: 21,985 ms/op
Iteration   2: 21,884 ms/op
Iteration   3: 22,285 ms/op
Iteration   4: 22,222 ms/op
Iteration   5: 22,190 ms/op
Iteration   6: 22,161 ms/op
Iteration   7: 22,982 ms/op
Iteration   8: 23,136 ms/op
Iteration   9: 23,058 ms/op
Iteration  10: 22,830 ms/op


Result "benchmarkFind":
  22,473 ±(99.9%) 0,718 ms/op [Average]
  (min, avg, max) = (21,884, 22,473, 23,136), stdev = 0,475
  CI (99.9%): [21,755, 23,191] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 32, patternSize = 32)

# Run progress: 37,68% complete, ETA 10:10:59
# Fork: 1 of 1
# Warmup Iteration   1: 23,813 ms/op
# Warmup Iteration   2: 21,990 ms/op
# Warmup Iteration   3: 21,711 ms/op
# Warmup Iteration   4: 21,833 ms/op
# Warmup Iteration   5: 24,521 ms/op
# Warmup Iteration   6: 21,899 ms/op
# Warmup Iteration   7: 21,740 ms/op
# Warmup Iteration   8: 21,854 ms/op
# Warmup Iteration   9: 21,997 ms/op
# Warmup Iteration  10: 22,151 ms/op
Iteration   1: 21,957 ms/op
Iteration   2: 22,005 ms/op
Iteration   3: 22,034 ms/op
Iteration   4: 21,996 ms/op
Iteration   5: 22,034 ms/op
Iteration   6: 21,974 ms/op
Iteration   7: 22,062 ms/op
Iteration   8: 22,204 ms/op
Iteration   9: 22,189 ms/op
Iteration  10: 22,266 ms/op


Result "benchmarkFind":
  22,072 ±(99.9%) 0,163 ms/op [Average]
  (min, avg, max) = (21,957, 22,072, 22,266), stdev = 0,108
  CI (99.9%): [21,909, 22,235] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 32, patternSize = 64)

# Run progress: 37,73% complete, ETA 10:10:22
# Fork: 1 of 1
# Warmup Iteration   1: 24,733 ms/op
# Warmup Iteration   2: 23,313 ms/op
# Warmup Iteration   3: 22,942 ms/op
# Warmup Iteration   4: 22,029 ms/op
# Warmup Iteration   5: 22,066 ms/op
# Warmup Iteration   6: 22,256 ms/op
# Warmup Iteration   7: 22,333 ms/op
# Warmup Iteration   8: 22,474 ms/op
# Warmup Iteration   9: 22,578 ms/op
# Warmup Iteration  10: 22,496 ms/op
Iteration   1: 22,654 ms/op
Iteration   2: 22,500 ms/op
Iteration   3: 22,728 ms/op
Iteration   4: 22,606 ms/op
Iteration   5: 22,518 ms/op
Iteration   6: 22,611 ms/op
Iteration   7: 22,490 ms/op
Iteration   8: 22,364 ms/op
Iteration   9: 22,342 ms/op
Iteration  10: 22,326 ms/op


Result "benchmarkFind":
  22,514 ±(99.9%) 0,209 ms/op [Average]
  (min, avg, max) = (22,326, 22,514, 22,728), stdev = 0,138
  CI (99.9%): [22,305, 22,722] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 32, patternSize = 128)

# Run progress: 37,78% complete, ETA 10:09:45
# Fork: 1 of 1
# Warmup Iteration   1: 23,525 ms/op
# Warmup Iteration   2: 22,398 ms/op
# Warmup Iteration   3: 21,788 ms/op
# Warmup Iteration   4: 21,691 ms/op
# Warmup Iteration   5: 21,787 ms/op
# Warmup Iteration   6: 21,935 ms/op
# Warmup Iteration   7: 22,086 ms/op
# Warmup Iteration   8: 21,879 ms/op
# Warmup Iteration   9: 22,035 ms/op
# Warmup Iteration  10: 21,895 ms/op
Iteration   1: 22,036 ms/op
Iteration   2: 22,008 ms/op
Iteration   3: 22,140 ms/op
Iteration   4: 22,193 ms/op
Iteration   5: 22,215 ms/op
Iteration   6: 22,069 ms/op
Iteration   7: 22,262 ms/op
Iteration   8: 22,445 ms/op
Iteration   9: 22,318 ms/op
Iteration  10: 22,440 ms/op


Result "benchmarkFind":
  22,213 ±(99.9%) 0,236 ms/op [Average]
  (min, avg, max) = (22,008, 22,213, 22,445), stdev = 0,156
  CI (99.9%): [21,977, 22,449] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 32, patternSize = 256)

# Run progress: 37,82% complete, ETA 10:09:07
# Fork: 1 of 1
# Warmup Iteration   1: 24,635 ms/op
# Warmup Iteration   2: 24,341 ms/op
# Warmup Iteration   3: 23,681 ms/op
# Warmup Iteration   4: 22,508 ms/op
# Warmup Iteration   5: 22,641 ms/op
# Warmup Iteration   6: 22,734 ms/op
# Warmup Iteration   7: 22,701 ms/op
# Warmup Iteration   8: 22,679 ms/op
# Warmup Iteration   9: 22,646 ms/op
# Warmup Iteration  10: 22,603 ms/op
Iteration   1: 22,759 ms/op
Iteration   2: 22,812 ms/op
Iteration   3: 22,800 ms/op
Iteration   4: 22,911 ms/op
Iteration   5: 22,907 ms/op
Iteration   6: 22,908 ms/op
Iteration   7: 23,021 ms/op
Iteration   8: 23,012 ms/op
Iteration   9: 22,968 ms/op
Iteration  10: 23,041 ms/op


Result "benchmarkFind":
  22,914 ±(99.9%) 0,149 ms/op [Average]
  (min, avg, max) = (22,759, 22,914, 23,041), stdev = 0,099
  CI (99.9%): [22,765, 23,063] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 128, patternSize = 2)

# Run progress: 37,87% complete, ETA 10:08:30
# Fork: 1 of 1
# Warmup Iteration   1: 502,833 ms/op
# Warmup Iteration   2: 472,967 ms/op
# Warmup Iteration   3: 452,294 ms/op
# Warmup Iteration   4: 455,256 ms/op
# Warmup Iteration   5: 456,310 ms/op
# Warmup Iteration   6: 451,325 ms/op
# Warmup Iteration   7: 451,623 ms/op
# Warmup Iteration   8: 453,591 ms/op
# Warmup Iteration   9: 449,289 ms/op
# Warmup Iteration  10: 450,569 ms/op
Iteration   1: 449,229 ms/op
Iteration   2: 452,294 ms/op
Iteration   3: 450,008 ms/op
Iteration   4: 450,853 ms/op
Iteration   5: 450,932 ms/op
Iteration   6: 451,612 ms/op
Iteration   7: 449,992 ms/op
Iteration   8: 448,353 ms/op
Iteration   9: 451,009 ms/op
Iteration  10: 449,912 ms/op


Result "benchmarkFind":
  450,419 ±(99.9%) 1,748 ms/op [Average]
  (min, avg, max) = (448,353, 450,419, 452,294), stdev = 1,156
  CI (99.9%): [448,671, 452,168] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 128, patternSize = 4)

# Run progress: 37,91% complete, ETA 10:08:04
# Fork: 1 of 1
# Warmup Iteration   1: 26,553 ms/op
# Warmup Iteration   2: 24,715 ms/op
# Warmup Iteration   3: 24,454 ms/op
# Warmup Iteration   4: 24,162 ms/op
# Warmup Iteration   5: 24,319 ms/op
# Warmup Iteration   6: 24,140 ms/op
# Warmup Iteration   7: 24,422 ms/op
# Warmup Iteration   8: 24,217 ms/op
# Warmup Iteration   9: 24,269 ms/op
# Warmup Iteration  10: 24,512 ms/op
Iteration   1: 24,692 ms/op
Iteration   2: 24,564 ms/op
Iteration   3: 24,425 ms/op
Iteration   4: 26,434 ms/op
Iteration   5: 23,847 ms/op
Iteration   6: 23,955 ms/op
Iteration   7: 24,081 ms/op
Iteration   8: 24,198 ms/op
Iteration   9: 24,151 ms/op
Iteration  10: 24,020 ms/op


Result "benchmarkFind":
  24,437 ±(99.9%) 1,137 ms/op [Average]
  (min, avg, max) = (23,847, 24,437, 26,434), stdev = 0,752
  CI (99.9%): [23,300, 25,573] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 128, patternSize = 8)

# Run progress: 37,96% complete, ETA 10:07:27
# Fork: 1 of 1
# Warmup Iteration   1: 26,107 ms/op
# Warmup Iteration   2: 23,409 ms/op
# Warmup Iteration   3: 23,324 ms/op
# Warmup Iteration   4: 23,386 ms/op
# Warmup Iteration   5: 23,347 ms/op
# Warmup Iteration   6: 23,395 ms/op
# Warmup Iteration   7: 23,403 ms/op
# Warmup Iteration   8: 23,654 ms/op
# Warmup Iteration   9: 23,517 ms/op
# Warmup Iteration  10: 23,493 ms/op
Iteration   1: 23,514 ms/op
Iteration   2: 23,498 ms/op
Iteration   3: 23,442 ms/op
Iteration   4: 23,659 ms/op
Iteration   5: 23,594 ms/op
Iteration   6: 23,305 ms/op
Iteration   7: 23,513 ms/op
Iteration   8: 23,614 ms/op
Iteration   9: 23,721 ms/op
Iteration  10: 23,389 ms/op


Result "benchmarkFind":
  23,525 ±(99.9%) 0,191 ms/op [Average]
  (min, avg, max) = (23,305, 23,525, 23,721), stdev = 0,126
  CI (99.9%): [23,334, 23,716] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 128, patternSize = 16)

# Run progress: 38,01% complete, ETA 10:06:49
# Fork: 1 of 1
# Warmup Iteration   1: 26,095 ms/op
# Warmup Iteration   2: 24,529 ms/op
# Warmup Iteration   3: 23,918 ms/op
# Warmup Iteration   4: 23,888 ms/op
# Warmup Iteration   5: 23,805 ms/op
# Warmup Iteration   6: 23,945 ms/op
# Warmup Iteration   7: 23,792 ms/op
# Warmup Iteration   8: 23,824 ms/op
# Warmup Iteration   9: 23,723 ms/op
# Warmup Iteration  10: 24,026 ms/op
Iteration   1: 23,950 ms/op
Iteration   2: 23,947 ms/op
Iteration   3: 24,204 ms/op
Iteration   4: 23,986 ms/op
Iteration   5: 23,805 ms/op
Iteration   6: 23,954 ms/op
Iteration   7: 23,997 ms/op
Iteration   8: 23,957 ms/op
Iteration   9: 24,062 ms/op
Iteration  10: 24,197 ms/op


Result "benchmarkFind":
  24,006 ±(99.9%) 0,183 ms/op [Average]
  (min, avg, max) = (23,805, 24,006, 24,204), stdev = 0,121
  CI (99.9%): [23,823, 24,189] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 128, patternSize = 32)

# Run progress: 38,05% complete, ETA 10:06:12
# Fork: 1 of 1
# Warmup Iteration   1: 26,031 ms/op
# Warmup Iteration   2: 24,236 ms/op
# Warmup Iteration   3: 23,853 ms/op
# Warmup Iteration   4: 23,677 ms/op
# Warmup Iteration   5: 23,713 ms/op
# Warmup Iteration   6: 23,691 ms/op
# Warmup Iteration   7: 23,746 ms/op
# Warmup Iteration   8: 23,750 ms/op
# Warmup Iteration   9: 23,893 ms/op
# Warmup Iteration  10: 23,936 ms/op
Iteration   1: 24,111 ms/op
Iteration   2: 26,826 ms/op
Iteration   3: 23,851 ms/op
Iteration   4: 23,855 ms/op
Iteration   5: 23,634 ms/op
Iteration   6: 23,663 ms/op
Iteration   7: 23,913 ms/op
Iteration   8: 23,957 ms/op
Iteration   9: 24,189 ms/op
Iteration  10: 23,964 ms/op


Result "benchmarkFind":
  24,196 ±(99.9%) 1,421 ms/op [Average]
  (min, avg, max) = (23,634, 24,196, 26,826), stdev = 0,940
  CI (99.9%): [22,775, 25,617] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 128, patternSize = 64)

# Run progress: 38,10% complete, ETA 10:05:35
# Fork: 1 of 1
# Warmup Iteration   1: 27,190 ms/op
# Warmup Iteration   2: 25,557 ms/op
# Warmup Iteration   3: 24,873 ms/op
# Warmup Iteration   4: 24,286 ms/op
# Warmup Iteration   5: 24,239 ms/op
# Warmup Iteration   6: 24,513 ms/op
# Warmup Iteration   7: 24,514 ms/op
# Warmup Iteration   8: 24,452 ms/op
# Warmup Iteration   9: 24,460 ms/op
# Warmup Iteration  10: 24,412 ms/op
Iteration   1: 24,364 ms/op
Iteration   2: 24,663 ms/op
Iteration   3: 24,749 ms/op
Iteration   4: 24,876 ms/op
Iteration   5: 24,737 ms/op
Iteration   6: 24,781 ms/op
Iteration   7: 25,002 ms/op
Iteration   8: 24,817 ms/op
Iteration   9: 24,931 ms/op
Iteration  10: 24,989 ms/op


Result "benchmarkFind":
  24,791 ±(99.9%) 0,282 ms/op [Average]
  (min, avg, max) = (24,364, 24,791, 25,002), stdev = 0,187
  CI (99.9%): [24,508, 25,073] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 128, patternSize = 128)

# Run progress: 38,14% complete, ETA 10:04:58
# Fork: 1 of 1
# Warmup Iteration   1: 27,813 ms/op
# Warmup Iteration   2: 25,891 ms/op
# Warmup Iteration   3: 25,595 ms/op
# Warmup Iteration   4: 25,113 ms/op
# Warmup Iteration   5: 25,155 ms/op
# Warmup Iteration   6: 25,326 ms/op
# Warmup Iteration   7: 25,174 ms/op
# Warmup Iteration   8: 25,098 ms/op
# Warmup Iteration   9: 25,298 ms/op
# Warmup Iteration  10: 25,381 ms/op
Iteration   1: 25,201 ms/op
Iteration   2: 25,345 ms/op
Iteration   3: 25,417 ms/op
Iteration   4: 25,556 ms/op
Iteration   5: 25,724 ms/op
Iteration   6: 25,769 ms/op
Iteration   7: 25,839 ms/op
Iteration   8: 26,039 ms/op
Iteration   9: 26,090 ms/op
Iteration  10: 25,828 ms/op


Result "benchmarkFind":
  25,681 ±(99.9%) 0,445 ms/op [Average]
  (min, avg, max) = (25,201, 25,681, 26,090), stdev = 0,295
  CI (99.9%): [25,235, 26,126] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 128, patternSize = 256)

# Run progress: 38,19% complete, ETA 10:04:21
# Fork: 1 of 1
# Warmup Iteration   1: 26,967 ms/op
# Warmup Iteration   2: 24,823 ms/op
# Warmup Iteration   3: 24,299 ms/op
# Warmup Iteration   4: 24,429 ms/op
# Warmup Iteration   5: 24,291 ms/op
# Warmup Iteration   6: 24,261 ms/op
# Warmup Iteration   7: 24,464 ms/op
# Warmup Iteration   8: 24,193 ms/op
# Warmup Iteration   9: 25,122 ms/op
# Warmup Iteration  10: 25,696 ms/op
Iteration   1: 24,499 ms/op
Iteration   2: 24,472 ms/op
Iteration   3: 24,638 ms/op
Iteration   4: 24,672 ms/op
Iteration   5: 24,697 ms/op
Iteration   6: 24,634 ms/op
Iteration   7: 24,592 ms/op
Iteration   8: 24,806 ms/op
Iteration   9: 24,710 ms/op
Iteration  10: 24,534 ms/op


Result "benchmarkFind":
  24,625 ±(99.9%) 0,156 ms/op [Average]
  (min, avg, max) = (24,472, 24,625, 24,806), stdev = 0,103
  CI (99.9%): [24,469, 24,782] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 2, patternSize = 2)

# Run progress: 38,24% complete, ETA 10:03:44
# Fork: 1 of 1
# Warmup Iteration   1: 60,155 ms/op
# Warmup Iteration   2: 54,286 ms/op
# Warmup Iteration   3: 54,201 ms/op
# Warmup Iteration   4: 55,056 ms/op
# Warmup Iteration   5: 54,534 ms/op
# Warmup Iteration   6: 55,029 ms/op
# Warmup Iteration   7: 54,833 ms/op
# Warmup Iteration   8: 54,847 ms/op
# Warmup Iteration   9: 54,609 ms/op
# Warmup Iteration  10: 55,474 ms/op
Iteration   1: 54,515 ms/op
Iteration   2: 54,019 ms/op
Iteration   3: 54,824 ms/op
Iteration   4: 55,214 ms/op
Iteration   5: 55,318 ms/op
Iteration   6: 55,345 ms/op
Iteration   7: 55,242 ms/op
Iteration   8: 55,032 ms/op
Iteration   9: 54,985 ms/op
Iteration  10: 55,400 ms/op


Result "benchmarkFind":
  54,990 ±(99.9%) 0,659 ms/op [Average]
  (min, avg, max) = (54,019, 54,990, 55,400), stdev = 0,436
  CI (99.9%): [54,330, 55,649] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 2, patternSize = 4)

# Run progress: 38,28% complete, ETA 10:03:09
# Fork: 1 of 1
# Warmup Iteration   1: 57,915 ms/op
# Warmup Iteration   2: 52,585 ms/op
# Warmup Iteration   3: 52,393 ms/op
# Warmup Iteration   4: 52,231 ms/op
# Warmup Iteration   5: 52,649 ms/op
# Warmup Iteration   6: 52,652 ms/op
# Warmup Iteration   7: 52,911 ms/op
# Warmup Iteration   8: 52,704 ms/op
# Warmup Iteration   9: 52,696 ms/op
# Warmup Iteration  10: 52,751 ms/op
Iteration   1: 52,979 ms/op
Iteration   2: 52,908 ms/op
Iteration   3: 52,714 ms/op
Iteration   4: 52,768 ms/op
Iteration   5: 52,888 ms/op
Iteration   6: 52,596 ms/op
Iteration   7: 53,354 ms/op
Iteration   8: 53,983 ms/op
Iteration   9: 53,401 ms/op
Iteration  10: 53,346 ms/op


Result "benchmarkFind":
  53,094 ±(99.9%) 0,638 ms/op [Average]
  (min, avg, max) = (52,596, 53,094, 53,983), stdev = 0,422
  CI (99.9%): [52,456, 53,732] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 2, patternSize = 8)

# Run progress: 38,33% complete, ETA 10:02:32
# Fork: 1 of 1
# Warmup Iteration   1: 57,778 ms/op
# Warmup Iteration   2: 52,797 ms/op
# Warmup Iteration   3: 51,399 ms/op
# Warmup Iteration   4: 51,956 ms/op
# Warmup Iteration   5: 51,943 ms/op
# Warmup Iteration   6: 58,249 ms/op
# Warmup Iteration   7: 52,573 ms/op
# Warmup Iteration   8: 53,123 ms/op
# Warmup Iteration   9: 53,425 ms/op
# Warmup Iteration  10: 53,190 ms/op
Iteration   1: 52,856 ms/op
Iteration   2: 52,836 ms/op
Iteration   3: 52,943 ms/op
Iteration   4: 52,693 ms/op
Iteration   5: 52,833 ms/op
Iteration   6: 53,425 ms/op
Iteration   7: 52,730 ms/op
Iteration   8: 53,022 ms/op
Iteration   9: 52,978 ms/op
Iteration  10: 53,319 ms/op


Result "benchmarkFind":
  52,963 ±(99.9%) 0,362 ms/op [Average]
  (min, avg, max) = (52,693, 52,963, 53,425), stdev = 0,239
  CI (99.9%): [52,601, 53,326] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 2, patternSize = 16)

# Run progress: 38,37% complete, ETA 10:01:56
# Fork: 1 of 1
# Warmup Iteration   1: 57,554 ms/op
# Warmup Iteration   2: 53,172 ms/op
# Warmup Iteration   3: 52,032 ms/op
# Warmup Iteration   4: 52,235 ms/op
# Warmup Iteration   5: 52,471 ms/op
# Warmup Iteration   6: 52,275 ms/op
# Warmup Iteration   7: 52,324 ms/op
# Warmup Iteration   8: 53,094 ms/op
# Warmup Iteration   9: 53,554 ms/op
# Warmup Iteration  10: 53,231 ms/op
Iteration   1: 52,838 ms/op
Iteration   2: 53,028 ms/op
Iteration   3: 53,503 ms/op
Iteration   4: 53,117 ms/op
Iteration   5: 53,540 ms/op
Iteration   6: 52,905 ms/op
Iteration   7: 53,587 ms/op
Iteration   8: 53,685 ms/op
Iteration   9: 53,353 ms/op
Iteration  10: 53,524 ms/op


Result "benchmarkFind":
  53,308 ±(99.9%) 0,467 ms/op [Average]
  (min, avg, max) = (52,838, 53,308, 53,685), stdev = 0,309
  CI (99.9%): [52,841, 53,775] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 2, patternSize = 32)

# Run progress: 38,42% complete, ETA 10:01:19
# Fork: 1 of 1
# Warmup Iteration   1: 56,805 ms/op
# Warmup Iteration   2: 52,788 ms/op
# Warmup Iteration   3: 51,255 ms/op
# Warmup Iteration   4: 51,863 ms/op
# Warmup Iteration   5: 51,743 ms/op
# Warmup Iteration   6: 52,033 ms/op
# Warmup Iteration   7: 51,772 ms/op
# Warmup Iteration   8: 52,625 ms/op
# Warmup Iteration   9: 52,756 ms/op
# Warmup Iteration  10: 52,712 ms/op
Iteration   1: 52,764 ms/op
Iteration   2: 51,859 ms/op
Iteration   3: 52,589 ms/op
Iteration   4: 52,768 ms/op
Iteration   5: 53,097 ms/op
Iteration   6: 52,494 ms/op
Iteration   7: 52,806 ms/op
Iteration   8: 53,379 ms/op
Iteration   9: 52,857 ms/op
Iteration  10: 53,063 ms/op


Result "benchmarkFind":
  52,768 ±(99.9%) 0,620 ms/op [Average]
  (min, avg, max) = (51,859, 52,768, 53,379), stdev = 0,410
  CI (99.9%): [52,148, 53,387] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 2, patternSize = 64)

# Run progress: 38,47% complete, ETA 10:00:43
# Fork: 1 of 1
# Warmup Iteration   1: 58,084 ms/op
# Warmup Iteration   2: 53,532 ms/op
# Warmup Iteration   3: 57,011 ms/op
# Warmup Iteration   4: 51,452 ms/op
# Warmup Iteration   5: 51,718 ms/op
# Warmup Iteration   6: 51,782 ms/op
# Warmup Iteration   7: 52,443 ms/op
# Warmup Iteration   8: 52,908 ms/op
# Warmup Iteration   9: 52,924 ms/op
# Warmup Iteration  10: 52,630 ms/op
Iteration   1: 53,092 ms/op
Iteration   2: 53,107 ms/op
Iteration   3: 52,716 ms/op
Iteration   4: 52,452 ms/op
Iteration   5: 52,586 ms/op
Iteration   6: 52,351 ms/op
Iteration   7: 53,689 ms/op
Iteration   8: 53,439 ms/op
Iteration   9: 53,347 ms/op
Iteration  10: 53,043 ms/op


Result "benchmarkFind":
  52,982 ±(99.9%) 0,672 ms/op [Average]
  (min, avg, max) = (52,351, 52,982, 53,689), stdev = 0,445
  CI (99.9%): [52,310, 53,655] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 2, patternSize = 128)

# Run progress: 38,51% complete, ETA 10:00:07
# Fork: 1 of 1
# Warmup Iteration   1: 57,478 ms/op
# Warmup Iteration   2: 51,921 ms/op
# Warmup Iteration   3: 52,200 ms/op
# Warmup Iteration   4: 52,846 ms/op
# Warmup Iteration   5: 52,685 ms/op
# Warmup Iteration   6: 53,032 ms/op
# Warmup Iteration   7: 53,145 ms/op
# Warmup Iteration   8: 52,758 ms/op
# Warmup Iteration   9: 52,911 ms/op
# Warmup Iteration  10: 53,144 ms/op
Iteration   1: 53,015 ms/op
Iteration   2: 52,944 ms/op
Iteration   3: 53,127 ms/op
Iteration   4: 53,134 ms/op
Iteration   5: 53,544 ms/op
Iteration   6: 53,254 ms/op
Iteration   7: 52,854 ms/op
Iteration   8: 53,118 ms/op
Iteration   9: 53,225 ms/op
Iteration  10: 52,841 ms/op


Result "benchmarkFind":
  53,106 ±(99.9%) 0,318 ms/op [Average]
  (min, avg, max) = (52,841, 53,106, 53,544), stdev = 0,210
  CI (99.9%): [52,788, 53,423] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 2, patternSize = 256)

# Run progress: 38,56% complete, ETA 09:59:30
# Fork: 1 of 1
# Warmup Iteration   1: 56,862 ms/op
# Warmup Iteration   2: 51,277 ms/op
# Warmup Iteration   3: 50,812 ms/op
# Warmup Iteration   4: 50,963 ms/op
# Warmup Iteration   5: 51,521 ms/op
# Warmup Iteration   6: 52,076 ms/op
# Warmup Iteration   7: 51,661 ms/op
# Warmup Iteration   8: 51,404 ms/op
# Warmup Iteration   9: 51,673 ms/op
# Warmup Iteration  10: 51,371 ms/op
Iteration   1: 51,546 ms/op
Iteration   2: 51,519 ms/op
Iteration   3: 51,469 ms/op
Iteration   4: 51,808 ms/op
Iteration   5: 51,736 ms/op
Iteration   6: 51,833 ms/op
Iteration   7: 51,697 ms/op
Iteration   8: 51,510 ms/op
Iteration   9: 51,529 ms/op
Iteration  10: 51,629 ms/op


Result "benchmarkFind":
  51,628 ±(99.9%) 0,201 ms/op [Average]
  (min, avg, max) = (51,469, 51,628, 51,833), stdev = 0,133
  CI (99.9%): [51,427, 51,828] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 8, patternSize = 2)

# Run progress: 38,60% complete, ETA 09:58:54
# Fork: 1 of 1
# Warmup Iteration   1: 81,581 ms/op
# Warmup Iteration   2: 72,452 ms/op
# Warmup Iteration   3: 71,468 ms/op
# Warmup Iteration   4: 72,274 ms/op
# Warmup Iteration   5: 71,742 ms/op
# Warmup Iteration   6: 72,522 ms/op
# Warmup Iteration   7: 71,983 ms/op
# Warmup Iteration   8: 72,308 ms/op
# Warmup Iteration   9: 72,605 ms/op
# Warmup Iteration  10: 72,770 ms/op
Iteration   1: 77,201 ms/op
Iteration   2: 71,108 ms/op
Iteration   3: 71,896 ms/op
Iteration   4: 72,342 ms/op
Iteration   5: 71,276 ms/op
Iteration   6: 72,141 ms/op
Iteration   7: 71,877 ms/op
Iteration   8: 72,065 ms/op
Iteration   9: 72,276 ms/op
Iteration  10: 71,733 ms/op


Result "benchmarkFind":
  72,391 ±(99.9%) 2,626 ms/op [Average]
  (min, avg, max) = (71,108, 72,391, 77,201), stdev = 1,737
  CI (99.9%): [69,765, 75,017] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 8, patternSize = 4)

# Run progress: 38,65% complete, ETA 09:58:26
# Fork: 1 of 1
# Warmup Iteration   1: 80,982 ms/op
# Warmup Iteration   2: 72,891 ms/op
# Warmup Iteration   3: 73,835 ms/op
# Warmup Iteration   4: 74,062 ms/op
# Warmup Iteration   5: 73,815 ms/op
# Warmup Iteration   6: 74,106 ms/op
# Warmup Iteration   7: 75,205 ms/op
# Warmup Iteration   8: 75,011 ms/op
# Warmup Iteration   9: 74,525 ms/op
# Warmup Iteration  10: 75,044 ms/op
Iteration   1: 74,259 ms/op
Iteration   2: 74,915 ms/op
Iteration   3: 74,564 ms/op
Iteration   4: 74,191 ms/op
Iteration   5: 74,304 ms/op
Iteration   6: 74,689 ms/op
Iteration   7: 74,671 ms/op
Iteration   8: 74,128 ms/op
Iteration   9: 74,927 ms/op
Iteration  10: 74,251 ms/op


Result "benchmarkFind":
  74,490 ±(99.9%) 0,455 ms/op [Average]
  (min, avg, max) = (74,128, 74,490, 74,927), stdev = 0,301
  CI (99.9%): [74,035, 74,945] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 8, patternSize = 8)

# Run progress: 38,69% complete, ETA 09:57:50
# Fork: 1 of 1
# Warmup Iteration   1: 75,284 ms/op
# Warmup Iteration   2: 66,836 ms/op
# Warmup Iteration   3: 67,730 ms/op
# Warmup Iteration   4: 67,248 ms/op
# Warmup Iteration   5: 67,704 ms/op
# Warmup Iteration   6: 67,586 ms/op
# Warmup Iteration   7: 67,860 ms/op
# Warmup Iteration   8: 68,023 ms/op
# Warmup Iteration   9: 67,821 ms/op
# Warmup Iteration  10: 68,970 ms/op
Iteration   1: 66,921 ms/op
Iteration   2: 74,356 ms/op
Iteration   3: 68,075 ms/op
Iteration   4: 67,957 ms/op
Iteration   5: 67,123 ms/op
Iteration   6: 68,253 ms/op
Iteration   7: 67,780 ms/op
Iteration   8: 68,067 ms/op
Iteration   9: 69,398 ms/op
Iteration  10: 68,690 ms/op


Result "benchmarkFind":
  68,662 ±(99.9%) 3,207 ms/op [Average]
  (min, avg, max) = (66,921, 68,662, 74,356), stdev = 2,122
  CI (99.9%): [65,455, 71,870] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 8, patternSize = 16)

# Run progress: 38,74% complete, ETA 09:57:14
# Fork: 1 of 1
# Warmup Iteration   1: 83,903 ms/op
# Warmup Iteration   2: 76,110 ms/op
# Warmup Iteration   3: 76,730 ms/op
# Warmup Iteration   4: 76,708 ms/op
# Warmup Iteration   5: 76,572 ms/op
# Warmup Iteration   6: 76,422 ms/op
# Warmup Iteration   7: 76,942 ms/op
# Warmup Iteration   8: 77,060 ms/op
# Warmup Iteration   9: 77,046 ms/op
# Warmup Iteration  10: 77,547 ms/op
Iteration   1: 77,070 ms/op
Iteration   2: 77,247 ms/op
Iteration   3: 76,976 ms/op
Iteration   4: 77,240 ms/op
Iteration   5: 77,044 ms/op
Iteration   6: 77,216 ms/op
Iteration   7: 77,470 ms/op
Iteration   8: 77,399 ms/op
Iteration   9: 77,352 ms/op
Iteration  10: 78,774 ms/op


Result "benchmarkFind":
  77,379 ±(99.9%) 0,779 ms/op [Average]
  (min, avg, max) = (76,976, 77,379, 78,774), stdev = 0,515
  CI (99.9%): [76,600, 78,157] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 8, patternSize = 32)

# Run progress: 38,79% complete, ETA 09:56:38
# Fork: 1 of 1
# Warmup Iteration   1: 84,036 ms/op
# Warmup Iteration   2: 74,771 ms/op
# Warmup Iteration   3: 74,726 ms/op
# Warmup Iteration   4: 75,191 ms/op
# Warmup Iteration   5: 74,705 ms/op
# Warmup Iteration   6: 74,942 ms/op
# Warmup Iteration   7: 75,144 ms/op
# Warmup Iteration   8: 75,481 ms/op
# Warmup Iteration   9: 75,015 ms/op
# Warmup Iteration  10: 76,357 ms/op
Iteration   1: 75,105 ms/op
Iteration   2: 75,206 ms/op
Iteration   3: 75,333 ms/op
Iteration   4: 75,913 ms/op
Iteration   5: 75,263 ms/op
Iteration   6: 75,151 ms/op
Iteration   7: 76,378 ms/op
Iteration   8: 76,442 ms/op
Iteration   9: 76,320 ms/op
Iteration  10: 75,692 ms/op


Result "benchmarkFind":
  75,680 ±(99.9%) 0,822 ms/op [Average]
  (min, avg, max) = (75,105, 75,680, 76,442), stdev = 0,544
  CI (99.9%): [74,858, 76,502] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 8, patternSize = 64)

# Run progress: 38,83% complete, ETA 09:56:03
# Fork: 1 of 1
# Warmup Iteration   1: 81,910 ms/op
# Warmup Iteration   2: 74,634 ms/op
# Warmup Iteration   3: 74,082 ms/op
# Warmup Iteration   4: 74,954 ms/op
# Warmup Iteration   5: 74,897 ms/op
# Warmup Iteration   6: 75,172 ms/op
# Warmup Iteration   7: 76,220 ms/op
# Warmup Iteration   8: 82,952 ms/op
# Warmup Iteration   9: 77,939 ms/op
# Warmup Iteration  10: 75,127 ms/op
Iteration   1: 76,505 ms/op
Iteration   2: 74,884 ms/op
Iteration   3: 75,177 ms/op
Iteration   4: 74,642 ms/op
Iteration   5: 75,103 ms/op
Iteration   6: 75,742 ms/op
Iteration   7: 77,368 ms/op
Iteration   8: 77,424 ms/op
Iteration   9: 77,764 ms/op
Iteration  10: 77,114 ms/op


Result "benchmarkFind":
  76,172 ±(99.9%) 1,806 ms/op [Average]
  (min, avg, max) = (74,642, 76,172, 77,764), stdev = 1,195
  CI (99.9%): [74,366, 77,979] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 8, patternSize = 128)

# Run progress: 38,88% complete, ETA 09:55:28
# Fork: 1 of 1
# Warmup Iteration   1: 82,501 ms/op
# Warmup Iteration   2: 78,705 ms/op
# Warmup Iteration   3: 76,712 ms/op
# Warmup Iteration   4: 76,671 ms/op
# Warmup Iteration   5: 76,159 ms/op
# Warmup Iteration   6: 76,375 ms/op
# Warmup Iteration   7: 76,878 ms/op
# Warmup Iteration   8: 77,162 ms/op
# Warmup Iteration   9: 77,062 ms/op
# Warmup Iteration  10: 76,320 ms/op
Iteration   1: 78,152 ms/op
Iteration   2: 78,228 ms/op
Iteration   3: 77,703 ms/op
Iteration   4: 78,535 ms/op
Iteration   5: 78,729 ms/op
Iteration   6: 79,190 ms/op
Iteration   7: 79,118 ms/op
Iteration   8: 78,183 ms/op
Iteration   9: 77,955 ms/op
Iteration  10: 79,288 ms/op


Result "benchmarkFind":
  78,508 ±(99.9%) 0,837 ms/op [Average]
  (min, avg, max) = (77,703, 78,508, 79,288), stdev = 0,554
  CI (99.9%): [77,671, 79,345] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 8, patternSize = 256)

# Run progress: 38,92% complete, ETA 09:54:52
# Fork: 1 of 1
# Warmup Iteration   1: 81,733 ms/op
# Warmup Iteration   2: 74,462 ms/op
# Warmup Iteration   3: 72,998 ms/op
# Warmup Iteration   4: 73,726 ms/op
# Warmup Iteration   5: 73,215 ms/op
# Warmup Iteration   6: 73,572 ms/op
# Warmup Iteration   7: 73,480 ms/op
# Warmup Iteration   8: 73,723 ms/op
# Warmup Iteration   9: 74,136 ms/op
# Warmup Iteration  10: 74,391 ms/op
Iteration   1: 74,641 ms/op
Iteration   2: 74,781 ms/op
Iteration   3: 74,906 ms/op
Iteration   4: 74,776 ms/op
Iteration   5: 74,693 ms/op
Iteration   6: 74,744 ms/op
Iteration   7: 75,995 ms/op
Iteration   8: 75,810 ms/op
Iteration   9: 76,270 ms/op
Iteration  10: 74,851 ms/op


Result "benchmarkFind":
  75,147 ±(99.9%) 0,938 ms/op [Average]
  (min, avg, max) = (74,641, 75,147, 76,270), stdev = 0,620
  CI (99.9%): [74,209, 76,084] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 32, patternSize = 2)

# Run progress: 38,97% complete, ETA 09:54:17
# Fork: 1 of 1
# Warmup Iteration   1: 122,422 ms/op
# Warmup Iteration   2: 104,916 ms/op
# Warmup Iteration   3: 102,932 ms/op
# Warmup Iteration   4: 115,058 ms/op
# Warmup Iteration   5: 105,244 ms/op
# Warmup Iteration   6: 103,314 ms/op
# Warmup Iteration   7: 104,802 ms/op
# Warmup Iteration   8: 105,019 ms/op
# Warmup Iteration   9: 105,616 ms/op
# Warmup Iteration  10: 105,169 ms/op
Iteration   1: 104,847 ms/op
Iteration   2: 106,276 ms/op
Iteration   3: 105,232 ms/op
Iteration   4: 106,803 ms/op
Iteration   5: 105,410 ms/op
Iteration   6: 105,362 ms/op
Iteration   7: 106,493 ms/op
Iteration   8: 104,535 ms/op
Iteration   9: 105,326 ms/op
Iteration  10: 105,572 ms/op


Result "benchmarkFind":
  105,586 ±(99.9%) 1,093 ms/op [Average]
  (min, avg, max) = (104,535, 105,586, 106,803), stdev = 0,723
  CI (99.9%): [104,492, 106,679] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 32, patternSize = 4)

# Run progress: 39,02% complete, ETA 09:53:42
# Fork: 1 of 1
# Warmup Iteration   1: 87,893 ms/op
# Warmup Iteration   2: 80,206 ms/op
# Warmup Iteration   3: 80,259 ms/op
# Warmup Iteration   4: 80,313 ms/op
# Warmup Iteration   5: 79,911 ms/op
# Warmup Iteration   6: 80,547 ms/op
# Warmup Iteration   7: 81,459 ms/op
# Warmup Iteration   8: 80,525 ms/op
# Warmup Iteration   9: 81,186 ms/op
# Warmup Iteration  10: 81,228 ms/op
Iteration   1: 80,869 ms/op
Iteration   2: 80,814 ms/op
Iteration   3: 80,327 ms/op
Iteration   4: 80,657 ms/op
Iteration   5: 79,981 ms/op
Iteration   6: 80,478 ms/op
Iteration   7: 79,974 ms/op
Iteration   8: 79,606 ms/op
Iteration   9: 79,054 ms/op
Iteration  10: 79,189 ms/op


Result "benchmarkFind":
  80,095 ±(99.9%) 0,983 ms/op [Average]
  (min, avg, max) = (79,054, 80,095, 80,869), stdev = 0,650
  CI (99.9%): [79,112, 81,078] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 32, patternSize = 8)

# Run progress: 39,06% complete, ETA 09:53:07
# Fork: 1 of 1
# Warmup Iteration   1: 82,541 ms/op
# Warmup Iteration   2: 76,235 ms/op
# Warmup Iteration   3: 76,272 ms/op
# Warmup Iteration   4: 76,364 ms/op
# Warmup Iteration   5: 76,058 ms/op
# Warmup Iteration   6: 76,707 ms/op
# Warmup Iteration   7: 76,527 ms/op
# Warmup Iteration   8: 76,672 ms/op
# Warmup Iteration   9: 77,504 ms/op
# Warmup Iteration  10: 77,322 ms/op
Iteration   1: 77,310 ms/op
Iteration   2: 77,469 ms/op
Iteration   3: 77,217 ms/op
Iteration   4: 76,785 ms/op
Iteration   5: 77,545 ms/op
Iteration   6: 77,189 ms/op
Iteration   7: 76,921 ms/op
Iteration   8: 77,580 ms/op
Iteration   9: 77,136 ms/op
Iteration  10: 83,397 ms/op


Result "benchmarkFind":
  77,855 ±(99.9%) 2,969 ms/op [Average]
  (min, avg, max) = (76,785, 77,855, 83,397), stdev = 1,964
  CI (99.9%): [74,886, 80,824] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 32, patternSize = 16)

# Run progress: 39,11% complete, ETA 09:52:32
# Fork: 1 of 1
# Warmup Iteration   1: 88,730 ms/op
# Warmup Iteration   2: 82,683 ms/op
# Warmup Iteration   3: 81,247 ms/op
# Warmup Iteration   4: 81,456 ms/op
# Warmup Iteration   5: 80,788 ms/op
# Warmup Iteration   6: 81,110 ms/op
# Warmup Iteration   7: 81,656 ms/op
# Warmup Iteration   8: 81,872 ms/op
# Warmup Iteration   9: 81,985 ms/op
# Warmup Iteration  10: 83,831 ms/op
Iteration   1: 84,431 ms/op
Iteration   2: 83,537 ms/op
Iteration   3: 84,166 ms/op
Iteration   4: 82,281 ms/op
Iteration   5: 85,560 ms/op
Iteration   6: 83,716 ms/op
Iteration   7: 82,281 ms/op
Iteration   8: 82,935 ms/op
Iteration   9: 82,519 ms/op
Iteration  10: 83,315 ms/op


Result "benchmarkFind":
  83,474 ±(99.9%) 1,584 ms/op [Average]
  (min, avg, max) = (82,281, 83,474, 85,560), stdev = 1,048
  CI (99.9%): [81,890, 85,058] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 32, patternSize = 32)

# Run progress: 39,15% complete, ETA 09:51:57
# Fork: 1 of 1
# Warmup Iteration   1: 85,465 ms/op
# Warmup Iteration   2: 78,940 ms/op
# Warmup Iteration   3: 79,165 ms/op
# Warmup Iteration   4: 79,312 ms/op
# Warmup Iteration   5: 79,240 ms/op
# Warmup Iteration   6: 80,071 ms/op
# Warmup Iteration   7: 80,869 ms/op
# Warmup Iteration   8: 79,995 ms/op
# Warmup Iteration   9: 80,091 ms/op
# Warmup Iteration  10: 81,124 ms/op
Iteration   1: 79,978 ms/op
Iteration   2: 79,543 ms/op
Iteration   3: 79,885 ms/op
Iteration   4: 80,648 ms/op
Iteration   5: 79,416 ms/op
Iteration   6: 80,133 ms/op
Iteration   7: 79,997 ms/op
Iteration   8: 80,039 ms/op
Iteration   9: 80,562 ms/op
Iteration  10: 80,487 ms/op


Result "benchmarkFind":
  80,069 ±(99.9%) 0,619 ms/op [Average]
  (min, avg, max) = (79,416, 80,069, 80,648), stdev = 0,409
  CI (99.9%): [79,450, 80,688] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 32, patternSize = 64)

# Run progress: 39,20% complete, ETA 09:51:22
# Fork: 1 of 1
# Warmup Iteration   1: 92,062 ms/op
# Warmup Iteration   2: 83,973 ms/op
# Warmup Iteration   3: 81,722 ms/op
# Warmup Iteration   4: 82,088 ms/op
# Warmup Iteration   5: 82,496 ms/op
# Warmup Iteration   6: 82,718 ms/op
# Warmup Iteration   7: 83,147 ms/op
# Warmup Iteration   8: 83,118 ms/op
# Warmup Iteration   9: 84,293 ms/op
# Warmup Iteration  10: 84,188 ms/op
Iteration   1: 84,227 ms/op
Iteration   2: 84,034 ms/op
Iteration   3: 84,190 ms/op
Iteration   4: 83,955 ms/op
Iteration   5: 84,811 ms/op
Iteration   6: 92,428 ms/op
Iteration   7: 82,917 ms/op
Iteration   8: 83,941 ms/op
Iteration   9: 83,784 ms/op
Iteration  10: 85,386 ms/op


Result "benchmarkFind":
  84,967 ±(99.9%) 4,080 ms/op [Average]
  (min, avg, max) = (82,917, 84,967, 92,428), stdev = 2,699
  CI (99.9%): [80,887, 89,048] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 32, patternSize = 128)

# Run progress: 39,25% complete, ETA 09:50:46
# Fork: 1 of 1
# Warmup Iteration   1: 87,467 ms/op
# Warmup Iteration   2: 82,476 ms/op
# Warmup Iteration   3: 78,960 ms/op
# Warmup Iteration   4: 78,969 ms/op
# Warmup Iteration   5: 79,134 ms/op
# Warmup Iteration   6: 79,021 ms/op
# Warmup Iteration   7: 79,044 ms/op
# Warmup Iteration   8: 79,384 ms/op
# Warmup Iteration   9: 79,395 ms/op
# Warmup Iteration  10: 80,048 ms/op
Iteration   1: 80,985 ms/op
Iteration   2: 80,519 ms/op
Iteration   3: 81,345 ms/op
Iteration   4: 80,321 ms/op
Iteration   5: 80,176 ms/op
Iteration   6: 80,925 ms/op
Iteration   7: 80,354 ms/op
Iteration   8: 80,275 ms/op
Iteration   9: 80,357 ms/op
Iteration  10: 80,253 ms/op


Result "benchmarkFind":
  80,551 ±(99.9%) 0,595 ms/op [Average]
  (min, avg, max) = (80,176, 80,551, 81,345), stdev = 0,394
  CI (99.9%): [79,956, 81,146] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 32, patternSize = 256)

# Run progress: 39,29% complete, ETA 09:50:11
# Fork: 1 of 1
# Warmup Iteration   1: 94,408 ms/op
# Warmup Iteration   2: 85,747 ms/op
# Warmup Iteration   3: 83,926 ms/op
# Warmup Iteration   4: 83,790 ms/op
# Warmup Iteration   5: 84,188 ms/op
# Warmup Iteration   6: 83,781 ms/op
# Warmup Iteration   7: 84,028 ms/op
# Warmup Iteration   8: 84,230 ms/op
# Warmup Iteration   9: 84,594 ms/op
# Warmup Iteration  10: 84,923 ms/op
Iteration   1: 86,645 ms/op
Iteration   2: 85,323 ms/op
Iteration   3: 85,306 ms/op
Iteration   4: 85,950 ms/op
Iteration   5: 85,698 ms/op
Iteration   6: 86,006 ms/op
Iteration   7: 86,212 ms/op
Iteration   8: 85,843 ms/op
Iteration   9: 85,708 ms/op
Iteration  10: 86,200 ms/op


Result "benchmarkFind":
  85,889 ±(99.9%) 0,622 ms/op [Average]
  (min, avg, max) = (85,306, 85,889, 86,645), stdev = 0,411
  CI (99.9%): [85,267, 86,511] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 128, patternSize = 2)

# Run progress: 39,34% complete, ETA 09:49:36
# Fork: 1 of 1
# Warmup Iteration   1: 658,574 ms/op
# Warmup Iteration   2: 598,313 ms/op
# Warmup Iteration   3: 585,118 ms/op
# Warmup Iteration   4: 592,725 ms/op
# Warmup Iteration   5: 585,202 ms/op
# Warmup Iteration   6: 592,549 ms/op
# Warmup Iteration   7: 596,627 ms/op
# Warmup Iteration   8: 586,221 ms/op
# Warmup Iteration   9: 585,398 ms/op
# Warmup Iteration  10: 632,312 ms/op
Iteration   1: 588,873 ms/op
Iteration   2: 586,816 ms/op
Iteration   3: 586,447 ms/op
Iteration   4: 596,226 ms/op
Iteration   5: 587,347 ms/op
Iteration   6: 587,271 ms/op
Iteration   7: 587,323 ms/op
Iteration   8: 588,837 ms/op
Iteration   9: 587,982 ms/op
Iteration  10: 589,810 ms/op


Result "benchmarkFind":
  588,693 ±(99.9%) 4,301 ms/op [Average]
  (min, avg, max) = (586,447, 588,693, 596,226), stdev = 2,845
  CI (99.9%): [584,393, 592,994] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 128, patternSize = 4)

# Run progress: 39,38% complete, ETA 09:49:06
# Fork: 1 of 1
# Warmup Iteration   1: 98,230 ms/op
# Warmup Iteration   2: 90,420 ms/op
# Warmup Iteration   3: 90,958 ms/op
# Warmup Iteration   4: 90,781 ms/op
# Warmup Iteration   5: 92,488 ms/op
# Warmup Iteration   6: 91,913 ms/op
# Warmup Iteration   7: 91,438 ms/op
# Warmup Iteration   8: 91,147 ms/op
# Warmup Iteration   9: 91,543 ms/op
# Warmup Iteration  10: 91,300 ms/op
Iteration   1: 91,742 ms/op
Iteration   2: 91,578 ms/op
Iteration   3: 91,843 ms/op
Iteration   4: 92,007 ms/op
Iteration   5: 92,211 ms/op
Iteration   6: 92,070 ms/op
Iteration   7: 91,087 ms/op
Iteration   8: 91,472 ms/op
Iteration   9: 90,275 ms/op
Iteration  10: 89,848 ms/op


Result "benchmarkFind":
  91,413 ±(99.9%) 1,192 ms/op [Average]
  (min, avg, max) = (89,848, 91,413, 92,211), stdev = 0,789
  CI (99.9%): [90,221, 92,606] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 128, patternSize = 8)

# Run progress: 39,43% complete, ETA 09:48:31
# Fork: 1 of 1
# Warmup Iteration   1: 97,768 ms/op
# Warmup Iteration   2: 91,841 ms/op
# Warmup Iteration   3: 89,882 ms/op
# Warmup Iteration   4: 90,189 ms/op
# Warmup Iteration   5: 89,876 ms/op
# Warmup Iteration   6: 90,558 ms/op
# Warmup Iteration   7: 91,331 ms/op
# Warmup Iteration   8: 91,615 ms/op
# Warmup Iteration   9: 91,646 ms/op
# Warmup Iteration  10: 91,284 ms/op
Iteration   1: 91,905 ms/op
Iteration   2: 91,955 ms/op
Iteration   3: 91,588 ms/op
Iteration   4: 91,401 ms/op
Iteration   5: 91,539 ms/op
Iteration   6: 90,893 ms/op
Iteration   7: 92,891 ms/op
Iteration   8: 92,755 ms/op
Iteration   9: 93,230 ms/op
Iteration  10: 92,846 ms/op


Result "benchmarkFind":
  92,100 ±(99.9%) 1,178 ms/op [Average]
  (min, avg, max) = (90,893, 92,100, 93,230), stdev = 0,779
  CI (99.9%): [90,922, 93,279] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 128, patternSize = 16)

# Run progress: 39,48% complete, ETA 09:47:56
# Fork: 1 of 1
# Warmup Iteration   1: 98,462 ms/op
# Warmup Iteration   2: 93,005 ms/op
# Warmup Iteration   3: 89,960 ms/op
# Warmup Iteration   4: 90,393 ms/op
# Warmup Iteration   5: 98,895 ms/op
# Warmup Iteration   6: 91,532 ms/op
# Warmup Iteration   7: 91,408 ms/op
# Warmup Iteration   8: 92,051 ms/op
# Warmup Iteration   9: 92,703 ms/op
# Warmup Iteration  10: 92,502 ms/op
Iteration   1: 92,608 ms/op
Iteration   2: 92,887 ms/op
Iteration   3: 91,036 ms/op
Iteration   4: 92,254 ms/op
Iteration   5: 92,278 ms/op
Iteration   6: 92,205 ms/op
Iteration   7: 92,136 ms/op
Iteration   8: 91,967 ms/op
Iteration   9: 92,289 ms/op
Iteration  10: 92,221 ms/op


Result "benchmarkFind":
  92,188 ±(99.9%) 0,725 ms/op [Average]
  (min, avg, max) = (91,036, 92,188, 92,887), stdev = 0,479
  CI (99.9%): [91,463, 92,913] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 128, patternSize = 32)

# Run progress: 39,52% complete, ETA 09:47:20
# Fork: 1 of 1
# Warmup Iteration   1: 100,989 ms/op
# Warmup Iteration   2: 92,693 ms/op
# Warmup Iteration   3: 93,053 ms/op
# Warmup Iteration   4: 91,490 ms/op
# Warmup Iteration   5: 93,366 ms/op
# Warmup Iteration   6: 92,464 ms/op
# Warmup Iteration   7: 92,728 ms/op
# Warmup Iteration   8: 93,581 ms/op
# Warmup Iteration   9: 94,049 ms/op
# Warmup Iteration  10: 94,139 ms/op
Iteration   1: 94,185 ms/op
Iteration   2: 93,896 ms/op
Iteration   3: 94,836 ms/op
Iteration   4: 94,219 ms/op
Iteration   5: 94,121 ms/op
Iteration   6: 94,538 ms/op
Iteration   7: 92,817 ms/op
Iteration   8: 93,556 ms/op
Iteration   9: 93,005 ms/op
Iteration  10: 92,963 ms/op


Result "benchmarkFind":
  93,813 ±(99.9%) 1,058 ms/op [Average]
  (min, avg, max) = (92,817, 93,813, 94,836), stdev = 0,700
  CI (99.9%): [92,755, 94,872] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 128, patternSize = 64)

# Run progress: 39,57% complete, ETA 09:46:45
# Fork: 1 of 1
# Warmup Iteration   1: 103,585 ms/op
# Warmup Iteration   2: 92,514 ms/op
# Warmup Iteration   3: 91,317 ms/op
# Warmup Iteration   4: 91,049 ms/op
# Warmup Iteration   5: 91,571 ms/op
# Warmup Iteration   6: 90,886 ms/op
# Warmup Iteration   7: 92,040 ms/op
# Warmup Iteration   8: 91,404 ms/op
# Warmup Iteration   9: 93,109 ms/op
# Warmup Iteration  10: 93,743 ms/op
Iteration   1: 93,337 ms/op
Iteration   2: 93,305 ms/op
Iteration   3: 93,518 ms/op
Iteration   4: 93,055 ms/op
Iteration   5: 92,594 ms/op
Iteration   6: 93,155 ms/op
Iteration   7: 92,919 ms/op
Iteration   8: 93,260 ms/op
Iteration   9: 92,649 ms/op
Iteration  10: 92,493 ms/op


Result "benchmarkFind":
  93,029 ±(99.9%) 0,532 ms/op [Average]
  (min, avg, max) = (92,493, 93,029, 93,518), stdev = 0,352
  CI (99.9%): [92,497, 93,560] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 128, patternSize = 128)

# Run progress: 39,61% complete, ETA 09:46:10
# Fork: 1 of 1
# Warmup Iteration   1: 101,746 ms/op
# Warmup Iteration   2: 98,116 ms/op
# Warmup Iteration   3: 91,577 ms/op
# Warmup Iteration   4: 92,054 ms/op
# Warmup Iteration   5: 92,202 ms/op
# Warmup Iteration   6: 92,396 ms/op
# Warmup Iteration   7: 92,144 ms/op
# Warmup Iteration   8: 92,140 ms/op
# Warmup Iteration   9: 92,916 ms/op
# Warmup Iteration  10: 93,910 ms/op
Iteration   1: 93,550 ms/op
Iteration   2: 94,088 ms/op
Iteration   3: 93,306 ms/op
Iteration   4: 92,753 ms/op
Iteration   5: 93,221 ms/op
Iteration   6: 92,426 ms/op
Iteration   7: 93,919 ms/op
Iteration   8: 92,971 ms/op
Iteration   9: 93,228 ms/op
Iteration  10: 93,782 ms/op


Result "benchmarkFind":
  93,325 ±(99.9%) 0,793 ms/op [Average]
  (min, avg, max) = (92,426, 93,325, 94,088), stdev = 0,525
  CI (99.9%): [92,532, 94,118] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 128, patternSize = 256)

# Run progress: 39,66% complete, ETA 09:45:35
# Fork: 1 of 1
# Warmup Iteration   1: 106,598 ms/op
# Warmup Iteration   2: 97,336 ms/op
# Warmup Iteration   3: 94,350 ms/op
# Warmup Iteration   4: 94,613 ms/op
# Warmup Iteration   5: 93,747 ms/op
# Warmup Iteration   6: 93,916 ms/op
# Warmup Iteration   7: 94,082 ms/op
# Warmup Iteration   8: 94,605 ms/op
# Warmup Iteration   9: 95,717 ms/op
# Warmup Iteration  10: 94,709 ms/op
Iteration   1: 95,790 ms/op
Iteration   2: 94,896 ms/op
Iteration   3: 95,028 ms/op
Iteration   4: 95,226 ms/op
Iteration   5: 94,690 ms/op
Iteration   6: 95,051 ms/op
Iteration   7: 94,552 ms/op
Iteration   8: 93,840 ms/op
Iteration   9: 94,057 ms/op
Iteration  10: 94,555 ms/op


Result "benchmarkFind":
  94,769 ±(99.9%) 0,856 ms/op [Average]
  (min, avg, max) = (93,840, 94,769, 95,790), stdev = 0,566
  CI (99.9%): [93,913, 95,624] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 2, patternSize = 2)

# Run progress: 39,71% complete, ETA 09:45:00
# Fork: 1 of 1
# Warmup Iteration   1: 215,814 ms/op
# Warmup Iteration   2: 191,946 ms/op
# Warmup Iteration   3: 189,886 ms/op
# Warmup Iteration   4: 191,032 ms/op
# Warmup Iteration   5: 190,242 ms/op
# Warmup Iteration   6: 192,237 ms/op
# Warmup Iteration   7: 190,777 ms/op
# Warmup Iteration   8: 193,143 ms/op
# Warmup Iteration   9: 192,158 ms/op
# Warmup Iteration  10: 191,737 ms/op
Iteration   1: 190,819 ms/op
Iteration   2: 192,194 ms/op
Iteration   3: 190,361 ms/op
Iteration   4: 191,573 ms/op
Iteration   5: 189,628 ms/op
Iteration   6: 212,289 ms/op
Iteration   7: 189,766 ms/op
Iteration   8: 192,303 ms/op
Iteration   9: 193,573 ms/op
Iteration  10: 190,776 ms/op


Result "benchmarkFind":
  193,328 ±(99.9%) 10,241 ms/op [Average]
  (min, avg, max) = (189,628, 193,328, 212,289), stdev = 6,774
  CI (99.9%): [183,087, 203,569] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 2, patternSize = 4)

# Run progress: 39,75% complete, ETA 09:44:29
# Fork: 1 of 1
# Warmup Iteration   1: 211,191 ms/op
# Warmup Iteration   2: 190,661 ms/op
# Warmup Iteration   3: 188,953 ms/op
# Warmup Iteration   4: 192,879 ms/op
# Warmup Iteration   5: 191,511 ms/op
# Warmup Iteration   6: 191,413 ms/op
# Warmup Iteration   7: 193,367 ms/op
# Warmup Iteration   8: 192,650 ms/op
# Warmup Iteration   9: 191,295 ms/op
# Warmup Iteration  10: 191,727 ms/op
Iteration   1: 190,660 ms/op
Iteration   2: 191,730 ms/op
Iteration   3: 190,803 ms/op
Iteration   4: 190,676 ms/op
Iteration   5: 190,962 ms/op
Iteration   6: 190,825 ms/op
Iteration   7: 196,946 ms/op
Iteration   8: 197,097 ms/op
Iteration   9: 198,073 ms/op
Iteration  10: 199,201 ms/op


Result "benchmarkFind":
  193,697 ±(99.9%) 5,471 ms/op [Average]
  (min, avg, max) = (190,660, 193,697, 199,201), stdev = 3,619
  CI (99.9%): [188,226, 199,169] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 2, patternSize = 8)

# Run progress: 39,80% complete, ETA 09:43:58
# Fork: 1 of 1
# Warmup Iteration   1: 209,482 ms/op
# Warmup Iteration   2: 186,882 ms/op
# Warmup Iteration   3: 188,793 ms/op
# Warmup Iteration   4: 187,931 ms/op
# Warmup Iteration   5: 189,228 ms/op
# Warmup Iteration   6: 190,945 ms/op
# Warmup Iteration   7: 190,983 ms/op
# Warmup Iteration   8: 189,143 ms/op
# Warmup Iteration   9: 190,576 ms/op
# Warmup Iteration  10: 188,712 ms/op
Iteration   1: 189,566 ms/op
Iteration   2: 189,640 ms/op
Iteration   3: 189,321 ms/op
Iteration   4: 190,788 ms/op
Iteration   5: 187,995 ms/op
Iteration   6: 188,998 ms/op
Iteration   7: 191,805 ms/op
Iteration   8: 190,675 ms/op
Iteration   9: 192,141 ms/op
Iteration  10: 192,443 ms/op


Result "benchmarkFind":
  190,337 ±(99.9%) 2,228 ms/op [Average]
  (min, avg, max) = (187,995, 190,337, 192,443), stdev = 1,474
  CI (99.9%): [188,109, 192,566] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 2, patternSize = 16)

# Run progress: 39,84% complete, ETA 09:43:27
# Fork: 1 of 1
# Warmup Iteration   1: 230,818 ms/op
# Warmup Iteration   2: 213,670 ms/op
# Warmup Iteration   3: 211,164 ms/op
# Warmup Iteration   4: 211,193 ms/op
# Warmup Iteration   5: 213,305 ms/op
# Warmup Iteration   6: 212,047 ms/op
# Warmup Iteration   7: 232,036 ms/op
# Warmup Iteration   8: 211,050 ms/op
# Warmup Iteration   9: 212,556 ms/op
# Warmup Iteration  10: 209,298 ms/op
Iteration   1: 209,321 ms/op
Iteration   2: 211,035 ms/op
Iteration   3: 215,642 ms/op
Iteration   4: 212,278 ms/op
Iteration   5: 211,158 ms/op
Iteration   6: 210,558 ms/op
Iteration   7: 186,802 ms/op
Iteration   8: 187,687 ms/op
Iteration   9: 187,363 ms/op
Iteration  10: 186,143 ms/op


Result "benchmarkFind":
  201,799 ±(99.9%) 19,422 ms/op [Average]
  (min, avg, max) = (186,143, 201,799, 215,642), stdev = 12,846
  CI (99.9%): [182,377, 221,220] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 2, patternSize = 32)

# Run progress: 39,89% complete, ETA 09:42:54
# Fork: 1 of 1
# Warmup Iteration   1: 225,024 ms/op
# Warmup Iteration   2: 195,214 ms/op
# Warmup Iteration   3: 187,126 ms/op
# Warmup Iteration   4: 191,145 ms/op
# Warmup Iteration   5: 193,618 ms/op
# Warmup Iteration   6: 195,951 ms/op
# Warmup Iteration   7: 194,370 ms/op
# Warmup Iteration   8: 194,303 ms/op
# Warmup Iteration   9: 193,952 ms/op
# Warmup Iteration  10: 194,539 ms/op
Iteration   1: 193,982 ms/op
Iteration   2: 194,323 ms/op
Iteration   3: 192,573 ms/op
Iteration   4: 194,340 ms/op
Iteration   5: 191,692 ms/op
Iteration   6: 193,984 ms/op
Iteration   7: 196,824 ms/op
Iteration   8: 197,060 ms/op
Iteration   9: 195,660 ms/op
Iteration  10: 197,979 ms/op


Result "benchmarkFind":
  194,842 ±(99.9%) 3,042 ms/op [Average]
  (min, avg, max) = (191,692, 194,842, 197,979), stdev = 2,012
  CI (99.9%): [191,800, 197,883] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 2, patternSize = 64)

# Run progress: 39,94% complete, ETA 09:42:23
# Fork: 1 of 1
# Warmup Iteration   1: 209,569 ms/op
# Warmup Iteration   2: 187,807 ms/op
# Warmup Iteration   3: 187,855 ms/op
# Warmup Iteration   4: 190,142 ms/op
# Warmup Iteration   5: 190,347 ms/op
# Warmup Iteration   6: 189,530 ms/op
# Warmup Iteration   7: 188,945 ms/op
# Warmup Iteration   8: 189,705 ms/op
# Warmup Iteration   9: 190,113 ms/op
# Warmup Iteration  10: 190,906 ms/op
Iteration   1: 190,245 ms/op
Iteration   2: 189,030 ms/op
Iteration   3: 188,652 ms/op
Iteration   4: 189,356 ms/op
Iteration   5: 189,824 ms/op
Iteration   6: 190,103 ms/op
Iteration   7: 190,117 ms/op
Iteration   8: 205,062 ms/op
Iteration   9: 189,853 ms/op
Iteration  10: 187,174 ms/op


Result "benchmarkFind":
  190,942 ±(99.9%) 7,631 ms/op [Average]
  (min, avg, max) = (187,174, 190,942, 205,062), stdev = 5,047
  CI (99.9%): [183,311, 198,572] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 2, patternSize = 128)

# Run progress: 39,98% complete, ETA 09:41:51
# Fork: 1 of 1
# Warmup Iteration   1: 214,599 ms/op
# Warmup Iteration   2: 188,187 ms/op
# Warmup Iteration   3: 187,863 ms/op
# Warmup Iteration   4: 189,118 ms/op
# Warmup Iteration   5: 190,849 ms/op
# Warmup Iteration   6: 190,571 ms/op
# Warmup Iteration   7: 188,171 ms/op
# Warmup Iteration   8: 189,913 ms/op
# Warmup Iteration   9: 190,327 ms/op
# Warmup Iteration  10: 188,810 ms/op
Iteration   1: 188,475 ms/op
Iteration   2: 189,641 ms/op
Iteration   3: 190,473 ms/op
Iteration   4: 190,875 ms/op
Iteration   5: 189,159 ms/op
Iteration   6: 188,054 ms/op
Iteration   7: 194,541 ms/op
Iteration   8: 194,377 ms/op
Iteration   9: 195,762 ms/op
Iteration  10: 194,183 ms/op


Result "benchmarkFind":
  191,554 ±(99.9%) 4,343 ms/op [Average]
  (min, avg, max) = (188,054, 191,554, 195,762), stdev = 2,873
  CI (99.9%): [187,211, 195,897] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 2, patternSize = 256)

# Run progress: 40,03% complete, ETA 09:41:20
# Fork: 1 of 1
# Warmup Iteration   1: 217,780 ms/op
# Warmup Iteration   2: 190,659 ms/op
# Warmup Iteration   3: 193,606 ms/op
# Warmup Iteration   4: 192,209 ms/op
# Warmup Iteration   5: 194,635 ms/op
# Warmup Iteration   6: 193,569 ms/op
# Warmup Iteration   7: 194,754 ms/op
# Warmup Iteration   8: 194,773 ms/op
# Warmup Iteration   9: 193,955 ms/op
# Warmup Iteration  10: 191,262 ms/op
Iteration   1: 192,753 ms/op
Iteration   2: 192,506 ms/op
Iteration   3: 192,608 ms/op
Iteration   4: 192,834 ms/op
Iteration   5: 191,925 ms/op
Iteration   6: 193,448 ms/op
Iteration   7: 192,843 ms/op
Iteration   8: 193,853 ms/op
Iteration   9: 192,984 ms/op
Iteration  10: 193,169 ms/op


Result "benchmarkFind":
  192,892 ±(99.9%) 0,798 ms/op [Average]
  (min, avg, max) = (191,925, 192,892, 193,853), stdev = 0,528
  CI (99.9%): [192,094, 193,690] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 8, patternSize = 2)

# Run progress: 40,07% complete, ETA 09:40:50
# Fork: 1 of 1
# Warmup Iteration   1: 295,733 ms/op
# Warmup Iteration   2: 270,579 ms/op
# Warmup Iteration   3: 270,740 ms/op
# Warmup Iteration   4: 268,139 ms/op
# Warmup Iteration   5: 267,085 ms/op
# Warmup Iteration   6: 268,998 ms/op
# Warmup Iteration   7: 274,729 ms/op
# Warmup Iteration   8: 298,181 ms/op
# Warmup Iteration   9: 271,101 ms/op
# Warmup Iteration  10: 267,118 ms/op
Iteration   1: 268,893 ms/op
Iteration   2: 272,425 ms/op
Iteration   3: 271,318 ms/op
Iteration   4: 273,665 ms/op
Iteration   5: 275,164 ms/op
Iteration   6: 284,428 ms/op
Iteration   7: 283,269 ms/op
Iteration   8: 277,381 ms/op
Iteration   9: 279,732 ms/op
Iteration  10: 275,634 ms/op


Result "benchmarkFind":
  276,191 ±(99.9%) 7,657 ms/op [Average]
  (min, avg, max) = (268,893, 276,191, 284,428), stdev = 5,064
  CI (99.9%): [268,534, 283,848] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 8, patternSize = 4)

# Run progress: 40,12% complete, ETA 09:40:17
# Fork: 1 of 1
# Warmup Iteration   1: 295,134 ms/op
# Warmup Iteration   2: 274,562 ms/op
# Warmup Iteration   3: 273,937 ms/op
# Warmup Iteration   4: 274,870 ms/op
# Warmup Iteration   5: 274,731 ms/op
# Warmup Iteration   6: 279,427 ms/op
# Warmup Iteration   7: 277,730 ms/op
# Warmup Iteration   8: 277,952 ms/op
# Warmup Iteration   9: 279,356 ms/op
# Warmup Iteration  10: 278,779 ms/op
Iteration   1: 276,995 ms/op
Iteration   2: 276,064 ms/op
Iteration   3: 278,803 ms/op
Iteration   4: 280,419 ms/op
Iteration   5: 278,608 ms/op
Iteration   6: 277,616 ms/op
Iteration   7: 282,531 ms/op
Iteration   8: 283,296 ms/op
Iteration   9: 283,866 ms/op
Iteration  10: 283,857 ms/op


Result "benchmarkFind":
  280,206 ±(99.9%) 4,519 ms/op [Average]
  (min, avg, max) = (276,064, 280,206, 283,866), stdev = 2,989
  CI (99.9%): [275,686, 284,725] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 8, patternSize = 8)

# Run progress: 40,17% complete, ETA 09:39:46
# Fork: 1 of 1
# Warmup Iteration   1: 301,347 ms/op
# Warmup Iteration   2: 280,337 ms/op
# Warmup Iteration   3: 275,027 ms/op
# Warmup Iteration   4: 276,305 ms/op
# Warmup Iteration   5: 276,306 ms/op
# Warmup Iteration   6: 278,565 ms/op
# Warmup Iteration   7: 279,655 ms/op
# Warmup Iteration   8: 276,953 ms/op
# Warmup Iteration   9: 278,681 ms/op
# Warmup Iteration  10: 278,274 ms/op
Iteration   1: 277,589 ms/op
Iteration   2: 278,107 ms/op
Iteration   3: 278,587 ms/op
Iteration   4: 276,917 ms/op
Iteration   5: 276,449 ms/op
Iteration   6: 278,821 ms/op
Iteration   7: 277,424 ms/op
Iteration   8: 277,900 ms/op
Iteration   9: 278,667 ms/op
Iteration  10: 308,099 ms/op


Result "benchmarkFind":
  280,856 ±(99.9%) 14,518 ms/op [Average]
  (min, avg, max) = (276,449, 280,856, 308,099), stdev = 9,603
  CI (99.9%): [266,338, 295,374] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 8, patternSize = 16)

# Run progress: 40,21% complete, ETA 09:39:14
# Fork: 1 of 1
# Warmup Iteration   1: 305,501 ms/op
# Warmup Iteration   2: 283,096 ms/op
# Warmup Iteration   3: 277,417 ms/op
# Warmup Iteration   4: 281,369 ms/op
# Warmup Iteration   5: 282,158 ms/op
# Warmup Iteration   6: 279,924 ms/op
# Warmup Iteration   7: 280,326 ms/op
# Warmup Iteration   8: 282,572 ms/op
# Warmup Iteration   9: 280,478 ms/op
# Warmup Iteration  10: 279,835 ms/op
Iteration   1: 280,889 ms/op
Iteration   2: 279,832 ms/op
Iteration   3: 281,581 ms/op
Iteration   4: 281,102 ms/op
Iteration   5: 281,544 ms/op
Iteration   6: 282,356 ms/op
Iteration   7: 281,417 ms/op
Iteration   8: 280,274 ms/op
Iteration   9: 280,404 ms/op
Iteration  10: 280,759 ms/op


Result "benchmarkFind":
  281,016 ±(99.9%) 1,124 ms/op [Average]
  (min, avg, max) = (279,832, 281,016, 282,356), stdev = 0,743
  CI (99.9%): [279,892, 282,140] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 8, patternSize = 32)

# Run progress: 40,26% complete, ETA 09:38:43
# Fork: 1 of 1
# Warmup Iteration   1: 299,329 ms/op
# Warmup Iteration   2: 280,303 ms/op
# Warmup Iteration   3: 277,044 ms/op
# Warmup Iteration   4: 281,411 ms/op
# Warmup Iteration   5: 279,220 ms/op
# Warmup Iteration   6: 277,278 ms/op
# Warmup Iteration   7: 280,505 ms/op
# Warmup Iteration   8: 281,326 ms/op
# Warmup Iteration   9: 280,056 ms/op
# Warmup Iteration  10: 281,108 ms/op
Iteration   1: 280,941 ms/op
Iteration   2: 280,199 ms/op
Iteration   3: 278,597 ms/op
Iteration   4: 279,982 ms/op
Iteration   5: 279,890 ms/op
Iteration   6: 279,140 ms/op
Iteration   7: 282,585 ms/op
Iteration   8: 277,923 ms/op
Iteration   9: 279,102 ms/op
Iteration  10: 278,322 ms/op


Result "benchmarkFind":
  279,668 ±(99.9%) 2,088 ms/op [Average]
  (min, avg, max) = (277,923, 279,668, 282,585), stdev = 1,381
  CI (99.9%): [277,580, 281,756] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 8, patternSize = 64)

# Run progress: 40,30% complete, ETA 09:38:12
# Fork: 1 of 1
# Warmup Iteration   1: 303,754 ms/op
# Warmup Iteration   2: 281,369 ms/op
# Warmup Iteration   3: 276,874 ms/op
# Warmup Iteration   4: 281,903 ms/op
# Warmup Iteration   5: 280,598 ms/op
# Warmup Iteration   6: 282,278 ms/op
# Warmup Iteration   7: 281,086 ms/op
# Warmup Iteration   8: 282,952 ms/op
# Warmup Iteration   9: 280,317 ms/op
# Warmup Iteration  10: 308,330 ms/op
Iteration   1: 280,159 ms/op
Iteration   2: 281,395 ms/op
Iteration   3: 279,143 ms/op
Iteration   4: 283,128 ms/op
Iteration   5: 280,318 ms/op
Iteration   6: 284,120 ms/op
Iteration   7: 275,317 ms/op
Iteration   8: 278,590 ms/op
Iteration   9: 279,358 ms/op
Iteration  10: 278,452 ms/op


Result "benchmarkFind":
  279,998 ±(99.9%) 3,781 ms/op [Average]
  (min, avg, max) = (275,317, 279,998, 284,120), stdev = 2,501
  CI (99.9%): [276,217, 283,779] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 8, patternSize = 128)

# Run progress: 40,35% complete, ETA 09:37:40
# Fork: 1 of 1
# Warmup Iteration   1: 291,337 ms/op
# Warmup Iteration   2: 264,891 ms/op
# Warmup Iteration   3: 265,886 ms/op
# Warmup Iteration   4: 266,552 ms/op
# Warmup Iteration   5: 265,182 ms/op
# Warmup Iteration   6: 268,125 ms/op
# Warmup Iteration   7: 268,814 ms/op
# Warmup Iteration   8: 270,918 ms/op
# Warmup Iteration   9: 267,306 ms/op
# Warmup Iteration  10: 267,605 ms/op
Iteration   1: 268,517 ms/op
Iteration   2: 269,340 ms/op
Iteration   3: 268,087 ms/op
Iteration   4: 268,021 ms/op
Iteration   5: 268,245 ms/op
Iteration   6: 272,369 ms/op
Iteration   7: 270,163 ms/op
Iteration   8: 270,846 ms/op
Iteration   9: 268,574 ms/op
Iteration  10: 270,219 ms/op


Result "benchmarkFind":
  269,438 ±(99.9%) 2,172 ms/op [Average]
  (min, avg, max) = (268,021, 269,438, 272,369), stdev = 1,436
  CI (99.9%): [267,266, 271,610] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 8, patternSize = 256)

# Run progress: 40,40% complete, ETA 09:37:08
# Fork: 1 of 1
# Warmup Iteration   1: 302,931 ms/op
# Warmup Iteration   2: 276,010 ms/op
# Warmup Iteration   3: 275,703 ms/op
# Warmup Iteration   4: 275,264 ms/op
# Warmup Iteration   5: 275,685 ms/op
# Warmup Iteration   6: 276,321 ms/op
# Warmup Iteration   7: 275,957 ms/op
# Warmup Iteration   8: 276,451 ms/op
# Warmup Iteration   9: 275,790 ms/op
# Warmup Iteration  10: 276,175 ms/op
Iteration   1: 274,358 ms/op
Iteration   2: 277,672 ms/op
Iteration   3: 275,521 ms/op
Iteration   4: 276,634 ms/op
Iteration   5: 276,488 ms/op
Iteration   6: 278,600 ms/op
Iteration   7: 274,818 ms/op
Iteration   8: 275,370 ms/op
Iteration   9: 274,707 ms/op
Iteration  10: 276,330 ms/op


Result "benchmarkFind":
  276,050 ±(99.9%) 2,057 ms/op [Average]
  (min, avg, max) = (274,358, 276,050, 278,600), stdev = 1,361
  CI (99.9%): [273,992, 278,107] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 32, patternSize = 2)

# Run progress: 40,44% complete, ETA 09:36:36
# Fork: 1 of 1
# Warmup Iteration   1: 349,245 ms/op
# Warmup Iteration   2: 345,555 ms/op
# Warmup Iteration   3: 303,797 ms/op
# Warmup Iteration   4: 305,826 ms/op
# Warmup Iteration   5: 301,587 ms/op
# Warmup Iteration   6: 303,667 ms/op
# Warmup Iteration   7: 304,103 ms/op
# Warmup Iteration   8: 312,176 ms/op
# Warmup Iteration   9: 299,858 ms/op
# Warmup Iteration  10: 303,120 ms/op
Iteration   1: 301,198 ms/op
Iteration   2: 298,513 ms/op
Iteration   3: 298,017 ms/op
Iteration   4: 301,369 ms/op
Iteration   5: 299,723 ms/op
Iteration   6: 301,028 ms/op
Iteration   7: 300,262 ms/op
Iteration   8: 299,721 ms/op
Iteration   9: 298,989 ms/op
Iteration  10: 298,396 ms/op


Result "benchmarkFind":
  299,722 ±(99.9%) 1,855 ms/op [Average]
  (min, avg, max) = (298,017, 299,722, 301,369), stdev = 1,227
  CI (99.9%): [297,866, 301,577] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 32, patternSize = 4)

# Run progress: 40,49% complete, ETA 09:36:07
# Fork: 1 of 1
# Warmup Iteration   1: 323,240 ms/op
# Warmup Iteration   2: 293,697 ms/op
# Warmup Iteration   3: 295,929 ms/op
# Warmup Iteration   4: 298,136 ms/op
# Warmup Iteration   5: 298,102 ms/op
# Warmup Iteration   6: 298,094 ms/op
# Warmup Iteration   7: 296,333 ms/op
# Warmup Iteration   8: 300,292 ms/op
# Warmup Iteration   9: 298,560 ms/op
# Warmup Iteration  10: 297,014 ms/op
Iteration   1: 296,452 ms/op
Iteration   2: 295,785 ms/op
Iteration   3: 295,465 ms/op
Iteration   4: 295,034 ms/op
Iteration   5: 296,219 ms/op
Iteration   6: 296,953 ms/op
Iteration   7: 297,509 ms/op
Iteration   8: 299,344 ms/op
Iteration   9: 296,628 ms/op
Iteration  10: 298,018 ms/op


Result "benchmarkFind":
  296,741 ±(99.9%) 1,943 ms/op [Average]
  (min, avg, max) = (295,034, 296,741, 299,344), stdev = 1,285
  CI (99.9%): [294,798, 298,684] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 32, patternSize = 8)

# Run progress: 40,53% complete, ETA 09:35:37
# Fork: 1 of 1
# Warmup Iteration   1: 312,841 ms/op
# Warmup Iteration   2: 288,082 ms/op
# Warmup Iteration   3: 293,831 ms/op
# Warmup Iteration   4: 289,656 ms/op
# Warmup Iteration   5: 289,356 ms/op
# Warmup Iteration   6: 293,489 ms/op
# Warmup Iteration   7: 296,419 ms/op
# Warmup Iteration   8: 295,000 ms/op
# Warmup Iteration   9: 296,292 ms/op
# Warmup Iteration  10: 293,285 ms/op
Iteration   1: 314,890 ms/op
Iteration   2: 288,393 ms/op
Iteration   3: 287,683 ms/op
Iteration   4: 291,256 ms/op
Iteration   5: 290,779 ms/op
Iteration   6: 288,598 ms/op
Iteration   7: 292,984 ms/op
Iteration   8: 289,831 ms/op
Iteration   9: 290,865 ms/op
Iteration  10: 295,825 ms/op


Result "benchmarkFind":
  293,110 ±(99.9%) 12,121 ms/op [Average]
  (min, avg, max) = (287,683, 293,110, 314,890), stdev = 8,017
  CI (99.9%): [280,990, 305,231] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 32, patternSize = 16)

# Run progress: 40,58% complete, ETA 09:35:07
# Fork: 1 of 1
# Warmup Iteration   1: 325,044 ms/op
# Warmup Iteration   2: 301,883 ms/op
# Warmup Iteration   3: 305,253 ms/op
# Warmup Iteration   4: 302,647 ms/op
# Warmup Iteration   5: 304,706 ms/op
# Warmup Iteration   6: 303,106 ms/op
# Warmup Iteration   7: 307,188 ms/op
# Warmup Iteration   8: 303,688 ms/op
# Warmup Iteration   9: 305,371 ms/op
# Warmup Iteration  10: 305,683 ms/op
Iteration   1: 306,784 ms/op
Iteration   2: 305,087 ms/op
Iteration   3: 305,918 ms/op
Iteration   4: 307,803 ms/op
Iteration   5: 301,359 ms/op
Iteration   6: 303,910 ms/op
Iteration   7: 299,040 ms/op
Iteration   8: 300,419 ms/op
Iteration   9: 303,093 ms/op
Iteration  10: 300,046 ms/op


Result "benchmarkFind":
  303,346 ±(99.9%) 4,609 ms/op [Average]
  (min, avg, max) = (299,040, 303,346, 307,803), stdev = 3,049
  CI (99.9%): [298,737, 307,955] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 32, patternSize = 32)

# Run progress: 40,63% complete, ETA 09:34:39
# Fork: 1 of 1
# Warmup Iteration   1: 318,560 ms/op
# Warmup Iteration   2: 292,978 ms/op
# Warmup Iteration   3: 293,752 ms/op
# Warmup Iteration   4: 296,754 ms/op
# Warmup Iteration   5: 292,057 ms/op
# Warmup Iteration   6: 294,321 ms/op
# Warmup Iteration   7: 296,466 ms/op
# Warmup Iteration   8: 291,421 ms/op
# Warmup Iteration   9: 293,890 ms/op
# Warmup Iteration  10: 294,919 ms/op
Iteration   1: 291,193 ms/op
Iteration   2: 293,531 ms/op
Iteration   3: 292,999 ms/op
Iteration   4: 293,465 ms/op
Iteration   5: 293,340 ms/op
Iteration   6: 294,977 ms/op
Iteration   7: 291,054 ms/op
Iteration   8: 299,252 ms/op
Iteration   9: 317,070 ms/op
Iteration  10: 292,547 ms/op


Result "benchmarkFind":
  295,943 ±(99.9%) 11,750 ms/op [Average]
  (min, avg, max) = (291,054, 295,943, 317,070), stdev = 7,772
  CI (99.9%): [284,192, 307,693] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 32, patternSize = 64)

# Run progress: 40,67% complete, ETA 09:34:10
# Fork: 1 of 1
# Warmup Iteration   1: 317,309 ms/op
# Warmup Iteration   2: 292,021 ms/op
# Warmup Iteration   3: 291,146 ms/op
# Warmup Iteration   4: 291,231 ms/op
# Warmup Iteration   5: 291,500 ms/op
# Warmup Iteration   6: 294,341 ms/op
# Warmup Iteration   7: 294,168 ms/op
# Warmup Iteration   8: 297,147 ms/op
# Warmup Iteration   9: 294,307 ms/op
# Warmup Iteration  10: 291,834 ms/op
Iteration   1: 295,348 ms/op
Iteration   2: 296,488 ms/op
Iteration   3: 294,849 ms/op
Iteration   4: 293,430 ms/op
Iteration   5: 292,031 ms/op
Iteration   6: 296,334 ms/op
Iteration   7: 296,743 ms/op
Iteration   8: 296,979 ms/op
Iteration   9: 294,482 ms/op
Iteration  10: 295,547 ms/op


Result "benchmarkFind":
  295,223 ±(99.9%) 2,387 ms/op [Average]
  (min, avg, max) = (292,031, 295,223, 296,979), stdev = 1,579
  CI (99.9%): [292,836, 297,610] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 32, patternSize = 128)

# Run progress: 40,72% complete, ETA 09:33:40
# Fork: 1 of 1
# Warmup Iteration   1: 322,386 ms/op
# Warmup Iteration   2: 297,699 ms/op
# Warmup Iteration   3: 300,815 ms/op
# Warmup Iteration   4: 299,035 ms/op
# Warmup Iteration   5: 299,606 ms/op
# Warmup Iteration   6: 304,629 ms/op
# Warmup Iteration   7: 301,541 ms/op
# Warmup Iteration   8: 297,430 ms/op
# Warmup Iteration   9: 299,673 ms/op
# Warmup Iteration  10: 300,927 ms/op
Iteration   1: 306,198 ms/op
Iteration   2: 302,357 ms/op
Iteration   3: 304,604 ms/op
Iteration   4: 300,131 ms/op
Iteration   5: 301,205 ms/op
Iteration   6: 301,455 ms/op
Iteration   7: 304,545 ms/op
Iteration   8: 322,370 ms/op
Iteration   9: 323,098 ms/op
Iteration  10: 321,478 ms/op


Result "benchmarkFind":
  308,744 ±(99.9%) 14,431 ms/op [Average]
  (min, avg, max) = (300,131, 308,744, 323,098), stdev = 9,545
  CI (99.9%): [294,313, 323,175] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 32, patternSize = 256)

# Run progress: 40,76% complete, ETA 09:33:12
# Fork: 1 of 1
# Warmup Iteration   1: 303,061 ms/op
# Warmup Iteration   2: 285,848 ms/op
# Warmup Iteration   3: 282,360 ms/op
# Warmup Iteration   4: 282,654 ms/op
# Warmup Iteration   5: 281,484 ms/op
# Warmup Iteration   6: 300,711 ms/op
# Warmup Iteration   7: 278,558 ms/op
# Warmup Iteration   8: 285,045 ms/op
# Warmup Iteration   9: 277,107 ms/op
# Warmup Iteration  10: 276,983 ms/op
Iteration   1: 278,046 ms/op
Iteration   2: 276,968 ms/op
Iteration   3: 282,096 ms/op
Iteration   4: 277,683 ms/op
Iteration   5: 278,239 ms/op
Iteration   6: 278,327 ms/op
Iteration   7: 277,861 ms/op
Iteration   8: 277,682 ms/op
Iteration   9: 281,913 ms/op
Iteration  10: 280,850 ms/op


Result "benchmarkFind":
  278,967 ±(99.9%) 2,865 ms/op [Average]
  (min, avg, max) = (276,968, 278,967, 282,096), stdev = 1,895
  CI (99.9%): [276,102, 281,832] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 128, patternSize = 2)

# Run progress: 40,81% complete, ETA 09:32:41
# Fork: 1 of 1
# Warmup Iteration   1: 875,835 ms/op
# Warmup Iteration   2: 767,405 ms/op
# Warmup Iteration   3: 758,944 ms/op
# Warmup Iteration   4: 759,799 ms/op
# Warmup Iteration   5: 763,903 ms/op
# Warmup Iteration   6: 760,426 ms/op
# Warmup Iteration   7: 773,142 ms/op
# Warmup Iteration   8: 761,999 ms/op
# Warmup Iteration   9: 768,435 ms/op
# Warmup Iteration  10: 764,609 ms/op
Iteration   1: 758,945 ms/op
Iteration   2: 758,817 ms/op
Iteration   3: 762,047 ms/op
Iteration   4: 759,296 ms/op
Iteration   5: 757,882 ms/op
Iteration   6: 764,602 ms/op
Iteration   7: 772,609 ms/op
Iteration   8: 764,494 ms/op
Iteration   9: 766,315 ms/op
Iteration  10: 759,669 ms/op


Result "benchmarkFind":
  762,468 ±(99.9%) 6,968 ms/op [Average]
  (min, avg, max) = (757,882, 762,468, 772,609), stdev = 4,609
  CI (99.9%): [755,500, 769,435] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 128, patternSize = 4)

# Run progress: 40,85% complete, ETA 09:32:21
# Fork: 1 of 1
# Warmup Iteration   1: 342,752 ms/op
# Warmup Iteration   2: 302,464 ms/op
# Warmup Iteration   3: 304,211 ms/op
# Warmup Iteration   4: 307,614 ms/op
# Warmup Iteration   5: 305,548 ms/op
# Warmup Iteration   6: 305,599 ms/op
# Warmup Iteration   7: 304,760 ms/op
# Warmup Iteration   8: 305,349 ms/op
# Warmup Iteration   9: 304,648 ms/op
# Warmup Iteration  10: 338,853 ms/op
Iteration   1: 306,228 ms/op
Iteration   2: 303,566 ms/op
Iteration   3: 302,653 ms/op
Iteration   4: 305,051 ms/op
Iteration   5: 302,271 ms/op
Iteration   6: 307,031 ms/op
Iteration   7: 304,919 ms/op
Iteration   8: 304,494 ms/op
Iteration   9: 309,949 ms/op
Iteration  10: 304,279 ms/op


Result "benchmarkFind":
  305,044 ±(99.9%) 3,414 ms/op [Average]
  (min, avg, max) = (302,271, 305,044, 309,949), stdev = 2,258
  CI (99.9%): [301,630, 308,459] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 128, patternSize = 8)

# Run progress: 40,90% complete, ETA 09:31:52
# Fork: 1 of 1
# Warmup Iteration   1: 340,335 ms/op
# Warmup Iteration   2: 306,266 ms/op
# Warmup Iteration   3: 307,639 ms/op
# Warmup Iteration   4: 308,718 ms/op
# Warmup Iteration   5: 309,808 ms/op
# Warmup Iteration   6: 309,899 ms/op
# Warmup Iteration   7: 310,736 ms/op
# Warmup Iteration   8: 308,395 ms/op
# Warmup Iteration   9: 309,004 ms/op
# Warmup Iteration  10: 308,932 ms/op
Iteration   1: 309,861 ms/op
Iteration   2: 308,047 ms/op
Iteration   3: 310,302 ms/op
Iteration   4: 310,327 ms/op
Iteration   5: 311,191 ms/op
Iteration   6: 310,080 ms/op
Iteration   7: 312,393 ms/op
Iteration   8: 311,980 ms/op
Iteration   9: 310,971 ms/op
Iteration  10: 311,261 ms/op


Result "benchmarkFind":
  310,641 ±(99.9%) 1,853 ms/op [Average]
  (min, avg, max) = (308,047, 310,641, 312,393), stdev = 1,226
  CI (99.9%): [308,788, 312,494] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 128, patternSize = 16)

# Run progress: 40,95% complete, ETA 09:31:24
# Fork: 1 of 1
# Warmup Iteration   1: 347,104 ms/op
# Warmup Iteration   2: 316,921 ms/op
# Warmup Iteration   3: 315,432 ms/op
# Warmup Iteration   4: 315,985 ms/op
# Warmup Iteration   5: 316,922 ms/op
# Warmup Iteration   6: 320,346 ms/op
# Warmup Iteration   7: 320,143 ms/op
# Warmup Iteration   8: 323,074 ms/op
# Warmup Iteration   9: 320,949 ms/op
# Warmup Iteration  10: 320,977 ms/op
Iteration   1: 320,217 ms/op
Iteration   2: 320,440 ms/op
Iteration   3: 321,484 ms/op
Iteration   4: 321,887 ms/op
Iteration   5: 320,938 ms/op
Iteration   6: 318,869 ms/op
Iteration   7: 354,620 ms/op
Iteration   8: 321,447 ms/op
Iteration   9: 318,997 ms/op
Iteration  10: 322,900 ms/op


Result "benchmarkFind":
  324,180 ±(99.9%) 16,279 ms/op [Average]
  (min, avg, max) = (318,869, 324,180, 354,620), stdev = 10,768
  CI (99.9%): [307,901, 340,459] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 128, patternSize = 32)

# Run progress: 40,99% complete, ETA 09:30:57
# Fork: 1 of 1
# Warmup Iteration   1: 359,566 ms/op
# Warmup Iteration   2: 305,979 ms/op
# Warmup Iteration   3: 311,705 ms/op
# Warmup Iteration   4: 308,798 ms/op
# Warmup Iteration   5: 308,694 ms/op
# Warmup Iteration   6: 310,909 ms/op
# Warmup Iteration   7: 312,391 ms/op
# Warmup Iteration   8: 311,440 ms/op
# Warmup Iteration   9: 310,674 ms/op
# Warmup Iteration  10: 340,086 ms/op
Iteration   1: 320,926 ms/op
Iteration   2: 314,686 ms/op
Iteration   3: 310,121 ms/op
Iteration   4: 311,138 ms/op
Iteration   5: 322,392 ms/op
Iteration   6: 314,470 ms/op
Iteration   7: 318,652 ms/op
Iteration   8: 320,213 ms/op
Iteration   9: 319,809 ms/op
Iteration  10: 317,468 ms/op


Result "benchmarkFind":
  316,987 ±(99.9%) 6,357 ms/op [Average]
  (min, avg, max) = (310,121, 316,987, 322,392), stdev = 4,204
  CI (99.9%): [310,631, 323,344] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 128, patternSize = 64)

# Run progress: 41,04% complete, ETA 09:30:29
# Fork: 1 of 1
# Warmup Iteration   1: 347,619 ms/op
# Warmup Iteration   2: 325,774 ms/op
# Warmup Iteration   3: 319,654 ms/op
# Warmup Iteration   4: 316,804 ms/op
# Warmup Iteration   5: 323,635 ms/op
# Warmup Iteration   6: 322,191 ms/op
# Warmup Iteration   7: 323,981 ms/op
# Warmup Iteration   8: 319,591 ms/op
# Warmup Iteration   9: 321,055 ms/op
# Warmup Iteration  10: 319,395 ms/op
Iteration   1: 321,674 ms/op
Iteration   2: 320,837 ms/op
Iteration   3: 323,160 ms/op
Iteration   4: 320,347 ms/op
Iteration   5: 319,981 ms/op
Iteration   6: 325,165 ms/op
Iteration   7: 323,935 ms/op
Iteration   8: 323,672 ms/op
Iteration   9: 321,555 ms/op
Iteration  10: 323,103 ms/op


Result "benchmarkFind":
  322,343 ±(99.9%) 2,590 ms/op [Average]
  (min, avg, max) = (319,981, 322,343, 325,165), stdev = 1,713
  CI (99.9%): [319,753, 324,933] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 128, patternSize = 128)

# Run progress: 41,08% complete, ETA 09:30:02
# Fork: 1 of 1
# Warmup Iteration   1: 356,564 ms/op
# Warmup Iteration   2: 375,006 ms/op
# Warmup Iteration   3: 326,130 ms/op
# Warmup Iteration   4: 318,186 ms/op
# Warmup Iteration   5: 327,593 ms/op
# Warmup Iteration   6: 334,719 ms/op
# Warmup Iteration   7: 332,810 ms/op
# Warmup Iteration   8: 331,034 ms/op
# Warmup Iteration   9: 331,908 ms/op
# Warmup Iteration  10: 335,835 ms/op
Iteration   1: 332,920 ms/op
Iteration   2: 333,112 ms/op
Iteration   3: 329,906 ms/op
Iteration   4: 329,897 ms/op
Iteration   5: 328,423 ms/op
Iteration   6: 328,317 ms/op
Iteration   7: 334,280 ms/op
Iteration   8: 328,728 ms/op
Iteration   9: 327,425 ms/op
Iteration  10: 324,640 ms/op


Result "benchmarkFind":
  329,765 ±(99.9%) 4,459 ms/op [Average]
  (min, avg, max) = (324,640, 329,765, 334,280), stdev = 2,950
  CI (99.9%): [325,305, 334,224] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCAhoCorasickBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 128, patternSize = 256)

# Run progress: 41,13% complete, ETA 09:29:35
# Fork: 1 of 1
# Warmup Iteration   1: 363,261 ms/op
# Warmup Iteration   2: 324,993 ms/op
# Warmup Iteration   3: 323,082 ms/op
# Warmup Iteration   4: 323,770 ms/op
# Warmup Iteration   5: 325,389 ms/op
# Warmup Iteration   6: 328,368 ms/op
# Warmup Iteration   7: 325,306 ms/op
# Warmup Iteration   8: 328,577 ms/op
# Warmup Iteration   9: 324,900 ms/op
# Warmup Iteration  10: 327,232 ms/op
Iteration   1: 322,914 ms/op
Iteration   2: 332,471 ms/op
Iteration   3: 324,071 ms/op
Iteration   4: 327,929 ms/op
Iteration   5: 325,664 ms/op
Iteration   6: 323,890 ms/op
Iteration   7: 326,624 ms/op
Iteration   8: 324,376 ms/op
Iteration   9: 320,874 ms/op
Iteration  10: 321,119 ms/op


Result "benchmarkFind":
  324,993 ±(99.9%) 5,198 ms/op [Average]
  (min, avg, max) = (320,874, 324,993, 332,471), stdev = 3,438
  CI (99.9%): [319,795, 330,192] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternSize = 2)

# Run progress: 41,18% complete, ETA 09:29:09
# Fork: 1 of 1
# Warmup Iteration   1: 0,188 ms/op
# Warmup Iteration   2: 0,176 ms/op
# Warmup Iteration   3: 0,173 ms/op
# Warmup Iteration   4: 0,174 ms/op
# Warmup Iteration   5: 0,174 ms/op
# Warmup Iteration   6: 0,173 ms/op
# Warmup Iteration   7: 0,174 ms/op
# Warmup Iteration   8: 0,175 ms/op
# Warmup Iteration   9: 0,189 ms/op
# Warmup Iteration  10: 0,178 ms/op
Iteration   1: 0,175 ms/op
Iteration   2: 0,178 ms/op
Iteration   3: 0,179 ms/op
Iteration   4: 0,175 ms/op
Iteration   5: 0,174 ms/op
Iteration   6: 0,174 ms/op
Iteration   7: 0,175 ms/op
Iteration   8: 0,175 ms/op
Iteration   9: 0,176 ms/op
Iteration  10: 0,176 ms/op


Result "benchmarkFind":
  0,176 ±(99.9%) 0,003 ms/op [Average]
  (min, avg, max) = (0,174, 0,176, 0,179), stdev = 0,002
  CI (99.9%): [0,173, 0,178] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternSize = 4)

# Run progress: 41,22% complete, ETA 09:28:34
# Fork: 1 of 1
# Warmup Iteration   1: 0,571 ms/op
# Warmup Iteration   2: 0,532 ms/op
# Warmup Iteration   3: 0,517 ms/op
# Warmup Iteration   4: 0,516 ms/op
# Warmup Iteration   5: 0,517 ms/op
# Warmup Iteration   6: 0,516 ms/op
# Warmup Iteration   7: 0,519 ms/op
# Warmup Iteration   8: 0,517 ms/op
# Warmup Iteration   9: 0,518 ms/op
# Warmup Iteration  10: 0,524 ms/op
Iteration   1: 0,517 ms/op
Iteration   2: 0,520 ms/op
Iteration   3: 0,519 ms/op
Iteration   4: 0,522 ms/op
Iteration   5: 0,522 ms/op
Iteration   6: 0,525 ms/op
Iteration   7: 0,527 ms/op
Iteration   8: 0,531 ms/op
Iteration   9: 0,531 ms/op
Iteration  10: 0,533 ms/op


Result "benchmarkFind":
  0,525 ±(99.9%) 0,008 ms/op [Average]
  (min, avg, max) = (0,517, 0,525, 0,533), stdev = 0,005
  CI (99.9%): [0,516, 0,533] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternSize = 8)

# Run progress: 41,27% complete, ETA 09:27:58
# Fork: 1 of 1
# Warmup Iteration   1: 23,009 ms/op
# Warmup Iteration   2: 21,284 ms/op
# Warmup Iteration   3: 21,277 ms/op
# Warmup Iteration   4: 21,155 ms/op
# Warmup Iteration   5: 21,115 ms/op
# Warmup Iteration   6: 21,262 ms/op
# Warmup Iteration   7: 21,175 ms/op
# Warmup Iteration   8: 21,156 ms/op
# Warmup Iteration   9: 21,045 ms/op
# Warmup Iteration  10: 21,164 ms/op
Iteration   1: 21,135 ms/op
Iteration   2: 21,091 ms/op
Iteration   3: 21,154 ms/op
Iteration   4: 21,055 ms/op
Iteration   5: 21,197 ms/op
Iteration   6: 21,120 ms/op
Iteration   7: 21,183 ms/op
Iteration   8: 21,279 ms/op
Iteration   9: 21,139 ms/op
Iteration  10: 21,021 ms/op


Result "benchmarkFind":
  21,137 ±(99.9%) 0,111 ms/op [Average]
  (min, avg, max) = (21,021, 21,137, 21,279), stdev = 0,074
  CI (99.9%): [21,026, 21,249] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternSize = 16)

# Run progress: 41,31% complete, ETA 09:27:23
# Fork: 1 of 1
# Warmup Iteration   1: 185,806 ms/op
# Warmup Iteration   2: 178,353 ms/op
# Warmup Iteration   3: 177,357 ms/op
# Warmup Iteration   4: 169,639 ms/op
# Warmup Iteration   5: 169,991 ms/op
# Warmup Iteration   6: 169,527 ms/op
# Warmup Iteration   7: 175,093 ms/op
# Warmup Iteration   8: 168,010 ms/op
# Warmup Iteration   9: 167,370 ms/op
# Warmup Iteration  10: 167,408 ms/op
Iteration   1: 167,235 ms/op
Iteration   2: 167,062 ms/op
Iteration   3: 167,109 ms/op
Iteration   4: 166,970 ms/op
Iteration   5: 166,987 ms/op
Iteration   6: 167,162 ms/op
Iteration   7: 166,992 ms/op
Iteration   8: 166,850 ms/op
Iteration   9: 166,816 ms/op
Iteration  10: 166,911 ms/op


Result "benchmarkFind":
  167,009 ±(99.9%) 0,202 ms/op [Average]
  (min, avg, max) = (166,816, 167,009, 167,235), stdev = 0,134
  CI (99.9%): [166,807, 167,212] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternSize = 32)

# Run progress: 41,36% complete, ETA 09:26:49
# Fork: 1 of 1
# Warmup Iteration   1: 98,203 ms/op
# Warmup Iteration   2: 95,486 ms/op
# Warmup Iteration   3: 95,192 ms/op
# Warmup Iteration   4: 95,632 ms/op
# Warmup Iteration   5: 95,155 ms/op
# Warmup Iteration   6: 95,198 ms/op
# Warmup Iteration   7: 95,065 ms/op
# Warmup Iteration   8: 94,232 ms/op
# Warmup Iteration   9: 90,777 ms/op
# Warmup Iteration  10: 91,124 ms/op
Iteration   1: 90,683 ms/op
Iteration   2: 90,314 ms/op
Iteration   3: 90,532 ms/op
Iteration   4: 90,783 ms/op
Iteration   5: 90,384 ms/op
Iteration   6: 89,980 ms/op
Iteration   7: 89,902 ms/op
Iteration   8: 90,045 ms/op
Iteration   9: 90,377 ms/op
Iteration  10: 90,036 ms/op


Result "benchmarkFind":
  90,304 ±(99.9%) 0,463 ms/op [Average]
  (min, avg, max) = (89,902, 90,304, 90,783), stdev = 0,306
  CI (99.9%): [89,841, 90,766] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternSize = 64)

# Run progress: 41,41% complete, ETA 09:26:17
# Fork: 1 of 1
# Warmup Iteration   1: 54,310 ms/op
# Warmup Iteration   2: 51,979 ms/op
# Warmup Iteration   3: 51,875 ms/op
# Warmup Iteration   4: 51,780 ms/op
# Warmup Iteration   5: 50,517 ms/op
# Warmup Iteration   6: 49,356 ms/op
# Warmup Iteration   7: 49,676 ms/op
# Warmup Iteration   8: 49,390 ms/op
# Warmup Iteration   9: 49,150 ms/op
# Warmup Iteration  10: 49,300 ms/op
Iteration   1: 49,452 ms/op
Iteration   2: 49,482 ms/op
Iteration   3: 49,120 ms/op
Iteration   4: 49,407 ms/op
Iteration   5: 49,376 ms/op
Iteration   6: 49,317 ms/op
Iteration   7: 49,549 ms/op
Iteration   8: 49,464 ms/op
Iteration   9: 49,133 ms/op
Iteration  10: 49,614 ms/op


Result "benchmarkFind":
  49,391 ±(99.9%) 0,246 ms/op [Average]
  (min, avg, max) = (49,120, 49,391, 49,614), stdev = 0,163
  CI (99.9%): [49,145, 49,637] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternSize = 128)

# Run progress: 41,45% complete, ETA 09:25:43
# Fork: 1 of 1
# Warmup Iteration   1: 93,519 ms/op
# Warmup Iteration   2: 74,158 ms/op
# Warmup Iteration   3: 74,032 ms/op
# Warmup Iteration   4: 74,637 ms/op
# Warmup Iteration   5: 74,128 ms/op
# Warmup Iteration   6: 74,663 ms/op
# Warmup Iteration   7: 77,061 ms/op
# Warmup Iteration   8: 74,737 ms/op
# Warmup Iteration   9: 73,965 ms/op
# Warmup Iteration  10: 74,399 ms/op
Iteration   1: 75,040 ms/op
Iteration   2: 74,625 ms/op
Iteration   3: 74,383 ms/op
Iteration   4: 74,735 ms/op
Iteration   5: 73,879 ms/op
Iteration   6: 74,498 ms/op
Iteration   7: 74,605 ms/op
Iteration   8: 74,772 ms/op
Iteration   9: 74,462 ms/op
Iteration  10: 74,677 ms/op


Result "benchmarkFind":
  74,568 ±(99.9%) 0,460 ms/op [Average]
  (min, avg, max) = (73,879, 74,568, 75,040), stdev = 0,305
  CI (99.9%): [74,107, 75,028] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternSize = 256)

# Run progress: 41,50% complete, ETA 09:25:10
# Fork: 1 of 1
# Warmup Iteration   1: 63,594 ms/op
# Warmup Iteration   2: 56,324 ms/op
# Warmup Iteration   3: 56,423 ms/op
# Warmup Iteration   4: 56,616 ms/op
# Warmup Iteration   5: 57,897 ms/op
# Warmup Iteration   6: 56,462 ms/op
# Warmup Iteration   7: 56,068 ms/op
# Warmup Iteration   8: 57,062 ms/op
# Warmup Iteration   9: 56,631 ms/op
# Warmup Iteration  10: 56,667 ms/op
Iteration   1: 56,535 ms/op
Iteration   2: 56,890 ms/op
Iteration   3: 56,569 ms/op
Iteration   4: 56,735 ms/op
Iteration   5: 56,580 ms/op
Iteration   6: 56,655 ms/op
Iteration   7: 56,580 ms/op
Iteration   8: 56,710 ms/op
Iteration   9: 57,118 ms/op
Iteration  10: 56,688 ms/op


Result "benchmarkFind":
  56,706 ±(99.9%) 0,270 ms/op [Average]
  (min, avg, max) = (56,535, 56,706, 57,118), stdev = 0,179
  CI (99.9%): [56,436, 56,976] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternSize = 2)

# Run progress: 41,54% complete, ETA 09:24:36
# Fork: 1 of 1
# Warmup Iteration   1: 0,609 ms/op
# Warmup Iteration   2: 0,551 ms/op
# Warmup Iteration   3: 0,553 ms/op
# Warmup Iteration   4: 0,553 ms/op
# Warmup Iteration   5: 0,553 ms/op
# Warmup Iteration   6: 0,554 ms/op
# Warmup Iteration   7: 0,556 ms/op
# Warmup Iteration   8: 0,559 ms/op
# Warmup Iteration   9: 0,562 ms/op
# Warmup Iteration  10: 0,562 ms/op
Iteration   1: 0,560 ms/op
Iteration   2: 0,559 ms/op
Iteration   3: 0,559 ms/op
Iteration   4: 0,557 ms/op
Iteration   5: 0,557 ms/op
Iteration   6: 0,558 ms/op
Iteration   7: 0,558 ms/op
Iteration   8: 0,626 ms/op
Iteration   9: 0,575 ms/op
Iteration  10: 0,557 ms/op


Result "benchmarkFind":
  0,567 ±(99.9%) 0,033 ms/op [Average]
  (min, avg, max) = (0,557, 0,567, 0,626), stdev = 0,022
  CI (99.9%): [0,534, 0,599] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternSize = 4)

# Run progress: 41,59% complete, ETA 09:24:01
# Fork: 1 of 1
# Warmup Iteration   1: 22,963 ms/op
# Warmup Iteration   2: 21,394 ms/op
# Warmup Iteration   3: 21,434 ms/op
# Warmup Iteration   4: 21,613 ms/op
# Warmup Iteration   5: 21,441 ms/op
# Warmup Iteration   6: 21,340 ms/op
# Warmup Iteration   7: 21,464 ms/op
# Warmup Iteration   8: 21,338 ms/op
# Warmup Iteration   9: 21,292 ms/op
# Warmup Iteration  10: 21,340 ms/op
Iteration   1: 21,286 ms/op
Iteration   2: 21,288 ms/op
Iteration   3: 21,297 ms/op
Iteration   4: 21,313 ms/op
Iteration   5: 21,267 ms/op
Iteration   6: 21,446 ms/op
Iteration   7: 21,354 ms/op
Iteration   8: 21,289 ms/op
Iteration   9: 21,292 ms/op
Iteration  10: 21,267 ms/op


Result "benchmarkFind":
  21,310 ±(99.9%) 0,081 ms/op [Average]
  (min, avg, max) = (21,267, 21,310, 21,446), stdev = 0,054
  CI (99.9%): [21,228, 21,391] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternSize = 8)

# Run progress: 41,64% complete, ETA 09:23:26
# Fork: 1 of 1
# Warmup Iteration   1: 184,488 ms/op
# Warmup Iteration   2: 175,692 ms/op
# Warmup Iteration   3: 174,057 ms/op
# Warmup Iteration   4: 168,387 ms/op
# Warmup Iteration   5: 168,086 ms/op
# Warmup Iteration   6: 170,112 ms/op
# Warmup Iteration   7: 168,370 ms/op
# Warmup Iteration   8: 168,608 ms/op
# Warmup Iteration   9: 167,203 ms/op
# Warmup Iteration  10: 167,848 ms/op
Iteration   1: 168,305 ms/op
Iteration   2: 169,099 ms/op
Iteration   3: 168,679 ms/op
Iteration   4: 166,897 ms/op
Iteration   5: 167,524 ms/op
Iteration   6: 167,470 ms/op
Iteration   7: 168,893 ms/op
Iteration   8: 168,526 ms/op
Iteration   9: 168,246 ms/op
Iteration  10: 168,349 ms/op


Result "benchmarkFind":
  168,199 ±(99.9%) 1,051 ms/op [Average]
  (min, avg, max) = (166,897, 168,199, 169,099), stdev = 0,695
  CI (99.9%): [167,148, 169,250] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternSize = 16)

# Run progress: 41,68% complete, ETA 09:22:52
# Fork: 1 of 1
# Warmup Iteration   1: 103,353 ms/op
# Warmup Iteration   2: 97,066 ms/op
# Warmup Iteration   3: 97,045 ms/op
# Warmup Iteration   4: 97,039 ms/op
# Warmup Iteration   5: 97,079 ms/op
# Warmup Iteration   6: 96,948 ms/op
# Warmup Iteration   7: 97,019 ms/op
# Warmup Iteration   8: 96,532 ms/op
# Warmup Iteration   9: 92,397 ms/op
# Warmup Iteration  10: 92,067 ms/op
Iteration   1: 92,092 ms/op
Iteration   2: 91,980 ms/op
Iteration   3: 91,954 ms/op
Iteration   4: 91,978 ms/op
Iteration   5: 103,784 ms/op
Iteration   6: 92,152 ms/op
Iteration   7: 91,856 ms/op
Iteration   8: 92,415 ms/op
Iteration   9: 92,569 ms/op
Iteration  10: 92,597 ms/op


Result "benchmarkFind":
  93,338 ±(99.9%) 5,564 ms/op [Average]
  (min, avg, max) = (91,856, 93,338, 103,784), stdev = 3,680
  CI (99.9%): [87,774, 98,901] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternSize = 32)

# Run progress: 41,73% complete, ETA 09:22:18
# Fork: 1 of 1
# Warmup Iteration   1: 57,224 ms/op
# Warmup Iteration   2: 55,409 ms/op
# Warmup Iteration   3: 55,150 ms/op
# Warmup Iteration   4: 55,199 ms/op
# Warmup Iteration   5: 54,460 ms/op
# Warmup Iteration   6: 51,800 ms/op
# Warmup Iteration   7: 52,164 ms/op
# Warmup Iteration   8: 51,856 ms/op
# Warmup Iteration   9: 52,063 ms/op
# Warmup Iteration  10: 52,130 ms/op
Iteration   1: 52,183 ms/op
Iteration   2: 51,916 ms/op
Iteration   3: 51,513 ms/op
Iteration   4: 51,724 ms/op
Iteration   5: 51,873 ms/op
Iteration   6: 52,018 ms/op
Iteration   7: 51,714 ms/op
Iteration   8: 51,727 ms/op
Iteration   9: 51,772 ms/op
Iteration  10: 51,647 ms/op


Result "benchmarkFind":
  51,809 ±(99.9%) 0,293 ms/op [Average]
  (min, avg, max) = (51,513, 51,809, 52,183), stdev = 0,194
  CI (99.9%): [51,516, 52,102] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternSize = 64)

# Run progress: 41,77% complete, ETA 09:21:45
# Fork: 1 of 1
# Warmup Iteration   1: 31,191 ms/op
# Warmup Iteration   2: 30,089 ms/op
# Warmup Iteration   3: 29,423 ms/op
# Warmup Iteration   4: 28,205 ms/op
# Warmup Iteration   5: 28,069 ms/op
# Warmup Iteration   6: 27,888 ms/op
# Warmup Iteration   7: 27,955 ms/op
# Warmup Iteration   8: 27,805 ms/op
# Warmup Iteration   9: 27,775 ms/op
# Warmup Iteration  10: 27,816 ms/op
Iteration   1: 27,912 ms/op
Iteration   2: 28,071 ms/op
Iteration   3: 28,079 ms/op
Iteration   4: 27,907 ms/op
Iteration   5: 27,981 ms/op
Iteration   6: 28,236 ms/op
Iteration   7: 28,035 ms/op
Iteration   8: 27,835 ms/op
Iteration   9: 27,976 ms/op
Iteration  10: 28,000 ms/op


Result "benchmarkFind":
  28,003 ±(99.9%) 0,169 ms/op [Average]
  (min, avg, max) = (27,835, 28,003, 28,236), stdev = 0,112
  CI (99.9%): [27,834, 28,172] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternSize = 128)

# Run progress: 41,82% complete, ETA 09:21:11
# Fork: 1 of 1
# Warmup Iteration   1: 49,440 ms/op
# Warmup Iteration   2: 44,718 ms/op
# Warmup Iteration   3: 44,522 ms/op
# Warmup Iteration   4: 46,157 ms/op
# Warmup Iteration   5: 44,585 ms/op
# Warmup Iteration   6: 45,017 ms/op
# Warmup Iteration   7: 44,661 ms/op
# Warmup Iteration   8: 44,825 ms/op
# Warmup Iteration   9: 44,673 ms/op
# Warmup Iteration  10: 50,458 ms/op
Iteration   1: 44,923 ms/op
Iteration   2: 44,773 ms/op
Iteration   3: 44,865 ms/op
Iteration   4: 44,720 ms/op
Iteration   5: 45,088 ms/op
Iteration   6: 44,917 ms/op
Iteration   7: 44,300 ms/op
Iteration   8: 44,380 ms/op
Iteration   9: 44,923 ms/op
Iteration  10: 44,897 ms/op


Result "benchmarkFind":
  44,779 ±(99.9%) 0,380 ms/op [Average]
  (min, avg, max) = (44,300, 44,779, 45,088), stdev = 0,251
  CI (99.9%): [44,398, 45,159] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternSize = 256)

# Run progress: 41,87% complete, ETA 09:20:38
# Fork: 1 of 1
# Warmup Iteration   1: 36,337 ms/op
# Warmup Iteration   2: 33,024 ms/op
# Warmup Iteration   3: 33,341 ms/op
# Warmup Iteration   4: 32,980 ms/op
# Warmup Iteration   5: 32,707 ms/op
# Warmup Iteration   6: 32,782 ms/op
# Warmup Iteration   7: 33,024 ms/op
# Warmup Iteration   8: 32,989 ms/op
# Warmup Iteration   9: 33,016 ms/op
# Warmup Iteration  10: 34,059 ms/op
Iteration   1: 32,982 ms/op
Iteration   2: 32,947 ms/op
Iteration   3: 32,902 ms/op
Iteration   4: 32,979 ms/op
Iteration   5: 33,169 ms/op
Iteration   6: 33,122 ms/op
Iteration   7: 32,846 ms/op
Iteration   8: 32,976 ms/op
Iteration   9: 32,960 ms/op
Iteration  10: 33,025 ms/op


Result "benchmarkFind":
  32,991 ±(99.9%) 0,145 ms/op [Average]
  (min, avg, max) = (32,846, 32,991, 33,169), stdev = 0,096
  CI (99.9%): [32,846, 33,136] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternSize = 2)

# Run progress: 41,91% complete, ETA 09:20:04
# Fork: 1 of 1
# Warmup Iteration   1: 2,348 ms/op
# Warmup Iteration   2: 2,184 ms/op
# Warmup Iteration   3: 2,183 ms/op
# Warmup Iteration   4: 2,180 ms/op
# Warmup Iteration   5: 2,158 ms/op
# Warmup Iteration   6: 2,170 ms/op
# Warmup Iteration   7: 2,187 ms/op
# Warmup Iteration   8: 2,182 ms/op
# Warmup Iteration   9: 2,184 ms/op
# Warmup Iteration  10: 2,180 ms/op
Iteration   1: 2,168 ms/op
Iteration   2: 2,156 ms/op
Iteration   3: 2,200 ms/op
Iteration   4: 2,172 ms/op
Iteration   5: 2,174 ms/op
Iteration   6: 2,173 ms/op
Iteration   7: 2,183 ms/op
Iteration   8: 2,180 ms/op
Iteration   9: 2,183 ms/op
Iteration  10: 2,197 ms/op


Result "benchmarkFind":
  2,179 ±(99.9%) 0,020 ms/op [Average]
  (min, avg, max) = (2,156, 2,179, 2,200), stdev = 0,013
  CI (99.9%): [2,159, 2,198] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternSize = 4)

# Run progress: 41,96% complete, ETA 09:19:29
# Fork: 1 of 1
# Warmup Iteration   1: 254,807 ms/op
# Warmup Iteration   2: 233,777 ms/op
# Warmup Iteration   3: 233,592 ms/op
# Warmup Iteration   4: 233,857 ms/op
# Warmup Iteration   5: 236,530 ms/op
# Warmup Iteration   6: 256,857 ms/op
# Warmup Iteration   7: 234,744 ms/op
# Warmup Iteration   8: 235,659 ms/op
# Warmup Iteration   9: 234,277 ms/op
# Warmup Iteration  10: 234,462 ms/op
Iteration   1: 235,269 ms/op
Iteration   2: 234,557 ms/op
Iteration   3: 233,706 ms/op
Iteration   4: 234,069 ms/op
Iteration   5: 233,875 ms/op
Iteration   6: 232,749 ms/op
Iteration   7: 234,608 ms/op
Iteration   8: 234,356 ms/op
Iteration   9: 236,398 ms/op
Iteration  10: 235,336 ms/op


Result "benchmarkFind":
  234,492 ±(99.9%) 1,528 ms/op [Average]
  (min, avg, max) = (232,749, 234,492, 236,398), stdev = 1,011
  CI (99.9%): [232,964, 236,021] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternSize = 8)

# Run progress: 42,00% complete, ETA 09:18:59
# Fork: 1 of 1
# Warmup Iteration   1: 142,039 ms/op
# Warmup Iteration   2: 137,076 ms/op
# Warmup Iteration   3: 136,875 ms/op
# Warmup Iteration   4: 137,171 ms/op
# Warmup Iteration   5: 136,676 ms/op
# Warmup Iteration   6: 137,830 ms/op
# Warmup Iteration   7: 138,342 ms/op
# Warmup Iteration   8: 137,069 ms/op
# Warmup Iteration   9: 137,868 ms/op
# Warmup Iteration  10: 137,262 ms/op
Iteration   1: 133,271 ms/op
Iteration   2: 125,636 ms/op
Iteration   3: 126,080 ms/op
Iteration   4: 126,110 ms/op
Iteration   5: 126,356 ms/op
Iteration   6: 126,880 ms/op
Iteration   7: 125,689 ms/op
Iteration   8: 126,192 ms/op
Iteration   9: 125,299 ms/op
Iteration  10: 125,363 ms/op


Result "benchmarkFind":
  126,688 ±(99.9%) 3,571 ms/op [Average]
  (min, avg, max) = (125,299, 126,688, 133,271), stdev = 2,362
  CI (99.9%): [123,116, 130,259] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternSize = 16)

# Run progress: 42,05% complete, ETA 09:18:26
# Fork: 1 of 1
# Warmup Iteration   1: 72,459 ms/op
# Warmup Iteration   2: 68,780 ms/op
# Warmup Iteration   3: 68,630 ms/op
# Warmup Iteration   4: 69,006 ms/op
# Warmup Iteration   5: 68,369 ms/op
# Warmup Iteration   6: 68,270 ms/op
# Warmup Iteration   7: 65,963 ms/op
# Warmup Iteration   8: 66,684 ms/op
# Warmup Iteration   9: 65,802 ms/op
# Warmup Iteration  10: 65,683 ms/op
Iteration   1: 66,033 ms/op
Iteration   2: 66,231 ms/op
Iteration   3: 66,004 ms/op
Iteration   4: 66,212 ms/op
Iteration   5: 66,061 ms/op
Iteration   6: 65,608 ms/op
Iteration   7: 66,040 ms/op
Iteration   8: 66,516 ms/op
Iteration   9: 66,160 ms/op
Iteration  10: 68,915 ms/op


Result "benchmarkFind":
  66,378 ±(99.9%) 1,391 ms/op [Average]
  (min, avg, max) = (65,608, 66,378, 68,915), stdev = 0,920
  CI (99.9%): [64,987, 67,769] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternSize = 32)

# Run progress: 42,10% complete, ETA 09:17:53
# Fork: 1 of 1
# Warmup Iteration   1: 42,951 ms/op
# Warmup Iteration   2: 40,394 ms/op
# Warmup Iteration   3: 40,742 ms/op
# Warmup Iteration   4: 40,739 ms/op
# Warmup Iteration   5: 39,898 ms/op
# Warmup Iteration   6: 40,089 ms/op
# Warmup Iteration   7: 40,022 ms/op
# Warmup Iteration   8: 39,970 ms/op
# Warmup Iteration   9: 40,114 ms/op
# Warmup Iteration  10: 40,478 ms/op
Iteration   1: 40,140 ms/op
Iteration   2: 40,181 ms/op
Iteration   3: 39,723 ms/op
Iteration   4: 40,052 ms/op
Iteration   5: 40,044 ms/op
Iteration   6: 39,737 ms/op
Iteration   7: 39,694 ms/op
Iteration   8: 39,766 ms/op
Iteration   9: 39,766 ms/op
Iteration  10: 39,764 ms/op


Result "benchmarkFind":
  39,887 ±(99.9%) 0,291 ms/op [Average]
  (min, avg, max) = (39,694, 39,887, 40,181), stdev = 0,192
  CI (99.9%): [39,596, 40,178] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternSize = 64)

# Run progress: 42,14% complete, ETA 09:17:19
# Fork: 1 of 1
# Warmup Iteration   1: 22,704 ms/op
# Warmup Iteration   2: 22,161 ms/op
# Warmup Iteration   3: 20,896 ms/op
# Warmup Iteration   4: 20,792 ms/op
# Warmup Iteration   5: 20,907 ms/op
# Warmup Iteration   6: 21,165 ms/op
# Warmup Iteration   7: 21,190 ms/op
# Warmup Iteration   8: 21,154 ms/op
# Warmup Iteration   9: 20,926 ms/op
# Warmup Iteration  10: 20,941 ms/op
Iteration   1: 21,058 ms/op
Iteration   2: 21,001 ms/op
Iteration   3: 21,063 ms/op
Iteration   4: 20,954 ms/op
Iteration   5: 20,872 ms/op
Iteration   6: 20,964 ms/op
Iteration   7: 21,040 ms/op
Iteration   8: 20,905 ms/op
Iteration   9: 20,870 ms/op
Iteration  10: 20,909 ms/op


Result "benchmarkFind":
  20,964 ±(99.9%) 0,112 ms/op [Average]
  (min, avg, max) = (20,870, 20,964, 21,063), stdev = 0,074
  CI (99.9%): [20,852, 21,076] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternSize = 128)

# Run progress: 42,19% complete, ETA 09:16:45
# Fork: 1 of 1
# Warmup Iteration   1: 37,819 ms/op
# Warmup Iteration   2: 34,553 ms/op
# Warmup Iteration   3: 34,703 ms/op
# Warmup Iteration   4: 34,779 ms/op
# Warmup Iteration   5: 34,357 ms/op
# Warmup Iteration   6: 34,304 ms/op
# Warmup Iteration   7: 34,494 ms/op
# Warmup Iteration   8: 34,776 ms/op
# Warmup Iteration   9: 34,779 ms/op
# Warmup Iteration  10: 34,539 ms/op
Iteration   1: 34,606 ms/op
Iteration   2: 34,867 ms/op
Iteration   3: 34,517 ms/op
Iteration   4: 34,764 ms/op
Iteration   5: 34,775 ms/op
Iteration   6: 35,000 ms/op
Iteration   7: 39,496 ms/op
Iteration   8: 34,613 ms/op
Iteration   9: 34,863 ms/op
Iteration  10: 35,037 ms/op


Result "benchmarkFind":
  35,254 ±(99.9%) 2,268 ms/op [Average]
  (min, avg, max) = (34,517, 35,254, 39,496), stdev = 1,500
  CI (99.9%): [32,986, 37,522] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternSize = 256)

# Run progress: 42,23% complete, ETA 09:16:11
# Fork: 1 of 1
# Warmup Iteration   1: 28,481 ms/op
# Warmup Iteration   2: 26,690 ms/op
# Warmup Iteration   3: 25,073 ms/op
# Warmup Iteration   4: 24,850 ms/op
# Warmup Iteration   5: 24,702 ms/op
# Warmup Iteration   6: 24,855 ms/op
# Warmup Iteration   7: 24,792 ms/op
# Warmup Iteration   8: 24,729 ms/op
# Warmup Iteration   9: 24,808 ms/op
# Warmup Iteration  10: 25,167 ms/op
Iteration   1: 25,358 ms/op
Iteration   2: 25,211 ms/op
Iteration   3: 25,203 ms/op
Iteration   4: 27,106 ms/op
Iteration   5: 25,463 ms/op
Iteration   6: 25,402 ms/op
Iteration   7: 25,238 ms/op
Iteration   8: 25,286 ms/op
Iteration   9: 25,642 ms/op
Iteration  10: 25,526 ms/op


Result "benchmarkFind":
  25,543 ±(99.9%) 0,858 ms/op [Average]
  (min, avg, max) = (25,203, 25,543, 27,106), stdev = 0,567
  CI (99.9%): [24,686, 26,401] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternSize = 2)

# Run progress: 42,28% complete, ETA 09:15:37
# Fork: 1 of 1
# Warmup Iteration   1: 23,530 ms/op
# Warmup Iteration   2: 21,621 ms/op
# Warmup Iteration   3: 21,611 ms/op
# Warmup Iteration   4: 21,734 ms/op
# Warmup Iteration   5: 21,509 ms/op
# Warmup Iteration   6: 21,660 ms/op
# Warmup Iteration   7: 21,593 ms/op
# Warmup Iteration   8: 21,503 ms/op
# Warmup Iteration   9: 21,626 ms/op
# Warmup Iteration  10: 21,780 ms/op
Iteration   1: 21,645 ms/op
Iteration   2: 21,522 ms/op
Iteration   3: 21,601 ms/op
Iteration   4: 21,607 ms/op
Iteration   5: 21,521 ms/op
Iteration   6: 21,591 ms/op
Iteration   7: 21,558 ms/op
Iteration   8: 21,482 ms/op
Iteration   9: 21,520 ms/op
Iteration  10: 21,430 ms/op


Result "benchmarkFind":
  21,548 ±(99.9%) 0,098 ms/op [Average]
  (min, avg, max) = (21,430, 21,548, 21,645), stdev = 0,065
  CI (99.9%): [21,449, 21,646] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternSize = 4)

# Run progress: 42,33% complete, ETA 09:15:03
# Fork: 1 of 1
# Warmup Iteration   1: 222,020 ms/op
# Warmup Iteration   2: 218,923 ms/op
# Warmup Iteration   3: 217,562 ms/op
# Warmup Iteration   4: 207,045 ms/op
# Warmup Iteration   5: 201,851 ms/op
# Warmup Iteration   6: 200,676 ms/op
# Warmup Iteration   7: 200,545 ms/op
# Warmup Iteration   8: 200,410 ms/op
# Warmup Iteration   9: 199,835 ms/op
# Warmup Iteration  10: 201,171 ms/op
Iteration   1: 201,463 ms/op
Iteration   2: 200,520 ms/op
Iteration   3: 212,415 ms/op
Iteration   4: 202,873 ms/op
Iteration   5: 201,805 ms/op
Iteration   6: 202,742 ms/op
Iteration   7: 201,838 ms/op
Iteration   8: 200,678 ms/op
Iteration   9: 200,954 ms/op
Iteration  10: 203,146 ms/op


Result "benchmarkFind":
  202,843 ±(99.9%) 5,270 ms/op [Average]
  (min, avg, max) = (200,520, 202,843, 212,415), stdev = 3,486
  CI (99.9%): [197,573, 208,113] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternSize = 8)

# Run progress: 42,37% complete, ETA 09:14:29
# Fork: 1 of 1
# Warmup Iteration   1: 129,955 ms/op
# Warmup Iteration   2: 125,392 ms/op
# Warmup Iteration   3: 126,197 ms/op
# Warmup Iteration   4: 125,187 ms/op
# Warmup Iteration   5: 125,227 ms/op
# Warmup Iteration   6: 125,002 ms/op
# Warmup Iteration   7: 125,427 ms/op
# Warmup Iteration   8: 125,909 ms/op
# Warmup Iteration   9: 125,912 ms/op
# Warmup Iteration  10: 125,829 ms/op
Iteration   1: 118,873 ms/op
Iteration   2: 114,452 ms/op
Iteration   3: 113,555 ms/op
Iteration   4: 115,605 ms/op
Iteration   5: 113,373 ms/op
Iteration   6: 114,314 ms/op
Iteration   7: 113,759 ms/op
Iteration   8: 114,277 ms/op
Iteration   9: 113,521 ms/op
Iteration  10: 114,864 ms/op


Result "benchmarkFind":
  114,659 ±(99.9%) 2,468 ms/op [Average]
  (min, avg, max) = (113,373, 114,659, 118,873), stdev = 1,632
  CI (99.9%): [112,192, 117,127] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternSize = 16)

# Run progress: 42,42% complete, ETA 09:13:56
# Fork: 1 of 1
# Warmup Iteration   1: 67,466 ms/op
# Warmup Iteration   2: 64,560 ms/op
# Warmup Iteration   3: 64,432 ms/op
# Warmup Iteration   4: 64,607 ms/op
# Warmup Iteration   5: 64,359 ms/op
# Warmup Iteration   6: 61,817 ms/op
# Warmup Iteration   7: 59,517 ms/op
# Warmup Iteration   8: 59,381 ms/op
# Warmup Iteration   9: 59,538 ms/op
# Warmup Iteration  10: 59,475 ms/op
Iteration   1: 59,897 ms/op
Iteration   2: 59,197 ms/op
Iteration   3: 59,223 ms/op
Iteration   4: 59,448 ms/op
Iteration   5: 59,694 ms/op
Iteration   6: 59,405 ms/op
Iteration   7: 59,178 ms/op
Iteration   8: 59,472 ms/op
Iteration   9: 59,401 ms/op
Iteration  10: 59,609 ms/op


Result "benchmarkFind":
  59,452 ±(99.9%) 0,349 ms/op [Average]
  (min, avg, max) = (59,178, 59,452, 59,897), stdev = 0,231
  CI (99.9%): [59,104, 59,801] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternSize = 32)

# Run progress: 42,46% complete, ETA 09:13:22
# Fork: 1 of 1
# Warmup Iteration   1: 33,275 ms/op
# Warmup Iteration   2: 31,745 ms/op
# Warmup Iteration   3: 31,345 ms/op
# Warmup Iteration   4: 29,259 ms/op
# Warmup Iteration   5: 28,904 ms/op
# Warmup Iteration   6: 28,835 ms/op
# Warmup Iteration   7: 28,871 ms/op
# Warmup Iteration   8: 28,764 ms/op
# Warmup Iteration   9: 29,058 ms/op
# Warmup Iteration  10: 30,890 ms/op
Iteration   1: 28,759 ms/op
Iteration   2: 28,630 ms/op
Iteration   3: 28,555 ms/op
Iteration   4: 28,560 ms/op
Iteration   5: 28,599 ms/op
Iteration   6: 28,663 ms/op
Iteration   7: 28,576 ms/op
Iteration   8: 28,569 ms/op
Iteration   9: 28,570 ms/op
Iteration  10: 28,596 ms/op


Result "benchmarkFind":
  28,608 ±(99.9%) 0,095 ms/op [Average]
  (min, avg, max) = (28,555, 28,608, 28,759), stdev = 0,063
  CI (99.9%): [28,512, 28,703] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternSize = 64)

# Run progress: 42,51% complete, ETA 09:12:48
# Fork: 1 of 1
# Warmup Iteration   1: 17,806 ms/op
# Warmup Iteration   2: 16,860 ms/op
# Warmup Iteration   3: 16,537 ms/op
# Warmup Iteration   4: 16,454 ms/op
# Warmup Iteration   5: 16,628 ms/op
# Warmup Iteration   6: 16,519 ms/op
# Warmup Iteration   7: 16,550 ms/op
# Warmup Iteration   8: 16,497 ms/op
# Warmup Iteration   9: 16,589 ms/op
# Warmup Iteration  10: 17,331 ms/op
Iteration   1: 16,618 ms/op
Iteration   2: 16,457 ms/op
Iteration   3: 16,546 ms/op
Iteration   4: 16,504 ms/op
Iteration   5: 16,522 ms/op
Iteration   6: 16,467 ms/op
Iteration   7: 16,340 ms/op
Iteration   8: 16,393 ms/op
Iteration   9: 16,324 ms/op
Iteration  10: 16,316 ms/op


Result "benchmarkFind":
  16,449 ±(99.9%) 0,155 ms/op [Average]
  (min, avg, max) = (16,316, 16,449, 16,618), stdev = 0,103
  CI (99.9%): [16,293, 16,604] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternSize = 128)

# Run progress: 42,56% complete, ETA 09:12:14
# Fork: 1 of 1
# Warmup Iteration   1: 31,544 ms/op
# Warmup Iteration   2: 28,783 ms/op
# Warmup Iteration   3: 29,128 ms/op
# Warmup Iteration   4: 28,921 ms/op
# Warmup Iteration   5: 28,608 ms/op
# Warmup Iteration   6: 28,621 ms/op
# Warmup Iteration   7: 28,892 ms/op
# Warmup Iteration   8: 28,961 ms/op
# Warmup Iteration   9: 29,020 ms/op
# Warmup Iteration  10: 29,188 ms/op
Iteration   1: 29,395 ms/op
Iteration   2: 29,414 ms/op
Iteration   3: 29,073 ms/op
Iteration   4: 29,085 ms/op
Iteration   5: 29,036 ms/op
Iteration   6: 29,260 ms/op
Iteration   7: 29,133 ms/op
Iteration   8: 29,310 ms/op
Iteration   9: 29,213 ms/op
Iteration  10: 29,026 ms/op


Result "benchmarkFind":
  29,194 ±(99.9%) 0,220 ms/op [Average]
  (min, avg, max) = (29,026, 29,194, 29,414), stdev = 0,146
  CI (99.9%): [28,974, 29,414] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternSize = 256)

# Run progress: 42,60% complete, ETA 09:11:41
# Fork: 1 of 1
# Warmup Iteration   1: 24,093 ms/op
# Warmup Iteration   2: 21,806 ms/op
# Warmup Iteration   3: 20,878 ms/op
# Warmup Iteration   4: 20,885 ms/op
# Warmup Iteration   5: 20,931 ms/op
# Warmup Iteration   6: 22,434 ms/op
# Warmup Iteration   7: 21,662 ms/op
# Warmup Iteration   8: 21,079 ms/op
# Warmup Iteration   9: 21,170 ms/op
# Warmup Iteration  10: 21,530 ms/op
Iteration   1: 21,397 ms/op
Iteration   2: 21,208 ms/op
Iteration   3: 21,183 ms/op
Iteration   4: 21,427 ms/op
Iteration   5: 21,376 ms/op
Iteration   6: 21,212 ms/op
Iteration   7: 21,243 ms/op
Iteration   8: 21,302 ms/op
Iteration   9: 21,393 ms/op
Iteration  10: 21,428 ms/op


Result "benchmarkFind":
  21,317 ±(99.9%) 0,148 ms/op [Average]
  (min, avg, max) = (21,183, 21,317, 21,428), stdev = 0,098
  CI (99.9%): [21,169, 21,465] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternSize = 2)

# Run progress: 42,65% complete, ETA 09:11:07
# Fork: 1 of 1
# Warmup Iteration   1: 80,710 ms/op
# Warmup Iteration   2: 74,640 ms/op
# Warmup Iteration   3: 75,108 ms/op
# Warmup Iteration   4: 75,156 ms/op
# Warmup Iteration   5: 74,983 ms/op
# Warmup Iteration   6: 74,876 ms/op
# Warmup Iteration   7: 75,136 ms/op
# Warmup Iteration   8: 75,226 ms/op
# Warmup Iteration   9: 74,951 ms/op
# Warmup Iteration  10: 74,774 ms/op
Iteration   1: 74,608 ms/op
Iteration   2: 74,337 ms/op
Iteration   3: 74,603 ms/op
Iteration   4: 74,890 ms/op
Iteration   5: 74,440 ms/op
Iteration   6: 74,787 ms/op
Iteration   7: 74,526 ms/op
Iteration   8: 74,609 ms/op
Iteration   9: 74,123 ms/op
Iteration  10: 74,893 ms/op


Result "benchmarkFind":
  74,582 ±(99.9%) 0,367 ms/op [Average]
  (min, avg, max) = (74,123, 74,582, 74,893), stdev = 0,243
  CI (99.9%): [74,215, 74,949] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternSize = 4)

# Run progress: 42,69% complete, ETA 09:10:34
# Fork: 1 of 1
# Warmup Iteration   1: 1576,035 ms/op
# Warmup Iteration   2: 1565,399 ms/op
# Warmup Iteration   3: 1560,469 ms/op
# Warmup Iteration   4: 1555,832 ms/op
# Warmup Iteration   5: 1552,038 ms/op
# Warmup Iteration   6: 1536,008 ms/op
# Warmup Iteration   7: 1549,210 ms/op
# Warmup Iteration   8: 1545,432 ms/op
# Warmup Iteration   9: 1540,900 ms/op
# Warmup Iteration  10: 1547,764 ms/op
Iteration   1: 1549,913 ms/op
Iteration   2: 1552,339 ms/op
Iteration   3: 1548,187 ms/op
Iteration   4: 1649,809 ms/op
Iteration   5: 1557,042 ms/op
Iteration   6: 1550,719 ms/op
Iteration   7: 1561,724 ms/op
Iteration   8: 1550,457 ms/op
Iteration   9: 1569,428 ms/op
Iteration  10: 1553,056 ms/op


Result "benchmarkFind":
  1564,267 ±(99.9%) 46,488 ms/op [Average]
  (min, avg, max) = (1548,187, 1564,267, 1649,809), stdev = 30,749
  CI (99.9%): [1517,779, 1610,756] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternSize = 8)

# Run progress: 42,74% complete, ETA 09:10:18
# Fork: 1 of 1
# Warmup Iteration   1: 857,927 ms/op
# Warmup Iteration   2: 832,824 ms/op
# Warmup Iteration   3: 838,930 ms/op
# Warmup Iteration   4: 834,364 ms/op
# Warmup Iteration   5: 837,650 ms/op
# Warmup Iteration   6: 833,278 ms/op
# Warmup Iteration   7: 835,760 ms/op
# Warmup Iteration   8: 833,144 ms/op
# Warmup Iteration   9: 837,022 ms/op
# Warmup Iteration  10: 839,525 ms/op
Iteration   1: 830,834 ms/op
Iteration   2: 835,075 ms/op
Iteration   3: 836,227 ms/op
Iteration   4: 838,718 ms/op
Iteration   5: 833,954 ms/op
Iteration   6: 838,912 ms/op
Iteration   7: 837,455 ms/op
Iteration   8: 829,299 ms/op
Iteration   9: 829,232 ms/op
Iteration  10: 835,939 ms/op


Result "benchmarkFind":
  834,565 ±(99.9%) 5,518 ms/op [Average]
  (min, avg, max) = (829,232, 834,565, 838,912), stdev = 3,650
  CI (99.9%): [829,047, 840,082] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternSize = 16)

# Run progress: 42,78% complete, ETA 09:10:06
# Fork: 1 of 1
# Warmup Iteration   1: 503,855 ms/op
# Warmup Iteration   2: 491,509 ms/op
# Warmup Iteration   3: 494,040 ms/op
# Warmup Iteration   4: 489,445 ms/op
# Warmup Iteration   5: 488,482 ms/op
# Warmup Iteration   6: 491,487 ms/op
# Warmup Iteration   7: 531,272 ms/op
# Warmup Iteration   8: 485,292 ms/op
# Warmup Iteration   9: 484,541 ms/op
# Warmup Iteration  10: 483,880 ms/op
Iteration   1: 486,095 ms/op
Iteration   2: 489,197 ms/op
Iteration   3: 485,104 ms/op
Iteration   4: 486,146 ms/op
Iteration   5: 486,281 ms/op
Iteration   6: 483,194 ms/op
Iteration   7: 483,996 ms/op
Iteration   8: 484,412 ms/op
Iteration   9: 484,727 ms/op
Iteration  10: 484,326 ms/op


Result "benchmarkFind":
  485,348 ±(99.9%) 2,555 ms/op [Average]
  (min, avg, max) = (483,194, 485,348, 489,197), stdev = 1,690
  CI (99.9%): [482,793, 487,903] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternSize = 32)

# Run progress: 42,83% complete, ETA 09:09:46
# Fork: 1 of 1
# Warmup Iteration   1: 277,398 ms/op
# Warmup Iteration   2: 268,794 ms/op
# Warmup Iteration   3: 265,895 ms/op
# Warmup Iteration   4: 265,162 ms/op
# Warmup Iteration   5: 265,350 ms/op
# Warmup Iteration   6: 265,104 ms/op
# Warmup Iteration   7: 269,022 ms/op
# Warmup Iteration   8: 264,909 ms/op
# Warmup Iteration   9: 264,720 ms/op
# Warmup Iteration  10: 267,751 ms/op
Iteration   1: 266,112 ms/op
Iteration   2: 265,138 ms/op
Iteration   3: 266,692 ms/op
Iteration   4: 264,550 ms/op
Iteration   5: 264,074 ms/op
Iteration   6: 264,511 ms/op
Iteration   7: 264,332 ms/op
Iteration   8: 266,395 ms/op
Iteration   9: 264,705 ms/op
Iteration  10: 265,556 ms/op


Result "benchmarkFind":
  265,207 ±(99.9%) 1,405 ms/op [Average]
  (min, avg, max) = (264,074, 265,207, 266,692), stdev = 0,929
  CI (99.9%): [263,801, 266,612] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternSize = 64)

# Run progress: 42,88% complete, ETA 09:09:17
# Fork: 1 of 1
# Warmup Iteration   1: 160,500 ms/op
# Warmup Iteration   2: 153,983 ms/op
# Warmup Iteration   3: 153,675 ms/op
# Warmup Iteration   4: 153,430 ms/op
# Warmup Iteration   5: 153,624 ms/op
# Warmup Iteration   6: 153,186 ms/op
# Warmup Iteration   7: 153,792 ms/op
# Warmup Iteration   8: 153,593 ms/op
# Warmup Iteration   9: 153,010 ms/op
# Warmup Iteration  10: 154,030 ms/op
Iteration   1: 153,678 ms/op
Iteration   2: 163,676 ms/op
Iteration   3: 143,323 ms/op
Iteration   4: 142,062 ms/op
Iteration   5: 141,895 ms/op
Iteration   6: 141,933 ms/op
Iteration   7: 143,034 ms/op
Iteration   8: 142,359 ms/op
Iteration   9: 141,443 ms/op
Iteration  10: 142,412 ms/op


Result "benchmarkFind":
  145,582 ±(99.9%) 11,057 ms/op [Average]
  (min, avg, max) = (141,443, 145,582, 163,676), stdev = 7,314
  CI (99.9%): [134,524, 156,639] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternSize = 128)

# Run progress: 42,92% complete, ETA 09:08:49
# Fork: 1 of 1
# Warmup Iteration   1: 363,424 ms/op
# Warmup Iteration   2: 319,758 ms/op
# Warmup Iteration   3: 316,935 ms/op
# Warmup Iteration   4: 318,405 ms/op
# Warmup Iteration   5: 318,764 ms/op
# Warmup Iteration   6: 319,694 ms/op
# Warmup Iteration   7: 319,607 ms/op
# Warmup Iteration   8: 322,646 ms/op
# Warmup Iteration   9: 321,129 ms/op
# Warmup Iteration  10: 321,369 ms/op
Iteration   1: 323,970 ms/op
Iteration   2: 322,949 ms/op
Iteration   3: 322,525 ms/op
Iteration   4: 321,963 ms/op
Iteration   5: 323,083 ms/op
Iteration   6: 323,014 ms/op
Iteration   7: 322,744 ms/op
Iteration   8: 322,862 ms/op
Iteration   9: 322,877 ms/op
Iteration  10: 322,576 ms/op


Result "benchmarkFind":
  322,856 ±(99.9%) 0,768 ms/op [Average]
  (min, avg, max) = (321,963, 322,856, 323,970), stdev = 0,508
  CI (99.9%): [322,088, 323,625] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternSize = 256)

# Run progress: 42,97% complete, ETA 09:08:26
# Fork: 1 of 1
# Warmup Iteration   1: 261,083 ms/op
# Warmup Iteration   2: 242,693 ms/op
# Warmup Iteration   3: 238,882 ms/op
# Warmup Iteration   4: 239,367 ms/op
# Warmup Iteration   5: 239,586 ms/op
# Warmup Iteration   6: 239,341 ms/op
# Warmup Iteration   7: 239,724 ms/op
# Warmup Iteration   8: 239,603 ms/op
# Warmup Iteration   9: 240,475 ms/op
# Warmup Iteration  10: 241,220 ms/op
Iteration   1: 242,141 ms/op
Iteration   2: 242,265 ms/op
Iteration   3: 242,068 ms/op
Iteration   4: 241,756 ms/op
Iteration   5: 242,104 ms/op
Iteration   6: 275,295 ms/op
Iteration   7: 239,045 ms/op
Iteration   8: 238,606 ms/op
Iteration   9: 238,814 ms/op
Iteration  10: 238,915 ms/op


Result "benchmarkFind":
  244,101 ±(99.9%) 16,748 ms/op [Average]
  (min, avg, max) = (238,606, 244,101, 275,295), stdev = 11,078
  CI (99.9%): [227,353, 260,849] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternSize = 2)

# Run progress: 43,01% complete, ETA 09:08:00
# Fork: 1 of 1
# Warmup Iteration   1: 315,055 ms/op
# Warmup Iteration   2: 262,212 ms/op
# Warmup Iteration   3: 262,623 ms/op
# Warmup Iteration   4: 261,077 ms/op
# Warmup Iteration   5: 262,151 ms/op
# Warmup Iteration   6: 265,064 ms/op
# Warmup Iteration   7: 262,411 ms/op
# Warmup Iteration   8: 263,064 ms/op
# Warmup Iteration   9: 262,864 ms/op
# Warmup Iteration  10: 266,518 ms/op
Iteration   1: 262,763 ms/op
Iteration   2: 262,012 ms/op
Iteration   3: 263,040 ms/op
Iteration   4: 264,303 ms/op
Iteration   5: 265,953 ms/op
Iteration   6: 262,623 ms/op
Iteration   7: 264,317 ms/op
Iteration   8: 264,777 ms/op
Iteration   9: 263,908 ms/op
Iteration  10: 264,189 ms/op


Result "benchmarkFind":
  263,788 ±(99.9%) 1,782 ms/op [Average]
  (min, avg, max) = (262,012, 263,788, 265,953), stdev = 1,179
  CI (99.9%): [262,006, 265,571] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternSize = 4)

# Run progress: 43,06% complete, ETA 09:07:28
# Fork: 1 of 1
# Warmup Iteration   1: 182,984 ms/op
# Warmup Iteration   2: 176,726 ms/op
# Warmup Iteration   3: 175,983 ms/op
# Warmup Iteration   4: 176,924 ms/op
# Warmup Iteration   5: 176,615 ms/op
# Warmup Iteration   6: 176,880 ms/op
# Warmup Iteration   7: 176,156 ms/op
# Warmup Iteration   8: 176,202 ms/op
# Warmup Iteration   9: 174,311 ms/op
# Warmup Iteration  10: 177,381 ms/op
Iteration   1: 176,756 ms/op
Iteration   2: 176,919 ms/op
Iteration   3: 176,228 ms/op
Iteration   4: 172,852 ms/op
Iteration   5: 152,365 ms/op
Iteration   6: 152,665 ms/op
Iteration   7: 151,194 ms/op
Iteration   8: 152,603 ms/op
Iteration   9: 151,800 ms/op
Iteration  10: 151,115 ms/op


Result "benchmarkFind":
  161,450 ±(99.9%) 18,619 ms/op [Average]
  (min, avg, max) = (151,115, 161,450, 176,919), stdev = 12,316
  CI (99.9%): [142,830, 180,069] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternSize = 8)

# Run progress: 43,11% complete, ETA 09:06:56
# Fork: 1 of 1
# Warmup Iteration   1: 93,316 ms/op
# Warmup Iteration   2: 91,240 ms/op
# Warmup Iteration   3: 92,109 ms/op
# Warmup Iteration   4: 90,582 ms/op
# Warmup Iteration   5: 91,014 ms/op
# Warmup Iteration   6: 90,328 ms/op
# Warmup Iteration   7: 91,440 ms/op
# Warmup Iteration   8: 85,162 ms/op
# Warmup Iteration   9: 77,857 ms/op
# Warmup Iteration  10: 86,048 ms/op
Iteration   1: 78,270 ms/op
Iteration   2: 78,281 ms/op
Iteration   3: 78,519 ms/op
Iteration   4: 78,026 ms/op
Iteration   5: 78,344 ms/op
Iteration   6: 78,030 ms/op
Iteration   7: 78,071 ms/op
Iteration   8: 78,087 ms/op
Iteration   9: 78,496 ms/op
Iteration  10: 79,143 ms/op


Result "benchmarkFind":
  78,327 ±(99.9%) 0,513 ms/op [Average]
  (min, avg, max) = (78,026, 78,327, 79,143), stdev = 0,340
  CI (99.9%): [77,813, 78,840] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternSize = 16)

# Run progress: 43,15% complete, ETA 09:06:22
# Fork: 1 of 1
# Warmup Iteration   1: 49,021 ms/op
# Warmup Iteration   2: 47,393 ms/op
# Warmup Iteration   3: 47,395 ms/op
# Warmup Iteration   4: 47,637 ms/op
# Warmup Iteration   5: 43,330 ms/op
# Warmup Iteration   6: 42,791 ms/op
# Warmup Iteration   7: 42,740 ms/op
# Warmup Iteration   8: 42,819 ms/op
# Warmup Iteration   9: 42,671 ms/op
# Warmup Iteration  10: 42,868 ms/op
Iteration   1: 42,717 ms/op
Iteration   2: 42,658 ms/op
Iteration   3: 42,621 ms/op
Iteration   4: 43,095 ms/op
Iteration   5: 42,819 ms/op
Iteration   6: 42,798 ms/op
Iteration   7: 42,833 ms/op
Iteration   8: 43,037 ms/op
Iteration   9: 42,764 ms/op
Iteration  10: 42,917 ms/op


Result "benchmarkFind":
  42,826 ±(99.9%) 0,232 ms/op [Average]
  (min, avg, max) = (42,621, 42,826, 43,095), stdev = 0,154
  CI (99.9%): [42,594, 43,058] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternSize = 32)

# Run progress: 43,20% complete, ETA 09:05:49
# Fork: 1 of 1
# Warmup Iteration   1: 30,758 ms/op
# Warmup Iteration   2: 30,047 ms/op
# Warmup Iteration   3: 28,983 ms/op
# Warmup Iteration   4: 27,457 ms/op
# Warmup Iteration   5: 27,396 ms/op
# Warmup Iteration   6: 27,433 ms/op
# Warmup Iteration   7: 27,534 ms/op
# Warmup Iteration   8: 27,593 ms/op
# Warmup Iteration   9: 27,451 ms/op
# Warmup Iteration  10: 27,459 ms/op
Iteration   1: 27,605 ms/op
Iteration   2: 27,498 ms/op
Iteration   3: 27,545 ms/op
Iteration   4: 27,484 ms/op
Iteration   5: 27,488 ms/op
Iteration   6: 27,440 ms/op
Iteration   7: 27,559 ms/op
Iteration   8: 27,582 ms/op
Iteration   9: 27,597 ms/op
Iteration  10: 27,599 ms/op


Result "benchmarkFind":
  27,540 ±(99.9%) 0,088 ms/op [Average]
  (min, avg, max) = (27,440, 27,540, 27,605), stdev = 0,058
  CI (99.9%): [27,451, 27,628] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternSize = 64)

# Run progress: 43,24% complete, ETA 09:05:16
# Fork: 1 of 1
# Warmup Iteration   1: 16,867 ms/op
# Warmup Iteration   2: 15,179 ms/op
# Warmup Iteration   3: 14,256 ms/op
# Warmup Iteration   4: 14,346 ms/op
# Warmup Iteration   5: 14,211 ms/op
# Warmup Iteration   6: 15,748 ms/op
# Warmup Iteration   7: 14,287 ms/op
# Warmup Iteration   8: 14,178 ms/op
# Warmup Iteration   9: 14,226 ms/op
# Warmup Iteration  10: 14,266 ms/op
Iteration   1: 14,245 ms/op
Iteration   2: 14,277 ms/op
Iteration   3: 14,227 ms/op
Iteration   4: 14,221 ms/op
Iteration   5: 14,268 ms/op
Iteration   6: 14,160 ms/op
Iteration   7: 14,338 ms/op
Iteration   8: 14,438 ms/op
Iteration   9: 14,303 ms/op
Iteration  10: 14,360 ms/op


Result "benchmarkFind":
  14,284 ±(99.9%) 0,121 ms/op [Average]
  (min, avg, max) = (14,160, 14,284, 14,438), stdev = 0,080
  CI (99.9%): [14,163, 14,404] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternSize = 128)

# Run progress: 43,29% complete, ETA 09:04:42
# Fork: 1 of 1
# Warmup Iteration   1: 32,593 ms/op
# Warmup Iteration   2: 29,219 ms/op
# Warmup Iteration   3: 30,067 ms/op
# Warmup Iteration   4: 28,808 ms/op
# Warmup Iteration   5: 28,559 ms/op
# Warmup Iteration   6: 28,717 ms/op
# Warmup Iteration   7: 28,785 ms/op
# Warmup Iteration   8: 29,018 ms/op
# Warmup Iteration   9: 29,066 ms/op
# Warmup Iteration  10: 29,613 ms/op
Iteration   1: 29,468 ms/op
Iteration   2: 29,423 ms/op
Iteration   3: 29,397 ms/op
Iteration   4: 29,765 ms/op
Iteration   5: 29,498 ms/op
Iteration   6: 29,232 ms/op
Iteration   7: 29,147 ms/op
Iteration   8: 29,150 ms/op
Iteration   9: 29,085 ms/op
Iteration  10: 29,438 ms/op


Result "benchmarkFind":
  29,360 ±(99.9%) 0,314 ms/op [Average]
  (min, avg, max) = (29,085, 29,360, 29,765), stdev = 0,208
  CI (99.9%): [29,046, 29,674] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternSize = 256)

# Run progress: 43,34% complete, ETA 09:04:08
# Fork: 1 of 1
# Warmup Iteration   1: 21,684 ms/op
# Warmup Iteration   2: 19,786 ms/op
# Warmup Iteration   3: 18,995 ms/op
# Warmup Iteration   4: 18,930 ms/op
# Warmup Iteration   5: 18,895 ms/op
# Warmup Iteration   6: 18,792 ms/op
# Warmup Iteration   7: 18,889 ms/op
# Warmup Iteration   8: 19,003 ms/op
# Warmup Iteration   9: 19,064 ms/op
# Warmup Iteration  10: 19,393 ms/op
Iteration   1: 19,239 ms/op
Iteration   2: 19,140 ms/op
Iteration   3: 19,237 ms/op
Iteration   4: 19,111 ms/op
Iteration   5: 19,226 ms/op
Iteration   6: 19,168 ms/op
Iteration   7: 19,330 ms/op
Iteration   8: 19,275 ms/op
Iteration   9: 19,478 ms/op
Iteration  10: 19,280 ms/op


Result "benchmarkFind":
  19,249 ±(99.9%) 0,159 ms/op [Average]
  (min, avg, max) = (19,111, 19,249, 19,478), stdev = 0,105
  CI (99.9%): [19,090, 19,407] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternSize = 2)

# Run progress: 43,38% complete, ETA 09:03:35
# Fork: 1 of 1
# Warmup Iteration   1: 1341,440 ms/op
# Warmup Iteration   2: 1439,636 ms/op
# Warmup Iteration   3: 1319,937 ms/op
# Warmup Iteration   4: 1251,180 ms/op
# Warmup Iteration   5: 1143,502 ms/op
# Warmup Iteration   6: 1137,303 ms/op
# Warmup Iteration   7: 1150,896 ms/op
# Warmup Iteration   8: 1138,431 ms/op
# Warmup Iteration   9: 1140,412 ms/op
# Warmup Iteration  10: 1132,823 ms/op
Iteration   1: 1135,711 ms/op
Iteration   2: 1143,078 ms/op
Iteration   3: 1133,791 ms/op
Iteration   4: 1136,529 ms/op
Iteration   5: 1140,538 ms/op
Iteration   6: 1140,776 ms/op
Iteration   7: 1139,338 ms/op
Iteration   8: 1203,175 ms/op
Iteration   9: 1183,089 ms/op
Iteration  10: 1143,753 ms/op


Result "benchmarkFind":
  1149,978 ±(99.9%) 35,442 ms/op [Average]
  (min, avg, max) = (1133,791, 1149,978, 1203,175), stdev = 23,443
  CI (99.9%): [1114,535, 1185,420] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternSize = 4)

# Run progress: 43,43% complete, ETA 09:03:07
# Fork: 1 of 1
# Warmup Iteration   1: 736,165 ms/op
# Warmup Iteration   2: 714,815 ms/op
# Warmup Iteration   3: 716,653 ms/op
# Warmup Iteration   4: 715,255 ms/op
# Warmup Iteration   5: 712,664 ms/op
# Warmup Iteration   6: 713,059 ms/op
# Warmup Iteration   7: 715,658 ms/op
# Warmup Iteration   8: 716,851 ms/op
# Warmup Iteration   9: 716,763 ms/op
# Warmup Iteration  10: 712,612 ms/op
Iteration   1: 713,666 ms/op
Iteration   2: 716,837 ms/op
Iteration   3: 714,549 ms/op
Iteration   4: 713,790 ms/op
Iteration   5: 710,721 ms/op
Iteration   6: 719,551 ms/op
Iteration   7: 710,703 ms/op
Iteration   8: 713,038 ms/op
Iteration   9: 713,965 ms/op
Iteration  10: 712,948 ms/op


Result "benchmarkFind":
  713,977 ±(99.9%) 3,999 ms/op [Average]
  (min, avg, max) = (710,703, 713,977, 719,551), stdev = 2,645
  CI (99.9%): [709,978, 717,976] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternSize = 8)

# Run progress: 43,47% complete, ETA 09:02:46
# Fork: 1 of 1
# Warmup Iteration   1: 330,883 ms/op
# Warmup Iteration   2: 321,890 ms/op
# Warmup Iteration   3: 321,245 ms/op
# Warmup Iteration   4: 320,156 ms/op
# Warmup Iteration   5: 359,443 ms/op
# Warmup Iteration   6: 317,045 ms/op
# Warmup Iteration   7: 316,218 ms/op
# Warmup Iteration   8: 317,231 ms/op
# Warmup Iteration   9: 317,007 ms/op
# Warmup Iteration  10: 318,983 ms/op
Iteration   1: 317,823 ms/op
Iteration   2: 317,650 ms/op
Iteration   3: 318,915 ms/op
Iteration   4: 317,458 ms/op
Iteration   5: 317,426 ms/op
Iteration   6: 317,707 ms/op
Iteration   7: 317,995 ms/op
Iteration   8: 318,056 ms/op
Iteration   9: 318,384 ms/op
Iteration  10: 317,724 ms/op


Result "benchmarkFind":
  317,914 ±(99.9%) 0,686 ms/op [Average]
  (min, avg, max) = (317,426, 317,914, 318,915), stdev = 0,454
  CI (99.9%): [317,228, 318,600] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternSize = 16)

# Run progress: 43,52% complete, ETA 09:02:20
# Fork: 1 of 1
# Warmup Iteration   1: 177,725 ms/op
# Warmup Iteration   2: 168,479 ms/op
# Warmup Iteration   3: 169,605 ms/op
# Warmup Iteration   4: 168,858 ms/op
# Warmup Iteration   5: 169,812 ms/op
# Warmup Iteration   6: 169,712 ms/op
# Warmup Iteration   7: 171,245 ms/op
# Warmup Iteration   8: 170,504 ms/op
# Warmup Iteration   9: 169,476 ms/op
# Warmup Iteration  10: 167,879 ms/op
Iteration   1: 167,681 ms/op
Iteration   2: 167,490 ms/op
Iteration   3: 167,854 ms/op
Iteration   4: 167,778 ms/op
Iteration   5: 152,966 ms/op
Iteration   6: 151,192 ms/op
Iteration   7: 151,676 ms/op
Iteration   8: 151,931 ms/op
Iteration   9: 151,914 ms/op
Iteration  10: 151,510 ms/op


Result "benchmarkFind":
  158,199 ±(99.9%) 12,383 ms/op [Average]
  (min, avg, max) = (151,192, 158,199, 167,854), stdev = 8,190
  CI (99.9%): [145,816, 170,582] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternSize = 32)

# Run progress: 43,57% complete, ETA 09:01:49
# Fork: 1 of 1
# Warmup Iteration   1: 106,025 ms/op
# Warmup Iteration   2: 102,110 ms/op
# Warmup Iteration   3: 101,994 ms/op
# Warmup Iteration   4: 101,955 ms/op
# Warmup Iteration   5: 101,665 ms/op
# Warmup Iteration   6: 101,518 ms/op
# Warmup Iteration   7: 101,771 ms/op
# Warmup Iteration   8: 101,638 ms/op
# Warmup Iteration   9: 96,641 ms/op
# Warmup Iteration  10: 93,284 ms/op
Iteration   1: 93,383 ms/op
Iteration   2: 92,664 ms/op
Iteration   3: 93,242 ms/op
Iteration   4: 92,190 ms/op
Iteration   5: 92,156 ms/op
Iteration   6: 98,973 ms/op
Iteration   7: 92,331 ms/op
Iteration   8: 92,376 ms/op
Iteration   9: 92,363 ms/op
Iteration  10: 92,457 ms/op


Result "benchmarkFind":
  93,214 ±(99.9%) 3,125 ms/op [Average]
  (min, avg, max) = (92,156, 93,214, 98,973), stdev = 2,067
  CI (99.9%): [90,089, 96,338] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternSize = 64)

# Run progress: 43,61% complete, ETA 09:01:17
# Fork: 1 of 1
# Warmup Iteration   1: 81,001 ms/op
# Warmup Iteration   2: 78,434 ms/op
# Warmup Iteration   3: 78,712 ms/op
# Warmup Iteration   4: 78,833 ms/op
# Warmup Iteration   5: 78,399 ms/op
# Warmup Iteration   6: 78,449 ms/op
# Warmup Iteration   7: 75,016 ms/op
# Warmup Iteration   8: 71,616 ms/op
# Warmup Iteration   9: 71,604 ms/op
# Warmup Iteration  10: 71,596 ms/op
Iteration   1: 71,209 ms/op
Iteration   2: 71,829 ms/op
Iteration   3: 71,552 ms/op
Iteration   4: 71,653 ms/op
Iteration   5: 71,341 ms/op
Iteration   6: 71,616 ms/op
Iteration   7: 71,163 ms/op
Iteration   8: 70,845 ms/op
Iteration   9: 70,944 ms/op
Iteration  10: 70,565 ms/op


Result "benchmarkFind":
  71,272 ±(99.9%) 0,609 ms/op [Average]
  (min, avg, max) = (70,565, 71,272, 71,829), stdev = 0,403
  CI (99.9%): [70,662, 71,881] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternSize = 128)

# Run progress: 43,66% complete, ETA 09:00:45
# Fork: 1 of 1
# Warmup Iteration   1: 204,462 ms/op
# Warmup Iteration   2: 183,008 ms/op
# Warmup Iteration   3: 181,048 ms/op
# Warmup Iteration   4: 180,630 ms/op
# Warmup Iteration   5: 180,829 ms/op
# Warmup Iteration   6: 181,153 ms/op
# Warmup Iteration   7: 181,863 ms/op
# Warmup Iteration   8: 181,213 ms/op
# Warmup Iteration   9: 182,366 ms/op
# Warmup Iteration  10: 184,601 ms/op
Iteration   1: 184,106 ms/op
Iteration   2: 183,278 ms/op
Iteration   3: 183,395 ms/op
Iteration   4: 184,067 ms/op
Iteration   5: 184,592 ms/op
Iteration   6: 183,139 ms/op
Iteration   7: 182,582 ms/op
Iteration   8: 183,565 ms/op
Iteration   9: 184,001 ms/op
Iteration  10: 183,556 ms/op


Result "benchmarkFind":
  183,628 ±(99.9%) 0,874 ms/op [Average]
  (min, avg, max) = (182,582, 183,628, 184,592), stdev = 0,578
  CI (99.9%): [182,754, 184,502] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternSize = 256)

# Run progress: 43,70% complete, ETA 09:00:15
# Fork: 1 of 1
# Warmup Iteration   1: 137,818 ms/op
# Warmup Iteration   2: 121,312 ms/op
# Warmup Iteration   3: 120,834 ms/op
# Warmup Iteration   4: 120,607 ms/op
# Warmup Iteration   5: 121,348 ms/op
# Warmup Iteration   6: 121,056 ms/op
# Warmup Iteration   7: 138,067 ms/op
# Warmup Iteration   8: 120,639 ms/op
# Warmup Iteration   9: 122,265 ms/op
# Warmup Iteration  10: 121,230 ms/op
Iteration   1: 120,385 ms/op
Iteration   2: 120,527 ms/op
Iteration   3: 120,378 ms/op
Iteration   4: 119,935 ms/op
Iteration   5: 120,993 ms/op
Iteration   6: 120,581 ms/op
Iteration   7: 121,038 ms/op
Iteration   8: 121,579 ms/op
Iteration   9: 122,222 ms/op
Iteration  10: 122,387 ms/op


Result "benchmarkFind":
  121,002 ±(99.9%) 1,240 ms/op [Average]
  (min, avg, max) = (119,935, 121,002, 122,387), stdev = 0,820
  CI (99.9%): [119,763, 122,242] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternSize = 2)

# Run progress: 43,75% complete, ETA 08:59:45
# Fork: 1 of 1
# Warmup Iteration   1: 5019,771 ms/op
# Warmup Iteration   2: 4984,569 ms/op
# Warmup Iteration   3: 4988,784 ms/op
# Warmup Iteration   4: 4644,159 ms/op
# Warmup Iteration   5: 4060,444 ms/op
# Warmup Iteration   6: 4075,692 ms/op
# Warmup Iteration   7: 4084,786 ms/op
# Warmup Iteration   8: 4076,816 ms/op
# Warmup Iteration   9: 4167,956 ms/op
# Warmup Iteration  10: 4018,542 ms/op
Iteration   1: 4015,981 ms/op
Iteration   2: 4024,171 ms/op
Iteration   3: 4104,482 ms/op
Iteration   4: 4015,734 ms/op
Iteration   5: 4017,338 ms/op
Iteration   6: 4015,596 ms/op
Iteration   7: 4037,979 ms/op
Iteration   8: 4018,324 ms/op
Iteration   9: 4017,146 ms/op
Iteration  10: 4029,072 ms/op


Result "benchmarkFind":
  4029,582 ±(99.9%) 41,292 ms/op [Average]
  (min, avg, max) = (4015,596, 4029,582, 4104,482), stdev = 27,312
  CI (99.9%): [3988,290, 4070,875] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternSize = 4)

# Run progress: 43,80% complete, ETA 09:00:41
# Fork: 1 of 1
# Warmup Iteration   1: 2675,139 ms/op
# Warmup Iteration   2: 2672,755 ms/op
# Warmup Iteration   3: 2668,919 ms/op
# Warmup Iteration   4: 2738,595 ms/op
# Warmup Iteration   5: 2667,356 ms/op
# Warmup Iteration   6: 2690,413 ms/op
# Warmup Iteration   7: 2667,572 ms/op
# Warmup Iteration   8: 2678,717 ms/op
# Warmup Iteration   9: 2654,135 ms/op
# Warmup Iteration  10: 2656,155 ms/op
Iteration   1: 2655,741 ms/op
Iteration   2: 2661,330 ms/op
Iteration   3: 2662,208 ms/op
Iteration   4: 2664,338 ms/op
Iteration   5: 2679,097 ms/op
Iteration   6: 2651,563 ms/op
Iteration   7: 2661,503 ms/op
Iteration   8: 2649,183 ms/op
Iteration   9: 2657,532 ms/op
Iteration  10: 2662,421 ms/op


Result "benchmarkFind":
  2660,492 ±(99.9%) 12,429 ms/op [Average]
  (min, avg, max) = (2649,183, 2660,492, 2679,097), stdev = 8,221
  CI (99.9%): [2648,062, 2672,921] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternSize = 8)

# Run progress: 43,84% complete, ETA 09:00:57
# Fork: 1 of 1
# Warmup Iteration   1: 1253,661 ms/op
# Warmup Iteration   2: 1220,439 ms/op
# Warmup Iteration   3: 1226,266 ms/op
# Warmup Iteration   4: 1219,011 ms/op
# Warmup Iteration   5: 1219,019 ms/op
# Warmup Iteration   6: 1224,849 ms/op
# Warmup Iteration   7: 1223,579 ms/op
# Warmup Iteration   8: 1284,231 ms/op
# Warmup Iteration   9: 1225,814 ms/op
# Warmup Iteration  10: 1231,259 ms/op
Iteration   1: 1224,720 ms/op
Iteration   2: 1226,750 ms/op
Iteration   3: 1222,844 ms/op
Iteration   4: 1232,027 ms/op
Iteration   5: 1220,060 ms/op
Iteration   6: 1226,803 ms/op
Iteration   7: 1217,645 ms/op
Iteration   8: 1215,975 ms/op
Iteration   9: 1224,161 ms/op
Iteration  10: 1234,905 ms/op


Result "benchmarkFind":
  1224,589 ±(99.9%) 8,979 ms/op [Average]
  (min, avg, max) = (1215,975, 1224,589, 1234,905), stdev = 5,939
  CI (99.9%): [1215,610, 1233,569] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternSize = 16)

# Run progress: 43,89% complete, ETA 09:00:35
# Fork: 1 of 1
# Warmup Iteration   1: 652,541 ms/op
# Warmup Iteration   2: 634,390 ms/op
# Warmup Iteration   3: 630,965 ms/op
# Warmup Iteration   4: 629,497 ms/op
# Warmup Iteration   5: 630,413 ms/op
# Warmup Iteration   6: 632,675 ms/op
# Warmup Iteration   7: 629,813 ms/op
# Warmup Iteration   8: 636,134 ms/op
# Warmup Iteration   9: 632,218 ms/op
# Warmup Iteration  10: 632,614 ms/op
Iteration   1: 629,424 ms/op
Iteration   2: 631,059 ms/op
Iteration   3: 634,756 ms/op
Iteration   4: 634,700 ms/op
Iteration   5: 627,670 ms/op
Iteration   6: 636,295 ms/op
Iteration   7: 631,108 ms/op
Iteration   8: 630,018 ms/op
Iteration   9: 633,153 ms/op
Iteration  10: 629,860 ms/op


Result "benchmarkFind":
  631,804 ±(99.9%) 4,212 ms/op [Average]
  (min, avg, max) = (627,670, 631,804, 636,295), stdev = 2,786
  CI (99.9%): [627,592, 636,016] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternSize = 32)

# Run progress: 43,93% complete, ETA 09:00:15
# Fork: 1 of 1
# Warmup Iteration   1: 348,580 ms/op
# Warmup Iteration   2: 340,205 ms/op
# Warmup Iteration   3: 339,774 ms/op
# Warmup Iteration   4: 339,209 ms/op
# Warmup Iteration   5: 340,330 ms/op
# Warmup Iteration   6: 339,172 ms/op
# Warmup Iteration   7: 339,626 ms/op
# Warmup Iteration   8: 375,331 ms/op
# Warmup Iteration   9: 344,298 ms/op
# Warmup Iteration  10: 342,340 ms/op
Iteration   1: 343,210 ms/op
Iteration   2: 343,541 ms/op
Iteration   3: 341,352 ms/op
Iteration   4: 344,316 ms/op
Iteration   5: 344,562 ms/op
Iteration   6: 341,387 ms/op
Iteration   7: 342,083 ms/op
Iteration   8: 342,743 ms/op
Iteration   9: 343,672 ms/op
Iteration  10: 341,379 ms/op


Result "benchmarkFind":
  342,824 ±(99.9%) 1,852 ms/op [Average]
  (min, avg, max) = (341,352, 342,824, 344,562), stdev = 1,225
  CI (99.9%): [340,972, 344,676] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternSize = 64)

# Run progress: 43,98% complete, ETA 08:59:48
# Fork: 1 of 1
# Warmup Iteration   1: 278,137 ms/op
# Warmup Iteration   2: 273,018 ms/op
# Warmup Iteration   3: 270,104 ms/op
# Warmup Iteration   4: 268,883 ms/op
# Warmup Iteration   5: 269,037 ms/op
# Warmup Iteration   6: 269,463 ms/op
# Warmup Iteration   7: 269,879 ms/op
# Warmup Iteration   8: 269,166 ms/op
# Warmup Iteration   9: 268,738 ms/op
# Warmup Iteration  10: 270,247 ms/op
Iteration   1: 271,613 ms/op
Iteration   2: 269,667 ms/op
Iteration   3: 269,725 ms/op
Iteration   4: 269,074 ms/op
Iteration   5: 269,724 ms/op
Iteration   6: 269,075 ms/op
Iteration   7: 269,012 ms/op
Iteration   8: 269,062 ms/op
Iteration   9: 270,572 ms/op
Iteration  10: 270,137 ms/op


Result "benchmarkFind":
  269,766 ±(99.9%) 1,258 ms/op [Average]
  (min, avg, max) = (269,012, 269,766, 271,613), stdev = 0,832
  CI (99.9%): [268,508, 271,024] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternSize = 128)

# Run progress: 44,03% complete, ETA 08:59:23
# Fork: 1 of 1
# Warmup Iteration   1: 736,259 ms/op
# Warmup Iteration   2: 691,560 ms/op
# Warmup Iteration   3: 684,203 ms/op
# Warmup Iteration   4: 682,312 ms/op
# Warmup Iteration   5: 682,721 ms/op
# Warmup Iteration   6: 684,911 ms/op
# Warmup Iteration   7: 686,576 ms/op
# Warmup Iteration   8: 686,048 ms/op
# Warmup Iteration   9: 690,341 ms/op
# Warmup Iteration  10: 742,370 ms/op
Iteration   1: 689,560 ms/op
Iteration   2: 691,230 ms/op
Iteration   3: 690,948 ms/op
Iteration   4: 690,876 ms/op
Iteration   5: 691,282 ms/op
Iteration   6: 691,320 ms/op
Iteration   7: 687,696 ms/op
Iteration   8: 690,133 ms/op
Iteration   9: 685,786 ms/op
Iteration  10: 688,796 ms/op


Result "benchmarkFind":
  689,763 ±(99.9%) 2,793 ms/op [Average]
  (min, avg, max) = (685,786, 689,763, 691,320), stdev = 1,848
  CI (99.9%): [686,969, 692,556] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternSize = 256)

# Run progress: 44,07% complete, ETA 08:59:06
# Fork: 1 of 1
# Warmup Iteration   1: 548,210 ms/op
# Warmup Iteration   2: 492,055 ms/op
# Warmup Iteration   3: 485,879 ms/op
# Warmup Iteration   4: 485,959 ms/op
# Warmup Iteration   5: 485,522 ms/op
# Warmup Iteration   6: 486,813 ms/op
# Warmup Iteration   7: 487,684 ms/op
# Warmup Iteration   8: 486,935 ms/op
# Warmup Iteration   9: 490,105 ms/op
# Warmup Iteration  10: 491,324 ms/op
Iteration   1: 490,663 ms/op
Iteration   2: 491,537 ms/op
Iteration   3: 491,137 ms/op
Iteration   4: 491,013 ms/op
Iteration   5: 489,979 ms/op
Iteration   6: 490,508 ms/op
Iteration   7: 491,506 ms/op
Iteration   8: 491,555 ms/op
Iteration   9: 490,953 ms/op
Iteration  10: 491,871 ms/op


Result "benchmarkFind":
  491,072 ±(99.9%) 0,870 ms/op [Average]
  (min, avg, max) = (489,979, 491,072, 491,871), stdev = 0,575
  CI (99.9%): [490,203, 491,942] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternSize = 2)

# Run progress: 44,12% complete, ETA 08:58:50
# Fork: 1 of 1
# Warmup Iteration   1: 0,194 ms/op
# Warmup Iteration   2: 0,179 ms/op
# Warmup Iteration   3: 0,176 ms/op
# Warmup Iteration   4: 0,176 ms/op
# Warmup Iteration   5: 0,177 ms/op
# Warmup Iteration   6: 0,176 ms/op
# Warmup Iteration   7: 0,177 ms/op
# Warmup Iteration   8: 0,178 ms/op
# Warmup Iteration   9: 0,177 ms/op
# Warmup Iteration  10: 0,191 ms/op
Iteration   1: 0,183 ms/op
Iteration   2: 0,181 ms/op
Iteration   3: 0,182 ms/op
Iteration   4: 0,177 ms/op
Iteration   5: 0,175 ms/op
Iteration   6: 0,177 ms/op
Iteration   7: 0,176 ms/op
Iteration   8: 0,177 ms/op
Iteration   9: 0,178 ms/op
Iteration  10: 0,179 ms/op


Result "benchmarkFind":
  0,178 ±(99.9%) 0,004 ms/op [Average]
  (min, avg, max) = (0,175, 0,178, 0,183), stdev = 0,003
  CI (99.9%): [0,174, 0,183] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternSize = 4)

# Run progress: 44,16% complete, ETA 08:58:16
# Fork: 1 of 1
# Warmup Iteration   1: 0,635 ms/op
# Warmup Iteration   2: 0,581 ms/op
# Warmup Iteration   3: 0,580 ms/op
# Warmup Iteration   4: 0,579 ms/op
# Warmup Iteration   5: 0,581 ms/op
# Warmup Iteration   6: 0,579 ms/op
# Warmup Iteration   7: 0,581 ms/op
# Warmup Iteration   8: 0,579 ms/op
# Warmup Iteration   9: 0,584 ms/op
# Warmup Iteration  10: 0,583 ms/op
Iteration   1: 0,583 ms/op
Iteration   2: 0,584 ms/op
Iteration   3: 0,586 ms/op
Iteration   4: 0,588 ms/op
Iteration   5: 0,582 ms/op
Iteration   6: 0,584 ms/op
Iteration   7: 0,580 ms/op
Iteration   8: 0,587 ms/op
Iteration   9: 0,587 ms/op
Iteration  10: 0,588 ms/op


Result "benchmarkFind":
  0,585 ±(99.9%) 0,004 ms/op [Average]
  (min, avg, max) = (0,580, 0,585, 0,588), stdev = 0,003
  CI (99.9%): [0,580, 0,589] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternSize = 8)

# Run progress: 44,21% complete, ETA 08:57:41
# Fork: 1 of 1
# Warmup Iteration   1: 42,164 ms/op
# Warmup Iteration   2: 38,681 ms/op
# Warmup Iteration   3: 38,419 ms/op
# Warmup Iteration   4: 38,224 ms/op
# Warmup Iteration   5: 38,580 ms/op
# Warmup Iteration   6: 38,221 ms/op
# Warmup Iteration   7: 38,507 ms/op
# Warmup Iteration   8: 38,097 ms/op
# Warmup Iteration   9: 38,200 ms/op
# Warmup Iteration  10: 38,158 ms/op
Iteration   1: 38,077 ms/op
Iteration   2: 38,452 ms/op
Iteration   3: 37,925 ms/op
Iteration   4: 38,461 ms/op
Iteration   5: 38,118 ms/op
Iteration   6: 38,332 ms/op
Iteration   7: 38,235 ms/op
Iteration   8: 38,020 ms/op
Iteration   9: 38,460 ms/op
Iteration  10: 38,289 ms/op


Result "benchmarkFind":
  38,237 ±(99.9%) 0,295 ms/op [Average]
  (min, avg, max) = (37,925, 38,237, 38,461), stdev = 0,195
  CI (99.9%): [37,942, 38,531] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternSize = 16)

# Run progress: 44,26% complete, ETA 08:57:08
# Fork: 1 of 1
# Warmup Iteration   1: 606,251 ms/op
# Warmup Iteration   2: 583,426 ms/op
# Warmup Iteration   3: 583,207 ms/op
# Warmup Iteration   4: 580,434 ms/op
# Warmup Iteration   5: 579,169 ms/op
# Warmup Iteration   6: 584,870 ms/op
# Warmup Iteration   7: 616,359 ms/op
# Warmup Iteration   8: 585,159 ms/op
# Warmup Iteration   9: 582,394 ms/op
# Warmup Iteration  10: 581,617 ms/op
Iteration   1: 584,328 ms/op
Iteration   2: 593,807 ms/op
Iteration   3: 577,501 ms/op
Iteration   4: 581,162 ms/op
Iteration   5: 581,403 ms/op
Iteration   6: 585,353 ms/op
Iteration   7: 580,149 ms/op
Iteration   8: 580,151 ms/op
Iteration   9: 582,297 ms/op
Iteration  10: 578,966 ms/op


Result "benchmarkFind":
  582,512 ±(99.9%) 6,963 ms/op [Average]
  (min, avg, max) = (577,501, 582,512, 593,807), stdev = 4,605
  CI (99.9%): [575,549, 589,475] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternSize = 32)

# Run progress: 44,30% complete, ETA 08:56:39
# Fork: 1 of 1
# Warmup Iteration   1: 593,095 ms/op
# Warmup Iteration   2: 575,818 ms/op
# Warmup Iteration   3: 591,977 ms/op
# Warmup Iteration   4: 565,623 ms/op
# Warmup Iteration   5: 581,058 ms/op
# Warmup Iteration   6: 572,365 ms/op
# Warmup Iteration   7: 566,222 ms/op
# Warmup Iteration   8: 568,669 ms/op
# Warmup Iteration   9: 571,128 ms/op
# Warmup Iteration  10: 568,540 ms/op
Iteration   1: 569,073 ms/op
Iteration   2: 566,798 ms/op
Iteration   3: 569,258 ms/op
Iteration   4: 568,140 ms/op
Iteration   5: 570,504 ms/op
Iteration   6: 568,901 ms/op
Iteration   7: 569,821 ms/op
Iteration   8: 569,372 ms/op
Iteration   9: 570,172 ms/op
Iteration  10: 568,856 ms/op


Result "benchmarkFind":
  569,089 ±(99.9%) 1,598 ms/op [Average]
  (min, avg, max) = (566,798, 569,089, 570,504), stdev = 1,057
  CI (99.9%): [567,491, 570,688] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternSize = 64)

# Run progress: 44,35% complete, ETA 08:56:09
# Fork: 1 of 1
# Warmup Iteration   1: 599,220 ms/op
# Warmup Iteration   2: 585,527 ms/op
# Warmup Iteration   3: 577,064 ms/op
# Warmup Iteration   4: 580,879 ms/op
# Warmup Iteration   5: 578,737 ms/op
# Warmup Iteration   6: 579,574 ms/op
# Warmup Iteration   7: 577,096 ms/op
# Warmup Iteration   8: 578,466 ms/op
# Warmup Iteration   9: 582,708 ms/op
# Warmup Iteration  10: 582,033 ms/op
Iteration   1: 578,203 ms/op
Iteration   2: 582,125 ms/op
Iteration   3: 579,135 ms/op
Iteration   4: 581,866 ms/op
Iteration   5: 579,435 ms/op
Iteration   6: 579,942 ms/op
Iteration   7: 613,390 ms/op
Iteration   8: 571,816 ms/op
Iteration   9: 570,982 ms/op
Iteration  10: 570,568 ms/op


Result "benchmarkFind":
  580,746 ±(99.9%) 18,577 ms/op [Average]
  (min, avg, max) = (570,568, 580,746, 613,390), stdev = 12,288
  CI (99.9%): [562,169, 599,324] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternSize = 128)

# Run progress: 44,39% complete, ETA 08:55:40
# Fork: 1 of 1
# Warmup Iteration   1: 647,129 ms/op
# Warmup Iteration   2: 621,685 ms/op
# Warmup Iteration   3: 621,712 ms/op
# Warmup Iteration   4: 626,579 ms/op
# Warmup Iteration   5: 624,142 ms/op
# Warmup Iteration   6: 622,688 ms/op
# Warmup Iteration   7: 625,942 ms/op
# Warmup Iteration   8: 621,401 ms/op
# Warmup Iteration   9: 622,165 ms/op
# Warmup Iteration  10: 621,083 ms/op
Iteration   1: 618,476 ms/op
Iteration   2: 621,716 ms/op
Iteration   3: 626,273 ms/op
Iteration   4: 622,739 ms/op
Iteration   5: 624,295 ms/op
Iteration   6: 623,754 ms/op
Iteration   7: 623,368 ms/op
Iteration   8: 622,663 ms/op
Iteration   9: 624,489 ms/op
Iteration  10: 622,901 ms/op


Result "benchmarkFind":
  623,068 ±(99.9%) 3,089 ms/op [Average]
  (min, avg, max) = (618,476, 623,068, 626,273), stdev = 2,043
  CI (99.9%): [619,979, 626,157] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternSize = 256)

# Run progress: 44,44% complete, ETA 08:55:12
# Fork: 1 of 1
# Warmup Iteration   1: 610,044 ms/op
# Warmup Iteration   2: 592,567 ms/op
# Warmup Iteration   3: 586,244 ms/op
# Warmup Iteration   4: 587,651 ms/op
# Warmup Iteration   5: 587,471 ms/op
# Warmup Iteration   6: 592,885 ms/op
# Warmup Iteration   7: 586,129 ms/op
# Warmup Iteration   8: 586,556 ms/op
# Warmup Iteration   9: 587,654 ms/op
# Warmup Iteration  10: 589,289 ms/op
Iteration   1: 588,114 ms/op
Iteration   2: 586,041 ms/op
Iteration   3: 590,131 ms/op
Iteration   4: 589,451 ms/op
Iteration   5: 586,925 ms/op
Iteration   6: 587,959 ms/op
Iteration   7: 587,094 ms/op
Iteration   8: 586,272 ms/op
Iteration   9: 586,118 ms/op
Iteration  10: 589,384 ms/op


Result "benchmarkFind":
  587,749 ±(99.9%) 2,270 ms/op [Average]
  (min, avg, max) = (586,041, 587,749, 590,131), stdev = 1,501
  CI (99.9%): [585,479, 590,019] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternSize = 2)

# Run progress: 44,49% complete, ETA 08:54:44
# Fork: 1 of 1
# Warmup Iteration   1: 0,570 ms/op
# Warmup Iteration   2: 0,540 ms/op
# Warmup Iteration   3: 0,518 ms/op
# Warmup Iteration   4: 0,519 ms/op
# Warmup Iteration   5: 0,593 ms/op
# Warmup Iteration   6: 0,525 ms/op
# Warmup Iteration   7: 0,527 ms/op
# Warmup Iteration   8: 0,527 ms/op
# Warmup Iteration   9: 0,527 ms/op
# Warmup Iteration  10: 0,528 ms/op
Iteration   1: 0,528 ms/op
Iteration   2: 0,526 ms/op
Iteration   3: 0,527 ms/op
Iteration   4: 0,532 ms/op
Iteration   5: 0,530 ms/op
Iteration   6: 0,536 ms/op
Iteration   7: 0,534 ms/op
Iteration   8: 0,529 ms/op
Iteration   9: 0,532 ms/op
Iteration  10: 0,535 ms/op


Result "benchmarkFind":
  0,531 ±(99.9%) 0,005 ms/op [Average]
  (min, avg, max) = (0,526, 0,531, 0,536), stdev = 0,004
  CI (99.9%): [0,525, 0,536] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternSize = 4)

# Run progress: 44,53% complete, ETA 08:54:09
# Fork: 1 of 1
# Warmup Iteration   1: 21,927 ms/op
# Warmup Iteration   2: 20,487 ms/op
# Warmup Iteration   3: 20,551 ms/op
# Warmup Iteration   4: 20,469 ms/op
# Warmup Iteration   5: 20,615 ms/op
# Warmup Iteration   6: 20,419 ms/op
# Warmup Iteration   7: 20,325 ms/op
# Warmup Iteration   8: 20,364 ms/op
# Warmup Iteration   9: 20,373 ms/op
# Warmup Iteration  10: 20,363 ms/op
Iteration   1: 20,333 ms/op
Iteration   2: 20,323 ms/op
Iteration   3: 20,391 ms/op
Iteration   4: 20,351 ms/op
Iteration   5: 20,379 ms/op
Iteration   6: 20,319 ms/op
Iteration   7: 20,487 ms/op
Iteration   8: 20,355 ms/op
Iteration   9: 20,302 ms/op
Iteration  10: 20,319 ms/op


Result "benchmarkFind":
  20,356 ±(99.9%) 0,081 ms/op [Average]
  (min, avg, max) = (20,302, 20,356, 20,487), stdev = 0,054
  CI (99.9%): [20,274, 20,437] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternSize = 8)

# Run progress: 44,58% complete, ETA 08:53:36
# Fork: 1 of 1
# Warmup Iteration   1: 220,289 ms/op
# Warmup Iteration   2: 202,265 ms/op
# Warmup Iteration   3: 203,079 ms/op
# Warmup Iteration   4: 211,113 ms/op
# Warmup Iteration   5: 213,410 ms/op
# Warmup Iteration   6: 212,770 ms/op
# Warmup Iteration   7: 212,129 ms/op
# Warmup Iteration   8: 212,255 ms/op
# Warmup Iteration   9: 211,404 ms/op
# Warmup Iteration  10: 211,833 ms/op
Iteration   1: 211,897 ms/op
Iteration   2: 213,265 ms/op
Iteration   3: 211,719 ms/op
Iteration   4: 211,402 ms/op
Iteration   5: 211,841 ms/op
Iteration   6: 211,820 ms/op
Iteration   7: 211,556 ms/op
Iteration   8: 212,436 ms/op
Iteration   9: 211,305 ms/op
Iteration  10: 211,886 ms/op


Result "benchmarkFind":
  211,913 ±(99.9%) 0,860 ms/op [Average]
  (min, avg, max) = (211,305, 211,913, 213,265), stdev = 0,569
  CI (99.9%): [211,053, 212,773] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternSize = 16)

# Run progress: 44,62% complete, ETA 08:53:04
# Fork: 1 of 1
# Warmup Iteration   1: 272,461 ms/op
# Warmup Iteration   2: 237,235 ms/op
# Warmup Iteration   3: 239,102 ms/op
# Warmup Iteration   4: 239,007 ms/op
# Warmup Iteration   5: 238,102 ms/op
# Warmup Iteration   6: 238,128 ms/op
# Warmup Iteration   7: 237,993 ms/op
# Warmup Iteration   8: 238,997 ms/op
# Warmup Iteration   9: 237,640 ms/op
# Warmup Iteration  10: 237,946 ms/op
Iteration   1: 238,405 ms/op
Iteration   2: 237,084 ms/op
Iteration   3: 237,559 ms/op
Iteration   4: 238,415 ms/op
Iteration   5: 237,213 ms/op
Iteration   6: 238,050 ms/op
Iteration   7: 237,485 ms/op
Iteration   8: 205,870 ms/op
Iteration   9: 201,492 ms/op
Iteration  10: 202,323 ms/op


Result "benchmarkFind":
  227,389 ±(99.9%) 25,270 ms/op [Average]
  (min, avg, max) = (201,492, 227,389, 238,415), stdev = 16,715
  CI (99.9%): [202,119, 252,659] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternSize = 32)

# Run progress: 44,67% complete, ETA 08:52:34
# Fork: 1 of 1
# Warmup Iteration   1: 227,832 ms/op
# Warmup Iteration   2: 224,091 ms/op
# Warmup Iteration   3: 223,783 ms/op
# Warmup Iteration   4: 223,075 ms/op
# Warmup Iteration   5: 223,103 ms/op
# Warmup Iteration   6: 221,843 ms/op
# Warmup Iteration   7: 221,760 ms/op
# Warmup Iteration   8: 223,395 ms/op
# Warmup Iteration   9: 223,732 ms/op
# Warmup Iteration  10: 222,149 ms/op
Iteration   1: 225,175 ms/op
Iteration   2: 222,090 ms/op
Iteration   3: 223,222 ms/op
Iteration   4: 224,004 ms/op
Iteration   5: 222,616 ms/op
Iteration   6: 223,194 ms/op
Iteration   7: 221,121 ms/op
Iteration   8: 201,892 ms/op
Iteration   9: 200,349 ms/op
Iteration  10: 201,818 ms/op


Result "benchmarkFind":
  216,548 ±(99.9%) 15,947 ms/op [Average]
  (min, avg, max) = (200,349, 216,548, 225,175), stdev = 10,548
  CI (99.9%): [200,601, 232,495] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternSize = 64)

# Run progress: 44,72% complete, ETA 08:52:03
# Fork: 1 of 1
# Warmup Iteration   1: 233,458 ms/op
# Warmup Iteration   2: 226,957 ms/op
# Warmup Iteration   3: 226,765 ms/op
# Warmup Iteration   4: 226,670 ms/op
# Warmup Iteration   5: 226,986 ms/op
# Warmup Iteration   6: 226,022 ms/op
# Warmup Iteration   7: 228,075 ms/op
# Warmup Iteration   8: 226,828 ms/op
# Warmup Iteration   9: 225,378 ms/op
# Warmup Iteration  10: 225,644 ms/op
Iteration   1: 226,728 ms/op
Iteration   2: 235,773 ms/op
Iteration   3: 223,534 ms/op
Iteration   4: 222,890 ms/op
Iteration   5: 222,499 ms/op
Iteration   6: 222,468 ms/op
Iteration   7: 219,615 ms/op
Iteration   8: 198,617 ms/op
Iteration   9: 198,492 ms/op
Iteration  10: 198,360 ms/op


Result "benchmarkFind":
  216,898 ±(99.9%) 20,279 ms/op [Average]
  (min, avg, max) = (198,360, 216,898, 235,773), stdev = 13,413
  CI (99.9%): [196,619, 237,177] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternSize = 128)

# Run progress: 44,76% complete, ETA 08:51:34
# Fork: 1 of 1
# Warmup Iteration   1: 242,573 ms/op
# Warmup Iteration   2: 232,900 ms/op
# Warmup Iteration   3: 232,446 ms/op
# Warmup Iteration   4: 231,700 ms/op
# Warmup Iteration   5: 230,678 ms/op
# Warmup Iteration   6: 231,505 ms/op
# Warmup Iteration   7: 231,904 ms/op
# Warmup Iteration   8: 231,482 ms/op
# Warmup Iteration   9: 233,662 ms/op
# Warmup Iteration  10: 231,849 ms/op
Iteration   1: 232,377 ms/op
Iteration   2: 230,978 ms/op
Iteration   3: 229,859 ms/op
Iteration   4: 231,961 ms/op
Iteration   5: 231,461 ms/op
Iteration   6: 231,591 ms/op
Iteration   7: 230,077 ms/op
Iteration   8: 211,007 ms/op
Iteration   9: 211,381 ms/op
Iteration  10: 209,664 ms/op


Result "benchmarkFind":
  225,035 ±(99.9%) 15,031 ms/op [Average]
  (min, avg, max) = (209,664, 225,035, 232,377), stdev = 9,942
  CI (99.9%): [210,004, 240,067] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternSize = 256)

# Run progress: 44,81% complete, ETA 08:51:04
# Fork: 1 of 1
# Warmup Iteration   1: 222,940 ms/op
# Warmup Iteration   2: 218,218 ms/op
# Warmup Iteration   3: 217,276 ms/op
# Warmup Iteration   4: 216,913 ms/op
# Warmup Iteration   5: 217,023 ms/op
# Warmup Iteration   6: 216,452 ms/op
# Warmup Iteration   7: 216,982 ms/op
# Warmup Iteration   8: 216,946 ms/op
# Warmup Iteration   9: 216,536 ms/op
# Warmup Iteration  10: 218,548 ms/op
Iteration   1: 216,919 ms/op
Iteration   2: 217,597 ms/op
Iteration   3: 218,036 ms/op
Iteration   4: 217,740 ms/op
Iteration   5: 216,503 ms/op
Iteration   6: 216,801 ms/op
Iteration   7: 223,637 ms/op
Iteration   8: 188,802 ms/op
Iteration   9: 189,256 ms/op
Iteration  10: 189,268 ms/op


Result "benchmarkFind":
  209,456 ±(99.9%) 21,447 ms/op [Average]
  (min, avg, max) = (188,802, 209,456, 223,637), stdev = 14,186
  CI (99.9%): [188,009, 230,903] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternSize = 2)

# Run progress: 44,85% complete, ETA 08:50:33
# Fork: 1 of 1
# Warmup Iteration   1: 1,935 ms/op
# Warmup Iteration   2: 1,781 ms/op
# Warmup Iteration   3: 1,871 ms/op
# Warmup Iteration   4: 1,813 ms/op
# Warmup Iteration   5: 1,771 ms/op
# Warmup Iteration   6: 1,764 ms/op
# Warmup Iteration   7: 1,759 ms/op
# Warmup Iteration   8: 1,756 ms/op
# Warmup Iteration   9: 1,757 ms/op
# Warmup Iteration  10: 1,804 ms/op
Iteration   1: 1,767 ms/op
Iteration   2: 1,764 ms/op
Iteration   3: 1,766 ms/op
Iteration   4: 1,788 ms/op
Iteration   5: 1,781 ms/op
Iteration   6: 1,786 ms/op
Iteration   7: 1,775 ms/op
Iteration   8: 1,781 ms/op
Iteration   9: 1,781 ms/op
Iteration  10: 1,778 ms/op


Result "benchmarkFind":
  1,777 ±(99.9%) 0,013 ms/op [Average]
  (min, avg, max) = (1,764, 1,777, 1,788), stdev = 0,008
  CI (99.9%): [1,764, 1,790] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternSize = 4)

# Run progress: 44,90% complete, ETA 08:49:59
# Fork: 1 of 1
# Warmup Iteration   1: 197,743 ms/op
# Warmup Iteration   2: 186,082 ms/op
# Warmup Iteration   3: 185,797 ms/op
# Warmup Iteration   4: 185,614 ms/op
# Warmup Iteration   5: 185,757 ms/op
# Warmup Iteration   6: 185,959 ms/op
# Warmup Iteration   7: 185,575 ms/op
# Warmup Iteration   8: 186,240 ms/op
# Warmup Iteration   9: 186,163 ms/op
# Warmup Iteration  10: 185,839 ms/op
Iteration   1: 185,606 ms/op
Iteration   2: 185,707 ms/op
Iteration   3: 186,198 ms/op
Iteration   4: 186,029 ms/op
Iteration   5: 185,508 ms/op
Iteration   6: 185,900 ms/op
Iteration   7: 186,315 ms/op
Iteration   8: 186,411 ms/op
Iteration   9: 186,041 ms/op
Iteration  10: 185,667 ms/op


Result "benchmarkFind":
  185,938 ±(99.9%) 0,471 ms/op [Average]
  (min, avg, max) = (185,508, 185,938, 186,411), stdev = 0,312
  CI (99.9%): [185,467, 186,410] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternSize = 8)

# Run progress: 44,94% complete, ETA 08:49:29
# Fork: 1 of 1
# Warmup Iteration   1: 131,946 ms/op
# Warmup Iteration   2: 124,499 ms/op
# Warmup Iteration   3: 124,615 ms/op
# Warmup Iteration   4: 124,892 ms/op
# Warmup Iteration   5: 124,436 ms/op
# Warmup Iteration   6: 124,508 ms/op
# Warmup Iteration   7: 124,462 ms/op
# Warmup Iteration   8: 124,614 ms/op
# Warmup Iteration   9: 124,607 ms/op
# Warmup Iteration  10: 116,752 ms/op
Iteration   1: 106,986 ms/op
Iteration   2: 106,839 ms/op
Iteration   3: 107,110 ms/op
Iteration   4: 106,844 ms/op
Iteration   5: 106,638 ms/op
Iteration   6: 106,523 ms/op
Iteration   7: 112,532 ms/op
Iteration   8: 112,039 ms/op
Iteration   9: 106,858 ms/op
Iteration  10: 109,076 ms/op


Result "benchmarkFind":
  108,145 ±(99.9%) 3,479 ms/op [Average]
  (min, avg, max) = (106,523, 108,145, 112,532), stdev = 2,301
  CI (99.9%): [104,666, 111,623] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternSize = 16)

# Run progress: 44,99% complete, ETA 08:48:57
# Fork: 1 of 1
# Warmup Iteration   1: 97,065 ms/op
# Warmup Iteration   2: 91,084 ms/op
# Warmup Iteration   3: 90,560 ms/op
# Warmup Iteration   4: 90,616 ms/op
# Warmup Iteration   5: 91,060 ms/op
# Warmup Iteration   6: 91,009 ms/op
# Warmup Iteration   7: 90,497 ms/op
# Warmup Iteration   8: 82,428 ms/op
# Warmup Iteration   9: 75,692 ms/op
# Warmup Iteration  10: 75,684 ms/op
Iteration   1: 75,541 ms/op
Iteration   2: 75,798 ms/op
Iteration   3: 75,448 ms/op
Iteration   4: 75,741 ms/op
Iteration   5: 75,516 ms/op
Iteration   6: 75,221 ms/op
Iteration   7: 75,698 ms/op
Iteration   8: 75,887 ms/op
Iteration   9: 75,847 ms/op
Iteration  10: 75,708 ms/op


Result "benchmarkFind":
  75,641 ±(99.9%) 0,313 ms/op [Average]
  (min, avg, max) = (75,221, 75,641, 75,887), stdev = 0,207
  CI (99.9%): [75,328, 75,953] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternSize = 32)

# Run progress: 45,04% complete, ETA 08:48:25
# Fork: 1 of 1
# Warmup Iteration   1: 86,175 ms/op
# Warmup Iteration   2: 79,634 ms/op
# Warmup Iteration   3: 79,894 ms/op
# Warmup Iteration   4: 79,162 ms/op
# Warmup Iteration   5: 80,033 ms/op
# Warmup Iteration   6: 79,375 ms/op
# Warmup Iteration   7: 74,205 ms/op
# Warmup Iteration   8: 65,474 ms/op
# Warmup Iteration   9: 65,946 ms/op
# Warmup Iteration  10: 65,391 ms/op
Iteration   1: 65,728 ms/op
Iteration   2: 65,967 ms/op
Iteration   3: 65,178 ms/op
Iteration   4: 65,787 ms/op
Iteration   5: 65,808 ms/op
Iteration   6: 65,772 ms/op
Iteration   7: 65,932 ms/op
Iteration   8: 65,510 ms/op
Iteration   9: 65,434 ms/op
Iteration  10: 66,337 ms/op


Result "benchmarkFind":
  65,745 ±(99.9%) 0,482 ms/op [Average]
  (min, avg, max) = (65,178, 65,745, 66,337), stdev = 0,319
  CI (99.9%): [65,263, 66,228] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternSize = 64)

# Run progress: 45,08% complete, ETA 08:47:53
# Fork: 1 of 1
# Warmup Iteration   1: 97,251 ms/op
# Warmup Iteration   2: 93,618 ms/op
# Warmup Iteration   3: 93,513 ms/op
# Warmup Iteration   4: 93,414 ms/op
# Warmup Iteration   5: 93,414 ms/op
# Warmup Iteration   6: 93,401 ms/op
# Warmup Iteration   7: 93,385 ms/op
# Warmup Iteration   8: 87,955 ms/op
# Warmup Iteration   9: 76,413 ms/op
# Warmup Iteration  10: 76,421 ms/op
Iteration   1: 76,724 ms/op
Iteration   2: 87,266 ms/op
Iteration   3: 78,069 ms/op
Iteration   4: 77,736 ms/op
Iteration   5: 78,124 ms/op
Iteration   6: 78,063 ms/op
Iteration   7: 77,515 ms/op
Iteration   8: 77,485 ms/op
Iteration   9: 77,406 ms/op
Iteration  10: 77,721 ms/op


Result "benchmarkFind":
  78,611 ±(99.9%) 4,640 ms/op [Average]
  (min, avg, max) = (76,724, 78,611, 87,266), stdev = 3,069
  CI (99.9%): [73,970, 83,251] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternSize = 128)

# Run progress: 45,13% complete, ETA 08:47:21
# Fork: 1 of 1
# Warmup Iteration   1: 96,700 ms/op
# Warmup Iteration   2: 92,989 ms/op
# Warmup Iteration   3: 92,846 ms/op
# Warmup Iteration   4: 92,943 ms/op
# Warmup Iteration   5: 92,876 ms/op
# Warmup Iteration   6: 92,834 ms/op
# Warmup Iteration   7: 92,823 ms/op
# Warmup Iteration   8: 88,151 ms/op
# Warmup Iteration   9: 76,776 ms/op
# Warmup Iteration  10: 76,751 ms/op
Iteration   1: 76,603 ms/op
Iteration   2: 78,252 ms/op
Iteration   3: 76,817 ms/op
Iteration   4: 76,883 ms/op
Iteration   5: 77,810 ms/op
Iteration   6: 76,897 ms/op
Iteration   7: 78,092 ms/op
Iteration   8: 77,477 ms/op
Iteration   9: 77,384 ms/op
Iteration  10: 76,463 ms/op


Result "benchmarkFind":
  77,268 ±(99.9%) 0,953 ms/op [Average]
  (min, avg, max) = (76,463, 77,268, 78,252), stdev = 0,631
  CI (99.9%): [76,315, 78,221] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternSize = 256)

# Run progress: 45,17% complete, ETA 08:46:49
# Fork: 1 of 1
# Warmup Iteration   1: 95,936 ms/op
# Warmup Iteration   2: 92,733 ms/op
# Warmup Iteration   3: 92,247 ms/op
# Warmup Iteration   4: 91,934 ms/op
# Warmup Iteration   5: 91,881 ms/op
# Warmup Iteration   6: 91,819 ms/op
# Warmup Iteration   7: 92,585 ms/op
# Warmup Iteration   8: 86,875 ms/op
# Warmup Iteration   9: 75,185 ms/op
# Warmup Iteration  10: 75,252 ms/op
Iteration   1: 75,055 ms/op
Iteration   2: 75,195 ms/op
Iteration   3: 75,091 ms/op
Iteration   4: 75,179 ms/op
Iteration   5: 75,300 ms/op
Iteration   6: 75,251 ms/op
Iteration   7: 75,726 ms/op
Iteration   8: 75,303 ms/op
Iteration   9: 75,194 ms/op
Iteration  10: 75,193 ms/op


Result "benchmarkFind":
  75,249 ±(99.9%) 0,280 ms/op [Average]
  (min, avg, max) = (75,055, 75,249, 75,726), stdev = 0,185
  CI (99.9%): [74,968, 75,529] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternSize = 2)

# Run progress: 45,22% complete, ETA 08:46:16
# Fork: 1 of 1
# Warmup Iteration   1: 19,775 ms/op
# Warmup Iteration   2: 18,479 ms/op
# Warmup Iteration   3: 18,381 ms/op
# Warmup Iteration   4: 18,524 ms/op
# Warmup Iteration   5: 18,369 ms/op
# Warmup Iteration   6: 18,248 ms/op
# Warmup Iteration   7: 18,349 ms/op
# Warmup Iteration   8: 19,771 ms/op
# Warmup Iteration   9: 18,045 ms/op
# Warmup Iteration  10: 18,209 ms/op
Iteration   1: 18,110 ms/op
Iteration   2: 18,178 ms/op
Iteration   3: 18,173 ms/op
Iteration   4: 18,130 ms/op
Iteration   5: 18,016 ms/op
Iteration   6: 18,069 ms/op
Iteration   7: 18,085 ms/op
Iteration   8: 18,109 ms/op
Iteration   9: 18,045 ms/op
Iteration  10: 18,001 ms/op


Result "benchmarkFind":
  18,092 ±(99.9%) 0,091 ms/op [Average]
  (min, avg, max) = (18,001, 18,092, 18,178), stdev = 0,060
  CI (99.9%): [18,000, 18,183] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternSize = 4)

# Run progress: 45,27% complete, ETA 08:45:43
# Fork: 1 of 1
# Warmup Iteration   1: 186,600 ms/op
# Warmup Iteration   2: 179,544 ms/op
# Warmup Iteration   3: 176,221 ms/op
# Warmup Iteration   4: 154,450 ms/op
# Warmup Iteration   5: 154,771 ms/op
# Warmup Iteration   6: 154,331 ms/op
# Warmup Iteration   7: 155,280 ms/op
# Warmup Iteration   8: 153,220 ms/op
# Warmup Iteration   9: 154,893 ms/op
# Warmup Iteration  10: 153,752 ms/op
Iteration   1: 152,762 ms/op
Iteration   2: 153,864 ms/op
Iteration   3: 154,547 ms/op
Iteration   4: 153,737 ms/op
Iteration   5: 153,460 ms/op
Iteration   6: 153,126 ms/op
Iteration   7: 153,284 ms/op
Iteration   8: 154,219 ms/op
Iteration   9: 153,258 ms/op
Iteration  10: 154,133 ms/op


Result "benchmarkFind":
  153,639 ±(99.9%) 0,843 ms/op [Average]
  (min, avg, max) = (152,762, 153,639, 154,547), stdev = 0,558
  CI (99.9%): [152,796, 154,482] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternSize = 8)

# Run progress: 45,31% complete, ETA 08:45:11
# Fork: 1 of 1
# Warmup Iteration   1: 97,084 ms/op
# Warmup Iteration   2: 94,001 ms/op
# Warmup Iteration   3: 94,062 ms/op
# Warmup Iteration   4: 94,612 ms/op
# Warmup Iteration   5: 93,992 ms/op
# Warmup Iteration   6: 94,405 ms/op
# Warmup Iteration   7: 94,599 ms/op
# Warmup Iteration   8: 91,063 ms/op
# Warmup Iteration   9: 81,853 ms/op
# Warmup Iteration  10: 81,823 ms/op
Iteration   1: 82,233 ms/op
Iteration   2: 82,228 ms/op
Iteration   3: 82,416 ms/op
Iteration   4: 81,974 ms/op
Iteration   5: 82,289 ms/op
Iteration   6: 82,438 ms/op
Iteration   7: 82,206 ms/op
Iteration   8: 82,168 ms/op
Iteration   9: 81,548 ms/op
Iteration  10: 82,243 ms/op


Result "benchmarkFind":
  82,174 ±(99.9%) 0,385 ms/op [Average]
  (min, avg, max) = (81,548, 82,174, 82,438), stdev = 0,255
  CI (99.9%): [81,789, 82,560] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternSize = 16)

# Run progress: 45,36% complete, ETA 08:44:40
# Fork: 1 of 1
# Warmup Iteration   1: 58,884 ms/op
# Warmup Iteration   2: 59,667 ms/op
# Warmup Iteration   3: 56,808 ms/op
# Warmup Iteration   4: 56,756 ms/op
# Warmup Iteration   5: 53,912 ms/op
# Warmup Iteration   6: 46,111 ms/op
# Warmup Iteration   7: 46,056 ms/op
# Warmup Iteration   8: 46,302 ms/op
# Warmup Iteration   9: 46,183 ms/op
# Warmup Iteration  10: 46,308 ms/op
Iteration   1: 45,778 ms/op
Iteration   2: 45,977 ms/op
Iteration   3: 46,518 ms/op
Iteration   4: 45,980 ms/op
Iteration   5: 45,957 ms/op
Iteration   6: 46,358 ms/op
Iteration   7: 46,472 ms/op
Iteration   8: 46,214 ms/op
Iteration   9: 46,216 ms/op
Iteration  10: 45,745 ms/op


Result "benchmarkFind":
  46,122 ±(99.9%) 0,416 ms/op [Average]
  (min, avg, max) = (45,745, 46,122, 46,518), stdev = 0,275
  CI (99.9%): [45,705, 46,538] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternSize = 32)

# Run progress: 45,40% complete, ETA 08:44:07
# Fork: 1 of 1
# Warmup Iteration   1: 43,950 ms/op
# Warmup Iteration   2: 42,300 ms/op
# Warmup Iteration   3: 42,081 ms/op
# Warmup Iteration   4: 38,900 ms/op
# Warmup Iteration   5: 33,968 ms/op
# Warmup Iteration   6: 33,793 ms/op
# Warmup Iteration   7: 33,894 ms/op
# Warmup Iteration   8: 33,843 ms/op
# Warmup Iteration   9: 34,128 ms/op
# Warmup Iteration  10: 34,061 ms/op
Iteration   1: 33,981 ms/op
Iteration   2: 34,154 ms/op
Iteration   3: 33,905 ms/op
Iteration   4: 33,923 ms/op
Iteration   5: 33,872 ms/op
Iteration   6: 34,126 ms/op
Iteration   7: 33,737 ms/op
Iteration   8: 33,803 ms/op
Iteration   9: 34,083 ms/op
Iteration  10: 33,953 ms/op


Result "benchmarkFind":
  33,954 ±(99.9%) 0,206 ms/op [Average]
  (min, avg, max) = (33,737, 33,954, 34,154), stdev = 0,136
  CI (99.9%): [33,748, 34,160] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternSize = 64)

# Run progress: 45,45% complete, ETA 08:43:34
# Fork: 1 of 1
# Warmup Iteration   1: 40,848 ms/op
# Warmup Iteration   2: 38,261 ms/op
# Warmup Iteration   3: 38,367 ms/op
# Warmup Iteration   4: 33,970 ms/op
# Warmup Iteration   5: 32,234 ms/op
# Warmup Iteration   6: 32,174 ms/op
# Warmup Iteration   7: 32,324 ms/op
# Warmup Iteration   8: 32,643 ms/op
# Warmup Iteration   9: 32,219 ms/op
# Warmup Iteration  10: 32,286 ms/op
Iteration   1: 32,312 ms/op
Iteration   2: 32,280 ms/op
Iteration   3: 32,100 ms/op
Iteration   4: 32,127 ms/op
Iteration   5: 32,445 ms/op
Iteration   6: 32,257 ms/op
Iteration   7: 32,302 ms/op
Iteration   8: 32,002 ms/op
Iteration   9: 32,000 ms/op
Iteration  10: 34,078 ms/op


Result "benchmarkFind":
  32,390 ±(99.9%) 0,923 ms/op [Average]
  (min, avg, max) = (32,000, 32,390, 34,078), stdev = 0,610
  CI (99.9%): [31,468, 33,313] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternSize = 128)

# Run progress: 45,50% complete, ETA 08:43:01
# Fork: 1 of 1
# Warmup Iteration   1: 47,319 ms/op
# Warmup Iteration   2: 45,749 ms/op
# Warmup Iteration   3: 45,353 ms/op
# Warmup Iteration   4: 45,809 ms/op
# Warmup Iteration   5: 46,158 ms/op
# Warmup Iteration   6: 45,461 ms/op
# Warmup Iteration   7: 45,279 ms/op
# Warmup Iteration   8: 45,350 ms/op
# Warmup Iteration   9: 45,335 ms/op
# Warmup Iteration  10: 45,227 ms/op
Iteration   1: 45,508 ms/op
Iteration   2: 45,104 ms/op
Iteration   3: 45,141 ms/op
Iteration   4: 45,159 ms/op
Iteration   5: 45,214 ms/op
Iteration   6: 45,207 ms/op
Iteration   7: 45,103 ms/op
Iteration   8: 45,091 ms/op
Iteration   9: 46,638 ms/op
Iteration  10: 45,460 ms/op


Result "benchmarkFind":
  45,363 ±(99.9%) 0,713 ms/op [Average]
  (min, avg, max) = (45,091, 45,363, 46,638), stdev = 0,472
  CI (99.9%): [44,649, 46,076] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternSize = 256)

# Run progress: 45,54% complete, ETA 08:42:29
# Fork: 1 of 1
# Warmup Iteration   1: 44,195 ms/op
# Warmup Iteration   2: 42,591 ms/op
# Warmup Iteration   3: 42,648 ms/op
# Warmup Iteration   4: 42,246 ms/op
# Warmup Iteration   5: 41,634 ms/op
# Warmup Iteration   6: 41,846 ms/op
# Warmup Iteration   7: 42,204 ms/op
# Warmup Iteration   8: 41,797 ms/op
# Warmup Iteration   9: 42,111 ms/op
# Warmup Iteration  10: 41,951 ms/op
Iteration   1: 42,124 ms/op
Iteration   2: 41,974 ms/op
Iteration   3: 42,472 ms/op
Iteration   4: 41,975 ms/op
Iteration   5: 41,966 ms/op
Iteration   6: 41,965 ms/op
Iteration   7: 42,196 ms/op
Iteration   8: 42,120 ms/op
Iteration   9: 41,782 ms/op
Iteration  10: 42,321 ms/op


Result "benchmarkFind":
  42,089 ±(99.9%) 0,305 ms/op [Average]
  (min, avg, max) = (41,782, 42,089, 42,472), stdev = 0,202
  CI (99.9%): [41,785, 42,394] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternSize = 2)

# Run progress: 45,59% complete, ETA 08:41:56
# Fork: 1 of 1
# Warmup Iteration   1: 59,061 ms/op
# Warmup Iteration   2: 55,178 ms/op
# Warmup Iteration   3: 55,395 ms/op
# Warmup Iteration   4: 55,288 ms/op
# Warmup Iteration   5: 55,241 ms/op
# Warmup Iteration   6: 54,985 ms/op
# Warmup Iteration   7: 54,869 ms/op
# Warmup Iteration   8: 55,108 ms/op
# Warmup Iteration   9: 55,086 ms/op
# Warmup Iteration  10: 55,126 ms/op
Iteration   1: 54,887 ms/op
Iteration   2: 54,853 ms/op
Iteration   3: 55,038 ms/op
Iteration   4: 54,721 ms/op
Iteration   5: 55,047 ms/op
Iteration   6: 60,653 ms/op
Iteration   7: 55,603 ms/op
Iteration   8: 55,699 ms/op
Iteration   9: 55,483 ms/op
Iteration  10: 55,852 ms/op


Result "benchmarkFind":
  55,783 ±(99.9%) 2,654 ms/op [Average]
  (min, avg, max) = (54,721, 55,783, 60,653), stdev = 1,756
  CI (99.9%): [53,129, 58,438] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternSize = 4)

# Run progress: 45,63% complete, ETA 08:41:24
# Fork: 1 of 1
# Warmup Iteration   1: 1402,916 ms/op
# Warmup Iteration   2: 1350,634 ms/op
# Warmup Iteration   3: 1345,413 ms/op
# Warmup Iteration   4: 1345,118 ms/op
# Warmup Iteration   5: 1345,440 ms/op
# Warmup Iteration   6: 1333,902 ms/op
# Warmup Iteration   7: 1346,874 ms/op
# Warmup Iteration   8: 1341,726 ms/op
# Warmup Iteration   9: 1348,064 ms/op
# Warmup Iteration  10: 1347,785 ms/op
Iteration   1: 1342,538 ms/op
Iteration   2: 1338,591 ms/op
Iteration   3: 1339,441 ms/op
Iteration   4: 1352,903 ms/op
Iteration   5: 1339,557 ms/op
Iteration   6: 1348,804 ms/op
Iteration   7: 1339,859 ms/op
Iteration   8: 1351,247 ms/op
Iteration   9: 1331,872 ms/op
Iteration  10: 1335,633 ms/op


Result "benchmarkFind":
  1342,044 ±(99.9%) 10,362 ms/op [Average]
  (min, avg, max) = (1331,872, 1342,044, 1352,903), stdev = 6,854
  CI (99.9%): [1331,682, 1352,407] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternSize = 8)

# Run progress: 45,68% complete, ETA 08:41:02
# Fork: 1 of 1
# Warmup Iteration   1: 684,437 ms/op
# Warmup Iteration   2: 656,660 ms/op
# Warmup Iteration   3: 650,724 ms/op
# Warmup Iteration   4: 651,690 ms/op
# Warmup Iteration   5: 652,093 ms/op
# Warmup Iteration   6: 654,239 ms/op
# Warmup Iteration   7: 649,304 ms/op
# Warmup Iteration   8: 653,202 ms/op
# Warmup Iteration   9: 651,483 ms/op
# Warmup Iteration  10: 650,012 ms/op
Iteration   1: 653,370 ms/op
Iteration   2: 650,230 ms/op
Iteration   3: 651,544 ms/op
Iteration   4: 649,265 ms/op
Iteration   5: 654,886 ms/op
Iteration   6: 651,179 ms/op
Iteration   7: 697,078 ms/op
Iteration   8: 654,479 ms/op
Iteration   9: 656,374 ms/op
Iteration  10: 657,631 ms/op


Result "benchmarkFind":
  657,604 ±(99.9%) 21,362 ms/op [Average]
  (min, avg, max) = (649,265, 657,604, 697,078), stdev = 14,129
  CI (99.9%): [636,242, 678,965] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternSize = 16)

# Run progress: 45,73% complete, ETA 08:40:39
# Fork: 1 of 1
# Warmup Iteration   1: 363,258 ms/op
# Warmup Iteration   2: 349,818 ms/op
# Warmup Iteration   3: 350,592 ms/op
# Warmup Iteration   4: 348,921 ms/op
# Warmup Iteration   5: 350,806 ms/op
# Warmup Iteration   6: 349,848 ms/op
# Warmup Iteration   7: 349,106 ms/op
# Warmup Iteration   8: 349,602 ms/op
# Warmup Iteration   9: 349,747 ms/op
# Warmup Iteration  10: 349,585 ms/op
Iteration   1: 347,443 ms/op
Iteration   2: 350,419 ms/op
Iteration   3: 349,986 ms/op
Iteration   4: 349,901 ms/op
Iteration   5: 350,644 ms/op
Iteration   6: 348,636 ms/op
Iteration   7: 349,990 ms/op
Iteration   8: 350,342 ms/op
Iteration   9: 348,779 ms/op
Iteration  10: 347,169 ms/op


Result "benchmarkFind":
  349,331 ±(99.9%) 1,895 ms/op [Average]
  (min, avg, max) = (347,169, 349,331, 350,644), stdev = 1,254
  CI (99.9%): [347,436, 351,226] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternSize = 32)

# Run progress: 45,77% complete, ETA 08:40:10
# Fork: 1 of 1
# Warmup Iteration   1: 250,462 ms/op
# Warmup Iteration   2: 237,510 ms/op
# Warmup Iteration   3: 236,345 ms/op
# Warmup Iteration   4: 235,167 ms/op
# Warmup Iteration   5: 234,586 ms/op
# Warmup Iteration   6: 235,731 ms/op
# Warmup Iteration   7: 235,163 ms/op
# Warmup Iteration   8: 235,864 ms/op
# Warmup Iteration   9: 237,622 ms/op
# Warmup Iteration  10: 237,463 ms/op
Iteration   1: 236,787 ms/op
Iteration   2: 236,117 ms/op
Iteration   3: 235,411 ms/op
Iteration   4: 237,419 ms/op
Iteration   5: 236,318 ms/op
Iteration   6: 236,293 ms/op
Iteration   7: 234,686 ms/op
Iteration   8: 198,862 ms/op
Iteration   9: 196,033 ms/op
Iteration  10: 197,275 ms/op


Result "benchmarkFind":
  224,520 ±(99.9%) 28,344 ms/op [Average]
  (min, avg, max) = (196,033, 224,520, 237,419), stdev = 18,748
  CI (99.9%): [196,177, 252,864] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternSize = 64)

# Run progress: 45,82% complete, ETA 08:39:45
# Fork: 1 of 1
# Warmup Iteration   1: 210,002 ms/op
# Warmup Iteration   2: 193,735 ms/op
# Warmup Iteration   3: 194,239 ms/op
# Warmup Iteration   4: 194,936 ms/op
# Warmup Iteration   5: 193,293 ms/op
# Warmup Iteration   6: 193,600 ms/op
# Warmup Iteration   7: 193,630 ms/op
# Warmup Iteration   8: 193,796 ms/op
# Warmup Iteration   9: 195,266 ms/op
# Warmup Iteration  10: 192,536 ms/op
Iteration   1: 194,090 ms/op
Iteration   2: 194,052 ms/op
Iteration   3: 194,262 ms/op
Iteration   4: 192,635 ms/op
Iteration   5: 170,561 ms/op
Iteration   6: 161,645 ms/op
Iteration   7: 161,537 ms/op
Iteration   8: 161,752 ms/op
Iteration   9: 161,502 ms/op
Iteration  10: 161,163 ms/op


Result "benchmarkFind":
  175,320 ±(99.9%) 24,362 ms/op [Average]
  (min, avg, max) = (161,163, 175,320, 194,262), stdev = 16,114
  CI (99.9%): [150,958, 199,682] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternSize = 128)

# Run progress: 45,86% complete, ETA 08:39:18
# Fork: 1 of 1
# Warmup Iteration   1: 202,674 ms/op
# Warmup Iteration   2: 185,709 ms/op
# Warmup Iteration   3: 185,944 ms/op
# Warmup Iteration   4: 185,171 ms/op
# Warmup Iteration   5: 185,212 ms/op
# Warmup Iteration   6: 185,149 ms/op
# Warmup Iteration   7: 185,890 ms/op
# Warmup Iteration   8: 185,316 ms/op
# Warmup Iteration   9: 185,132 ms/op
# Warmup Iteration  10: 185,348 ms/op
Iteration   1: 185,314 ms/op
Iteration   2: 185,417 ms/op
Iteration   3: 186,206 ms/op
Iteration   4: 185,485 ms/op
Iteration   5: 164,178 ms/op
Iteration   6: 157,354 ms/op
Iteration   7: 157,393 ms/op
Iteration   8: 157,424 ms/op
Iteration   9: 157,169 ms/op
Iteration  10: 157,166 ms/op


Result "benchmarkFind":
  169,311 ±(99.9%) 21,441 ms/op [Average]
  (min, avg, max) = (157,166, 169,311, 186,206), stdev = 14,182
  CI (99.9%): [147,870, 190,751] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternSize = 256)

# Run progress: 45,91% complete, ETA 08:38:50
# Fork: 1 of 1
# Warmup Iteration   1: 219,273 ms/op
# Warmup Iteration   2: 211,833 ms/op
# Warmup Iteration   3: 212,021 ms/op
# Warmup Iteration   4: 210,906 ms/op
# Warmup Iteration   5: 210,947 ms/op
# Warmup Iteration   6: 211,138 ms/op
# Warmup Iteration   7: 211,489 ms/op
# Warmup Iteration   8: 226,739 ms/op
# Warmup Iteration   9: 211,543 ms/op
# Warmup Iteration  10: 212,179 ms/op
Iteration   1: 210,912 ms/op
Iteration   2: 210,823 ms/op
Iteration   3: 211,575 ms/op
Iteration   4: 211,658 ms/op
Iteration   5: 210,990 ms/op
Iteration   6: 212,662 ms/op
Iteration   7: 211,738 ms/op
Iteration   8: 211,093 ms/op
Iteration   9: 211,089 ms/op
Iteration  10: 210,036 ms/op


Result "benchmarkFind":
  211,258 ±(99.9%) 1,056 ms/op [Average]
  (min, avg, max) = (210,036, 211,258, 212,662), stdev = 0,698
  CI (99.9%): [210,202, 212,314] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternSize = 2)

# Run progress: 45,96% complete, ETA 08:38:22
# Fork: 1 of 1
# Warmup Iteration   1: 210,196 ms/op
# Warmup Iteration   2: 190,344 ms/op
# Warmup Iteration   3: 190,905 ms/op
# Warmup Iteration   4: 191,706 ms/op
# Warmup Iteration   5: 190,950 ms/op
# Warmup Iteration   6: 191,963 ms/op
# Warmup Iteration   7: 190,854 ms/op
# Warmup Iteration   8: 192,351 ms/op
# Warmup Iteration   9: 191,490 ms/op
# Warmup Iteration  10: 191,977 ms/op
Iteration   1: 190,765 ms/op
Iteration   2: 191,216 ms/op
Iteration   3: 190,892 ms/op
Iteration   4: 192,668 ms/op
Iteration   5: 191,816 ms/op
Iteration   6: 191,218 ms/op
Iteration   7: 192,124 ms/op
Iteration   8: 191,335 ms/op
Iteration   9: 191,424 ms/op
Iteration  10: 192,277 ms/op


Result "benchmarkFind":
  191,573 ±(99.9%) 0,944 ms/op [Average]
  (min, avg, max) = (190,765, 191,573, 192,668), stdev = 0,624
  CI (99.9%): [190,630, 192,517] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternSize = 4)

# Run progress: 46,00% complete, ETA 08:37:52
# Fork: 1 of 1
# Warmup Iteration   1: 162,687 ms/op
# Warmup Iteration   2: 155,360 ms/op
# Warmup Iteration   3: 156,156 ms/op
# Warmup Iteration   4: 155,382 ms/op
# Warmup Iteration   5: 155,499 ms/op
# Warmup Iteration   6: 155,325 ms/op
# Warmup Iteration   7: 155,652 ms/op
# Warmup Iteration   8: 155,195 ms/op
# Warmup Iteration   9: 155,702 ms/op
# Warmup Iteration  10: 155,222 ms/op
Iteration   1: 155,772 ms/op
Iteration   2: 155,921 ms/op
Iteration   3: 141,348 ms/op
Iteration   4: 140,005 ms/op
Iteration   5: 139,756 ms/op
Iteration   6: 139,735 ms/op
Iteration   7: 140,325 ms/op
Iteration   8: 139,161 ms/op
Iteration   9: 140,111 ms/op
Iteration  10: 137,941 ms/op


Result "benchmarkFind":
  143,007 ±(99.9%) 10,313 ms/op [Average]
  (min, avg, max) = (137,941, 143,007, 155,921), stdev = 6,822
  CI (99.9%): [132,694, 153,321] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternSize = 8)

# Run progress: 46,05% complete, ETA 08:37:22
# Fork: 1 of 1
# Warmup Iteration   1: 77,658 ms/op
# Warmup Iteration   2: 76,081 ms/op
# Warmup Iteration   3: 74,685 ms/op
# Warmup Iteration   4: 74,666 ms/op
# Warmup Iteration   5: 74,817 ms/op
# Warmup Iteration   6: 76,273 ms/op
# Warmup Iteration   7: 65,854 ms/op
# Warmup Iteration   8: 63,442 ms/op
# Warmup Iteration   9: 63,395 ms/op
# Warmup Iteration  10: 63,571 ms/op
Iteration   1: 63,285 ms/op
Iteration   2: 63,454 ms/op
Iteration   3: 63,621 ms/op
Iteration   4: 63,256 ms/op
Iteration   5: 63,159 ms/op
Iteration   6: 63,305 ms/op
Iteration   7: 63,395 ms/op
Iteration   8: 63,224 ms/op
Iteration   9: 63,258 ms/op
Iteration  10: 63,553 ms/op


Result "benchmarkFind":
  63,351 ±(99.9%) 0,227 ms/op [Average]
  (min, avg, max) = (63,159, 63,351, 63,621), stdev = 0,150
  CI (99.9%): [63,124, 63,578] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternSize = 16)

# Run progress: 46,09% complete, ETA 08:36:49
# Fork: 1 of 1
# Warmup Iteration   1: 37,992 ms/op
# Warmup Iteration   2: 36,528 ms/op
# Warmup Iteration   3: 36,509 ms/op
# Warmup Iteration   4: 31,733 ms/op
# Warmup Iteration   5: 30,877 ms/op
# Warmup Iteration   6: 30,858 ms/op
# Warmup Iteration   7: 30,897 ms/op
# Warmup Iteration   8: 31,142 ms/op
# Warmup Iteration   9: 31,087 ms/op
# Warmup Iteration  10: 31,290 ms/op
Iteration   1: 31,291 ms/op
Iteration   2: 31,296 ms/op
Iteration   3: 31,452 ms/op
Iteration   4: 31,138 ms/op
Iteration   5: 31,099 ms/op
Iteration   6: 31,083 ms/op
Iteration   7: 31,119 ms/op
Iteration   8: 31,113 ms/op
Iteration   9: 31,255 ms/op
Iteration  10: 31,113 ms/op


Result "benchmarkFind":
  31,196 ±(99.9%) 0,184 ms/op [Average]
  (min, avg, max) = (31,083, 31,196, 31,452), stdev = 0,122
  CI (99.9%): [31,012, 31,380] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternSize = 32)

# Run progress: 46,14% complete, ETA 08:36:17
# Fork: 1 of 1
# Warmup Iteration   1: 22,280 ms/op
# Warmup Iteration   2: 21,403 ms/op
# Warmup Iteration   3: 18,401 ms/op
# Warmup Iteration   4: 18,260 ms/op
# Warmup Iteration   5: 18,405 ms/op
# Warmup Iteration   6: 18,300 ms/op
# Warmup Iteration   7: 18,397 ms/op
# Warmup Iteration   8: 18,371 ms/op
# Warmup Iteration   9: 18,318 ms/op
# Warmup Iteration  10: 18,334 ms/op
Iteration   1: 18,312 ms/op
Iteration   2: 18,382 ms/op
Iteration   3: 18,215 ms/op
Iteration   4: 18,304 ms/op
Iteration   5: 18,216 ms/op
Iteration   6: 18,351 ms/op
Iteration   7: 19,652 ms/op
Iteration   8: 18,331 ms/op
Iteration   9: 18,204 ms/op
Iteration  10: 18,345 ms/op


Result "benchmarkFind":
  18,431 ±(99.9%) 0,656 ms/op [Average]
  (min, avg, max) = (18,204, 18,431, 19,652), stdev = 0,434
  CI (99.9%): [17,775, 19,087] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternSize = 64)

# Run progress: 46,19% complete, ETA 08:35:44
# Fork: 1 of 1
# Warmup Iteration   1: 18,892 ms/op
# Warmup Iteration   2: 15,766 ms/op
# Warmup Iteration   3: 12,252 ms/op
# Warmup Iteration   4: 11,960 ms/op
# Warmup Iteration   5: 12,015 ms/op
# Warmup Iteration   6: 11,971 ms/op
# Warmup Iteration   7: 11,991 ms/op
# Warmup Iteration   8: 11,964 ms/op
# Warmup Iteration   9: 11,985 ms/op
# Warmup Iteration  10: 12,022 ms/op
Iteration   1: 11,977 ms/op
Iteration   2: 12,023 ms/op
Iteration   3: 11,916 ms/op
Iteration   4: 11,923 ms/op
Iteration   5: 11,931 ms/op
Iteration   6: 11,934 ms/op
Iteration   7: 11,954 ms/op
Iteration   8: 11,908 ms/op
Iteration   9: 11,899 ms/op
Iteration  10: 11,898 ms/op


Result "benchmarkFind":
  11,936 ±(99.9%) 0,059 ms/op [Average]
  (min, avg, max) = (11,898, 11,936, 12,023), stdev = 0,039
  CI (99.9%): [11,877, 11,995] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternSize = 128)

# Run progress: 46,23% complete, ETA 08:35:11
# Fork: 1 of 1
# Warmup Iteration   1: 15,125 ms/op
# Warmup Iteration   2: 12,553 ms/op
# Warmup Iteration   3: 11,392 ms/op
# Warmup Iteration   4: 12,021 ms/op
# Warmup Iteration   5: 12,096 ms/op
# Warmup Iteration   6: 12,066 ms/op
# Warmup Iteration   7: 12,023 ms/op
# Warmup Iteration   8: 12,065 ms/op
# Warmup Iteration   9: 12,027 ms/op
# Warmup Iteration  10: 12,072 ms/op
Iteration   1: 12,102 ms/op
Iteration   2: 12,079 ms/op
Iteration   3: 12,024 ms/op
Iteration   4: 12,032 ms/op
Iteration   5: 12,017 ms/op
Iteration   6: 12,021 ms/op
Iteration   7: 11,979 ms/op
Iteration   8: 11,998 ms/op
Iteration   9: 11,987 ms/op
Iteration  10: 11,994 ms/op


Result "benchmarkFind":
  12,023 ±(99.9%) 0,060 ms/op [Average]
  (min, avg, max) = (11,979, 12,023, 12,102), stdev = 0,040
  CI (99.9%): [11,963, 12,083] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternSize = 256)

# Run progress: 46,28% complete, ETA 08:34:38
# Fork: 1 of 1
# Warmup Iteration   1: 13,818 ms/op
# Warmup Iteration   2: 11,328 ms/op
# Warmup Iteration   3: 10,209 ms/op
# Warmup Iteration   4: 10,328 ms/op
# Warmup Iteration   5: 10,214 ms/op
# Warmup Iteration   6: 10,213 ms/op
# Warmup Iteration   7: 10,248 ms/op
# Warmup Iteration   8: 10,378 ms/op
# Warmup Iteration   9: 10,343 ms/op
# Warmup Iteration  10: 10,290 ms/op
Iteration   1: 10,232 ms/op
Iteration   2: 10,283 ms/op
Iteration   3: 10,237 ms/op
Iteration   4: 10,261 ms/op
Iteration   5: 11,418 ms/op
Iteration   6: 10,260 ms/op
Iteration   7: 10,242 ms/op
Iteration   8: 10,259 ms/op
Iteration   9: 10,226 ms/op
Iteration  10: 10,248 ms/op


Result "benchmarkFind":
  10,367 ±(99.9%) 0,559 ms/op [Average]
  (min, avg, max) = (10,226, 10,367, 11,418), stdev = 0,370
  CI (99.9%): [9,807, 10,926] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternSize = 2)

# Run progress: 46,32% complete, ETA 08:34:06
# Fork: 1 of 1
# Warmup Iteration   1: 854,214 ms/op
# Warmup Iteration   2: 820,494 ms/op
# Warmup Iteration   3: 815,588 ms/op
# Warmup Iteration   4: 816,193 ms/op
# Warmup Iteration   5: 812,621 ms/op
# Warmup Iteration   6: 815,185 ms/op
# Warmup Iteration   7: 816,515 ms/op
# Warmup Iteration   8: 814,514 ms/op
# Warmup Iteration   9: 822,432 ms/op
# Warmup Iteration  10: 818,934 ms/op
Iteration   1: 819,178 ms/op
Iteration   2: 819,679 ms/op
Iteration   3: 815,222 ms/op
Iteration   4: 818,878 ms/op
Iteration   5: 815,126 ms/op
Iteration   6: 817,526 ms/op
Iteration   7: 816,141 ms/op
Iteration   8: 815,623 ms/op
Iteration   9: 819,690 ms/op
Iteration  10: 820,511 ms/op


Result "benchmarkFind":
  817,757 ±(99.9%) 3,141 ms/op [Average]
  (min, avg, max) = (815,126, 817,757, 820,511), stdev = 2,078
  CI (99.9%): [814,616, 820,899] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternSize = 4)

# Run progress: 46,37% complete, ETA 08:33:49
# Fork: 1 of 1
# Warmup Iteration   1: 657,101 ms/op
# Warmup Iteration   2: 632,551 ms/op
# Warmup Iteration   3: 630,086 ms/op
# Warmup Iteration   4: 630,799 ms/op
# Warmup Iteration   5: 632,498 ms/op
# Warmup Iteration   6: 630,343 ms/op
# Warmup Iteration   7: 626,801 ms/op
# Warmup Iteration   8: 631,835 ms/op
# Warmup Iteration   9: 628,834 ms/op
# Warmup Iteration  10: 633,959 ms/op
Iteration   1: 628,022 ms/op
Iteration   2: 630,170 ms/op
Iteration   3: 626,960 ms/op
Iteration   4: 687,031 ms/op
Iteration   5: 623,421 ms/op
Iteration   6: 621,127 ms/op
Iteration   7: 621,184 ms/op
Iteration   8: 620,626 ms/op
Iteration   9: 620,141 ms/op
Iteration  10: 621,186 ms/op


Result "benchmarkFind":
  629,987 ±(99.9%) 30,771 ms/op [Average]
  (min, avg, max) = (620,141, 629,987, 687,031), stdev = 20,353
  CI (99.9%): [599,216, 660,758] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternSize = 8)

# Run progress: 46,42% complete, ETA 08:33:23
# Fork: 1 of 1
# Warmup Iteration   1: 302,179 ms/op
# Warmup Iteration   2: 294,590 ms/op
# Warmup Iteration   3: 293,443 ms/op
# Warmup Iteration   4: 290,477 ms/op
# Warmup Iteration   5: 292,329 ms/op
# Warmup Iteration   6: 290,338 ms/op
# Warmup Iteration   7: 293,199 ms/op
# Warmup Iteration   8: 293,750 ms/op
# Warmup Iteration   9: 293,837 ms/op
# Warmup Iteration  10: 293,435 ms/op
Iteration   1: 292,181 ms/op
Iteration   2: 292,486 ms/op
Iteration   3: 293,002 ms/op
Iteration   4: 290,311 ms/op
Iteration   5: 293,924 ms/op
Iteration   6: 292,507 ms/op
Iteration   7: 293,797 ms/op
Iteration   8: 293,825 ms/op
Iteration   9: 291,462 ms/op
Iteration  10: 290,382 ms/op


Result "benchmarkFind":
  292,388 ±(99.9%) 2,019 ms/op [Average]
  (min, avg, max) = (290,311, 292,388, 293,924), stdev = 1,335
  CI (99.9%): [290,369, 294,406] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternSize = 16)

# Run progress: 46,46% complete, ETA 08:32:55
# Fork: 1 of 1
# Warmup Iteration   1: 146,597 ms/op
# Warmup Iteration   2: 141,534 ms/op
# Warmup Iteration   3: 140,952 ms/op
# Warmup Iteration   4: 141,056 ms/op
# Warmup Iteration   5: 141,542 ms/op
# Warmup Iteration   6: 141,807 ms/op
# Warmup Iteration   7: 140,718 ms/op
# Warmup Iteration   8: 141,069 ms/op
# Warmup Iteration   9: 140,225 ms/op
# Warmup Iteration  10: 140,894 ms/op
Iteration   1: 135,178 ms/op
Iteration   2: 120,408 ms/op
Iteration   3: 120,826 ms/op
Iteration   4: 121,069 ms/op
Iteration   5: 119,824 ms/op
Iteration   6: 119,649 ms/op
Iteration   7: 119,314 ms/op
Iteration   8: 120,129 ms/op
Iteration   9: 118,809 ms/op
Iteration  10: 118,322 ms/op


Result "benchmarkFind":
  121,353 ±(99.9%) 7,457 ms/op [Average]
  (min, avg, max) = (118,322, 121,353, 135,178), stdev = 4,932
  CI (99.9%): [113,896, 128,810] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternSize = 32)

# Run progress: 46,51% complete, ETA 08:32:26
# Fork: 1 of 1
# Warmup Iteration   1: 83,830 ms/op
# Warmup Iteration   2: 89,844 ms/op
# Warmup Iteration   3: 80,284 ms/op
# Warmup Iteration   4: 80,858 ms/op
# Warmup Iteration   5: 80,262 ms/op
# Warmup Iteration   6: 80,175 ms/op
# Warmup Iteration   7: 78,312 ms/op
# Warmup Iteration   8: 70,631 ms/op
# Warmup Iteration   9: 70,555 ms/op
# Warmup Iteration  10: 70,345 ms/op
Iteration   1: 69,919 ms/op
Iteration   2: 70,294 ms/op
Iteration   3: 70,037 ms/op
Iteration   4: 70,253 ms/op
Iteration   5: 70,128 ms/op
Iteration   6: 69,798 ms/op
Iteration   7: 69,947 ms/op
Iteration   8: 70,306 ms/op
Iteration   9: 70,002 ms/op
Iteration  10: 70,142 ms/op


Result "benchmarkFind":
  70,083 ±(99.9%) 0,259 ms/op [Average]
  (min, avg, max) = (69,798, 70,083, 70,306), stdev = 0,171
  CI (99.9%): [69,824, 70,342] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternSize = 64)

# Run progress: 46,55% complete, ETA 08:31:56
# Fork: 1 of 1
# Warmup Iteration   1: 65,876 ms/op
# Warmup Iteration   2: 63,394 ms/op
# Warmup Iteration   3: 63,459 ms/op
# Warmup Iteration   4: 63,306 ms/op
# Warmup Iteration   5: 63,402 ms/op
# Warmup Iteration   6: 60,739 ms/op
# Warmup Iteration   7: 59,003 ms/op
# Warmup Iteration   8: 58,751 ms/op
# Warmup Iteration   9: 58,335 ms/op
# Warmup Iteration  10: 58,190 ms/op
Iteration   1: 58,211 ms/op
Iteration   2: 58,134 ms/op
Iteration   3: 58,256 ms/op
Iteration   4: 58,221 ms/op
Iteration   5: 58,344 ms/op
Iteration   6: 58,159 ms/op
Iteration   7: 58,070 ms/op
Iteration   8: 58,042 ms/op
Iteration   9: 58,153 ms/op
Iteration  10: 58,054 ms/op


Result "benchmarkFind":
  58,164 ±(99.9%) 0,145 ms/op [Average]
  (min, avg, max) = (58,042, 58,164, 58,344), stdev = 0,096
  CI (99.9%): [58,019, 58,310] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternSize = 128)

# Run progress: 46,60% complete, ETA 08:31:25
# Fork: 1 of 1
# Warmup Iteration   1: 93,285 ms/op
# Warmup Iteration   2: 89,534 ms/op
# Warmup Iteration   3: 89,553 ms/op
# Warmup Iteration   4: 89,966 ms/op
# Warmup Iteration   5: 89,649 ms/op
# Warmup Iteration   6: 89,634 ms/op
# Warmup Iteration   7: 89,700 ms/op
# Warmup Iteration   8: 85,640 ms/op
# Warmup Iteration   9: 83,111 ms/op
# Warmup Iteration  10: 82,698 ms/op
Iteration   1: 82,567 ms/op
Iteration   2: 82,481 ms/op
Iteration   3: 82,640 ms/op
Iteration   4: 82,435 ms/op
Iteration   5: 92,853 ms/op
Iteration   6: 82,411 ms/op
Iteration   7: 82,348 ms/op
Iteration   8: 82,325 ms/op
Iteration   9: 82,276 ms/op
Iteration  10: 82,264 ms/op


Result "benchmarkFind":
  83,460 ±(99.9%) 4,993 ms/op [Average]
  (min, avg, max) = (82,264, 83,460, 92,853), stdev = 3,303
  CI (99.9%): [78,467, 88,453] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternSize = 256)

# Run progress: 46,65% complete, ETA 08:30:55
# Fork: 1 of 1
# Warmup Iteration   1: 84,786 ms/op
# Warmup Iteration   2: 81,360 ms/op
# Warmup Iteration   3: 80,868 ms/op
# Warmup Iteration   4: 81,365 ms/op
# Warmup Iteration   5: 82,087 ms/op
# Warmup Iteration   6: 80,725 ms/op
# Warmup Iteration   7: 79,263 ms/op
# Warmup Iteration   8: 75,354 ms/op
# Warmup Iteration   9: 75,117 ms/op
# Warmup Iteration  10: 75,176 ms/op
Iteration   1: 74,794 ms/op
Iteration   2: 74,797 ms/op
Iteration   3: 75,124 ms/op
Iteration   4: 78,751 ms/op
Iteration   5: 76,720 ms/op
Iteration   6: 74,941 ms/op
Iteration   7: 74,938 ms/op
Iteration   8: 74,858 ms/op
Iteration   9: 75,027 ms/op
Iteration  10: 74,820 ms/op


Result "benchmarkFind":
  75,477 ±(99.9%) 1,946 ms/op [Average]
  (min, avg, max) = (74,794, 75,477, 78,751), stdev = 1,287
  CI (99.9%): [73,531, 77,423] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternSize = 2)

# Run progress: 46,69% complete, ETA 08:30:24
# Fork: 1 of 1
# Warmup Iteration   1: 4528,580 ms/op
# Warmup Iteration   2: 4471,870 ms/op
# Warmup Iteration   3: 4476,904 ms/op
# Warmup Iteration   4: 4279,235 ms/op
# Warmup Iteration   5: 3893,631 ms/op
# Warmup Iteration   6: 3946,100 ms/op
# Warmup Iteration   7: 3921,274 ms/op
# Warmup Iteration   8: 3892,191 ms/op
# Warmup Iteration   9: 3897,382 ms/op
# Warmup Iteration  10: 3887,277 ms/op
Iteration   1: 3886,593 ms/op
Iteration   2: 3904,794 ms/op
Iteration   3: 3888,767 ms/op
Iteration   4: 3897,807 ms/op
Iteration   5: 3902,505 ms/op
Iteration   6: 3904,125 ms/op
Iteration   7: 3892,619 ms/op
Iteration   8: 3901,177 ms/op
Iteration   9: 3918,266 ms/op
Iteration  10: 3895,559 ms/op


Result "benchmarkFind":
  3899,221 ±(99.9%) 13,895 ms/op [Average]
  (min, avg, max) = (3886,593, 3899,221, 3918,266), stdev = 9,190
  CI (99.9%): [3885,326, 3913,116] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternSize = 4)

# Run progress: 46,74% complete, ETA 08:31:06
# Fork: 1 of 1
# Warmup Iteration   1: 2741,887 ms/op
# Warmup Iteration   2: 2702,781 ms/op
# Warmup Iteration   3: 2718,425 ms/op
# Warmup Iteration   4: 2701,883 ms/op
# Warmup Iteration   5: 2700,532 ms/op
# Warmup Iteration   6: 2702,868 ms/op
# Warmup Iteration   7: 2703,364 ms/op
# Warmup Iteration   8: 2708,321 ms/op
# Warmup Iteration   9: 2700,291 ms/op
# Warmup Iteration  10: 2699,388 ms/op
Iteration   1: 2710,675 ms/op
Iteration   2: 2699,958 ms/op
Iteration   3: 2699,749 ms/op
Iteration   4: 2698,898 ms/op
Iteration   5: 2698,657 ms/op
Iteration   6: 2699,645 ms/op
Iteration   7: 2698,731 ms/op
Iteration   8: 2701,149 ms/op
Iteration   9: 2704,679 ms/op
Iteration  10: 2698,147 ms/op


Result "benchmarkFind":
  2701,029 ±(99.9%) 5,852 ms/op [Average]
  (min, avg, max) = (2698,147, 2701,029, 2710,675), stdev = 3,871
  CI (99.9%): [2695,177, 2706,881] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternSize = 8)

# Run progress: 46,78% complete, ETA 08:31:18
# Fork: 1 of 1
# Warmup Iteration   1: 1204,388 ms/op
# Warmup Iteration   2: 1142,153 ms/op
# Warmup Iteration   3: 1137,036 ms/op
# Warmup Iteration   4: 1135,888 ms/op
# Warmup Iteration   5: 1135,540 ms/op
# Warmup Iteration   6: 1142,351 ms/op
# Warmup Iteration   7: 1138,382 ms/op
# Warmup Iteration   8: 1132,966 ms/op
# Warmup Iteration   9: 1125,649 ms/op
# Warmup Iteration  10: 1126,727 ms/op
Iteration   1: 1127,590 ms/op
Iteration   2: 1123,764 ms/op
Iteration   3: 1124,342 ms/op
Iteration   4: 1123,070 ms/op
Iteration   5: 1128,895 ms/op
Iteration   6: 1122,880 ms/op
Iteration   7: 1129,485 ms/op
Iteration   8: 1125,984 ms/op
Iteration   9: 1122,548 ms/op
Iteration  10: 1124,053 ms/op


Result "benchmarkFind":
  1125,261 ±(99.9%) 3,883 ms/op [Average]
  (min, avg, max) = (1122,548, 1125,261, 1129,485), stdev = 2,568
  CI (99.9%): [1121,378, 1129,144] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternSize = 16)

# Run progress: 46,83% complete, ETA 08:30:54
# Fork: 1 of 1
# Warmup Iteration   1: 576,899 ms/op
# Warmup Iteration   2: 551,306 ms/op
# Warmup Iteration   3: 551,955 ms/op
# Warmup Iteration   4: 553,807 ms/op
# Warmup Iteration   5: 549,377 ms/op
# Warmup Iteration   6: 549,913 ms/op
# Warmup Iteration   7: 546,801 ms/op
# Warmup Iteration   8: 549,189 ms/op
# Warmup Iteration   9: 551,147 ms/op
# Warmup Iteration  10: 548,190 ms/op
Iteration   1: 549,770 ms/op
Iteration   2: 548,283 ms/op
Iteration   3: 549,706 ms/op
Iteration   4: 550,611 ms/op
Iteration   5: 548,660 ms/op
Iteration   6: 547,961 ms/op
Iteration   7: 552,735 ms/op
Iteration   8: 545,894 ms/op
Iteration   9: 546,924 ms/op
Iteration  10: 545,832 ms/op


Result "benchmarkFind":
  548,638 ±(99.9%) 3,267 ms/op [Average]
  (min, avg, max) = (545,832, 548,638, 552,735), stdev = 2,161
  CI (99.9%): [545,371, 551,905] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternSize = 32)

# Run progress: 46,88% complete, ETA 08:30:30
# Fork: 1 of 1
# Warmup Iteration   1: 313,974 ms/op
# Warmup Iteration   2: 331,255 ms/op
# Warmup Iteration   3: 300,922 ms/op
# Warmup Iteration   4: 300,143 ms/op
# Warmup Iteration   5: 301,095 ms/op
# Warmup Iteration   6: 299,304 ms/op
# Warmup Iteration   7: 299,987 ms/op
# Warmup Iteration   8: 300,069 ms/op
# Warmup Iteration   9: 300,777 ms/op
# Warmup Iteration  10: 300,651 ms/op
Iteration   1: 301,301 ms/op
Iteration   2: 300,956 ms/op
Iteration   3: 300,249 ms/op
Iteration   4: 299,797 ms/op
Iteration   5: 299,501 ms/op
Iteration   6: 300,854 ms/op
Iteration   7: 299,550 ms/op
Iteration   8: 300,010 ms/op
Iteration   9: 299,952 ms/op
Iteration  10: 299,824 ms/op


Result "benchmarkFind":
  300,200 ±(99.9%) 0,946 ms/op [Average]
  (min, avg, max) = (299,501, 300,200, 301,301), stdev = 0,626
  CI (99.9%): [299,253, 301,146] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternSize = 64)

# Run progress: 46,92% complete, ETA 08:30:07
# Fork: 1 of 1
# Warmup Iteration   1: 258,863 ms/op
# Warmup Iteration   2: 250,889 ms/op
# Warmup Iteration   3: 249,943 ms/op
# Warmup Iteration   4: 249,917 ms/op
# Warmup Iteration   5: 250,136 ms/op
# Warmup Iteration   6: 249,931 ms/op
# Warmup Iteration   7: 250,090 ms/op
# Warmup Iteration   8: 249,634 ms/op
# Warmup Iteration   9: 249,974 ms/op
# Warmup Iteration  10: 249,912 ms/op
Iteration   1: 249,939 ms/op
Iteration   2: 250,120 ms/op
Iteration   3: 250,103 ms/op
Iteration   4: 249,851 ms/op
Iteration   5: 250,089 ms/op
Iteration   6: 250,079 ms/op
Iteration   7: 249,408 ms/op
Iteration   8: 249,648 ms/op
Iteration   9: 249,778 ms/op
Iteration  10: 244,843 ms/op


Result "benchmarkFind":
  249,386 ±(99.9%) 2,438 ms/op [Average]
  (min, avg, max) = (244,843, 249,386, 250,120), stdev = 1,613
  CI (99.9%): [246,948, 251,824] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternSize = 128)

# Run progress: 46,97% complete, ETA 08:29:42
# Fork: 1 of 1
# Warmup Iteration   1: 348,381 ms/op
# Warmup Iteration   2: 336,167 ms/op
# Warmup Iteration   3: 336,275 ms/op
# Warmup Iteration   4: 368,594 ms/op
# Warmup Iteration   5: 335,912 ms/op
# Warmup Iteration   6: 335,672 ms/op
# Warmup Iteration   7: 335,480 ms/op
# Warmup Iteration   8: 335,466 ms/op
# Warmup Iteration   9: 335,570 ms/op
# Warmup Iteration  10: 337,769 ms/op
Iteration   1: 335,252 ms/op
Iteration   2: 336,080 ms/op
Iteration   3: 335,064 ms/op
Iteration   4: 335,755 ms/op
Iteration   5: 336,108 ms/op
Iteration   6: 335,690 ms/op
Iteration   7: 335,408 ms/op
Iteration   8: 335,959 ms/op
Iteration   9: 335,825 ms/op
Iteration  10: 335,602 ms/op


Result "benchmarkFind":
  335,674 ±(99.9%) 0,526 ms/op [Average]
  (min, avg, max) = (335,064, 335,674, 336,108), stdev = 0,348
  CI (99.9%): [335,148, 336,200] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternSize = 256)

# Run progress: 47,01% complete, ETA 08:29:16
# Fork: 1 of 1
# Warmup Iteration   1: 297,888 ms/op
# Warmup Iteration   2: 289,975 ms/op
# Warmup Iteration   3: 289,129 ms/op
# Warmup Iteration   4: 288,920 ms/op
# Warmup Iteration   5: 289,197 ms/op
# Warmup Iteration   6: 289,685 ms/op
# Warmup Iteration   7: 289,050 ms/op
# Warmup Iteration   8: 289,972 ms/op
# Warmup Iteration   9: 289,206 ms/op
# Warmup Iteration  10: 289,047 ms/op
Iteration   1: 289,305 ms/op
Iteration   2: 288,886 ms/op
Iteration   3: 289,310 ms/op
Iteration   4: 289,140 ms/op
Iteration   5: 289,161 ms/op
Iteration   6: 288,834 ms/op
Iteration   7: 288,714 ms/op
Iteration   8: 288,239 ms/op
Iteration   9: 288,454 ms/op
Iteration  10: 288,202 ms/op


Result "benchmarkFind":
  288,824 ±(99.9%) 0,630 ms/op [Average]
  (min, avg, max) = (288,202, 288,824, 289,310), stdev = 0,417
  CI (99.9%): [288,194, 289,455] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCKnuthMorrisPrattBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternSize = 2)

# Run progress: 47,06% complete, ETA 08:28:52
# Fork: 1 of 1
# Warmup Iteration   1: 0,193 ms/op
# Warmup Iteration   2: 0,181 ms/op
# Warmup Iteration   3: 0,176 ms/op
# Warmup Iteration   4: 0,177 ms/op
# Warmup Iteration   5: 0,177 ms/op
# Warmup Iteration   6: 0,178 ms/op
# Warmup Iteration   7: 0,179 ms/op
# Warmup Iteration   8: 0,179 ms/op
# Warmup Iteration   9: 0,180 ms/op
# Warmup Iteration  10: 0,181 ms/op
Iteration   1: 0,180 ms/op
Iteration   2: 0,187 ms/op
Iteration   3: 0,186 ms/op
Iteration   4: 0,180 ms/op
Iteration   5: 0,199 ms/op
Iteration   6: 0,178 ms/op
Iteration   7: 0,176 ms/op
Iteration   8: 0,178 ms/op
Iteration   9: 0,178 ms/op
Iteration  10: 0,178 ms/op


Result "benchmarkFind":
  0,182 ±(99.9%) 0,011 ms/op [Average]
  (min, avg, max) = (0,176, 0,182, 0,199), stdev = 0,007
  CI (99.9%): [0,171, 0,192] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCKnuthMorrisPrattBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternSize = 4)

# Run progress: 47,10% complete, ETA 08:28:19
# Fork: 1 of 1
# Warmup Iteration   1: 0,641 ms/op
# Warmup Iteration   2: 0,576 ms/op
# Warmup Iteration   3: 0,572 ms/op
# Warmup Iteration   4: 0,570 ms/op
# Warmup Iteration   5: 0,576 ms/op
# Warmup Iteration   6: 0,575 ms/op
# Warmup Iteration   7: 0,572 ms/op
# Warmup Iteration   8: 0,571 ms/op
# Warmup Iteration   9: 0,578 ms/op
# Warmup Iteration  10: 0,576 ms/op
Iteration   1: 0,581 ms/op
Iteration   2: 0,582 ms/op
Iteration   3: 0,576 ms/op
Iteration   4: 0,577 ms/op
Iteration   5: 0,575 ms/op
Iteration   6: 0,579 ms/op
Iteration   7: 0,577 ms/op
Iteration   8: 0,575 ms/op
Iteration   9: 0,578 ms/op
Iteration  10: 0,578 ms/op


Result "benchmarkFind":
  0,578 ±(99.9%) 0,004 ms/op [Average]
  (min, avg, max) = (0,575, 0,578, 0,582), stdev = 0,002
  CI (99.9%): [0,574, 0,582] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCKnuthMorrisPrattBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternSize = 8)

# Run progress: 47,15% complete, ETA 08:27:46
# Fork: 1 of 1
# Warmup Iteration   1: 44,813 ms/op
# Warmup Iteration   2: 43,881 ms/op
# Warmup Iteration   3: 43,751 ms/op
# Warmup Iteration   4: 43,374 ms/op
# Warmup Iteration   5: 43,632 ms/op
# Warmup Iteration   6: 44,015 ms/op
# Warmup Iteration   7: 43,539 ms/op
# Warmup Iteration   8: 43,457 ms/op
# Warmup Iteration   9: 43,793 ms/op
# Warmup Iteration  10: 43,699 ms/op
Iteration   1: 43,665 ms/op
Iteration   2: 43,609 ms/op
Iteration   3: 43,460 ms/op
Iteration   4: 43,760 ms/op
Iteration   5: 43,721 ms/op
Iteration   6: 43,649 ms/op
Iteration   7: 43,988 ms/op
Iteration   8: 43,515 ms/op
Iteration   9: 43,642 ms/op
Iteration  10: 43,919 ms/op


Result "benchmarkFind":
  43,693 ±(99.9%) 0,248 ms/op [Average]
  (min, avg, max) = (43,460, 43,693, 43,988), stdev = 0,164
  CI (99.9%): [43,445, 43,940] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCKnuthMorrisPrattBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternSize = 16)

# Run progress: 47,20% complete, ETA 08:27:13
# Fork: 1 of 1
# Warmup Iteration   1: 668,280 ms/op
# Warmup Iteration   2: 670,043 ms/op
# Warmup Iteration   3: 664,956 ms/op
# Warmup Iteration   4: 671,087 ms/op
# Warmup Iteration   5: 664,828 ms/op
# Warmup Iteration   6: 666,899 ms/op
# Warmup Iteration   7: 664,212 ms/op
# Warmup Iteration   8: 666,169 ms/op
# Warmup Iteration   9: 506,022 ms/op
# Warmup Iteration  10: 543,354 ms/op
Iteration   1: 500,854 ms/op
Iteration   2: 508,106 ms/op
Iteration   3: 504,547 ms/op
Iteration   4: 508,916 ms/op
Iteration   5: 501,758 ms/op
Iteration   6: 501,949 ms/op
Iteration   7: 504,895 ms/op
Iteration   8: 503,288 ms/op
Iteration   9: 500,830 ms/op
Iteration  10: 505,196 ms/op


Result "benchmarkFind":
  504,034 ±(99.9%) 4,313 ms/op [Average]
  (min, avg, max) = (500,830, 504,034, 508,916), stdev = 2,853
  CI (99.9%): [499,721, 508,347] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCKnuthMorrisPrattBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternSize = 32)

# Run progress: 47,24% complete, ETA 08:26:44
# Fork: 1 of 1
# Warmup Iteration   1: 673,605 ms/op
# Warmup Iteration   2: 676,550 ms/op
# Warmup Iteration   3: 677,490 ms/op
# Warmup Iteration   4: 677,842 ms/op
# Warmup Iteration   5: 681,816 ms/op
# Warmup Iteration   6: 675,325 ms/op
# Warmup Iteration   7: 675,930 ms/op
# Warmup Iteration   8: 677,725 ms/op
# Warmup Iteration   9: 676,815 ms/op
# Warmup Iteration  10: 675,219 ms/op
Iteration   1: 670,455 ms/op
Iteration   2: 676,473 ms/op
Iteration   3: 673,719 ms/op
Iteration   4: 676,862 ms/op
Iteration   5: 673,889 ms/op
Iteration   6: 672,375 ms/op
Iteration   7: 673,250 ms/op
Iteration   8: 674,473 ms/op
Iteration   9: 677,528 ms/op
Iteration  10: 677,078 ms/op


Result "benchmarkFind":
  674,610 ±(99.9%) 3,513 ms/op [Average]
  (min, avg, max) = (670,455, 674,610, 677,528), stdev = 2,324
  CI (99.9%): [671,097, 678,123] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCKnuthMorrisPrattBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternSize = 64)

# Run progress: 47,29% complete, ETA 08:26:19
# Fork: 1 of 1
# Warmup Iteration   1: 667,897 ms/op
# Warmup Iteration   2: 669,706 ms/op
# Warmup Iteration   3: 668,435 ms/op
# Warmup Iteration   4: 672,028 ms/op
# Warmup Iteration   5: 669,981 ms/op
# Warmup Iteration   6: 666,376 ms/op
# Warmup Iteration   7: 680,656 ms/op
# Warmup Iteration   8: 669,820 ms/op
# Warmup Iteration   9: 666,840 ms/op
# Warmup Iteration  10: 668,839 ms/op
Iteration   1: 672,458 ms/op
Iteration   2: 670,986 ms/op
Iteration   3: 668,076 ms/op
Iteration   4: 669,222 ms/op
Iteration   5: 729,340 ms/op
Iteration   6: 670,689 ms/op
Iteration   7: 674,523 ms/op
Iteration   8: 672,643 ms/op
Iteration   9: 672,583 ms/op
Iteration  10: 670,718 ms/op


Result "benchmarkFind":
  677,124 ±(99.9%) 27,878 ms/op [Average]
  (min, avg, max) = (668,076, 677,124, 729,340), stdev = 18,440
  CI (99.9%): [649,246, 705,002] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCKnuthMorrisPrattBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternSize = 128)

# Run progress: 47,33% complete, ETA 08:25:55
# Fork: 1 of 1
# Warmup Iteration   1: 712,564 ms/op
# Warmup Iteration   2: 711,892 ms/op
# Warmup Iteration   3: 709,741 ms/op
# Warmup Iteration   4: 714,325 ms/op
# Warmup Iteration   5: 710,657 ms/op
# Warmup Iteration   6: 713,986 ms/op
# Warmup Iteration   7: 716,212 ms/op
# Warmup Iteration   8: 715,666 ms/op
# Warmup Iteration   9: 712,539 ms/op
# Warmup Iteration  10: 710,714 ms/op
Iteration   1: 709,423 ms/op
Iteration   2: 709,555 ms/op
Iteration   3: 709,390 ms/op
Iteration   4: 709,779 ms/op
Iteration   5: 710,799 ms/op
Iteration   6: 707,248 ms/op
Iteration   7: 712,108 ms/op
Iteration   8: 719,881 ms/op
Iteration   9: 708,096 ms/op
Iteration  10: 711,945 ms/op


Result "benchmarkFind":
  710,822 ±(99.9%) 5,331 ms/op [Average]
  (min, avg, max) = (707,248, 710,822, 719,881), stdev = 3,526
  CI (99.9%): [705,491, 716,153] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCKnuthMorrisPrattBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternSize = 256)

# Run progress: 47,38% complete, ETA 08:25:32
# Fork: 1 of 1
# Warmup Iteration   1: 717,428 ms/op
# Warmup Iteration   2: 741,687 ms/op
# Warmup Iteration   3: 697,870 ms/op
# Warmup Iteration   4: 680,815 ms/op
# Warmup Iteration   5: 686,929 ms/op
# Warmup Iteration   6: 668,876 ms/op
# Warmup Iteration   7: 676,193 ms/op
# Warmup Iteration   8: 688,894 ms/op
# Warmup Iteration   9: 667,132 ms/op
# Warmup Iteration  10: 669,427 ms/op
Iteration   1: 677,602 ms/op
Iteration   2: 668,835 ms/op
Iteration   3: 671,770 ms/op
Iteration   4: 677,843 ms/op
Iteration   5: 677,584 ms/op
Iteration   6: 721,955 ms/op
Iteration   7: 669,578 ms/op
Iteration   8: 673,287 ms/op
Iteration   9: 672,162 ms/op
Iteration  10: 670,364 ms/op


Result "benchmarkFind":
  678,098 ±(99.9%) 23,855 ms/op [Average]
  (min, avg, max) = (668,835, 678,098, 721,955), stdev = 15,779
  CI (99.9%): [654,243, 701,953] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCKnuthMorrisPrattBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternSize = 2)

# Run progress: 47,43% complete, ETA 08:25:07
# Fork: 1 of 1
# Warmup Iteration   1: 0,656 ms/op
# Warmup Iteration   2: 0,598 ms/op
# Warmup Iteration   3: 0,598 ms/op
# Warmup Iteration   4: 0,607 ms/op
# Warmup Iteration   5: 0,605 ms/op
# Warmup Iteration   6: 0,603 ms/op
# Warmup Iteration   7: 0,601 ms/op
# Warmup Iteration   8: 0,618 ms/op
# Warmup Iteration   9: 0,611 ms/op
# Warmup Iteration  10: 0,608 ms/op
Iteration   1: 0,611 ms/op
Iteration   2: 0,610 ms/op
Iteration   3: 0,620 ms/op
Iteration   4: 0,608 ms/op
Iteration   5: 0,608 ms/op
Iteration   6: 0,608 ms/op
Iteration   7: 0,611 ms/op
Iteration   8: 0,607 ms/op
Iteration   9: 0,611 ms/op
Iteration  10: 0,606 ms/op


Result "benchmarkFind":
  0,610 ±(99.9%) 0,006 ms/op [Average]
  (min, avg, max) = (0,606, 0,610, 0,620), stdev = 0,004
  CI (99.9%): [0,604, 0,616] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCKnuthMorrisPrattBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternSize = 4)

# Run progress: 47,47% complete, ETA 08:24:34
# Fork: 1 of 1
# Warmup Iteration   1: 41,701 ms/op
# Warmup Iteration   2: 40,341 ms/op
# Warmup Iteration   3: 40,520 ms/op
# Warmup Iteration   4: 39,898 ms/op
# Warmup Iteration   5: 40,823 ms/op
# Warmup Iteration   6: 40,210 ms/op
# Warmup Iteration   7: 39,983 ms/op
# Warmup Iteration   8: 40,184 ms/op
# Warmup Iteration   9: 40,638 ms/op
# Warmup Iteration  10: 39,791 ms/op
Iteration   1: 40,104 ms/op
Iteration   2: 39,774 ms/op
Iteration   3: 40,218 ms/op
Iteration   4: 42,166 ms/op
Iteration   5: 40,872 ms/op
Iteration   6: 40,065 ms/op
Iteration   7: 40,704 ms/op
Iteration   8: 41,025 ms/op
Iteration   9: 40,970 ms/op
Iteration  10: 41,968 ms/op


Result "benchmarkFind":
  40,787 ±(99.9%) 1,207 ms/op [Average]
  (min, avg, max) = (39,774, 40,787, 42,166), stdev = 0,799
  CI (99.9%): [39,579, 41,994] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCKnuthMorrisPrattBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternSize = 8)

# Run progress: 47,52% complete, ETA 08:24:01
# Fork: 1 of 1
# Warmup Iteration   1: 636,835 ms/op
# Warmup Iteration   2: 620,246 ms/op
# Warmup Iteration   3: 621,617 ms/op
# Warmup Iteration   4: 600,041 ms/op
# Warmup Iteration   5: 596,578 ms/op
# Warmup Iteration   6: 608,479 ms/op
# Warmup Iteration   7: 602,462 ms/op
# Warmup Iteration   8: 599,686 ms/op
# Warmup Iteration   9: 504,529 ms/op
# Warmup Iteration  10: 473,794 ms/op
Iteration   1: 445,121 ms/op
Iteration   2: 446,435 ms/op
Iteration   3: 453,429 ms/op
Iteration   4: 453,714 ms/op
Iteration   5: 471,715 ms/op
Iteration   6: 449,842 ms/op
Iteration   7: 439,410 ms/op
Iteration   8: 436,838 ms/op
Iteration   9: 446,974 ms/op
Iteration  10: 456,258 ms/op


Result "benchmarkFind":
  449,974 ±(99.9%) 14,842 ms/op [Average]
  (min, avg, max) = (436,838, 449,974, 471,715), stdev = 9,817
  CI (99.9%): [435,132, 464,815] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCKnuthMorrisPrattBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternSize = 16)

# Run progress: 47,56% complete, ETA 08:23:35
# Fork: 1 of 1
# Warmup Iteration   1: 603,352 ms/op
# Warmup Iteration   2: 596,377 ms/op
# Warmup Iteration   3: 632,331 ms/op
# Warmup Iteration   4: 657,579 ms/op
# Warmup Iteration   5: 631,337 ms/op
# Warmup Iteration   6: 592,350 ms/op
# Warmup Iteration   7: 646,411 ms/op
# Warmup Iteration   8: 639,315 ms/op
# Warmup Iteration   9: 636,084 ms/op
# Warmup Iteration  10: 603,471 ms/op
Iteration   1: 585,715 ms/op
Iteration   2: 589,780 ms/op
Iteration   3: 586,932 ms/op
Iteration   4: 579,541 ms/op
Iteration   5: 589,629 ms/op
Iteration   6: 585,771 ms/op
Iteration   7: 583,535 ms/op
Iteration   8: 579,481 ms/op
Iteration   9: 582,337 ms/op
Iteration  10: 583,141 ms/op


Result "benchmarkFind":
  584,586 ±(99.9%) 5,529 ms/op [Average]
  (min, avg, max) = (579,481, 584,586, 589,780), stdev = 3,657
  CI (99.9%): [579,058, 590,115] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCKnuthMorrisPrattBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternSize = 32)

# Run progress: 47,61% complete, ETA 08:23:07
# Fork: 1 of 1
# Warmup Iteration   1: 579,728 ms/op
# Warmup Iteration   2: 581,399 ms/op
# Warmup Iteration   3: 580,564 ms/op
# Warmup Iteration   4: 581,870 ms/op
# Warmup Iteration   5: 580,009 ms/op
# Warmup Iteration   6: 577,707 ms/op
# Warmup Iteration   7: 578,487 ms/op
# Warmup Iteration   8: 580,712 ms/op
# Warmup Iteration   9: 578,733 ms/op
# Warmup Iteration  10: 580,197 ms/op
Iteration   1: 579,546 ms/op
Iteration   2: 579,357 ms/op
Iteration   3: 578,384 ms/op
Iteration   4: 579,776 ms/op
Iteration   5: 577,268 ms/op
Iteration   6: 577,761 ms/op
Iteration   7: 577,737 ms/op
Iteration   8: 631,165 ms/op
Iteration   9: 591,768 ms/op
Iteration  10: 588,023 ms/op


Result "benchmarkFind":
  586,079 ±(99.9%) 25,057 ms/op [Average]
  (min, avg, max) = (577,268, 586,079, 631,165), stdev = 16,573
  CI (99.9%): [561,022, 611,135] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCKnuthMorrisPrattBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternSize = 64)

# Run progress: 47,66% complete, ETA 08:22:39
# Fork: 1 of 1
# Warmup Iteration   1: 584,310 ms/op
# Warmup Iteration   2: 584,008 ms/op
# Warmup Iteration   3: 591,586 ms/op
# Warmup Iteration   4: 585,078 ms/op
# Warmup Iteration   5: 589,504 ms/op
# Warmup Iteration   6: 584,112 ms/op
# Warmup Iteration   7: 584,969 ms/op
# Warmup Iteration   8: 582,399 ms/op
# Warmup Iteration   9: 588,488 ms/op
# Warmup Iteration  10: 582,496 ms/op
Iteration   1: 584,900 ms/op
Iteration   2: 589,470 ms/op
Iteration   3: 585,111 ms/op
Iteration   4: 589,460 ms/op
Iteration   5: 588,194 ms/op
Iteration   6: 581,500 ms/op
Iteration   7: 588,770 ms/op
Iteration   8: 584,481 ms/op
Iteration   9: 586,607 ms/op
Iteration  10: 582,622 ms/op


Result "benchmarkFind":
  586,111 ±(99.9%) 4,297 ms/op [Average]
  (min, avg, max) = (581,500, 586,111, 589,470), stdev = 2,843
  CI (99.9%): [581,814, 590,409] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCKnuthMorrisPrattBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternSize = 128)

# Run progress: 47,70% complete, ETA 08:22:10
# Fork: 1 of 1
# Warmup Iteration   1: 579,421 ms/op
# Warmup Iteration   2: 575,930 ms/op
# Warmup Iteration   3: 579,689 ms/op
# Warmup Iteration   4: 580,247 ms/op
# Warmup Iteration   5: 581,105 ms/op
# Warmup Iteration   6: 575,519 ms/op
# Warmup Iteration   7: 578,587 ms/op
# Warmup Iteration   8: 574,797 ms/op
# Warmup Iteration   9: 576,073 ms/op
# Warmup Iteration  10: 574,803 ms/op
Iteration   1: 578,167 ms/op
Iteration   2: 574,813 ms/op
Iteration   3: 577,283 ms/op
Iteration   4: 579,553 ms/op
Iteration   5: 576,058 ms/op
Iteration   6: 575,613 ms/op
Iteration   7: 579,347 ms/op
Iteration   8: 576,254 ms/op
Iteration   9: 574,604 ms/op
Iteration  10: 576,703 ms/op


Result "benchmarkFind":
  576,839 ±(99.9%) 2,628 ms/op [Average]
  (min, avg, max) = (574,604, 576,839, 579,553), stdev = 1,738
  CI (99.9%): [574,212, 579,467] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCKnuthMorrisPrattBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternSize = 256)

# Run progress: 47,75% complete, ETA 08:21:41
# Fork: 1 of 1
# Warmup Iteration   1: 580,419 ms/op
# Warmup Iteration   2: 579,877 ms/op
# Warmup Iteration   3: 577,219 ms/op
# Warmup Iteration   4: 577,406 ms/op
# Warmup Iteration   5: 576,041 ms/op
# Warmup Iteration   6: 625,308 ms/op
# Warmup Iteration   7: 580,860 ms/op
# Warmup Iteration   8: 582,224 ms/op
# Warmup Iteration   9: 578,708 ms/op
# Warmup Iteration  10: 573,544 ms/op
Iteration   1: 580,735 ms/op
Iteration   2: 577,602 ms/op
Iteration   3: 577,573 ms/op
Iteration   4: 576,337 ms/op
Iteration   5: 581,441 ms/op
Iteration   6: 583,497 ms/op
Iteration   7: 576,127 ms/op
Iteration   8: 575,013 ms/op
Iteration   9: 574,012 ms/op
Iteration  10: 577,965 ms/op


Result "benchmarkFind":
  578,030 ±(99.9%) 4,535 ms/op [Average]
  (min, avg, max) = (574,012, 578,030, 583,497), stdev = 2,999
  CI (99.9%): [573,496, 582,565] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCKnuthMorrisPrattBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternSize = 2)

# Run progress: 47,79% complete, ETA 08:21:12
# Fork: 1 of 1
# Warmup Iteration   1: 2,501 ms/op
# Warmup Iteration   2: 2,337 ms/op
# Warmup Iteration   3: 2,339 ms/op
# Warmup Iteration   4: 2,358 ms/op
# Warmup Iteration   5: 2,344 ms/op
# Warmup Iteration   6: 2,343 ms/op
# Warmup Iteration   7: 2,340 ms/op
# Warmup Iteration   8: 2,334 ms/op
# Warmup Iteration   9: 2,332 ms/op
# Warmup Iteration  10: 2,346 ms/op
Iteration   1: 2,338 ms/op
Iteration   2: 2,354 ms/op
Iteration   3: 2,366 ms/op
Iteration   4: 2,361 ms/op
Iteration   5: 2,354 ms/op
Iteration   6: 2,360 ms/op
Iteration   7: 2,365 ms/op
Iteration   8: 2,357 ms/op
Iteration   9: 2,363 ms/op
Iteration  10: 2,348 ms/op


Result "benchmarkFind":
  2,357 ±(99.9%) 0,013 ms/op [Average]
  (min, avg, max) = (2,338, 2,357, 2,366), stdev = 0,009
  CI (99.9%): [2,343, 2,370] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCKnuthMorrisPrattBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternSize = 4)

# Run progress: 47,84% complete, ETA 08:20:39
# Fork: 1 of 1
# Warmup Iteration   1: 602,423 ms/op
# Warmup Iteration   2: 551,077 ms/op
# Warmup Iteration   3: 342,643 ms/op
# Warmup Iteration   4: 339,645 ms/op
# Warmup Iteration   5: 339,203 ms/op
# Warmup Iteration   6: 340,251 ms/op
# Warmup Iteration   7: 339,547 ms/op
# Warmup Iteration   8: 340,490 ms/op
# Warmup Iteration   9: 338,229 ms/op
# Warmup Iteration  10: 340,247 ms/op
Iteration   1: 341,694 ms/op
Iteration   2: 340,005 ms/op
Iteration   3: 339,268 ms/op
Iteration   4: 338,924 ms/op
Iteration   5: 338,989 ms/op
Iteration   6: 337,355 ms/op
Iteration   7: 340,531 ms/op
Iteration   8: 340,795 ms/op
Iteration   9: 340,359 ms/op
Iteration  10: 340,272 ms/op


Result "benchmarkFind":
  339,819 ±(99.9%) 1,843 ms/op [Average]
  (min, avg, max) = (337,355, 339,819, 341,694), stdev = 1,219
  CI (99.9%): [337,976, 341,662] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCKnuthMorrisPrattBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternSize = 8)

# Run progress: 47,89% complete, ETA 08:20:07
# Fork: 1 of 1
# Warmup Iteration   1: 477,191 ms/op
# Warmup Iteration   2: 442,494 ms/op
# Warmup Iteration   3: 446,127 ms/op
# Warmup Iteration   4: 442,129 ms/op
# Warmup Iteration   5: 441,640 ms/op
# Warmup Iteration   6: 442,982 ms/op
# Warmup Iteration   7: 442,914 ms/op
# Warmup Iteration   8: 442,565 ms/op
# Warmup Iteration   9: 441,857 ms/op
# Warmup Iteration  10: 441,997 ms/op
Iteration   1: 441,370 ms/op
Iteration   2: 441,631 ms/op
Iteration   3: 442,309 ms/op
Iteration   4: 442,231 ms/op
Iteration   5: 441,648 ms/op
Iteration   6: 441,827 ms/op
Iteration   7: 443,255 ms/op
Iteration   8: 442,262 ms/op
Iteration   9: 441,946 ms/op
Iteration  10: 442,151 ms/op


Result "benchmarkFind":
  442,063 ±(99.9%) 0,791 ms/op [Average]
  (min, avg, max) = (441,370, 442,063, 443,255), stdev = 0,523
  CI (99.9%): [441,272, 442,854] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCKnuthMorrisPrattBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternSize = 16)

# Run progress: 47,93% complete, ETA 08:19:42
# Fork: 1 of 1
# Warmup Iteration   1: 450,525 ms/op
# Warmup Iteration   2: 449,705 ms/op
# Warmup Iteration   3: 449,320 ms/op
# Warmup Iteration   4: 448,893 ms/op
# Warmup Iteration   5: 448,320 ms/op
# Warmup Iteration   6: 449,590 ms/op
# Warmup Iteration   7: 449,597 ms/op
# Warmup Iteration   8: 452,148 ms/op
# Warmup Iteration   9: 447,028 ms/op
# Warmup Iteration  10: 448,406 ms/op
Iteration   1: 449,934 ms/op
Iteration   2: 449,725 ms/op
Iteration   3: 446,522 ms/op
Iteration   4: 450,066 ms/op
Iteration   5: 449,017 ms/op
Iteration   6: 450,937 ms/op
Iteration   7: 449,922 ms/op
Iteration   8: 450,567 ms/op
Iteration   9: 451,106 ms/op
Iteration  10: 448,682 ms/op


Result "benchmarkFind":
  449,648 ±(99.9%) 2,020 ms/op [Average]
  (min, avg, max) = (446,522, 449,648, 451,106), stdev = 1,336
  CI (99.9%): [447,627, 451,668] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCKnuthMorrisPrattBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternSize = 32)

# Run progress: 47,98% complete, ETA 08:19:17
# Fork: 1 of 1
# Warmup Iteration   1: 455,006 ms/op
# Warmup Iteration   2: 455,867 ms/op
# Warmup Iteration   3: 451,241 ms/op
# Warmup Iteration   4: 481,407 ms/op
# Warmup Iteration   5: 451,388 ms/op
# Warmup Iteration   6: 451,947 ms/op
# Warmup Iteration   7: 455,241 ms/op
# Warmup Iteration   8: 452,918 ms/op
# Warmup Iteration   9: 452,022 ms/op
# Warmup Iteration  10: 452,259 ms/op
Iteration   1: 458,804 ms/op
Iteration   2: 455,822 ms/op
Iteration   3: 456,911 ms/op
Iteration   4: 457,761 ms/op
Iteration   5: 456,872 ms/op
Iteration   6: 456,187 ms/op
Iteration   7: 456,839 ms/op
Iteration   8: 456,409 ms/op
Iteration   9: 458,971 ms/op
Iteration  10: 456,238 ms/op


Result "benchmarkFind":
  457,082 ±(99.9%) 1,647 ms/op [Average]
  (min, avg, max) = (455,822, 457,082, 458,971), stdev = 1,089
  CI (99.9%): [455,434, 458,729] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCKnuthMorrisPrattBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternSize = 64)

# Run progress: 48,02% complete, ETA 08:18:53
# Fork: 1 of 1
# Warmup Iteration   1: 446,661 ms/op
# Warmup Iteration   2: 444,416 ms/op
# Warmup Iteration   3: 445,437 ms/op
# Warmup Iteration   4: 444,962 ms/op
# Warmup Iteration   5: 447,081 ms/op
# Warmup Iteration   6: 445,399 ms/op
# Warmup Iteration   7: 445,837 ms/op
# Warmup Iteration   8: 444,258 ms/op
# Warmup Iteration   9: 444,497 ms/op
# Warmup Iteration  10: 445,377 ms/op
Iteration   1: 446,497 ms/op
Iteration   2: 444,512 ms/op
Iteration   3: 445,131 ms/op
Iteration   4: 445,784 ms/op
Iteration   5: 444,802 ms/op
Iteration   6: 444,547 ms/op
Iteration   7: 445,268 ms/op
Iteration   8: 443,864 ms/op
Iteration   9: 445,254 ms/op
Iteration  10: 445,134 ms/op


Result "benchmarkFind":
  445,079 ±(99.9%) 1,097 ms/op [Average]
  (min, avg, max) = (443,864, 445,079, 446,497), stdev = 0,726
  CI (99.9%): [443,983, 446,176] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCKnuthMorrisPrattBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternSize = 128)

# Run progress: 48,07% complete, ETA 08:18:27
# Fork: 1 of 1
# Warmup Iteration   1: 452,631 ms/op
# Warmup Iteration   2: 451,429 ms/op
# Warmup Iteration   3: 454,749 ms/op
# Warmup Iteration   4: 448,668 ms/op
# Warmup Iteration   5: 448,388 ms/op
# Warmup Iteration   6: 448,593 ms/op
# Warmup Iteration   7: 454,664 ms/op
# Warmup Iteration   8: 466,939 ms/op
# Warmup Iteration   9: 450,625 ms/op
# Warmup Iteration  10: 453,139 ms/op
Iteration   1: 451,093 ms/op
Iteration   2: 454,235 ms/op
Iteration   3: 448,383 ms/op
Iteration   4: 448,866 ms/op
Iteration   5: 452,101 ms/op
Iteration   6: 449,729 ms/op
Iteration   7: 448,627 ms/op
Iteration   8: 448,994 ms/op
Iteration   9: 449,253 ms/op
Iteration  10: 448,213 ms/op


Result "benchmarkFind":
  449,949 ±(99.9%) 2,945 ms/op [Average]
  (min, avg, max) = (448,213, 449,949, 454,235), stdev = 1,948
  CI (99.9%): [447,005, 452,894] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCKnuthMorrisPrattBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternSize = 256)

# Run progress: 48,12% complete, ETA 08:18:03
# Fork: 1 of 1
# Warmup Iteration   1: 451,417 ms/op
# Warmup Iteration   2: 449,643 ms/op
# Warmup Iteration   3: 448,781 ms/op
# Warmup Iteration   4: 448,081 ms/op
# Warmup Iteration   5: 451,138 ms/op
# Warmup Iteration   6: 449,524 ms/op
# Warmup Iteration   7: 450,172 ms/op
# Warmup Iteration   8: 450,766 ms/op
# Warmup Iteration   9: 446,712 ms/op
# Warmup Iteration  10: 449,510 ms/op
Iteration   1: 450,943 ms/op
Iteration   2: 448,996 ms/op
Iteration   3: 446,755 ms/op
Iteration   4: 449,873 ms/op
Iteration   5: 449,088 ms/op
Iteration   6: 449,416 ms/op
Iteration   7: 450,810 ms/op
Iteration   8: 449,601 ms/op
Iteration   9: 447,737 ms/op
Iteration  10: 450,016 ms/op


Result "benchmarkFind":
  449,324 ±(99.9%) 1,950 ms/op [Average]
  (min, avg, max) = (446,755, 449,324, 450,943), stdev = 1,290
  CI (99.9%): [447,373, 451,274] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCKnuthMorrisPrattBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternSize = 2)

# Run progress: 48,16% complete, ETA 08:17:38
# Fork: 1 of 1
# Warmup Iteration   1: 27,697 ms/op
# Warmup Iteration   2: 26,676 ms/op
# Warmup Iteration   3: 26,597 ms/op
# Warmup Iteration   4: 26,578 ms/op
# Warmup Iteration   5: 26,714 ms/op
# Warmup Iteration   6: 26,538 ms/op
# Warmup Iteration   7: 26,695 ms/op
# Warmup Iteration   8: 26,771 ms/op
# Warmup Iteration   9: 26,635 ms/op
# Warmup Iteration  10: 26,669 ms/op
Iteration   1: 26,468 ms/op
Iteration   2: 26,591 ms/op
Iteration   3: 26,459 ms/op
Iteration   4: 28,666 ms/op
Iteration   5: 26,713 ms/op
Iteration   6: 26,598 ms/op
Iteration   7: 26,470 ms/op
Iteration   8: 26,558 ms/op
Iteration   9: 26,762 ms/op
Iteration  10: 26,601 ms/op


Result "benchmarkFind":
  26,789 ±(99.9%) 1,009 ms/op [Average]
  (min, avg, max) = (26,459, 26,789, 28,666), stdev = 0,667
  CI (99.9%): [25,779, 27,798] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCKnuthMorrisPrattBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternSize = 4)

# Run progress: 48,21% complete, ETA 08:17:05
# Fork: 1 of 1
# Warmup Iteration   1: 393,762 ms/op
# Warmup Iteration   2: 395,699 ms/op
# Warmup Iteration   3: 395,707 ms/op
# Warmup Iteration   4: 394,515 ms/op
# Warmup Iteration   5: 392,663 ms/op
# Warmup Iteration   6: 350,933 ms/op
# Warmup Iteration   7: 267,757 ms/op
# Warmup Iteration   8: 269,082 ms/op
# Warmup Iteration   9: 268,007 ms/op
# Warmup Iteration  10: 270,453 ms/op
Iteration   1: 270,496 ms/op
Iteration   2: 271,762 ms/op
Iteration   3: 267,781 ms/op
Iteration   4: 266,750 ms/op
Iteration   5: 266,471 ms/op
Iteration   6: 267,884 ms/op
Iteration   7: 265,951 ms/op
Iteration   8: 268,314 ms/op
Iteration   9: 267,698 ms/op
Iteration  10: 270,535 ms/op


Result "benchmarkFind":
  268,364 ±(99.9%) 2,931 ms/op [Average]
  (min, avg, max) = (265,951, 268,364, 271,762), stdev = 1,939
  CI (99.9%): [265,433, 271,295] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCKnuthMorrisPrattBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternSize = 8)

# Run progress: 48,25% complete, ETA 08:16:35
# Fork: 1 of 1
# Warmup Iteration   1: 394,624 ms/op
# Warmup Iteration   2: 395,820 ms/op
# Warmup Iteration   3: 398,869 ms/op
# Warmup Iteration   4: 394,304 ms/op
# Warmup Iteration   5: 394,752 ms/op
# Warmup Iteration   6: 393,528 ms/op
# Warmup Iteration   7: 396,584 ms/op
# Warmup Iteration   8: 395,925 ms/op
# Warmup Iteration   9: 395,457 ms/op
# Warmup Iteration  10: 396,206 ms/op
Iteration   1: 396,389 ms/op
Iteration   2: 395,955 ms/op
Iteration   3: 395,182 ms/op
Iteration   4: 392,554 ms/op
Iteration   5: 397,670 ms/op
Iteration   6: 397,216 ms/op
Iteration   7: 395,151 ms/op
Iteration   8: 398,781 ms/op
Iteration   9: 394,009 ms/op
Iteration  10: 394,604 ms/op


Result "benchmarkFind":
  395,751 ±(99.9%) 2,793 ms/op [Average]
  (min, avg, max) = (392,554, 395,751, 398,781), stdev = 1,847
  CI (99.9%): [392,958, 398,544] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCKnuthMorrisPrattBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternSize = 16)

# Run progress: 48,30% complete, ETA 08:16:06
# Fork: 1 of 1
# Warmup Iteration   1: 389,744 ms/op
# Warmup Iteration   2: 387,646 ms/op
# Warmup Iteration   3: 386,531 ms/op
# Warmup Iteration   4: 387,205 ms/op
# Warmup Iteration   5: 426,235 ms/op
# Warmup Iteration   6: 393,274 ms/op
# Warmup Iteration   7: 392,479 ms/op
# Warmup Iteration   8: 390,969 ms/op
# Warmup Iteration   9: 391,676 ms/op
# Warmup Iteration  10: 391,087 ms/op
Iteration   1: 392,496 ms/op
Iteration   2: 393,982 ms/op
Iteration   3: 391,612 ms/op
Iteration   4: 394,007 ms/op
Iteration   5: 393,270 ms/op
Iteration   6: 392,001 ms/op
Iteration   7: 393,691 ms/op
Iteration   8: 396,162 ms/op
Iteration   9: 393,745 ms/op
Iteration  10: 392,156 ms/op


Result "benchmarkFind":
  393,312 ±(99.9%) 2,016 ms/op [Average]
  (min, avg, max) = (391,612, 393,312, 396,162), stdev = 1,333
  CI (99.9%): [391,296, 395,328] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCKnuthMorrisPrattBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternSize = 32)

# Run progress: 48,35% complete, ETA 08:15:38
# Fork: 1 of 1
# Warmup Iteration   1: 399,637 ms/op
# Warmup Iteration   2: 402,689 ms/op
# Warmup Iteration   3: 396,450 ms/op
# Warmup Iteration   4: 397,293 ms/op
# Warmup Iteration   5: 398,768 ms/op
# Warmup Iteration   6: 397,754 ms/op
# Warmup Iteration   7: 397,182 ms/op
# Warmup Iteration   8: 397,186 ms/op
# Warmup Iteration   9: 401,432 ms/op
# Warmup Iteration  10: 399,635 ms/op
Iteration   1: 399,228 ms/op
Iteration   2: 398,300 ms/op
Iteration   3: 397,442 ms/op
Iteration   4: 395,777 ms/op
Iteration   5: 396,657 ms/op
Iteration   6: 396,931 ms/op
Iteration   7: 397,406 ms/op
Iteration   8: 396,716 ms/op
Iteration   9: 397,985 ms/op
Iteration  10: 398,486 ms/op


Result "benchmarkFind":
  397,493 ±(99.9%) 1,550 ms/op [Average]
  (min, avg, max) = (395,777, 397,493, 399,228), stdev = 1,025
  CI (99.9%): [395,943, 399,043] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCKnuthMorrisPrattBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternSize = 64)

# Run progress: 48,39% complete, ETA 08:15:09
# Fork: 1 of 1
# Warmup Iteration   1: 396,976 ms/op
# Warmup Iteration   2: 394,524 ms/op
# Warmup Iteration   3: 395,547 ms/op
# Warmup Iteration   4: 395,817 ms/op
# Warmup Iteration   5: 395,267 ms/op
# Warmup Iteration   6: 393,934 ms/op
# Warmup Iteration   7: 394,785 ms/op
# Warmup Iteration   8: 395,609 ms/op
# Warmup Iteration   9: 395,268 ms/op
# Warmup Iteration  10: 393,806 ms/op
Iteration   1: 396,999 ms/op
Iteration   2: 396,643 ms/op
Iteration   3: 395,178 ms/op
Iteration   4: 437,777 ms/op
Iteration   5: 394,994 ms/op
Iteration   6: 396,053 ms/op
Iteration   7: 396,356 ms/op
Iteration   8: 394,281 ms/op
Iteration   9: 394,504 ms/op
Iteration  10: 394,517 ms/op


Result "benchmarkFind":
  399,730 ±(99.9%) 20,264 ms/op [Average]
  (min, avg, max) = (394,281, 399,730, 437,777), stdev = 13,403
  CI (99.9%): [379,466, 419,994] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCKnuthMorrisPrattBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternSize = 128)

# Run progress: 48,44% complete, ETA 08:14:41
# Fork: 1 of 1
# Warmup Iteration   1: 386,570 ms/op
# Warmup Iteration   2: 388,771 ms/op
# Warmup Iteration   3: 386,845 ms/op
# Warmup Iteration   4: 388,964 ms/op
# Warmup Iteration   5: 385,858 ms/op
# Warmup Iteration   6: 387,203 ms/op
# Warmup Iteration   7: 383,975 ms/op
# Warmup Iteration   8: 386,001 ms/op
# Warmup Iteration   9: 389,281 ms/op
# Warmup Iteration  10: 386,244 ms/op
Iteration   1: 388,497 ms/op
Iteration   2: 389,643 ms/op
Iteration   3: 383,987 ms/op
Iteration   4: 386,446 ms/op
Iteration   5: 386,007 ms/op
Iteration   6: 383,939 ms/op
Iteration   7: 384,599 ms/op
Iteration   8: 386,893 ms/op
Iteration   9: 386,436 ms/op
Iteration  10: 387,460 ms/op


Result "benchmarkFind":
  386,391 ±(99.9%) 2,831 ms/op [Average]
  (min, avg, max) = (383,939, 386,391, 389,643), stdev = 1,873
  CI (99.9%): [383,559, 389,222] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCKnuthMorrisPrattBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternSize = 256)

# Run progress: 48,48% complete, ETA 08:14:12
# Fork: 1 of 1
# Warmup Iteration   1: 392,286 ms/op
# Warmup Iteration   2: 389,926 ms/op
# Warmup Iteration   3: 388,021 ms/op
# Warmup Iteration   4: 388,042 ms/op
# Warmup Iteration   5: 389,047 ms/op
# Warmup Iteration   6: 390,482 ms/op
# Warmup Iteration   7: 389,428 ms/op
# Warmup Iteration   8: 386,985 ms/op
# Warmup Iteration   9: 389,947 ms/op
# Warmup Iteration  10: 386,543 ms/op
Iteration   1: 388,283 ms/op
Iteration   2: 387,305 ms/op
Iteration   3: 392,533 ms/op
Iteration   4: 389,203 ms/op
Iteration   5: 389,553 ms/op
Iteration   6: 387,446 ms/op
Iteration   7: 387,511 ms/op
Iteration   8: 388,188 ms/op
Iteration   9: 390,068 ms/op
Iteration  10: 388,302 ms/op


Result "benchmarkFind":
  388,839 ±(99.9%) 2,410 ms/op [Average]
  (min, avg, max) = (387,305, 388,839, 392,533), stdev = 1,594
  CI (99.9%): [386,429, 391,249] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCKnuthMorrisPrattBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternSize = 2)

# Run progress: 48,53% complete, ETA 08:13:43
# Fork: 1 of 1
# Warmup Iteration   1: 92,568 ms/op
# Warmup Iteration   2: 71,038 ms/op
# Warmup Iteration   3: 70,863 ms/op
# Warmup Iteration   4: 77,576 ms/op
# Warmup Iteration   5: 71,252 ms/op
# Warmup Iteration   6: 71,076 ms/op
# Warmup Iteration   7: 70,661 ms/op
# Warmup Iteration   8: 70,719 ms/op
# Warmup Iteration   9: 70,828 ms/op
# Warmup Iteration  10: 70,586 ms/op
Iteration   1: 70,965 ms/op
Iteration   2: 70,715 ms/op
Iteration   3: 70,643 ms/op
Iteration   4: 70,583 ms/op
Iteration   5: 70,892 ms/op
Iteration   6: 70,683 ms/op
Iteration   7: 70,269 ms/op
Iteration   8: 70,998 ms/op
Iteration   9: 70,689 ms/op
Iteration  10: 70,382 ms/op


Result "benchmarkFind":
  70,682 ±(99.9%) 0,355 ms/op [Average]
  (min, avg, max) = (70,269, 70,682, 70,998), stdev = 0,235
  CI (99.9%): [70,327, 71,037] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCKnuthMorrisPrattBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternSize = 4)

# Run progress: 48,58% complete, ETA 08:13:12
# Fork: 1 of 1
# Warmup Iteration   1: 2878,806 ms/op
# Warmup Iteration   2: 2872,522 ms/op
# Warmup Iteration   3: 2872,156 ms/op
# Warmup Iteration   4: 2867,602 ms/op
# Warmup Iteration   5: 2885,036 ms/op
# Warmup Iteration   6: 2862,130 ms/op
# Warmup Iteration   7: 2869,774 ms/op
# Warmup Iteration   8: 2889,864 ms/op
# Warmup Iteration   9: 2876,005 ms/op
# Warmup Iteration  10: 2893,377 ms/op
Iteration   1: 2872,174 ms/op
Iteration   2: 2872,547 ms/op
Iteration   3: 2866,997 ms/op
Iteration   4: 2989,055 ms/op
Iteration   5: 2895,500 ms/op
Iteration   6: 2932,648 ms/op
Iteration   7: 2907,359 ms/op
Iteration   8: 2920,436 ms/op
Iteration   9: 2907,558 ms/op
Iteration  10: 2912,851 ms/op


Result "benchmarkFind":
  2907,712 ±(99.9%) 54,588 ms/op [Average]
  (min, avg, max) = (2866,997, 2907,712, 2989,055), stdev = 36,107
  CI (99.9%): [2853,124, 2962,301] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCKnuthMorrisPrattBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternSize = 8)

# Run progress: 48,62% complete, ETA 08:13:22
# Fork: 1 of 1
# Warmup Iteration   1: 2945,450 ms/op
# Warmup Iteration   2: 2877,321 ms/op
# Warmup Iteration   3: 2879,136 ms/op
# Warmup Iteration   4: 2890,848 ms/op
# Warmup Iteration   5: 2901,101 ms/op
# Warmup Iteration   6: 2898,794 ms/op
# Warmup Iteration   7: 2897,139 ms/op
# Warmup Iteration   8: 2891,907 ms/op
# Warmup Iteration   9: 2893,248 ms/op
# Warmup Iteration  10: 2897,461 ms/op
Iteration   1: 2902,748 ms/op
Iteration   2: 2903,846 ms/op
Iteration   3: 2905,172 ms/op
Iteration   4: 2904,342 ms/op
Iteration   5: 2866,026 ms/op
Iteration   6: 2860,293 ms/op
Iteration   7: 2872,427 ms/op
Iteration   8: 2857,698 ms/op
Iteration   9: 2860,584 ms/op
Iteration  10: 2862,510 ms/op


Result "benchmarkFind":
  2879,565 ±(99.9%) 32,393 ms/op [Average]
  (min, avg, max) = (2857,698, 2879,565, 2905,172), stdev = 21,426
  CI (99.9%): [2847,172, 2911,957] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCKnuthMorrisPrattBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternSize = 16)

# Run progress: 48,67% complete, ETA 08:13:32
# Fork: 1 of 1
# Warmup Iteration   1: 2880,974 ms/op
# Warmup Iteration   2: 2870,286 ms/op
# Warmup Iteration   3: 2876,320 ms/op
# Warmup Iteration   4: 2865,541 ms/op
# Warmup Iteration   5: 2852,242 ms/op
# Warmup Iteration   6: 2857,390 ms/op
# Warmup Iteration   7: 2861,525 ms/op
# Warmup Iteration   8: 2868,340 ms/op
# Warmup Iteration   9: 2876,237 ms/op
# Warmup Iteration  10: 2859,597 ms/op
Iteration   1: 2858,416 ms/op
Iteration   2: 2853,500 ms/op
Iteration   3: 2967,551 ms/op
Iteration   4: 2888,928 ms/op
Iteration   5: 2893,486 ms/op
Iteration   6: 2905,103 ms/op
Iteration   7: 2883,705 ms/op
Iteration   8: 2899,513 ms/op
Iteration   9: 2911,426 ms/op
Iteration  10: 2888,454 ms/op


Result "benchmarkFind":
  2895,008 ±(99.9%) 47,613 ms/op [Average]
  (min, avg, max) = (2853,500, 2895,008, 2967,551), stdev = 31,493
  CI (99.9%): [2847,396, 2942,621] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCKnuthMorrisPrattBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternSize = 32)

# Run progress: 48,71% complete, ETA 08:13:42
# Fork: 1 of 1
# Warmup Iteration   1: 2898,762 ms/op
# Warmup Iteration   2: 2885,672 ms/op
# Warmup Iteration   3: 2890,235 ms/op
# Warmup Iteration   4: 2887,691 ms/op
# Warmup Iteration   5: 2885,187 ms/op
# Warmup Iteration   6: 2901,692 ms/op
# Warmup Iteration   7: 2879,623 ms/op
# Warmup Iteration   8: 2906,427 ms/op
# Warmup Iteration   9: 2896,469 ms/op
# Warmup Iteration  10: 2899,791 ms/op
Iteration   1: 2877,991 ms/op
Iteration   2: 2890,492 ms/op
Iteration   3: 2973,939 ms/op
Iteration   4: 2893,069 ms/op
Iteration   5: 2895,350 ms/op
Iteration   6: 2892,209 ms/op
Iteration   7: 2897,495 ms/op
Iteration   8: 2893,181 ms/op
Iteration   9: 2910,563 ms/op
Iteration  10: 2889,817 ms/op


Result "benchmarkFind":
  2901,411 ±(99.9%) 40,380 ms/op [Average]
  (min, avg, max) = (2877,991, 2901,411, 2973,939), stdev = 26,709
  CI (99.9%): [2861,031, 2941,790] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCKnuthMorrisPrattBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternSize = 64)

# Run progress: 48,76% complete, ETA 08:13:52
# Fork: 1 of 1
# Warmup Iteration   1: 2888,627 ms/op
# Warmup Iteration   2: 2899,895 ms/op
# Warmup Iteration   3: 2882,406 ms/op
# Warmup Iteration   4: 2897,877 ms/op
# Warmup Iteration   5: 2890,910 ms/op
# Warmup Iteration   6: 2888,474 ms/op
# Warmup Iteration   7: 2886,671 ms/op
# Warmup Iteration   8: 2910,872 ms/op
# Warmup Iteration   9: 2880,542 ms/op
# Warmup Iteration  10: 2881,251 ms/op
Iteration   1: 2892,361 ms/op
Iteration   2: 2985,974 ms/op
Iteration   3: 2848,755 ms/op
Iteration   4: 2851,527 ms/op
Iteration   5: 2855,014 ms/op
Iteration   6: 2854,288 ms/op
Iteration   7: 2859,324 ms/op
Iteration   8: 2850,989 ms/op
Iteration   9: 2862,490 ms/op
Iteration  10: 2850,605 ms/op


Result "benchmarkFind":
  2871,133 ±(99.9%) 63,962 ms/op [Average]
  (min, avg, max) = (2848,755, 2871,133, 2985,974), stdev = 42,307
  CI (99.9%): [2807,170, 2935,095] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCKnuthMorrisPrattBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternSize = 128)

# Run progress: 48,81% complete, ETA 08:14:02
# Fork: 1 of 1
# Warmup Iteration   1: 2909,387 ms/op
# Warmup Iteration   2: 2900,805 ms/op
# Warmup Iteration   3: 2892,301 ms/op
# Warmup Iteration   4: 2903,266 ms/op
# Warmup Iteration   5: 2884,833 ms/op
# Warmup Iteration   6: 2892,668 ms/op
# Warmup Iteration   7: 2902,454 ms/op
# Warmup Iteration   8: 2883,972 ms/op
# Warmup Iteration   9: 2897,977 ms/op
# Warmup Iteration  10: 2894,113 ms/op
Iteration   1: 2886,628 ms/op
Iteration   2: 2959,125 ms/op
Iteration   3: 2894,076 ms/op
Iteration   4: 2916,210 ms/op
Iteration   5: 2890,893 ms/op
Iteration   6: 2883,270 ms/op
Iteration   7: 2899,127 ms/op
Iteration   8: 2894,271 ms/op
Iteration   9: 2892,478 ms/op
Iteration  10: 2892,476 ms/op


Result "benchmarkFind":
  2900,855 ±(99.9%) 33,711 ms/op [Average]
  (min, avg, max) = (2883,270, 2900,855, 2959,125), stdev = 22,298
  CI (99.9%): [2867,144, 2934,566] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCKnuthMorrisPrattBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternSize = 256)

# Run progress: 48,85% complete, ETA 08:14:11
# Fork: 1 of 1
# Warmup Iteration   1: 2879,319 ms/op
# Warmup Iteration   2: 2886,138 ms/op
# Warmup Iteration   3: 2873,916 ms/op
# Warmup Iteration   4: 2877,468 ms/op
# Warmup Iteration   5: 2878,830 ms/op
# Warmup Iteration   6: 2885,641 ms/op
# Warmup Iteration   7: 2873,891 ms/op
# Warmup Iteration   8: 2871,926 ms/op
# Warmup Iteration   9: 2875,091 ms/op
# Warmup Iteration  10: 2861,233 ms/op
Iteration   1: 2871,969 ms/op
Iteration   2: 2956,271 ms/op
Iteration   3: 2864,512 ms/op
Iteration   4: 2853,832 ms/op
Iteration   5: 2854,596 ms/op
Iteration   6: 2848,355 ms/op
Iteration   7: 2858,741 ms/op
Iteration   8: 2857,141 ms/op
Iteration   9: 2854,021 ms/op
Iteration  10: 2854,944 ms/op


Result "benchmarkFind":
  2867,438 ±(99.9%) 48,212 ms/op [Average]
  (min, avg, max) = (2848,355, 2867,438, 2956,271), stdev = 31,890
  CI (99.9%): [2819,226, 2915,651] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCKnuthMorrisPrattBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternSize = 2)

# Run progress: 48,90% complete, ETA 08:14:21
# Fork: 1 of 1
# Warmup Iteration   1: 490,888 ms/op
# Warmup Iteration   2: 301,959 ms/op
# Warmup Iteration   3: 266,331 ms/op
# Warmup Iteration   4: 265,296 ms/op
# Warmup Iteration   5: 264,841 ms/op
# Warmup Iteration   6: 265,499 ms/op
# Warmup Iteration   7: 264,431 ms/op
# Warmup Iteration   8: 266,517 ms/op
# Warmup Iteration   9: 265,825 ms/op
# Warmup Iteration  10: 264,514 ms/op
Iteration   1: 266,495 ms/op
Iteration   2: 266,022 ms/op
Iteration   3: 267,036 ms/op
Iteration   4: 264,965 ms/op
Iteration   5: 264,823 ms/op
Iteration   6: 264,891 ms/op
Iteration   7: 265,942 ms/op
Iteration   8: 264,026 ms/op
Iteration   9: 265,157 ms/op
Iteration  10: 265,799 ms/op


Result "benchmarkFind":
  265,516 ±(99.9%) 1,363 ms/op [Average]
  (min, avg, max) = (264,026, 265,516, 267,036), stdev = 0,901
  CI (99.9%): [264,153, 266,878] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCKnuthMorrisPrattBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternSize = 4)

# Run progress: 48,94% complete, ETA 08:13:50
# Fork: 1 of 1
# Warmup Iteration   1: 348,335 ms/op
# Warmup Iteration   2: 348,618 ms/op
# Warmup Iteration   3: 350,229 ms/op
# Warmup Iteration   4: 347,971 ms/op
# Warmup Iteration   5: 353,018 ms/op
# Warmup Iteration   6: 350,287 ms/op
# Warmup Iteration   7: 349,307 ms/op
# Warmup Iteration   8: 348,934 ms/op
# Warmup Iteration   9: 350,432 ms/op
# Warmup Iteration  10: 349,438 ms/op
Iteration   1: 375,363 ms/op
Iteration   2: 348,684 ms/op
Iteration   3: 350,048 ms/op
Iteration   4: 348,044 ms/op
Iteration   5: 349,233 ms/op
Iteration   6: 349,953 ms/op
Iteration   7: 348,844 ms/op
Iteration   8: 349,654 ms/op
Iteration   9: 347,700 ms/op
Iteration  10: 348,247 ms/op


Result "benchmarkFind":
  351,577 ±(99.9%) 12,693 ms/op [Average]
  (min, avg, max) = (347,700, 351,577, 375,363), stdev = 8,396
  CI (99.9%): [338,884, 364,270] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCKnuthMorrisPrattBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternSize = 8)

# Run progress: 48,99% complete, ETA 08:13:18
# Fork: 1 of 1
# Warmup Iteration   1: 348,019 ms/op
# Warmup Iteration   2: 346,087 ms/op
# Warmup Iteration   3: 346,202 ms/op
# Warmup Iteration   4: 346,624 ms/op
# Warmup Iteration   5: 346,164 ms/op
# Warmup Iteration   6: 349,137 ms/op
# Warmup Iteration   7: 348,452 ms/op
# Warmup Iteration   8: 346,099 ms/op
# Warmup Iteration   9: 347,080 ms/op
# Warmup Iteration  10: 354,729 ms/op
Iteration   1: 346,852 ms/op
Iteration   2: 346,486 ms/op
Iteration   3: 346,273 ms/op
Iteration   4: 346,184 ms/op
Iteration   5: 350,029 ms/op
Iteration   6: 351,087 ms/op
Iteration   7: 348,346 ms/op
Iteration   8: 347,444 ms/op
Iteration   9: 346,272 ms/op
Iteration  10: 346,879 ms/op


Result "benchmarkFind":
  347,585 ±(99.9%) 2,594 ms/op [Average]
  (min, avg, max) = (346,184, 347,585, 351,087), stdev = 1,716
  CI (99.9%): [344,991, 350,179] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCKnuthMorrisPrattBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternSize = 16)

# Run progress: 49,03% complete, ETA 08:12:46
# Fork: 1 of 1
# Warmup Iteration   1: 349,044 ms/op
# Warmup Iteration   2: 347,125 ms/op
# Warmup Iteration   3: 346,405 ms/op
# Warmup Iteration   4: 347,818 ms/op
# Warmup Iteration   5: 347,531 ms/op
# Warmup Iteration   6: 345,778 ms/op
# Warmup Iteration   7: 346,393 ms/op
# Warmup Iteration   8: 346,484 ms/op
# Warmup Iteration   9: 346,133 ms/op
# Warmup Iteration  10: 346,905 ms/op
Iteration   1: 346,939 ms/op
Iteration   2: 347,136 ms/op
Iteration   3: 346,129 ms/op
Iteration   4: 346,395 ms/op
Iteration   5: 346,300 ms/op
Iteration   6: 347,617 ms/op
Iteration   7: 346,546 ms/op
Iteration   8: 349,096 ms/op
Iteration   9: 346,340 ms/op
Iteration  10: 346,248 ms/op


Result "benchmarkFind":
  346,875 ±(99.9%) 1,377 ms/op [Average]
  (min, avg, max) = (346,129, 346,875, 349,096), stdev = 0,911
  CI (99.9%): [345,498, 348,251] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCKnuthMorrisPrattBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternSize = 32)

# Run progress: 49,08% complete, ETA 08:12:14
# Fork: 1 of 1
# Warmup Iteration   1: 347,643 ms/op
# Warmup Iteration   2: 348,229 ms/op
# Warmup Iteration   3: 348,052 ms/op
# Warmup Iteration   4: 347,882 ms/op
# Warmup Iteration   5: 346,720 ms/op
# Warmup Iteration   6: 389,025 ms/op
# Warmup Iteration   7: 349,768 ms/op
# Warmup Iteration   8: 355,070 ms/op
# Warmup Iteration   9: 351,824 ms/op
# Warmup Iteration  10: 351,991 ms/op
Iteration   1: 351,236 ms/op
Iteration   2: 348,983 ms/op
Iteration   3: 349,762 ms/op
Iteration   4: 352,435 ms/op
Iteration   5: 352,392 ms/op
Iteration   6: 353,323 ms/op
Iteration   7: 355,323 ms/op
Iteration   8: 352,191 ms/op
Iteration   9: 349,244 ms/op
Iteration  10: 350,229 ms/op


Result "benchmarkFind":
  351,512 ±(99.9%) 3,033 ms/op [Average]
  (min, avg, max) = (348,983, 351,512, 355,323), stdev = 2,006
  CI (99.9%): [348,479, 354,544] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCKnuthMorrisPrattBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternSize = 64)

# Run progress: 49,13% complete, ETA 08:11:43
# Fork: 1 of 1
# Warmup Iteration   1: 348,988 ms/op
# Warmup Iteration   2: 349,640 ms/op
# Warmup Iteration   3: 348,065 ms/op
# Warmup Iteration   4: 347,470 ms/op
# Warmup Iteration   5: 350,865 ms/op
# Warmup Iteration   6: 347,298 ms/op
# Warmup Iteration   7: 347,984 ms/op
# Warmup Iteration   8: 348,042 ms/op
# Warmup Iteration   9: 348,001 ms/op
# Warmup Iteration  10: 348,459 ms/op
Iteration   1: 348,071 ms/op
Iteration   2: 349,877 ms/op
Iteration   3: 349,269 ms/op
Iteration   4: 348,002 ms/op
Iteration   5: 350,176 ms/op
Iteration   6: 348,633 ms/op
Iteration   7: 349,088 ms/op
Iteration   8: 349,032 ms/op
Iteration   9: 349,337 ms/op
Iteration  10: 351,220 ms/op


Result "benchmarkFind":
  349,271 ±(99.9%) 1,473 ms/op [Average]
  (min, avg, max) = (348,002, 349,271, 351,220), stdev = 0,974
  CI (99.9%): [347,798, 350,743] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCKnuthMorrisPrattBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternSize = 128)

# Run progress: 49,17% complete, ETA 08:11:11
# Fork: 1 of 1
# Warmup Iteration   1: 346,561 ms/op
# Warmup Iteration   2: 347,970 ms/op
# Warmup Iteration   3: 343,790 ms/op
# Warmup Iteration   4: 345,585 ms/op
# Warmup Iteration   5: 344,436 ms/op
# Warmup Iteration   6: 342,315 ms/op
# Warmup Iteration   7: 347,038 ms/op
# Warmup Iteration   8: 347,053 ms/op
# Warmup Iteration   9: 345,161 ms/op
# Warmup Iteration  10: 347,007 ms/op
Iteration   1: 345,965 ms/op
Iteration   2: 344,289 ms/op
Iteration   3: 346,058 ms/op
Iteration   4: 343,109 ms/op
Iteration   5: 345,299 ms/op
Iteration   6: 345,935 ms/op
Iteration   7: 343,683 ms/op
Iteration   8: 347,053 ms/op
Iteration   9: 342,039 ms/op
Iteration  10: 342,381 ms/op


Result "benchmarkFind":
  344,581 ±(99.9%) 2,614 ms/op [Average]
  (min, avg, max) = (342,039, 344,581, 347,053), stdev = 1,729
  CI (99.9%): [341,967, 347,196] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCKnuthMorrisPrattBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternSize = 256)

# Run progress: 49,22% complete, ETA 08:10:39
# Fork: 1 of 1
# Warmup Iteration   1: 375,170 ms/op
# Warmup Iteration   2: 345,828 ms/op
# Warmup Iteration   3: 343,959 ms/op
# Warmup Iteration   4: 343,593 ms/op
# Warmup Iteration   5: 345,856 ms/op
# Warmup Iteration   6: 344,421 ms/op
# Warmup Iteration   7: 345,822 ms/op
# Warmup Iteration   8: 345,837 ms/op
# Warmup Iteration   9: 345,827 ms/op
# Warmup Iteration  10: 346,212 ms/op
Iteration   1: 348,715 ms/op
Iteration   2: 346,261 ms/op
Iteration   3: 344,247 ms/op
Iteration   4: 349,729 ms/op
Iteration   5: 347,146 ms/op
Iteration   6: 345,680 ms/op
Iteration   7: 350,034 ms/op
Iteration   8: 347,546 ms/op
Iteration   9: 346,584 ms/op
Iteration  10: 343,513 ms/op


Result "benchmarkFind":
  346,946 ±(99.9%) 3,269 ms/op [Average]
  (min, avg, max) = (343,513, 346,946, 350,034), stdev = 2,162
  CI (99.9%): [343,676, 350,215] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCKnuthMorrisPrattBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternSize = 2)

# Run progress: 49,26% complete, ETA 08:10:07
# Fork: 1 of 1
# Warmup Iteration   1: 1381,773 ms/op
# Warmup Iteration   2: 1366,108 ms/op
# Warmup Iteration   3: 1373,360 ms/op
# Warmup Iteration   4: 1153,839 ms/op
# Warmup Iteration   5: 876,123 ms/op
# Warmup Iteration   6: 869,648 ms/op
# Warmup Iteration   7: 874,410 ms/op
# Warmup Iteration   8: 882,437 ms/op
# Warmup Iteration   9: 878,063 ms/op
# Warmup Iteration  10: 875,827 ms/op
Iteration   1: 874,098 ms/op
Iteration   2: 873,900 ms/op
Iteration   3: 888,750 ms/op
Iteration   4: 871,943 ms/op
Iteration   5: 877,598 ms/op
Iteration   6: 870,703 ms/op
Iteration   7: 877,170 ms/op
Iteration   8: 875,622 ms/op
Iteration   9: 893,495 ms/op
Iteration  10: 871,110 ms/op


Result "benchmarkFind":
  877,439 ±(99.9%) 11,585 ms/op [Average]
  (min, avg, max) = (870,703, 877,439, 893,495), stdev = 7,663
  CI (99.9%): [865,854, 889,024] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCKnuthMorrisPrattBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternSize = 4)

# Run progress: 49,31% complete, ETA 08:09:50
# Fork: 1 of 1
# Warmup Iteration   1: 1351,539 ms/op
# Warmup Iteration   2: 1463,498 ms/op
# Warmup Iteration   3: 1350,808 ms/op
# Warmup Iteration   4: 1345,667 ms/op
# Warmup Iteration   5: 1351,508 ms/op
# Warmup Iteration   6: 1363,955 ms/op
# Warmup Iteration   7: 1352,231 ms/op
# Warmup Iteration   8: 1354,017 ms/op
# Warmup Iteration   9: 1366,129 ms/op
# Warmup Iteration  10: 1365,189 ms/op
Iteration   1: 1356,346 ms/op
Iteration   2: 1356,155 ms/op
Iteration   3: 1351,433 ms/op
Iteration   4: 1359,276 ms/op
Iteration   5: 1350,178 ms/op
Iteration   6: 1351,118 ms/op
Iteration   7: 1341,535 ms/op
Iteration   8: 1342,835 ms/op
Iteration   9: 1343,344 ms/op
Iteration  10: 1450,789 ms/op


Result "benchmarkFind":
  1360,301 ±(99.9%) 48,944 ms/op [Average]
  (min, avg, max) = (1341,535, 1360,301, 1450,789), stdev = 32,373
  CI (99.9%): [1311,357, 1409,245] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCKnuthMorrisPrattBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternSize = 8)

# Run progress: 49,36% complete, ETA 08:09:25
# Fork: 1 of 1
# Warmup Iteration   1: 1362,212 ms/op
# Warmup Iteration   2: 1375,531 ms/op
# Warmup Iteration   3: 1369,271 ms/op
# Warmup Iteration   4: 1365,094 ms/op
# Warmup Iteration   5: 1361,142 ms/op
# Warmup Iteration   6: 1369,340 ms/op
# Warmup Iteration   7: 1373,167 ms/op
# Warmup Iteration   8: 1356,989 ms/op
# Warmup Iteration   9: 1362,340 ms/op
# Warmup Iteration  10: 1363,334 ms/op
Iteration   1: 1384,384 ms/op
Iteration   2: 1363,618 ms/op
Iteration   3: 1363,480 ms/op
Iteration   4: 1359,120 ms/op
Iteration   5: 1368,086 ms/op
Iteration   6: 1360,539 ms/op
Iteration   7: 1361,409 ms/op
Iteration   8: 1365,287 ms/op
Iteration   9: 1365,847 ms/op
Iteration  10: 1359,632 ms/op


Result "benchmarkFind":
  1365,140 ±(99.9%) 11,113 ms/op [Average]
  (min, avg, max) = (1359,120, 1365,140, 1384,384), stdev = 7,351
  CI (99.9%): [1354,027, 1376,253] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCKnuthMorrisPrattBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternSize = 16)

# Run progress: 49,40% complete, ETA 08:09:01
# Fork: 1 of 1
# Warmup Iteration   1: 1364,924 ms/op
# Warmup Iteration   2: 1358,637 ms/op
# Warmup Iteration   3: 1363,387 ms/op
# Warmup Iteration   4: 1466,079 ms/op
# Warmup Iteration   5: 1353,997 ms/op
# Warmup Iteration   6: 1350,406 ms/op
# Warmup Iteration   7: 1361,290 ms/op
# Warmup Iteration   8: 1368,671 ms/op
# Warmup Iteration   9: 1360,214 ms/op
# Warmup Iteration  10: 1365,981 ms/op
Iteration   1: 1355,659 ms/op
Iteration   2: 1360,318 ms/op
Iteration   3: 1350,655 ms/op
Iteration   4: 1354,706 ms/op
Iteration   5: 1355,537 ms/op
Iteration   6: 1356,612 ms/op
Iteration   7: 1361,508 ms/op
Iteration   8: 1369,352 ms/op
Iteration   9: 1355,086 ms/op
Iteration  10: 1361,870 ms/op


Result "benchmarkFind":
  1358,130 ±(99.9%) 7,938 ms/op [Average]
  (min, avg, max) = (1350,655, 1358,130, 1369,352), stdev = 5,251
  CI (99.9%): [1350,192, 1366,068] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCKnuthMorrisPrattBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternSize = 32)

# Run progress: 49,45% complete, ETA 08:08:37
# Fork: 1 of 1
# Warmup Iteration   1: 1355,959 ms/op
# Warmup Iteration   2: 1362,293 ms/op
# Warmup Iteration   3: 1365,681 ms/op
# Warmup Iteration   4: 1353,998 ms/op
# Warmup Iteration   5: 1347,091 ms/op
# Warmup Iteration   6: 1348,479 ms/op
# Warmup Iteration   7: 1351,109 ms/op
# Warmup Iteration   8: 1355,168 ms/op
# Warmup Iteration   9: 1356,443 ms/op
# Warmup Iteration  10: 1348,975 ms/op
Iteration   1: 1358,526 ms/op
Iteration   2: 1354,755 ms/op
Iteration   3: 1363,671 ms/op
Iteration   4: 1359,509 ms/op
Iteration   5: 1351,463 ms/op
Iteration   6: 1354,393 ms/op
Iteration   7: 1351,536 ms/op
Iteration   8: 1349,716 ms/op
Iteration   9: 1349,145 ms/op
Iteration  10: 1357,512 ms/op


Result "benchmarkFind":
  1355,022 ±(99.9%) 7,152 ms/op [Average]
  (min, avg, max) = (1349,145, 1355,022, 1363,671), stdev = 4,731
  CI (99.9%): [1347,871, 1362,174] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCKnuthMorrisPrattBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternSize = 64)

# Run progress: 49,49% complete, ETA 08:08:13
# Fork: 1 of 1
# Warmup Iteration   1: 1337,279 ms/op
# Warmup Iteration   2: 1340,185 ms/op
# Warmup Iteration   3: 1336,591 ms/op
# Warmup Iteration   4: 1341,950 ms/op
# Warmup Iteration   5: 1455,873 ms/op
# Warmup Iteration   6: 1361,830 ms/op
# Warmup Iteration   7: 1358,435 ms/op
# Warmup Iteration   8: 1349,568 ms/op
# Warmup Iteration   9: 1354,959 ms/op
# Warmup Iteration  10: 1358,619 ms/op
Iteration   1: 1355,794 ms/op
Iteration   2: 1362,999 ms/op
Iteration   3: 1354,303 ms/op
Iteration   4: 1353,872 ms/op
Iteration   5: 1352,092 ms/op
Iteration   6: 1359,751 ms/op
Iteration   7: 1353,704 ms/op
Iteration   8: 1349,240 ms/op
Iteration   9: 1350,666 ms/op
Iteration  10: 1358,881 ms/op


Result "benchmarkFind":
  1355,130 ±(99.9%) 6,492 ms/op [Average]
  (min, avg, max) = (1349,240, 1355,130, 1362,999), stdev = 4,294
  CI (99.9%): [1348,638, 1361,622] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCKnuthMorrisPrattBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternSize = 128)

# Run progress: 49,54% complete, ETA 08:07:49
# Fork: 1 of 1
# Warmup Iteration   1: 1338,789 ms/op
# Warmup Iteration   2: 1340,120 ms/op
# Warmup Iteration   3: 1342,253 ms/op
# Warmup Iteration   4: 1337,285 ms/op
# Warmup Iteration   5: 1345,885 ms/op
# Warmup Iteration   6: 1338,804 ms/op
# Warmup Iteration   7: 1338,509 ms/op
# Warmup Iteration   8: 1336,207 ms/op
# Warmup Iteration   9: 1335,909 ms/op
# Warmup Iteration  10: 1337,981 ms/op
Iteration   1: 1334,544 ms/op
Iteration   2: 1344,492 ms/op
Iteration   3: 1338,558 ms/op
Iteration   4: 1333,806 ms/op
Iteration   5: 1335,834 ms/op
Iteration   6: 1336,751 ms/op
Iteration   7: 1337,847 ms/op
Iteration   8: 1337,410 ms/op
Iteration   9: 1335,484 ms/op
Iteration  10: 1350,061 ms/op


Result "benchmarkFind":
  1338,479 ±(99.9%) 7,612 ms/op [Average]
  (min, avg, max) = (1333,806, 1338,479, 1350,061), stdev = 5,035
  CI (99.9%): [1330,867, 1346,090] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCKnuthMorrisPrattBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternSize = 256)

# Run progress: 49,59% complete, ETA 08:07:24
# Fork: 1 of 1
# Warmup Iteration   1: 1365,955 ms/op
# Warmup Iteration   2: 1372,644 ms/op
# Warmup Iteration   3: 1376,166 ms/op
# Warmup Iteration   4: 1373,908 ms/op
# Warmup Iteration   5: 1379,457 ms/op
# Warmup Iteration   6: 1370,334 ms/op
# Warmup Iteration   7: 1443,592 ms/op
# Warmup Iteration   8: 1358,708 ms/op
# Warmup Iteration   9: 1355,993 ms/op
# Warmup Iteration  10: 1356,091 ms/op
Iteration   1: 1365,063 ms/op
Iteration   2: 1357,146 ms/op
Iteration   3: 1356,180 ms/op
Iteration   4: 1359,798 ms/op
Iteration   5: 1361,745 ms/op
Iteration   6: 1354,586 ms/op
Iteration   7: 1362,502 ms/op
Iteration   8: 1357,086 ms/op
Iteration   9: 1355,010 ms/op
Iteration  10: 1355,140 ms/op


Result "benchmarkFind":
  1358,425 ±(99.9%) 5,503 ms/op [Average]
  (min, avg, max) = (1354,586, 1358,425, 1365,063), stdev = 3,640
  CI (99.9%): [1352,922, 1363,929] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCKnuthMorrisPrattBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternSize = 2)

# Run progress: 49,63% complete, ETA 08:07:00
# Fork: 1 of 1
# Warmup Iteration   1: 5396,900 ms/op
# Warmup Iteration   2: 5383,052 ms/op
# Warmup Iteration   3: 5378,574 ms/op
# Warmup Iteration   4: 4658,075 ms/op
# Warmup Iteration   5: 3436,053 ms/op
# Warmup Iteration   6: 3431,702 ms/op
# Warmup Iteration   7: 3425,067 ms/op
# Warmup Iteration   8: 3473,574 ms/op
# Warmup Iteration   9: 3551,656 ms/op
# Warmup Iteration  10: 3464,608 ms/op
Iteration   1: 3453,301 ms/op
Iteration   2: 3463,225 ms/op
Iteration   3: 3443,253 ms/op
Iteration   4: 3449,862 ms/op
Iteration   5: 3506,707 ms/op
Iteration   6: 3433,184 ms/op
Iteration   7: 3444,016 ms/op
Iteration   8: 3614,598 ms/op
Iteration   9: 3451,094 ms/op
Iteration  10: 3451,787 ms/op


Result "benchmarkFind":
  3471,103 ±(99.9%) 81,897 ms/op [Average]
  (min, avg, max) = (3433,184, 3471,103, 3614,598), stdev = 54,170
  CI (99.9%): [3389,206, 3553,000] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCKnuthMorrisPrattBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternSize = 4)

# Run progress: 49,68% complete, ETA 08:07:30
# Fork: 1 of 1
# Warmup Iteration   1: 5396,111 ms/op
# Warmup Iteration   2: 5399,365 ms/op
# Warmup Iteration   3: 5544,183 ms/op
# Warmup Iteration   4: 5461,581 ms/op
# Warmup Iteration   5: 5448,318 ms/op
# Warmup Iteration   6: 5412,443 ms/op
# Warmup Iteration   7: 5447,434 ms/op
# Warmup Iteration   8: 5417,704 ms/op
# Warmup Iteration   9: 5460,744 ms/op
# Warmup Iteration  10: 5424,974 ms/op
Iteration   1: 5429,912 ms/op
Iteration   2: 5408,414 ms/op
Iteration   3: 5454,712 ms/op
Iteration   4: 5536,108 ms/op
Iteration   5: 5459,209 ms/op
Iteration   6: 5439,855 ms/op
Iteration   7: 5421,686 ms/op
Iteration   8: 5430,781 ms/op
Iteration   9: 5436,246 ms/op
Iteration  10: 5454,498 ms/op


Result "benchmarkFind":
  5447,142 ±(99.9%) 52,990 ms/op [Average]
  (min, avg, max) = (5408,414, 5447,142, 5536,108), stdev = 35,050
  CI (99.9%): [5394,152, 5500,132] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCKnuthMorrisPrattBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternSize = 8)

# Run progress: 49,72% complete, ETA 08:08:32
# Fork: 1 of 1
# Warmup Iteration   1: 5361,756 ms/op
# Warmup Iteration   2: 5359,244 ms/op
# Warmup Iteration   3: 5367,804 ms/op
# Warmup Iteration   4: 5474,220 ms/op
# Warmup Iteration   5: 5388,115 ms/op
# Warmup Iteration   6: 5370,311 ms/op
# Warmup Iteration   7: 5382,236 ms/op
# Warmup Iteration   8: 5406,895 ms/op
# Warmup Iteration   9: 5378,548 ms/op
# Warmup Iteration  10: 5385,765 ms/op
Iteration   1: 5383,261 ms/op
Iteration   2: 5399,280 ms/op
Iteration   3: 5363,421 ms/op
Iteration   4: 5361,581 ms/op
Iteration   5: 5479,397 ms/op
Iteration   6: 5405,671 ms/op
Iteration   7: 5428,966 ms/op
Iteration   8: 5416,623 ms/op
Iteration   9: 5387,579 ms/op
Iteration  10: 5416,564 ms/op


Result "benchmarkFind":
  5404,234 ±(99.9%) 52,361 ms/op [Average]
  (min, avg, max) = (5361,581, 5404,234, 5479,397), stdev = 34,634
  CI (99.9%): [5351,873, 5456,596] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCKnuthMorrisPrattBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternSize = 16)

# Run progress: 49,77% complete, ETA 08:09:34
# Fork: 1 of 1
# Warmup Iteration   1: 5355,122 ms/op
# Warmup Iteration   2: 5340,873 ms/op
# Warmup Iteration   3: 5341,704 ms/op
# Warmup Iteration   4: 5340,480 ms/op
# Warmup Iteration   5: 5467,601 ms/op
# Warmup Iteration   6: 5369,749 ms/op
# Warmup Iteration   7: 5371,840 ms/op
# Warmup Iteration   8: 5381,130 ms/op
# Warmup Iteration   9: 5395,510 ms/op
# Warmup Iteration  10: 5394,300 ms/op
Iteration   1: 5388,480 ms/op
Iteration   2: 5357,260 ms/op
Iteration   3: 5378,191 ms/op
Iteration   4: 5382,572 ms/op
Iteration   5: 5328,200 ms/op
Iteration   6: 5452,413 ms/op
Iteration   7: 5409,648 ms/op
Iteration   8: 5371,235 ms/op
Iteration   9: 5367,073 ms/op
Iteration  10: 5333,161 ms/op


Result "benchmarkFind":
  5376,823 ±(99.9%) 54,608 ms/op [Average]
  (min, avg, max) = (5328,200, 5376,823, 5452,413), stdev = 36,120
  CI (99.9%): [5322,215, 5431,431] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCKnuthMorrisPrattBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternSize = 32)

# Run progress: 49,82% complete, ETA 08:10:34
# Fork: 1 of 1
# Warmup Iteration   1: 5441,275 ms/op
# Warmup Iteration   2: 5413,255 ms/op
# Warmup Iteration   3: 5435,294 ms/op
# Warmup Iteration   4: 5420,618 ms/op
# Warmup Iteration   5: 5427,824 ms/op
# Warmup Iteration   6: 5563,307 ms/op
# Warmup Iteration   7: 5411,807 ms/op
# Warmup Iteration   8: 5429,926 ms/op
# Warmup Iteration   9: 5427,051 ms/op
# Warmup Iteration  10: 5397,590 ms/op
Iteration   1: 5391,537 ms/op
Iteration   2: 5407,807 ms/op
Iteration   3: 5390,340 ms/op
Iteration   4: 5397,910 ms/op
Iteration   5: 5412,246 ms/op
Iteration   6: 5404,831 ms/op
Iteration   7: 5465,060 ms/op
Iteration   8: 5378,008 ms/op
Iteration   9: 5396,797 ms/op
Iteration  10: 5421,165 ms/op


Result "benchmarkFind":
  5406,570 ±(99.9%) 36,153 ms/op [Average]
  (min, avg, max) = (5378,008, 5406,570, 5465,060), stdev = 23,913
  CI (99.9%): [5370,417, 5442,724] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCKnuthMorrisPrattBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternSize = 64)

# Run progress: 49,86% complete, ETA 08:11:35
# Fork: 1 of 1
# Warmup Iteration   1: 5383,905 ms/op
# Warmup Iteration   2: 5385,530 ms/op
# Warmup Iteration   3: 5369,998 ms/op
# Warmup Iteration   4: 5391,138 ms/op
# Warmup Iteration   5: 5403,022 ms/op
# Warmup Iteration   6: 5367,334 ms/op
# Warmup Iteration   7: 5470,263 ms/op
# Warmup Iteration   8: 5376,876 ms/op
# Warmup Iteration   9: 5372,324 ms/op
# Warmup Iteration  10: 5396,046 ms/op
Iteration   1: 5389,314 ms/op
Iteration   2: 5388,744 ms/op
Iteration   3: 5375,323 ms/op
Iteration   4: 5397,860 ms/op
Iteration   5: 5400,634 ms/op
Iteration   6: 5379,605 ms/op
Iteration   7: 5405,384 ms/op
Iteration   8: 5505,123 ms/op
Iteration   9: 5381,398 ms/op
Iteration  10: 5379,133 ms/op


Result "benchmarkFind":
  5400,252 ±(99.9%) 57,750 ms/op [Average]
  (min, avg, max) = (5375,323, 5400,252, 5505,123), stdev = 38,198
  CI (99.9%): [5342,502, 5458,001] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCKnuthMorrisPrattBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternSize = 128)

# Run progress: 49,91% complete, ETA 08:12:35
# Fork: 1 of 1
# Warmup Iteration   1: 5340,126 ms/op
# Warmup Iteration   2: 5337,664 ms/op
# Warmup Iteration   3: 5358,445 ms/op
# Warmup Iteration   4: 5332,843 ms/op
# Warmup Iteration   5: 5355,702 ms/op
# Warmup Iteration   6: 5342,443 ms/op
# Warmup Iteration   7: 5336,520 ms/op
# Warmup Iteration   8: 5440,883 ms/op
# Warmup Iteration   9: 5386,006 ms/op
# Warmup Iteration  10: 5350,533 ms/op
Iteration   1: 5330,981 ms/op
Iteration   2: 5353,881 ms/op
Iteration   3: 5327,243 ms/op
Iteration   4: 5333,020 ms/op
Iteration   5: 5327,501 ms/op
Iteration   6: 5333,308 ms/op
Iteration   7: 5338,332 ms/op
Iteration   8: 5338,615 ms/op
Iteration   9: 5329,167 ms/op
Iteration  10: 5510,955 ms/op


Result "benchmarkFind":
  5352,300 ±(99.9%) 85,108 ms/op [Average]
  (min, avg, max) = (5327,243, 5352,300, 5510,955), stdev = 56,294
  CI (99.9%): [5267,192, 5437,409] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCKnuthMorrisPrattBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternSize = 256)

# Run progress: 49,95% complete, ETA 08:13:34
# Fork: 1 of 1
# Warmup Iteration   1: 5364,912 ms/op
# Warmup Iteration   2: 5365,477 ms/op
# Warmup Iteration   3: 5392,871 ms/op
# Warmup Iteration   4: 5317,523 ms/op
# Warmup Iteration   5: 5325,312 ms/op
# Warmup Iteration   6: 5334,028 ms/op
# Warmup Iteration   7: 5334,242 ms/op
# Warmup Iteration   8: 5324,954 ms/op
# Warmup Iteration   9: 5317,150 ms/op
# Warmup Iteration  10: 5497,098 ms/op
Iteration   1: 5372,293 ms/op
Iteration   2: 5365,450 ms/op
Iteration   3: 5388,778 ms/op
Iteration   4: 5424,170 ms/op
Iteration   5: 5423,220 ms/op
Iteration   6: 5370,928 ms/op
Iteration   7: 5384,886 ms/op
Iteration   8: 5382,992 ms/op
Iteration   9: 5350,627 ms/op
Iteration  10: 5352,268 ms/op


Result "benchmarkFind":
  5381,561 ±(99.9%) 38,676 ms/op [Average]
  (min, avg, max) = (5350,627, 5381,561, 5424,170), stdev = 25,581
  CI (99.9%): [5342,886, 5420,237] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 2, patternSize = 2)

# Run progress: 50,00% complete, ETA 08:14:33
# Fork: 1 of 1
# Warmup Iteration   1: 0,230 ms/op
# Warmup Iteration   2: 0,183 ms/op
# Warmup Iteration   3: 0,173 ms/op
# Warmup Iteration   4: 0,172 ms/op
# Warmup Iteration   5: 0,172 ms/op
# Warmup Iteration   6: 0,173 ms/op
# Warmup Iteration   7: 0,175 ms/op
# Warmup Iteration   8: 0,176 ms/op
# Warmup Iteration   9: 0,175 ms/op
# Warmup Iteration  10: 0,175 ms/op
Iteration   1: 0,174 ms/op
Iteration   2: 0,182 ms/op
Iteration   3: 0,183 ms/op
Iteration   4: 0,183 ms/op
Iteration   5: 0,182 ms/op
Iteration   6: 0,182 ms/op
Iteration   7: 0,179 ms/op
Iteration   8: 0,179 ms/op
Iteration   9: 0,181 ms/op
Iteration  10: 0,180 ms/op


Result "benchmarkFind":
  0,181 ±(99.9%) 0,004 ms/op [Average]
  (min, avg, max) = (0,174, 0,181, 0,183), stdev = 0,003
  CI (99.9%): [0,177, 0,184] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 2, patternSize = 4)

# Run progress: 50,05% complete, ETA 08:13:59
# Fork: 1 of 1
# Warmup Iteration   1: 0,579 ms/op
# Warmup Iteration   2: 0,517 ms/op
# Warmup Iteration   3: 0,507 ms/op
# Warmup Iteration   4: 0,508 ms/op
# Warmup Iteration   5: 0,510 ms/op
# Warmup Iteration   6: 0,512 ms/op
# Warmup Iteration   7: 0,516 ms/op
# Warmup Iteration   8: 0,519 ms/op
# Warmup Iteration   9: 0,514 ms/op
# Warmup Iteration  10: 0,522 ms/op
Iteration   1: 0,517 ms/op
Iteration   2: 0,515 ms/op
Iteration   3: 0,515 ms/op
Iteration   4: 0,517 ms/op
Iteration   5: 0,517 ms/op
Iteration   6: 0,515 ms/op
Iteration   7: 0,517 ms/op
Iteration   8: 0,520 ms/op
Iteration   9: 0,511 ms/op
Iteration  10: 0,515 ms/op


Result "benchmarkFind":
  0,516 ±(99.9%) 0,004 ms/op [Average]
  (min, avg, max) = (0,511, 0,516, 0,520), stdev = 0,002
  CI (99.9%): [0,512, 0,519] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 2, patternSize = 8)

# Run progress: 50,09% complete, ETA 08:13:25
# Fork: 1 of 1
# Warmup Iteration   1: 3,840 ms/op
# Warmup Iteration   2: 3,257 ms/op
# Warmup Iteration   3: 3,183 ms/op
# Warmup Iteration   4: 3,195 ms/op
# Warmup Iteration   5: 3,176 ms/op
# Warmup Iteration   6: 3,198 ms/op
# Warmup Iteration   7: 3,180 ms/op
# Warmup Iteration   8: 3,194 ms/op
# Warmup Iteration   9: 3,224 ms/op
# Warmup Iteration  10: 3,212 ms/op
Iteration   1: 3,208 ms/op
Iteration   2: 3,227 ms/op
Iteration   3: 3,211 ms/op
Iteration   4: 3,227 ms/op
Iteration   5: 3,216 ms/op
Iteration   6: 3,216 ms/op
Iteration   7: 3,246 ms/op
Iteration   8: 3,261 ms/op
Iteration   9: 3,261 ms/op
Iteration  10: 3,494 ms/op


Result "benchmarkFind":
  3,257 ±(99.9%) 0,129 ms/op [Average]
  (min, avg, max) = (3,208, 3,257, 3,494), stdev = 0,086
  CI (99.9%): [3,127, 3,386] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 2, patternSize = 16)

# Run progress: 50,14% complete, ETA 08:12:51
# Fork: 1 of 1
# Warmup Iteration   1: 31,924 ms/op
# Warmup Iteration   2: 26,739 ms/op
# Warmup Iteration   3: 26,075 ms/op
# Warmup Iteration   4: 25,856 ms/op
# Warmup Iteration   5: 25,741 ms/op
# Warmup Iteration   6: 25,903 ms/op
# Warmup Iteration   7: 26,023 ms/op
# Warmup Iteration   8: 26,090 ms/op
# Warmup Iteration   9: 26,341 ms/op
# Warmup Iteration  10: 26,221 ms/op
Iteration   1: 26,313 ms/op
Iteration   2: 26,215 ms/op
Iteration   3: 26,252 ms/op
Iteration   4: 26,093 ms/op
Iteration   5: 26,257 ms/op
Iteration   6: 26,264 ms/op
Iteration   7: 26,084 ms/op
Iteration   8: 25,899 ms/op
Iteration   9: 25,635 ms/op
Iteration  10: 25,830 ms/op


Result "benchmarkFind":
  26,084 ±(99.9%) 0,342 ms/op [Average]
  (min, avg, max) = (25,635, 26,084, 26,313), stdev = 0,226
  CI (99.9%): [25,742, 26,426] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 2, patternSize = 32)

# Run progress: 50,18% complete, ETA 08:12:18
# Fork: 1 of 1
# Warmup Iteration   1: 10,249 ms/op
# Warmup Iteration   2: 9,380 ms/op
# Warmup Iteration   3: 9,056 ms/op
# Warmup Iteration   4: 8,949 ms/op
# Warmup Iteration   5: 8,958 ms/op
# Warmup Iteration   6: 9,024 ms/op
# Warmup Iteration   7: 8,940 ms/op
# Warmup Iteration   8: 9,035 ms/op
# Warmup Iteration   9: 9,030 ms/op
# Warmup Iteration  10: 9,055 ms/op
Iteration   1: 9,047 ms/op
Iteration   2: 9,078 ms/op
Iteration   3: 9,073 ms/op
Iteration   4: 9,030 ms/op
Iteration   5: 9,057 ms/op
Iteration   6: 9,132 ms/op
Iteration   7: 9,085 ms/op
Iteration   8: 9,041 ms/op
Iteration   9: 9,168 ms/op
Iteration  10: 9,024 ms/op


Result "benchmarkFind":
  9,074 ±(99.9%) 0,069 ms/op [Average]
  (min, avg, max) = (9,024, 9,074, 9,168), stdev = 0,046
  CI (99.9%): [9,004, 9,143] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 2, patternSize = 64)

# Run progress: 50,23% complete, ETA 08:11:44
# Fork: 1 of 1
# Warmup Iteration   1: 5,159 ms/op
# Warmup Iteration   2: 4,846 ms/op
# Warmup Iteration   3: 4,702 ms/op
# Warmup Iteration   4: 4,713 ms/op
# Warmup Iteration   5: 4,724 ms/op
# Warmup Iteration   6: 4,761 ms/op
# Warmup Iteration   7: 4,736 ms/op
# Warmup Iteration   8: 4,774 ms/op
# Warmup Iteration   9: 4,761 ms/op
# Warmup Iteration  10: 4,775 ms/op
Iteration   1: 4,807 ms/op
Iteration   2: 4,809 ms/op
Iteration   3: 4,781 ms/op
Iteration   4: 4,787 ms/op
Iteration   5: 4,798 ms/op
Iteration   6: 4,795 ms/op
Iteration   7: 4,796 ms/op
Iteration   8: 5,318 ms/op
Iteration   9: 4,966 ms/op
Iteration  10: 4,757 ms/op


Result "benchmarkFind":
  4,861 ±(99.9%) 0,258 ms/op [Average]
  (min, avg, max) = (4,757, 4,861, 5,318), stdev = 0,170
  CI (99.9%): [4,603, 5,119] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 2, patternSize = 128)

# Run progress: 50,28% complete, ETA 08:11:10
# Fork: 1 of 1
# Warmup Iteration   1: 2,520 ms/op
# Warmup Iteration   2: 2,270 ms/op
# Warmup Iteration   3: 2,291 ms/op
# Warmup Iteration   4: 2,215 ms/op
# Warmup Iteration   5: 2,220 ms/op
# Warmup Iteration   6: 2,236 ms/op
# Warmup Iteration   7: 2,226 ms/op
# Warmup Iteration   8: 2,227 ms/op
# Warmup Iteration   9: 2,228 ms/op
# Warmup Iteration  10: 2,239 ms/op
Iteration   1: 2,243 ms/op
Iteration   2: 2,248 ms/op
Iteration   3: 2,260 ms/op
Iteration   4: 2,251 ms/op
Iteration   5: 2,249 ms/op
Iteration   6: 2,273 ms/op
Iteration   7: 2,274 ms/op
Iteration   8: 2,262 ms/op
Iteration   9: 2,261 ms/op
Iteration  10: 2,252 ms/op


Result "benchmarkFind":
  2,257 ±(99.9%) 0,016 ms/op [Average]
  (min, avg, max) = (2,243, 2,257, 2,274), stdev = 0,011
  CI (99.9%): [2,241, 2,273] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 2, patternSize = 256)

# Run progress: 50,32% complete, ETA 08:10:36
# Fork: 1 of 1
# Warmup Iteration   1: 1,481 ms/op
# Warmup Iteration   2: 1,324 ms/op
# Warmup Iteration   3: 1,359 ms/op
# Warmup Iteration   4: 1,378 ms/op
# Warmup Iteration   5: 1,335 ms/op
# Warmup Iteration   6: 1,345 ms/op
# Warmup Iteration   7: 1,346 ms/op
# Warmup Iteration   8: 1,352 ms/op
# Warmup Iteration   9: 1,343 ms/op
# Warmup Iteration  10: 1,343 ms/op
Iteration   1: 1,343 ms/op
Iteration   2: 1,352 ms/op
Iteration   3: 1,346 ms/op
Iteration   4: 1,347 ms/op
Iteration   5: 1,346 ms/op
Iteration   6: 1,344 ms/op
Iteration   7: 1,340 ms/op
Iteration   8: 1,336 ms/op
Iteration   9: 1,347 ms/op
Iteration  10: 1,340 ms/op


Result "benchmarkFind":
  1,344 ±(99.9%) 0,007 ms/op [Average]
  (min, avg, max) = (1,336, 1,344, 1,352), stdev = 0,005
  CI (99.9%): [1,337, 1,351] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 8, patternSize = 2)

# Run progress: 50,37% complete, ETA 08:10:02
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

com.almondtools.stringbench.SampleNotQualifiedException
	at com.almondtools.stringbench.MultiPatternMatcherBenchmark.setup(MultiPatternMatcherBenchmark.java:36)
	at com.almondtools.stringbench.generated.SCSetBackwardOracleMatchingBenchmark_benchmarkFind_jmhTest._jmh_tryInit_f_scsetbackwardoraclematchingbenchmark0_0(SCSetBackwardOracleMatchingBenchmark_benchmarkFind_jmhTest.java:425)
	at com.almondtools.stringbench.generated.SCSetBackwardOracleMatchingBenchmark_benchmarkFind_jmhTest.benchmarkFind_AverageTime(SCSetBackwardOracleMatchingBenchmark_benchmarkFind_jmhTest.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:430)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:412)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)




# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 8, patternSize = 4)

# Run progress: 50,41% complete, ETA 08:09:10
# Fork: 1 of 1
# Warmup Iteration   1: 2,505 ms/op
# Warmup Iteration   2: 2,206 ms/op
# Warmup Iteration   3: 2,199 ms/op
# Warmup Iteration   4: 2,216 ms/op
# Warmup Iteration   5: 2,199 ms/op
# Warmup Iteration   6: 2,208 ms/op
# Warmup Iteration   7: 2,205 ms/op
# Warmup Iteration   8: 2,210 ms/op
# Warmup Iteration   9: 2,237 ms/op
# Warmup Iteration  10: 2,212 ms/op
Iteration   1: 2,215 ms/op
Iteration   2: 2,229 ms/op
Iteration   3: 2,227 ms/op
Iteration   4: 2,213 ms/op
Iteration   5: 2,310 ms/op
Iteration   6: 2,326 ms/op
Iteration   7: 2,198 ms/op
Iteration   8: 2,206 ms/op
Iteration   9: 2,192 ms/op
Iteration  10: 2,191 ms/op


Result "benchmarkFind":
  2,231 ±(99.9%) 0,072 ms/op [Average]
  (min, avg, max) = (2,191, 2,231, 2,326), stdev = 0,048
  CI (99.9%): [2,158, 2,303] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 8, patternSize = 8)

# Run progress: 50,46% complete, ETA 08:08:36
# Fork: 1 of 1
# Warmup Iteration   1: 26,460 ms/op
# Warmup Iteration   2: 22,983 ms/op
# Warmup Iteration   3: 22,722 ms/op
# Warmup Iteration   4: 22,807 ms/op
# Warmup Iteration   5: 22,673 ms/op
# Warmup Iteration   6: 23,091 ms/op
# Warmup Iteration   7: 22,957 ms/op
# Warmup Iteration   8: 22,846 ms/op
# Warmup Iteration   9: 22,965 ms/op
# Warmup Iteration  10: 22,826 ms/op
Iteration   1: 22,876 ms/op
Iteration   2: 22,962 ms/op
Iteration   3: 22,927 ms/op
Iteration   4: 22,884 ms/op
Iteration   5: 22,938 ms/op
Iteration   6: 22,821 ms/op
Iteration   7: 23,040 ms/op
Iteration   8: 23,000 ms/op
Iteration   9: 23,082 ms/op
Iteration  10: 23,103 ms/op


Result "benchmarkFind":
  22,963 ±(99.9%) 0,140 ms/op [Average]
  (min, avg, max) = (22,821, 22,963, 23,103), stdev = 0,092
  CI (99.9%): [22,824, 23,103] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 8, patternSize = 16)

# Run progress: 50,51% complete, ETA 08:08:02
# Fork: 1 of 1
# Warmup Iteration   1: 65,356 ms/op
# Warmup Iteration   2: 53,156 ms/op
# Warmup Iteration   3: 50,184 ms/op
# Warmup Iteration   4: 50,042 ms/op
# Warmup Iteration   5: 50,420 ms/op
# Warmup Iteration   6: 50,337 ms/op
# Warmup Iteration   7: 50,108 ms/op
# Warmup Iteration   8: 50,285 ms/op
# Warmup Iteration   9: 50,408 ms/op
# Warmup Iteration  10: 50,213 ms/op
Iteration   1: 50,532 ms/op
Iteration   2: 50,572 ms/op
Iteration   3: 50,116 ms/op
Iteration   4: 50,853 ms/op
Iteration   5: 50,278 ms/op
Iteration   6: 50,527 ms/op
Iteration   7: 50,705 ms/op
Iteration   8: 50,537 ms/op
Iteration   9: 50,723 ms/op
Iteration  10: 50,189 ms/op


Result "benchmarkFind":
  50,503 ±(99.9%) 0,363 ms/op [Average]
  (min, avg, max) = (50,116, 50,503, 50,853), stdev = 0,240
  CI (99.9%): [50,141, 50,866] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 8, patternSize = 32)

# Run progress: 50,55% complete, ETA 08:07:29
# Fork: 1 of 1
# Warmup Iteration   1: 17,399 ms/op
# Warmup Iteration   2: 15,367 ms/op
# Warmup Iteration   3: 14,996 ms/op
# Warmup Iteration   4: 14,941 ms/op
# Warmup Iteration   5: 15,123 ms/op
# Warmup Iteration   6: 14,975 ms/op
# Warmup Iteration   7: 14,939 ms/op
# Warmup Iteration   8: 14,971 ms/op
# Warmup Iteration   9: 15,096 ms/op
# Warmup Iteration  10: 15,151 ms/op
Iteration   1: 15,072 ms/op
Iteration   2: 15,197 ms/op
Iteration   3: 16,379 ms/op
Iteration   4: 15,829 ms/op
Iteration   5: 15,094 ms/op
Iteration   6: 14,979 ms/op
Iteration   7: 15,001 ms/op
Iteration   8: 15,022 ms/op
Iteration   9: 15,013 ms/op
Iteration  10: 14,954 ms/op


Result "benchmarkFind":
  15,254 ±(99.9%) 0,713 ms/op [Average]
  (min, avg, max) = (14,954, 15,254, 16,379), stdev = 0,471
  CI (99.9%): [14,541, 15,967] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 8, patternSize = 64)

# Run progress: 50,60% complete, ETA 08:06:55
# Fork: 1 of 1
# Warmup Iteration   1: 6,732 ms/op
# Warmup Iteration   2: 6,276 ms/op
# Warmup Iteration   3: 6,198 ms/op
# Warmup Iteration   4: 6,185 ms/op
# Warmup Iteration   5: 6,157 ms/op
# Warmup Iteration   6: 6,113 ms/op
# Warmup Iteration   7: 6,153 ms/op
# Warmup Iteration   8: 6,137 ms/op
# Warmup Iteration   9: 6,134 ms/op
# Warmup Iteration  10: 6,152 ms/op
Iteration   1: 6,186 ms/op
Iteration   2: 6,229 ms/op
Iteration   3: 6,241 ms/op
Iteration   4: 6,243 ms/op
Iteration   5: 6,192 ms/op
Iteration   6: 6,243 ms/op
Iteration   7: 6,254 ms/op
Iteration   8: 6,225 ms/op
Iteration   9: 6,241 ms/op
Iteration  10: 6,258 ms/op


Result "benchmarkFind":
  6,231 ±(99.9%) 0,037 ms/op [Average]
  (min, avg, max) = (6,186, 6,231, 6,258), stdev = 0,024
  CI (99.9%): [6,195, 6,268] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 8, patternSize = 128)

# Run progress: 50,64% complete, ETA 08:06:22
# Fork: 1 of 1
# Warmup Iteration   1: 3,942 ms/op
# Warmup Iteration   2: 3,633 ms/op
# Warmup Iteration   3: 3,551 ms/op
# Warmup Iteration   4: 3,554 ms/op
# Warmup Iteration   5: 3,550 ms/op
# Warmup Iteration   6: 3,550 ms/op
# Warmup Iteration   7: 3,564 ms/op
# Warmup Iteration   8: 3,567 ms/op
# Warmup Iteration   9: 3,578 ms/op
# Warmup Iteration  10: 3,600 ms/op
Iteration   1: 3,600 ms/op
Iteration   2: 3,550 ms/op
Iteration   3: 3,558 ms/op
Iteration   4: 3,570 ms/op
Iteration   5: 3,589 ms/op
Iteration   6: 3,573 ms/op
Iteration   7: 3,571 ms/op
Iteration   8: 3,591 ms/op
Iteration   9: 3,592 ms/op
Iteration  10: 3,588 ms/op


Result "benchmarkFind":
  3,578 ±(99.9%) 0,025 ms/op [Average]
  (min, avg, max) = (3,550, 3,578, 3,600), stdev = 0,016
  CI (99.9%): [3,553, 3,603] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 8, patternSize = 256)

# Run progress: 50,69% complete, ETA 08:05:48
# Fork: 1 of 1
# Warmup Iteration   1: 2,124 ms/op
# Warmup Iteration   2: 2,002 ms/op
# Warmup Iteration   3: 1,971 ms/op
# Warmup Iteration   4: 1,975 ms/op
# Warmup Iteration   5: 1,970 ms/op
# Warmup Iteration   6: 1,962 ms/op
# Warmup Iteration   7: 1,972 ms/op
# Warmup Iteration   8: 1,981 ms/op
# Warmup Iteration   9: 1,962 ms/op
# Warmup Iteration  10: 1,963 ms/op
Iteration   1: 1,986 ms/op
Iteration   2: 2,194 ms/op
Iteration   3: 1,944 ms/op
Iteration   4: 1,934 ms/op
Iteration   5: 1,931 ms/op
Iteration   6: 1,934 ms/op
Iteration   7: 1,949 ms/op
Iteration   8: 1,945 ms/op
Iteration   9: 1,945 ms/op
Iteration  10: 1,946 ms/op


Result "benchmarkFind":
  1,971 ±(99.9%) 0,121 ms/op [Average]
  (min, avg, max) = (1,931, 1,971, 2,194), stdev = 0,080
  CI (99.9%): [1,850, 2,091] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 32, patternSize = 2)

# Run progress: 50,74% complete, ETA 08:05:15
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

com.almondtools.stringbench.SampleNotQualifiedException
	at com.almondtools.stringbench.MultiPatternMatcherBenchmark.setup(MultiPatternMatcherBenchmark.java:36)
	at com.almondtools.stringbench.generated.SCSetBackwardOracleMatchingBenchmark_benchmarkFind_jmhTest._jmh_tryInit_f_scsetbackwardoraclematchingbenchmark0_0(SCSetBackwardOracleMatchingBenchmark_benchmarkFind_jmhTest.java:425)
	at com.almondtools.stringbench.generated.SCSetBackwardOracleMatchingBenchmark_benchmarkFind_jmhTest.benchmarkFind_AverageTime(SCSetBackwardOracleMatchingBenchmark_benchmarkFind_jmhTest.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:430)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:412)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)




# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 32, patternSize = 4)

# Run progress: 50,78% complete, ETA 08:04:23
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

com.almondtools.stringbench.SampleNotQualifiedException
	at com.almondtools.stringbench.MultiPatternMatcherBenchmark.setup(MultiPatternMatcherBenchmark.java:36)
	at com.almondtools.stringbench.generated.SCSetBackwardOracleMatchingBenchmark_benchmarkFind_jmhTest._jmh_tryInit_f_scsetbackwardoraclematchingbenchmark0_0(SCSetBackwardOracleMatchingBenchmark_benchmarkFind_jmhTest.java:425)
	at com.almondtools.stringbench.generated.SCSetBackwardOracleMatchingBenchmark_benchmarkFind_jmhTest.benchmarkFind_AverageTime(SCSetBackwardOracleMatchingBenchmark_benchmarkFind_jmhTest.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:430)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:412)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)




# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 32, patternSize = 8)

# Run progress: 50,83% complete, ETA 08:03:31
# Fork: 1 of 1
# Warmup Iteration   1: 209,945 ms/op
# Warmup Iteration   2: 180,595 ms/op
# Warmup Iteration   3: 181,378 ms/op
# Warmup Iteration   4: 179,480 ms/op
# Warmup Iteration   5: 178,528 ms/op
# Warmup Iteration   6: 179,318 ms/op
# Warmup Iteration   7: 180,170 ms/op
# Warmup Iteration   8: 177,694 ms/op
# Warmup Iteration   9: 178,143 ms/op
# Warmup Iteration  10: 179,414 ms/op
Iteration   1: 179,577 ms/op
Iteration   2: 179,825 ms/op
Iteration   3: 179,373 ms/op
Iteration   4: 178,812 ms/op
Iteration   5: 179,641 ms/op
Iteration   6: 178,789 ms/op
Iteration   7: 178,847 ms/op
Iteration   8: 179,097 ms/op
Iteration   9: 180,085 ms/op
Iteration  10: 182,065 ms/op


Result "benchmarkFind":
  179,611 ±(99.9%) 1,471 ms/op [Average]
  (min, avg, max) = (178,789, 179,611, 182,065), stdev = 0,973
  CI (99.9%): [178,140, 181,082] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 32, patternSize = 16)

# Run progress: 50,87% complete, ETA 08:02:58
# Fork: 1 of 1
# Warmup Iteration   1: 253,099 ms/op
# Warmup Iteration   2: 202,569 ms/op
# Warmup Iteration   3: 198,448 ms/op
# Warmup Iteration   4: 196,426 ms/op
# Warmup Iteration   5: 198,121 ms/op
# Warmup Iteration   6: 195,608 ms/op
# Warmup Iteration   7: 198,284 ms/op
# Warmup Iteration   8: 197,004 ms/op
# Warmup Iteration   9: 198,012 ms/op
# Warmup Iteration  10: 197,761 ms/op
Iteration   1: 197,449 ms/op
Iteration   2: 197,275 ms/op
Iteration   3: 197,140 ms/op
Iteration   4: 195,839 ms/op
Iteration   5: 197,089 ms/op
Iteration   6: 197,522 ms/op
Iteration   7: 198,264 ms/op
Iteration   8: 195,905 ms/op
Iteration   9: 196,047 ms/op
Iteration  10: 198,657 ms/op


Result "benchmarkFind":
  197,119 ±(99.9%) 1,446 ms/op [Average]
  (min, avg, max) = (195,839, 197,119, 198,657), stdev = 0,957
  CI (99.9%): [195,672, 198,565] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 32, patternSize = 32)

# Run progress: 50,92% complete, ETA 08:02:28
# Fork: 1 of 1
# Warmup Iteration   1: 28,844 ms/op
# Warmup Iteration   2: 25,888 ms/op
# Warmup Iteration   3: 25,754 ms/op
# Warmup Iteration   4: 24,304 ms/op
# Warmup Iteration   5: 24,260 ms/op
# Warmup Iteration   6: 24,189 ms/op
# Warmup Iteration   7: 24,171 ms/op
# Warmup Iteration   8: 24,235 ms/op
# Warmup Iteration   9: 24,129 ms/op
# Warmup Iteration  10: 24,354 ms/op
Iteration   1: 24,194 ms/op
Iteration   2: 24,526 ms/op
Iteration   3: 24,537 ms/op
Iteration   4: 24,740 ms/op
Iteration   5: 24,546 ms/op
Iteration   6: 24,633 ms/op
Iteration   7: 24,604 ms/op
Iteration   8: 24,660 ms/op
Iteration   9: 24,782 ms/op
Iteration  10: 24,597 ms/op


Result "benchmarkFind":
  24,582 ±(99.9%) 0,243 ms/op [Average]
  (min, avg, max) = (24,194, 24,582, 24,782), stdev = 0,160
  CI (99.9%): [24,339, 24,825] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 32, patternSize = 64)

# Run progress: 50,97% complete, ETA 08:01:55
# Fork: 1 of 1
# Warmup Iteration   1: 9,959 ms/op
# Warmup Iteration   2: 9,178 ms/op
# Warmup Iteration   3: 9,110 ms/op
# Warmup Iteration   4: 9,196 ms/op
# Warmup Iteration   5: 9,116 ms/op
# Warmup Iteration   6: 9,180 ms/op
# Warmup Iteration   7: 9,118 ms/op
# Warmup Iteration   8: 9,158 ms/op
# Warmup Iteration   9: 9,216 ms/op
# Warmup Iteration  10: 9,185 ms/op
Iteration   1: 9,304 ms/op
Iteration   2: 9,274 ms/op
Iteration   3: 9,224 ms/op
Iteration   4: 9,231 ms/op
Iteration   5: 9,197 ms/op
Iteration   6: 9,306 ms/op
Iteration   7: 9,178 ms/op
Iteration   8: 9,259 ms/op
Iteration   9: 9,262 ms/op
Iteration  10: 9,213 ms/op


Result "benchmarkFind":
  9,245 ±(99.9%) 0,066 ms/op [Average]
  (min, avg, max) = (9,178, 9,245, 9,306), stdev = 0,044
  CI (99.9%): [9,179, 9,311] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 32, patternSize = 128)

# Run progress: 51,01% complete, ETA 08:01:22
# Fork: 1 of 1
# Warmup Iteration   1: 5,928 ms/op
# Warmup Iteration   2: 5,567 ms/op
# Warmup Iteration   3: 5,441 ms/op
# Warmup Iteration   4: 5,442 ms/op
# Warmup Iteration   5: 5,482 ms/op
# Warmup Iteration   6: 5,447 ms/op
# Warmup Iteration   7: 5,447 ms/op
# Warmup Iteration   8: 5,433 ms/op
# Warmup Iteration   9: 5,443 ms/op
# Warmup Iteration  10: 5,447 ms/op
Iteration   1: 5,397 ms/op
Iteration   2: 5,430 ms/op
Iteration   3: 5,496 ms/op
Iteration   4: 5,498 ms/op
Iteration   5: 5,488 ms/op
Iteration   6: 5,480 ms/op
Iteration   7: 5,444 ms/op
Iteration   8: 5,444 ms/op
Iteration   9: 5,445 ms/op
Iteration  10: 5,479 ms/op


Result "benchmarkFind":
  5,460 ±(99.9%) 0,050 ms/op [Average]
  (min, avg, max) = (5,397, 5,460, 5,498), stdev = 0,033
  CI (99.9%): [5,410, 5,510] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 32, patternSize = 256)

# Run progress: 51,06% complete, ETA 08:00:48
# Fork: 1 of 1
# Warmup Iteration   1: 3,512 ms/op
# Warmup Iteration   2: 3,116 ms/op
# Warmup Iteration   3: 3,089 ms/op
# Warmup Iteration   4: 3,044 ms/op
# Warmup Iteration   5: 3,035 ms/op
# Warmup Iteration   6: 3,120 ms/op
# Warmup Iteration   7: 3,045 ms/op
# Warmup Iteration   8: 3,041 ms/op
# Warmup Iteration   9: 3,035 ms/op
# Warmup Iteration  10: 3,055 ms/op
Iteration   1: 3,044 ms/op
Iteration   2: 3,056 ms/op
Iteration   3: 3,073 ms/op
Iteration   4: 3,061 ms/op
Iteration   5: 3,087 ms/op
Iteration   6: 3,067 ms/op
Iteration   7: 3,072 ms/op
Iteration   8: 3,075 ms/op
Iteration   9: 3,074 ms/op
Iteration  10: 3,070 ms/op


Result "benchmarkFind":
  3,068 ±(99.9%) 0,018 ms/op [Average]
  (min, avg, max) = (3,044, 3,068, 3,087), stdev = 0,012
  CI (99.9%): [3,050, 3,086] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 128, patternSize = 2)

# Run progress: 51,10% complete, ETA 08:00:15
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

com.almondtools.stringbench.SampleNotQualifiedException
	at com.almondtools.stringbench.MultiPatternMatcherBenchmark.setup(MultiPatternMatcherBenchmark.java:36)
	at com.almondtools.stringbench.generated.SCSetBackwardOracleMatchingBenchmark_benchmarkFind_jmhTest._jmh_tryInit_f_scsetbackwardoraclematchingbenchmark0_0(SCSetBackwardOracleMatchingBenchmark_benchmarkFind_jmhTest.java:425)
	at com.almondtools.stringbench.generated.SCSetBackwardOracleMatchingBenchmark_benchmarkFind_jmhTest.benchmarkFind_AverageTime(SCSetBackwardOracleMatchingBenchmark_benchmarkFind_jmhTest.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:430)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:412)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)




# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 128, patternSize = 4)

# Run progress: 51,15% complete, ETA 07:59:24
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

com.almondtools.stringbench.SampleNotQualifiedException
	at com.almondtools.stringbench.MultiPatternMatcherBenchmark.setup(MultiPatternMatcherBenchmark.java:36)
	at com.almondtools.stringbench.generated.SCSetBackwardOracleMatchingBenchmark_benchmarkFind_jmhTest._jmh_tryInit_f_scsetbackwardoraclematchingbenchmark0_0(SCSetBackwardOracleMatchingBenchmark_benchmarkFind_jmhTest.java:425)
	at com.almondtools.stringbench.generated.SCSetBackwardOracleMatchingBenchmark_benchmarkFind_jmhTest.benchmarkFind_AverageTime(SCSetBackwardOracleMatchingBenchmark_benchmarkFind_jmhTest.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:430)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:412)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)




# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 128, patternSize = 8)

# Run progress: 51,19% complete, ETA 07:58:32
# Fork: 1 of 1
# Warmup Iteration   1: 748,876 ms/op
# Warmup Iteration   2: 733,712 ms/op
# Warmup Iteration   3: 695,910 ms/op
# Warmup Iteration   4: 684,136 ms/op
# Warmup Iteration   5: 687,977 ms/op
# Warmup Iteration   6: 685,207 ms/op
# Warmup Iteration   7: 682,091 ms/op
# Warmup Iteration   8: 685,334 ms/op
# Warmup Iteration   9: 685,985 ms/op
# Warmup Iteration  10: 704,717 ms/op
Iteration   1: 679,220 ms/op
Iteration   2: 676,825 ms/op
Iteration   3: 764,633 ms/op
Iteration   4: 691,062 ms/op
Iteration   5: 681,184 ms/op
Iteration   6: 684,935 ms/op
Iteration   7: 701,482 ms/op
Iteration   8: 693,479 ms/op
Iteration   9: 690,752 ms/op
Iteration  10: 676,685 ms/op


Result "benchmarkFind":
  694,026 ±(99.9%) 39,438 ms/op [Average]
  (min, avg, max) = (676,685, 694,026, 764,633), stdev = 26,086
  CI (99.9%): [654,588, 733,463] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 128, patternSize = 16)

# Run progress: 51,24% complete, ETA 07:58:06
# Fork: 1 of 1
# Warmup Iteration   1: 1774,280 ms/op
# Warmup Iteration   2: 1702,790 ms/op
# Warmup Iteration   3: 1646,816 ms/op
# Warmup Iteration   4: 1778,279 ms/op
# Warmup Iteration   5: 1863,739 ms/op
# Warmup Iteration   6: 1763,423 ms/op
# Warmup Iteration   7: 1785,315 ms/op
# Warmup Iteration   8: 1763,711 ms/op
# Warmup Iteration   9: 1764,224 ms/op
# Warmup Iteration  10: 1765,773 ms/op
Iteration   1: 1761,931 ms/op
Iteration   2: 1765,769 ms/op
Iteration   3: 1774,300 ms/op
Iteration   4: 1758,245 ms/op
Iteration   5: 1774,814 ms/op
Iteration   6: 1766,021 ms/op
Iteration   7: 1779,298 ms/op
Iteration   8: 1753,668 ms/op
Iteration   9: 1758,806 ms/op
Iteration  10: 1770,492 ms/op


Result "benchmarkFind":
  1766,334 ±(99.9%) 12,579 ms/op [Average]
  (min, avg, max) = (1753,668, 1766,334, 1779,298), stdev = 8,320
  CI (99.9%): [1753,755, 1778,914] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 128, patternSize = 32)

# Run progress: 51,29% complete, ETA 07:57:51
# Fork: 1 of 1
# Warmup Iteration   1: 47,443 ms/op
# Warmup Iteration   2: 43,027 ms/op
# Warmup Iteration   3: 42,475 ms/op
# Warmup Iteration   4: 42,535 ms/op
# Warmup Iteration   5: 42,397 ms/op
# Warmup Iteration   6: 42,570 ms/op
# Warmup Iteration   7: 42,297 ms/op
# Warmup Iteration   8: 42,291 ms/op
# Warmup Iteration   9: 42,388 ms/op
# Warmup Iteration  10: 42,976 ms/op
Iteration   1: 42,698 ms/op
Iteration   2: 42,769 ms/op
Iteration   3: 42,952 ms/op
Iteration   4: 42,675 ms/op
Iteration   5: 42,809 ms/op
Iteration   6: 42,825 ms/op
Iteration   7: 43,015 ms/op
Iteration   8: 42,672 ms/op
Iteration   9: 42,621 ms/op
Iteration  10: 42,557 ms/op


Result "benchmarkFind":
  42,759 ±(99.9%) 0,219 ms/op [Average]
  (min, avg, max) = (42,557, 42,759, 43,015), stdev = 0,145
  CI (99.9%): [42,541, 42,978] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 128, patternSize = 64)

# Run progress: 51,33% complete, ETA 07:57:18
# Fork: 1 of 1
# Warmup Iteration   1: 17,871 ms/op
# Warmup Iteration   2: 16,536 ms/op
# Warmup Iteration   3: 16,079 ms/op
# Warmup Iteration   4: 16,078 ms/op
# Warmup Iteration   5: 16,105 ms/op
# Warmup Iteration   6: 16,062 ms/op
# Warmup Iteration   7: 16,082 ms/op
# Warmup Iteration   8: 18,213 ms/op
# Warmup Iteration   9: 16,086 ms/op
# Warmup Iteration  10: 16,596 ms/op
Iteration   1: 16,236 ms/op
Iteration   2: 16,073 ms/op
Iteration   3: 16,202 ms/op
Iteration   4: 16,076 ms/op
Iteration   5: 16,078 ms/op
Iteration   6: 16,094 ms/op
Iteration   7: 16,054 ms/op
Iteration   8: 15,942 ms/op
Iteration   9: 16,107 ms/op
Iteration  10: 16,093 ms/op


Result "benchmarkFind":
  16,096 ±(99.9%) 0,121 ms/op [Average]
  (min, avg, max) = (15,942, 16,096, 16,236), stdev = 0,080
  CI (99.9%): [15,975, 16,217] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 128, patternSize = 128)

# Run progress: 51,38% complete, ETA 07:56:45
# Fork: 1 of 1
# Warmup Iteration   1: 10,230 ms/op
# Warmup Iteration   2: 9,136 ms/op
# Warmup Iteration   3: 9,100 ms/op
# Warmup Iteration   4: 9,048 ms/op
# Warmup Iteration   5: 9,075 ms/op
# Warmup Iteration   6: 9,108 ms/op
# Warmup Iteration   7: 9,016 ms/op
# Warmup Iteration   8: 9,095 ms/op
# Warmup Iteration   9: 9,074 ms/op
# Warmup Iteration  10: 9,077 ms/op
Iteration   1: 9,063 ms/op
Iteration   2: 9,040 ms/op
Iteration   3: 9,034 ms/op
Iteration   4: 9,044 ms/op
Iteration   5: 9,043 ms/op
Iteration   6: 9,036 ms/op
Iteration   7: 9,134 ms/op
Iteration   8: 9,076 ms/op
Iteration   9: 9,041 ms/op
Iteration  10: 9,065 ms/op


Result "benchmarkFind":
  9,058 ±(99.9%) 0,046 ms/op [Average]
  (min, avg, max) = (9,034, 9,058, 9,134), stdev = 0,030
  CI (99.9%): [9,012, 9,103] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 128, patternSize = 256)

# Run progress: 51,42% complete, ETA 07:56:12
# Fork: 1 of 1
# Warmup Iteration   1: 6,517 ms/op
# Warmup Iteration   2: 5,829 ms/op
# Warmup Iteration   3: 5,761 ms/op
# Warmup Iteration   4: 5,775 ms/op
# Warmup Iteration   5: 5,792 ms/op
# Warmup Iteration   6: 5,623 ms/op
# Warmup Iteration   7: 5,632 ms/op
# Warmup Iteration   8: 5,625 ms/op
# Warmup Iteration   9: 5,647 ms/op
# Warmup Iteration  10: 5,635 ms/op
Iteration   1: 5,629 ms/op
Iteration   2: 5,639 ms/op
Iteration   3: 5,611 ms/op
Iteration   4: 5,609 ms/op
Iteration   5: 5,653 ms/op
Iteration   6: 5,639 ms/op
Iteration   7: 5,638 ms/op
Iteration   8: 5,613 ms/op
Iteration   9: 5,615 ms/op
Iteration  10: 5,611 ms/op


Result "benchmarkFind":
  5,626 ±(99.9%) 0,024 ms/op [Average]
  (min, avg, max) = (5,609, 5,626, 5,653), stdev = 0,016
  CI (99.9%): [5,602, 5,649] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 2, patternSize = 2)

# Run progress: 51,47% complete, ETA 07:55:39
# Fork: 1 of 1
# Warmup Iteration   1: 0,368 ms/op
# Warmup Iteration   2: 0,317 ms/op
# Warmup Iteration   3: 0,303 ms/op
# Warmup Iteration   4: 0,302 ms/op
# Warmup Iteration   5: 0,302 ms/op
# Warmup Iteration   6: 0,335 ms/op
# Warmup Iteration   7: 0,303 ms/op
# Warmup Iteration   8: 0,304 ms/op
# Warmup Iteration   9: 0,304 ms/op
# Warmup Iteration  10: 0,306 ms/op
Iteration   1: 0,308 ms/op
Iteration   2: 0,307 ms/op
Iteration   3: 0,311 ms/op
Iteration   4: 0,306 ms/op
Iteration   5: 0,307 ms/op
Iteration   6: 0,307 ms/op
Iteration   7: 0,307 ms/op
Iteration   8: 0,308 ms/op
Iteration   9: 0,311 ms/op
Iteration  10: 0,314 ms/op


Result "benchmarkFind":
  0,309 ±(99.9%) 0,004 ms/op [Average]
  (min, avg, max) = (0,306, 0,309, 0,314), stdev = 0,003
  CI (99.9%): [0,305, 0,313] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 2, patternSize = 4)

# Run progress: 51,52% complete, ETA 07:55:06
# Fork: 1 of 1
# Warmup Iteration   1: 5,161 ms/op
# Warmup Iteration   2: 4,215 ms/op
# Warmup Iteration   3: 4,051 ms/op
# Warmup Iteration   4: 4,059 ms/op
# Warmup Iteration   5: 4,063 ms/op
# Warmup Iteration   6: 4,070 ms/op
# Warmup Iteration   7: 4,103 ms/op
# Warmup Iteration   8: 4,080 ms/op
# Warmup Iteration   9: 4,117 ms/op
# Warmup Iteration  10: 4,116 ms/op
Iteration   1: 4,108 ms/op
Iteration   2: 4,114 ms/op
Iteration   3: 4,095 ms/op
Iteration   4: 4,097 ms/op
Iteration   5: 4,132 ms/op
Iteration   6: 4,093 ms/op
Iteration   7: 4,090 ms/op
Iteration   8: 4,100 ms/op
Iteration   9: 4,087 ms/op
Iteration  10: 4,070 ms/op


Result "benchmarkFind":
  4,099 ±(99.9%) 0,025 ms/op [Average]
  (min, avg, max) = (4,070, 4,099, 4,132), stdev = 0,017
  CI (99.9%): [4,073, 4,124] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 2, patternSize = 8)

# Run progress: 51,56% complete, ETA 07:54:33
# Fork: 1 of 1
# Warmup Iteration   1: 25,672 ms/op
# Warmup Iteration   2: 20,842 ms/op
# Warmup Iteration   3: 20,479 ms/op
# Warmup Iteration   4: 20,192 ms/op
# Warmup Iteration   5: 20,488 ms/op
# Warmup Iteration   6: 20,467 ms/op
# Warmup Iteration   7: 20,711 ms/op
# Warmup Iteration   8: 20,671 ms/op
# Warmup Iteration   9: 20,608 ms/op
# Warmup Iteration  10: 20,635 ms/op
Iteration   1: 20,604 ms/op
Iteration   2: 20,480 ms/op
Iteration   3: 20,625 ms/op
Iteration   4: 20,530 ms/op
Iteration   5: 20,640 ms/op
Iteration   6: 20,698 ms/op
Iteration   7: 21,022 ms/op
Iteration   8: 20,877 ms/op
Iteration   9: 20,865 ms/op
Iteration  10: 20,915 ms/op


Result "benchmarkFind":
  20,726 ±(99.9%) 0,275 ms/op [Average]
  (min, avg, max) = (20,480, 20,726, 21,022), stdev = 0,182
  CI (99.9%): [20,451, 21,001] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 2, patternSize = 16)

# Run progress: 51,61% complete, ETA 07:54:00
# Fork: 1 of 1
# Warmup Iteration   1: 11,142 ms/op
# Warmup Iteration   2: 9,748 ms/op
# Warmup Iteration   3: 9,746 ms/op
# Warmup Iteration   4: 10,780 ms/op
# Warmup Iteration   5: 9,928 ms/op
# Warmup Iteration   6: 9,830 ms/op
# Warmup Iteration   7: 9,715 ms/op
# Warmup Iteration   8: 9,715 ms/op
# Warmup Iteration   9: 9,713 ms/op
# Warmup Iteration  10: 9,781 ms/op
Iteration   1: 9,786 ms/op
Iteration   2: 9,848 ms/op
Iteration   3: 9,721 ms/op
Iteration   4: 9,727 ms/op
Iteration   5: 9,828 ms/op
Iteration   6: 9,810 ms/op
Iteration   7: 9,825 ms/op
Iteration   8: 9,790 ms/op
Iteration   9: 9,914 ms/op
Iteration  10: 9,798 ms/op


Result "benchmarkFind":
  9,805 ±(99.9%) 0,085 ms/op [Average]
  (min, avg, max) = (9,721, 9,805, 9,914), stdev = 0,056
  CI (99.9%): [9,720, 9,890] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 2, patternSize = 32)

# Run progress: 51,65% complete, ETA 07:53:27
# Fork: 1 of 1
# Warmup Iteration   1: 5,381 ms/op
# Warmup Iteration   2: 4,971 ms/op
# Warmup Iteration   3: 4,820 ms/op
# Warmup Iteration   4: 4,836 ms/op
# Warmup Iteration   5: 4,824 ms/op
# Warmup Iteration   6: 4,828 ms/op
# Warmup Iteration   7: 4,833 ms/op
# Warmup Iteration   8: 4,862 ms/op
# Warmup Iteration   9: 4,819 ms/op
# Warmup Iteration  10: 4,870 ms/op
Iteration   1: 4,913 ms/op
Iteration   2: 4,882 ms/op
Iteration   3: 4,887 ms/op
Iteration   4: 4,877 ms/op
Iteration   5: 4,876 ms/op
Iteration   6: 4,873 ms/op
Iteration   7: 4,895 ms/op
Iteration   8: 4,866 ms/op
Iteration   9: 4,862 ms/op
Iteration  10: 4,854 ms/op


Result "benchmarkFind":
  4,879 ±(99.9%) 0,026 ms/op [Average]
  (min, avg, max) = (4,854, 4,879, 4,913), stdev = 0,017
  CI (99.9%): [4,853, 4,904] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 2, patternSize = 64)

# Run progress: 51,70% complete, ETA 07:52:54
# Fork: 1 of 1
# Warmup Iteration   1: 2,862 ms/op
# Warmup Iteration   2: 2,564 ms/op
# Warmup Iteration   3: 2,495 ms/op
# Warmup Iteration   4: 2,507 ms/op
# Warmup Iteration   5: 2,555 ms/op
# Warmup Iteration   6: 2,539 ms/op
# Warmup Iteration   7: 2,537 ms/op
# Warmup Iteration   8: 2,553 ms/op
# Warmup Iteration   9: 2,559 ms/op
# Warmup Iteration  10: 2,548 ms/op
Iteration   1: 2,556 ms/op
Iteration   2: 2,564 ms/op
Iteration   3: 2,562 ms/op
Iteration   4: 2,574 ms/op
Iteration   5: 2,571 ms/op
Iteration   6: 2,594 ms/op
Iteration   7: 2,569 ms/op
Iteration   8: 2,587 ms/op
Iteration   9: 2,577 ms/op
Iteration  10: 2,561 ms/op


Result "benchmarkFind":
  2,571 ±(99.9%) 0,018 ms/op [Average]
  (min, avg, max) = (2,556, 2,571, 2,594), stdev = 0,012
  CI (99.9%): [2,553, 2,590] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 2, patternSize = 128)

# Run progress: 51,75% complete, ETA 07:52:21
# Fork: 1 of 1
# Warmup Iteration   1: 1,425 ms/op
# Warmup Iteration   2: 1,311 ms/op
# Warmup Iteration   3: 1,440 ms/op
# Warmup Iteration   4: 1,313 ms/op
# Warmup Iteration   5: 1,322 ms/op
# Warmup Iteration   6: 1,329 ms/op
# Warmup Iteration   7: 1,334 ms/op
# Warmup Iteration   8: 1,386 ms/op
# Warmup Iteration   9: 1,306 ms/op
# Warmup Iteration  10: 1,308 ms/op
Iteration   1: 1,324 ms/op
Iteration   2: 1,318 ms/op
Iteration   3: 1,318 ms/op
Iteration   4: 1,319 ms/op
Iteration   5: 1,321 ms/op
Iteration   6: 1,323 ms/op
Iteration   7: 1,339 ms/op
Iteration   8: 1,335 ms/op
Iteration   9: 1,337 ms/op
Iteration  10: 1,325 ms/op


Result "benchmarkFind":
  1,326 ±(99.9%) 0,012 ms/op [Average]
  (min, avg, max) = (1,318, 1,326, 1,339), stdev = 0,008
  CI (99.9%): [1,314, 1,338] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 2, patternSize = 256)

# Run progress: 51,79% complete, ETA 07:51:48
# Fork: 1 of 1
# Warmup Iteration   1: 0,844 ms/op
# Warmup Iteration   2: 0,771 ms/op
# Warmup Iteration   3: 0,766 ms/op
# Warmup Iteration   4: 0,747 ms/op
# Warmup Iteration   5: 0,756 ms/op
# Warmup Iteration   6: 0,748 ms/op
# Warmup Iteration   7: 0,743 ms/op
# Warmup Iteration   8: 0,746 ms/op
# Warmup Iteration   9: 0,811 ms/op
# Warmup Iteration  10: 0,749 ms/op
Iteration   1: 0,754 ms/op
Iteration   2: 0,751 ms/op
Iteration   3: 0,756 ms/op
Iteration   4: 0,762 ms/op
Iteration   5: 0,766 ms/op
Iteration   6: 0,762 ms/op
Iteration   7: 0,754 ms/op
Iteration   8: 0,759 ms/op
Iteration   9: 0,759 ms/op
Iteration  10: 0,761 ms/op


Result "benchmarkFind":
  0,759 ±(99.9%) 0,007 ms/op [Average]
  (min, avg, max) = (0,751, 0,759, 0,766), stdev = 0,005
  CI (99.9%): [0,751, 0,766] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 8, patternSize = 2)

# Run progress: 51,84% complete, ETA 07:51:15
# Fork: 1 of 1
# Warmup Iteration   1: 1,541 ms/op
# Warmup Iteration   2: 1,337 ms/op
# Warmup Iteration   3: 1,336 ms/op
# Warmup Iteration   4: 1,341 ms/op
# Warmup Iteration   5: 1,351 ms/op
# Warmup Iteration   6: 1,345 ms/op
# Warmup Iteration   7: 1,342 ms/op
# Warmup Iteration   8: 1,345 ms/op
# Warmup Iteration   9: 1,348 ms/op
# Warmup Iteration  10: 1,359 ms/op
Iteration   1: 1,355 ms/op
Iteration   2: 1,349 ms/op
Iteration   3: 1,356 ms/op
Iteration   4: 1,356 ms/op
Iteration   5: 1,357 ms/op
Iteration   6: 1,349 ms/op
Iteration   7: 1,353 ms/op
Iteration   8: 1,352 ms/op
Iteration   9: 1,354 ms/op
Iteration  10: 1,357 ms/op


Result "benchmarkFind":
  1,354 ±(99.9%) 0,005 ms/op [Average]
  (min, avg, max) = (1,349, 1,354, 1,357), stdev = 0,003
  CI (99.9%): [1,349, 1,359] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 8, patternSize = 4)

# Run progress: 51,88% complete, ETA 07:50:42
# Fork: 1 of 1
# Warmup Iteration   1: 29,754 ms/op
# Warmup Iteration   2: 23,358 ms/op
# Warmup Iteration   3: 23,128 ms/op
# Warmup Iteration   4: 23,251 ms/op
# Warmup Iteration   5: 23,234 ms/op
# Warmup Iteration   6: 23,440 ms/op
# Warmup Iteration   7: 23,365 ms/op
# Warmup Iteration   8: 23,295 ms/op
# Warmup Iteration   9: 23,327 ms/op
# Warmup Iteration  10: 23,418 ms/op
Iteration   1: 23,482 ms/op
Iteration   2: 23,494 ms/op
Iteration   3: 23,425 ms/op
Iteration   4: 23,329 ms/op
Iteration   5: 23,299 ms/op
Iteration   6: 23,459 ms/op
Iteration   7: 23,406 ms/op
Iteration   8: 23,524 ms/op
Iteration   9: 23,458 ms/op
Iteration  10: 23,497 ms/op


Result "benchmarkFind":
  23,437 ±(99.9%) 0,112 ms/op [Average]
  (min, avg, max) = (23,299, 23,437, 23,524), stdev = 0,074
  CI (99.9%): [23,326, 23,549] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 8, patternSize = 8)

# Run progress: 51,93% complete, ETA 07:50:09
# Fork: 1 of 1
# Warmup Iteration   1: 56,738 ms/op
# Warmup Iteration   2: 46,782 ms/op
# Warmup Iteration   3: 45,691 ms/op
# Warmup Iteration   4: 45,940 ms/op
# Warmup Iteration   5: 45,542 ms/op
# Warmup Iteration   6: 46,068 ms/op
# Warmup Iteration   7: 45,916 ms/op
# Warmup Iteration   8: 46,045 ms/op
# Warmup Iteration   9: 46,460 ms/op
# Warmup Iteration  10: 46,389 ms/op
Iteration   1: 46,268 ms/op
Iteration   2: 46,006 ms/op
Iteration   3: 46,312 ms/op
Iteration   4: 46,701 ms/op
Iteration   5: 46,709 ms/op
Iteration   6: 46,272 ms/op
Iteration   7: 45,955 ms/op
Iteration   8: 46,273 ms/op
Iteration   9: 46,096 ms/op
Iteration  10: 46,254 ms/op


Result "benchmarkFind":
  46,285 ±(99.9%) 0,383 ms/op [Average]
  (min, avg, max) = (45,955, 46,285, 46,709), stdev = 0,253
  CI (99.9%): [45,902, 46,668] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 8, patternSize = 16)

# Run progress: 51,98% complete, ETA 07:49:36
# Fork: 1 of 1
# Warmup Iteration   1: 15,385 ms/op
# Warmup Iteration   2: 13,435 ms/op
# Warmup Iteration   3: 13,369 ms/op
# Warmup Iteration   4: 13,350 ms/op
# Warmup Iteration   5: 13,326 ms/op
# Warmup Iteration   6: 13,507 ms/op
# Warmup Iteration   7: 13,463 ms/op
# Warmup Iteration   8: 13,488 ms/op
# Warmup Iteration   9: 13,667 ms/op
# Warmup Iteration  10: 13,586 ms/op
Iteration   1: 13,497 ms/op
Iteration   2: 13,522 ms/op
Iteration   3: 13,528 ms/op
Iteration   4: 13,588 ms/op
Iteration   5: 13,586 ms/op
Iteration   6: 13,584 ms/op
Iteration   7: 13,446 ms/op
Iteration   8: 13,418 ms/op
Iteration   9: 13,389 ms/op
Iteration  10: 15,236 ms/op


Result "benchmarkFind":
  13,679 ±(99.9%) 0,834 ms/op [Average]
  (min, avg, max) = (13,389, 13,679, 15,236), stdev = 0,552
  CI (99.9%): [12,845, 14,513] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 8, patternSize = 32)

# Run progress: 52,02% complete, ETA 07:49:04
# Fork: 1 of 1
# Warmup Iteration   1: 6,618 ms/op
# Warmup Iteration   2: 6,105 ms/op
# Warmup Iteration   3: 5,984 ms/op
# Warmup Iteration   4: 6,089 ms/op
# Warmup Iteration   5: 6,039 ms/op
# Warmup Iteration   6: 6,031 ms/op
# Warmup Iteration   7: 6,088 ms/op
# Warmup Iteration   8: 6,081 ms/op
# Warmup Iteration   9: 6,068 ms/op
# Warmup Iteration  10: 6,123 ms/op
Iteration   1: 6,142 ms/op
Iteration   2: 6,122 ms/op
Iteration   3: 6,083 ms/op
Iteration   4: 6,126 ms/op
Iteration   5: 6,099 ms/op
Iteration   6: 6,140 ms/op
Iteration   7: 6,028 ms/op
Iteration   8: 6,031 ms/op
Iteration   9: 6,056 ms/op
Iteration  10: 6,232 ms/op


Result "benchmarkFind":
  6,106 ±(99.9%) 0,093 ms/op [Average]
  (min, avg, max) = (6,028, 6,106, 6,232), stdev = 0,061
  CI (99.9%): [6,013, 6,199] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 8, patternSize = 64)

# Run progress: 52,07% complete, ETA 07:48:31
# Fork: 1 of 1
# Warmup Iteration   1: 3,410 ms/op
# Warmup Iteration   2: 3,156 ms/op
# Warmup Iteration   3: 3,110 ms/op
# Warmup Iteration   4: 3,099 ms/op
# Warmup Iteration   5: 3,097 ms/op
# Warmup Iteration   6: 3,103 ms/op
# Warmup Iteration   7: 3,112 ms/op
# Warmup Iteration   8: 3,153 ms/op
# Warmup Iteration   9: 3,145 ms/op
# Warmup Iteration  10: 3,175 ms/op
Iteration   1: 3,195 ms/op
Iteration   2: 3,110 ms/op
Iteration   3: 3,120 ms/op
Iteration   4: 3,140 ms/op
Iteration   5: 3,151 ms/op
Iteration   6: 3,181 ms/op
Iteration   7: 3,165 ms/op
Iteration   8: 3,188 ms/op
Iteration   9: 3,182 ms/op
Iteration  10: 3,178 ms/op


Result "benchmarkFind":
  3,161 ±(99.9%) 0,045 ms/op [Average]
  (min, avg, max) = (3,110, 3,161, 3,195), stdev = 0,029
  CI (99.9%): [3,117, 3,206] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 8, patternSize = 128)

# Run progress: 52,11% complete, ETA 07:47:58
# Fork: 1 of 1
# Warmup Iteration   1: 2,074 ms/op
# Warmup Iteration   2: 1,818 ms/op
# Warmup Iteration   3: 1,784 ms/op
# Warmup Iteration   4: 1,784 ms/op
# Warmup Iteration   5: 1,791 ms/op
# Warmup Iteration   6: 1,808 ms/op
# Warmup Iteration   7: 1,799 ms/op
# Warmup Iteration   8: 1,808 ms/op
# Warmup Iteration   9: 1,809 ms/op
# Warmup Iteration  10: 1,821 ms/op
Iteration   1: 1,805 ms/op
Iteration   2: 1,781 ms/op
Iteration   3: 1,806 ms/op
Iteration   4: 1,813 ms/op
Iteration   5: 1,818 ms/op
Iteration   6: 1,825 ms/op
Iteration   7: 1,829 ms/op
Iteration   8: 2,098 ms/op
Iteration   9: 1,824 ms/op
Iteration  10: 1,809 ms/op


Result "benchmarkFind":
  1,841 ±(99.9%) 0,138 ms/op [Average]
  (min, avg, max) = (1,781, 1,841, 2,098), stdev = 0,091
  CI (99.9%): [1,703, 1,979] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 8, patternSize = 256)

# Run progress: 52,16% complete, ETA 07:47:25
# Fork: 1 of 1
# Warmup Iteration   1: 1,157 ms/op
# Warmup Iteration   2: 1,062 ms/op
# Warmup Iteration   3: 1,042 ms/op
# Warmup Iteration   4: 1,046 ms/op
# Warmup Iteration   5: 1,043 ms/op
# Warmup Iteration   6: 1,043 ms/op
# Warmup Iteration   7: 1,048 ms/op
# Warmup Iteration   8: 1,047 ms/op
# Warmup Iteration   9: 1,051 ms/op
# Warmup Iteration  10: 1,060 ms/op
Iteration   1: 1,064 ms/op
Iteration   2: 1,073 ms/op
Iteration   3: 1,071 ms/op
Iteration   4: 1,077 ms/op
Iteration   5: 1,072 ms/op
Iteration   6: 1,074 ms/op
Iteration   7: 1,070 ms/op
Iteration   8: 1,068 ms/op
Iteration   9: 1,084 ms/op
Iteration  10: 1,067 ms/op


Result "benchmarkFind":
  1,072 ±(99.9%) 0,008 ms/op [Average]
  (min, avg, max) = (1,064, 1,072, 1,084), stdev = 0,005
  CI (99.9%): [1,064, 1,080] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 32, patternSize = 2)

# Run progress: 52,21% complete, ETA 07:46:52
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

com.almondtools.stringbench.SampleNotQualifiedException
	at com.almondtools.stringbench.MultiPatternMatcherBenchmark.setup(MultiPatternMatcherBenchmark.java:36)
	at com.almondtools.stringbench.generated.SCSetBackwardOracleMatchingBenchmark_benchmarkFind_jmhTest._jmh_tryInit_f_scsetbackwardoraclematchingbenchmark0_0(SCSetBackwardOracleMatchingBenchmark_benchmarkFind_jmhTest.java:425)
	at com.almondtools.stringbench.generated.SCSetBackwardOracleMatchingBenchmark_benchmarkFind_jmhTest.benchmarkFind_AverageTime(SCSetBackwardOracleMatchingBenchmark_benchmarkFind_jmhTest.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:430)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:412)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)




# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 32, patternSize = 4)

# Run progress: 52,25% complete, ETA 07:46:02
# Fork: 1 of 1
# Warmup Iteration   1: 200,523 ms/op
# Warmup Iteration   2: 175,815 ms/op
# Warmup Iteration   3: 174,427 ms/op
# Warmup Iteration   4: 175,279 ms/op
# Warmup Iteration   5: 177,114 ms/op
# Warmup Iteration   6: 177,000 ms/op
# Warmup Iteration   7: 177,288 ms/op
# Warmup Iteration   8: 175,700 ms/op
# Warmup Iteration   9: 176,051 ms/op
# Warmup Iteration  10: 177,280 ms/op
Iteration   1: 176,317 ms/op
Iteration   2: 175,553 ms/op
Iteration   3: 175,376 ms/op
Iteration   4: 176,967 ms/op
Iteration   5: 177,899 ms/op
Iteration   6: 176,166 ms/op
Iteration   7: 176,700 ms/op
Iteration   8: 175,527 ms/op
Iteration   9: 178,750 ms/op
Iteration  10: 176,870 ms/op


Result "benchmarkFind":
  176,613 ±(99.9%) 1,636 ms/op [Average]
  (min, avg, max) = (175,376, 176,613, 178,750), stdev = 1,082
  CI (99.9%): [174,976, 178,249] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 32, patternSize = 8)

# Run progress: 52,30% complete, ETA 07:45:30
# Fork: 1 of 1
# Warmup Iteration   1: 170,958 ms/op
# Warmup Iteration   2: 137,049 ms/op
# Warmup Iteration   3: 131,711 ms/op
# Warmup Iteration   4: 134,977 ms/op
# Warmup Iteration   5: 130,751 ms/op
# Warmup Iteration   6: 131,918 ms/op
# Warmup Iteration   7: 132,379 ms/op
# Warmup Iteration   8: 130,811 ms/op
# Warmup Iteration   9: 131,257 ms/op
# Warmup Iteration  10: 131,350 ms/op
Iteration   1: 131,446 ms/op
Iteration   2: 131,929 ms/op
Iteration   3: 137,206 ms/op
Iteration   4: 131,413 ms/op
Iteration   5: 132,538 ms/op
Iteration   6: 132,082 ms/op
Iteration   7: 131,509 ms/op
Iteration   8: 130,706 ms/op
Iteration   9: 132,595 ms/op
Iteration  10: 131,516 ms/op


Result "benchmarkFind":
  132,294 ±(99.9%) 2,746 ms/op [Average]
  (min, avg, max) = (130,706, 132,294, 137,206), stdev = 1,816
  CI (99.9%): [129,548, 135,040] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 32, patternSize = 16)

# Run progress: 52,34% complete, ETA 07:44:59
# Fork: 1 of 1
# Warmup Iteration   1: 22,890 ms/op
# Warmup Iteration   2: 19,786 ms/op
# Warmup Iteration   3: 19,493 ms/op
# Warmup Iteration   4: 19,201 ms/op
# Warmup Iteration   5: 19,249 ms/op
# Warmup Iteration   6: 19,101 ms/op
# Warmup Iteration   7: 19,139 ms/op
# Warmup Iteration   8: 19,078 ms/op
# Warmup Iteration   9: 19,144 ms/op
# Warmup Iteration  10: 19,362 ms/op
Iteration   1: 19,192 ms/op
Iteration   2: 19,344 ms/op
Iteration   3: 19,623 ms/op
Iteration   4: 19,892 ms/op
Iteration   5: 19,658 ms/op
Iteration   6: 19,668 ms/op
Iteration   7: 19,802 ms/op
Iteration   8: 19,588 ms/op
Iteration   9: 19,740 ms/op
Iteration  10: 19,542 ms/op


Result "benchmarkFind":
  19,605 ±(99.9%) 0,314 ms/op [Average]
  (min, avg, max) = (19,192, 19,605, 19,892), stdev = 0,208
  CI (99.9%): [19,290, 19,919] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 32, patternSize = 32)

# Run progress: 52,39% complete, ETA 07:44:26
# Fork: 1 of 1
# Warmup Iteration   1: 8,656 ms/op
# Warmup Iteration   2: 8,148 ms/op
# Warmup Iteration   3: 7,891 ms/op
# Warmup Iteration   4: 7,882 ms/op
# Warmup Iteration   5: 7,931 ms/op
# Warmup Iteration   6: 7,887 ms/op
# Warmup Iteration   7: 7,905 ms/op
# Warmup Iteration   8: 7,930 ms/op
# Warmup Iteration   9: 7,994 ms/op
# Warmup Iteration  10: 7,983 ms/op
Iteration   1: 7,957 ms/op
Iteration   2: 7,966 ms/op
Iteration   3: 7,968 ms/op
Iteration   4: 7,979 ms/op
Iteration   5: 7,952 ms/op
Iteration   6: 7,966 ms/op
Iteration   7: 8,001 ms/op
Iteration   8: 7,944 ms/op
Iteration   9: 7,922 ms/op
Iteration  10: 7,933 ms/op


Result "benchmarkFind":
  7,959 ±(99.9%) 0,034 ms/op [Average]
  (min, avg, max) = (7,922, 7,959, 8,001), stdev = 0,023
  CI (99.9%): [7,924, 7,993] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 32, patternSize = 64)

# Run progress: 52,44% complete, ETA 07:43:53
# Fork: 1 of 1
# Warmup Iteration   1: 5,176 ms/op
# Warmup Iteration   2: 4,785 ms/op
# Warmup Iteration   3: 4,519 ms/op
# Warmup Iteration   4: 4,564 ms/op
# Warmup Iteration   5: 4,577 ms/op
# Warmup Iteration   6: 4,564 ms/op
# Warmup Iteration   7: 4,530 ms/op
# Warmup Iteration   8: 4,508 ms/op
# Warmup Iteration   9: 4,525 ms/op
# Warmup Iteration  10: 4,507 ms/op
Iteration   1: 5,025 ms/op
Iteration   2: 4,506 ms/op
Iteration   3: 4,515 ms/op
Iteration   4: 4,529 ms/op
Iteration   5: 4,555 ms/op
Iteration   6: 4,753 ms/op
Iteration   7: 4,556 ms/op
Iteration   8: 4,560 ms/op
Iteration   9: 4,566 ms/op
Iteration  10: 4,569 ms/op


Result "benchmarkFind":
  4,613 ±(99.9%) 0,242 ms/op [Average]
  (min, avg, max) = (4,506, 4,613, 5,025), stdev = 0,160
  CI (99.9%): [4,371, 4,856] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 32, patternSize = 128)

# Run progress: 52,48% complete, ETA 07:43:21
# Fork: 1 of 1
# Warmup Iteration   1: 3,177 ms/op
# Warmup Iteration   2: 2,854 ms/op
# Warmup Iteration   3: 2,879 ms/op
# Warmup Iteration   4: 2,882 ms/op
# Warmup Iteration   5: 2,897 ms/op
# Warmup Iteration   6: 2,855 ms/op
# Warmup Iteration   7: 2,862 ms/op
# Warmup Iteration   8: 2,891 ms/op
# Warmup Iteration   9: 2,903 ms/op
# Warmup Iteration  10: 2,888 ms/op
Iteration   1: 2,917 ms/op
Iteration   2: 2,909 ms/op
Iteration   3: 2,906 ms/op
Iteration   4: 2,909 ms/op
Iteration   5: 2,901 ms/op
Iteration   6: 2,880 ms/op
Iteration   7: 2,883 ms/op
Iteration   8: 2,858 ms/op
Iteration   9: 2,872 ms/op
Iteration  10: 2,891 ms/op


Result "benchmarkFind":
  2,893 ±(99.9%) 0,029 ms/op [Average]
  (min, avg, max) = (2,858, 2,893, 2,917), stdev = 0,019
  CI (99.9%): [2,864, 2,921] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 32, patternSize = 256)

# Run progress: 52,53% complete, ETA 07:42:48
# Fork: 1 of 1
# Warmup Iteration   1: 1,917 ms/op
# Warmup Iteration   2: 1,712 ms/op
# Warmup Iteration   3: 1,720 ms/op
# Warmup Iteration   4: 1,704 ms/op
# Warmup Iteration   5: 1,720 ms/op
# Warmup Iteration   6: 1,714 ms/op
# Warmup Iteration   7: 1,723 ms/op
# Warmup Iteration   8: 1,715 ms/op
# Warmup Iteration   9: 1,722 ms/op
# Warmup Iteration  10: 1,722 ms/op
Iteration   1: 1,713 ms/op
Iteration   2: 1,722 ms/op
Iteration   3: 1,717 ms/op
Iteration   4: 1,717 ms/op
Iteration   5: 1,719 ms/op
Iteration   6: 1,712 ms/op
Iteration   7: 1,717 ms/op
Iteration   8: 1,715 ms/op
Iteration   9: 1,712 ms/op
Iteration  10: 1,708 ms/op


Result "benchmarkFind":
  1,715 ±(99.9%) 0,006 ms/op [Average]
  (min, avg, max) = (1,708, 1,715, 1,722), stdev = 0,004
  CI (99.9%): [1,709, 1,721] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 128, patternSize = 2)

# Run progress: 52,57% complete, ETA 07:42:16
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

com.almondtools.stringbench.SampleNotQualifiedException
	at com.almondtools.stringbench.MultiPatternMatcherBenchmark.setup(MultiPatternMatcherBenchmark.java:36)
	at com.almondtools.stringbench.generated.SCSetBackwardOracleMatchingBenchmark_benchmarkFind_jmhTest._jmh_tryInit_f_scsetbackwardoraclematchingbenchmark0_0(SCSetBackwardOracleMatchingBenchmark_benchmarkFind_jmhTest.java:425)
	at com.almondtools.stringbench.generated.SCSetBackwardOracleMatchingBenchmark_benchmarkFind_jmhTest.benchmarkFind_AverageTime(SCSetBackwardOracleMatchingBenchmark_benchmarkFind_jmhTest.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:430)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:412)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)




# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 128, patternSize = 4)

# Run progress: 52,62% complete, ETA 07:41:26
# Fork: 1 of 1
# Warmup Iteration   1: 771,492 ms/op
# Warmup Iteration   2: 759,065 ms/op
# Warmup Iteration   3: 722,877 ms/op
# Warmup Iteration   4: 722,284 ms/op
# Warmup Iteration   5: 754,649 ms/op
# Warmup Iteration   6: 731,072 ms/op
# Warmup Iteration   7: 712,795 ms/op
# Warmup Iteration   8: 717,622 ms/op
# Warmup Iteration   9: 715,617 ms/op
# Warmup Iteration  10: 712,482 ms/op
Iteration   1: 717,870 ms/op
Iteration   2: 713,753 ms/op
Iteration   3: 712,019 ms/op
Iteration   4: 719,362 ms/op
Iteration   5: 715,913 ms/op
Iteration   6: 719,801 ms/op
Iteration   7: 721,107 ms/op
Iteration   8: 721,328 ms/op
Iteration   9: 715,333 ms/op
Iteration  10: 713,674 ms/op


Result "benchmarkFind":
  717,016 ±(99.9%) 5,043 ms/op [Average]
  (min, avg, max) = (712,019, 717,016, 721,328), stdev = 3,336
  CI (99.9%): [711,973, 722,059] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 128, patternSize = 8)

# Run progress: 52,67% complete, ETA 07:41:02
# Fork: 1 of 1
# Warmup Iteration   1: 1129,543 ms/op
# Warmup Iteration   2: 1033,620 ms/op
# Warmup Iteration   3: 961,843 ms/op
# Warmup Iteration   4: 971,827 ms/op
# Warmup Iteration   5: 953,116 ms/op
# Warmup Iteration   6: 955,608 ms/op
# Warmup Iteration   7: 954,670 ms/op
# Warmup Iteration   8: 946,748 ms/op
# Warmup Iteration   9: 947,609 ms/op
# Warmup Iteration  10: 957,672 ms/op
Iteration   1: 955,411 ms/op
Iteration   2: 948,289 ms/op
Iteration   3: 953,620 ms/op
Iteration   4: 947,224 ms/op
Iteration   5: 947,962 ms/op
Iteration   6: 949,190 ms/op
Iteration   7: 950,662 ms/op
Iteration   8: 950,578 ms/op
Iteration   9: 947,857 ms/op
Iteration  10: 947,177 ms/op


Result "benchmarkFind":
  949,797 ±(99.9%) 4,239 ms/op [Average]
  (min, avg, max) = (947,177, 949,797, 955,411), stdev = 2,804
  CI (99.9%): [945,558, 954,036] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 128, patternSize = 16)

# Run progress: 52,71% complete, ETA 07:40:44
# Fork: 1 of 1
# Warmup Iteration   1: 41,246 ms/op
# Warmup Iteration   2: 32,527 ms/op
# Warmup Iteration   3: 32,724 ms/op
# Warmup Iteration   4: 31,740 ms/op
# Warmup Iteration   5: 31,838 ms/op
# Warmup Iteration   6: 31,852 ms/op
# Warmup Iteration   7: 31,831 ms/op
# Warmup Iteration   8: 31,775 ms/op
# Warmup Iteration   9: 32,094 ms/op
# Warmup Iteration  10: 31,847 ms/op
Iteration   1: 32,101 ms/op
Iteration   2: 31,981 ms/op
Iteration   3: 32,277 ms/op
Iteration   4: 31,895 ms/op
Iteration   5: 31,965 ms/op
Iteration   6: 31,822 ms/op
Iteration   7: 32,216 ms/op
Iteration   8: 32,571 ms/op
Iteration   9: 32,170 ms/op
Iteration  10: 32,457 ms/op


Result "benchmarkFind":
  32,145 ±(99.9%) 0,367 ms/op [Average]
  (min, avg, max) = (31,822, 32,145, 32,571), stdev = 0,243
  CI (99.9%): [31,779, 32,512] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 128, patternSize = 32)

# Run progress: 52,76% complete, ETA 07:40:12
# Fork: 1 of 1
# Warmup Iteration   1: 14,578 ms/op
# Warmup Iteration   2: 13,694 ms/op
# Warmup Iteration   3: 13,061 ms/op
# Warmup Iteration   4: 13,135 ms/op
# Warmup Iteration   5: 13,023 ms/op
# Warmup Iteration   6: 13,001 ms/op
# Warmup Iteration   7: 13,114 ms/op
# Warmup Iteration   8: 13,055 ms/op
# Warmup Iteration   9: 13,053 ms/op
# Warmup Iteration  10: 13,079 ms/op
Iteration   1: 13,051 ms/op
Iteration   2: 13,093 ms/op
Iteration   3: 13,058 ms/op
Iteration   4: 13,148 ms/op
Iteration   5: 13,159 ms/op
Iteration   6: 13,187 ms/op
Iteration   7: 13,176 ms/op
Iteration   8: 13,153 ms/op
Iteration   9: 13,257 ms/op
Iteration  10: 13,123 ms/op


Result "benchmarkFind":
  13,141 ±(99.9%) 0,094 ms/op [Average]
  (min, avg, max) = (13,051, 13,141, 13,257), stdev = 0,062
  CI (99.9%): [13,046, 13,235] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 128, patternSize = 64)

# Run progress: 52,80% complete, ETA 07:39:40
# Fork: 1 of 1
# Warmup Iteration   1: 8,750 ms/op
# Warmup Iteration   2: 7,921 ms/op
# Warmup Iteration   3: 8,014 ms/op
# Warmup Iteration   4: 7,741 ms/op
# Warmup Iteration   5: 7,726 ms/op
# Warmup Iteration   6: 7,787 ms/op
# Warmup Iteration   7: 7,781 ms/op
# Warmup Iteration   8: 7,789 ms/op
# Warmup Iteration   9: 7,733 ms/op
# Warmup Iteration  10: 7,804 ms/op
Iteration   1: 7,761 ms/op
Iteration   2: 7,748 ms/op
Iteration   3: 7,727 ms/op
Iteration   4: 7,733 ms/op
Iteration   5: 7,782 ms/op
Iteration   6: 7,740 ms/op
Iteration   7: 7,834 ms/op
Iteration   8: 7,774 ms/op
Iteration   9: 8,383 ms/op
Iteration  10: 7,748 ms/op


Result "benchmarkFind":
  7,823 ±(99.9%) 0,301 ms/op [Average]
  (min, avg, max) = (7,727, 7,823, 8,383), stdev = 0,199
  CI (99.9%): [7,522, 8,124] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 128, patternSize = 128)

# Run progress: 52,85% complete, ETA 07:39:07
# Fork: 1 of 1
# Warmup Iteration   1: 5,552 ms/op
# Warmup Iteration   2: 4,718 ms/op
# Warmup Iteration   3: 4,689 ms/op
# Warmup Iteration   4: 4,749 ms/op
# Warmup Iteration   5: 4,663 ms/op
# Warmup Iteration   6: 4,677 ms/op
# Warmup Iteration   7: 4,687 ms/op
# Warmup Iteration   8: 4,722 ms/op
# Warmup Iteration   9: 4,691 ms/op
# Warmup Iteration  10: 4,701 ms/op
Iteration   1: 4,712 ms/op
Iteration   2: 4,707 ms/op
Iteration   3: 4,717 ms/op
Iteration   4: 4,701 ms/op
Iteration   5: 4,703 ms/op
Iteration   6: 4,705 ms/op
Iteration   7: 4,689 ms/op
Iteration   8: 4,751 ms/op
Iteration   9: 4,740 ms/op
Iteration  10: 4,738 ms/op


Result "benchmarkFind":
  4,716 ±(99.9%) 0,030 ms/op [Average]
  (min, avg, max) = (4,689, 4,716, 4,751), stdev = 0,020
  CI (99.9%): [4,686, 4,747] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 128, patternSize = 256)

# Run progress: 52,90% complete, ETA 07:38:35
# Fork: 1 of 1
# Warmup Iteration   1: 4,336 ms/op
# Warmup Iteration   2: 3,942 ms/op
# Warmup Iteration   3: 3,880 ms/op
# Warmup Iteration   4: 3,897 ms/op
# Warmup Iteration   5: 3,806 ms/op
# Warmup Iteration   6: 3,771 ms/op
# Warmup Iteration   7: 3,805 ms/op
# Warmup Iteration   8: 3,771 ms/op
# Warmup Iteration   9: 3,775 ms/op
# Warmup Iteration  10: 3,781 ms/op
Iteration   1: 3,774 ms/op
Iteration   2: 3,770 ms/op
Iteration   3: 3,773 ms/op
Iteration   4: 3,759 ms/op
Iteration   5: 3,779 ms/op
Iteration   6: 3,768 ms/op
Iteration   7: 3,781 ms/op
Iteration   8: 3,788 ms/op
Iteration   9: 3,764 ms/op
Iteration  10: 3,788 ms/op


Result "benchmarkFind":
  3,774 ±(99.9%) 0,014 ms/op [Average]
  (min, avg, max) = (3,759, 3,774, 3,788), stdev = 0,010
  CI (99.9%): [3,760, 3,789] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 2, patternSize = 2)

# Run progress: 52,94% complete, ETA 07:38:02
# Fork: 1 of 1
# Warmup Iteration   1: 1,032 ms/op
# Warmup Iteration   2: 0,789 ms/op
# Warmup Iteration   3: 0,786 ms/op
# Warmup Iteration   4: 0,783 ms/op
# Warmup Iteration   5: 0,789 ms/op
# Warmup Iteration   6: 0,791 ms/op
# Warmup Iteration   7: 0,786 ms/op
# Warmup Iteration   8: 0,789 ms/op
# Warmup Iteration   9: 0,797 ms/op
# Warmup Iteration  10: 0,792 ms/op
Iteration   1: 0,791 ms/op
Iteration   2: 0,788 ms/op
Iteration   3: 0,787 ms/op
Iteration   4: 0,792 ms/op
Iteration   5: 0,787 ms/op
Iteration   6: 0,795 ms/op
Iteration   7: 0,895 ms/op
Iteration   8: 0,785 ms/op
Iteration   9: 0,795 ms/op
Iteration  10: 0,776 ms/op


Result "benchmarkFind":
  0,799 ±(99.9%) 0,051 ms/op [Average]
  (min, avg, max) = (0,776, 0,799, 0,895), stdev = 0,034
  CI (99.9%): [0,748, 0,851] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 2, patternSize = 4)

# Run progress: 52,99% complete, ETA 07:37:30
# Fork: 1 of 1
# Warmup Iteration   1: 49,143 ms/op
# Warmup Iteration   2: 38,817 ms/op
# Warmup Iteration   3: 38,293 ms/op
# Warmup Iteration   4: 38,179 ms/op
# Warmup Iteration   5: 38,167 ms/op
# Warmup Iteration   6: 38,672 ms/op
# Warmup Iteration   7: 37,948 ms/op
# Warmup Iteration   8: 38,385 ms/op
# Warmup Iteration   9: 37,989 ms/op
# Warmup Iteration  10: 38,777 ms/op
Iteration   1: 37,940 ms/op
Iteration   2: 37,899 ms/op
Iteration   3: 38,026 ms/op
Iteration   4: 37,969 ms/op
Iteration   5: 37,504 ms/op
Iteration   6: 37,812 ms/op
Iteration   7: 37,710 ms/op
Iteration   8: 37,680 ms/op
Iteration   9: 37,810 ms/op
Iteration  10: 37,977 ms/op


Result "benchmarkFind":
  37,832 ±(99.9%) 0,247 ms/op [Average]
  (min, avg, max) = (37,504, 37,832, 38,026), stdev = 0,163
  CI (99.9%): [37,586, 38,079] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 2, patternSize = 8)

# Run progress: 53,03% complete, ETA 07:36:58
# Fork: 1 of 1
# Warmup Iteration   1: 16,427 ms/op
# Warmup Iteration   2: 14,203 ms/op
# Warmup Iteration   3: 13,732 ms/op
# Warmup Iteration   4: 13,754 ms/op
# Warmup Iteration   5: 13,982 ms/op
# Warmup Iteration   6: 14,034 ms/op
# Warmup Iteration   7: 14,067 ms/op
# Warmup Iteration   8: 14,109 ms/op
# Warmup Iteration   9: 14,305 ms/op
# Warmup Iteration  10: 14,184 ms/op
Iteration   1: 14,150 ms/op
Iteration   2: 14,184 ms/op
Iteration   3: 14,264 ms/op
Iteration   4: 13,989 ms/op
Iteration   5: 14,156 ms/op
Iteration   6: 14,204 ms/op
Iteration   7: 14,114 ms/op
Iteration   8: 14,103 ms/op
Iteration   9: 14,062 ms/op
Iteration  10: 14,184 ms/op


Result "benchmarkFind":
  14,141 ±(99.9%) 0,118 ms/op [Average]
  (min, avg, max) = (13,989, 14,141, 14,264), stdev = 0,078
  CI (99.9%): [14,023, 14,259] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 2, patternSize = 16)

# Run progress: 53,08% complete, ETA 07:36:26
# Fork: 1 of 1
# Warmup Iteration   1: 7,380 ms/op
# Warmup Iteration   2: 6,555 ms/op
# Warmup Iteration   3: 6,300 ms/op
# Warmup Iteration   4: 6,279 ms/op
# Warmup Iteration   5: 6,294 ms/op
# Warmup Iteration   6: 6,353 ms/op
# Warmup Iteration   7: 6,453 ms/op
# Warmup Iteration   8: 6,439 ms/op
# Warmup Iteration   9: 6,399 ms/op
# Warmup Iteration  10: 6,425 ms/op
Iteration   1: 6,430 ms/op
Iteration   2: 6,400 ms/op
Iteration   3: 6,422 ms/op
Iteration   4: 6,449 ms/op
Iteration   5: 7,181 ms/op
Iteration   6: 6,258 ms/op
Iteration   7: 6,230 ms/op
Iteration   8: 6,260 ms/op
Iteration   9: 6,251 ms/op
Iteration  10: 6,402 ms/op


Result "benchmarkFind":
  6,428 ±(99.9%) 0,420 ms/op [Average]
  (min, avg, max) = (6,230, 6,428, 7,181), stdev = 0,278
  CI (99.9%): [6,008, 6,849] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 2, patternSize = 32)

# Run progress: 53,13% complete, ETA 07:35:53
# Fork: 1 of 1
# Warmup Iteration   1: 3,933 ms/op
# Warmup Iteration   2: 3,651 ms/op
# Warmup Iteration   3: 3,545 ms/op
# Warmup Iteration   4: 3,530 ms/op
# Warmup Iteration   5: 3,541 ms/op
# Warmup Iteration   6: 3,564 ms/op
# Warmup Iteration   7: 3,570 ms/op
# Warmup Iteration   8: 3,589 ms/op
# Warmup Iteration   9: 3,588 ms/op
# Warmup Iteration  10: 3,593 ms/op
Iteration   1: 3,619 ms/op
Iteration   2: 3,599 ms/op
Iteration   3: 3,587 ms/op
Iteration   4: 3,610 ms/op
Iteration   5: 3,594 ms/op
Iteration   6: 3,612 ms/op
Iteration   7: 3,633 ms/op
Iteration   8: 3,647 ms/op
Iteration   9: 3,637 ms/op
Iteration  10: 3,649 ms/op


Result "benchmarkFind":
  3,619 ±(99.9%) 0,033 ms/op [Average]
  (min, avg, max) = (3,587, 3,619, 3,649), stdev = 0,022
  CI (99.9%): [3,586, 3,652] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 2, patternSize = 64)

# Run progress: 53,17% complete, ETA 07:35:21
# Fork: 1 of 1
# Warmup Iteration   1: 2,195 ms/op
# Warmup Iteration   2: 1,884 ms/op
# Warmup Iteration   3: 1,813 ms/op
# Warmup Iteration   4: 1,807 ms/op
# Warmup Iteration   5: 1,820 ms/op
# Warmup Iteration   6: 1,843 ms/op
# Warmup Iteration   7: 1,831 ms/op
# Warmup Iteration   8: 1,844 ms/op
# Warmup Iteration   9: 1,864 ms/op
# Warmup Iteration  10: 1,840 ms/op
Iteration   1: 1,857 ms/op
Iteration   2: 1,851 ms/op
Iteration   3: 1,865 ms/op
Iteration   4: 1,853 ms/op
Iteration   5: 1,854 ms/op
Iteration   6: 1,848 ms/op
Iteration   7: 1,850 ms/op
Iteration   8: 1,826 ms/op
Iteration   9: 1,849 ms/op
Iteration  10: 1,850 ms/op


Result "benchmarkFind":
  1,850 ±(99.9%) 0,015 ms/op [Average]
  (min, avg, max) = (1,826, 1,850, 1,865), stdev = 0,010
  CI (99.9%): [1,836, 1,865] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 2, patternSize = 128)

# Run progress: 53,22% complete, ETA 07:34:49
# Fork: 1 of 1
# Warmup Iteration   1: 1,067 ms/op
# Warmup Iteration   2: 0,932 ms/op
# Warmup Iteration   3: 0,936 ms/op
# Warmup Iteration   4: 0,939 ms/op
# Warmup Iteration   5: 0,940 ms/op
# Warmup Iteration   6: 0,954 ms/op
# Warmup Iteration   7: 0,948 ms/op
# Warmup Iteration   8: 0,950 ms/op
# Warmup Iteration   9: 0,949 ms/op
# Warmup Iteration  10: 0,950 ms/op
Iteration   1: 0,948 ms/op
Iteration   2: 0,947 ms/op
Iteration   3: 1,030 ms/op
Iteration   4: 0,960 ms/op
Iteration   5: 0,932 ms/op
Iteration   6: 0,917 ms/op
Iteration   7: 0,920 ms/op
Iteration   8: 0,924 ms/op
Iteration   9: 0,935 ms/op
Iteration  10: 0,947 ms/op


Result "benchmarkFind":
  0,946 ±(99.9%) 0,049 ms/op [Average]
  (min, avg, max) = (0,917, 0,946, 1,030), stdev = 0,032
  CI (99.9%): [0,897, 0,995] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 2, patternSize = 256)

# Run progress: 53,26% complete, ETA 07:34:16
# Fork: 1 of 1
# Warmup Iteration   1: 0,609 ms/op
# Warmup Iteration   2: 0,545 ms/op
# Warmup Iteration   3: 0,537 ms/op
# Warmup Iteration   4: 0,553 ms/op
# Warmup Iteration   5: 0,534 ms/op
# Warmup Iteration   6: 0,538 ms/op
# Warmup Iteration   7: 0,538 ms/op
# Warmup Iteration   8: 0,535 ms/op
# Warmup Iteration   9: 0,536 ms/op
# Warmup Iteration  10: 0,537 ms/op
Iteration   1: 0,541 ms/op
Iteration   2: 0,543 ms/op
Iteration   3: 0,545 ms/op
Iteration   4: 0,545 ms/op
Iteration   5: 0,544 ms/op
Iteration   6: 0,547 ms/op
Iteration   7: 0,545 ms/op
Iteration   8: 0,546 ms/op
Iteration   9: 0,546 ms/op
Iteration  10: 0,543 ms/op


Result "benchmarkFind":
  0,545 ±(99.9%) 0,003 ms/op [Average]
  (min, avg, max) = (0,541, 0,545, 0,547), stdev = 0,002
  CI (99.9%): [0,542, 0,547] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 8, patternSize = 2)

# Run progress: 53,31% complete, ETA 07:33:44
# Fork: 1 of 1
# Warmup Iteration   1: 3,163 ms/op
# Warmup Iteration   2: 2,705 ms/op
# Warmup Iteration   3: 2,707 ms/op
# Warmup Iteration   4: 2,738 ms/op
# Warmup Iteration   5: 2,702 ms/op
# Warmup Iteration   6: 2,700 ms/op
# Warmup Iteration   7: 2,715 ms/op
# Warmup Iteration   8: 2,722 ms/op
# Warmup Iteration   9: 2,734 ms/op
# Warmup Iteration  10: 2,723 ms/op
Iteration   1: 2,741 ms/op
Iteration   2: 2,740 ms/op
Iteration   3: 2,751 ms/op
Iteration   4: 2,733 ms/op
Iteration   5: 2,730 ms/op
Iteration   6: 2,741 ms/op
Iteration   7: 2,727 ms/op
Iteration   8: 2,721 ms/op
Iteration   9: 2,730 ms/op
Iteration  10: 2,725 ms/op


Result "benchmarkFind":
  2,734 ±(99.9%) 0,014 ms/op [Average]
  (min, avg, max) = (2,721, 2,734, 2,751), stdev = 0,009
  CI (99.9%): [2,720, 2,748] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 8, patternSize = 4)

# Run progress: 53,35% complete, ETA 07:33:12
# Fork: 1 of 1
# Warmup Iteration   1: 112,506 ms/op
# Warmup Iteration   2: 89,996 ms/op
# Warmup Iteration   3: 90,054 ms/op
# Warmup Iteration   4: 88,030 ms/op
# Warmup Iteration   5: 87,887 ms/op
# Warmup Iteration   6: 88,729 ms/op
# Warmup Iteration   7: 88,510 ms/op
# Warmup Iteration   8: 87,483 ms/op
# Warmup Iteration   9: 88,752 ms/op
# Warmup Iteration  10: 87,802 ms/op
Iteration   1: 100,010 ms/op
Iteration   2: 87,540 ms/op
Iteration   3: 88,067 ms/op
Iteration   4: 89,324 ms/op
Iteration   5: 88,194 ms/op
Iteration   6: 87,686 ms/op
Iteration   7: 87,887 ms/op
Iteration   8: 88,158 ms/op
Iteration   9: 87,198 ms/op
Iteration  10: 87,572 ms/op


Result "benchmarkFind":
  89,164 ±(99.9%) 5,826 ms/op [Average]
  (min, avg, max) = (87,198, 89,164, 100,010), stdev = 3,854
  CI (99.9%): [83,337, 94,990] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 8, patternSize = 8)

# Run progress: 53,40% complete, ETA 07:32:41
# Fork: 1 of 1
# Warmup Iteration   1: 25,151 ms/op
# Warmup Iteration   2: 21,571 ms/op
# Warmup Iteration   3: 21,087 ms/op
# Warmup Iteration   4: 21,092 ms/op
# Warmup Iteration   5: 21,054 ms/op
# Warmup Iteration   6: 21,004 ms/op
# Warmup Iteration   7: 20,846 ms/op
# Warmup Iteration   8: 20,948 ms/op
# Warmup Iteration   9: 21,312 ms/op
# Warmup Iteration  10: 21,199 ms/op
Iteration   1: 21,331 ms/op
Iteration   2: 20,847 ms/op
Iteration   3: 20,859 ms/op
Iteration   4: 21,225 ms/op
Iteration   5: 20,947 ms/op
Iteration   6: 21,059 ms/op
Iteration   7: 21,060 ms/op
Iteration   8: 21,013 ms/op
Iteration   9: 21,280 ms/op
Iteration  10: 20,960 ms/op


Result "benchmarkFind":
  21,058 ±(99.9%) 0,257 ms/op [Average]
  (min, avg, max) = (20,847, 21,058, 21,331), stdev = 0,170
  CI (99.9%): [20,801, 21,315] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 8, patternSize = 16)

# Run progress: 53,45% complete, ETA 07:32:09
# Fork: 1 of 1
# Warmup Iteration   1: 9,773 ms/op
# Warmup Iteration   2: 8,758 ms/op
# Warmup Iteration   3: 8,392 ms/op
# Warmup Iteration   4: 8,450 ms/op
# Warmup Iteration   5: 8,389 ms/op
# Warmup Iteration   6: 8,445 ms/op
# Warmup Iteration   7: 8,530 ms/op
# Warmup Iteration   8: 8,496 ms/op
# Warmup Iteration   9: 8,560 ms/op
# Warmup Iteration  10: 8,492 ms/op
Iteration   1: 8,527 ms/op
Iteration   2: 8,517 ms/op
Iteration   3: 8,507 ms/op
Iteration   4: 8,511 ms/op
Iteration   5: 8,502 ms/op
Iteration   6: 8,500 ms/op
Iteration   7: 8,471 ms/op
Iteration   8: 8,510 ms/op
Iteration   9: 8,519 ms/op
Iteration  10: 8,498 ms/op


Result "benchmarkFind":
  8,506 ±(99.9%) 0,023 ms/op [Average]
  (min, avg, max) = (8,471, 8,506, 8,527), stdev = 0,015
  CI (99.9%): [8,483, 8,529] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 8, patternSize = 32)

# Run progress: 53,49% complete, ETA 07:31:36
# Fork: 1 of 1
# Warmup Iteration   1: 4,534 ms/op
# Warmup Iteration   2: 4,099 ms/op
# Warmup Iteration   3: 3,966 ms/op
# Warmup Iteration   4: 3,987 ms/op
# Warmup Iteration   5: 4,008 ms/op
# Warmup Iteration   6: 3,972 ms/op
# Warmup Iteration   7: 4,000 ms/op
# Warmup Iteration   8: 4,018 ms/op
# Warmup Iteration   9: 4,499 ms/op
# Warmup Iteration  10: 4,021 ms/op
Iteration   1: 4,010 ms/op
Iteration   2: 4,027 ms/op
Iteration   3: 4,048 ms/op
Iteration   4: 4,080 ms/op
Iteration   5: 3,969 ms/op
Iteration   6: 3,992 ms/op
Iteration   7: 4,042 ms/op
Iteration   8: 4,032 ms/op
Iteration   9: 4,029 ms/op
Iteration  10: 4,015 ms/op


Result "benchmarkFind":
  4,024 ±(99.9%) 0,046 ms/op [Average]
  (min, avg, max) = (3,969, 4,024, 4,080), stdev = 0,031
  CI (99.9%): [3,978, 4,071] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 8, patternSize = 64)

# Run progress: 53,54% complete, ETA 07:31:04
# Fork: 1 of 1
# Warmup Iteration   1: 2,504 ms/op
# Warmup Iteration   2: 2,130 ms/op
# Warmup Iteration   3: 2,131 ms/op
# Warmup Iteration   4: 2,124 ms/op
# Warmup Iteration   5: 2,133 ms/op
# Warmup Iteration   6: 2,129 ms/op
# Warmup Iteration   7: 2,156 ms/op
# Warmup Iteration   8: 2,207 ms/op
# Warmup Iteration   9: 2,197 ms/op
# Warmup Iteration  10: 2,189 ms/op
Iteration   1: 2,194 ms/op
Iteration   2: 2,209 ms/op
Iteration   3: 2,157 ms/op
Iteration   4: 2,197 ms/op
Iteration   5: 2,194 ms/op
Iteration   6: 2,198 ms/op
Iteration   7: 2,234 ms/op
Iteration   8: 2,418 ms/op
Iteration   9: 2,184 ms/op
Iteration  10: 2,224 ms/op


Result "benchmarkFind":
  2,221 ±(99.9%) 0,109 ms/op [Average]
  (min, avg, max) = (2,157, 2,221, 2,418), stdev = 0,072
  CI (99.9%): [2,112, 2,330] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 8, patternSize = 128)

# Run progress: 53,58% complete, ETA 07:30:32
# Fork: 1 of 1
# Warmup Iteration   1: 1,379 ms/op
# Warmup Iteration   2: 1,285 ms/op
# Warmup Iteration   3: 1,220 ms/op
# Warmup Iteration   4: 1,226 ms/op
# Warmup Iteration   5: 1,268 ms/op
# Warmup Iteration   6: 1,254 ms/op
# Warmup Iteration   7: 1,243 ms/op
# Warmup Iteration   8: 1,230 ms/op
# Warmup Iteration   9: 1,226 ms/op
# Warmup Iteration  10: 1,237 ms/op
Iteration   1: 1,238 ms/op
Iteration   2: 1,247 ms/op
Iteration   3: 1,254 ms/op
Iteration   4: 1,253 ms/op
Iteration   5: 1,263 ms/op
Iteration   6: 1,248 ms/op
Iteration   7: 1,266 ms/op
Iteration   8: 1,261 ms/op
Iteration   9: 1,260 ms/op
Iteration  10: 1,259 ms/op


Result "benchmarkFind":
  1,255 ±(99.9%) 0,013 ms/op [Average]
  (min, avg, max) = (1,238, 1,255, 1,266), stdev = 0,009
  CI (99.9%): [1,242, 1,268] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 8, patternSize = 256)

# Run progress: 53,63% complete, ETA 07:30:00
# Fork: 1 of 1
# Warmup Iteration   1: 0,841 ms/op
# Warmup Iteration   2: 0,778 ms/op
# Warmup Iteration   3: 0,768 ms/op
# Warmup Iteration   4: 0,777 ms/op
# Warmup Iteration   5: 0,767 ms/op
# Warmup Iteration   6: 0,767 ms/op
# Warmup Iteration   7: 0,851 ms/op
# Warmup Iteration   8: 0,774 ms/op
# Warmup Iteration   9: 0,778 ms/op
# Warmup Iteration  10: 0,780 ms/op
Iteration   1: 0,781 ms/op
Iteration   2: 0,783 ms/op
Iteration   3: 0,793 ms/op
Iteration   4: 0,794 ms/op
Iteration   5: 0,785 ms/op
Iteration   6: 0,787 ms/op
Iteration   7: 0,777 ms/op
Iteration   8: 0,781 ms/op
Iteration   9: 0,782 ms/op
Iteration  10: 0,786 ms/op


Result "benchmarkFind":
  0,785 ±(99.9%) 0,008 ms/op [Average]
  (min, avg, max) = (0,777, 0,785, 0,794), stdev = 0,006
  CI (99.9%): [0,777, 0,793] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 32, patternSize = 2)

# Run progress: 53,68% complete, ETA 07:29:28
# Fork: 1 of 1
# Warmup Iteration   1: 22,237 ms/op
# Warmup Iteration   2: 19,688 ms/op
# Warmup Iteration   3: 19,550 ms/op
# Warmup Iteration   4: 19,694 ms/op
# Warmup Iteration   5: 19,585 ms/op
# Warmup Iteration   6: 20,157 ms/op
# Warmup Iteration   7: 19,711 ms/op
# Warmup Iteration   8: 19,655 ms/op
# Warmup Iteration   9: 19,566 ms/op
# Warmup Iteration  10: 19,763 ms/op
Iteration   1: 19,851 ms/op
Iteration   2: 19,635 ms/op
Iteration   3: 19,753 ms/op
Iteration   4: 19,602 ms/op
Iteration   5: 19,628 ms/op
Iteration   6: 19,829 ms/op
Iteration   7: 19,736 ms/op
Iteration   8: 19,743 ms/op
Iteration   9: 19,680 ms/op
Iteration  10: 19,783 ms/op


Result "benchmarkFind":
  19,724 ±(99.9%) 0,129 ms/op [Average]
  (min, avg, max) = (19,602, 19,724, 19,851), stdev = 0,086
  CI (99.9%): [19,595, 19,854] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 32, patternSize = 4)

# Run progress: 53,72% complete, ETA 07:28:56
# Fork: 1 of 1
# Warmup Iteration   1: 820,567 ms/op
# Warmup Iteration   2: 748,259 ms/op
# Warmup Iteration   3: 722,835 ms/op
# Warmup Iteration   4: 708,255 ms/op
# Warmup Iteration   5: 714,631 ms/op
# Warmup Iteration   6: 722,525 ms/op
# Warmup Iteration   7: 710,837 ms/op
# Warmup Iteration   8: 714,062 ms/op
# Warmup Iteration   9: 711,483 ms/op
# Warmup Iteration  10: 712,751 ms/op
Iteration   1: 723,985 ms/op
Iteration   2: 715,508 ms/op
Iteration   3: 713,350 ms/op
Iteration   4: 713,575 ms/op
Iteration   5: 712,027 ms/op
Iteration   6: 716,996 ms/op
Iteration   7: 713,607 ms/op
Iteration   8: 760,830 ms/op
Iteration   9: 717,684 ms/op
Iteration  10: 709,146 ms/op


Result "benchmarkFind":
  719,671 ±(99.9%) 22,673 ms/op [Average]
  (min, avg, max) = (709,146, 719,671, 760,830), stdev = 14,997
  CI (99.9%): [696,997, 742,344] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 32, patternSize = 8)

# Run progress: 53,77% complete, ETA 07:28:32
# Fork: 1 of 1
# Warmup Iteration   1: 38,712 ms/op
# Warmup Iteration   2: 31,357 ms/op
# Warmup Iteration   3: 31,362 ms/op
# Warmup Iteration   4: 31,278 ms/op
# Warmup Iteration   5: 31,227 ms/op
# Warmup Iteration   6: 31,567 ms/op
# Warmup Iteration   7: 31,395 ms/op
# Warmup Iteration   8: 31,626 ms/op
# Warmup Iteration   9: 31,293 ms/op
# Warmup Iteration  10: 31,369 ms/op
Iteration   1: 31,308 ms/op
Iteration   2: 31,325 ms/op
Iteration   3: 31,435 ms/op
Iteration   4: 31,277 ms/op
Iteration   5: 31,313 ms/op
Iteration   6: 31,505 ms/op
Iteration   7: 31,259 ms/op
Iteration   8: 31,105 ms/op
Iteration   9: 31,268 ms/op
Iteration  10: 31,671 ms/op


Result "benchmarkFind":
  31,347 ±(99.9%) 0,236 ms/op [Average]
  (min, avg, max) = (31,105, 31,347, 31,671), stdev = 0,156
  CI (99.9%): [31,111, 31,582] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 32, patternSize = 16)

# Run progress: 53,81% complete, ETA 07:28:00
# Fork: 1 of 1
# Warmup Iteration   1: 12,122 ms/op
# Warmup Iteration   2: 10,653 ms/op
# Warmup Iteration   3: 10,644 ms/op
# Warmup Iteration   4: 10,740 ms/op
# Warmup Iteration   5: 10,707 ms/op
# Warmup Iteration   6: 10,696 ms/op
# Warmup Iteration   7: 10,791 ms/op
# Warmup Iteration   8: 10,803 ms/op
# Warmup Iteration   9: 10,822 ms/op
# Warmup Iteration  10: 11,038 ms/op
Iteration   1: 10,745 ms/op
Iteration   2: 10,857 ms/op
Iteration   3: 10,789 ms/op
Iteration   4: 10,801 ms/op
Iteration   5: 10,846 ms/op
Iteration   6: 10,743 ms/op
Iteration   7: 10,763 ms/op
Iteration   8: 10,846 ms/op
Iteration   9: 10,898 ms/op
Iteration  10: 10,814 ms/op


Result "benchmarkFind":
  10,810 ±(99.9%) 0,078 ms/op [Average]
  (min, avg, max) = (10,743, 10,810, 10,898), stdev = 0,052
  CI (99.9%): [10,732, 10,888] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 32, patternSize = 32)

# Run progress: 53,86% complete, ETA 07:27:28
# Fork: 1 of 1
# Warmup Iteration   1: 6,123 ms/op
# Warmup Iteration   2: 5,218 ms/op
# Warmup Iteration   3: 5,145 ms/op
# Warmup Iteration   4: 5,160 ms/op
# Warmup Iteration   5: 5,172 ms/op
# Warmup Iteration   6: 5,154 ms/op
# Warmup Iteration   7: 5,229 ms/op
# Warmup Iteration   8: 5,237 ms/op
# Warmup Iteration   9: 5,203 ms/op
# Warmup Iteration  10: 5,213 ms/op
Iteration   1: 5,236 ms/op
Iteration   2: 5,198 ms/op
Iteration   3: 5,219 ms/op
Iteration   4: 5,270 ms/op
Iteration   5: 5,591 ms/op
Iteration   6: 5,106 ms/op
Iteration   7: 5,059 ms/op
Iteration   8: 5,100 ms/op
Iteration   9: 5,092 ms/op
Iteration  10: 5,118 ms/op


Result "benchmarkFind":
  5,199 ±(99.9%) 0,234 ms/op [Average]
  (min, avg, max) = (5,059, 5,199, 5,591), stdev = 0,155
  CI (99.9%): [4,964, 5,433] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 32, patternSize = 64)

# Run progress: 53,91% complete, ETA 07:26:56
# Fork: 1 of 1
# Warmup Iteration   1: 3,592 ms/op
# Warmup Iteration   2: 3,054 ms/op
# Warmup Iteration   3: 3,031 ms/op
# Warmup Iteration   4: 3,057 ms/op
# Warmup Iteration   5: 3,078 ms/op
# Warmup Iteration   6: 3,084 ms/op
# Warmup Iteration   7: 3,085 ms/op
# Warmup Iteration   8: 3,118 ms/op
# Warmup Iteration   9: 3,085 ms/op
# Warmup Iteration  10: 3,088 ms/op
Iteration   1: 3,088 ms/op
Iteration   2: 3,064 ms/op
Iteration   3: 3,094 ms/op
Iteration   4: 3,086 ms/op
Iteration   5: 3,092 ms/op
Iteration   6: 3,088 ms/op
Iteration   7: 3,078 ms/op
Iteration   8: 3,062 ms/op
Iteration   9: 3,083 ms/op
Iteration  10: 3,088 ms/op


Result "benchmarkFind":
  3,082 ±(99.9%) 0,017 ms/op [Average]
  (min, avg, max) = (3,062, 3,082, 3,094), stdev = 0,011
  CI (99.9%): [3,065, 3,099] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 32, patternSize = 128)

# Run progress: 53,95% complete, ETA 07:26:24
# Fork: 1 of 1
# Warmup Iteration   1: 2,167 ms/op
# Warmup Iteration   2: 1,989 ms/op
# Warmup Iteration   3: 1,899 ms/op
# Warmup Iteration   4: 1,890 ms/op
# Warmup Iteration   5: 1,879 ms/op
# Warmup Iteration   6: 1,878 ms/op
# Warmup Iteration   7: 1,878 ms/op
# Warmup Iteration   8: 1,922 ms/op
# Warmup Iteration   9: 1,905 ms/op
# Warmup Iteration  10: 1,888 ms/op
Iteration   1: 1,900 ms/op
Iteration   2: 1,893 ms/op
Iteration   3: 1,919 ms/op
Iteration   4: 1,911 ms/op
Iteration   5: 1,921 ms/op
Iteration   6: 1,928 ms/op
Iteration   7: 1,922 ms/op
Iteration   8: 1,916 ms/op
Iteration   9: 1,931 ms/op
Iteration  10: 1,924 ms/op


Result "benchmarkFind":
  1,916 ±(99.9%) 0,018 ms/op [Average]
  (min, avg, max) = (1,893, 1,916, 1,931), stdev = 0,012
  CI (99.9%): [1,898, 1,935] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 32, patternSize = 256)

# Run progress: 54,00% complete, ETA 07:25:52
# Fork: 1 of 1
# Warmup Iteration   1: 1,480 ms/op
# Warmup Iteration   2: 1,340 ms/op
# Warmup Iteration   3: 1,289 ms/op
# Warmup Iteration   4: 1,279 ms/op
# Warmup Iteration   5: 1,287 ms/op
# Warmup Iteration   6: 1,281 ms/op
# Warmup Iteration   7: 1,287 ms/op
# Warmup Iteration   8: 1,275 ms/op
# Warmup Iteration   9: 1,278 ms/op
# Warmup Iteration  10: 1,285 ms/op
Iteration   1: 1,282 ms/op
Iteration   2: 1,282 ms/op
Iteration   3: 1,403 ms/op
Iteration   4: 1,281 ms/op
Iteration   5: 1,287 ms/op
Iteration   6: 1,288 ms/op
Iteration   7: 1,299 ms/op
Iteration   8: 1,305 ms/op
Iteration   9: 1,305 ms/op
Iteration  10: 1,296 ms/op


Result "benchmarkFind":
  1,303 ±(99.9%) 0,055 ms/op [Average]
  (min, avg, max) = (1,281, 1,303, 1,403), stdev = 0,036
  CI (99.9%): [1,248, 1,358] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 128, patternSize = 2)

# Run progress: 54,04% complete, ETA 07:25:20
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

com.almondtools.stringbench.SampleNotQualifiedException
	at com.almondtools.stringbench.MultiPatternMatcherBenchmark.setup(MultiPatternMatcherBenchmark.java:36)
	at com.almondtools.stringbench.generated.SCSetBackwardOracleMatchingBenchmark_benchmarkFind_jmhTest._jmh_tryInit_f_scsetbackwardoraclematchingbenchmark0_0(SCSetBackwardOracleMatchingBenchmark_benchmarkFind_jmhTest.java:425)
	at com.almondtools.stringbench.generated.SCSetBackwardOracleMatchingBenchmark_benchmarkFind_jmhTest.benchmarkFind_AverageTime(SCSetBackwardOracleMatchingBenchmark_benchmarkFind_jmhTest.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:430)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:412)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)




# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 128, patternSize = 4)

# Run progress: 54,09% complete, ETA 07:24:32
# Fork: 1 of 1
# Warmup Iteration   1: 8169,533 ms/op
# Warmup Iteration   2: 8180,018 ms/op
# Warmup Iteration   3: 7902,381 ms/op
# Warmup Iteration   4: 7999,373 ms/op
# Warmup Iteration   5: 7927,466 ms/op
# Warmup Iteration   6: 7997,989 ms/op
# Warmup Iteration   7: 8098,709 ms/op
# Warmup Iteration   8: 7995,151 ms/op
# Warmup Iteration   9: 8089,293 ms/op
# Warmup Iteration  10: 7957,115 ms/op
Iteration   1: 7943,681 ms/op
Iteration   2: 7997,699 ms/op
Iteration   3: 8143,537 ms/op
Iteration   4: 8085,852 ms/op
Iteration   5: 7974,927 ms/op
Iteration   6: 7979,164 ms/op
Iteration   7: 7940,448 ms/op
Iteration   8: 8067,442 ms/op
Iteration   9: 7935,304 ms/op
Iteration  10: 7985,981 ms/op


Result "benchmarkFind":
  8005,403 ±(99.9%) 106,187 ms/op [Average]
  (min, avg, max) = (7935,304, 8005,403, 8143,537), stdev = 70,236
  CI (99.9%): [7899,216, 8111,591] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 128, patternSize = 8)

# Run progress: 54,14% complete, ETA 07:25:59
# Fork: 1 of 1
# Warmup Iteration   1: 65,733 ms/op
# Warmup Iteration   2: 53,677 ms/op
# Warmup Iteration   3: 53,469 ms/op
# Warmup Iteration   4: 52,651 ms/op
# Warmup Iteration   5: 52,427 ms/op
# Warmup Iteration   6: 52,207 ms/op
# Warmup Iteration   7: 53,674 ms/op
# Warmup Iteration   8: 53,582 ms/op
# Warmup Iteration   9: 53,168 ms/op
# Warmup Iteration  10: 59,774 ms/op
Iteration   1: 52,959 ms/op
Iteration   2: 52,765 ms/op
Iteration   3: 53,199 ms/op
Iteration   4: 53,167 ms/op
Iteration   5: 54,927 ms/op
Iteration   6: 53,427 ms/op
Iteration   7: 53,452 ms/op
Iteration   8: 53,129 ms/op
Iteration   9: 53,204 ms/op
Iteration  10: 52,837 ms/op


Result "benchmarkFind":
  53,307 ±(99.9%) 0,925 ms/op [Average]
  (min, avg, max) = (52,765, 53,307, 54,927), stdev = 0,612
  CI (99.9%): [52,382, 54,232] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 128, patternSize = 16)

# Run progress: 54,18% complete, ETA 07:25:27
# Fork: 1 of 1
# Warmup Iteration   1: 18,892 ms/op
# Warmup Iteration   2: 16,161 ms/op
# Warmup Iteration   3: 15,190 ms/op
# Warmup Iteration   4: 15,273 ms/op
# Warmup Iteration   5: 15,113 ms/op
# Warmup Iteration   6: 15,217 ms/op
# Warmup Iteration   7: 15,275 ms/op
# Warmup Iteration   8: 15,144 ms/op
# Warmup Iteration   9: 15,200 ms/op
# Warmup Iteration  10: 15,138 ms/op
Iteration   1: 15,257 ms/op
Iteration   2: 15,472 ms/op
Iteration   3: 15,120 ms/op
Iteration   4: 15,043 ms/op
Iteration   5: 15,203 ms/op
Iteration   6: 15,366 ms/op
Iteration   7: 15,370 ms/op
Iteration   8: 16,831 ms/op
Iteration   9: 15,313 ms/op
Iteration  10: 15,266 ms/op


Result "benchmarkFind":
  15,424 ±(99.9%) 0,771 ms/op [Average]
  (min, avg, max) = (15,043, 15,424, 16,831), stdev = 0,510
  CI (99.9%): [14,653, 16,195] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 128, patternSize = 32)

# Run progress: 54,23% complete, ETA 07:24:55
# Fork: 1 of 1
# Warmup Iteration   1: 10,056 ms/op
# Warmup Iteration   2: 9,100 ms/op
# Warmup Iteration   3: 8,736 ms/op
# Warmup Iteration   4: 8,707 ms/op
# Warmup Iteration   5: 8,699 ms/op
# Warmup Iteration   6: 8,724 ms/op
# Warmup Iteration   7: 8,728 ms/op
# Warmup Iteration   8: 8,761 ms/op
# Warmup Iteration   9: 8,654 ms/op
# Warmup Iteration  10: 8,709 ms/op
Iteration   1: 8,704 ms/op
Iteration   2: 8,700 ms/op
Iteration   3: 8,750 ms/op
Iteration   4: 8,772 ms/op
Iteration   5: 8,793 ms/op
Iteration   6: 8,827 ms/op
Iteration   7: 8,780 ms/op
Iteration   8: 8,815 ms/op
Iteration   9: 8,821 ms/op
Iteration  10: 8,813 ms/op


Result "benchmarkFind":
  8,777 ±(99.9%) 0,070 ms/op [Average]
  (min, avg, max) = (8,700, 8,777, 8,827), stdev = 0,047
  CI (99.9%): [8,707, 8,848] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 128, patternSize = 64)

# Run progress: 54,27% complete, ETA 07:24:23
# Fork: 1 of 1
# Warmup Iteration   1: 6,273 ms/op
# Warmup Iteration   2: 5,085 ms/op
# Warmup Iteration   3: 4,970 ms/op
# Warmup Iteration   4: 5,092 ms/op
# Warmup Iteration   5: 5,070 ms/op
# Warmup Iteration   6: 5,023 ms/op
# Warmup Iteration   7: 5,084 ms/op
# Warmup Iteration   8: 5,563 ms/op
# Warmup Iteration   9: 5,015 ms/op
# Warmup Iteration  10: 5,049 ms/op
Iteration   1: 5,083 ms/op
Iteration   2: 5,067 ms/op
Iteration   3: 5,146 ms/op
Iteration   4: 5,138 ms/op
Iteration   5: 5,141 ms/op
Iteration   6: 5,126 ms/op
Iteration   7: 5,144 ms/op
Iteration   8: 5,147 ms/op
Iteration   9: 5,126 ms/op
Iteration  10: 5,157 ms/op


Result "benchmarkFind":
  5,127 ±(99.9%) 0,044 ms/op [Average]
  (min, avg, max) = (5,067, 5,127, 5,157), stdev = 0,029
  CI (99.9%): [5,083, 5,172] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 128, patternSize = 128)

# Run progress: 54,32% complete, ETA 07:23:51
# Fork: 1 of 1
# Warmup Iteration   1: 4,101 ms/op
# Warmup Iteration   2: 3,566 ms/op
# Warmup Iteration   3: 3,528 ms/op
# Warmup Iteration   4: 3,463 ms/op
# Warmup Iteration   5: 3,472 ms/op
# Warmup Iteration   6: 3,479 ms/op
# Warmup Iteration   7: 3,491 ms/op
# Warmup Iteration   8: 3,484 ms/op
# Warmup Iteration   9: 3,470 ms/op
# Warmup Iteration  10: 3,521 ms/op
Iteration   1: 3,499 ms/op
Iteration   2: 3,523 ms/op
Iteration   3: 3,506 ms/op
Iteration   4: 3,524 ms/op
Iteration   5: 3,519 ms/op
Iteration   6: 3,539 ms/op
Iteration   7: 3,547 ms/op
Iteration   8: 3,543 ms/op
Iteration   9: 3,558 ms/op
Iteration  10: 3,548 ms/op


Result "benchmarkFind":
  3,531 ±(99.9%) 0,029 ms/op [Average]
  (min, avg, max) = (3,499, 3,531, 3,558), stdev = 0,019
  CI (99.9%): [3,501, 3,560] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 128, patternSize = 256)

# Run progress: 54,37% complete, ETA 07:23:19
# Fork: 1 of 1
# Warmup Iteration   1: 3,487 ms/op
# Warmup Iteration   2: 3,073 ms/op
# Warmup Iteration   3: 3,019 ms/op
# Warmup Iteration   4: 3,046 ms/op
# Warmup Iteration   5: 2,938 ms/op
# Warmup Iteration   6: 2,949 ms/op
# Warmup Iteration   7: 3,004 ms/op
# Warmup Iteration   8: 2,951 ms/op
# Warmup Iteration   9: 2,955 ms/op
# Warmup Iteration  10: 2,946 ms/op
Iteration   1: 2,941 ms/op
Iteration   2: 2,945 ms/op
Iteration   3: 2,943 ms/op
Iteration   4: 2,946 ms/op
Iteration   5: 2,940 ms/op
Iteration   6: 2,939 ms/op
Iteration   7: 2,944 ms/op
Iteration   8: 2,926 ms/op
Iteration   9: 2,936 ms/op
Iteration  10: 2,934 ms/op


Result "benchmarkFind":
  2,939 ±(99.9%) 0,009 ms/op [Average]
  (min, avg, max) = (2,926, 2,939, 2,946), stdev = 0,006
  CI (99.9%): [2,930, 2,949] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 2, patternSize = 2)

# Run progress: 54,41% complete, ETA 07:22:47
# Fork: 1 of 1
# Warmup Iteration   1: 3,108 ms/op
# Warmup Iteration   2: 2,286 ms/op
# Warmup Iteration   3: 2,247 ms/op
# Warmup Iteration   4: 2,249 ms/op
# Warmup Iteration   5: 2,258 ms/op
# Warmup Iteration   6: 2,574 ms/op
# Warmup Iteration   7: 2,264 ms/op
# Warmup Iteration   8: 2,270 ms/op
# Warmup Iteration   9: 2,256 ms/op
# Warmup Iteration  10: 2,256 ms/op
Iteration   1: 2,274 ms/op
Iteration   2: 2,299 ms/op
Iteration   3: 2,296 ms/op
Iteration   4: 2,300 ms/op
Iteration   5: 2,280 ms/op
Iteration   6: 2,307 ms/op
Iteration   7: 2,285 ms/op
Iteration   8: 2,288 ms/op
Iteration   9: 2,286 ms/op
Iteration  10: 2,293 ms/op


Result "benchmarkFind":
  2,291 ±(99.9%) 0,015 ms/op [Average]
  (min, avg, max) = (2,274, 2,291, 2,307), stdev = 0,010
  CI (99.9%): [2,276, 2,306] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 2, patternSize = 4)

# Run progress: 54,46% complete, ETA 07:22:15
# Fork: 1 of 1
# Warmup Iteration   1: 28,304 ms/op
# Warmup Iteration   2: 23,393 ms/op
# Warmup Iteration   3: 22,560 ms/op
# Warmup Iteration   4: 22,447 ms/op
# Warmup Iteration   5: 22,320 ms/op
# Warmup Iteration   6: 22,972 ms/op
# Warmup Iteration   7: 22,850 ms/op
# Warmup Iteration   8: 22,633 ms/op
# Warmup Iteration   9: 22,888 ms/op
# Warmup Iteration  10: 22,897 ms/op
Iteration   1: 22,898 ms/op
Iteration   2: 22,978 ms/op
Iteration   3: 22,787 ms/op
Iteration   4: 22,885 ms/op
Iteration   5: 22,619 ms/op
Iteration   6: 22,839 ms/op
Iteration   7: 22,983 ms/op
Iteration   8: 23,048 ms/op
Iteration   9: 22,890 ms/op
Iteration  10: 23,075 ms/op


Result "benchmarkFind":
  22,900 ±(99.9%) 0,202 ms/op [Average]
  (min, avg, max) = (22,619, 22,900, 23,075), stdev = 0,134
  CI (99.9%): [22,698, 23,103] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 2, patternSize = 8)

# Run progress: 54,50% complete, ETA 07:21:43
# Fork: 1 of 1
# Warmup Iteration   1: 12,067 ms/op
# Warmup Iteration   2: 10,439 ms/op
# Warmup Iteration   3: 10,195 ms/op
# Warmup Iteration   4: 10,279 ms/op
# Warmup Iteration   5: 10,284 ms/op
# Warmup Iteration   6: 10,432 ms/op
# Warmup Iteration   7: 10,420 ms/op
# Warmup Iteration   8: 10,363 ms/op
# Warmup Iteration   9: 10,395 ms/op
# Warmup Iteration  10: 10,348 ms/op
Iteration   1: 10,406 ms/op
Iteration   2: 10,475 ms/op
Iteration   3: 10,321 ms/op
Iteration   4: 10,382 ms/op
Iteration   5: 10,329 ms/op
Iteration   6: 10,329 ms/op
Iteration   7: 10,336 ms/op
Iteration   8: 10,349 ms/op
Iteration   9: 10,365 ms/op
Iteration  10: 10,415 ms/op


Result "benchmarkFind":
  10,371 ±(99.9%) 0,075 ms/op [Average]
  (min, avg, max) = (10,321, 10,371, 10,475), stdev = 0,049
  CI (99.9%): [10,296, 10,445] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 2, patternSize = 16)

# Run progress: 54,55% complete, ETA 07:21:11
# Fork: 1 of 1
# Warmup Iteration   1: 6,438 ms/op
# Warmup Iteration   2: 5,633 ms/op
# Warmup Iteration   3: 5,455 ms/op
# Warmup Iteration   4: 6,149 ms/op
# Warmup Iteration   5: 5,514 ms/op
# Warmup Iteration   6: 5,512 ms/op
# Warmup Iteration   7: 5,569 ms/op
# Warmup Iteration   8: 5,518 ms/op
# Warmup Iteration   9: 5,595 ms/op
# Warmup Iteration  10: 5,566 ms/op
Iteration   1: 5,571 ms/op
Iteration   2: 5,595 ms/op
Iteration   3: 5,586 ms/op
Iteration   4: 5,554 ms/op
Iteration   5: 5,551 ms/op
Iteration   6: 5,597 ms/op
Iteration   7: 5,573 ms/op
Iteration   8: 5,608 ms/op
Iteration   9: 5,619 ms/op
Iteration  10: 5,586 ms/op


Result "benchmarkFind":
  5,584 ±(99.9%) 0,033 ms/op [Average]
  (min, avg, max) = (5,551, 5,584, 5,619), stdev = 0,022
  CI (99.9%): [5,551, 5,617] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 2, patternSize = 32)

# Run progress: 54,60% complete, ETA 07:20:40
# Fork: 1 of 1
# Warmup Iteration   1: 3,161 ms/op
# Warmup Iteration   2: 2,799 ms/op
# Warmup Iteration   3: 2,726 ms/op
# Warmup Iteration   4: 2,727 ms/op
# Warmup Iteration   5: 2,739 ms/op
# Warmup Iteration   6: 2,735 ms/op
# Warmup Iteration   7: 2,747 ms/op
# Warmup Iteration   8: 2,745 ms/op
# Warmup Iteration   9: 2,762 ms/op
# Warmup Iteration  10: 2,786 ms/op
Iteration   1: 2,749 ms/op
Iteration   2: 2,753 ms/op
Iteration   3: 2,758 ms/op
Iteration   4: 2,762 ms/op
Iteration   5: 2,790 ms/op
Iteration   6: 2,745 ms/op
Iteration   7: 2,756 ms/op
Iteration   8: 2,750 ms/op
Iteration   9: 2,783 ms/op
Iteration  10: 2,733 ms/op


Result "benchmarkFind":
  2,758 ±(99.9%) 0,026 ms/op [Average]
  (min, avg, max) = (2,733, 2,758, 2,790), stdev = 0,017
  CI (99.9%): [2,732, 2,784] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 2, patternSize = 64)

# Run progress: 54,64% complete, ETA 07:20:08
# Fork: 1 of 1
# Warmup Iteration   1: 1,600 ms/op
# Warmup Iteration   2: 1,453 ms/op
# Warmup Iteration   3: 1,408 ms/op
# Warmup Iteration   4: 1,411 ms/op
# Warmup Iteration   5: 1,417 ms/op
# Warmup Iteration   6: 1,427 ms/op
# Warmup Iteration   7: 1,431 ms/op
# Warmup Iteration   8: 1,457 ms/op
# Warmup Iteration   9: 1,431 ms/op
# Warmup Iteration  10: 1,433 ms/op
Iteration   1: 1,437 ms/op
Iteration   2: 1,419 ms/op
Iteration   3: 1,434 ms/op
Iteration   4: 1,438 ms/op
Iteration   5: 1,439 ms/op
Iteration   6: 1,434 ms/op
Iteration   7: 1,430 ms/op
Iteration   8: 1,417 ms/op
Iteration   9: 1,430 ms/op
Iteration  10: 1,428 ms/op


Result "benchmarkFind":
  1,431 ±(99.9%) 0,011 ms/op [Average]
  (min, avg, max) = (1,417, 1,431, 1,439), stdev = 0,007
  CI (99.9%): [1,419, 1,442] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 2, patternSize = 128)

# Run progress: 54,69% complete, ETA 07:19:36
# Fork: 1 of 1
# Warmup Iteration   1: 0,921 ms/op
# Warmup Iteration   2: 0,856 ms/op
# Warmup Iteration   3: 0,821 ms/op
# Warmup Iteration   4: 0,779 ms/op
# Warmup Iteration   5: 0,794 ms/op
# Warmup Iteration   6: 0,786 ms/op
# Warmup Iteration   7: 0,784 ms/op
# Warmup Iteration   8: 0,791 ms/op
# Warmup Iteration   9: 0,795 ms/op
# Warmup Iteration  10: 0,799 ms/op
Iteration   1: 0,793 ms/op
Iteration   2: 0,800 ms/op
Iteration   3: 0,794 ms/op
Iteration   4: 0,798 ms/op
Iteration   5: 0,791 ms/op
Iteration   6: 0,787 ms/op
Iteration   7: 0,786 ms/op
Iteration   8: 0,793 ms/op
Iteration   9: 0,793 ms/op
Iteration  10: 0,794 ms/op


Result "benchmarkFind":
  0,793 ±(99.9%) 0,007 ms/op [Average]
  (min, avg, max) = (0,786, 0,793, 0,800), stdev = 0,004
  CI (99.9%): [0,786, 0,800] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 2, patternSize = 256)

# Run progress: 54,73% complete, ETA 07:19:04
# Fork: 1 of 1
# Warmup Iteration   1: 0,531 ms/op
# Warmup Iteration   2: 0,469 ms/op
# Warmup Iteration   3: 0,485 ms/op
# Warmup Iteration   4: 0,452 ms/op
# Warmup Iteration   5: 0,450 ms/op
# Warmup Iteration   6: 0,456 ms/op
# Warmup Iteration   7: 0,458 ms/op
# Warmup Iteration   8: 0,459 ms/op
# Warmup Iteration   9: 0,456 ms/op
# Warmup Iteration  10: 0,459 ms/op
Iteration   1: 0,457 ms/op
Iteration   2: 0,458 ms/op
Iteration   3: 0,462 ms/op
Iteration   4: 0,459 ms/op
Iteration   5: 0,461 ms/op
Iteration   6: 0,458 ms/op
Iteration   7: 0,458 ms/op
Iteration   8: 0,456 ms/op
Iteration   9: 0,458 ms/op
Iteration  10: 0,459 ms/op


Result "benchmarkFind":
  0,459 ±(99.9%) 0,003 ms/op [Average]
  (min, avg, max) = (0,456, 0,459, 0,462), stdev = 0,002
  CI (99.9%): [0,456, 0,461] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 8, patternSize = 2)

# Run progress: 54,78% complete, ETA 07:18:32
# Fork: 1 of 1
# Warmup Iteration   1: 5,990 ms/op
# Warmup Iteration   2: 4,868 ms/op
# Warmup Iteration   3: 4,768 ms/op
# Warmup Iteration   4: 4,769 ms/op
# Warmup Iteration   5: 4,786 ms/op
# Warmup Iteration   6: 4,779 ms/op
# Warmup Iteration   7: 4,832 ms/op
# Warmup Iteration   8: 4,807 ms/op
# Warmup Iteration   9: 4,845 ms/op
# Warmup Iteration  10: 4,836 ms/op
Iteration   1: 4,809 ms/op
Iteration   2: 4,807 ms/op
Iteration   3: 4,834 ms/op
Iteration   4: 4,791 ms/op
Iteration   5: 4,824 ms/op
Iteration   6: 4,756 ms/op
Iteration   7: 4,762 ms/op
Iteration   8: 4,816 ms/op
Iteration   9: 4,824 ms/op
Iteration  10: 4,833 ms/op


Result "benchmarkFind":
  4,806 ±(99.9%) 0,042 ms/op [Average]
  (min, avg, max) = (4,756, 4,806, 4,834), stdev = 0,028
  CI (99.9%): [4,764, 4,847] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 8, patternSize = 4)

# Run progress: 54,83% complete, ETA 07:18:00
# Fork: 1 of 1
# Warmup Iteration   1: 63,485 ms/op
# Warmup Iteration   2: 43,699 ms/op
# Warmup Iteration   3: 43,138 ms/op
# Warmup Iteration   4: 43,075 ms/op
# Warmup Iteration   5: 43,383 ms/op
# Warmup Iteration   6: 44,835 ms/op
# Warmup Iteration   7: 43,207 ms/op
# Warmup Iteration   8: 43,784 ms/op
# Warmup Iteration   9: 43,882 ms/op
# Warmup Iteration  10: 43,496 ms/op
Iteration   1: 43,560 ms/op
Iteration   2: 44,224 ms/op
Iteration   3: 44,655 ms/op
Iteration   4: 44,320 ms/op
Iteration   5: 44,391 ms/op
Iteration   6: 44,007 ms/op
Iteration   7: 43,341 ms/op
Iteration   8: 43,313 ms/op
Iteration   9: 43,081 ms/op
Iteration  10: 43,467 ms/op


Result "benchmarkFind":
  43,836 ±(99.9%) 0,827 ms/op [Average]
  (min, avg, max) = (43,081, 43,836, 44,655), stdev = 0,547
  CI (99.9%): [43,009, 44,663] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 8, patternSize = 8)

# Run progress: 54,87% complete, ETA 07:17:29
# Fork: 1 of 1
# Warmup Iteration   1: 15,441 ms/op
# Warmup Iteration   2: 13,811 ms/op
# Warmup Iteration   3: 13,182 ms/op
# Warmup Iteration   4: 13,252 ms/op
# Warmup Iteration   5: 13,304 ms/op
# Warmup Iteration   6: 13,271 ms/op
# Warmup Iteration   7: 13,406 ms/op
# Warmup Iteration   8: 13,407 ms/op
# Warmup Iteration   9: 13,528 ms/op
# Warmup Iteration  10: 13,561 ms/op
Iteration   1: 13,424 ms/op
Iteration   2: 13,502 ms/op
Iteration   3: 13,560 ms/op
Iteration   4: 13,532 ms/op
Iteration   5: 13,453 ms/op
Iteration   6: 13,453 ms/op
Iteration   7: 13,491 ms/op
Iteration   8: 13,454 ms/op
Iteration   9: 13,511 ms/op
Iteration  10: 13,503 ms/op


Result "benchmarkFind":
  13,488 ±(99.9%) 0,064 ms/op [Average]
  (min, avg, max) = (13,424, 13,488, 13,560), stdev = 0,042
  CI (99.9%): [13,425, 13,552] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 8, patternSize = 16)

# Run progress: 54,92% complete, ETA 07:16:57
# Fork: 1 of 1
# Warmup Iteration   1: 7,450 ms/op
# Warmup Iteration   2: 6,503 ms/op
# Warmup Iteration   3: 6,335 ms/op
# Warmup Iteration   4: 6,336 ms/op
# Warmup Iteration   5: 6,282 ms/op
# Warmup Iteration   6: 6,287 ms/op
# Warmup Iteration   7: 6,304 ms/op
# Warmup Iteration   8: 6,361 ms/op
# Warmup Iteration   9: 6,368 ms/op
# Warmup Iteration  10: 6,359 ms/op
Iteration   1: 6,341 ms/op
Iteration   2: 6,383 ms/op
Iteration   3: 6,374 ms/op
Iteration   4: 6,395 ms/op
Iteration   5: 6,351 ms/op
Iteration   6: 6,369 ms/op
Iteration   7: 6,373 ms/op
Iteration   8: 6,356 ms/op
Iteration   9: 7,393 ms/op
Iteration  10: 6,411 ms/op


Result "benchmarkFind":
  6,475 ±(99.9%) 0,489 ms/op [Average]
  (min, avg, max) = (6,341, 6,475, 7,393), stdev = 0,323
  CI (99.9%): [5,986, 6,963] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 8, patternSize = 32)

# Run progress: 54,96% complete, ETA 07:16:25
# Fork: 1 of 1
# Warmup Iteration   1: 3,781 ms/op
# Warmup Iteration   2: 3,392 ms/op
# Warmup Iteration   3: 3,340 ms/op
# Warmup Iteration   4: 3,305 ms/op
# Warmup Iteration   5: 3,306 ms/op
# Warmup Iteration   6: 3,287 ms/op
# Warmup Iteration   7: 3,311 ms/op
# Warmup Iteration   8: 3,380 ms/op
# Warmup Iteration   9: 3,346 ms/op
# Warmup Iteration  10: 3,361 ms/op
Iteration   1: 3,358 ms/op
Iteration   2: 3,335 ms/op
Iteration   3: 3,361 ms/op
Iteration   4: 3,362 ms/op
Iteration   5: 3,372 ms/op
Iteration   6: 3,375 ms/op
Iteration   7: 3,347 ms/op
Iteration   8: 3,346 ms/op
Iteration   9: 3,366 ms/op
Iteration  10: 3,362 ms/op


Result "benchmarkFind":
  3,358 ±(99.9%) 0,019 ms/op [Average]
  (min, avg, max) = (3,335, 3,358, 3,375), stdev = 0,012
  CI (99.9%): [3,340, 3,377] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 8, patternSize = 64)

# Run progress: 55,01% complete, ETA 07:15:53
# Fork: 1 of 1
# Warmup Iteration   1: 2,125 ms/op
# Warmup Iteration   2: 1,885 ms/op
# Warmup Iteration   3: 1,853 ms/op
# Warmup Iteration   4: 1,851 ms/op
# Warmup Iteration   5: 1,857 ms/op
# Warmup Iteration   6: 1,850 ms/op
# Warmup Iteration   7: 1,855 ms/op
# Warmup Iteration   8: 1,864 ms/op
# Warmup Iteration   9: 1,868 ms/op
# Warmup Iteration  10: 1,896 ms/op
Iteration   1: 1,916 ms/op
Iteration   2: 1,896 ms/op
Iteration   3: 1,883 ms/op
Iteration   4: 1,892 ms/op
Iteration   5: 1,893 ms/op
Iteration   6: 1,903 ms/op
Iteration   7: 1,914 ms/op
Iteration   8: 1,899 ms/op
Iteration   9: 1,903 ms/op
Iteration  10: 1,897 ms/op


Result "benchmarkFind":
  1,900 ±(99.9%) 0,015 ms/op [Average]
  (min, avg, max) = (1,883, 1,900, 1,916), stdev = 0,010
  CI (99.9%): [1,885, 1,915] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 8, patternSize = 128)

# Run progress: 55,06% complete, ETA 07:15:22
# Fork: 1 of 1
# Warmup Iteration   1: 1,216 ms/op
# Warmup Iteration   2: 1,031 ms/op
# Warmup Iteration   3: 1,030 ms/op
# Warmup Iteration   4: 1,033 ms/op
# Warmup Iteration   5: 1,043 ms/op
# Warmup Iteration   6: 1,050 ms/op
# Warmup Iteration   7: 1,056 ms/op
# Warmup Iteration   8: 1,052 ms/op
# Warmup Iteration   9: 1,052 ms/op
# Warmup Iteration  10: 1,047 ms/op
Iteration   1: 1,057 ms/op
Iteration   2: 1,065 ms/op
Iteration   3: 1,055 ms/op
Iteration   4: 1,051 ms/op
Iteration   5: 1,051 ms/op
Iteration   6: 1,050 ms/op
Iteration   7: 1,153 ms/op
Iteration   8: 1,068 ms/op
Iteration   9: 1,042 ms/op
Iteration  10: 1,030 ms/op


Result "benchmarkFind":
  1,062 ±(99.9%) 0,051 ms/op [Average]
  (min, avg, max) = (1,030, 1,062, 1,153), stdev = 0,034
  CI (99.9%): [1,011, 1,113] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 8, patternSize = 256)

# Run progress: 55,10% complete, ETA 07:14:50
# Fork: 1 of 1
# Warmup Iteration   1: 0,673 ms/op
# Warmup Iteration   2: 0,613 ms/op
# Warmup Iteration   3: 0,583 ms/op
# Warmup Iteration   4: 0,584 ms/op
# Warmup Iteration   5: 0,583 ms/op
# Warmup Iteration   6: 0,583 ms/op
# Warmup Iteration   7: 0,587 ms/op
# Warmup Iteration   8: 0,587 ms/op
# Warmup Iteration   9: 0,594 ms/op
# Warmup Iteration  10: 0,596 ms/op
Iteration   1: 0,592 ms/op
Iteration   2: 0,596 ms/op
Iteration   3: 0,596 ms/op
Iteration   4: 0,595 ms/op
Iteration   5: 0,596 ms/op
Iteration   6: 0,594 ms/op
Iteration   7: 0,594 ms/op
Iteration   8: 0,610 ms/op
Iteration   9: 0,584 ms/op
Iteration  10: 0,590 ms/op


Result "benchmarkFind":
  0,595 ±(99.9%) 0,010 ms/op [Average]
  (min, avg, max) = (0,584, 0,595, 0,610), stdev = 0,007
  CI (99.9%): [0,585, 0,605] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 32, patternSize = 2)

# Run progress: 55,15% complete, ETA 07:14:18
# Fork: 1 of 1
# Warmup Iteration   1: 33,646 ms/op
# Warmup Iteration   2: 28,635 ms/op
# Warmup Iteration   3: 28,510 ms/op
# Warmup Iteration   4: 28,336 ms/op
# Warmup Iteration   5: 28,441 ms/op
# Warmup Iteration   6: 28,421 ms/op
# Warmup Iteration   7: 28,399 ms/op
# Warmup Iteration   8: 28,454 ms/op
# Warmup Iteration   9: 28,421 ms/op
# Warmup Iteration  10: 28,604 ms/op
Iteration   1: 28,780 ms/op
Iteration   2: 28,679 ms/op
Iteration   3: 28,687 ms/op
Iteration   4: 28,852 ms/op
Iteration   5: 28,376 ms/op
Iteration   6: 28,476 ms/op
Iteration   7: 28,660 ms/op
Iteration   8: 28,825 ms/op
Iteration   9: 28,418 ms/op
Iteration  10: 28,405 ms/op


Result "benchmarkFind":
  28,616 ±(99.9%) 0,275 ms/op [Average]
  (min, avg, max) = (28,376, 28,616, 28,852), stdev = 0,182
  CI (99.9%): [28,341, 28,891] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 32, patternSize = 4)

# Run progress: 55,19% complete, ETA 07:13:47
# Fork: 1 of 1
# Warmup Iteration   1: 73,426 ms/op
# Warmup Iteration   2: 56,242 ms/op
# Warmup Iteration   3: 55,088 ms/op
# Warmup Iteration   4: 55,131 ms/op
# Warmup Iteration   5: 54,938 ms/op
# Warmup Iteration   6: 55,534 ms/op
# Warmup Iteration   7: 55,837 ms/op
# Warmup Iteration   8: 55,795 ms/op
# Warmup Iteration   9: 56,129 ms/op
# Warmup Iteration  10: 55,457 ms/op
Iteration   1: 55,401 ms/op
Iteration   2: 55,671 ms/op
Iteration   3: 55,473 ms/op
Iteration   4: 55,542 ms/op
Iteration   5: 62,479 ms/op
Iteration   6: 54,719 ms/op
Iteration   7: 54,562 ms/op
Iteration   8: 54,840 ms/op
Iteration   9: 55,280 ms/op
Iteration  10: 55,035 ms/op


Result "benchmarkFind":
  55,900 ±(99.9%) 3,540 ms/op [Average]
  (min, avg, max) = (54,562, 55,900, 62,479), stdev = 2,341
  CI (99.9%): [52,360, 59,440] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 32, patternSize = 8)

# Run progress: 55,24% complete, ETA 07:13:16
# Fork: 1 of 1
# Warmup Iteration   1: 21,887 ms/op
# Warmup Iteration   2: 18,685 ms/op
# Warmup Iteration   3: 18,898 ms/op
# Warmup Iteration   4: 19,516 ms/op
# Warmup Iteration   5: 19,603 ms/op
# Warmup Iteration   6: 19,561 ms/op
# Warmup Iteration   7: 19,523 ms/op
# Warmup Iteration   8: 19,602 ms/op
# Warmup Iteration   9: 19,475 ms/op
# Warmup Iteration  10: 19,412 ms/op
Iteration   1: 19,513 ms/op
Iteration   2: 19,482 ms/op
Iteration   3: 19,595 ms/op
Iteration   4: 19,675 ms/op
Iteration   5: 19,519 ms/op
Iteration   6: 19,079 ms/op
Iteration   7: 18,975 ms/op
Iteration   8: 18,963 ms/op
Iteration   9: 18,921 ms/op
Iteration  10: 18,976 ms/op


Result "benchmarkFind":
  19,270 ±(99.9%) 0,468 ms/op [Average]
  (min, avg, max) = (18,921, 19,270, 19,675), stdev = 0,309
  CI (99.9%): [18,802, 19,738] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 32, patternSize = 16)

# Run progress: 55,28% complete, ETA 07:12:44
# Fork: 1 of 1
# Warmup Iteration   1: 9,411 ms/op
# Warmup Iteration   2: 8,726 ms/op
# Warmup Iteration   3: 8,499 ms/op
# Warmup Iteration   4: 8,552 ms/op
# Warmup Iteration   5: 8,515 ms/op
# Warmup Iteration   6: 8,519 ms/op
# Warmup Iteration   7: 8,569 ms/op
# Warmup Iteration   8: 8,561 ms/op
# Warmup Iteration   9: 8,678 ms/op
# Warmup Iteration  10: 8,576 ms/op
Iteration   1: 8,664 ms/op
Iteration   2: 8,603 ms/op
Iteration   3: 8,610 ms/op
Iteration   4: 8,616 ms/op
Iteration   5: 8,585 ms/op
Iteration   6: 8,615 ms/op
Iteration   7: 8,594 ms/op
Iteration   8: 8,648 ms/op
Iteration   9: 8,603 ms/op
Iteration  10: 8,623 ms/op


Result "benchmarkFind":
  8,616 ±(99.9%) 0,036 ms/op [Average]
  (min, avg, max) = (8,585, 8,616, 8,664), stdev = 0,024
  CI (99.9%): [8,580, 8,652] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 32, patternSize = 32)

# Run progress: 55,33% complete, ETA 07:12:13
# Fork: 1 of 1
# Warmup Iteration   1: 4,846 ms/op
# Warmup Iteration   2: 4,295 ms/op
# Warmup Iteration   3: 4,289 ms/op
# Warmup Iteration   4: 4,311 ms/op
# Warmup Iteration   5: 4,350 ms/op
# Warmup Iteration   6: 4,352 ms/op
# Warmup Iteration   7: 4,349 ms/op
# Warmup Iteration   8: 4,359 ms/op
# Warmup Iteration   9: 4,361 ms/op
# Warmup Iteration  10: 4,356 ms/op
Iteration   1: 4,355 ms/op
Iteration   2: 4,346 ms/op
Iteration   3: 4,878 ms/op
Iteration   4: 4,296 ms/op
Iteration   5: 4,294 ms/op
Iteration   6: 4,264 ms/op
Iteration   7: 4,273 ms/op
Iteration   8: 4,325 ms/op
Iteration   9: 4,303 ms/op
Iteration  10: 4,293 ms/op


Result "benchmarkFind":
  4,363 ±(99.9%) 0,277 ms/op [Average]
  (min, avg, max) = (4,264, 4,363, 4,878), stdev = 0,183
  CI (99.9%): [4,085, 4,640] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 32, patternSize = 64)

# Run progress: 55,38% complete, ETA 07:11:41
# Fork: 1 of 1
# Warmup Iteration   1: 2,670 ms/op
# Warmup Iteration   2: 2,287 ms/op
# Warmup Iteration   3: 2,246 ms/op
# Warmup Iteration   4: 2,255 ms/op
# Warmup Iteration   5: 2,244 ms/op
# Warmup Iteration   6: 2,254 ms/op
# Warmup Iteration   7: 2,273 ms/op
# Warmup Iteration   8: 2,282 ms/op
# Warmup Iteration   9: 2,278 ms/op
# Warmup Iteration  10: 2,283 ms/op
Iteration   1: 2,266 ms/op
Iteration   2: 2,285 ms/op
Iteration   3: 2,290 ms/op
Iteration   4: 2,261 ms/op
Iteration   5: 2,293 ms/op
Iteration   6: 2,283 ms/op
Iteration   7: 2,291 ms/op
Iteration   8: 2,273 ms/op
Iteration   9: 2,294 ms/op
Iteration  10: 2,292 ms/op


Result "benchmarkFind":
  2,283 ±(99.9%) 0,018 ms/op [Average]
  (min, avg, max) = (2,261, 2,283, 2,294), stdev = 0,012
  CI (99.9%): [2,265, 2,301] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 32, patternSize = 128)

# Run progress: 55,42% complete, ETA 07:11:09
# Fork: 1 of 1
# Warmup Iteration   1: 1,811 ms/op
# Warmup Iteration   2: 1,590 ms/op
# Warmup Iteration   3: 1,560 ms/op
# Warmup Iteration   4: 1,557 ms/op
# Warmup Iteration   5: 1,568 ms/op
# Warmup Iteration   6: 1,560 ms/op
# Warmup Iteration   7: 1,574 ms/op
# Warmup Iteration   8: 1,571 ms/op
# Warmup Iteration   9: 1,562 ms/op
# Warmup Iteration  10: 1,552 ms/op
Iteration   1: 1,556 ms/op
Iteration   2: 1,553 ms/op
Iteration   3: 1,545 ms/op
Iteration   4: 1,556 ms/op
Iteration   5: 1,539 ms/op
Iteration   6: 1,543 ms/op
Iteration   7: 1,545 ms/op
Iteration   8: 1,547 ms/op
Iteration   9: 1,543 ms/op
Iteration  10: 1,548 ms/op


Result "benchmarkFind":
  1,548 ±(99.9%) 0,009 ms/op [Average]
  (min, avg, max) = (1,539, 1,548, 1,556), stdev = 0,006
  CI (99.9%): [1,539, 1,556] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 32, patternSize = 256)

# Run progress: 55,47% complete, ETA 07:10:38
# Fork: 1 of 1
# Warmup Iteration   1: 1,201 ms/op
# Warmup Iteration   2: 1,047 ms/op
# Warmup Iteration   3: 1,046 ms/op
# Warmup Iteration   4: 1,031 ms/op
# Warmup Iteration   5: 1,039 ms/op
# Warmup Iteration   6: 1,040 ms/op
# Warmup Iteration   7: 1,050 ms/op
# Warmup Iteration   8: 1,047 ms/op
# Warmup Iteration   9: 1,053 ms/op
# Warmup Iteration  10: 1,052 ms/op
Iteration   1: 1,198 ms/op
Iteration   2: 1,048 ms/op
Iteration   3: 1,039 ms/op
Iteration   4: 1,034 ms/op
Iteration   5: 1,028 ms/op
Iteration   6: 1,074 ms/op
Iteration   7: 1,035 ms/op
Iteration   8: 1,032 ms/op
Iteration   9: 1,034 ms/op
Iteration  10: 1,043 ms/op


Result "benchmarkFind":
  1,056 ±(99.9%) 0,078 ms/op [Average]
  (min, avg, max) = (1,028, 1,056, 1,198), stdev = 0,051
  CI (99.9%): [0,979, 1,134] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 128, patternSize = 2)

# Run progress: 55,51% complete, ETA 07:10:06
# Fork: 1 of 1
# Warmup Iteration   1: 301,527 ms/op
# Warmup Iteration   2: 263,553 ms/op
# Warmup Iteration   3: 262,781 ms/op
# Warmup Iteration   4: 261,130 ms/op
# Warmup Iteration   5: 260,893 ms/op
# Warmup Iteration   6: 261,126 ms/op
# Warmup Iteration   7: 263,281 ms/op
# Warmup Iteration   8: 261,562 ms/op
# Warmup Iteration   9: 260,851 ms/op
# Warmup Iteration  10: 261,551 ms/op
Iteration   1: 261,195 ms/op
Iteration   2: 259,147 ms/op
Iteration   3: 259,964 ms/op
Iteration   4: 261,089 ms/op
Iteration   5: 259,442 ms/op
Iteration   6: 263,463 ms/op
Iteration   7: 260,433 ms/op
Iteration   8: 259,993 ms/op
Iteration   9: 273,061 ms/op
Iteration  10: 278,342 ms/op


Result "benchmarkFind":
  263,613 ±(99.9%) 9,982 ms/op [Average]
  (min, avg, max) = (259,147, 263,613, 278,342), stdev = 6,602
  CI (99.9%): [253,631, 273,595] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 128, patternSize = 4)

# Run progress: 55,56% complete, ETA 07:09:36
# Fork: 1 of 1
# Warmup Iteration   1: 279,492 ms/op
# Warmup Iteration   2: 213,460 ms/op
# Warmup Iteration   3: 213,064 ms/op
# Warmup Iteration   4: 208,728 ms/op
# Warmup Iteration   5: 213,738 ms/op
# Warmup Iteration   6: 207,733 ms/op
# Warmup Iteration   7: 209,130 ms/op
# Warmup Iteration   8: 208,218 ms/op
# Warmup Iteration   9: 207,016 ms/op
# Warmup Iteration  10: 208,165 ms/op
Iteration   1: 206,863 ms/op
Iteration   2: 207,301 ms/op
Iteration   3: 207,974 ms/op
Iteration   4: 208,064 ms/op
Iteration   5: 208,034 ms/op
Iteration   6: 207,122 ms/op
Iteration   7: 208,330 ms/op
Iteration   8: 207,604 ms/op
Iteration   9: 207,873 ms/op
Iteration  10: 206,080 ms/op


Result "benchmarkFind":
  207,525 ±(99.9%) 1,041 ms/op [Average]
  (min, avg, max) = (206,080, 207,525, 208,330), stdev = 0,688
  CI (99.9%): [206,484, 208,565] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 128, patternSize = 8)

# Run progress: 55,61% complete, ETA 07:09:05
# Fork: 1 of 1
# Warmup Iteration   1: 36,877 ms/op
# Warmup Iteration   2: 29,332 ms/op
# Warmup Iteration   3: 29,003 ms/op
# Warmup Iteration   4: 28,684 ms/op
# Warmup Iteration   5: 28,864 ms/op
# Warmup Iteration   6: 29,002 ms/op
# Warmup Iteration   7: 31,602 ms/op
# Warmup Iteration   8: 30,702 ms/op
# Warmup Iteration   9: 28,695 ms/op
# Warmup Iteration  10: 28,703 ms/op
Iteration   1: 28,841 ms/op
Iteration   2: 28,938 ms/op
Iteration   3: 29,074 ms/op
Iteration   4: 29,330 ms/op
Iteration   5: 29,162 ms/op
Iteration   6: 29,013 ms/op
Iteration   7: 29,258 ms/op
Iteration   8: 29,446 ms/op
Iteration   9: 28,982 ms/op
Iteration  10: 29,092 ms/op


Result "benchmarkFind":
  29,114 ±(99.9%) 0,283 ms/op [Average]
  (min, avg, max) = (28,841, 29,114, 29,446), stdev = 0,187
  CI (99.9%): [28,831, 29,397] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 128, patternSize = 16)

# Run progress: 55,65% complete, ETA 07:08:34
# Fork: 1 of 1
# Warmup Iteration   1: 13,781 ms/op
# Warmup Iteration   2: 11,450 ms/op
# Warmup Iteration   3: 11,291 ms/op
# Warmup Iteration   4: 11,308 ms/op
# Warmup Iteration   5: 11,305 ms/op
# Warmup Iteration   6: 11,402 ms/op
# Warmup Iteration   7: 11,421 ms/op
# Warmup Iteration   8: 11,426 ms/op
# Warmup Iteration   9: 11,344 ms/op
# Warmup Iteration  10: 11,581 ms/op
Iteration   1: 11,439 ms/op
Iteration   2: 11,400 ms/op
Iteration   3: 11,405 ms/op
Iteration   4: 11,418 ms/op
Iteration   5: 11,471 ms/op
Iteration   6: 11,518 ms/op
Iteration   7: 11,482 ms/op
Iteration   8: 11,450 ms/op
Iteration   9: 11,372 ms/op
Iteration  10: 11,424 ms/op


Result "benchmarkFind":
  11,438 ±(99.9%) 0,066 ms/op [Average]
  (min, avg, max) = (11,372, 11,438, 11,518), stdev = 0,044
  CI (99.9%): [11,372, 11,504] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 128, patternSize = 32)

# Run progress: 55,70% complete, ETA 07:08:02
# Fork: 1 of 1
# Warmup Iteration   1: 6,737 ms/op
# Warmup Iteration   2: 5,992 ms/op
# Warmup Iteration   3: 5,853 ms/op
# Warmup Iteration   4: 5,879 ms/op
# Warmup Iteration   5: 5,887 ms/op
# Warmup Iteration   6: 5,916 ms/op
# Warmup Iteration   7: 5,860 ms/op
# Warmup Iteration   8: 5,936 ms/op
# Warmup Iteration   9: 5,969 ms/op
# Warmup Iteration  10: 5,965 ms/op
Iteration   1: 5,938 ms/op
Iteration   2: 5,939 ms/op
Iteration   3: 5,937 ms/op
Iteration   4: 5,992 ms/op
Iteration   5: 5,975 ms/op
Iteration   6: 5,925 ms/op
Iteration   7: 5,895 ms/op
Iteration   8: 5,922 ms/op
Iteration   9: 5,942 ms/op
Iteration  10: 5,923 ms/op


Result "benchmarkFind":
  5,939 ±(99.9%) 0,041 ms/op [Average]
  (min, avg, max) = (5,895, 5,939, 5,992), stdev = 0,027
  CI (99.9%): [5,897, 5,980] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 128, patternSize = 64)

# Run progress: 55,74% complete, ETA 07:07:31
# Fork: 1 of 1
# Warmup Iteration   1: 5,080 ms/op
# Warmup Iteration   2: 4,252 ms/op
# Warmup Iteration   3: 4,182 ms/op
# Warmup Iteration   4: 4,345 ms/op
# Warmup Iteration   5: 4,269 ms/op
# Warmup Iteration   6: 4,760 ms/op
# Warmup Iteration   7: 4,308 ms/op
# Warmup Iteration   8: 4,227 ms/op
# Warmup Iteration   9: 4,243 ms/op
# Warmup Iteration  10: 4,229 ms/op
Iteration   1: 4,237 ms/op
Iteration   2: 4,263 ms/op
Iteration   3: 4,266 ms/op
Iteration   4: 4,246 ms/op
Iteration   5: 4,235 ms/op
Iteration   6: 4,264 ms/op
Iteration   7: 4,226 ms/op
Iteration   8: 4,357 ms/op
Iteration   9: 4,337 ms/op
Iteration  10: 4,322 ms/op


Result "benchmarkFind":
  4,275 ±(99.9%) 0,070 ms/op [Average]
  (min, avg, max) = (4,226, 4,275, 4,357), stdev = 0,047
  CI (99.9%): [4,205, 4,346] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 128, patternSize = 128)

# Run progress: 55,79% complete, ETA 07:06:59
# Fork: 1 of 1
# Warmup Iteration   1: 3,246 ms/op
# Warmup Iteration   2: 2,802 ms/op
# Warmup Iteration   3: 2,809 ms/op
# Warmup Iteration   4: 2,732 ms/op
# Warmup Iteration   5: 2,727 ms/op
# Warmup Iteration   6: 2,794 ms/op
# Warmup Iteration   7: 2,744 ms/op
# Warmup Iteration   8: 2,751 ms/op
# Warmup Iteration   9: 2,765 ms/op
# Warmup Iteration  10: 2,792 ms/op
Iteration   1: 2,778 ms/op
Iteration   2: 2,777 ms/op
Iteration   3: 2,761 ms/op
Iteration   4: 2,808 ms/op
Iteration   5: 2,788 ms/op
Iteration   6: 2,804 ms/op
Iteration   7: 2,781 ms/op
Iteration   8: 2,789 ms/op
Iteration   9: 2,781 ms/op
Iteration  10: 2,800 ms/op


Result "benchmarkFind":
  2,787 ±(99.9%) 0,022 ms/op [Average]
  (min, avg, max) = (2,761, 2,787, 2,808), stdev = 0,014
  CI (99.9%): [2,765, 2,808] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 128, patternSize = 256)

# Run progress: 55,84% complete, ETA 07:06:28
# Fork: 1 of 1
# Warmup Iteration   1: 2,984 ms/op
# Warmup Iteration   2: 2,658 ms/op
# Warmup Iteration   3: 2,676 ms/op
# Warmup Iteration   4: 2,651 ms/op
# Warmup Iteration   5: 2,574 ms/op
# Warmup Iteration   6: 2,564 ms/op
# Warmup Iteration   7: 2,574 ms/op
# Warmup Iteration   8: 2,564 ms/op
# Warmup Iteration   9: 2,559 ms/op
# Warmup Iteration  10: 2,579 ms/op
Iteration   1: 2,558 ms/op
Iteration   2: 2,569 ms/op
Iteration   3: 2,581 ms/op
Iteration   4: 2,553 ms/op
Iteration   5: 2,580 ms/op
Iteration   6: 2,561 ms/op
Iteration   7: 2,568 ms/op
Iteration   8: 2,571 ms/op
Iteration   9: 2,562 ms/op
Iteration  10: 2,557 ms/op


Result "benchmarkFind":
  2,566 ±(99.9%) 0,014 ms/op [Average]
  (min, avg, max) = (2,553, 2,566, 2,581), stdev = 0,009
  CI (99.9%): [2,552, 2,580] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 2, patternSize = 2)

# Run progress: 55,88% complete, ETA 07:05:56
# Fork: 1 of 1
# Warmup Iteration   1: 10,793 ms/op
# Warmup Iteration   2: 9,215 ms/op
# Warmup Iteration   3: 8,972 ms/op
# Warmup Iteration   4: 9,856 ms/op
# Warmup Iteration   5: 8,808 ms/op
# Warmup Iteration   6: 8,797 ms/op
# Warmup Iteration   7: 8,864 ms/op
# Warmup Iteration   8: 8,822 ms/op
# Warmup Iteration   9: 8,801 ms/op
# Warmup Iteration  10: 8,863 ms/op
Iteration   1: 8,928 ms/op
Iteration   2: 8,900 ms/op
Iteration   3: 8,972 ms/op
Iteration   4: 8,926 ms/op
Iteration   5: 8,870 ms/op
Iteration   6: 8,908 ms/op
Iteration   7: 8,876 ms/op
Iteration   8: 8,883 ms/op
Iteration   9: 8,829 ms/op
Iteration  10: 8,877 ms/op


Result "benchmarkFind":
  8,897 ±(99.9%) 0,060 ms/op [Average]
  (min, avg, max) = (8,829, 8,897, 8,972), stdev = 0,040
  CI (99.9%): [8,837, 8,957] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 2, patternSize = 4)

# Run progress: 55,93% complete, ETA 07:05:25
# Fork: 1 of 1
# Warmup Iteration   1: 185,731 ms/op
# Warmup Iteration   2: 157,515 ms/op
# Warmup Iteration   3: 160,151 ms/op
# Warmup Iteration   4: 155,991 ms/op
# Warmup Iteration   5: 157,862 ms/op
# Warmup Iteration   6: 158,364 ms/op
# Warmup Iteration   7: 158,263 ms/op
# Warmup Iteration   8: 156,863 ms/op
# Warmup Iteration   9: 157,473 ms/op
# Warmup Iteration  10: 158,210 ms/op
Iteration   1: 157,780 ms/op
Iteration   2: 156,843 ms/op
Iteration   3: 156,548 ms/op
Iteration   4: 158,069 ms/op
Iteration   5: 156,683 ms/op
Iteration   6: 157,977 ms/op
Iteration   7: 156,643 ms/op
Iteration   8: 156,616 ms/op
Iteration   9: 157,184 ms/op
Iteration  10: 157,502 ms/op


Result "benchmarkFind":
  157,185 ±(99.9%) 0,909 ms/op [Average]
  (min, avg, max) = (156,548, 157,185, 158,069), stdev = 0,601
  CI (99.9%): [156,275, 158,094] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 2, patternSize = 8)

# Run progress: 55,97% complete, ETA 07:04:55
# Fork: 1 of 1
# Warmup Iteration   1: 77,104 ms/op
# Warmup Iteration   2: 68,818 ms/op
# Warmup Iteration   3: 66,829 ms/op
# Warmup Iteration   4: 66,751 ms/op
# Warmup Iteration   5: 66,997 ms/op
# Warmup Iteration   6: 67,458 ms/op
# Warmup Iteration   7: 68,021 ms/op
# Warmup Iteration   8: 67,507 ms/op
# Warmup Iteration   9: 67,358 ms/op
# Warmup Iteration  10: 67,738 ms/op
Iteration   1: 67,290 ms/op
Iteration   2: 67,092 ms/op
Iteration   3: 67,135 ms/op
Iteration   4: 67,150 ms/op
Iteration   5: 67,513 ms/op
Iteration   6: 67,094 ms/op
Iteration   7: 67,404 ms/op
Iteration   8: 68,374 ms/op
Iteration   9: 67,181 ms/op
Iteration  10: 75,860 ms/op


Result "benchmarkFind":
  68,209 ±(99.9%) 4,105 ms/op [Average]
  (min, avg, max) = (67,092, 68,209, 75,860), stdev = 2,715
  CI (99.9%): [64,104, 72,315] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 2, patternSize = 16)

# Run progress: 56,02% complete, ETA 07:04:24
# Fork: 1 of 1
# Warmup Iteration   1: 37,770 ms/op
# Warmup Iteration   2: 34,547 ms/op
# Warmup Iteration   3: 33,537 ms/op
# Warmup Iteration   4: 33,514 ms/op
# Warmup Iteration   5: 33,457 ms/op
# Warmup Iteration   6: 33,629 ms/op
# Warmup Iteration   7: 33,870 ms/op
# Warmup Iteration   8: 33,996 ms/op
# Warmup Iteration   9: 33,881 ms/op
# Warmup Iteration  10: 33,752 ms/op
Iteration   1: 33,889 ms/op
Iteration   2: 34,091 ms/op
Iteration   3: 33,861 ms/op
Iteration   4: 33,652 ms/op
Iteration   5: 33,862 ms/op
Iteration   6: 33,772 ms/op
Iteration   7: 33,680 ms/op
Iteration   8: 34,288 ms/op
Iteration   9: 33,844 ms/op
Iteration  10: 33,791 ms/op


Result "benchmarkFind":
  33,873 ±(99.9%) 0,287 ms/op [Average]
  (min, avg, max) = (33,652, 33,873, 34,288), stdev = 0,190
  CI (99.9%): [33,586, 34,160] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 2, patternSize = 32)

# Run progress: 56,07% complete, ETA 07:03:53
# Fork: 1 of 1
# Warmup Iteration   1: 20,377 ms/op
# Warmup Iteration   2: 17,937 ms/op
# Warmup Iteration   3: 17,275 ms/op
# Warmup Iteration   4: 17,381 ms/op
# Warmup Iteration   5: 17,422 ms/op
# Warmup Iteration   6: 17,607 ms/op
# Warmup Iteration   7: 17,866 ms/op
# Warmup Iteration   8: 17,857 ms/op
# Warmup Iteration   9: 17,767 ms/op
# Warmup Iteration  10: 17,991 ms/op
Iteration   1: 17,931 ms/op
Iteration   2: 17,774 ms/op
Iteration   3: 17,955 ms/op
Iteration   4: 17,836 ms/op
Iteration   5: 17,789 ms/op
Iteration   6: 17,782 ms/op
Iteration   7: 17,476 ms/op
Iteration   8: 17,469 ms/op
Iteration   9: 17,630 ms/op
Iteration  10: 17,572 ms/op


Result "benchmarkFind":
  17,721 ±(99.9%) 0,265 ms/op [Average]
  (min, avg, max) = (17,469, 17,721, 17,955), stdev = 0,176
  CI (99.9%): [17,456, 17,987] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 2, patternSize = 64)

# Run progress: 56,11% complete, ETA 07:03:22
# Fork: 1 of 1
# Warmup Iteration   1: 9,478 ms/op
# Warmup Iteration   2: 8,418 ms/op
# Warmup Iteration   3: 8,209 ms/op
# Warmup Iteration   4: 8,156 ms/op
# Warmup Iteration   5: 8,159 ms/op
# Warmup Iteration   6: 8,226 ms/op
# Warmup Iteration   7: 8,274 ms/op
# Warmup Iteration   8: 8,289 ms/op
# Warmup Iteration   9: 8,287 ms/op
# Warmup Iteration  10: 8,270 ms/op
Iteration   1: 8,321 ms/op
Iteration   2: 8,312 ms/op
Iteration   3: 8,262 ms/op
Iteration   4: 8,278 ms/op
Iteration   5: 8,311 ms/op
Iteration   6: 8,273 ms/op
Iteration   7: 9,090 ms/op
Iteration   8: 8,557 ms/op
Iteration   9: 8,164 ms/op
Iteration  10: 8,149 ms/op


Result "benchmarkFind":
  8,372 ±(99.9%) 0,417 ms/op [Average]
  (min, avg, max) = (8,149, 8,372, 9,090), stdev = 0,276
  CI (99.9%): [7,955, 8,789] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 2, patternSize = 128)

# Run progress: 56,16% complete, ETA 07:02:51
# Fork: 1 of 1
# Warmup Iteration   1: 5,999 ms/op
# Warmup Iteration   2: 5,377 ms/op
# Warmup Iteration   3: 4,908 ms/op
# Warmup Iteration   4: 4,939 ms/op
# Warmup Iteration   5: 4,931 ms/op
# Warmup Iteration   6: 4,918 ms/op
# Warmup Iteration   7: 4,986 ms/op
# Warmup Iteration   8: 4,968 ms/op
# Warmup Iteration   9: 5,003 ms/op
# Warmup Iteration  10: 4,989 ms/op
Iteration   1: 5,005 ms/op
Iteration   2: 5,043 ms/op
Iteration   3: 5,003 ms/op
Iteration   4: 4,973 ms/op
Iteration   5: 5,018 ms/op
Iteration   6: 4,999 ms/op
Iteration   7: 5,001 ms/op
Iteration   8: 5,029 ms/op
Iteration   9: 5,021 ms/op
Iteration  10: 4,994 ms/op


Result "benchmarkFind":
  5,009 ±(99.9%) 0,030 ms/op [Average]
  (min, avg, max) = (4,973, 5,009, 5,043), stdev = 0,020
  CI (99.9%): [4,979, 5,038] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 2, patternSize = 256)

# Run progress: 56,20% complete, ETA 07:02:20
# Fork: 1 of 1
# Warmup Iteration   1: 3,946 ms/op
# Warmup Iteration   2: 3,617 ms/op
# Warmup Iteration   3: 3,544 ms/op
# Warmup Iteration   4: 3,548 ms/op
# Warmup Iteration   5: 3,570 ms/op
# Warmup Iteration   6: 3,574 ms/op
# Warmup Iteration   7: 3,588 ms/op
# Warmup Iteration   8: 3,607 ms/op
# Warmup Iteration   9: 3,600 ms/op
# Warmup Iteration  10: 3,607 ms/op
Iteration   1: 3,598 ms/op
Iteration   2: 3,604 ms/op
Iteration   3: 3,616 ms/op
Iteration   4: 3,620 ms/op
Iteration   5: 3,591 ms/op
Iteration   6: 3,612 ms/op
Iteration   7: 3,616 ms/op
Iteration   8: 3,599 ms/op
Iteration   9: 3,589 ms/op
Iteration  10: 3,652 ms/op


Result "benchmarkFind":
  3,610 ±(99.9%) 0,028 ms/op [Average]
  (min, avg, max) = (3,589, 3,610, 3,652), stdev = 0,018
  CI (99.9%): [3,582, 3,638] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 8, patternSize = 2)

# Run progress: 56,25% complete, ETA 07:01:49
# Fork: 1 of 1
# Warmup Iteration   1: 17,389 ms/op
# Warmup Iteration   2: 13,347 ms/op
# Warmup Iteration   3: 13,429 ms/op
# Warmup Iteration   4: 13,436 ms/op
# Warmup Iteration   5: 13,701 ms/op
# Warmup Iteration   6: 13,670 ms/op
# Warmup Iteration   7: 13,656 ms/op
# Warmup Iteration   8: 13,613 ms/op
# Warmup Iteration   9: 13,644 ms/op
# Warmup Iteration  10: 13,651 ms/op
Iteration   1: 13,633 ms/op
Iteration   2: 13,779 ms/op
Iteration   3: 13,649 ms/op
Iteration   4: 13,832 ms/op
Iteration   5: 15,379 ms/op
Iteration   6: 13,461 ms/op
Iteration   7: 13,296 ms/op
Iteration   8: 13,313 ms/op
Iteration   9: 13,529 ms/op
Iteration  10: 13,470 ms/op


Result "benchmarkFind":
  13,734 ±(99.9%) 0,914 ms/op [Average]
  (min, avg, max) = (13,296, 13,734, 15,379), stdev = 0,605
  CI (99.9%): [12,820, 14,648] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 8, patternSize = 4)

# Run progress: 56,30% complete, ETA 07:01:18
# Fork: 1 of 1
# Warmup Iteration   1: 281,593 ms/op
# Warmup Iteration   2: 247,916 ms/op
# Warmup Iteration   3: 242,212 ms/op
# Warmup Iteration   4: 246,159 ms/op
# Warmup Iteration   5: 244,638 ms/op
# Warmup Iteration   6: 247,598 ms/op
# Warmup Iteration   7: 250,274 ms/op
# Warmup Iteration   8: 247,228 ms/op
# Warmup Iteration   9: 245,961 ms/op
# Warmup Iteration  10: 247,904 ms/op
Iteration   1: 249,320 ms/op
Iteration   2: 248,524 ms/op
Iteration   3: 249,632 ms/op
Iteration   4: 249,167 ms/op
Iteration   5: 250,276 ms/op
Iteration   6: 250,443 ms/op
Iteration   7: 248,498 ms/op
Iteration   8: 246,941 ms/op
Iteration   9: 249,711 ms/op
Iteration  10: 251,149 ms/op


Result "benchmarkFind":
  249,366 ±(99.9%) 1,799 ms/op [Average]
  (min, avg, max) = (246,941, 249,366, 251,149), stdev = 1,190
  CI (99.9%): [247,567, 251,165] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 8, patternSize = 8)

# Run progress: 56,34% complete, ETA 07:00:50
# Fork: 1 of 1
# Warmup Iteration   1: 111,541 ms/op
# Warmup Iteration   2: 97,237 ms/op
# Warmup Iteration   3: 96,289 ms/op
# Warmup Iteration   4: 96,978 ms/op
# Warmup Iteration   5: 96,649 ms/op
# Warmup Iteration   6: 98,020 ms/op
# Warmup Iteration   7: 98,838 ms/op
# Warmup Iteration   8: 98,034 ms/op
# Warmup Iteration   9: 98,355 ms/op
# Warmup Iteration  10: 97,252 ms/op
Iteration   1: 98,197 ms/op
Iteration   2: 97,658 ms/op
Iteration   3: 98,080 ms/op
Iteration   4: 97,913 ms/op
Iteration   5: 98,166 ms/op
Iteration   6: 98,211 ms/op
Iteration   7: 98,371 ms/op
Iteration   8: 97,943 ms/op
Iteration   9: 97,590 ms/op
Iteration  10: 98,941 ms/op


Result "benchmarkFind":
  98,107 ±(99.9%) 0,580 ms/op [Average]
  (min, avg, max) = (97,590, 98,107, 98,941), stdev = 0,383
  CI (99.9%): [97,527, 98,687] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 8, patternSize = 16)

# Run progress: 56,39% complete, ETA 07:00:20
# Fork: 1 of 1
# Warmup Iteration   1: 53,155 ms/op
# Warmup Iteration   2: 46,629 ms/op
# Warmup Iteration   3: 45,556 ms/op
# Warmup Iteration   4: 45,636 ms/op
# Warmup Iteration   5: 45,855 ms/op
# Warmup Iteration   6: 45,970 ms/op
# Warmup Iteration   7: 53,019 ms/op
# Warmup Iteration   8: 45,675 ms/op
# Warmup Iteration   9: 45,705 ms/op
# Warmup Iteration  10: 45,430 ms/op
Iteration   1: 45,380 ms/op
Iteration   2: 45,733 ms/op
Iteration   3: 45,469 ms/op
Iteration   4: 46,183 ms/op
Iteration   5: 45,952 ms/op
Iteration   6: 45,875 ms/op
Iteration   7: 46,315 ms/op
Iteration   8: 46,990 ms/op
Iteration   9: 46,208 ms/op
Iteration  10: 46,208 ms/op


Result "benchmarkFind":
  46,031 ±(99.9%) 0,703 ms/op [Average]
  (min, avg, max) = (45,380, 46,031, 46,990), stdev = 0,465
  CI (99.9%): [45,328, 46,734] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 8, patternSize = 32)

# Run progress: 56,43% complete, ETA 06:59:49
# Fork: 1 of 1
# Warmup Iteration   1: 26,963 ms/op
# Warmup Iteration   2: 24,023 ms/op
# Warmup Iteration   3: 23,272 ms/op
# Warmup Iteration   4: 23,457 ms/op
# Warmup Iteration   5: 23,226 ms/op
# Warmup Iteration   6: 23,463 ms/op
# Warmup Iteration   7: 24,213 ms/op
# Warmup Iteration   8: 23,432 ms/op
# Warmup Iteration   9: 23,490 ms/op
# Warmup Iteration  10: 23,654 ms/op
Iteration   1: 23,425 ms/op
Iteration   2: 23,547 ms/op
Iteration   3: 23,585 ms/op
Iteration   4: 23,708 ms/op
Iteration   5: 23,781 ms/op
Iteration   6: 23,556 ms/op
Iteration   7: 23,661 ms/op
Iteration   8: 23,450 ms/op
Iteration   9: 23,489 ms/op
Iteration  10: 23,711 ms/op


Result "benchmarkFind":
  23,591 ±(99.9%) 0,182 ms/op [Average]
  (min, avg, max) = (23,425, 23,591, 23,781), stdev = 0,120
  CI (99.9%): [23,409, 23,773] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 8, patternSize = 64)

# Run progress: 56,48% complete, ETA 06:59:18
# Fork: 1 of 1
# Warmup Iteration   1: 15,079 ms/op
# Warmup Iteration   2: 13,385 ms/op
# Warmup Iteration   3: 12,900 ms/op
# Warmup Iteration   4: 12,844 ms/op
# Warmup Iteration   5: 12,820 ms/op
# Warmup Iteration   6: 12,905 ms/op
# Warmup Iteration   7: 13,065 ms/op
# Warmup Iteration   8: 13,197 ms/op
# Warmup Iteration   9: 13,049 ms/op
# Warmup Iteration  10: 13,117 ms/op
Iteration   1: 13,095 ms/op
Iteration   2: 13,036 ms/op
Iteration   3: 13,107 ms/op
Iteration   4: 13,058 ms/op
Iteration   5: 13,086 ms/op
Iteration   6: 13,034 ms/op
Iteration   7: 13,090 ms/op
Iteration   8: 13,127 ms/op
Iteration   9: 13,122 ms/op
Iteration  10: 13,074 ms/op


Result "benchmarkFind":
  13,083 ±(99.9%) 0,049 ms/op [Average]
  (min, avg, max) = (13,034, 13,083, 13,127), stdev = 0,033
  CI (99.9%): [13,034, 13,132] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 8, patternSize = 128)

# Run progress: 56,53% complete, ETA 06:58:47
# Fork: 1 of 1
# Warmup Iteration   1: 8,505 ms/op
# Warmup Iteration   2: 7,870 ms/op
# Warmup Iteration   3: 7,555 ms/op
# Warmup Iteration   4: 7,978 ms/op
# Warmup Iteration   5: 7,750 ms/op
# Warmup Iteration   6: 7,541 ms/op
# Warmup Iteration   7: 7,604 ms/op
# Warmup Iteration   8: 7,650 ms/op
# Warmup Iteration   9: 7,557 ms/op
# Warmup Iteration  10: 7,730 ms/op
Iteration   1: 7,652 ms/op
Iteration   2: 7,668 ms/op
Iteration   3: 7,627 ms/op
Iteration   4: 7,719 ms/op
Iteration   5: 7,617 ms/op
Iteration   6: 7,717 ms/op
Iteration   7: 7,685 ms/op
Iteration   8: 7,644 ms/op
Iteration   9: 7,657 ms/op
Iteration  10: 7,600 ms/op


Result "benchmarkFind":
  7,659 ±(99.9%) 0,060 ms/op [Average]
  (min, avg, max) = (7,600, 7,659, 7,719), stdev = 0,040
  CI (99.9%): [7,598, 7,719] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 8, patternSize = 256)

# Run progress: 56,57% complete, ETA 06:58:16
# Fork: 1 of 1
# Warmup Iteration   1: 5,621 ms/op
# Warmup Iteration   2: 5,112 ms/op
# Warmup Iteration   3: 5,026 ms/op
# Warmup Iteration   4: 5,009 ms/op
# Warmup Iteration   5: 5,024 ms/op
# Warmup Iteration   6: 5,023 ms/op
# Warmup Iteration   7: 5,050 ms/op
# Warmup Iteration   8: 5,145 ms/op
# Warmup Iteration   9: 5,124 ms/op
# Warmup Iteration  10: 5,109 ms/op
Iteration   1: 5,084 ms/op
Iteration   2: 5,115 ms/op
Iteration   3: 5,095 ms/op
Iteration   4: 5,077 ms/op
Iteration   5: 5,094 ms/op
Iteration   6: 5,094 ms/op
Iteration   7: 5,163 ms/op
Iteration   8: 5,094 ms/op
Iteration   9: 5,138 ms/op
Iteration  10: 5,082 ms/op


Result "benchmarkFind":
  5,104 ±(99.9%) 0,042 ms/op [Average]
  (min, avg, max) = (5,077, 5,104, 5,163), stdev = 0,027
  CI (99.9%): [5,062, 5,145] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 32, patternSize = 2)

# Run progress: 56,62% complete, ETA 06:57:45
# Fork: 1 of 1
# Warmup Iteration   1: 53,509 ms/op
# Warmup Iteration   2: 42,369 ms/op
# Warmup Iteration   3: 42,593 ms/op
# Warmup Iteration   4: 42,149 ms/op
# Warmup Iteration   5: 41,436 ms/op
# Warmup Iteration   6: 41,316 ms/op
# Warmup Iteration   7: 41,345 ms/op
# Warmup Iteration   8: 41,107 ms/op
# Warmup Iteration   9: 41,597 ms/op
# Warmup Iteration  10: 41,449 ms/op
Iteration   1: 41,739 ms/op
Iteration   2: 41,537 ms/op
Iteration   3: 41,389 ms/op
Iteration   4: 41,454 ms/op
Iteration   5: 41,575 ms/op
Iteration   6: 41,613 ms/op
Iteration   7: 41,828 ms/op
Iteration   8: 41,471 ms/op
Iteration   9: 41,413 ms/op
Iteration  10: 41,549 ms/op


Result "benchmarkFind":
  41,557 ±(99.9%) 0,212 ms/op [Average]
  (min, avg, max) = (41,389, 41,557, 41,828), stdev = 0,140
  CI (99.9%): [41,345, 41,769] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 32, patternSize = 4)

# Run progress: 56,66% complete, ETA 06:57:15
# Fork: 1 of 1
# Warmup Iteration   1: 454,438 ms/op
# Warmup Iteration   2: 347,118 ms/op
# Warmup Iteration   3: 342,357 ms/op
# Warmup Iteration   4: 342,693 ms/op
# Warmup Iteration   5: 341,094 ms/op
# Warmup Iteration   6: 344,952 ms/op
# Warmup Iteration   7: 346,046 ms/op
# Warmup Iteration   8: 342,379 ms/op
# Warmup Iteration   9: 344,505 ms/op
# Warmup Iteration  10: 340,814 ms/op
Iteration   1: 341,433 ms/op
Iteration   2: 343,907 ms/op
Iteration   3: 342,688 ms/op
Iteration   4: 345,013 ms/op
Iteration   5: 342,320 ms/op
Iteration   6: 341,387 ms/op
Iteration   7: 341,909 ms/op
Iteration   8: 345,346 ms/op
Iteration   9: 343,613 ms/op
Iteration  10: 342,874 ms/op


Result "benchmarkFind":
  343,049 ±(99.9%) 2,111 ms/op [Average]
  (min, avg, max) = (341,387, 343,049, 345,346), stdev = 1,397
  CI (99.9%): [340,938, 345,160] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 32, patternSize = 8)

# Run progress: 56,71% complete, ETA 06:56:44
# Fork: 1 of 1
# Warmup Iteration   1: 139,062 ms/op
# Warmup Iteration   2: 119,296 ms/op
# Warmup Iteration   3: 117,164 ms/op
# Warmup Iteration   4: 117,556 ms/op
# Warmup Iteration   5: 117,441 ms/op
# Warmup Iteration   6: 118,001 ms/op
# Warmup Iteration   7: 118,859 ms/op
# Warmup Iteration   8: 117,537 ms/op
# Warmup Iteration   9: 118,844 ms/op
# Warmup Iteration  10: 117,551 ms/op
Iteration   1: 117,774 ms/op
Iteration   2: 117,940 ms/op
Iteration   3: 117,802 ms/op
Iteration   4: 118,686 ms/op
Iteration   5: 119,152 ms/op
Iteration   6: 117,647 ms/op
Iteration   7: 117,930 ms/op
Iteration   8: 118,391 ms/op
Iteration   9: 118,757 ms/op
Iteration  10: 118,616 ms/op


Result "benchmarkFind":
  118,269 ±(99.9%) 0,781 ms/op [Average]
  (min, avg, max) = (117,647, 118,269, 119,152), stdev = 0,516
  CI (99.9%): [117,489, 119,050] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 32, patternSize = 16)

# Run progress: 56,76% complete, ETA 06:56:14
# Fork: 1 of 1
# Warmup Iteration   1: 66,803 ms/op
# Warmup Iteration   2: 59,976 ms/op
# Warmup Iteration   3: 58,292 ms/op
# Warmup Iteration   4: 57,935 ms/op
# Warmup Iteration   5: 57,845 ms/op
# Warmup Iteration   6: 58,759 ms/op
# Warmup Iteration   7: 58,893 ms/op
# Warmup Iteration   8: 59,671 ms/op
# Warmup Iteration   9: 59,671 ms/op
# Warmup Iteration  10: 59,031 ms/op
Iteration   1: 59,685 ms/op
Iteration   2: 59,942 ms/op
Iteration   3: 59,993 ms/op
Iteration   4: 59,495 ms/op
Iteration   5: 59,022 ms/op
Iteration   6: 58,831 ms/op
Iteration   7: 65,419 ms/op
Iteration   8: 57,551 ms/op
Iteration   9: 58,276 ms/op
Iteration  10: 57,969 ms/op


Result "benchmarkFind":
  59,618 ±(99.9%) 3,331 ms/op [Average]
  (min, avg, max) = (57,551, 59,618, 65,419), stdev = 2,203
  CI (99.9%): [56,287, 62,949] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 32, patternSize = 32)

# Run progress: 56,80% complete, ETA 06:55:44
# Fork: 1 of 1
# Warmup Iteration   1: 37,499 ms/op
# Warmup Iteration   2: 31,840 ms/op
# Warmup Iteration   3: 30,654 ms/op
# Warmup Iteration   4: 30,774 ms/op
# Warmup Iteration   5: 30,911 ms/op
# Warmup Iteration   6: 30,862 ms/op
# Warmup Iteration   7: 30,875 ms/op
# Warmup Iteration   8: 31,071 ms/op
# Warmup Iteration   9: 31,244 ms/op
# Warmup Iteration  10: 31,053 ms/op
Iteration   1: 31,084 ms/op
Iteration   2: 31,146 ms/op
Iteration   3: 31,161 ms/op
Iteration   4: 30,925 ms/op
Iteration   5: 31,243 ms/op
Iteration   6: 30,953 ms/op
Iteration   7: 31,263 ms/op
Iteration   8: 31,099 ms/op
Iteration   9: 31,506 ms/op
Iteration  10: 30,964 ms/op


Result "benchmarkFind":
  31,134 ±(99.9%) 0,265 ms/op [Average]
  (min, avg, max) = (30,925, 31,134, 31,506), stdev = 0,175
  CI (99.9%): [30,869, 31,399] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 32, patternSize = 64)

# Run progress: 56,85% complete, ETA 06:55:13
# Fork: 1 of 1
# Warmup Iteration   1: 21,122 ms/op
# Warmup Iteration   2: 18,153 ms/op
# Warmup Iteration   3: 18,493 ms/op
# Warmup Iteration   4: 18,713 ms/op
# Warmup Iteration   5: 18,883 ms/op
# Warmup Iteration   6: 20,681 ms/op
# Warmup Iteration   7: 18,141 ms/op
# Warmup Iteration   8: 18,183 ms/op
# Warmup Iteration   9: 18,083 ms/op
# Warmup Iteration  10: 18,058 ms/op
Iteration   1: 18,069 ms/op
Iteration   2: 18,109 ms/op
Iteration   3: 18,119 ms/op
Iteration   4: 18,089 ms/op
Iteration   5: 18,316 ms/op
Iteration   6: 18,171 ms/op
Iteration   7: 18,046 ms/op
Iteration   8: 18,118 ms/op
Iteration   9: 18,150 ms/op
Iteration  10: 18,360 ms/op


Result "benchmarkFind":
  18,155 ±(99.9%) 0,156 ms/op [Average]
  (min, avg, max) = (18,046, 18,155, 18,360), stdev = 0,104
  CI (99.9%): [17,998, 18,311] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 32, patternSize = 128)

# Run progress: 56,89% complete, ETA 06:54:43
# Fork: 1 of 1
# Warmup Iteration   1: 13,357 ms/op
# Warmup Iteration   2: 11,625 ms/op
# Warmup Iteration   3: 11,891 ms/op
# Warmup Iteration   4: 11,381 ms/op
# Warmup Iteration   5: 11,349 ms/op
# Warmup Iteration   6: 11,278 ms/op
# Warmup Iteration   7: 11,368 ms/op
# Warmup Iteration   8: 11,405 ms/op
# Warmup Iteration   9: 11,397 ms/op
# Warmup Iteration  10: 11,362 ms/op
Iteration   1: 11,462 ms/op
Iteration   2: 11,400 ms/op
Iteration   3: 11,455 ms/op
Iteration   4: 13,357 ms/op
Iteration   5: 11,283 ms/op
Iteration   6: 11,186 ms/op
Iteration   7: 11,260 ms/op
Iteration   8: 11,242 ms/op
Iteration   9: 11,207 ms/op
Iteration  10: 11,269 ms/op


Result "benchmarkFind":
  11,512 ±(99.9%) 0,991 ms/op [Average]
  (min, avg, max) = (11,186, 11,512, 13,357), stdev = 0,656
  CI (99.9%): [10,521, 12,503] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 32, patternSize = 256)

# Run progress: 56,94% complete, ETA 06:54:12
# Fork: 1 of 1
# Warmup Iteration   1: 8,756 ms/op
# Warmup Iteration   2: 7,614 ms/op
# Warmup Iteration   3: 7,545 ms/op
# Warmup Iteration   4: 7,503 ms/op
# Warmup Iteration   5: 7,526 ms/op
# Warmup Iteration   6: 7,470 ms/op
# Warmup Iteration   7: 7,470 ms/op
# Warmup Iteration   8: 7,436 ms/op
# Warmup Iteration   9: 7,443 ms/op
# Warmup Iteration  10: 7,496 ms/op
Iteration   1: 7,444 ms/op
Iteration   2: 7,416 ms/op
Iteration   3: 7,432 ms/op
Iteration   4: 7,403 ms/op
Iteration   5: 7,366 ms/op
Iteration   6: 7,409 ms/op
Iteration   7: 7,447 ms/op
Iteration   8: 7,497 ms/op
Iteration   9: 7,422 ms/op
Iteration  10: 7,431 ms/op


Result "benchmarkFind":
  7,427 ±(99.9%) 0,052 ms/op [Average]
  (min, avg, max) = (7,366, 7,427, 7,497), stdev = 0,034
  CI (99.9%): [7,375, 7,478] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 128, patternSize = 2)

# Run progress: 56,99% complete, ETA 06:53:41
# Fork: 1 of 1
# Warmup Iteration   1: 460,205 ms/op
# Warmup Iteration   2: 414,652 ms/op
# Warmup Iteration   3: 413,494 ms/op
# Warmup Iteration   4: 413,756 ms/op
# Warmup Iteration   5: 408,782 ms/op
# Warmup Iteration   6: 414,717 ms/op
# Warmup Iteration   7: 409,946 ms/op
# Warmup Iteration   8: 413,320 ms/op
# Warmup Iteration   9: 410,182 ms/op
# Warmup Iteration  10: 408,715 ms/op
Iteration   1: 411,190 ms/op
Iteration   2: 413,995 ms/op
Iteration   3: 413,354 ms/op
Iteration   4: 411,814 ms/op
Iteration   5: 409,670 ms/op
Iteration   6: 408,155 ms/op
Iteration   7: 410,242 ms/op
Iteration   8: 413,071 ms/op
Iteration   9: 408,084 ms/op
Iteration  10: 409,097 ms/op


Result "benchmarkFind":
  410,867 ±(99.9%) 3,262 ms/op [Average]
  (min, avg, max) = (408,084, 410,867, 413,995), stdev = 2,157
  CI (99.9%): [407,606, 414,129] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 128, patternSize = 4)

# Run progress: 57,03% complete, ETA 06:53:14
# Fork: 1 of 1
# Warmup Iteration   1: 722,236 ms/op
# Warmup Iteration   2: 595,169 ms/op
# Warmup Iteration   3: 572,297 ms/op
# Warmup Iteration   4: 563,350 ms/op
# Warmup Iteration   5: 564,529 ms/op
# Warmup Iteration   6: 624,897 ms/op
# Warmup Iteration   7: 569,157 ms/op
# Warmup Iteration   8: 557,698 ms/op
# Warmup Iteration   9: 560,345 ms/op
# Warmup Iteration  10: 559,083 ms/op
Iteration   1: 562,601 ms/op
Iteration   2: 559,452 ms/op
Iteration   3: 578,066 ms/op
Iteration   4: 560,455 ms/op
Iteration   5: 559,569 ms/op
Iteration   6: 556,957 ms/op
Iteration   7: 569,067 ms/op
Iteration   8: 568,664 ms/op
Iteration   9: 582,683 ms/op
Iteration  10: 568,481 ms/op


Result "benchmarkFind":
  566,599 ±(99.9%) 12,861 ms/op [Average]
  (min, avg, max) = (556,957, 566,599, 582,683), stdev = 8,507
  CI (99.9%): [553,738, 579,460] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 128, patternSize = 8)

# Run progress: 57,08% complete, ETA 06:52:45
# Fork: 1 of 1
# Warmup Iteration   1: 200,598 ms/op
# Warmup Iteration   2: 174,104 ms/op
# Warmup Iteration   3: 167,223 ms/op
# Warmup Iteration   4: 170,126 ms/op
# Warmup Iteration   5: 169,737 ms/op
# Warmup Iteration   6: 171,014 ms/op
# Warmup Iteration   7: 171,926 ms/op
# Warmup Iteration   8: 170,249 ms/op
# Warmup Iteration   9: 170,441 ms/op
# Warmup Iteration  10: 170,426 ms/op
Iteration   1: 171,341 ms/op
Iteration   2: 171,937 ms/op
Iteration   3: 170,435 ms/op
Iteration   4: 172,286 ms/op
Iteration   5: 172,756 ms/op
Iteration   6: 171,419 ms/op
Iteration   7: 173,862 ms/op
Iteration   8: 173,456 ms/op
Iteration   9: 171,282 ms/op
Iteration  10: 171,277 ms/op


Result "benchmarkFind":
  172,005 ±(99.9%) 1,633 ms/op [Average]
  (min, avg, max) = (170,435, 172,005, 173,862), stdev = 1,080
  CI (99.9%): [170,372, 173,638] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 128, patternSize = 16)

# Run progress: 57,12% complete, ETA 06:52:15
# Fork: 1 of 1
# Warmup Iteration   1: 86,737 ms/op
# Warmup Iteration   2: 78,352 ms/op
# Warmup Iteration   3: 75,271 ms/op
# Warmup Iteration   4: 76,092 ms/op
# Warmup Iteration   5: 75,450 ms/op
# Warmup Iteration   6: 76,102 ms/op
# Warmup Iteration   7: 75,979 ms/op
# Warmup Iteration   8: 76,655 ms/op
# Warmup Iteration   9: 76,718 ms/op
# Warmup Iteration  10: 76,201 ms/op
Iteration   1: 77,034 ms/op
Iteration   2: 76,650 ms/op
Iteration   3: 76,859 ms/op
Iteration   4: 76,799 ms/op
Iteration   5: 76,952 ms/op
Iteration   6: 76,505 ms/op
Iteration   7: 76,445 ms/op
Iteration   8: 76,592 ms/op
Iteration   9: 76,369 ms/op
Iteration  10: 80,078 ms/op


Result "benchmarkFind":
  77,028 ±(99.9%) 1,654 ms/op [Average]
  (min, avg, max) = (76,369, 77,028, 80,078), stdev = 1,094
  CI (99.9%): [75,374, 78,682] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 128, patternSize = 32)

# Run progress: 57,17% complete, ETA 06:51:45
# Fork: 1 of 1
# Warmup Iteration   1: 47,668 ms/op
# Warmup Iteration   2: 42,495 ms/op
# Warmup Iteration   3: 40,104 ms/op
# Warmup Iteration   4: 40,496 ms/op
# Warmup Iteration   5: 40,524 ms/op
# Warmup Iteration   6: 40,364 ms/op
# Warmup Iteration   7: 39,953 ms/op
# Warmup Iteration   8: 40,057 ms/op
# Warmup Iteration   9: 40,564 ms/op
# Warmup Iteration  10: 40,514 ms/op
Iteration   1: 40,600 ms/op
Iteration   2: 40,638 ms/op
Iteration   3: 41,075 ms/op
Iteration   4: 40,773 ms/op
Iteration   5: 40,533 ms/op
Iteration   6: 40,812 ms/op
Iteration   7: 40,706 ms/op
Iteration   8: 40,676 ms/op
Iteration   9: 40,708 ms/op
Iteration  10: 40,561 ms/op


Result "benchmarkFind":
  40,708 ±(99.9%) 0,236 ms/op [Average]
  (min, avg, max) = (40,533, 40,708, 41,075), stdev = 0,156
  CI (99.9%): [40,472, 40,944] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 128, patternSize = 64)

# Run progress: 57,22% complete, ETA 06:51:15
# Fork: 1 of 1
# Warmup Iteration   1: 31,644 ms/op
# Warmup Iteration   2: 27,238 ms/op
# Warmup Iteration   3: 27,078 ms/op
# Warmup Iteration   4: 26,902 ms/op
# Warmup Iteration   5: 26,686 ms/op
# Warmup Iteration   6: 26,972 ms/op
# Warmup Iteration   7: 26,720 ms/op
# Warmup Iteration   8: 26,746 ms/op
# Warmup Iteration   9: 26,491 ms/op
# Warmup Iteration  10: 26,666 ms/op
Iteration   1: 26,583 ms/op
Iteration   2: 26,540 ms/op
Iteration   3: 26,536 ms/op
Iteration   4: 26,541 ms/op
Iteration   5: 26,741 ms/op
Iteration   6: 26,603 ms/op
Iteration   7: 26,586 ms/op
Iteration   8: 26,556 ms/op
Iteration   9: 26,483 ms/op
Iteration  10: 26,535 ms/op


Result "benchmarkFind":
  26,570 ±(99.9%) 0,104 ms/op [Average]
  (min, avg, max) = (26,483, 26,570, 26,741), stdev = 0,069
  CI (99.9%): [26,466, 26,675] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 128, patternSize = 128)

# Run progress: 57,26% complete, ETA 06:50:44
# Fork: 1 of 1
# Warmup Iteration   1: 21,376 ms/op
# Warmup Iteration   2: 17,999 ms/op
# Warmup Iteration   3: 17,820 ms/op
# Warmup Iteration   4: 17,733 ms/op
# Warmup Iteration   5: 17,734 ms/op
# Warmup Iteration   6: 17,718 ms/op
# Warmup Iteration   7: 17,678 ms/op
# Warmup Iteration   8: 17,715 ms/op
# Warmup Iteration   9: 17,685 ms/op
# Warmup Iteration  10: 17,788 ms/op
Iteration   1: 17,715 ms/op
Iteration   2: 17,649 ms/op
Iteration   3: 17,758 ms/op
Iteration   4: 17,711 ms/op
Iteration   5: 17,678 ms/op
Iteration   6: 17,759 ms/op
Iteration   7: 20,105 ms/op
Iteration   8: 17,763 ms/op
Iteration   9: 17,816 ms/op
Iteration  10: 17,854 ms/op


Result "benchmarkFind":
  17,981 ±(99.9%) 1,132 ms/op [Average]
  (min, avg, max) = (17,649, 17,981, 20,105), stdev = 0,749
  CI (99.9%): [16,849, 19,113] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 128, patternSize = 256)

# Run progress: 57,31% complete, ETA 06:50:14
# Fork: 1 of 1
# Warmup Iteration   1: 15,442 ms/op
# Warmup Iteration   2: 13,800 ms/op
# Warmup Iteration   3: 13,756 ms/op
# Warmup Iteration   4: 13,672 ms/op
# Warmup Iteration   5: 13,658 ms/op
# Warmup Iteration   6: 13,624 ms/op
# Warmup Iteration   7: 13,644 ms/op
# Warmup Iteration   8: 13,628 ms/op
# Warmup Iteration   9: 13,649 ms/op
# Warmup Iteration  10: 13,716 ms/op
Iteration   1: 13,656 ms/op
Iteration   2: 13,689 ms/op
Iteration   3: 13,589 ms/op
Iteration   4: 13,585 ms/op
Iteration   5: 13,578 ms/op
Iteration   6: 13,561 ms/op
Iteration   7: 13,605 ms/op
Iteration   8: 13,548 ms/op
Iteration   9: 13,591 ms/op
Iteration  10: 13,606 ms/op


Result "benchmarkFind":
  13,601 ±(99.9%) 0,064 ms/op [Average]
  (min, avg, max) = (13,548, 13,601, 13,689), stdev = 0,043
  CI (99.9%): [13,536, 13,665] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 2, patternSize = 2)

# Run progress: 57,35% complete, ETA 06:49:43
# Fork: 1 of 1
# Warmup Iteration   1: 48,407 ms/op
# Warmup Iteration   2: 37,114 ms/op
# Warmup Iteration   3: 37,229 ms/op
# Warmup Iteration   4: 37,239 ms/op
# Warmup Iteration   5: 37,657 ms/op
# Warmup Iteration   6: 37,429 ms/op
# Warmup Iteration   7: 37,444 ms/op
# Warmup Iteration   8: 37,690 ms/op
# Warmup Iteration   9: 37,890 ms/op
# Warmup Iteration  10: 37,986 ms/op
Iteration   1: 37,466 ms/op
Iteration   2: 37,749 ms/op
Iteration   3: 37,723 ms/op
Iteration   4: 37,866 ms/op
Iteration   5: 37,772 ms/op
Iteration   6: 37,655 ms/op
Iteration   7: 37,450 ms/op
Iteration   8: 37,490 ms/op
Iteration   9: 37,383 ms/op
Iteration  10: 37,650 ms/op


Result "benchmarkFind":
  37,620 ±(99.9%) 0,246 ms/op [Average]
  (min, avg, max) = (37,383, 37,620, 37,866), stdev = 0,163
  CI (99.9%): [37,374, 37,867] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 2, patternSize = 4)

# Run progress: 57,40% complete, ETA 06:49:12
# Fork: 1 of 1
# Warmup Iteration   1: 25,295 ms/op
# Warmup Iteration   2: 20,889 ms/op
# Warmup Iteration   3: 21,164 ms/op
# Warmup Iteration   4: 21,420 ms/op
# Warmup Iteration   5: 21,250 ms/op
# Warmup Iteration   6: 21,226 ms/op
# Warmup Iteration   7: 21,153 ms/op
# Warmup Iteration   8: 21,028 ms/op
# Warmup Iteration   9: 21,001 ms/op
# Warmup Iteration  10: 21,028 ms/op
Iteration   1: 21,031 ms/op
Iteration   2: 20,966 ms/op
Iteration   3: 21,144 ms/op
Iteration   4: 22,690 ms/op
Iteration   5: 21,530 ms/op
Iteration   6: 20,794 ms/op
Iteration   7: 21,063 ms/op
Iteration   8: 21,060 ms/op
Iteration   9: 21,194 ms/op
Iteration  10: 20,800 ms/op


Result "benchmarkFind":
  21,227 ±(99.9%) 0,839 ms/op [Average]
  (min, avg, max) = (20,794, 21,227, 22,690), stdev = 0,555
  CI (99.9%): [20,388, 22,066] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 2, patternSize = 8)

# Run progress: 57,44% complete, ETA 06:48:42
# Fork: 1 of 1
# Warmup Iteration   1: 13,232 ms/op
# Warmup Iteration   2: 11,465 ms/op
# Warmup Iteration   3: 11,463 ms/op
# Warmup Iteration   4: 11,496 ms/op
# Warmup Iteration   5: 11,500 ms/op
# Warmup Iteration   6: 11,683 ms/op
# Warmup Iteration   7: 11,777 ms/op
# Warmup Iteration   8: 11,747 ms/op
# Warmup Iteration   9: 11,730 ms/op
# Warmup Iteration  10: 11,713 ms/op
Iteration   1: 11,713 ms/op
Iteration   2: 11,664 ms/op
Iteration   3: 11,680 ms/op
Iteration   4: 11,711 ms/op
Iteration   5: 11,745 ms/op
Iteration   6: 11,729 ms/op
Iteration   7: 11,787 ms/op
Iteration   8: 11,758 ms/op
Iteration   9: 11,734 ms/op
Iteration  10: 11,834 ms/op


Result "benchmarkFind":
  11,735 ±(99.9%) 0,075 ms/op [Average]
  (min, avg, max) = (11,664, 11,735, 11,834), stdev = 0,050
  CI (99.9%): [11,660, 11,811] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 2, patternSize = 16)

# Run progress: 57,49% complete, ETA 06:48:11
# Fork: 1 of 1
# Warmup Iteration   1: 6,830 ms/op
# Warmup Iteration   2: 5,931 ms/op
# Warmup Iteration   3: 5,772 ms/op
# Warmup Iteration   4: 5,728 ms/op
# Warmup Iteration   5: 5,705 ms/op
# Warmup Iteration   6: 5,763 ms/op
# Warmup Iteration   7: 5,749 ms/op
# Warmup Iteration   8: 5,771 ms/op
# Warmup Iteration   9: 5,749 ms/op
# Warmup Iteration  10: 5,762 ms/op
Iteration   1: 5,754 ms/op
Iteration   2: 5,757 ms/op
Iteration   3: 5,789 ms/op
Iteration   4: 5,755 ms/op
Iteration   5: 5,785 ms/op
Iteration   6: 5,767 ms/op
Iteration   7: 5,782 ms/op
Iteration   8: 5,749 ms/op
Iteration   9: 5,747 ms/op
Iteration  10: 5,743 ms/op


Result "benchmarkFind":
  5,763 ±(99.9%) 0,026 ms/op [Average]
  (min, avg, max) = (5,743, 5,763, 5,789), stdev = 0,017
  CI (99.9%): [5,737, 5,788] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 2, patternSize = 32)

# Run progress: 57,54% complete, ETA 06:47:40
# Fork: 1 of 1
# Warmup Iteration   1: 3,458 ms/op
# Warmup Iteration   2: 2,949 ms/op
# Warmup Iteration   3: 2,945 ms/op
# Warmup Iteration   4: 2,930 ms/op
# Warmup Iteration   5: 2,959 ms/op
# Warmup Iteration   6: 2,975 ms/op
# Warmup Iteration   7: 2,987 ms/op
# Warmup Iteration   8: 2,966 ms/op
# Warmup Iteration   9: 2,985 ms/op
# Warmup Iteration  10: 2,977 ms/op
Iteration   1: 2,974 ms/op
Iteration   2: 2,974 ms/op
Iteration   3: 3,317 ms/op
Iteration   4: 2,917 ms/op
Iteration   5: 2,928 ms/op
Iteration   6: 2,945 ms/op
Iteration   7: 2,991 ms/op
Iteration   8: 2,976 ms/op
Iteration   9: 2,958 ms/op
Iteration  10: 2,996 ms/op


Result "benchmarkFind":
  2,998 ±(99.9%) 0,174 ms/op [Average]
  (min, avg, max) = (2,917, 2,998, 3,317), stdev = 0,115
  CI (99.9%): [2,823, 3,172] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 2, patternSize = 64)

# Run progress: 57,58% complete, ETA 06:47:09
# Fork: 1 of 1
# Warmup Iteration   1: 1,898 ms/op
# Warmup Iteration   2: 1,683 ms/op
# Warmup Iteration   3: 1,639 ms/op
# Warmup Iteration   4: 1,645 ms/op
# Warmup Iteration   5: 1,656 ms/op
# Warmup Iteration   6: 1,658 ms/op
# Warmup Iteration   7: 1,668 ms/op
# Warmup Iteration   8: 1,673 ms/op
# Warmup Iteration   9: 1,667 ms/op
# Warmup Iteration  10: 1,673 ms/op
Iteration   1: 1,668 ms/op
Iteration   2: 1,703 ms/op
Iteration   3: 1,660 ms/op
Iteration   4: 1,668 ms/op
Iteration   5: 1,668 ms/op
Iteration   6: 1,681 ms/op
Iteration   7: 1,671 ms/op
Iteration   8: 1,669 ms/op
Iteration   9: 1,664 ms/op
Iteration  10: 1,675 ms/op


Result "benchmarkFind":
  1,673 ±(99.9%) 0,018 ms/op [Average]
  (min, avg, max) = (1,660, 1,673, 1,703), stdev = 0,012
  CI (99.9%): [1,655, 1,691] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 2, patternSize = 128)

# Run progress: 57,63% complete, ETA 06:46:38
# Fork: 1 of 1
# Warmup Iteration   1: 0,954 ms/op
# Warmup Iteration   2: 0,833 ms/op
# Warmup Iteration   3: 0,835 ms/op
# Warmup Iteration   4: 0,844 ms/op
# Warmup Iteration   5: 0,847 ms/op
# Warmup Iteration   6: 0,846 ms/op
# Warmup Iteration   7: 0,837 ms/op
# Warmup Iteration   8: 0,846 ms/op
# Warmup Iteration   9: 0,839 ms/op
# Warmup Iteration  10: 0,844 ms/op
Iteration   1: 0,837 ms/op
Iteration   2: 0,844 ms/op
Iteration   3: 0,838 ms/op
Iteration   4: 0,839 ms/op
Iteration   5: 0,843 ms/op
Iteration   6: 0,836 ms/op
Iteration   7: 0,830 ms/op
Iteration   8: 0,836 ms/op
Iteration   9: 0,842 ms/op
Iteration  10: 0,836 ms/op


Result "benchmarkFind":
  0,838 ±(99.9%) 0,006 ms/op [Average]
  (min, avg, max) = (0,830, 0,838, 0,844), stdev = 0,004
  CI (99.9%): [0,832, 0,844] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 2, patternSize = 256)

# Run progress: 57,67% complete, ETA 06:46:08
# Fork: 1 of 1
# Warmup Iteration   1: 0,563 ms/op
# Warmup Iteration   2: 0,497 ms/op
# Warmup Iteration   3: 0,482 ms/op
# Warmup Iteration   4: 0,484 ms/op
# Warmup Iteration   5: 0,484 ms/op
# Warmup Iteration   6: 0,484 ms/op
# Warmup Iteration   7: 0,489 ms/op
# Warmup Iteration   8: 0,490 ms/op
# Warmup Iteration   9: 0,490 ms/op
# Warmup Iteration  10: 0,492 ms/op
Iteration   1: 0,553 ms/op
Iteration   2: 0,479 ms/op
Iteration   3: 0,479 ms/op
Iteration   4: 0,478 ms/op
Iteration   5: 0,485 ms/op
Iteration   6: 0,483 ms/op
Iteration   7: 0,483 ms/op
Iteration   8: 0,491 ms/op
Iteration   9: 0,489 ms/op
Iteration  10: 0,489 ms/op


Result "benchmarkFind":
  0,491 ±(99.9%) 0,034 ms/op [Average]
  (min, avg, max) = (0,478, 0,491, 0,553), stdev = 0,022
  CI (99.9%): [0,457, 0,524] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 8, patternSize = 2)

# Run progress: 57,72% complete, ETA 06:45:37
# Fork: 1 of 1
# Warmup Iteration   1: 64,785 ms/op
# Warmup Iteration   2: 50,286 ms/op
# Warmup Iteration   3: 49,329 ms/op
# Warmup Iteration   4: 48,840 ms/op
# Warmup Iteration   5: 48,626 ms/op
# Warmup Iteration   6: 48,871 ms/op
# Warmup Iteration   7: 49,371 ms/op
# Warmup Iteration   8: 49,315 ms/op
# Warmup Iteration   9: 49,122 ms/op
# Warmup Iteration  10: 49,116 ms/op
Iteration   1: 49,926 ms/op
Iteration   2: 49,706 ms/op
Iteration   3: 49,202 ms/op
Iteration   4: 49,536 ms/op
Iteration   5: 49,185 ms/op
Iteration   6: 49,309 ms/op
Iteration   7: 49,416 ms/op
Iteration   8: 48,970 ms/op
Iteration   9: 49,644 ms/op
Iteration  10: 49,361 ms/op


Result "benchmarkFind":
  49,426 ±(99.9%) 0,428 ms/op [Average]
  (min, avg, max) = (48,970, 49,426, 49,926), stdev = 0,283
  CI (99.9%): [48,997, 49,854] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 8, patternSize = 4)

# Run progress: 57,77% complete, ETA 06:45:06
# Fork: 1 of 1
# Warmup Iteration   1: 33,465 ms/op
# Warmup Iteration   2: 30,411 ms/op
# Warmup Iteration   3: 29,500 ms/op
# Warmup Iteration   4: 29,751 ms/op
# Warmup Iteration   5: 29,976 ms/op
# Warmup Iteration   6: 29,881 ms/op
# Warmup Iteration   7: 29,717 ms/op
# Warmup Iteration   8: 30,120 ms/op
# Warmup Iteration   9: 30,095 ms/op
# Warmup Iteration  10: 29,907 ms/op
Iteration   1: 29,855 ms/op
Iteration   2: 29,956 ms/op
Iteration   3: 29,983 ms/op
Iteration   4: 30,187 ms/op
Iteration   5: 29,837 ms/op
Iteration   6: 30,129 ms/op
Iteration   7: 29,778 ms/op
Iteration   8: 29,958 ms/op
Iteration   9: 29,893 ms/op
Iteration  10: 29,791 ms/op


Result "benchmarkFind":
  29,937 ±(99.9%) 0,206 ms/op [Average]
  (min, avg, max) = (29,778, 29,937, 30,187), stdev = 0,136
  CI (99.9%): [29,731, 30,143] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 8, patternSize = 8)

# Run progress: 57,81% complete, ETA 06:44:36
# Fork: 1 of 1
# Warmup Iteration   1: 15,646 ms/op
# Warmup Iteration   2: 13,965 ms/op
# Warmup Iteration   3: 13,632 ms/op
# Warmup Iteration   4: 13,729 ms/op
# Warmup Iteration   5: 13,482 ms/op
# Warmup Iteration   6: 13,655 ms/op
# Warmup Iteration   7: 13,683 ms/op
# Warmup Iteration   8: 15,556 ms/op
# Warmup Iteration   9: 13,529 ms/op
# Warmup Iteration  10: 13,454 ms/op
Iteration   1: 13,628 ms/op
Iteration   2: 13,464 ms/op
Iteration   3: 13,524 ms/op
Iteration   4: 13,673 ms/op
Iteration   5: 13,841 ms/op
Iteration   6: 13,803 ms/op
Iteration   7: 13,699 ms/op
Iteration   8: 13,774 ms/op
Iteration   9: 13,676 ms/op
Iteration  10: 13,660 ms/op


Result "benchmarkFind":
  13,674 ±(99.9%) 0,177 ms/op [Average]
  (min, avg, max) = (13,464, 13,674, 13,841), stdev = 0,117
  CI (99.9%): [13,497, 13,852] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 8, patternSize = 16)

# Run progress: 57,86% complete, ETA 06:44:05
# Fork: 1 of 1
# Warmup Iteration   1: 7,901 ms/op
# Warmup Iteration   2: 6,996 ms/op
# Warmup Iteration   3: 6,854 ms/op
# Warmup Iteration   4: 6,886 ms/op
# Warmup Iteration   5: 6,907 ms/op
# Warmup Iteration   6: 6,915 ms/op
# Warmup Iteration   7: 6,943 ms/op
# Warmup Iteration   8: 6,954 ms/op
# Warmup Iteration   9: 6,906 ms/op
# Warmup Iteration  10: 7,061 ms/op
Iteration   1: 6,971 ms/op
Iteration   2: 6,939 ms/op
Iteration   3: 6,925 ms/op
Iteration   4: 6,904 ms/op
Iteration   5: 6,941 ms/op
Iteration   6: 6,968 ms/op
Iteration   7: 6,937 ms/op
Iteration   8: 6,986 ms/op
Iteration   9: 6,936 ms/op
Iteration  10: 6,920 ms/op


Result "benchmarkFind":
  6,943 ±(99.9%) 0,038 ms/op [Average]
  (min, avg, max) = (6,904, 6,943, 6,986), stdev = 0,025
  CI (99.9%): [6,904, 6,981] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 8, patternSize = 32)

# Run progress: 57,90% complete, ETA 06:43:35
# Fork: 1 of 1
# Warmup Iteration   1: 3,981 ms/op
# Warmup Iteration   2: 3,625 ms/op
# Warmup Iteration   3: 3,429 ms/op
# Warmup Iteration   4: 3,470 ms/op
# Warmup Iteration   5: 3,461 ms/op
# Warmup Iteration   6: 3,449 ms/op
# Warmup Iteration   7: 3,472 ms/op
# Warmup Iteration   8: 3,487 ms/op
# Warmup Iteration   9: 3,473 ms/op
# Warmup Iteration  10: 3,469 ms/op
Iteration   1: 3,465 ms/op
Iteration   2: 3,554 ms/op
Iteration   3: 3,447 ms/op
Iteration   4: 3,463 ms/op
Iteration   5: 3,480 ms/op
Iteration   6: 3,480 ms/op
Iteration   7: 3,476 ms/op
Iteration   8: 3,482 ms/op
Iteration   9: 3,484 ms/op
Iteration  10: 3,492 ms/op


Result "benchmarkFind":
  3,482 ±(99.9%) 0,043 ms/op [Average]
  (min, avg, max) = (3,447, 3,482, 3,554), stdev = 0,028
  CI (99.9%): [3,440, 3,525] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 8, patternSize = 64)

# Run progress: 57,95% complete, ETA 06:43:04
# Fork: 1 of 1
# Warmup Iteration   1: 2,113 ms/op
# Warmup Iteration   2: 1,877 ms/op
# Warmup Iteration   3: 1,845 ms/op
# Warmup Iteration   4: 1,836 ms/op
# Warmup Iteration   5: 1,853 ms/op
# Warmup Iteration   6: 2,003 ms/op
# Warmup Iteration   7: 1,930 ms/op
# Warmup Iteration   8: 1,853 ms/op
# Warmup Iteration   9: 1,840 ms/op
# Warmup Iteration  10: 1,851 ms/op
Iteration   1: 1,877 ms/op
Iteration   2: 1,859 ms/op
Iteration   3: 1,868 ms/op
Iteration   4: 1,875 ms/op
Iteration   5: 1,867 ms/op
Iteration   6: 1,856 ms/op
Iteration   7: 1,877 ms/op
Iteration   8: 1,864 ms/op
Iteration   9: 1,870 ms/op
Iteration  10: 1,873 ms/op


Result "benchmarkFind":
  1,869 ±(99.9%) 0,011 ms/op [Average]
  (min, avg, max) = (1,856, 1,869, 1,877), stdev = 0,007
  CI (99.9%): [1,858, 1,879] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 8, patternSize = 128)

# Run progress: 58,00% complete, ETA 06:42:33
# Fork: 1 of 1
# Warmup Iteration   1: 1,163 ms/op
# Warmup Iteration   2: 1,031 ms/op
# Warmup Iteration   3: 1,008 ms/op
# Warmup Iteration   4: 1,014 ms/op
# Warmup Iteration   5: 1,011 ms/op
# Warmup Iteration   6: 1,009 ms/op
# Warmup Iteration   7: 1,009 ms/op
# Warmup Iteration   8: 1,016 ms/op
# Warmup Iteration   9: 1,015 ms/op
# Warmup Iteration  10: 1,014 ms/op
Iteration   1: 1,015 ms/op
Iteration   2: 1,019 ms/op
Iteration   3: 1,017 ms/op
Iteration   4: 1,022 ms/op
Iteration   5: 1,022 ms/op
Iteration   6: 1,016 ms/op
Iteration   7: 1,018 ms/op
Iteration   8: 1,020 ms/op
Iteration   9: 1,011 ms/op
Iteration  10: 1,016 ms/op


Result "benchmarkFind":
  1,018 ±(99.9%) 0,005 ms/op [Average]
  (min, avg, max) = (1,011, 1,018, 1,022), stdev = 0,003
  CI (99.9%): [1,012, 1,023] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 8, patternSize = 256)

# Run progress: 58,04% complete, ETA 06:42:03
# Fork: 1 of 1
# Warmup Iteration   1: 0,738 ms/op
# Warmup Iteration   2: 0,639 ms/op
# Warmup Iteration   3: 0,632 ms/op
# Warmup Iteration   4: 0,632 ms/op
# Warmup Iteration   5: 0,624 ms/op
# Warmup Iteration   6: 0,633 ms/op
# Warmup Iteration   7: 0,631 ms/op
# Warmup Iteration   8: 0,632 ms/op
# Warmup Iteration   9: 0,633 ms/op
# Warmup Iteration  10: 0,644 ms/op
Iteration   1: 0,638 ms/op
Iteration   2: 0,636 ms/op
Iteration   3: 0,641 ms/op
Iteration   4: 0,642 ms/op
Iteration   5: 0,640 ms/op
Iteration   6: 0,642 ms/op
Iteration   7: 0,642 ms/op
Iteration   8: 0,637 ms/op
Iteration   9: 0,639 ms/op
Iteration  10: 0,639 ms/op


Result "benchmarkFind":
  0,640 ±(99.9%) 0,003 ms/op [Average]
  (min, avg, max) = (0,636, 0,640, 0,642), stdev = 0,002
  CI (99.9%): [0,636, 0,643] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 32, patternSize = 2)

# Run progress: 58,09% complete, ETA 06:41:32
# Fork: 1 of 1
# Warmup Iteration   1: 102,735 ms/op
# Warmup Iteration   2: 83,751 ms/op
# Warmup Iteration   3: 80,154 ms/op
# Warmup Iteration   4: 80,711 ms/op
# Warmup Iteration   5: 89,226 ms/op
# Warmup Iteration   6: 81,269 ms/op
# Warmup Iteration   7: 81,585 ms/op
# Warmup Iteration   8: 81,992 ms/op
# Warmup Iteration   9: 82,931 ms/op
# Warmup Iteration  10: 82,237 ms/op
Iteration   1: 81,478 ms/op
Iteration   2: 82,093 ms/op
Iteration   3: 81,841 ms/op
Iteration   4: 82,816 ms/op
Iteration   5: 81,568 ms/op
Iteration   6: 81,292 ms/op
Iteration   7: 81,667 ms/op
Iteration   8: 81,342 ms/op
Iteration   9: 81,846 ms/op
Iteration  10: 81,605 ms/op


Result "benchmarkFind":
  81,755 ±(99.9%) 0,673 ms/op [Average]
  (min, avg, max) = (81,292, 81,755, 82,816), stdev = 0,445
  CI (99.9%): [81,082, 82,427] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 32, patternSize = 4)

# Run progress: 58,13% complete, ETA 06:41:02
# Fork: 1 of 1
# Warmup Iteration   1: 45,429 ms/op
# Warmup Iteration   2: 38,347 ms/op
# Warmup Iteration   3: 38,270 ms/op
# Warmup Iteration   4: 38,313 ms/op
# Warmup Iteration   5: 38,905 ms/op
# Warmup Iteration   6: 38,984 ms/op
# Warmup Iteration   7: 39,330 ms/op
# Warmup Iteration   8: 39,191 ms/op
# Warmup Iteration   9: 39,243 ms/op
# Warmup Iteration  10: 38,937 ms/op
Iteration   1: 38,770 ms/op
Iteration   2: 39,137 ms/op
Iteration   3: 38,903 ms/op
Iteration   4: 44,081 ms/op
Iteration   5: 39,314 ms/op
Iteration   6: 38,996 ms/op
Iteration   7: 40,202 ms/op
Iteration   8: 40,205 ms/op
Iteration   9: 40,216 ms/op
Iteration  10: 40,201 ms/op


Result "benchmarkFind":
  40,003 ±(99.9%) 2,351 ms/op [Average]
  (min, avg, max) = (38,770, 40,003, 44,081), stdev = 1,555
  CI (99.9%): [37,651, 42,354] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 32, patternSize = 8)

# Run progress: 58,18% complete, ETA 06:40:32
# Fork: 1 of 1
# Warmup Iteration   1: 19,265 ms/op
# Warmup Iteration   2: 17,041 ms/op
# Warmup Iteration   3: 16,832 ms/op
# Warmup Iteration   4: 16,976 ms/op
# Warmup Iteration   5: 16,950 ms/op
# Warmup Iteration   6: 17,038 ms/op
# Warmup Iteration   7: 17,072 ms/op
# Warmup Iteration   8: 17,126 ms/op
# Warmup Iteration   9: 17,186 ms/op
# Warmup Iteration  10: 16,984 ms/op
Iteration   1: 16,977 ms/op
Iteration   2: 17,133 ms/op
Iteration   3: 17,117 ms/op
Iteration   4: 17,093 ms/op
Iteration   5: 17,073 ms/op
Iteration   6: 16,936 ms/op
Iteration   7: 16,971 ms/op
Iteration   8: 16,985 ms/op
Iteration   9: 16,982 ms/op
Iteration  10: 16,965 ms/op


Result "benchmarkFind":
  17,023 ±(99.9%) 0,110 ms/op [Average]
  (min, avg, max) = (16,936, 17,023, 17,133), stdev = 0,073
  CI (99.9%): [16,914, 17,133] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 32, patternSize = 16)

# Run progress: 58,23% complete, ETA 06:40:01
# Fork: 1 of 1
# Warmup Iteration   1: 9,281 ms/op
# Warmup Iteration   2: 8,803 ms/op
# Warmup Iteration   3: 7,775 ms/op
# Warmup Iteration   4: 7,846 ms/op
# Warmup Iteration   5: 7,777 ms/op
# Warmup Iteration   6: 7,767 ms/op
# Warmup Iteration   7: 7,860 ms/op
# Warmup Iteration   8: 7,851 ms/op
# Warmup Iteration   9: 7,964 ms/op
# Warmup Iteration  10: 7,960 ms/op
Iteration   1: 7,859 ms/op
Iteration   2: 7,885 ms/op
Iteration   3: 7,860 ms/op
Iteration   4: 7,845 ms/op
Iteration   5: 7,836 ms/op
Iteration   6: 7,859 ms/op
Iteration   7: 7,906 ms/op
Iteration   8: 7,889 ms/op
Iteration   9: 7,913 ms/op
Iteration  10: 7,857 ms/op


Result "benchmarkFind":
  7,871 ±(99.9%) 0,039 ms/op [Average]
  (min, avg, max) = (7,836, 7,871, 7,913), stdev = 0,026
  CI (99.9%): [7,832, 7,910] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 32, patternSize = 32)

# Run progress: 58,27% complete, ETA 06:39:31
# Fork: 1 of 1
# Warmup Iteration   1: 4,968 ms/op
# Warmup Iteration   2: 4,301 ms/op
# Warmup Iteration   3: 4,177 ms/op
# Warmup Iteration   4: 4,212 ms/op
# Warmup Iteration   5: 4,230 ms/op
# Warmup Iteration   6: 4,200 ms/op
# Warmup Iteration   7: 4,213 ms/op
# Warmup Iteration   8: 4,261 ms/op
# Warmup Iteration   9: 4,273 ms/op
# Warmup Iteration  10: 4,293 ms/op
Iteration   1: 4,283 ms/op
Iteration   2: 4,257 ms/op
Iteration   3: 4,271 ms/op
Iteration   4: 4,269 ms/op
Iteration   5: 4,272 ms/op
Iteration   6: 4,270 ms/op
Iteration   7: 4,247 ms/op
Iteration   8: 4,264 ms/op
Iteration   9: 4,258 ms/op
Iteration  10: 4,260 ms/op


Result "benchmarkFind":
  4,265 ±(99.9%) 0,015 ms/op [Average]
  (min, avg, max) = (4,247, 4,265, 4,283), stdev = 0,010
  CI (99.9%): [4,250, 4,280] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 32, patternSize = 64)

# Run progress: 58,32% complete, ETA 06:39:00
# Fork: 1 of 1
# Warmup Iteration   1: 2,814 ms/op
# Warmup Iteration   2: 2,454 ms/op
# Warmup Iteration   3: 2,399 ms/op
# Warmup Iteration   4: 2,404 ms/op
# Warmup Iteration   5: 2,383 ms/op
# Warmup Iteration   6: 2,379 ms/op
# Warmup Iteration   7: 2,378 ms/op
# Warmup Iteration   8: 2,390 ms/op
# Warmup Iteration   9: 2,423 ms/op
# Warmup Iteration  10: 2,422 ms/op
Iteration   1: 2,406 ms/op
Iteration   2: 2,417 ms/op
Iteration   3: 2,437 ms/op
Iteration   4: 2,428 ms/op
Iteration   5: 2,417 ms/op
Iteration   6: 2,408 ms/op
Iteration   7: 2,431 ms/op
Iteration   8: 2,414 ms/op
Iteration   9: 2,424 ms/op
Iteration  10: 2,638 ms/op


Result "benchmarkFind":
  2,442 ±(99.9%) 0,105 ms/op [Average]
  (min, avg, max) = (2,406, 2,442, 2,638), stdev = 0,070
  CI (99.9%): [2,337, 2,547] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 32, patternSize = 128)

# Run progress: 58,36% complete, ETA 06:38:30
# Fork: 1 of 1
# Warmup Iteration   1: 1,816 ms/op
# Warmup Iteration   2: 1,547 ms/op
# Warmup Iteration   3: 1,489 ms/op
# Warmup Iteration   4: 1,485 ms/op
# Warmup Iteration   5: 1,476 ms/op
# Warmup Iteration   6: 1,482 ms/op
# Warmup Iteration   7: 1,493 ms/op
# Warmup Iteration   8: 1,488 ms/op
# Warmup Iteration   9: 1,501 ms/op
# Warmup Iteration  10: 1,508 ms/op
Iteration   1: 1,514 ms/op
Iteration   2: 1,518 ms/op
Iteration   3: 1,524 ms/op
Iteration   4: 1,515 ms/op
Iteration   5: 1,521 ms/op
Iteration   6: 1,509 ms/op
Iteration   7: 1,514 ms/op
Iteration   8: 1,519 ms/op
Iteration   9: 1,517 ms/op
Iteration  10: 1,515 ms/op


Result "benchmarkFind":
  1,517 ±(99.9%) 0,006 ms/op [Average]
  (min, avg, max) = (1,509, 1,517, 1,524), stdev = 0,004
  CI (99.9%): [1,510, 1,523] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 32, patternSize = 256)

# Run progress: 58,41% complete, ETA 06:37:59
# Fork: 1 of 1
# Warmup Iteration   1: 1,287 ms/op
# Warmup Iteration   2: 1,078 ms/op
# Warmup Iteration   3: 1,033 ms/op
# Warmup Iteration   4: 1,010 ms/op
# Warmup Iteration   5: 1,013 ms/op
# Warmup Iteration   6: 1,017 ms/op
# Warmup Iteration   7: 1,013 ms/op
# Warmup Iteration   8: 1,022 ms/op
# Warmup Iteration   9: 1,021 ms/op
# Warmup Iteration  10: 1,026 ms/op
Iteration   1: 1,018 ms/op
Iteration   2: 1,041 ms/op
Iteration   3: 1,041 ms/op
Iteration   4: 1,049 ms/op
Iteration   5: 1,059 ms/op
Iteration   6: 1,051 ms/op
Iteration   7: 1,049 ms/op
Iteration   8: 1,049 ms/op
Iteration   9: 1,050 ms/op
Iteration  10: 1,052 ms/op


Result "benchmarkFind":
  1,046 ±(99.9%) 0,017 ms/op [Average]
  (min, avg, max) = (1,018, 1,046, 1,059), stdev = 0,011
  CI (99.9%): [1,029, 1,063] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 128, patternSize = 2)

# Run progress: 58,46% complete, ETA 06:37:29
# Fork: 1 of 1
# Warmup Iteration   1: 631,975 ms/op
# Warmup Iteration   2: 517,373 ms/op
# Warmup Iteration   3: 512,532 ms/op
# Warmup Iteration   4: 510,740 ms/op
# Warmup Iteration   5: 519,300 ms/op
# Warmup Iteration   6: 506,303 ms/op
# Warmup Iteration   7: 507,670 ms/op
# Warmup Iteration   8: 504,574 ms/op
# Warmup Iteration   9: 514,780 ms/op
# Warmup Iteration  10: 504,117 ms/op
Iteration   1: 510,097 ms/op
Iteration   2: 504,912 ms/op
Iteration   3: 505,751 ms/op
Iteration   4: 506,281 ms/op
Iteration   5: 504,897 ms/op
Iteration   6: 508,177 ms/op
Iteration   7: 504,124 ms/op
Iteration   8: 576,248 ms/op
Iteration   9: 516,224 ms/op
Iteration  10: 514,355 ms/op


Result "benchmarkFind":
  515,107 ±(99.9%) 33,075 ms/op [Average]
  (min, avg, max) = (504,124, 515,107, 576,248), stdev = 21,877
  CI (99.9%): [482,032, 548,181] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 128, patternSize = 4)

# Run progress: 58,50% complete, ETA 06:36:59
# Fork: 1 of 1
# Warmup Iteration   1: 62,971 ms/op
# Warmup Iteration   2: 52,855 ms/op
# Warmup Iteration   3: 52,571 ms/op
# Warmup Iteration   4: 53,171 ms/op
# Warmup Iteration   5: 53,288 ms/op
# Warmup Iteration   6: 52,942 ms/op
# Warmup Iteration   7: 53,138 ms/op
# Warmup Iteration   8: 53,454 ms/op
# Warmup Iteration   9: 53,054 ms/op
# Warmup Iteration  10: 53,435 ms/op
Iteration   1: 52,980 ms/op
Iteration   2: 52,644 ms/op
Iteration   3: 53,204 ms/op
Iteration   4: 53,769 ms/op
Iteration   5: 52,740 ms/op
Iteration   6: 53,680 ms/op
Iteration   7: 53,997 ms/op
Iteration   8: 53,789 ms/op
Iteration   9: 53,831 ms/op
Iteration  10: 53,857 ms/op


Result "benchmarkFind":
  53,449 ±(99.9%) 0,767 ms/op [Average]
  (min, avg, max) = (52,644, 53,449, 53,997), stdev = 0,507
  CI (99.9%): [52,682, 54,216] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 128, patternSize = 8)

# Run progress: 58,55% complete, ETA 06:36:28
# Fork: 1 of 1
# Warmup Iteration   1: 24,658 ms/op
# Warmup Iteration   2: 20,738 ms/op
# Warmup Iteration   3: 20,695 ms/op
# Warmup Iteration   4: 20,928 ms/op
# Warmup Iteration   5: 21,124 ms/op
# Warmup Iteration   6: 20,675 ms/op
# Warmup Iteration   7: 20,689 ms/op
# Warmup Iteration   8: 20,807 ms/op
# Warmup Iteration   9: 20,923 ms/op
# Warmup Iteration  10: 21,083 ms/op
Iteration   1: 21,097 ms/op
Iteration   2: 20,726 ms/op
Iteration   3: 20,996 ms/op
Iteration   4: 20,990 ms/op
Iteration   5: 20,923 ms/op
Iteration   6: 20,871 ms/op
Iteration   7: 21,047 ms/op
Iteration   8: 20,728 ms/op
Iteration   9: 21,090 ms/op
Iteration  10: 20,899 ms/op


Result "benchmarkFind":
  20,937 ±(99.9%) 0,203 ms/op [Average]
  (min, avg, max) = (20,726, 20,937, 21,097), stdev = 0,134
  CI (99.9%): [20,734, 21,140] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 128, patternSize = 16)

# Run progress: 58,59% complete, ETA 06:35:58
# Fork: 1 of 1
# Warmup Iteration   1: 12,439 ms/op
# Warmup Iteration   2: 10,896 ms/op
# Warmup Iteration   3: 10,916 ms/op
# Warmup Iteration   4: 10,913 ms/op
# Warmup Iteration   5: 11,030 ms/op
# Warmup Iteration   6: 11,169 ms/op
# Warmup Iteration   7: 10,989 ms/op
# Warmup Iteration   8: 10,981 ms/op
# Warmup Iteration   9: 11,140 ms/op
# Warmup Iteration  10: 11,050 ms/op
Iteration   1: 11,009 ms/op
Iteration   2: 10,912 ms/op
Iteration   3: 10,844 ms/op
Iteration   4: 10,975 ms/op
Iteration   5: 11,865 ms/op
Iteration   6: 11,422 ms/op
Iteration   7: 11,154 ms/op
Iteration   8: 10,844 ms/op
Iteration   9: 10,853 ms/op
Iteration  10: 11,005 ms/op


Result "benchmarkFind":
  11,088 ±(99.9%) 0,491 ms/op [Average]
  (min, avg, max) = (10,844, 11,088, 11,865), stdev = 0,325
  CI (99.9%): [10,597, 11,579] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 128, patternSize = 32)

# Run progress: 58,64% complete, ETA 06:35:28
# Fork: 1 of 1
# Warmup Iteration   1: 6,878 ms/op
# Warmup Iteration   2: 5,634 ms/op
# Warmup Iteration   3: 5,568 ms/op
# Warmup Iteration   4: 5,643 ms/op
# Warmup Iteration   5: 5,637 ms/op
# Warmup Iteration   6: 5,614 ms/op
# Warmup Iteration   7: 5,662 ms/op
# Warmup Iteration   8: 5,707 ms/op
# Warmup Iteration   9: 5,681 ms/op
# Warmup Iteration  10: 5,708 ms/op
Iteration   1: 5,664 ms/op
Iteration   2: 5,679 ms/op
Iteration   3: 5,680 ms/op
Iteration   4: 5,668 ms/op
Iteration   5: 5,648 ms/op
Iteration   6: 5,670 ms/op
Iteration   7: 5,674 ms/op
Iteration   8: 5,660 ms/op
Iteration   9: 5,708 ms/op
Iteration  10: 5,675 ms/op


Result "benchmarkFind":
  5,673 ±(99.9%) 0,024 ms/op [Average]
  (min, avg, max) = (5,648, 5,673, 5,708), stdev = 0,016
  CI (99.9%): [5,649, 5,696] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 128, patternSize = 64)

# Run progress: 58,69% complete, ETA 06:34:57
# Fork: 1 of 1
# Warmup Iteration   1: 4,300 ms/op
# Warmup Iteration   2: 3,855 ms/op
# Warmup Iteration   3: 3,717 ms/op
# Warmup Iteration   4: 3,678 ms/op
# Warmup Iteration   5: 3,654 ms/op
# Warmup Iteration   6: 3,665 ms/op
# Warmup Iteration   7: 3,681 ms/op
# Warmup Iteration   8: 3,644 ms/op
# Warmup Iteration   9: 3,651 ms/op
# Warmup Iteration  10: 3,689 ms/op
Iteration   1: 3,690 ms/op
Iteration   2: 3,701 ms/op
Iteration   3: 3,718 ms/op
Iteration   4: 3,733 ms/op
Iteration   5: 3,736 ms/op
Iteration   6: 3,749 ms/op
Iteration   7: 3,741 ms/op
Iteration   8: 3,723 ms/op
Iteration   9: 3,730 ms/op
Iteration  10: 3,728 ms/op


Result "benchmarkFind":
  3,725 ±(99.9%) 0,027 ms/op [Average]
  (min, avg, max) = (3,690, 3,725, 3,749), stdev = 0,018
  CI (99.9%): [3,698, 3,752] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 128, patternSize = 128)

# Run progress: 58,73% complete, ETA 06:34:27
# Fork: 1 of 1
# Warmup Iteration   1: 3,553 ms/op
# Warmup Iteration   2: 2,816 ms/op
# Warmup Iteration   3: 2,805 ms/op
# Warmup Iteration   4: 2,683 ms/op
# Warmup Iteration   5: 2,681 ms/op
# Warmup Iteration   6: 2,701 ms/op
# Warmup Iteration   7: 2,694 ms/op
# Warmup Iteration   8: 2,688 ms/op
# Warmup Iteration   9: 2,675 ms/op
# Warmup Iteration  10: 2,709 ms/op
Iteration   1: 2,680 ms/op
Iteration   2: 2,704 ms/op
Iteration   3: 2,705 ms/op
Iteration   4: 3,169 ms/op
Iteration   5: 2,712 ms/op
Iteration   6: 2,712 ms/op
Iteration   7: 2,703 ms/op
Iteration   8: 2,838 ms/op
Iteration   9: 2,704 ms/op
Iteration  10: 2,725 ms/op


Result "benchmarkFind":
  2,765 ±(99.9%) 0,224 ms/op [Average]
  (min, avg, max) = (2,680, 2,765, 3,169), stdev = 0,148
  CI (99.9%): [2,541, 2,989] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 128, patternSize = 256)

# Run progress: 58,78% complete, ETA 06:33:56
# Fork: 1 of 1
# Warmup Iteration   1: 3,218 ms/op
# Warmup Iteration   2: 2,885 ms/op
# Warmup Iteration   3: 2,798 ms/op
# Warmup Iteration   4: 2,804 ms/op
# Warmup Iteration   5: 2,778 ms/op
# Warmup Iteration   6: 2,781 ms/op
# Warmup Iteration   7: 2,755 ms/op
# Warmup Iteration   8: 2,763 ms/op
# Warmup Iteration   9: 2,767 ms/op
# Warmup Iteration  10: 2,766 ms/op
Iteration   1: 2,760 ms/op
Iteration   2: 2,764 ms/op
Iteration   3: 2,757 ms/op
Iteration   4: 2,771 ms/op
Iteration   5: 2,759 ms/op
Iteration   6: 2,766 ms/op
Iteration   7: 2,760 ms/op
Iteration   8: 2,769 ms/op
Iteration   9: 2,767 ms/op
Iteration  10: 2,775 ms/op


Result "benchmarkFind":
  2,765 ±(99.9%) 0,009 ms/op [Average]
  (min, avg, max) = (2,757, 2,765, 2,775), stdev = 0,006
  CI (99.9%): [2,756, 2,774] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 2, patternSize = 2)

# Run progress: 58,82% complete, ETA 06:33:26
# Fork: 1 of 1
# Warmup Iteration   1: 160,594 ms/op
# Warmup Iteration   2: 138,613 ms/op
# Warmup Iteration   3: 139,288 ms/op
# Warmup Iteration   4: 140,279 ms/op
# Warmup Iteration   5: 139,949 ms/op
# Warmup Iteration   6: 140,140 ms/op
# Warmup Iteration   7: 140,291 ms/op
# Warmup Iteration   8: 140,025 ms/op
# Warmup Iteration   9: 140,294 ms/op
# Warmup Iteration  10: 139,638 ms/op
Iteration   1: 140,193 ms/op
Iteration   2: 139,788 ms/op
Iteration   3: 139,962 ms/op
Iteration   4: 139,119 ms/op
Iteration   5: 139,712 ms/op
Iteration   6: 139,674 ms/op
Iteration   7: 140,049 ms/op
Iteration   8: 139,477 ms/op
Iteration   9: 139,689 ms/op
Iteration  10: 140,786 ms/op


Result "benchmarkFind":
  139,845 ±(99.9%) 0,676 ms/op [Average]
  (min, avg, max) = (139,119, 139,845, 140,786), stdev = 0,447
  CI (99.9%): [139,169, 140,521] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 2, patternSize = 4)

# Run progress: 58,87% complete, ETA 06:32:57
# Fork: 1 of 1
# Warmup Iteration   1: 91,567 ms/op
# Warmup Iteration   2: 76,339 ms/op
# Warmup Iteration   3: 76,961 ms/op
# Warmup Iteration   4: 77,759 ms/op
# Warmup Iteration   5: 77,499 ms/op
# Warmup Iteration   6: 77,767 ms/op
# Warmup Iteration   7: 77,550 ms/op
# Warmup Iteration   8: 77,424 ms/op
# Warmup Iteration   9: 86,351 ms/op
# Warmup Iteration  10: 77,656 ms/op
Iteration   1: 76,092 ms/op
Iteration   2: 77,027 ms/op
Iteration   3: 77,524 ms/op
Iteration   4: 77,969 ms/op
Iteration   5: 77,388 ms/op
Iteration   6: 78,051 ms/op
Iteration   7: 77,311 ms/op
Iteration   8: 77,415 ms/op
Iteration   9: 78,195 ms/op
Iteration  10: 77,823 ms/op


Result "benchmarkFind":
  77,479 ±(99.9%) 0,925 ms/op [Average]
  (min, avg, max) = (76,092, 77,479, 78,195), stdev = 0,612
  CI (99.9%): [76,555, 78,404] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 2, patternSize = 8)

# Run progress: 58,92% complete, ETA 06:32:27
# Fork: 1 of 1
# Warmup Iteration   1: 38,613 ms/op
# Warmup Iteration   2: 33,718 ms/op
# Warmup Iteration   3: 34,011 ms/op
# Warmup Iteration   4: 34,034 ms/op
# Warmup Iteration   5: 34,190 ms/op
# Warmup Iteration   6: 34,093 ms/op
# Warmup Iteration   7: 34,196 ms/op
# Warmup Iteration   8: 34,121 ms/op
# Warmup Iteration   9: 34,026 ms/op
# Warmup Iteration  10: 34,209 ms/op
Iteration   1: 34,134 ms/op
Iteration   2: 34,357 ms/op
Iteration   3: 34,183 ms/op
Iteration   4: 34,081 ms/op
Iteration   5: 34,397 ms/op
Iteration   6: 34,176 ms/op
Iteration   7: 34,194 ms/op
Iteration   8: 34,024 ms/op
Iteration   9: 34,106 ms/op
Iteration  10: 34,155 ms/op


Result "benchmarkFind":
  34,181 ±(99.9%) 0,175 ms/op [Average]
  (min, avg, max) = (34,024, 34,181, 34,397), stdev = 0,116
  CI (99.9%): [34,005, 34,356] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 2, patternSize = 16)

# Run progress: 58,96% complete, ETA 06:31:57
# Fork: 1 of 1
# Warmup Iteration   1: 19,715 ms/op
# Warmup Iteration   2: 16,799 ms/op
# Warmup Iteration   3: 16,679 ms/op
# Warmup Iteration   4: 16,599 ms/op
# Warmup Iteration   5: 17,114 ms/op
# Warmup Iteration   6: 17,492 ms/op
# Warmup Iteration   7: 16,970 ms/op
# Warmup Iteration   8: 16,423 ms/op
# Warmup Iteration   9: 16,441 ms/op
# Warmup Iteration  10: 16,548 ms/op
Iteration   1: 16,447 ms/op
Iteration   2: 16,659 ms/op
Iteration   3: 16,525 ms/op
Iteration   4: 16,526 ms/op
Iteration   5: 16,428 ms/op
Iteration   6: 16,441 ms/op
Iteration   7: 16,524 ms/op
Iteration   8: 16,451 ms/op
Iteration   9: 16,496 ms/op
Iteration  10: 16,373 ms/op


Result "benchmarkFind":
  16,487 ±(99.9%) 0,119 ms/op [Average]
  (min, avg, max) = (16,373, 16,487, 16,659), stdev = 0,079
  CI (99.9%): [16,368, 16,606] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 2, patternSize = 32)

# Run progress: 59,01% complete, ETA 06:31:27
# Fork: 1 of 1
# Warmup Iteration   1: 9,928 ms/op
# Warmup Iteration   2: 8,087 ms/op
# Warmup Iteration   3: 8,054 ms/op
# Warmup Iteration   4: 8,088 ms/op
# Warmup Iteration   5: 7,973 ms/op
# Warmup Iteration   6: 9,296 ms/op
# Warmup Iteration   7: 8,001 ms/op
# Warmup Iteration   8: 7,959 ms/op
# Warmup Iteration   9: 7,933 ms/op
# Warmup Iteration  10: 8,018 ms/op
Iteration   1: 8,115 ms/op
Iteration   2: 8,075 ms/op
Iteration   3: 8,096 ms/op
Iteration   4: 8,092 ms/op
Iteration   5: 8,054 ms/op
Iteration   6: 8,111 ms/op
Iteration   7: 8,171 ms/op
Iteration   8: 8,087 ms/op
Iteration   9: 8,152 ms/op
Iteration  10: 8,135 ms/op


Result "benchmarkFind":
  8,109 ±(99.9%) 0,054 ms/op [Average]
  (min, avg, max) = (8,054, 8,109, 8,171), stdev = 0,036
  CI (99.9%): [8,055, 8,163] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 2, patternSize = 64)

# Run progress: 59,05% complete, ETA 06:30:57
# Fork: 1 of 1
# Warmup Iteration   1: 4,894 ms/op
# Warmup Iteration   2: 4,235 ms/op
# Warmup Iteration   3: 4,197 ms/op
# Warmup Iteration   4: 4,205 ms/op
# Warmup Iteration   5: 4,277 ms/op
# Warmup Iteration   6: 4,343 ms/op
# Warmup Iteration   7: 4,177 ms/op
# Warmup Iteration   8: 4,239 ms/op
# Warmup Iteration   9: 4,233 ms/op
# Warmup Iteration  10: 4,291 ms/op
Iteration   1: 4,275 ms/op
Iteration   2: 4,241 ms/op
Iteration   3: 4,244 ms/op
Iteration   4: 4,259 ms/op
Iteration   5: 4,274 ms/op
Iteration   6: 4,253 ms/op
Iteration   7: 4,268 ms/op
Iteration   8: 4,260 ms/op
Iteration   9: 4,274 ms/op
Iteration  10: 4,311 ms/op


Result "benchmarkFind":
  4,266 ±(99.9%) 0,030 ms/op [Average]
  (min, avg, max) = (4,241, 4,266, 4,311), stdev = 0,020
  CI (99.9%): [4,236, 4,296] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 2, patternSize = 128)

# Run progress: 59,10% complete, ETA 06:30:27
# Fork: 1 of 1
# Warmup Iteration   1: 3,082 ms/op
# Warmup Iteration   2: 2,799 ms/op
# Warmup Iteration   3: 2,705 ms/op
# Warmup Iteration   4: 2,687 ms/op
# Warmup Iteration   5: 2,698 ms/op
# Warmup Iteration   6: 2,714 ms/op
# Warmup Iteration   7: 2,738 ms/op
# Warmup Iteration   8: 2,731 ms/op
# Warmup Iteration   9: 2,749 ms/op
# Warmup Iteration  10: 2,722 ms/op
Iteration   1: 2,730 ms/op
Iteration   2: 2,736 ms/op
Iteration   3: 2,728 ms/op
Iteration   4: 2,713 ms/op
Iteration   5: 2,754 ms/op
Iteration   6: 2,725 ms/op
Iteration   7: 2,713 ms/op
Iteration   8: 2,705 ms/op
Iteration   9: 2,708 ms/op
Iteration  10: 2,721 ms/op


Result "benchmarkFind":
  2,723 ±(99.9%) 0,022 ms/op [Average]
  (min, avg, max) = (2,705, 2,723, 2,754), stdev = 0,014
  CI (99.9%): [2,701, 2,745] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 2, patternSize = 256)

# Run progress: 59,15% complete, ETA 06:29:57
# Fork: 1 of 1
# Warmup Iteration   1: 2,113 ms/op
# Warmup Iteration   2: 1,873 ms/op
# Warmup Iteration   3: 1,869 ms/op
# Warmup Iteration   4: 2,097 ms/op
# Warmup Iteration   5: 1,892 ms/op
# Warmup Iteration   6: 1,909 ms/op
# Warmup Iteration   7: 1,916 ms/op
# Warmup Iteration   8: 1,905 ms/op
# Warmup Iteration   9: 1,906 ms/op
# Warmup Iteration  10: 1,920 ms/op
Iteration   1: 1,919 ms/op
Iteration   2: 1,877 ms/op
Iteration   3: 1,886 ms/op
Iteration   4: 1,892 ms/op
Iteration   5: 1,891 ms/op
Iteration   6: 1,895 ms/op
Iteration   7: 1,890 ms/op
Iteration   8: 1,891 ms/op
Iteration   9: 1,886 ms/op
Iteration  10: 1,902 ms/op


Result "benchmarkFind":
  1,893 ±(99.9%) 0,017 ms/op [Average]
  (min, avg, max) = (1,877, 1,893, 1,919), stdev = 0,011
  CI (99.9%): [1,876, 1,910] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 8, patternSize = 2)

# Run progress: 59,19% complete, ETA 06:29:26
# Fork: 1 of 1
# Warmup Iteration   1: 207,361 ms/op
# Warmup Iteration   2: 171,620 ms/op
# Warmup Iteration   3: 171,591 ms/op
# Warmup Iteration   4: 171,795 ms/op
# Warmup Iteration   5: 172,358 ms/op
# Warmup Iteration   6: 170,386 ms/op
# Warmup Iteration   7: 169,645 ms/op
# Warmup Iteration   8: 170,988 ms/op
# Warmup Iteration   9: 171,715 ms/op
# Warmup Iteration  10: 172,259 ms/op
Iteration   1: 170,307 ms/op
Iteration   2: 171,215 ms/op
Iteration   3: 171,562 ms/op
Iteration   4: 171,199 ms/op
Iteration   5: 169,782 ms/op
Iteration   6: 171,038 ms/op
Iteration   7: 177,841 ms/op
Iteration   8: 176,497 ms/op
Iteration   9: 178,725 ms/op
Iteration  10: 177,062 ms/op


Result "benchmarkFind":
  173,523 ±(99.9%) 5,337 ms/op [Average]
  (min, avg, max) = (169,782, 173,523, 178,725), stdev = 3,530
  CI (99.9%): [168,185, 178,860] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 8, patternSize = 4)

# Run progress: 59,24% complete, ETA 06:28:57
# Fork: 1 of 1
# Warmup Iteration   1: 119,176 ms/op
# Warmup Iteration   2: 98,861 ms/op
# Warmup Iteration   3: 98,188 ms/op
# Warmup Iteration   4: 98,861 ms/op
# Warmup Iteration   5: 99,082 ms/op
# Warmup Iteration   6: 99,454 ms/op
# Warmup Iteration   7: 99,537 ms/op
# Warmup Iteration   8: 99,152 ms/op
# Warmup Iteration   9: 99,121 ms/op
# Warmup Iteration  10: 99,266 ms/op
Iteration   1: 98,769 ms/op
Iteration   2: 98,994 ms/op
Iteration   3: 99,729 ms/op
Iteration   4: 99,016 ms/op
Iteration   5: 99,167 ms/op
Iteration   6: 99,086 ms/op
Iteration   7: 98,668 ms/op
Iteration   8: 98,607 ms/op
Iteration   9: 99,576 ms/op
Iteration  10: 106,677 ms/op


Result "benchmarkFind":
  99,829 ±(99.9%) 3,678 ms/op [Average]
  (min, avg, max) = (98,607, 99,829, 106,677), stdev = 2,433
  CI (99.9%): [96,150, 103,507] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 8, patternSize = 8)

# Run progress: 59,28% complete, ETA 06:28:28
# Fork: 1 of 1
# Warmup Iteration   1: 56,162 ms/op
# Warmup Iteration   2: 49,175 ms/op
# Warmup Iteration   3: 49,005 ms/op
# Warmup Iteration   4: 49,163 ms/op
# Warmup Iteration   5: 49,089 ms/op
# Warmup Iteration   6: 49,600 ms/op
# Warmup Iteration   7: 49,009 ms/op
# Warmup Iteration   8: 49,285 ms/op
# Warmup Iteration   9: 49,262 ms/op
# Warmup Iteration  10: 48,965 ms/op
Iteration   1: 49,015 ms/op
Iteration   2: 49,116 ms/op
Iteration   3: 48,950 ms/op
Iteration   4: 48,999 ms/op
Iteration   5: 48,932 ms/op
Iteration   6: 49,383 ms/op
Iteration   7: 49,014 ms/op
Iteration   8: 49,030 ms/op
Iteration   9: 49,079 ms/op
Iteration  10: 49,198 ms/op


Result "benchmarkFind":
  49,071 ±(99.9%) 0,203 ms/op [Average]
  (min, avg, max) = (48,932, 49,071, 49,383), stdev = 0,135
  CI (99.9%): [48,868, 49,275] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 8, patternSize = 16)

# Run progress: 59,33% complete, ETA 06:27:58
# Fork: 1 of 1
# Warmup Iteration   1: 27,510 ms/op
# Warmup Iteration   2: 23,421 ms/op
# Warmup Iteration   3: 23,521 ms/op
# Warmup Iteration   4: 23,510 ms/op
# Warmup Iteration   5: 23,742 ms/op
# Warmup Iteration   6: 23,692 ms/op
# Warmup Iteration   7: 23,452 ms/op
# Warmup Iteration   8: 23,693 ms/op
# Warmup Iteration   9: 23,650 ms/op
# Warmup Iteration  10: 23,621 ms/op
Iteration   1: 23,560 ms/op
Iteration   2: 23,615 ms/op
Iteration   3: 23,667 ms/op
Iteration   4: 23,851 ms/op
Iteration   5: 23,681 ms/op
Iteration   6: 23,690 ms/op
Iteration   7: 23,743 ms/op
Iteration   8: 23,595 ms/op
Iteration   9: 23,572 ms/op
Iteration  10: 23,681 ms/op


Result "benchmarkFind":
  23,666 ±(99.9%) 0,132 ms/op [Average]
  (min, avg, max) = (23,560, 23,666, 23,851), stdev = 0,087
  CI (99.9%): [23,533, 23,798] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 8, patternSize = 32)

# Run progress: 59,38% complete, ETA 06:27:28
# Fork: 1 of 1
# Warmup Iteration   1: 13,595 ms/op
# Warmup Iteration   2: 11,631 ms/op
# Warmup Iteration   3: 11,493 ms/op
# Warmup Iteration   4: 11,576 ms/op
# Warmup Iteration   5: 11,658 ms/op
# Warmup Iteration   6: 11,770 ms/op
# Warmup Iteration   7: 11,686 ms/op
# Warmup Iteration   8: 11,696 ms/op
# Warmup Iteration   9: 11,728 ms/op
# Warmup Iteration  10: 11,727 ms/op
Iteration   1: 11,646 ms/op
Iteration   2: 11,717 ms/op
Iteration   3: 11,676 ms/op
Iteration   4: 11,687 ms/op
Iteration   5: 11,725 ms/op
Iteration   6: 11,632 ms/op
Iteration   7: 12,728 ms/op
Iteration   8: 12,028 ms/op
Iteration   9: 11,462 ms/op
Iteration  10: 11,529 ms/op


Result "benchmarkFind":
  11,783 ±(99.9%) 0,550 ms/op [Average]
  (min, avg, max) = (11,462, 11,783, 12,728), stdev = 0,364
  CI (99.9%): [11,233, 12,333] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 8, patternSize = 64)

# Run progress: 59,42% complete, ETA 06:26:58
# Fork: 1 of 1
# Warmup Iteration   1: 7,699 ms/op
# Warmup Iteration   2: 6,036 ms/op
# Warmup Iteration   3: 6,087 ms/op
# Warmup Iteration   4: 6,095 ms/op
# Warmup Iteration   5: 6,153 ms/op
# Warmup Iteration   6: 6,158 ms/op
# Warmup Iteration   7: 6,185 ms/op
# Warmup Iteration   8: 6,160 ms/op
# Warmup Iteration   9: 6,190 ms/op
# Warmup Iteration  10: 6,192 ms/op
Iteration   1: 6,067 ms/op
Iteration   2: 6,179 ms/op
Iteration   3: 6,226 ms/op
Iteration   4: 6,209 ms/op
Iteration   5: 6,199 ms/op
Iteration   6: 6,185 ms/op
Iteration   7: 6,202 ms/op
Iteration   8: 6,191 ms/op
Iteration   9: 6,176 ms/op
Iteration  10: 6,139 ms/op


Result "benchmarkFind":
  6,177 ±(99.9%) 0,068 ms/op [Average]
  (min, avg, max) = (6,067, 6,177, 6,226), stdev = 0,045
  CI (99.9%): [6,109, 6,245] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 8, patternSize = 128)

# Run progress: 59,47% complete, ETA 06:26:28
# Fork: 1 of 1
# Warmup Iteration   1: 4,091 ms/op
# Warmup Iteration   2: 3,687 ms/op
# Warmup Iteration   3: 3,601 ms/op
# Warmup Iteration   4: 3,557 ms/op
# Warmup Iteration   5: 3,596 ms/op
# Warmup Iteration   6: 3,606 ms/op
# Warmup Iteration   7: 3,631 ms/op
# Warmup Iteration   8: 4,061 ms/op
# Warmup Iteration   9: 3,838 ms/op
# Warmup Iteration  10: 3,663 ms/op
Iteration   1: 3,657 ms/op
Iteration   2: 3,629 ms/op
Iteration   3: 3,637 ms/op
Iteration   4: 3,624 ms/op
Iteration   5: 3,630 ms/op
Iteration   6: 3,638 ms/op
Iteration   7: 3,629 ms/op
Iteration   8: 3,615 ms/op
Iteration   9: 3,614 ms/op
Iteration  10: 3,630 ms/op


Result "benchmarkFind":
  3,630 ±(99.9%) 0,018 ms/op [Average]
  (min, avg, max) = (3,614, 3,630, 3,657), stdev = 0,012
  CI (99.9%): [3,612, 3,649] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 8, patternSize = 256)

# Run progress: 59,51% complete, ETA 06:25:58
# Fork: 1 of 1
# Warmup Iteration   1: 3,288 ms/op
# Warmup Iteration   2: 2,935 ms/op
# Warmup Iteration   3: 2,920 ms/op
# Warmup Iteration   4: 2,925 ms/op
# Warmup Iteration   5: 2,934 ms/op
# Warmup Iteration   6: 2,947 ms/op
# Warmup Iteration   7: 2,970 ms/op
# Warmup Iteration   8: 2,976 ms/op
# Warmup Iteration   9: 2,983 ms/op
# Warmup Iteration  10: 3,022 ms/op
Iteration   1: 2,936 ms/op
Iteration   2: 2,964 ms/op
Iteration   3: 2,970 ms/op
Iteration   4: 2,963 ms/op
Iteration   5: 3,363 ms/op
Iteration   6: 2,929 ms/op
Iteration   7: 2,918 ms/op
Iteration   8: 2,928 ms/op
Iteration   9: 2,939 ms/op
Iteration  10: 2,964 ms/op


Result "benchmarkFind":
  2,987 ±(99.9%) 0,202 ms/op [Average]
  (min, avg, max) = (2,918, 2,987, 3,363), stdev = 0,133
  CI (99.9%): [2,786, 3,189] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 32, patternSize = 2)

# Run progress: 59,56% complete, ETA 06:25:28
# Fork: 1 of 1
# Warmup Iteration   1: 292,972 ms/op
# Warmup Iteration   2: 233,938 ms/op
# Warmup Iteration   3: 230,952 ms/op
# Warmup Iteration   4: 229,969 ms/op
# Warmup Iteration   5: 229,400 ms/op
# Warmup Iteration   6: 229,509 ms/op
# Warmup Iteration   7: 228,610 ms/op
# Warmup Iteration   8: 227,586 ms/op
# Warmup Iteration   9: 228,755 ms/op
# Warmup Iteration  10: 229,115 ms/op
Iteration   1: 230,327 ms/op
Iteration   2: 231,046 ms/op
Iteration   3: 228,612 ms/op
Iteration   4: 229,782 ms/op
Iteration   5: 228,456 ms/op
Iteration   6: 228,421 ms/op
Iteration   7: 231,336 ms/op
Iteration   8: 230,178 ms/op
Iteration   9: 233,707 ms/op
Iteration  10: 231,446 ms/op


Result "benchmarkFind":
  230,331 ±(99.9%) 2,500 ms/op [Average]
  (min, avg, max) = (228,421, 230,331, 233,707), stdev = 1,653
  CI (99.9%): [227,831, 232,831] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 32, patternSize = 4)

# Run progress: 59,60% complete, ETA 06:25:00
# Fork: 1 of 1
# Warmup Iteration   1: 147,474 ms/op
# Warmup Iteration   2: 126,386 ms/op
# Warmup Iteration   3: 126,163 ms/op
# Warmup Iteration   4: 124,823 ms/op
# Warmup Iteration   5: 126,573 ms/op
# Warmup Iteration   6: 126,062 ms/op
# Warmup Iteration   7: 126,435 ms/op
# Warmup Iteration   8: 126,306 ms/op
# Warmup Iteration   9: 127,048 ms/op
# Warmup Iteration  10: 127,356 ms/op
Iteration   1: 126,787 ms/op
Iteration   2: 127,602 ms/op
Iteration   3: 127,414 ms/op
Iteration   4: 126,772 ms/op
Iteration   5: 127,479 ms/op
Iteration   6: 127,366 ms/op
Iteration   7: 126,198 ms/op
Iteration   8: 126,470 ms/op
Iteration   9: 126,666 ms/op
Iteration  10: 126,135 ms/op


Result "benchmarkFind":
  126,889 ±(99.9%) 0,821 ms/op [Average]
  (min, avg, max) = (126,135, 126,889, 127,602), stdev = 0,543
  CI (99.9%): [126,067, 127,710] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 32, patternSize = 8)

# Run progress: 59,65% complete, ETA 06:24:30
# Fork: 1 of 1
# Warmup Iteration   1: 64,431 ms/op
# Warmup Iteration   2: 55,886 ms/op
# Warmup Iteration   3: 56,282 ms/op
# Warmup Iteration   4: 56,766 ms/op
# Warmup Iteration   5: 57,000 ms/op
# Warmup Iteration   6: 57,335 ms/op
# Warmup Iteration   7: 57,318 ms/op
# Warmup Iteration   8: 57,787 ms/op
# Warmup Iteration   9: 57,400 ms/op
# Warmup Iteration  10: 65,061 ms/op
Iteration   1: 56,142 ms/op
Iteration   2: 56,219 ms/op
Iteration   3: 56,857 ms/op
Iteration   4: 57,259 ms/op
Iteration   5: 57,044 ms/op
Iteration   6: 56,469 ms/op
Iteration   7: 56,750 ms/op
Iteration   8: 57,170 ms/op
Iteration   9: 57,104 ms/op
Iteration  10: 56,738 ms/op


Result "benchmarkFind":
  56,775 ±(99.9%) 0,593 ms/op [Average]
  (min, avg, max) = (56,142, 56,775, 57,259), stdev = 0,392
  CI (99.9%): [56,182, 57,368] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 32, patternSize = 16)

# Run progress: 59,70% complete, ETA 06:24:00
# Fork: 1 of 1
# Warmup Iteration   1: 32,665 ms/op
# Warmup Iteration   2: 27,648 ms/op
# Warmup Iteration   3: 27,464 ms/op
# Warmup Iteration   4: 27,728 ms/op
# Warmup Iteration   5: 27,816 ms/op
# Warmup Iteration   6: 28,109 ms/op
# Warmup Iteration   7: 27,857 ms/op
# Warmup Iteration   8: 27,890 ms/op
# Warmup Iteration   9: 28,273 ms/op
# Warmup Iteration  10: 28,178 ms/op
Iteration   1: 28,213 ms/op
Iteration   2: 28,160 ms/op
Iteration   3: 27,879 ms/op
Iteration   4: 27,889 ms/op
Iteration   5: 28,119 ms/op
Iteration   6: 28,130 ms/op
Iteration   7: 28,011 ms/op
Iteration   8: 28,351 ms/op
Iteration   9: 28,013 ms/op
Iteration  10: 28,100 ms/op


Result "benchmarkFind":
  28,087 ±(99.9%) 0,218 ms/op [Average]
  (min, avg, max) = (27,879, 28,087, 28,351), stdev = 0,144
  CI (99.9%): [27,868, 28,305] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 32, patternSize = 32)

# Run progress: 59,74% complete, ETA 06:23:30
# Fork: 1 of 1
# Warmup Iteration   1: 15,149 ms/op
# Warmup Iteration   2: 12,994 ms/op
# Warmup Iteration   3: 12,920 ms/op
# Warmup Iteration   4: 13,147 ms/op
# Warmup Iteration   5: 13,094 ms/op
# Warmup Iteration   6: 13,094 ms/op
# Warmup Iteration   7: 13,196 ms/op
# Warmup Iteration   8: 13,139 ms/op
# Warmup Iteration   9: 13,025 ms/op
# Warmup Iteration  10: 13,149 ms/op
Iteration   1: 13,160 ms/op
Iteration   2: 13,142 ms/op
Iteration   3: 13,163 ms/op
Iteration   4: 13,165 ms/op
Iteration   5: 13,117 ms/op
Iteration   6: 13,133 ms/op
Iteration   7: 13,024 ms/op
Iteration   8: 13,024 ms/op
Iteration   9: 12,949 ms/op
Iteration  10: 13,087 ms/op


Result "benchmarkFind":
  13,096 ±(99.9%) 0,112 ms/op [Average]
  (min, avg, max) = (12,949, 13,096, 13,165), stdev = 0,074
  CI (99.9%): [12,984, 13,208] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 32, patternSize = 64)

# Run progress: 59,79% complete, ETA 06:23:00
# Fork: 1 of 1
# Warmup Iteration   1: 8,682 ms/op
# Warmup Iteration   2: 7,503 ms/op
# Warmup Iteration   3: 7,241 ms/op
# Warmup Iteration   4: 7,266 ms/op
# Warmup Iteration   5: 7,322 ms/op
# Warmup Iteration   6: 7,404 ms/op
# Warmup Iteration   7: 8,585 ms/op
# Warmup Iteration   8: 7,343 ms/op
# Warmup Iteration   9: 7,357 ms/op
# Warmup Iteration  10: 7,384 ms/op
Iteration   1: 7,479 ms/op
Iteration   2: 7,575 ms/op
Iteration   3: 7,482 ms/op
Iteration   4: 7,480 ms/op
Iteration   5: 7,434 ms/op
Iteration   6: 7,463 ms/op
Iteration   7: 7,534 ms/op
Iteration   8: 7,458 ms/op
Iteration   9: 7,521 ms/op
Iteration  10: 7,498 ms/op


Result "benchmarkFind":
  7,492 ±(99.9%) 0,062 ms/op [Average]
  (min, avg, max) = (7,434, 7,492, 7,575), stdev = 0,041
  CI (99.9%): [7,430, 7,555] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 32, patternSize = 128)

# Run progress: 59,83% complete, ETA 06:22:30
# Fork: 1 of 1
# Warmup Iteration   1: 6,625 ms/op
# Warmup Iteration   2: 5,772 ms/op
# Warmup Iteration   3: 5,613 ms/op
# Warmup Iteration   4: 5,599 ms/op
# Warmup Iteration   5: 5,636 ms/op
# Warmup Iteration   6: 5,639 ms/op
# Warmup Iteration   7: 5,683 ms/op
# Warmup Iteration   8: 5,729 ms/op
# Warmup Iteration   9: 5,780 ms/op
# Warmup Iteration  10: 5,797 ms/op
Iteration   1: 5,818 ms/op
Iteration   2: 5,789 ms/op
Iteration   3: 5,792 ms/op
Iteration   4: 5,828 ms/op
Iteration   5: 5,828 ms/op
Iteration   6: 5,843 ms/op
Iteration   7: 5,663 ms/op
Iteration   8: 5,693 ms/op
Iteration   9: 5,691 ms/op
Iteration  10: 5,718 ms/op


Result "benchmarkFind":
  5,766 ±(99.9%) 0,103 ms/op [Average]
  (min, avg, max) = (5,663, 5,766, 5,843), stdev = 0,068
  CI (99.9%): [5,664, 5,869] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 32, patternSize = 256)

# Run progress: 59,88% complete, ETA 06:22:00
# Fork: 1 of 1
# Warmup Iteration   1: 4,326 ms/op
# Warmup Iteration   2: 3,642 ms/op
# Warmup Iteration   3: 3,449 ms/op
# Warmup Iteration   4: 3,465 ms/op
# Warmup Iteration   5: 3,500 ms/op
# Warmup Iteration   6: 3,459 ms/op
# Warmup Iteration   7: 3,449 ms/op
# Warmup Iteration   8: 3,454 ms/op
# Warmup Iteration   9: 3,470 ms/op
# Warmup Iteration  10: 3,470 ms/op
Iteration   1: 3,491 ms/op
Iteration   2: 3,552 ms/op
Iteration   3: 3,531 ms/op
Iteration   4: 3,526 ms/op
Iteration   5: 3,531 ms/op
Iteration   6: 3,526 ms/op
Iteration   7: 3,516 ms/op
Iteration   8: 3,506 ms/op
Iteration   9: 3,509 ms/op
Iteration  10: 3,500 ms/op


Result "benchmarkFind":
  3,519 ±(99.9%) 0,027 ms/op [Average]
  (min, avg, max) = (3,491, 3,519, 3,552), stdev = 0,018
  CI (99.9%): [3,492, 3,546] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 128, patternSize = 2)

# Run progress: 59,93% complete, ETA 06:21:30
# Fork: 1 of 1
# Warmup Iteration   1: 828,645 ms/op
# Warmup Iteration   2: 731,308 ms/op
# Warmup Iteration   3: 771,580 ms/op
# Warmup Iteration   4: 733,366 ms/op
# Warmup Iteration   5: 702,529 ms/op
# Warmup Iteration   6: 702,746 ms/op
# Warmup Iteration   7: 711,392 ms/op
# Warmup Iteration   8: 704,644 ms/op
# Warmup Iteration   9: 705,388 ms/op
# Warmup Iteration  10: 713,059 ms/op
Iteration   1: 706,038 ms/op
Iteration   2: 706,750 ms/op
Iteration   3: 706,231 ms/op
Iteration   4: 708,063 ms/op
Iteration   5: 702,730 ms/op
Iteration   6: 705,737 ms/op
Iteration   7: 715,274 ms/op
Iteration   8: 716,583 ms/op
Iteration   9: 723,637 ms/op
Iteration  10: 717,915 ms/op


Result "benchmarkFind":
  710,896 ±(99.9%) 10,413 ms/op [Average]
  (min, avg, max) = (702,730, 710,896, 723,637), stdev = 6,888
  CI (99.9%): [700,483, 721,309] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 128, patternSize = 4)

# Run progress: 59,97% complete, ETA 06:21:06
# Fork: 1 of 1
# Warmup Iteration   1: 200,435 ms/op
# Warmup Iteration   2: 174,969 ms/op
# Warmup Iteration   3: 178,333 ms/op
# Warmup Iteration   4: 176,050 ms/op
# Warmup Iteration   5: 175,736 ms/op
# Warmup Iteration   6: 174,468 ms/op
# Warmup Iteration   7: 176,733 ms/op
# Warmup Iteration   8: 175,821 ms/op
# Warmup Iteration   9: 177,195 ms/op
# Warmup Iteration  10: 175,394 ms/op
Iteration   1: 175,338 ms/op
Iteration   2: 176,473 ms/op
Iteration   3: 175,400 ms/op
Iteration   4: 175,753 ms/op
Iteration   5: 175,400 ms/op
Iteration   6: 177,464 ms/op
Iteration   7: 176,619 ms/op
Iteration   8: 176,781 ms/op
Iteration   9: 175,990 ms/op
Iteration  10: 174,393 ms/op


Result "benchmarkFind":
  175,961 ±(99.9%) 1,347 ms/op [Average]
  (min, avg, max) = (174,393, 175,961, 177,464), stdev = 0,891
  CI (99.9%): [174,614, 177,308] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 128, patternSize = 8)

# Run progress: 60,02% complete, ETA 06:20:37
# Fork: 1 of 1
# Warmup Iteration   1: 80,596 ms/op
# Warmup Iteration   2: 69,341 ms/op
# Warmup Iteration   3: 69,679 ms/op
# Warmup Iteration   4: 70,030 ms/op
# Warmup Iteration   5: 69,997 ms/op
# Warmup Iteration   6: 69,758 ms/op
# Warmup Iteration   7: 69,762 ms/op
# Warmup Iteration   8: 69,454 ms/op
# Warmup Iteration   9: 69,315 ms/op
# Warmup Iteration  10: 69,833 ms/op
Iteration   1: 69,403 ms/op
Iteration   2: 69,778 ms/op
Iteration   3: 79,612 ms/op
Iteration   4: 69,376 ms/op
Iteration   5: 68,884 ms/op
Iteration   6: 68,917 ms/op
Iteration   7: 71,728 ms/op
Iteration   8: 69,842 ms/op
Iteration   9: 69,639 ms/op
Iteration  10: 70,056 ms/op


Result "benchmarkFind":
  70,723 ±(99.9%) 4,874 ms/op [Average]
  (min, avg, max) = (68,884, 70,723, 79,612), stdev = 3,224
  CI (99.9%): [65,850, 75,597] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 128, patternSize = 16)

# Run progress: 60,06% complete, ETA 06:20:08
# Fork: 1 of 1
# Warmup Iteration   1: 40,131 ms/op
# Warmup Iteration   2: 33,366 ms/op
# Warmup Iteration   3: 32,777 ms/op
# Warmup Iteration   4: 33,022 ms/op
# Warmup Iteration   5: 33,443 ms/op
# Warmup Iteration   6: 33,226 ms/op
# Warmup Iteration   7: 33,150 ms/op
# Warmup Iteration   8: 32,760 ms/op
# Warmup Iteration   9: 33,285 ms/op
# Warmup Iteration  10: 33,223 ms/op
Iteration   1: 33,392 ms/op
Iteration   2: 33,381 ms/op
Iteration   3: 33,235 ms/op
Iteration   4: 33,207 ms/op
Iteration   5: 33,249 ms/op
Iteration   6: 33,459 ms/op
Iteration   7: 33,520 ms/op
Iteration   8: 33,254 ms/op
Iteration   9: 33,418 ms/op
Iteration  10: 33,349 ms/op


Result "benchmarkFind":
  33,346 ±(99.9%) 0,160 ms/op [Average]
  (min, avg, max) = (33,207, 33,346, 33,520), stdev = 0,106
  CI (99.9%): [33,186, 33,507] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 128, patternSize = 32)

# Run progress: 60,11% complete, ETA 06:19:38
# Fork: 1 of 1
# Warmup Iteration   1: 23,277 ms/op
# Warmup Iteration   2: 19,245 ms/op
# Warmup Iteration   3: 17,857 ms/op
# Warmup Iteration   4: 17,834 ms/op
# Warmup Iteration   5: 17,872 ms/op
# Warmup Iteration   6: 17,969 ms/op
# Warmup Iteration   7: 18,179 ms/op
# Warmup Iteration   8: 17,951 ms/op
# Warmup Iteration   9: 18,044 ms/op
# Warmup Iteration  10: 18,000 ms/op
Iteration   1: 17,954 ms/op
Iteration   2: 17,921 ms/op
Iteration   3: 17,870 ms/op
Iteration   4: 18,075 ms/op
Iteration   5: 17,992 ms/op
Iteration   6: 18,076 ms/op
Iteration   7: 17,732 ms/op
Iteration   8: 17,833 ms/op
Iteration   9: 17,961 ms/op
Iteration  10: 17,902 ms/op


Result "benchmarkFind":
  17,932 ±(99.9%) 0,160 ms/op [Average]
  (min, avg, max) = (17,732, 17,932, 18,076), stdev = 0,106
  CI (99.9%): [17,772, 18,092] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 128, patternSize = 64)

# Run progress: 60,16% complete, ETA 06:19:08
# Fork: 1 of 1
# Warmup Iteration   1: 14,962 ms/op
# Warmup Iteration   2: 12,706 ms/op
# Warmup Iteration   3: 12,402 ms/op
# Warmup Iteration   4: 12,355 ms/op
# Warmup Iteration   5: 12,349 ms/op
# Warmup Iteration   6: 12,406 ms/op
# Warmup Iteration   7: 12,384 ms/op
# Warmup Iteration   8: 12,419 ms/op
# Warmup Iteration   9: 12,384 ms/op
# Warmup Iteration  10: 14,634 ms/op
Iteration   1: 12,365 ms/op
Iteration   2: 12,428 ms/op
Iteration   3: 12,359 ms/op
Iteration   4: 12,256 ms/op
Iteration   5: 12,355 ms/op
Iteration   6: 12,372 ms/op
Iteration   7: 12,377 ms/op
Iteration   8: 12,364 ms/op
Iteration   9: 12,396 ms/op
Iteration  10: 12,537 ms/op


Result "benchmarkFind":
  12,381 ±(99.9%) 0,106 ms/op [Average]
  (min, avg, max) = (12,256, 12,381, 12,537), stdev = 0,070
  CI (99.9%): [12,275, 12,487] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 128, patternSize = 128)

# Run progress: 60,20% complete, ETA 06:18:38
# Fork: 1 of 1
# Warmup Iteration   1: 10,925 ms/op
# Warmup Iteration   2: 9,307 ms/op
# Warmup Iteration   3: 9,211 ms/op
# Warmup Iteration   4: 8,987 ms/op
# Warmup Iteration   5: 8,964 ms/op
# Warmup Iteration   6: 8,997 ms/op
# Warmup Iteration   7: 9,031 ms/op
# Warmup Iteration   8: 9,007 ms/op
# Warmup Iteration   9: 9,039 ms/op
# Warmup Iteration  10: 8,992 ms/op
Iteration   1: 9,020 ms/op
Iteration   2: 9,039 ms/op
Iteration   3: 9,049 ms/op
Iteration   4: 9,133 ms/op
Iteration   5: 9,151 ms/op
Iteration   6: 9,133 ms/op
Iteration   7: 9,125 ms/op
Iteration   8: 9,158 ms/op
Iteration   9: 9,151 ms/op
Iteration  10: 9,132 ms/op


Result "benchmarkFind":
  9,109 ±(99.9%) 0,079 ms/op [Average]
  (min, avg, max) = (9,020, 9,109, 9,158), stdev = 0,052
  CI (99.9%): [9,030, 9,188] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 128, patternSize = 256)

# Run progress: 60,25% complete, ETA 06:18:08
# Fork: 1 of 1
# Warmup Iteration   1: 8,743 ms/op
# Warmup Iteration   2: 7,902 ms/op
# Warmup Iteration   3: 7,765 ms/op
# Warmup Iteration   4: 7,634 ms/op
# Warmup Iteration   5: 7,636 ms/op
# Warmup Iteration   6: 7,653 ms/op
# Warmup Iteration   7: 7,665 ms/op
# Warmup Iteration   8: 7,596 ms/op
# Warmup Iteration   9: 7,604 ms/op
# Warmup Iteration  10: 7,622 ms/op
Iteration   1: 7,636 ms/op
Iteration   2: 7,620 ms/op
Iteration   3: 7,622 ms/op
Iteration   4: 7,642 ms/op
Iteration   5: 7,617 ms/op
Iteration   6: 7,636 ms/op
Iteration   7: 7,625 ms/op
Iteration   8: 7,633 ms/op
Iteration   9: 7,660 ms/op
Iteration  10: 7,701 ms/op


Result "benchmarkFind":
  7,639 ±(99.9%) 0,038 ms/op [Average]
  (min, avg, max) = (7,617, 7,639, 7,701), stdev = 0,025
  CI (99.9%): [7,601, 7,677] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 2, patternSize = 2)

# Run progress: 60,29% complete, ETA 06:17:39
# Fork: 1 of 1
# Warmup Iteration   1: 598,393 ms/op
# Warmup Iteration   2: 523,360 ms/op
# Warmup Iteration   3: 537,702 ms/op
# Warmup Iteration   4: 526,957 ms/op
# Warmup Iteration   5: 529,227 ms/op
# Warmup Iteration   6: 527,846 ms/op
# Warmup Iteration   7: 581,808 ms/op
# Warmup Iteration   8: 534,222 ms/op
# Warmup Iteration   9: 538,582 ms/op
# Warmup Iteration  10: 532,476 ms/op
Iteration   1: 529,779 ms/op
Iteration   2: 533,979 ms/op
Iteration   3: 530,912 ms/op
Iteration   4: 533,974 ms/op
Iteration   5: 530,806 ms/op
Iteration   6: 535,643 ms/op
Iteration   7: 528,793 ms/op
Iteration   8: 532,531 ms/op
Iteration   9: 532,682 ms/op
Iteration  10: 526,979 ms/op


Result "benchmarkFind":
  531,608 ±(99.9%) 4,010 ms/op [Average]
  (min, avg, max) = (526,979, 531,608, 535,643), stdev = 2,653
  CI (99.9%): [527,597, 535,618] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 2, patternSize = 4)

# Run progress: 60,34% complete, ETA 06:17:10
# Fork: 1 of 1
# Warmup Iteration   1: 322,197 ms/op
# Warmup Iteration   2: 297,074 ms/op
# Warmup Iteration   3: 288,010 ms/op
# Warmup Iteration   4: 286,133 ms/op
# Warmup Iteration   5: 309,308 ms/op
# Warmup Iteration   6: 291,200 ms/op
# Warmup Iteration   7: 291,925 ms/op
# Warmup Iteration   8: 288,956 ms/op
# Warmup Iteration   9: 289,243 ms/op
# Warmup Iteration  10: 291,677 ms/op
Iteration   1: 286,250 ms/op
Iteration   2: 290,083 ms/op
Iteration   3: 288,097 ms/op
Iteration   4: 287,965 ms/op
Iteration   5: 284,494 ms/op
Iteration   6: 288,619 ms/op
Iteration   7: 286,996 ms/op
Iteration   8: 288,128 ms/op
Iteration   9: 286,532 ms/op
Iteration  10: 288,587 ms/op


Result "benchmarkFind":
  287,575 ±(99.9%) 2,353 ms/op [Average]
  (min, avg, max) = (284,494, 287,575, 290,083), stdev = 1,557
  CI (99.9%): [285,222, 289,929] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 2, patternSize = 8)

# Run progress: 60,39% complete, ETA 06:16:43
# Fork: 1 of 1
# Warmup Iteration   1: 144,646 ms/op
# Warmup Iteration   2: 131,209 ms/op
# Warmup Iteration   3: 131,173 ms/op
# Warmup Iteration   4: 132,639 ms/op
# Warmup Iteration   5: 132,084 ms/op
# Warmup Iteration   6: 131,044 ms/op
# Warmup Iteration   7: 131,750 ms/op
# Warmup Iteration   8: 131,925 ms/op
# Warmup Iteration   9: 133,141 ms/op
# Warmup Iteration  10: 132,329 ms/op
Iteration   1: 131,904 ms/op
Iteration   2: 131,239 ms/op
Iteration   3: 132,969 ms/op
Iteration   4: 132,327 ms/op
Iteration   5: 132,213 ms/op
Iteration   6: 131,711 ms/op
Iteration   7: 131,094 ms/op
Iteration   8: 132,202 ms/op
Iteration   9: 132,464 ms/op
Iteration  10: 143,822 ms/op


Result "benchmarkFind":
  133,194 ±(99.9%) 5,709 ms/op [Average]
  (min, avg, max) = (131,094, 133,194, 143,822), stdev = 3,776
  CI (99.9%): [127,485, 138,903] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 2, patternSize = 16)

# Run progress: 60,43% complete, ETA 06:16:14
# Fork: 1 of 1
# Warmup Iteration   1: 66,062 ms/op
# Warmup Iteration   2: 59,745 ms/op
# Warmup Iteration   3: 59,940 ms/op
# Warmup Iteration   4: 59,510 ms/op
# Warmup Iteration   5: 60,167 ms/op
# Warmup Iteration   6: 60,150 ms/op
# Warmup Iteration   7: 59,976 ms/op
# Warmup Iteration   8: 59,649 ms/op
# Warmup Iteration   9: 59,660 ms/op
# Warmup Iteration  10: 60,005 ms/op
Iteration   1: 59,390 ms/op
Iteration   2: 59,875 ms/op
Iteration   3: 59,686 ms/op
Iteration   4: 60,015 ms/op
Iteration   5: 60,125 ms/op
Iteration   6: 59,936 ms/op
Iteration   7: 59,784 ms/op
Iteration   8: 60,043 ms/op
Iteration   9: 59,964 ms/op
Iteration  10: 59,644 ms/op


Result "benchmarkFind":
  59,846 ±(99.9%) 0,337 ms/op [Average]
  (min, avg, max) = (59,390, 59,846, 60,125), stdev = 0,223
  CI (99.9%): [59,510, 60,183] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 2, patternSize = 32)

# Run progress: 60,48% complete, ETA 06:15:44
# Fork: 1 of 1
# Warmup Iteration   1: 37,713 ms/op
# Warmup Iteration   2: 30,508 ms/op
# Warmup Iteration   3: 30,463 ms/op
# Warmup Iteration   4: 30,673 ms/op
# Warmup Iteration   5: 30,780 ms/op
# Warmup Iteration   6: 31,171 ms/op
# Warmup Iteration   7: 30,555 ms/op
# Warmup Iteration   8: 30,587 ms/op
# Warmup Iteration   9: 30,623 ms/op
# Warmup Iteration  10: 30,634 ms/op
Iteration   1: 30,785 ms/op
Iteration   2: 30,818 ms/op
Iteration   3: 31,002 ms/op
Iteration   4: 31,065 ms/op
Iteration   5: 30,893 ms/op
Iteration   6: 30,819 ms/op
Iteration   7: 30,517 ms/op
Iteration   8: 30,594 ms/op
Iteration   9: 30,945 ms/op
Iteration  10: 30,687 ms/op


Result "benchmarkFind":
  30,813 ±(99.9%) 0,264 ms/op [Average]
  (min, avg, max) = (30,517, 30,813, 31,065), stdev = 0,175
  CI (99.9%): [30,548, 31,077] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 2, patternSize = 64)

# Run progress: 60,52% complete, ETA 06:15:15
# Fork: 1 of 1
# Warmup Iteration   1: 18,242 ms/op
# Warmup Iteration   2: 15,735 ms/op
# Warmup Iteration   3: 16,487 ms/op
# Warmup Iteration   4: 16,065 ms/op
# Warmup Iteration   5: 16,158 ms/op
# Warmup Iteration   6: 16,123 ms/op
# Warmup Iteration   7: 15,924 ms/op
# Warmup Iteration   8: 16,198 ms/op
# Warmup Iteration   9: 17,526 ms/op
# Warmup Iteration  10: 17,291 ms/op
Iteration   1: 17,562 ms/op
Iteration   2: 16,486 ms/op
Iteration   3: 16,694 ms/op
Iteration   4: 16,482 ms/op
Iteration   5: 16,469 ms/op
Iteration   6: 18,277 ms/op
Iteration   7: 16,463 ms/op
Iteration   8: 16,786 ms/op
Iteration   9: 16,053 ms/op
Iteration  10: 16,130 ms/op


Result "benchmarkFind":
  16,740 ±(99.9%) 1,029 ms/op [Average]
  (min, avg, max) = (16,053, 16,740, 18,277), stdev = 0,680
  CI (99.9%): [15,711, 17,769] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 2, patternSize = 128)

# Run progress: 60,57% complete, ETA 06:14:45
# Fork: 1 of 1
# Warmup Iteration   1: 14,062 ms/op
# Warmup Iteration   2: 12,755 ms/op
# Warmup Iteration   3: 12,516 ms/op
# Warmup Iteration   4: 12,792 ms/op
# Warmup Iteration   5: 12,510 ms/op
# Warmup Iteration   6: 12,485 ms/op
# Warmup Iteration   7: 12,706 ms/op
# Warmup Iteration   8: 12,567 ms/op
# Warmup Iteration   9: 12,556 ms/op
# Warmup Iteration  10: 12,574 ms/op
Iteration   1: 12,588 ms/op
Iteration   2: 12,574 ms/op
Iteration   3: 12,560 ms/op
Iteration   4: 12,512 ms/op
Iteration   5: 12,528 ms/op
Iteration   6: 12,623 ms/op
Iteration   7: 12,455 ms/op
Iteration   8: 12,568 ms/op
Iteration   9: 12,464 ms/op
Iteration  10: 12,513 ms/op


Result "benchmarkFind":
  12,539 ±(99.9%) 0,082 ms/op [Average]
  (min, avg, max) = (12,455, 12,539, 12,623), stdev = 0,054
  CI (99.9%): [12,457, 12,620] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 2, patternSize = 256)

# Run progress: 60,62% complete, ETA 06:14:16
# Fork: 1 of 1
# Warmup Iteration   1: 9,362 ms/op
# Warmup Iteration   2: 9,052 ms/op
# Warmup Iteration   3: 8,706 ms/op
# Warmup Iteration   4: 8,570 ms/op
# Warmup Iteration   5: 8,585 ms/op
# Warmup Iteration   6: 8,686 ms/op
# Warmup Iteration   7: 8,720 ms/op
# Warmup Iteration   8: 8,660 ms/op
# Warmup Iteration   9: 8,668 ms/op
# Warmup Iteration  10: 8,661 ms/op
Iteration   1: 8,715 ms/op
Iteration   2: 8,651 ms/op
Iteration   3: 8,706 ms/op
Iteration   4: 8,658 ms/op
Iteration   5: 8,691 ms/op
Iteration   6: 8,752 ms/op
Iteration   7: 8,696 ms/op
Iteration   8: 8,715 ms/op
Iteration   9: 8,659 ms/op
Iteration  10: 8,678 ms/op


Result "benchmarkFind":
  8,692 ±(99.9%) 0,048 ms/op [Average]
  (min, avg, max) = (8,651, 8,692, 8,752), stdev = 0,032
  CI (99.9%): [8,644, 8,740] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 8, patternSize = 2)

# Run progress: 60,66% complete, ETA 06:13:46
# Fork: 1 of 1
# Warmup Iteration   1: 690,967 ms/op
# Warmup Iteration   2: 626,307 ms/op
# Warmup Iteration   3: 616,576 ms/op
# Warmup Iteration   4: 627,886 ms/op
# Warmup Iteration   5: 624,634 ms/op
# Warmup Iteration   6: 641,145 ms/op
# Warmup Iteration   7: 614,755 ms/op
# Warmup Iteration   8: 621,467 ms/op
# Warmup Iteration   9: 630,613 ms/op
# Warmup Iteration  10: 672,244 ms/op
Iteration   1: 623,370 ms/op
Iteration   2: 657,569 ms/op
Iteration   3: 668,599 ms/op
Iteration   4: 652,247 ms/op
Iteration   5: 641,476 ms/op
Iteration   6: 638,078 ms/op
Iteration   7: 635,938 ms/op
Iteration   8: 620,984 ms/op
Iteration   9: 620,797 ms/op
Iteration  10: 621,790 ms/op


Result "benchmarkFind":
  638,085 ±(99.9%) 25,701 ms/op [Average]
  (min, avg, max) = (620,797, 638,085, 668,599), stdev = 16,999
  CI (99.9%): [612,384, 663,785] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 8, patternSize = 4)

# Run progress: 60,71% complete, ETA 06:13:20
# Fork: 1 of 1
# Warmup Iteration   1: 401,582 ms/op
# Warmup Iteration   2: 354,933 ms/op
# Warmup Iteration   3: 354,829 ms/op
# Warmup Iteration   4: 353,796 ms/op
# Warmup Iteration   5: 368,973 ms/op
# Warmup Iteration   6: 365,653 ms/op
# Warmup Iteration   7: 362,723 ms/op
# Warmup Iteration   8: 373,366 ms/op
# Warmup Iteration   9: 370,233 ms/op
# Warmup Iteration  10: 349,004 ms/op
Iteration   1: 360,133 ms/op
Iteration   2: 357,975 ms/op
Iteration   3: 374,905 ms/op
Iteration   4: 373,922 ms/op
Iteration   5: 370,414 ms/op
Iteration   6: 355,503 ms/op
Iteration   7: 371,182 ms/op
Iteration   8: 383,507 ms/op
Iteration   9: 365,574 ms/op
Iteration  10: 364,911 ms/op


Result "benchmarkFind":
  367,803 ±(99.9%) 13,071 ms/op [Average]
  (min, avg, max) = (355,503, 367,803, 383,507), stdev = 8,646
  CI (99.9%): [354,731, 380,874] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 8, patternSize = 8)

# Run progress: 60,75% complete, ETA 06:12:52
# Fork: 1 of 1
# Warmup Iteration   1: 219,956 ms/op
# Warmup Iteration   2: 213,851 ms/op
# Warmup Iteration   3: 183,081 ms/op
# Warmup Iteration   4: 198,065 ms/op
# Warmup Iteration   5: 187,405 ms/op
# Warmup Iteration   6: 178,843 ms/op
# Warmup Iteration   7: 174,590 ms/op
# Warmup Iteration   8: 202,191 ms/op
# Warmup Iteration   9: 192,242 ms/op
# Warmup Iteration  10: 192,236 ms/op
Iteration   1: 175,478 ms/op
Iteration   2: 177,929 ms/op
Iteration   3: 177,873 ms/op
Iteration   4: 177,406 ms/op
Iteration   5: 176,181 ms/op
Iteration   6: 174,991 ms/op
Iteration   7: 177,433 ms/op
Iteration   8: 179,872 ms/op
Iteration   9: 177,716 ms/op
Iteration  10: 175,541 ms/op


Result "benchmarkFind":
  177,042 ±(99.9%) 2,246 ms/op [Average]
  (min, avg, max) = (174,991, 177,042, 179,872), stdev = 1,486
  CI (99.9%): [174,796, 179,288] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 8, patternSize = 16)

# Run progress: 60,80% complete, ETA 06:12:24
# Fork: 1 of 1
# Warmup Iteration   1: 100,523 ms/op
# Warmup Iteration   2: 84,747 ms/op
# Warmup Iteration   3: 85,466 ms/op
# Warmup Iteration   4: 86,251 ms/op
# Warmup Iteration   5: 85,999 ms/op
# Warmup Iteration   6: 86,004 ms/op
# Warmup Iteration   7: 85,294 ms/op
# Warmup Iteration   8: 86,186 ms/op
# Warmup Iteration   9: 86,333 ms/op
# Warmup Iteration  10: 86,609 ms/op
Iteration   1: 86,210 ms/op
Iteration   2: 86,211 ms/op
Iteration   3: 85,827 ms/op
Iteration   4: 86,498 ms/op
Iteration   5: 86,941 ms/op
Iteration   6: 86,204 ms/op
Iteration   7: 86,928 ms/op
Iteration   8: 86,822 ms/op
Iteration   9: 86,844 ms/op
Iteration  10: 87,093 ms/op


Result "benchmarkFind":
  86,558 ±(99.9%) 0,643 ms/op [Average]
  (min, avg, max) = (85,827, 86,558, 87,093), stdev = 0,425
  CI (99.9%): [85,915, 87,201] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 8, patternSize = 32)

# Run progress: 60,85% complete, ETA 06:11:55
# Fork: 1 of 1
# Warmup Iteration   1: 47,751 ms/op
# Warmup Iteration   2: 40,777 ms/op
# Warmup Iteration   3: 40,719 ms/op
# Warmup Iteration   4: 41,223 ms/op
# Warmup Iteration   5: 41,264 ms/op
# Warmup Iteration   6: 41,019 ms/op
# Warmup Iteration   7: 41,179 ms/op
# Warmup Iteration   8: 40,729 ms/op
# Warmup Iteration   9: 40,480 ms/op
# Warmup Iteration  10: 40,904 ms/op
Iteration   1: 40,309 ms/op
Iteration   2: 40,548 ms/op
Iteration   3: 40,590 ms/op
Iteration   4: 39,995 ms/op
Iteration   5: 40,326 ms/op
Iteration   6: 40,606 ms/op
Iteration   7: 40,623 ms/op
Iteration   8: 40,437 ms/op
Iteration   9: 40,605 ms/op
Iteration  10: 40,712 ms/op


Result "benchmarkFind":
  40,475 ±(99.9%) 0,324 ms/op [Average]
  (min, avg, max) = (39,995, 40,475, 40,712), stdev = 0,214
  CI (99.9%): [40,152, 40,799] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 8, patternSize = 64)

# Run progress: 60,89% complete, ETA 06:11:25
# Fork: 1 of 1
# Warmup Iteration   1: 25,430 ms/op
# Warmup Iteration   2: 22,384 ms/op
# Warmup Iteration   3: 22,603 ms/op
# Warmup Iteration   4: 22,345 ms/op
# Warmup Iteration   5: 22,642 ms/op
# Warmup Iteration   6: 22,651 ms/op
# Warmup Iteration   7: 22,546 ms/op
# Warmup Iteration   8: 22,507 ms/op
# Warmup Iteration   9: 22,493 ms/op
# Warmup Iteration  10: 22,487 ms/op
Iteration   1: 22,516 ms/op
Iteration   2: 22,516 ms/op
Iteration   3: 22,650 ms/op
Iteration   4: 22,482 ms/op
Iteration   5: 22,673 ms/op
Iteration   6: 22,630 ms/op
Iteration   7: 23,926 ms/op
Iteration   8: 22,543 ms/op
Iteration   9: 22,314 ms/op
Iteration  10: 22,485 ms/op


Result "benchmarkFind":
  22,673 ±(99.9%) 0,684 ms/op [Average]
  (min, avg, max) = (22,314, 22,673, 23,926), stdev = 0,452
  CI (99.9%): [21,990, 23,357] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 8, patternSize = 128)

# Run progress: 60,94% complete, ETA 06:10:56
# Fork: 1 of 1
# Warmup Iteration   1: 14,536 ms/op
# Warmup Iteration   2: 12,812 ms/op
# Warmup Iteration   3: 12,783 ms/op
# Warmup Iteration   4: 12,668 ms/op
# Warmup Iteration   5: 12,688 ms/op
# Warmup Iteration   6: 12,787 ms/op
# Warmup Iteration   7: 12,771 ms/op
# Warmup Iteration   8: 12,765 ms/op
# Warmup Iteration   9: 12,783 ms/op
# Warmup Iteration  10: 12,777 ms/op
Iteration   1: 12,831 ms/op
Iteration   2: 12,744 ms/op
Iteration   3: 12,729 ms/op
Iteration   4: 12,890 ms/op
Iteration   5: 12,641 ms/op
Iteration   6: 12,827 ms/op
Iteration   7: 12,751 ms/op
Iteration   8: 12,894 ms/op
Iteration   9: 12,938 ms/op
Iteration  10: 12,875 ms/op


Result "benchmarkFind":
  12,812 ±(99.9%) 0,140 ms/op [Average]
  (min, avg, max) = (12,641, 12,812, 12,938), stdev = 0,093
  CI (99.9%): [12,672, 12,952] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 8, patternSize = 256)

# Run progress: 60,98% complete, ETA 06:10:27
# Fork: 1 of 1
# Warmup Iteration   1: 11,381 ms/op
# Warmup Iteration   2: 10,785 ms/op
# Warmup Iteration   3: 10,482 ms/op
# Warmup Iteration   4: 10,382 ms/op
# Warmup Iteration   5: 10,430 ms/op
# Warmup Iteration   6: 10,427 ms/op
# Warmup Iteration   7: 10,444 ms/op
# Warmup Iteration   8: 10,473 ms/op
# Warmup Iteration   9: 10,482 ms/op
# Warmup Iteration  10: 10,521 ms/op
Iteration   1: 10,525 ms/op
Iteration   2: 10,525 ms/op
Iteration   3: 10,496 ms/op
Iteration   4: 10,483 ms/op
Iteration   5: 10,405 ms/op
Iteration   6: 10,442 ms/op
Iteration   7: 10,491 ms/op
Iteration   8: 10,471 ms/op
Iteration   9: 10,536 ms/op
Iteration  10: 10,396 ms/op


Result "benchmarkFind":
  10,477 ±(99.9%) 0,074 ms/op [Average]
  (min, avg, max) = (10,396, 10,477, 10,536), stdev = 0,049
  CI (99.9%): [10,403, 10,551] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 32, patternSize = 2)

# Run progress: 61,03% complete, ETA 06:09:57
# Fork: 1 of 1
# Warmup Iteration   1: 887,730 ms/op
# Warmup Iteration   2: 754,232 ms/op
# Warmup Iteration   3: 746,649 ms/op
# Warmup Iteration   4: 751,544 ms/op
# Warmup Iteration   5: 741,619 ms/op
# Warmup Iteration   6: 738,182 ms/op
# Warmup Iteration   7: 745,564 ms/op
# Warmup Iteration   8: 734,411 ms/op
# Warmup Iteration   9: 771,059 ms/op
# Warmup Iteration  10: 733,599 ms/op
Iteration   1: 735,481 ms/op
Iteration   2: 737,375 ms/op
Iteration   3: 730,707 ms/op
Iteration   4: 748,982 ms/op
Iteration   5: 734,758 ms/op
Iteration   6: 731,714 ms/op
Iteration   7: 733,719 ms/op
Iteration   8: 738,637 ms/op
Iteration   9: 741,361 ms/op
Iteration  10: 749,066 ms/op


Result "benchmarkFind":
  738,180 ±(99.9%) 9,859 ms/op [Average]
  (min, avg, max) = (730,707, 738,180, 749,066), stdev = 6,521
  CI (99.9%): [728,321, 748,039] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 32, patternSize = 4)

# Run progress: 61,08% complete, ETA 06:09:35
# Fork: 1 of 1
# Warmup Iteration   1: 443,964 ms/op
# Warmup Iteration   2: 402,786 ms/op
# Warmup Iteration   3: 403,007 ms/op
# Warmup Iteration   4: 431,489 ms/op
# Warmup Iteration   5: 425,496 ms/op
# Warmup Iteration   6: 404,506 ms/op
# Warmup Iteration   7: 403,391 ms/op
# Warmup Iteration   8: 422,840 ms/op
# Warmup Iteration   9: 402,211 ms/op
# Warmup Iteration  10: 404,499 ms/op
Iteration   1: 404,356 ms/op
Iteration   2: 470,208 ms/op
Iteration   3: 447,685 ms/op
Iteration   4: 417,021 ms/op
Iteration   5: 458,618 ms/op
Iteration   6: 402,191 ms/op
Iteration   7: 405,473 ms/op
Iteration   8: 403,906 ms/op
Iteration   9: 401,937 ms/op
Iteration  10: 401,616 ms/op


Result "benchmarkFind":
  421,301 ±(99.9%) 40,526 ms/op [Average]
  (min, avg, max) = (401,616, 421,301, 470,208), stdev = 26,805
  CI (99.9%): [380,775, 461,827] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 32, patternSize = 8)

# Run progress: 61,12% complete, ETA 06:09:08
# Fork: 1 of 1
# Warmup Iteration   1: 225,259 ms/op
# Warmup Iteration   2: 197,436 ms/op
# Warmup Iteration   3: 199,294 ms/op
# Warmup Iteration   4: 200,403 ms/op
# Warmup Iteration   5: 199,279 ms/op
# Warmup Iteration   6: 199,849 ms/op
# Warmup Iteration   7: 199,004 ms/op
# Warmup Iteration   8: 199,356 ms/op
# Warmup Iteration   9: 199,107 ms/op
# Warmup Iteration  10: 200,130 ms/op
Iteration   1: 198,270 ms/op
Iteration   2: 200,474 ms/op
Iteration   3: 200,007 ms/op
Iteration   4: 232,547 ms/op
Iteration   5: 197,383 ms/op
Iteration   6: 217,856 ms/op
Iteration   7: 203,774 ms/op
Iteration   8: 200,359 ms/op
Iteration   9: 198,990 ms/op
Iteration  10: 199,142 ms/op


Result "benchmarkFind":
  204,880 ±(99.9%) 17,210 ms/op [Average]
  (min, avg, max) = (197,383, 204,880, 232,547), stdev = 11,383
  CI (99.9%): [187,671, 222,090] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 32, patternSize = 16)

# Run progress: 61,17% complete, ETA 06:08:41
# Fork: 1 of 1
# Warmup Iteration   1: 115,361 ms/op
# Warmup Iteration   2: 101,653 ms/op
# Warmup Iteration   3: 101,420 ms/op
# Warmup Iteration   4: 101,511 ms/op
# Warmup Iteration   5: 102,561 ms/op
# Warmup Iteration   6: 102,158 ms/op
# Warmup Iteration   7: 101,490 ms/op
# Warmup Iteration   8: 102,833 ms/op
# Warmup Iteration   9: 101,501 ms/op
# Warmup Iteration  10: 104,407 ms/op
Iteration   1: 101,640 ms/op
Iteration   2: 101,805 ms/op
Iteration   3: 101,598 ms/op
Iteration   4: 102,351 ms/op
Iteration   5: 101,177 ms/op
Iteration   6: 101,901 ms/op
Iteration   7: 101,513 ms/op
Iteration   8: 101,236 ms/op
Iteration   9: 101,921 ms/op
Iteration  10: 101,292 ms/op


Result "benchmarkFind":
  101,643 ±(99.9%) 0,551 ms/op [Average]
  (min, avg, max) = (101,177, 101,643, 102,351), stdev = 0,365
  CI (99.9%): [101,092, 102,195] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 32, patternSize = 32)

# Run progress: 61,21% complete, ETA 06:08:12
# Fork: 1 of 1
# Warmup Iteration   1: 59,486 ms/op
# Warmup Iteration   2: 51,681 ms/op
# Warmup Iteration   3: 51,357 ms/op
# Warmup Iteration   4: 51,783 ms/op
# Warmup Iteration   5: 52,223 ms/op
# Warmup Iteration   6: 52,158 ms/op
# Warmup Iteration   7: 51,761 ms/op
# Warmup Iteration   8: 51,746 ms/op
# Warmup Iteration   9: 51,610 ms/op
# Warmup Iteration  10: 51,977 ms/op
Iteration   1: 51,795 ms/op
Iteration   2: 52,226 ms/op
Iteration   3: 51,328 ms/op
Iteration   4: 51,373 ms/op
Iteration   5: 51,735 ms/op
Iteration   6: 51,476 ms/op
Iteration   7: 51,864 ms/op
Iteration   8: 51,593 ms/op
Iteration   9: 51,414 ms/op
Iteration  10: 51,642 ms/op


Result "benchmarkFind":
  51,644 ±(99.9%) 0,414 ms/op [Average]
  (min, avg, max) = (51,328, 51,644, 52,226), stdev = 0,274
  CI (99.9%): [51,230, 52,059] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 32, patternSize = 64)

# Run progress: 61,26% complete, ETA 06:07:43
# Fork: 1 of 1
# Warmup Iteration   1: 33,598 ms/op
# Warmup Iteration   2: 28,684 ms/op
# Warmup Iteration   3: 28,435 ms/op
# Warmup Iteration   4: 28,932 ms/op
# Warmup Iteration   5: 28,766 ms/op
# Warmup Iteration   6: 28,858 ms/op
# Warmup Iteration   7: 28,869 ms/op
# Warmup Iteration   8: 32,202 ms/op
# Warmup Iteration   9: 29,739 ms/op
# Warmup Iteration  10: 28,662 ms/op
Iteration   1: 28,643 ms/op
Iteration   2: 28,506 ms/op
Iteration   3: 29,506 ms/op
Iteration   4: 28,967 ms/op
Iteration   5: 28,792 ms/op
Iteration   6: 28,807 ms/op
Iteration   7: 28,729 ms/op
Iteration   8: 28,956 ms/op
Iteration   9: 28,807 ms/op
Iteration  10: 28,550 ms/op


Result "benchmarkFind":
  28,826 ±(99.9%) 0,428 ms/op [Average]
  (min, avg, max) = (28,506, 28,826, 29,506), stdev = 0,283
  CI (99.9%): [28,398, 29,255] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 32, patternSize = 128)

# Run progress: 61,31% complete, ETA 06:07:13
# Fork: 1 of 1
# Warmup Iteration   1: 21,265 ms/op
# Warmup Iteration   2: 18,080 ms/op
# Warmup Iteration   3: 18,091 ms/op
# Warmup Iteration   4: 18,198 ms/op
# Warmup Iteration   5: 18,116 ms/op
# Warmup Iteration   6: 18,372 ms/op
# Warmup Iteration   7: 18,271 ms/op
# Warmup Iteration   8: 18,442 ms/op
# Warmup Iteration   9: 18,338 ms/op
# Warmup Iteration  10: 18,390 ms/op
Iteration   1: 18,355 ms/op
Iteration   2: 18,336 ms/op
Iteration   3: 18,331 ms/op
Iteration   4: 18,400 ms/op
Iteration   5: 18,342 ms/op
Iteration   6: 18,355 ms/op
Iteration   7: 18,266 ms/op
Iteration   8: 18,529 ms/op
Iteration   9: 18,652 ms/op
Iteration  10: 18,310 ms/op


Result "benchmarkFind":
  18,388 ±(99.9%) 0,175 ms/op [Average]
  (min, avg, max) = (18,266, 18,388, 18,652), stdev = 0,116
  CI (99.9%): [18,213, 18,563] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 32, patternSize = 256)

# Run progress: 61,35% complete, ETA 06:06:44
# Fork: 1 of 1
# Warmup Iteration   1: 16,413 ms/op
# Warmup Iteration   2: 14,586 ms/op
# Warmup Iteration   3: 14,397 ms/op
# Warmup Iteration   4: 14,285 ms/op
# Warmup Iteration   5: 14,194 ms/op
# Warmup Iteration   6: 14,197 ms/op
# Warmup Iteration   7: 14,214 ms/op
# Warmup Iteration   8: 14,182 ms/op
# Warmup Iteration   9: 14,184 ms/op
# Warmup Iteration  10: 14,127 ms/op
Iteration   1: 14,178 ms/op
Iteration   2: 14,190 ms/op
Iteration   3: 14,179 ms/op
Iteration   4: 14,180 ms/op
Iteration   5: 14,185 ms/op
Iteration   6: 14,176 ms/op
Iteration   7: 14,142 ms/op
Iteration   8: 14,121 ms/op
Iteration   9: 14,057 ms/op
Iteration  10: 14,022 ms/op


Result "benchmarkFind":
  14,143 ±(99.9%) 0,089 ms/op [Average]
  (min, avg, max) = (14,022, 14,143, 14,190), stdev = 0,059
  CI (99.9%): [14,054, 14,232] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 128, patternSize = 2)

# Run progress: 61,40% complete, ETA 06:06:15
# Fork: 1 of 1
# Warmup Iteration   1: 1442,871 ms/op
# Warmup Iteration   2: 1334,925 ms/op
# Warmup Iteration   3: 1349,361 ms/op
# Warmup Iteration   4: 1291,359 ms/op
# Warmup Iteration   5: 1254,844 ms/op
# Warmup Iteration   6: 1257,273 ms/op
# Warmup Iteration   7: 1250,344 ms/op
# Warmup Iteration   8: 1253,727 ms/op
# Warmup Iteration   9: 1249,747 ms/op
# Warmup Iteration  10: 1250,393 ms/op
Iteration   1: 1255,070 ms/op
Iteration   2: 1247,983 ms/op
Iteration   3: 1252,061 ms/op
Iteration   4: 1255,942 ms/op
Iteration   5: 1246,618 ms/op
Iteration   6: 1254,436 ms/op
Iteration   7: 1254,793 ms/op
Iteration   8: 1252,028 ms/op
Iteration   9: 1253,383 ms/op
Iteration  10: 1252,597 ms/op


Result "benchmarkFind":
  1252,491 ±(99.9%) 4,610 ms/op [Average]
  (min, avg, max) = (1246,618, 1252,491, 1255,942), stdev = 3,049
  CI (99.9%): [1247,882, 1257,101] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 128, patternSize = 4)

# Run progress: 61,44% complete, ETA 06:05:49
# Fork: 1 of 1
# Warmup Iteration   1: 654,060 ms/op
# Warmup Iteration   2: 578,631 ms/op
# Warmup Iteration   3: 576,858 ms/op
# Warmup Iteration   4: 579,863 ms/op
# Warmup Iteration   5: 578,568 ms/op
# Warmup Iteration   6: 577,277 ms/op
# Warmup Iteration   7: 581,474 ms/op
# Warmup Iteration   8: 586,256 ms/op
# Warmup Iteration   9: 581,513 ms/op
# Warmup Iteration  10: 579,003 ms/op
Iteration   1: 580,307 ms/op
Iteration   2: 590,981 ms/op
Iteration   3: 582,352 ms/op
Iteration   4: 589,940 ms/op
Iteration   5: 582,234 ms/op
Iteration   6: 581,955 ms/op
Iteration   7: 578,151 ms/op
Iteration   8: 577,592 ms/op
Iteration   9: 581,146 ms/op
Iteration  10: 582,432 ms/op


Result "benchmarkFind":
  582,709 ±(99.9%) 6,703 ms/op [Average]
  (min, avg, max) = (577,592, 582,709, 590,981), stdev = 4,433
  CI (99.9%): [576,006, 589,412] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 128, patternSize = 8)

# Run progress: 61,49% complete, ETA 06:05:22
# Fork: 1 of 1
# Warmup Iteration   1: 274,508 ms/op
# Warmup Iteration   2: 242,245 ms/op
# Warmup Iteration   3: 246,636 ms/op
# Warmup Iteration   4: 244,556 ms/op
# Warmup Iteration   5: 246,017 ms/op
# Warmup Iteration   6: 245,884 ms/op
# Warmup Iteration   7: 245,422 ms/op
# Warmup Iteration   8: 245,320 ms/op
# Warmup Iteration   9: 245,345 ms/op
# Warmup Iteration  10: 245,719 ms/op
Iteration   1: 272,190 ms/op
Iteration   2: 244,045 ms/op
Iteration   3: 244,772 ms/op
Iteration   4: 246,032 ms/op
Iteration   5: 245,651 ms/op
Iteration   6: 245,034 ms/op
Iteration   7: 245,865 ms/op
Iteration   8: 244,342 ms/op
Iteration   9: 245,423 ms/op
Iteration  10: 245,554 ms/op


Result "benchmarkFind":
  247,891 ±(99.9%) 12,945 ms/op [Average]
  (min, avg, max) = (244,045, 247,891, 272,190), stdev = 8,562
  CI (99.9%): [234,946, 260,836] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 128, patternSize = 16)

# Run progress: 61,53% complete, ETA 06:04:55
# Fork: 1 of 1
# Warmup Iteration   1: 137,341 ms/op
# Warmup Iteration   2: 118,791 ms/op
# Warmup Iteration   3: 117,796 ms/op
# Warmup Iteration   4: 122,399 ms/op
# Warmup Iteration   5: 118,761 ms/op
# Warmup Iteration   6: 118,798 ms/op
# Warmup Iteration   7: 118,474 ms/op
# Warmup Iteration   8: 121,967 ms/op
# Warmup Iteration   9: 116,970 ms/op
# Warmup Iteration  10: 116,149 ms/op
Iteration   1: 116,682 ms/op
Iteration   2: 118,679 ms/op
Iteration   3: 118,390 ms/op
Iteration   4: 118,137 ms/op
Iteration   5: 117,915 ms/op
Iteration   6: 118,950 ms/op
Iteration   7: 116,927 ms/op
Iteration   8: 117,029 ms/op
Iteration   9: 118,081 ms/op
Iteration  10: 118,604 ms/op


Result "benchmarkFind":
  117,939 ±(99.9%) 1,204 ms/op [Average]
  (min, avg, max) = (116,682, 117,939, 118,950), stdev = 0,796
  CI (99.9%): [116,736, 119,143] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 128, patternSize = 32)

# Run progress: 61,58% complete, ETA 06:04:27
# Fork: 1 of 1
# Warmup Iteration   1: 74,760 ms/op
# Warmup Iteration   2: 65,081 ms/op
# Warmup Iteration   3: 64,161 ms/op
# Warmup Iteration   4: 65,219 ms/op
# Warmup Iteration   5: 64,960 ms/op
# Warmup Iteration   6: 65,763 ms/op
# Warmup Iteration   7: 65,186 ms/op
# Warmup Iteration   8: 65,146 ms/op
# Warmup Iteration   9: 65,612 ms/op
# Warmup Iteration  10: 65,541 ms/op
Iteration   1: 65,210 ms/op
Iteration   2: 65,009 ms/op
Iteration   3: 65,344 ms/op
Iteration   4: 65,488 ms/op
Iteration   5: 65,048 ms/op
Iteration   6: 64,507 ms/op
Iteration   7: 65,488 ms/op
Iteration   8: 65,082 ms/op
Iteration   9: 64,850 ms/op
Iteration  10: 65,050 ms/op


Result "benchmarkFind":
  65,108 ±(99.9%) 0,451 ms/op [Average]
  (min, avg, max) = (64,507, 65,108, 65,488), stdev = 0,298
  CI (99.9%): [64,657, 65,558] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 128, patternSize = 64)

# Run progress: 61,63% complete, ETA 06:03:58
# Fork: 1 of 1
# Warmup Iteration   1: 45,499 ms/op
# Warmup Iteration   2: 41,186 ms/op
# Warmup Iteration   3: 41,022 ms/op
# Warmup Iteration   4: 46,678 ms/op
# Warmup Iteration   5: 40,262 ms/op
# Warmup Iteration   6: 40,199 ms/op
# Warmup Iteration   7: 40,321 ms/op
# Warmup Iteration   8: 40,424 ms/op
# Warmup Iteration   9: 40,097 ms/op
# Warmup Iteration  10: 40,164 ms/op
Iteration   1: 40,536 ms/op
Iteration   2: 40,073 ms/op
Iteration   3: 40,085 ms/op
Iteration   4: 40,137 ms/op
Iteration   5: 40,228 ms/op
Iteration   6: 39,997 ms/op
Iteration   7: 40,269 ms/op
Iteration   8: 40,107 ms/op
Iteration   9: 40,140 ms/op
Iteration  10: 40,607 ms/op


Result "benchmarkFind":
  40,218 ±(99.9%) 0,305 ms/op [Average]
  (min, avg, max) = (39,997, 40,218, 40,607), stdev = 0,202
  CI (99.9%): [39,912, 40,523] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 128, patternSize = 128)

# Run progress: 61,67% complete, ETA 06:03:29
# Fork: 1 of 1
# Warmup Iteration   1: 35,054 ms/op
# Warmup Iteration   2: 30,689 ms/op
# Warmup Iteration   3: 30,417 ms/op
# Warmup Iteration   4: 30,183 ms/op
# Warmup Iteration   5: 30,317 ms/op
# Warmup Iteration   6: 30,151 ms/op
# Warmup Iteration   7: 30,182 ms/op
# Warmup Iteration   8: 30,503 ms/op
# Warmup Iteration   9: 30,141 ms/op
# Warmup Iteration  10: 30,077 ms/op
Iteration   1: 30,200 ms/op
Iteration   2: 30,163 ms/op
Iteration   3: 30,144 ms/op
Iteration   4: 30,051 ms/op
Iteration   5: 30,104 ms/op
Iteration   6: 31,335 ms/op
Iteration   7: 31,393 ms/op
Iteration   8: 29,998 ms/op
Iteration   9: 30,004 ms/op
Iteration  10: 30,043 ms/op


Result "benchmarkFind":
  30,343 ±(99.9%) 0,820 ms/op [Average]
  (min, avg, max) = (29,998, 30,343, 31,393), stdev = 0,542
  CI (99.9%): [29,524, 31,163] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetBackwardOracleMatchingBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 128, patternSize = 256)

# Run progress: 61,72% complete, ETA 06:03:00
# Fork: 1 of 1
# Warmup Iteration   1: 23,305 ms/op
# Warmup Iteration   2: 20,722 ms/op
# Warmup Iteration   3: 20,215 ms/op
# Warmup Iteration   4: 20,383 ms/op
# Warmup Iteration   5: 20,226 ms/op
# Warmup Iteration   6: 20,080 ms/op
# Warmup Iteration   7: 19,920 ms/op
# Warmup Iteration   8: 19,953 ms/op
# Warmup Iteration   9: 19,880 ms/op
# Warmup Iteration  10: 19,926 ms/op
Iteration   1: 19,882 ms/op
Iteration   2: 19,866 ms/op
Iteration   3: 19,884 ms/op
Iteration   4: 19,917 ms/op
Iteration   5: 19,900 ms/op
Iteration   6: 19,914 ms/op
Iteration   7: 19,944 ms/op
Iteration   8: 19,990 ms/op
Iteration   9: 19,861 ms/op
Iteration  10: 21,673 ms/op


Result "benchmarkFind":
  20,083 ±(99.9%) 0,847 ms/op [Average]
  (min, avg, max) = (19,861, 20,083, 21,673), stdev = 0,560
  CI (99.9%): [19,236, 20,930] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 2, patternSize = 2)

# Run progress: 61,76% complete, ETA 06:02:31
# Fork: 1 of 1
# Warmup Iteration   1: 0,132 ms/op
# Warmup Iteration   2: 0,121 ms/op
# Warmup Iteration   3: 0,121 ms/op
# Warmup Iteration   4: 0,121 ms/op
# Warmup Iteration   5: 0,121 ms/op
# Warmup Iteration   6: 0,122 ms/op
# Warmup Iteration   7: 0,122 ms/op
# Warmup Iteration   8: 0,122 ms/op
# Warmup Iteration   9: 0,123 ms/op
# Warmup Iteration  10: 0,123 ms/op
Iteration   1: 0,122 ms/op
Iteration   2: 0,123 ms/op
Iteration   3: 0,123 ms/op
Iteration   4: 0,122 ms/op
Iteration   5: 0,124 ms/op
Iteration   6: 0,124 ms/op
Iteration   7: 0,126 ms/op
Iteration   8: 0,125 ms/op
Iteration   9: 0,125 ms/op
Iteration  10: 0,124 ms/op


Result "benchmarkFind":
  0,124 ±(99.9%) 0,002 ms/op [Average]
  (min, avg, max) = (0,122, 0,124, 0,126), stdev = 0,001
  CI (99.9%): [0,122, 0,126] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 2, patternSize = 4)

# Run progress: 61,81% complete, ETA 06:02:01
# Fork: 1 of 1
# Warmup Iteration   1: 0,392 ms/op
# Warmup Iteration   2: 0,361 ms/op
# Warmup Iteration   3: 0,356 ms/op
# Warmup Iteration   4: 0,362 ms/op
# Warmup Iteration   5: 0,357 ms/op
# Warmup Iteration   6: 0,359 ms/op
# Warmup Iteration   7: 0,357 ms/op
# Warmup Iteration   8: 0,358 ms/op
# Warmup Iteration   9: 0,362 ms/op
# Warmup Iteration  10: 0,359 ms/op
Iteration   1: 0,358 ms/op
Iteration   2: 0,358 ms/op
Iteration   3: 0,358 ms/op
Iteration   4: 0,357 ms/op
Iteration   5: 0,360 ms/op
Iteration   6: 0,355 ms/op
Iteration   7: 0,360 ms/op
Iteration   8: 0,356 ms/op
Iteration   9: 0,358 ms/op
Iteration  10: 0,358 ms/op


Result "benchmarkFind":
  0,358 ±(99.9%) 0,002 ms/op [Average]
  (min, avg, max) = (0,355, 0,358, 0,360), stdev = 0,001
  CI (99.9%): [0,356, 0,360] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 2, patternSize = 8)

# Run progress: 61,86% complete, ETA 06:01:31
# Fork: 1 of 1
# Warmup Iteration   1: 3,620 ms/op
# Warmup Iteration   2: 3,395 ms/op
# Warmup Iteration   3: 3,395 ms/op
# Warmup Iteration   4: 3,392 ms/op
# Warmup Iteration   5: 3,364 ms/op
# Warmup Iteration   6: 3,385 ms/op
# Warmup Iteration   7: 3,363 ms/op
# Warmup Iteration   8: 3,357 ms/op
# Warmup Iteration   9: 3,384 ms/op
# Warmup Iteration  10: 3,367 ms/op
Iteration   1: 3,369 ms/op
Iteration   2: 3,411 ms/op
Iteration   3: 3,364 ms/op
Iteration   4: 3,371 ms/op
Iteration   5: 3,371 ms/op
Iteration   6: 3,355 ms/op
Iteration   7: 3,399 ms/op
Iteration   8: 3,370 ms/op
Iteration   9: 3,671 ms/op
Iteration  10: 3,393 ms/op


Result "benchmarkFind":
  3,408 ±(99.9%) 0,143 ms/op [Average]
  (min, avg, max) = (3,355, 3,408, 3,671), stdev = 0,094
  CI (99.9%): [3,265, 3,550] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 2, patternSize = 16)

# Run progress: 61,90% complete, ETA 06:01:02
# Fork: 1 of 1
# Warmup Iteration   1: 29,813 ms/op
# Warmup Iteration   2: 27,360 ms/op
# Warmup Iteration   3: 28,068 ms/op
# Warmup Iteration   4: 27,249 ms/op
# Warmup Iteration   5: 27,430 ms/op
# Warmup Iteration   6: 27,353 ms/op
# Warmup Iteration   7: 27,230 ms/op
# Warmup Iteration   8: 27,262 ms/op
# Warmup Iteration   9: 27,240 ms/op
# Warmup Iteration  10: 27,325 ms/op
Iteration   1: 27,280 ms/op
Iteration   2: 27,327 ms/op
Iteration   3: 28,471 ms/op
Iteration   4: 27,403 ms/op
Iteration   5: 27,113 ms/op
Iteration   6: 27,323 ms/op
Iteration   7: 27,340 ms/op
Iteration   8: 27,499 ms/op
Iteration   9: 27,566 ms/op
Iteration  10: 27,580 ms/op


Result "benchmarkFind":
  27,490 ±(99.9%) 0,563 ms/op [Average]
  (min, avg, max) = (27,113, 27,490, 28,471), stdev = 0,372
  CI (99.9%): [26,927, 28,053] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 2, patternSize = 32)

# Run progress: 61,95% complete, ETA 06:00:32
# Fork: 1 of 1
# Warmup Iteration   1: 30,450 ms/op
# Warmup Iteration   2: 28,842 ms/op
# Warmup Iteration   3: 28,703 ms/op
# Warmup Iteration   4: 28,649 ms/op
# Warmup Iteration   5: 28,777 ms/op
# Warmup Iteration   6: 28,710 ms/op
# Warmup Iteration   7: 28,771 ms/op
# Warmup Iteration   8: 28,668 ms/op
# Warmup Iteration   9: 28,760 ms/op
# Warmup Iteration  10: 28,756 ms/op
Iteration   1: 29,456 ms/op
Iteration   2: 29,599 ms/op
Iteration   3: 28,711 ms/op
Iteration   4: 28,678 ms/op
Iteration   5: 28,803 ms/op
Iteration   6: 28,812 ms/op
Iteration   7: 28,818 ms/op
Iteration   8: 28,748 ms/op
Iteration   9: 28,733 ms/op
Iteration  10: 29,090 ms/op


Result "benchmarkFind":
  28,945 ±(99.9%) 0,497 ms/op [Average]
  (min, avg, max) = (28,678, 28,945, 29,599), stdev = 0,329
  CI (99.9%): [28,448, 29,442] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 2, patternSize = 64)

# Run progress: 61,99% complete, ETA 06:00:03
# Fork: 1 of 1
# Warmup Iteration   1: 32,389 ms/op
# Warmup Iteration   2: 30,353 ms/op
# Warmup Iteration   3: 30,317 ms/op
# Warmup Iteration   4: 30,312 ms/op
# Warmup Iteration   5: 30,114 ms/op
# Warmup Iteration   6: 30,130 ms/op
# Warmup Iteration   7: 30,165 ms/op
# Warmup Iteration   8: 30,243 ms/op
# Warmup Iteration   9: 30,182 ms/op
# Warmup Iteration  10: 30,166 ms/op
Iteration   1: 30,178 ms/op
Iteration   2: 30,302 ms/op
Iteration   3: 30,435 ms/op
Iteration   4: 30,546 ms/op
Iteration   5: 30,370 ms/op
Iteration   6: 30,195 ms/op
Iteration   7: 33,466 ms/op
Iteration   8: 30,171 ms/op
Iteration   9: 30,417 ms/op
Iteration  10: 30,287 ms/op


Result "benchmarkFind":
  30,637 ±(99.9%) 1,514 ms/op [Average]
  (min, avg, max) = (30,171, 30,637, 33,466), stdev = 1,002
  CI (99.9%): [29,122, 32,151] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 2, patternSize = 128)

# Run progress: 62,04% complete, ETA 05:59:34
# Fork: 1 of 1
# Warmup Iteration   1: 32,594 ms/op
# Warmup Iteration   2: 31,445 ms/op
# Warmup Iteration   3: 31,354 ms/op
# Warmup Iteration   4: 31,479 ms/op
# Warmup Iteration   5: 31,453 ms/op
# Warmup Iteration   6: 31,448 ms/op
# Warmup Iteration   7: 31,197 ms/op
# Warmup Iteration   8: 31,216 ms/op
# Warmup Iteration   9: 31,195 ms/op
# Warmup Iteration  10: 31,185 ms/op
Iteration   1: 31,187 ms/op
Iteration   2: 31,358 ms/op
Iteration   3: 31,252 ms/op
Iteration   4: 31,250 ms/op
Iteration   5: 31,179 ms/op
Iteration   6: 31,262 ms/op
Iteration   7: 31,596 ms/op
Iteration   8: 31,454 ms/op
Iteration   9: 31,359 ms/op
Iteration  10: 31,397 ms/op


Result "benchmarkFind":
  31,329 ±(99.9%) 0,197 ms/op [Average]
  (min, avg, max) = (31,179, 31,329, 31,596), stdev = 0,130
  CI (99.9%): [31,133, 31,526] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 2, patternSize = 256)

# Run progress: 62,09% complete, ETA 05:59:04
# Fork: 1 of 1
# Warmup Iteration   1: 32,351 ms/op
# Warmup Iteration   2: 30,863 ms/op
# Warmup Iteration   3: 30,987 ms/op
# Warmup Iteration   4: 31,140 ms/op
# Warmup Iteration   5: 30,927 ms/op
# Warmup Iteration   6: 30,991 ms/op
# Warmup Iteration   7: 30,601 ms/op
# Warmup Iteration   8: 30,981 ms/op
# Warmup Iteration   9: 30,629 ms/op
# Warmup Iteration  10: 30,706 ms/op
Iteration   1: 30,443 ms/op
Iteration   2: 30,949 ms/op
Iteration   3: 30,578 ms/op
Iteration   4: 30,693 ms/op
Iteration   5: 30,674 ms/op
Iteration   6: 30,829 ms/op
Iteration   7: 30,949 ms/op
Iteration   8: 31,058 ms/op
Iteration   9: 30,778 ms/op
Iteration  10: 30,817 ms/op


Result "benchmarkFind":
  30,777 ±(99.9%) 0,281 ms/op [Average]
  (min, avg, max) = (30,443, 30,777, 31,058), stdev = 0,186
  CI (99.9%): [30,495, 31,058] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 8, patternSize = 2)

# Run progress: 62,13% complete, ETA 05:58:35
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

com.almondtools.stringbench.SampleNotQualifiedException
	at com.almondtools.stringbench.MultiPatternMatcherBenchmark.setup(MultiPatternMatcherBenchmark.java:36)
	at com.almondtools.stringbench.generated.SCSetHorspoolBenchmark_benchmarkFind_jmhTest._jmh_tryInit_f_scsethorspoolbenchmark0_0(SCSetHorspoolBenchmark_benchmarkFind_jmhTest.java:425)
	at com.almondtools.stringbench.generated.SCSetHorspoolBenchmark_benchmarkFind_jmhTest.benchmarkFind_AverageTime(SCSetHorspoolBenchmark_benchmarkFind_jmhTest.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:430)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:412)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)




# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 8, patternSize = 4)

# Run progress: 62,18% complete, ETA 05:57:54
# Fork: 1 of 1
# Warmup Iteration   1: 1,836 ms/op
# Warmup Iteration   2: 1,688 ms/op
# Warmup Iteration   3: 1,679 ms/op
# Warmup Iteration   4: 1,686 ms/op
# Warmup Iteration   5: 1,687 ms/op
# Warmup Iteration   6: 1,680 ms/op
# Warmup Iteration   7: 1,687 ms/op
# Warmup Iteration   8: 1,689 ms/op
# Warmup Iteration   9: 1,685 ms/op
# Warmup Iteration  10: 1,694 ms/op
Iteration   1: 1,673 ms/op
Iteration   2: 1,685 ms/op
Iteration   3: 1,866 ms/op
Iteration   4: 1,719 ms/op
Iteration   5: 1,680 ms/op
Iteration   6: 1,677 ms/op
Iteration   7: 1,678 ms/op
Iteration   8: 1,680 ms/op
Iteration   9: 1,682 ms/op
Iteration  10: 1,678 ms/op


Result "benchmarkFind":
  1,702 ±(99.9%) 0,090 ms/op [Average]
  (min, avg, max) = (1,673, 1,702, 1,866), stdev = 0,059
  CI (99.9%): [1,612, 1,791] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 8, patternSize = 8)

# Run progress: 62,22% complete, ETA 05:57:24
# Fork: 1 of 1
# Warmup Iteration   1: 18,960 ms/op
# Warmup Iteration   2: 17,504 ms/op
# Warmup Iteration   3: 17,520 ms/op
# Warmup Iteration   4: 17,459 ms/op
# Warmup Iteration   5: 17,561 ms/op
# Warmup Iteration   6: 17,478 ms/op
# Warmup Iteration   7: 17,419 ms/op
# Warmup Iteration   8: 17,444 ms/op
# Warmup Iteration   9: 17,634 ms/op
# Warmup Iteration  10: 17,479 ms/op
Iteration   1: 17,332 ms/op
Iteration   2: 17,432 ms/op
Iteration   3: 17,597 ms/op
Iteration   4: 17,382 ms/op
Iteration   5: 17,385 ms/op
Iteration   6: 17,405 ms/op
Iteration   7: 17,461 ms/op
Iteration   8: 17,486 ms/op
Iteration   9: 17,216 ms/op
Iteration  10: 17,420 ms/op


Result "benchmarkFind":
  17,411 ±(99.9%) 0,151 ms/op [Average]
  (min, avg, max) = (17,216, 17,411, 17,597), stdev = 0,100
  CI (99.9%): [17,261, 17,562] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 8, patternSize = 16)

# Run progress: 62,27% complete, ETA 05:56:55
# Fork: 1 of 1
# Warmup Iteration   1: 82,650 ms/op
# Warmup Iteration   2: 75,204 ms/op
# Warmup Iteration   3: 74,163 ms/op
# Warmup Iteration   4: 74,358 ms/op
# Warmup Iteration   5: 74,446 ms/op
# Warmup Iteration   6: 74,459 ms/op
# Warmup Iteration   7: 74,577 ms/op
# Warmup Iteration   8: 74,535 ms/op
# Warmup Iteration   9: 74,695 ms/op
# Warmup Iteration  10: 73,985 ms/op
Iteration   1: 74,209 ms/op
Iteration   2: 74,366 ms/op
Iteration   3: 74,361 ms/op
Iteration   4: 74,535 ms/op
Iteration   5: 75,114 ms/op
Iteration   6: 74,152 ms/op
Iteration   7: 74,571 ms/op
Iteration   8: 75,617 ms/op
Iteration   9: 75,086 ms/op
Iteration  10: 74,564 ms/op


Result "benchmarkFind":
  74,657 ±(99.9%) 0,708 ms/op [Average]
  (min, avg, max) = (74,152, 74,657, 75,617), stdev = 0,468
  CI (99.9%): [73,949, 75,365] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 8, patternSize = 32)

# Run progress: 62,32% complete, ETA 05:56:26
# Fork: 1 of 1
# Warmup Iteration   1: 56,949 ms/op
# Warmup Iteration   2: 54,373 ms/op
# Warmup Iteration   3: 53,990 ms/op
# Warmup Iteration   4: 54,263 ms/op
# Warmup Iteration   5: 53,876 ms/op
# Warmup Iteration   6: 54,174 ms/op
# Warmup Iteration   7: 54,397 ms/op
# Warmup Iteration   8: 54,455 ms/op
# Warmup Iteration   9: 54,611 ms/op
# Warmup Iteration  10: 58,349 ms/op
Iteration   1: 56,701 ms/op
Iteration   2: 54,782 ms/op
Iteration   3: 54,207 ms/op
Iteration   4: 54,747 ms/op
Iteration   5: 55,093 ms/op
Iteration   6: 54,699 ms/op
Iteration   7: 54,054 ms/op
Iteration   8: 54,032 ms/op
Iteration   9: 54,501 ms/op
Iteration  10: 54,075 ms/op


Result "benchmarkFind":
  54,689 ±(99.9%) 1,204 ms/op [Average]
  (min, avg, max) = (54,032, 54,689, 56,701), stdev = 0,796
  CI (99.9%): [53,486, 55,893] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 8, patternSize = 64)

# Run progress: 62,36% complete, ETA 05:55:57
# Fork: 1 of 1
# Warmup Iteration   1: 56,696 ms/op
# Warmup Iteration   2: 55,405 ms/op
# Warmup Iteration   3: 55,176 ms/op
# Warmup Iteration   4: 55,322 ms/op
# Warmup Iteration   5: 55,024 ms/op
# Warmup Iteration   6: 55,283 ms/op
# Warmup Iteration   7: 55,061 ms/op
# Warmup Iteration   8: 55,129 ms/op
# Warmup Iteration   9: 55,239 ms/op
# Warmup Iteration  10: 54,829 ms/op
Iteration   1: 55,103 ms/op
Iteration   2: 55,126 ms/op
Iteration   3: 55,480 ms/op
Iteration   4: 55,246 ms/op
Iteration   5: 54,724 ms/op
Iteration   6: 55,238 ms/op
Iteration   7: 54,925 ms/op
Iteration   8: 55,083 ms/op
Iteration   9: 55,031 ms/op
Iteration  10: 55,292 ms/op


Result "benchmarkFind":
  55,125 ±(99.9%) 0,316 ms/op [Average]
  (min, avg, max) = (54,724, 55,125, 55,480), stdev = 0,209
  CI (99.9%): [54,809, 55,441] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 8, patternSize = 128)

# Run progress: 62,41% complete, ETA 05:55:28
# Fork: 1 of 1
# Warmup Iteration   1: 62,790 ms/op
# Warmup Iteration   2: 62,298 ms/op
# Warmup Iteration   3: 61,904 ms/op
# Warmup Iteration   4: 62,048 ms/op
# Warmup Iteration   5: 61,625 ms/op
# Warmup Iteration   6: 62,161 ms/op
# Warmup Iteration   7: 61,712 ms/op
# Warmup Iteration   8: 62,114 ms/op
# Warmup Iteration   9: 62,026 ms/op
# Warmup Iteration  10: 61,915 ms/op
Iteration   1: 61,559 ms/op
Iteration   2: 61,811 ms/op
Iteration   3: 61,828 ms/op
Iteration   4: 62,067 ms/op
Iteration   5: 61,741 ms/op
Iteration   6: 61,489 ms/op
Iteration   7: 61,629 ms/op
Iteration   8: 61,083 ms/op
Iteration   9: 61,530 ms/op
Iteration  10: 61,466 ms/op


Result "benchmarkFind":
  61,620 ±(99.9%) 0,402 ms/op [Average]
  (min, avg, max) = (61,083, 61,620, 62,067), stdev = 0,266
  CI (99.9%): [61,218, 62,022] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 8, patternSize = 256)

# Run progress: 62,45% complete, ETA 05:54:59
# Fork: 1 of 1
# Warmup Iteration   1: 60,217 ms/op
# Warmup Iteration   2: 59,140 ms/op
# Warmup Iteration   3: 58,646 ms/op
# Warmup Iteration   4: 58,635 ms/op
# Warmup Iteration   5: 58,641 ms/op
# Warmup Iteration   6: 64,394 ms/op
# Warmup Iteration   7: 61,179 ms/op
# Warmup Iteration   8: 59,593 ms/op
# Warmup Iteration   9: 61,309 ms/op
# Warmup Iteration  10: 62,414 ms/op
Iteration   1: 59,760 ms/op
Iteration   2: 59,552 ms/op
Iteration   3: 59,209 ms/op
Iteration   4: 59,528 ms/op
Iteration   5: 59,643 ms/op
Iteration   6: 58,567 ms/op
Iteration   7: 58,897 ms/op
Iteration   8: 58,655 ms/op
Iteration   9: 59,224 ms/op
Iteration  10: 59,273 ms/op


Result "benchmarkFind":
  59,231 ±(99.9%) 0,623 ms/op [Average]
  (min, avg, max) = (58,567, 59,231, 59,760), stdev = 0,412
  CI (99.9%): [58,608, 59,853] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 32, patternSize = 2)

# Run progress: 62,50% complete, ETA 05:54:30
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

com.almondtools.stringbench.SampleNotQualifiedException
	at com.almondtools.stringbench.MultiPatternMatcherBenchmark.setup(MultiPatternMatcherBenchmark.java:36)
	at com.almondtools.stringbench.generated.SCSetHorspoolBenchmark_benchmarkFind_jmhTest._jmh_tryInit_f_scsethorspoolbenchmark0_0(SCSetHorspoolBenchmark_benchmarkFind_jmhTest.java:425)
	at com.almondtools.stringbench.generated.SCSetHorspoolBenchmark_benchmarkFind_jmhTest.benchmarkFind_AverageTime(SCSetHorspoolBenchmark_benchmarkFind_jmhTest.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:430)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:412)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)




# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 32, patternSize = 4)

# Run progress: 62,55% complete, ETA 05:53:49
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

com.almondtools.stringbench.SampleNotQualifiedException
	at com.almondtools.stringbench.MultiPatternMatcherBenchmark.setup(MultiPatternMatcherBenchmark.java:36)
	at com.almondtools.stringbench.generated.SCSetHorspoolBenchmark_benchmarkFind_jmhTest._jmh_tryInit_f_scsethorspoolbenchmark0_0(SCSetHorspoolBenchmark_benchmarkFind_jmhTest.java:425)
	at com.almondtools.stringbench.generated.SCSetHorspoolBenchmark_benchmarkFind_jmhTest.benchmarkFind_AverageTime(SCSetHorspoolBenchmark_benchmarkFind_jmhTest.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:430)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:412)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)




# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 32, patternSize = 8)

# Run progress: 62,59% complete, ETA 05:53:08
# Fork: 1 of 1
# Warmup Iteration   1: 171,161 ms/op
# Warmup Iteration   2: 151,962 ms/op
# Warmup Iteration   3: 150,832 ms/op
# Warmup Iteration   4: 152,191 ms/op
# Warmup Iteration   5: 151,492 ms/op
# Warmup Iteration   6: 151,912 ms/op
# Warmup Iteration   7: 152,157 ms/op
# Warmup Iteration   8: 151,288 ms/op
# Warmup Iteration   9: 151,171 ms/op
# Warmup Iteration  10: 152,179 ms/op
Iteration   1: 151,051 ms/op
Iteration   2: 151,666 ms/op
Iteration   3: 151,791 ms/op
Iteration   4: 152,102 ms/op
Iteration   5: 151,492 ms/op
Iteration   6: 151,124 ms/op
Iteration   7: 151,606 ms/op
Iteration   8: 151,441 ms/op
Iteration   9: 152,282 ms/op
Iteration  10: 151,981 ms/op


Result "benchmarkFind":
  151,654 ±(99.9%) 0,605 ms/op [Average]
  (min, avg, max) = (151,051, 151,654, 152,282), stdev = 0,400
  CI (99.9%): [151,049, 152,258] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 32, patternSize = 16)

# Run progress: 62,64% complete, ETA 05:52:40
# Fork: 1 of 1
# Warmup Iteration   1: 213,996 ms/op
# Warmup Iteration   2: 196,893 ms/op
# Warmup Iteration   3: 196,606 ms/op
# Warmup Iteration   4: 195,893 ms/op
# Warmup Iteration   5: 195,485 ms/op
# Warmup Iteration   6: 196,860 ms/op
# Warmup Iteration   7: 194,520 ms/op
# Warmup Iteration   8: 194,760 ms/op
# Warmup Iteration   9: 196,128 ms/op
# Warmup Iteration  10: 194,898 ms/op
Iteration   1: 197,030 ms/op
Iteration   2: 195,524 ms/op
Iteration   3: 197,843 ms/op
Iteration   4: 198,615 ms/op
Iteration   5: 198,340 ms/op
Iteration   6: 196,506 ms/op
Iteration   7: 197,880 ms/op
Iteration   8: 207,553 ms/op
Iteration   9: 193,268 ms/op
Iteration  10: 192,937 ms/op


Result "benchmarkFind":
  197,550 ±(99.9%) 6,112 ms/op [Average]
  (min, avg, max) = (192,937, 197,550, 207,553), stdev = 4,043
  CI (99.9%): [191,438, 203,661] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 32, patternSize = 32)

# Run progress: 62,68% complete, ETA 05:52:13
# Fork: 1 of 1
# Warmup Iteration   1: 94,013 ms/op
# Warmup Iteration   2: 88,857 ms/op
# Warmup Iteration   3: 88,981 ms/op
# Warmup Iteration   4: 89,017 ms/op
# Warmup Iteration   5: 88,400 ms/op
# Warmup Iteration   6: 88,339 ms/op
# Warmup Iteration   7: 88,417 ms/op
# Warmup Iteration   8: 88,407 ms/op
# Warmup Iteration   9: 88,798 ms/op
# Warmup Iteration  10: 88,310 ms/op
Iteration   1: 88,978 ms/op
Iteration   2: 89,209 ms/op
Iteration   3: 89,823 ms/op
Iteration   4: 88,623 ms/op
Iteration   5: 88,776 ms/op
Iteration   6: 89,089 ms/op
Iteration   7: 88,838 ms/op
Iteration   8: 89,356 ms/op
Iteration   9: 89,727 ms/op
Iteration  10: 89,692 ms/op


Result "benchmarkFind":
  89,211 ±(99.9%) 0,645 ms/op [Average]
  (min, avg, max) = (88,623, 89,211, 89,823), stdev = 0,426
  CI (99.9%): [88,566, 89,856] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 32, patternSize = 64)

# Run progress: 62,73% complete, ETA 05:51:44
# Fork: 1 of 1
# Warmup Iteration   1: 88,352 ms/op
# Warmup Iteration   2: 84,258 ms/op
# Warmup Iteration   3: 85,362 ms/op
# Warmup Iteration   4: 83,769 ms/op
# Warmup Iteration   5: 83,873 ms/op
# Warmup Iteration   6: 84,066 ms/op
# Warmup Iteration   7: 83,868 ms/op
# Warmup Iteration   8: 84,116 ms/op
# Warmup Iteration   9: 84,263 ms/op
# Warmup Iteration  10: 85,441 ms/op
Iteration   1: 84,055 ms/op
Iteration   2: 83,374 ms/op
Iteration   3: 84,504 ms/op
Iteration   4: 83,877 ms/op
Iteration   5: 84,006 ms/op
Iteration   6: 83,820 ms/op
Iteration   7: 83,782 ms/op
Iteration   8: 84,142 ms/op
Iteration   9: 84,147 ms/op
Iteration  10: 83,635 ms/op


Result "benchmarkFind":
  83,934 ±(99.9%) 0,471 ms/op [Average]
  (min, avg, max) = (83,374, 83,934, 84,504), stdev = 0,312
  CI (99.9%): [83,463, 84,406] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 32, patternSize = 128)

# Run progress: 62,78% complete, ETA 05:51:15
# Fork: 1 of 1
# Warmup Iteration   1: 88,329 ms/op
# Warmup Iteration   2: 85,384 ms/op
# Warmup Iteration   3: 85,266 ms/op
# Warmup Iteration   4: 84,996 ms/op
# Warmup Iteration   5: 84,855 ms/op
# Warmup Iteration   6: 85,065 ms/op
# Warmup Iteration   7: 84,854 ms/op
# Warmup Iteration   8: 85,545 ms/op
# Warmup Iteration   9: 85,086 ms/op
# Warmup Iteration  10: 85,069 ms/op
Iteration   1: 84,758 ms/op
Iteration   2: 85,127 ms/op
Iteration   3: 84,923 ms/op
Iteration   4: 93,026 ms/op
Iteration   5: 85,679 ms/op
Iteration   6: 85,328 ms/op
Iteration   7: 86,080 ms/op
Iteration   8: 86,135 ms/op
Iteration   9: 86,429 ms/op
Iteration  10: 85,218 ms/op


Result "benchmarkFind":
  86,270 ±(99.9%) 3,685 ms/op [Average]
  (min, avg, max) = (84,758, 86,270, 93,026), stdev = 2,437
  CI (99.9%): [82,585, 89,955] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 32, patternSize = 256)

# Run progress: 62,82% complete, ETA 05:50:46
# Fork: 1 of 1
# Warmup Iteration   1: 88,253 ms/op
# Warmup Iteration   2: 84,322 ms/op
# Warmup Iteration   3: 84,040 ms/op
# Warmup Iteration   4: 84,242 ms/op
# Warmup Iteration   5: 84,226 ms/op
# Warmup Iteration   6: 84,543 ms/op
# Warmup Iteration   7: 84,950 ms/op
# Warmup Iteration   8: 85,257 ms/op
# Warmup Iteration   9: 84,428 ms/op
# Warmup Iteration  10: 84,533 ms/op
Iteration   1: 84,165 ms/op
Iteration   2: 84,438 ms/op
Iteration   3: 83,764 ms/op
Iteration   4: 85,035 ms/op
Iteration   5: 84,019 ms/op
Iteration   6: 84,575 ms/op
Iteration   7: 84,609 ms/op
Iteration   8: 84,203 ms/op
Iteration   9: 84,631 ms/op
Iteration  10: 84,564 ms/op


Result "benchmarkFind":
  84,400 ±(99.9%) 0,553 ms/op [Average]
  (min, avg, max) = (83,764, 84,400, 85,035), stdev = 0,366
  CI (99.9%): [83,848, 84,953] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 128, patternSize = 2)

# Run progress: 62,87% complete, ETA 05:50:17
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

com.almondtools.stringbench.SampleNotQualifiedException
	at com.almondtools.stringbench.MultiPatternMatcherBenchmark.setup(MultiPatternMatcherBenchmark.java:36)
	at com.almondtools.stringbench.generated.SCSetHorspoolBenchmark_benchmarkFind_jmhTest._jmh_tryInit_f_scsethorspoolbenchmark0_0(SCSetHorspoolBenchmark_benchmarkFind_jmhTest.java:425)
	at com.almondtools.stringbench.generated.SCSetHorspoolBenchmark_benchmarkFind_jmhTest.benchmarkFind_AverageTime(SCSetHorspoolBenchmark_benchmarkFind_jmhTest.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:430)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:412)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)




# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 128, patternSize = 4)

# Run progress: 62,91% complete, ETA 05:49:36
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

com.almondtools.stringbench.SampleNotQualifiedException
	at com.almondtools.stringbench.MultiPatternMatcherBenchmark.setup(MultiPatternMatcherBenchmark.java:36)
	at com.almondtools.stringbench.generated.SCSetHorspoolBenchmark_benchmarkFind_jmhTest._jmh_tryInit_f_scsethorspoolbenchmark0_0(SCSetHorspoolBenchmark_benchmarkFind_jmhTest.java:425)
	at com.almondtools.stringbench.generated.SCSetHorspoolBenchmark_benchmarkFind_jmhTest.benchmarkFind_AverageTime(SCSetHorspoolBenchmark_benchmarkFind_jmhTest.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:430)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:412)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)




# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 128, patternSize = 8)

# Run progress: 62,96% complete, ETA 05:48:56
# Fork: 1 of 1
# Warmup Iteration   1: 528,701 ms/op
# Warmup Iteration   2: 453,643 ms/op
# Warmup Iteration   3: 450,283 ms/op
# Warmup Iteration   4: 447,710 ms/op
# Warmup Iteration   5: 447,994 ms/op
# Warmup Iteration   6: 449,803 ms/op
# Warmup Iteration   7: 447,339 ms/op
# Warmup Iteration   8: 448,343 ms/op
# Warmup Iteration   9: 450,937 ms/op
# Warmup Iteration  10: 448,078 ms/op
Iteration   1: 450,851 ms/op
Iteration   2: 448,180 ms/op
Iteration   3: 449,342 ms/op
Iteration   4: 446,935 ms/op
Iteration   5: 448,357 ms/op
Iteration   6: 447,862 ms/op
Iteration   7: 448,383 ms/op
Iteration   8: 448,280 ms/op
Iteration   9: 448,169 ms/op
Iteration  10: 447,527 ms/op


Result "benchmarkFind":
  448,389 ±(99.9%) 1,610 ms/op [Average]
  (min, avg, max) = (446,935, 448,389, 450,851), stdev = 1,065
  CI (99.9%): [446,779, 449,999] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 128, patternSize = 16)

# Run progress: 63,01% complete, ETA 05:48:31
# Fork: 1 of 1
# Warmup Iteration   1: 1679,561 ms/op
# Warmup Iteration   2: 1716,298 ms/op
# Warmup Iteration   3: 1586,562 ms/op
# Warmup Iteration   4: 1679,482 ms/op
# Warmup Iteration   5: 1673,048 ms/op
# Warmup Iteration   6: 1684,741 ms/op
# Warmup Iteration   7: 1680,770 ms/op
# Warmup Iteration   8: 1677,520 ms/op
# Warmup Iteration   9: 1687,256 ms/op
# Warmup Iteration  10: 1681,659 ms/op
Iteration   1: 1687,426 ms/op
Iteration   2: 1702,182 ms/op
Iteration   3: 1706,382 ms/op
Iteration   4: 1674,880 ms/op
Iteration   5: 1677,472 ms/op
Iteration   6: 1693,302 ms/op
Iteration   7: 1678,845 ms/op
Iteration   8: 1682,414 ms/op
Iteration   9: 1702,459 ms/op
Iteration  10: 1684,863 ms/op


Result "benchmarkFind":
  1689,023 ±(99.9%) 17,266 ms/op [Average]
  (min, avg, max) = (1674,880, 1689,023, 1706,382), stdev = 11,421
  CI (99.9%): [1671,756, 1706,289] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 128, patternSize = 32)

# Run progress: 63,05% complete, ETA 05:48:10
# Fork: 1 of 1
# Warmup Iteration   1: 130,436 ms/op
# Warmup Iteration   2: 126,120 ms/op
# Warmup Iteration   3: 125,968 ms/op
# Warmup Iteration   4: 124,750 ms/op
# Warmup Iteration   5: 125,071 ms/op
# Warmup Iteration   6: 125,467 ms/op
# Warmup Iteration   7: 125,925 ms/op
# Warmup Iteration   8: 125,270 ms/op
# Warmup Iteration   9: 125,688 ms/op
# Warmup Iteration  10: 125,936 ms/op
Iteration   1: 125,631 ms/op
Iteration   2: 124,944 ms/op
Iteration   3: 126,216 ms/op
Iteration   4: 125,401 ms/op
Iteration   5: 126,542 ms/op
Iteration   6: 125,854 ms/op
Iteration   7: 125,980 ms/op
Iteration   8: 126,521 ms/op
Iteration   9: 125,817 ms/op
Iteration  10: 126,024 ms/op


Result "benchmarkFind":
  125,893 ±(99.9%) 0,741 ms/op [Average]
  (min, avg, max) = (124,944, 125,893, 126,542), stdev = 0,490
  CI (99.9%): [125,152, 126,634] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 128, patternSize = 64)

# Run progress: 63,10% complete, ETA 05:47:41
# Fork: 1 of 1
# Warmup Iteration   1: 130,970 ms/op
# Warmup Iteration   2: 123,963 ms/op
# Warmup Iteration   3: 124,276 ms/op
# Warmup Iteration   4: 125,887 ms/op
# Warmup Iteration   5: 124,257 ms/op
# Warmup Iteration   6: 128,309 ms/op
# Warmup Iteration   7: 124,335 ms/op
# Warmup Iteration   8: 124,848 ms/op
# Warmup Iteration   9: 124,617 ms/op
# Warmup Iteration  10: 123,478 ms/op
Iteration   1: 124,075 ms/op
Iteration   2: 124,508 ms/op
Iteration   3: 124,082 ms/op
Iteration   4: 123,751 ms/op
Iteration   5: 123,848 ms/op
Iteration   6: 123,532 ms/op
Iteration   7: 124,221 ms/op
Iteration   8: 123,412 ms/op
Iteration   9: 123,886 ms/op
Iteration  10: 123,859 ms/op


Result "benchmarkFind":
  123,917 ±(99.9%) 0,487 ms/op [Average]
  (min, avg, max) = (123,412, 123,917, 124,508), stdev = 0,322
  CI (99.9%): [123,431, 124,404] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 128, patternSize = 128)

# Run progress: 63,14% complete, ETA 05:47:13
# Fork: 1 of 1
# Warmup Iteration   1: 127,711 ms/op
# Warmup Iteration   2: 124,216 ms/op
# Warmup Iteration   3: 123,909 ms/op
# Warmup Iteration   4: 124,545 ms/op
# Warmup Iteration   5: 124,126 ms/op
# Warmup Iteration   6: 123,661 ms/op
# Warmup Iteration   7: 124,350 ms/op
# Warmup Iteration   8: 124,834 ms/op
# Warmup Iteration   9: 124,330 ms/op
# Warmup Iteration  10: 123,964 ms/op
Iteration   1: 123,694 ms/op
Iteration   2: 123,862 ms/op
Iteration   3: 122,603 ms/op
Iteration   4: 122,322 ms/op
Iteration   5: 122,655 ms/op
Iteration   6: 122,617 ms/op
Iteration   7: 123,318 ms/op
Iteration   8: 122,478 ms/op
Iteration   9: 122,636 ms/op
Iteration  10: 123,003 ms/op


Result "benchmarkFind":
  122,919 ±(99.9%) 0,804 ms/op [Average]
  (min, avg, max) = (122,322, 122,919, 123,862), stdev = 0,532
  CI (99.9%): [122,115, 123,723] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 128, patternSize = 256)

# Run progress: 63,19% complete, ETA 05:46:46
# Fork: 1 of 1
# Warmup Iteration   1: 127,134 ms/op
# Warmup Iteration   2: 124,015 ms/op
# Warmup Iteration   3: 122,235 ms/op
# Warmup Iteration   4: 123,103 ms/op
# Warmup Iteration   5: 123,700 ms/op
# Warmup Iteration   6: 123,684 ms/op
# Warmup Iteration   7: 123,635 ms/op
# Warmup Iteration   8: 122,403 ms/op
# Warmup Iteration   9: 123,605 ms/op
# Warmup Iteration  10: 122,941 ms/op
Iteration   1: 122,131 ms/op
Iteration   2: 123,879 ms/op
Iteration   3: 124,686 ms/op
Iteration   4: 123,980 ms/op
Iteration   5: 124,582 ms/op
Iteration   6: 123,971 ms/op
Iteration   7: 122,273 ms/op
Iteration   8: 122,860 ms/op
Iteration   9: 135,914 ms/op
Iteration  10: 123,168 ms/op


Result "benchmarkFind":
  124,745 ±(99.9%) 6,083 ms/op [Average]
  (min, avg, max) = (122,131, 124,745, 135,914), stdev = 4,023
  CI (99.9%): [118,662, 130,827] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 2, patternSize = 2)

# Run progress: 63,24% complete, ETA 05:46:18
# Fork: 1 of 1
# Warmup Iteration   1: 0,186 ms/op
# Warmup Iteration   2: 0,171 ms/op
# Warmup Iteration   3: 0,170 ms/op
# Warmup Iteration   4: 0,172 ms/op
# Warmup Iteration   5: 0,170 ms/op
# Warmup Iteration   6: 0,171 ms/op
# Warmup Iteration   7: 0,171 ms/op
# Warmup Iteration   8: 0,172 ms/op
# Warmup Iteration   9: 0,171 ms/op
# Warmup Iteration  10: 0,171 ms/op
Iteration   1: 0,173 ms/op
Iteration   2: 0,172 ms/op
Iteration   3: 0,171 ms/op
Iteration   4: 0,172 ms/op
Iteration   5: 0,172 ms/op
Iteration   6: 0,172 ms/op
Iteration   7: 0,171 ms/op
Iteration   8: 0,176 ms/op
Iteration   9: 0,172 ms/op
Iteration  10: 0,171 ms/op


Result "benchmarkFind":
  0,172 ±(99.9%) 0,002 ms/op [Average]
  (min, avg, max) = (0,171, 0,172, 0,176), stdev = 0,002
  CI (99.9%): [0,170, 0,174] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 2, patternSize = 4)

# Run progress: 63,28% complete, ETA 05:45:48
# Fork: 1 of 1
# Warmup Iteration   1: 2,015 ms/op
# Warmup Iteration   2: 1,830 ms/op
# Warmup Iteration   3: 1,840 ms/op
# Warmup Iteration   4: 1,849 ms/op
# Warmup Iteration   5: 1,826 ms/op
# Warmup Iteration   6: 1,846 ms/op
# Warmup Iteration   7: 1,836 ms/op
# Warmup Iteration   8: 1,829 ms/op
# Warmup Iteration   9: 1,834 ms/op
# Warmup Iteration  10: 1,826 ms/op
Iteration   1: 1,863 ms/op
Iteration   2: 1,870 ms/op
Iteration   3: 1,865 ms/op
Iteration   4: 1,864 ms/op
Iteration   5: 1,866 ms/op
Iteration   6: 1,875 ms/op
Iteration   7: 1,817 ms/op
Iteration   8: 1,804 ms/op
Iteration   9: 1,801 ms/op
Iteration  10: 1,809 ms/op


Result "benchmarkFind":
  1,843 ±(99.9%) 0,047 ms/op [Average]
  (min, avg, max) = (1,801, 1,843, 1,875), stdev = 0,031
  CI (99.9%): [1,797, 1,890] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 2, patternSize = 8)

# Run progress: 63,33% complete, ETA 05:45:19
# Fork: 1 of 1
# Warmup Iteration   1: 21,079 ms/op
# Warmup Iteration   2: 19,003 ms/op
# Warmup Iteration   3: 18,863 ms/op
# Warmup Iteration   4: 18,855 ms/op
# Warmup Iteration   5: 19,008 ms/op
# Warmup Iteration   6: 18,870 ms/op
# Warmup Iteration   7: 18,895 ms/op
# Warmup Iteration   8: 18,855 ms/op
# Warmup Iteration   9: 18,743 ms/op
# Warmup Iteration  10: 18,789 ms/op
Iteration   1: 18,768 ms/op
Iteration   2: 18,670 ms/op
Iteration   3: 18,705 ms/op
Iteration   4: 18,993 ms/op
Iteration   5: 18,945 ms/op
Iteration   6: 18,856 ms/op
Iteration   7: 21,100 ms/op
Iteration   8: 18,905 ms/op
Iteration   9: 18,875 ms/op
Iteration  10: 18,713 ms/op


Result "benchmarkFind":
  19,053 ±(99.9%) 1,100 ms/op [Average]
  (min, avg, max) = (18,670, 19,053, 21,100), stdev = 0,728
  CI (99.9%): [17,953, 20,153] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 2, patternSize = 16)

# Run progress: 63,37% complete, ETA 05:44:50
# Fork: 1 of 1
# Warmup Iteration   1: 10,025 ms/op
# Warmup Iteration   2: 8,965 ms/op
# Warmup Iteration   3: 8,909 ms/op
# Warmup Iteration   4: 8,931 ms/op
# Warmup Iteration   5: 8,898 ms/op
# Warmup Iteration   6: 8,923 ms/op
# Warmup Iteration   7: 8,861 ms/op
# Warmup Iteration   8: 8,896 ms/op
# Warmup Iteration   9: 8,849 ms/op
# Warmup Iteration  10: 8,877 ms/op
Iteration   1: 8,850 ms/op
Iteration   2: 8,923 ms/op
Iteration   3: 8,922 ms/op
Iteration   4: 8,849 ms/op
Iteration   5: 8,819 ms/op
Iteration   6: 8,906 ms/op
Iteration   7: 9,404 ms/op
Iteration   8: 9,507 ms/op
Iteration   9: 9,406 ms/op
Iteration  10: 9,394 ms/op


Result "benchmarkFind":
  9,098 ±(99.9%) 0,434 ms/op [Average]
  (min, avg, max) = (8,819, 9,098, 9,507), stdev = 0,287
  CI (99.9%): [8,664, 9,532] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 2, patternSize = 32)

# Run progress: 63,42% complete, ETA 05:44:21
# Fork: 1 of 1
# Warmup Iteration   1: 13,992 ms/op
# Warmup Iteration   2: 12,855 ms/op
# Warmup Iteration   3: 12,806 ms/op
# Warmup Iteration   4: 12,823 ms/op
# Warmup Iteration   5: 12,932 ms/op
# Warmup Iteration   6: 12,730 ms/op
# Warmup Iteration   7: 12,687 ms/op
# Warmup Iteration   8: 12,801 ms/op
# Warmup Iteration   9: 13,311 ms/op
# Warmup Iteration  10: 13,303 ms/op
Iteration   1: 13,379 ms/op
Iteration   2: 12,773 ms/op
Iteration   3: 12,727 ms/op
Iteration   4: 12,767 ms/op
Iteration   5: 12,761 ms/op
Iteration   6: 12,755 ms/op
Iteration   7: 12,831 ms/op
Iteration   8: 12,846 ms/op
Iteration   9: 12,840 ms/op
Iteration  10: 12,890 ms/op


Result "benchmarkFind":
  12,857 ±(99.9%) 0,288 ms/op [Average]
  (min, avg, max) = (12,727, 12,857, 13,379), stdev = 0,191
  CI (99.9%): [12,569, 13,145] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 2, patternSize = 64)

# Run progress: 63,47% complete, ETA 05:43:52
# Fork: 1 of 1
# Warmup Iteration   1: 12,119 ms/op
# Warmup Iteration   2: 11,315 ms/op
# Warmup Iteration   3: 11,339 ms/op
# Warmup Iteration   4: 11,472 ms/op
# Warmup Iteration   5: 11,514 ms/op
# Warmup Iteration   6: 11,497 ms/op
# Warmup Iteration   7: 11,483 ms/op
# Warmup Iteration   8: 11,509 ms/op
# Warmup Iteration   9: 11,536 ms/op
# Warmup Iteration  10: 11,593 ms/op
Iteration   1: 11,497 ms/op
Iteration   2: 11,497 ms/op
Iteration   3: 11,486 ms/op
Iteration   4: 11,501 ms/op
Iteration   5: 12,844 ms/op
Iteration   6: 11,594 ms/op
Iteration   7: 11,338 ms/op
Iteration   8: 11,336 ms/op
Iteration   9: 11,318 ms/op
Iteration  10: 11,308 ms/op


Result "benchmarkFind":
  11,572 ±(99.9%) 0,692 ms/op [Average]
  (min, avg, max) = (11,308, 11,572, 12,844), stdev = 0,458
  CI (99.9%): [10,880, 12,264] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 2, patternSize = 128)

# Run progress: 63,51% complete, ETA 05:43:23
# Fork: 1 of 1
# Warmup Iteration   1: 7,426 ms/op
# Warmup Iteration   2: 6,937 ms/op
# Warmup Iteration   3: 6,751 ms/op
# Warmup Iteration   4: 6,709 ms/op
# Warmup Iteration   5: 6,760 ms/op
# Warmup Iteration   6: 6,756 ms/op
# Warmup Iteration   7: 6,768 ms/op
# Warmup Iteration   8: 6,703 ms/op
# Warmup Iteration   9: 6,744 ms/op
# Warmup Iteration  10: 6,753 ms/op
Iteration   1: 6,701 ms/op
Iteration   2: 6,731 ms/op
Iteration   3: 6,702 ms/op
Iteration   4: 6,747 ms/op
Iteration   5: 6,761 ms/op
Iteration   6: 6,789 ms/op
Iteration   7: 6,617 ms/op
Iteration   8: 6,584 ms/op
Iteration   9: 6,614 ms/op
Iteration  10: 6,637 ms/op


Result "benchmarkFind":
  6,689 ±(99.9%) 0,107 ms/op [Average]
  (min, avg, max) = (6,584, 6,689, 6,789), stdev = 0,071
  CI (99.9%): [6,581, 6,796] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 2, patternSize = 256)

# Run progress: 63,56% complete, ETA 05:42:54
# Fork: 1 of 1
# Warmup Iteration   1: 13,473 ms/op
# Warmup Iteration   2: 12,821 ms/op
# Warmup Iteration   3: 12,860 ms/op
# Warmup Iteration   4: 12,847 ms/op
# Warmup Iteration   5: 12,708 ms/op
# Warmup Iteration   6: 12,857 ms/op
# Warmup Iteration   7: 12,803 ms/op
# Warmup Iteration   8: 12,808 ms/op
# Warmup Iteration   9: 12,829 ms/op
# Warmup Iteration  10: 12,786 ms/op
Iteration   1: 12,825 ms/op
Iteration   2: 12,890 ms/op
Iteration   3: 12,870 ms/op
Iteration   4: 12,796 ms/op
Iteration   5: 12,806 ms/op
Iteration   6: 12,957 ms/op
Iteration   7: 12,751 ms/op
Iteration   8: 12,767 ms/op
Iteration   9: 12,721 ms/op
Iteration  10: 12,815 ms/op


Result "benchmarkFind":
  12,820 ±(99.9%) 0,106 ms/op [Average]
  (min, avg, max) = (12,721, 12,820, 12,957), stdev = 0,070
  CI (99.9%): [12,714, 12,926] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 8, patternSize = 2)

# Run progress: 63,60% complete, ETA 05:42:25
# Fork: 1 of 1
# Warmup Iteration   1: 1,038 ms/op
# Warmup Iteration   2: 0,977 ms/op
# Warmup Iteration   3: 0,967 ms/op
# Warmup Iteration   4: 0,970 ms/op
# Warmup Iteration   5: 0,972 ms/op
# Warmup Iteration   6: 0,963 ms/op
# Warmup Iteration   7: 0,963 ms/op
# Warmup Iteration   8: 0,962 ms/op
# Warmup Iteration   9: 0,958 ms/op
# Warmup Iteration  10: 0,965 ms/op
Iteration   1: 0,965 ms/op
Iteration   2: 0,959 ms/op
Iteration   3: 0,970 ms/op
Iteration   4: 1,063 ms/op
Iteration   5: 0,962 ms/op
Iteration   6: 0,970 ms/op
Iteration   7: 0,964 ms/op
Iteration   8: 0,961 ms/op
Iteration   9: 0,969 ms/op
Iteration  10: 0,964 ms/op


Result "benchmarkFind":
  0,975 ±(99.9%) 0,047 ms/op [Average]
  (min, avg, max) = (0,959, 0,975, 1,063), stdev = 0,031
  CI (99.9%): [0,928, 1,022] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 8, patternSize = 4)

# Run progress: 63,65% complete, ETA 05:41:56
# Fork: 1 of 1
# Warmup Iteration   1: 23,302 ms/op
# Warmup Iteration   2: 21,726 ms/op
# Warmup Iteration   3: 21,806 ms/op
# Warmup Iteration   4: 21,833 ms/op
# Warmup Iteration   5: 21,596 ms/op
# Warmup Iteration   6: 21,671 ms/op
# Warmup Iteration   7: 21,645 ms/op
# Warmup Iteration   8: 21,623 ms/op
# Warmup Iteration   9: 21,876 ms/op
# Warmup Iteration  10: 21,630 ms/op
Iteration   1: 21,601 ms/op
Iteration   2: 21,662 ms/op
Iteration   3: 21,648 ms/op
Iteration   4: 22,021 ms/op
Iteration   5: 21,574 ms/op
Iteration   6: 21,572 ms/op
Iteration   7: 21,648 ms/op
Iteration   8: 21,655 ms/op
Iteration   9: 21,573 ms/op
Iteration  10: 21,665 ms/op


Result "benchmarkFind":
  21,662 ±(99.9%) 0,200 ms/op [Average]
  (min, avg, max) = (21,572, 21,662, 22,021), stdev = 0,132
  CI (99.9%): [21,462, 21,862] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 8, patternSize = 8)

# Run progress: 63,69% complete, ETA 05:41:27
# Fork: 1 of 1
# Warmup Iteration   1: 37,716 ms/op
# Warmup Iteration   2: 34,568 ms/op
# Warmup Iteration   3: 34,009 ms/op
# Warmup Iteration   4: 33,510 ms/op
# Warmup Iteration   5: 33,837 ms/op
# Warmup Iteration   6: 33,712 ms/op
# Warmup Iteration   7: 33,413 ms/op
# Warmup Iteration   8: 33,601 ms/op
# Warmup Iteration   9: 33,561 ms/op
# Warmup Iteration  10: 34,009 ms/op
Iteration   1: 34,506 ms/op
Iteration   2: 34,626 ms/op
Iteration   3: 33,572 ms/op
Iteration   4: 33,651 ms/op
Iteration   5: 33,809 ms/op
Iteration   6: 33,785 ms/op
Iteration   7: 33,697 ms/op
Iteration   8: 33,605 ms/op
Iteration   9: 33,826 ms/op
Iteration  10: 33,871 ms/op


Result "benchmarkFind":
  33,895 ±(99.9%) 0,557 ms/op [Average]
  (min, avg, max) = (33,572, 33,895, 34,626), stdev = 0,368
  CI (99.9%): [33,338, 34,451] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 8, patternSize = 16)

# Run progress: 63,74% complete, ETA 05:40:58
# Fork: 1 of 1
# Warmup Iteration   1: 27,074 ms/op
# Warmup Iteration   2: 24,768 ms/op
# Warmup Iteration   3: 24,768 ms/op
# Warmup Iteration   4: 24,665 ms/op
# Warmup Iteration   5: 24,525 ms/op
# Warmup Iteration   6: 24,890 ms/op
# Warmup Iteration   7: 24,762 ms/op
# Warmup Iteration   8: 24,649 ms/op
# Warmup Iteration   9: 24,504 ms/op
# Warmup Iteration  10: 24,364 ms/op
Iteration   1: 24,558 ms/op
Iteration   2: 26,559 ms/op
Iteration   3: 24,677 ms/op
Iteration   4: 24,324 ms/op
Iteration   5: 24,651 ms/op
Iteration   6: 24,634 ms/op
Iteration   7: 24,454 ms/op
Iteration   8: 24,508 ms/op
Iteration   9: 24,505 ms/op
Iteration  10: 24,588 ms/op


Result "benchmarkFind":
  24,746 ±(99.9%) 0,976 ms/op [Average]
  (min, avg, max) = (24,324, 24,746, 26,559), stdev = 0,646
  CI (99.9%): [23,769, 25,722] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 8, patternSize = 32)

# Run progress: 63,79% complete, ETA 05:40:29
# Fork: 1 of 1
# Warmup Iteration   1: 33,622 ms/op
# Warmup Iteration   2: 31,821 ms/op
# Warmup Iteration   3: 31,342 ms/op
# Warmup Iteration   4: 31,241 ms/op
# Warmup Iteration   5: 31,503 ms/op
# Warmup Iteration   6: 31,369 ms/op
# Warmup Iteration   7: 31,424 ms/op
# Warmup Iteration   8: 31,567 ms/op
# Warmup Iteration   9: 32,441 ms/op
# Warmup Iteration  10: 32,214 ms/op
Iteration   1: 32,408 ms/op
Iteration   2: 32,319 ms/op
Iteration   3: 32,400 ms/op
Iteration   4: 32,585 ms/op
Iteration   5: 32,410 ms/op
Iteration   6: 32,135 ms/op
Iteration   7: 31,227 ms/op
Iteration   8: 31,286 ms/op
Iteration   9: 31,192 ms/op
Iteration  10: 31,389 ms/op


Result "benchmarkFind":
  31,935 ±(99.9%) 0,880 ms/op [Average]
  (min, avg, max) = (31,192, 31,935, 32,585), stdev = 0,582
  CI (99.9%): [31,055, 32,815] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 8, patternSize = 64)

# Run progress: 63,83% complete, ETA 05:40:01
# Fork: 1 of 1
# Warmup Iteration   1: 33,157 ms/op
# Warmup Iteration   2: 30,936 ms/op
# Warmup Iteration   3: 30,816 ms/op
# Warmup Iteration   4: 30,952 ms/op
# Warmup Iteration   5: 30,981 ms/op
# Warmup Iteration   6: 30,824 ms/op
# Warmup Iteration   7: 30,772 ms/op
# Warmup Iteration   8: 30,821 ms/op
# Warmup Iteration   9: 31,050 ms/op
# Warmup Iteration  10: 31,006 ms/op
Iteration   1: 31,013 ms/op
Iteration   2: 31,002 ms/op
Iteration   3: 31,004 ms/op
Iteration   4: 31,003 ms/op
Iteration   5: 31,157 ms/op
Iteration   6: 30,982 ms/op
Iteration   7: 30,871 ms/op
Iteration   8: 31,071 ms/op
Iteration   9: 30,957 ms/op
Iteration  10: 30,851 ms/op


Result "benchmarkFind":
  30,991 ±(99.9%) 0,134 ms/op [Average]
  (min, avg, max) = (30,851, 30,991, 31,157), stdev = 0,088
  CI (99.9%): [30,857, 31,125] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 8, patternSize = 128)

# Run progress: 63,88% complete, ETA 05:39:32
# Fork: 1 of 1
# Warmup Iteration   1: 34,152 ms/op
# Warmup Iteration   2: 32,827 ms/op
# Warmup Iteration   3: 32,734 ms/op
# Warmup Iteration   4: 32,975 ms/op
# Warmup Iteration   5: 33,048 ms/op
# Warmup Iteration   6: 32,845 ms/op
# Warmup Iteration   7: 32,914 ms/op
# Warmup Iteration   8: 32,959 ms/op
# Warmup Iteration   9: 35,660 ms/op
# Warmup Iteration  10: 32,659 ms/op
Iteration   1: 32,692 ms/op
Iteration   2: 32,881 ms/op
Iteration   3: 32,621 ms/op
Iteration   4: 32,464 ms/op
Iteration   5: 32,494 ms/op
Iteration   6: 32,459 ms/op
Iteration   7: 32,422 ms/op
Iteration   8: 32,734 ms/op
Iteration   9: 32,425 ms/op
Iteration  10: 32,497 ms/op


Result "benchmarkFind":
  32,569 ±(99.9%) 0,236 ms/op [Average]
  (min, avg, max) = (32,422, 32,569, 32,881), stdev = 0,156
  CI (99.9%): [32,333, 32,804] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 8, patternSize = 256)

# Run progress: 63,92% complete, ETA 05:39:03
# Fork: 1 of 1
# Warmup Iteration   1: 35,298 ms/op
# Warmup Iteration   2: 33,555 ms/op
# Warmup Iteration   3: 33,151 ms/op
# Warmup Iteration   4: 33,452 ms/op
# Warmup Iteration   5: 33,305 ms/op
# Warmup Iteration   6: 33,382 ms/op
# Warmup Iteration   7: 33,328 ms/op
# Warmup Iteration   8: 33,405 ms/op
# Warmup Iteration   9: 33,450 ms/op
# Warmup Iteration  10: 33,521 ms/op
Iteration   1: 33,503 ms/op
Iteration   2: 33,592 ms/op
Iteration   3: 33,523 ms/op
Iteration   4: 33,405 ms/op
Iteration   5: 32,934 ms/op
Iteration   6: 33,232 ms/op
Iteration   7: 33,299 ms/op
Iteration   8: 33,213 ms/op
Iteration   9: 33,308 ms/op
Iteration  10: 33,155 ms/op


Result "benchmarkFind":
  33,316 ±(99.9%) 0,299 ms/op [Average]
  (min, avg, max) = (32,934, 33,316, 33,592), stdev = 0,198
  CI (99.9%): [33,018, 33,615] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 32, patternSize = 2)

# Run progress: 63,97% complete, ETA 05:38:34
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

com.almondtools.stringbench.SampleNotQualifiedException
	at com.almondtools.stringbench.MultiPatternMatcherBenchmark.setup(MultiPatternMatcherBenchmark.java:36)
	at com.almondtools.stringbench.generated.SCSetHorspoolBenchmark_benchmarkFind_jmhTest._jmh_tryInit_f_scsethorspoolbenchmark0_0(SCSetHorspoolBenchmark_benchmarkFind_jmhTest.java:425)
	at com.almondtools.stringbench.generated.SCSetHorspoolBenchmark_benchmarkFind_jmhTest.benchmarkFind_AverageTime(SCSetHorspoolBenchmark_benchmarkFind_jmhTest.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:430)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:412)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)




# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 32, patternSize = 4)

# Run progress: 64,02% complete, ETA 05:37:55
# Fork: 1 of 1
# Warmup Iteration   1: 172,628 ms/op
# Warmup Iteration   2: 159,502 ms/op
# Warmup Iteration   3: 159,244 ms/op
# Warmup Iteration   4: 159,836 ms/op
# Warmup Iteration   5: 158,508 ms/op
# Warmup Iteration   6: 159,828 ms/op
# Warmup Iteration   7: 159,283 ms/op
# Warmup Iteration   8: 159,480 ms/op
# Warmup Iteration   9: 158,975 ms/op
# Warmup Iteration  10: 159,005 ms/op
Iteration   1: 160,115 ms/op
Iteration   2: 159,779 ms/op
Iteration   3: 158,950 ms/op
Iteration   4: 158,938 ms/op
Iteration   5: 159,658 ms/op
Iteration   6: 158,991 ms/op
Iteration   7: 158,550 ms/op
Iteration   8: 159,015 ms/op
Iteration   9: 158,876 ms/op
Iteration  10: 158,994 ms/op


Result "benchmarkFind":
  159,187 ±(99.9%) 0,741 ms/op [Average]
  (min, avg, max) = (158,550, 159,187, 160,115), stdev = 0,490
  CI (99.9%): [158,446, 159,927] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 32, patternSize = 8)

# Run progress: 64,06% complete, ETA 05:37:27
# Fork: 1 of 1
# Warmup Iteration   1: 121,408 ms/op
# Warmup Iteration   2: 111,283 ms/op
# Warmup Iteration   3: 115,443 ms/op
# Warmup Iteration   4: 116,389 ms/op
# Warmup Iteration   5: 111,628 ms/op
# Warmup Iteration   6: 111,912 ms/op
# Warmup Iteration   7: 112,079 ms/op
# Warmup Iteration   8: 111,525 ms/op
# Warmup Iteration   9: 111,293 ms/op
# Warmup Iteration  10: 110,754 ms/op
Iteration   1: 112,126 ms/op
Iteration   2: 111,103 ms/op
Iteration   3: 110,562 ms/op
Iteration   4: 110,816 ms/op
Iteration   5: 111,478 ms/op
Iteration   6: 112,103 ms/op
Iteration   7: 111,493 ms/op
Iteration   8: 111,660 ms/op
Iteration   9: 111,214 ms/op
Iteration  10: 111,262 ms/op


Result "benchmarkFind":
  111,382 ±(99.9%) 0,762 ms/op [Average]
  (min, avg, max) = (110,562, 111,382, 112,126), stdev = 0,504
  CI (99.9%): [110,620, 112,143] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 32, patternSize = 16)

# Run progress: 64,11% complete, ETA 05:36:58
# Fork: 1 of 1
# Warmup Iteration   1: 46,884 ms/op
# Warmup Iteration   2: 44,451 ms/op
# Warmup Iteration   3: 44,624 ms/op
# Warmup Iteration   4: 44,294 ms/op
# Warmup Iteration   5: 44,321 ms/op
# Warmup Iteration   6: 44,651 ms/op
# Warmup Iteration   7: 44,642 ms/op
# Warmup Iteration   8: 44,550 ms/op
# Warmup Iteration   9: 44,634 ms/op
# Warmup Iteration  10: 44,653 ms/op
Iteration   1: 44,563 ms/op
Iteration   2: 44,631 ms/op
Iteration   3: 44,318 ms/op
Iteration   4: 44,232 ms/op
Iteration   5: 44,223 ms/op
Iteration   6: 44,267 ms/op
Iteration   7: 44,278 ms/op
Iteration   8: 44,251 ms/op
Iteration   9: 44,315 ms/op
Iteration  10: 44,353 ms/op


Result "benchmarkFind":
  44,343 ±(99.9%) 0,213 ms/op [Average]
  (min, avg, max) = (44,223, 44,343, 44,631), stdev = 0,141
  CI (99.9%): [44,130, 44,556] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 32, patternSize = 32)

# Run progress: 64,15% complete, ETA 05:36:30
# Fork: 1 of 1
# Warmup Iteration   1: 48,013 ms/op
# Warmup Iteration   2: 45,651 ms/op
# Warmup Iteration   3: 45,686 ms/op
# Warmup Iteration   4: 45,836 ms/op
# Warmup Iteration   5: 45,943 ms/op
# Warmup Iteration   6: 45,808 ms/op
# Warmup Iteration   7: 45,904 ms/op
# Warmup Iteration   8: 45,758 ms/op
# Warmup Iteration   9: 45,653 ms/op
# Warmup Iteration  10: 45,633 ms/op
Iteration   1: 45,808 ms/op
Iteration   2: 45,768 ms/op
Iteration   3: 45,531 ms/op
Iteration   4: 45,672 ms/op
Iteration   5: 45,679 ms/op
Iteration   6: 45,896 ms/op
Iteration   7: 46,161 ms/op
Iteration   8: 45,640 ms/op
Iteration   9: 46,340 ms/op
Iteration  10: 45,895 ms/op


Result "benchmarkFind":
  45,839 ±(99.9%) 0,375 ms/op [Average]
  (min, avg, max) = (45,531, 45,839, 46,340), stdev = 0,248
  CI (99.9%): [45,464, 46,214] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 32, patternSize = 64)

# Run progress: 64,20% complete, ETA 05:36:01
# Fork: 1 of 1
# Warmup Iteration   1: 51,705 ms/op
# Warmup Iteration   2: 43,860 ms/op
# Warmup Iteration   3: 43,882 ms/op
# Warmup Iteration   4: 43,832 ms/op
# Warmup Iteration   5: 44,071 ms/op
# Warmup Iteration   6: 43,771 ms/op
# Warmup Iteration   7: 43,628 ms/op
# Warmup Iteration   8: 43,900 ms/op
# Warmup Iteration   9: 44,143 ms/op
# Warmup Iteration  10: 43,886 ms/op
Iteration   1: 43,808 ms/op
Iteration   2: 43,780 ms/op
Iteration   3: 44,215 ms/op
Iteration   4: 43,958 ms/op
Iteration   5: 43,802 ms/op
Iteration   6: 43,581 ms/op
Iteration   7: 43,720 ms/op
Iteration   8: 43,635 ms/op
Iteration   9: 43,559 ms/op
Iteration  10: 44,040 ms/op


Result "benchmarkFind":
  43,810 ±(99.9%) 0,316 ms/op [Average]
  (min, avg, max) = (43,559, 43,810, 44,215), stdev = 0,209
  CI (99.9%): [43,494, 44,126] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 32, patternSize = 128)

# Run progress: 64,25% complete, ETA 05:35:32
# Fork: 1 of 1
# Warmup Iteration   1: 47,091 ms/op
# Warmup Iteration   2: 44,753 ms/op
# Warmup Iteration   3: 44,731 ms/op
# Warmup Iteration   4: 44,652 ms/op
# Warmup Iteration   5: 44,593 ms/op
# Warmup Iteration   6: 44,419 ms/op
# Warmup Iteration   7: 44,708 ms/op
# Warmup Iteration   8: 44,723 ms/op
# Warmup Iteration   9: 44,832 ms/op
# Warmup Iteration  10: 44,448 ms/op
Iteration   1: 44,571 ms/op
Iteration   2: 44,852 ms/op
Iteration   3: 44,771 ms/op
Iteration   4: 44,618 ms/op
Iteration   5: 45,209 ms/op
Iteration   6: 45,290 ms/op
Iteration   7: 44,358 ms/op
Iteration   8: 44,336 ms/op
Iteration   9: 44,134 ms/op
Iteration  10: 44,308 ms/op


Result "benchmarkFind":
  44,645 ±(99.9%) 0,586 ms/op [Average]
  (min, avg, max) = (44,134, 44,645, 45,290), stdev = 0,388
  CI (99.9%): [44,059, 45,231] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 32, patternSize = 256)

# Run progress: 64,29% complete, ETA 05:35:03
# Fork: 1 of 1
# Warmup Iteration   1: 47,990 ms/op
# Warmup Iteration   2: 45,429 ms/op
# Warmup Iteration   3: 45,612 ms/op
# Warmup Iteration   4: 45,194 ms/op
# Warmup Iteration   5: 45,862 ms/op
# Warmup Iteration   6: 45,630 ms/op
# Warmup Iteration   7: 45,226 ms/op
# Warmup Iteration   8: 45,465 ms/op
# Warmup Iteration   9: 45,269 ms/op
# Warmup Iteration  10: 45,131 ms/op
Iteration   1: 45,015 ms/op
Iteration   2: 45,795 ms/op
Iteration   3: 45,424 ms/op
Iteration   4: 45,582 ms/op
Iteration   5: 45,561 ms/op
Iteration   6: 45,990 ms/op
Iteration   7: 45,657 ms/op
Iteration   8: 45,301 ms/op
Iteration   9: 48,671 ms/op
Iteration  10: 45,392 ms/op


Result "benchmarkFind":
  45,839 ±(99.9%) 1,558 ms/op [Average]
  (min, avg, max) = (45,015, 45,839, 48,671), stdev = 1,031
  CI (99.9%): [44,280, 47,397] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 128, patternSize = 2)

# Run progress: 64,34% complete, ETA 05:34:35
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

com.almondtools.stringbench.SampleNotQualifiedException
	at com.almondtools.stringbench.MultiPatternMatcherBenchmark.setup(MultiPatternMatcherBenchmark.java:36)
	at com.almondtools.stringbench.generated.SCSetHorspoolBenchmark_benchmarkFind_jmhTest._jmh_tryInit_f_scsethorspoolbenchmark0_0(SCSetHorspoolBenchmark_benchmarkFind_jmhTest.java:425)
	at com.almondtools.stringbench.generated.SCSetHorspoolBenchmark_benchmarkFind_jmhTest.benchmarkFind_AverageTime(SCSetHorspoolBenchmark_benchmarkFind_jmhTest.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:430)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:412)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)




# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 128, patternSize = 4)

# Run progress: 64,38% complete, ETA 05:33:55
# Fork: 1 of 1
# Warmup Iteration   1: 473,313 ms/op
# Warmup Iteration   2: 449,130 ms/op
# Warmup Iteration   3: 442,923 ms/op
# Warmup Iteration   4: 444,569 ms/op
# Warmup Iteration   5: 443,727 ms/op
# Warmup Iteration   6: 443,933 ms/op
# Warmup Iteration   7: 445,083 ms/op
# Warmup Iteration   8: 447,738 ms/op
# Warmup Iteration   9: 443,249 ms/op
# Warmup Iteration  10: 444,221 ms/op
Iteration   1: 442,630 ms/op
Iteration   2: 442,008 ms/op
Iteration   3: 446,822 ms/op
Iteration   4: 443,813 ms/op
Iteration   5: 445,305 ms/op
Iteration   6: 446,269 ms/op
Iteration   7: 444,131 ms/op
Iteration   8: 446,024 ms/op
Iteration   9: 446,456 ms/op
Iteration  10: 445,613 ms/op


Result "benchmarkFind":
  444,907 ±(99.9%) 2,531 ms/op [Average]
  (min, avg, max) = (442,008, 444,907, 446,822), stdev = 1,674
  CI (99.9%): [442,377, 447,438] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 128, patternSize = 8)

# Run progress: 64,43% complete, ETA 05:33:30
# Fork: 1 of 1
# Warmup Iteration   1: 934,893 ms/op
# Warmup Iteration   2: 884,782 ms/op
# Warmup Iteration   3: 887,596 ms/op
# Warmup Iteration   4: 885,207 ms/op
# Warmup Iteration   5: 890,595 ms/op
# Warmup Iteration   6: 888,853 ms/op
# Warmup Iteration   7: 877,763 ms/op
# Warmup Iteration   8: 889,683 ms/op
# Warmup Iteration   9: 886,144 ms/op
# Warmup Iteration  10: 890,763 ms/op
Iteration   1: 889,429 ms/op
Iteration   2: 880,570 ms/op
Iteration   3: 888,794 ms/op
Iteration   4: 882,536 ms/op
Iteration   5: 884,889 ms/op
Iteration   6: 889,417 ms/op
Iteration   7: 937,261 ms/op
Iteration   8: 887,010 ms/op
Iteration   9: 887,263 ms/op
Iteration  10: 881,068 ms/op


Result "benchmarkFind":
  890,824 ±(99.9%) 25,177 ms/op [Average]
  (min, avg, max) = (880,570, 890,824, 937,261), stdev = 16,653
  CI (99.9%): [865,647, 916,001] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 128, patternSize = 16)

# Run progress: 64,48% complete, ETA 05:33:10
# Fork: 1 of 1
# Warmup Iteration   1: 60,599 ms/op
# Warmup Iteration   2: 58,024 ms/op
# Warmup Iteration   3: 58,213 ms/op
# Warmup Iteration   4: 58,370 ms/op
# Warmup Iteration   5: 58,039 ms/op
# Warmup Iteration   6: 58,219 ms/op
# Warmup Iteration   7: 57,889 ms/op
# Warmup Iteration   8: 57,831 ms/op
# Warmup Iteration   9: 58,175 ms/op
# Warmup Iteration  10: 57,779 ms/op
Iteration   1: 58,064 ms/op
Iteration   2: 57,826 ms/op
Iteration   3: 58,153 ms/op
Iteration   4: 58,187 ms/op
Iteration   5: 58,100 ms/op
Iteration   6: 57,745 ms/op
Iteration   7: 57,926 ms/op
Iteration   8: 57,596 ms/op
Iteration   9: 57,981 ms/op
Iteration  10: 56,963 ms/op


Result "benchmarkFind":
  57,854 ±(99.9%) 0,552 ms/op [Average]
  (min, avg, max) = (56,963, 57,854, 58,187), stdev = 0,365
  CI (99.9%): [57,303, 58,406] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 128, patternSize = 32)

# Run progress: 64,52% complete, ETA 05:32:42
# Fork: 1 of 1
# Warmup Iteration   1: 62,706 ms/op
# Warmup Iteration   2: 59,344 ms/op
# Warmup Iteration   3: 59,424 ms/op
# Warmup Iteration   4: 59,424 ms/op
# Warmup Iteration   5: 59,054 ms/op
# Warmup Iteration   6: 58,804 ms/op
# Warmup Iteration   7: 58,618 ms/op
# Warmup Iteration   8: 59,388 ms/op
# Warmup Iteration   9: 58,920 ms/op
# Warmup Iteration  10: 58,989 ms/op
Iteration   1: 59,486 ms/op
Iteration   2: 59,174 ms/op
Iteration   3: 58,843 ms/op
Iteration   4: 58,731 ms/op
Iteration   5: 59,024 ms/op
Iteration   6: 58,650 ms/op
Iteration   7: 59,291 ms/op
Iteration   8: 58,742 ms/op
Iteration   9: 58,838 ms/op
Iteration  10: 59,239 ms/op


Result "benchmarkFind":
  59,002 ±(99.9%) 0,428 ms/op [Average]
  (min, avg, max) = (58,650, 59,002, 59,486), stdev = 0,283
  CI (99.9%): [58,574, 59,430] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 128, patternSize = 64)

# Run progress: 64,57% complete, ETA 05:32:13
# Fork: 1 of 1
# Warmup Iteration   1: 63,703 ms/op
# Warmup Iteration   2: 60,152 ms/op
# Warmup Iteration   3: 60,374 ms/op
# Warmup Iteration   4: 60,609 ms/op
# Warmup Iteration   5: 60,752 ms/op
# Warmup Iteration   6: 59,742 ms/op
# Warmup Iteration   7: 59,980 ms/op
# Warmup Iteration   8: 60,391 ms/op
# Warmup Iteration   9: 60,179 ms/op
# Warmup Iteration  10: 59,741 ms/op
Iteration   1: 64,163 ms/op
Iteration   2: 60,308 ms/op
Iteration   3: 59,903 ms/op
Iteration   4: 59,094 ms/op
Iteration   5: 58,526 ms/op
Iteration   6: 59,111 ms/op
Iteration   7: 59,977 ms/op
Iteration   8: 59,144 ms/op
Iteration   9: 59,127 ms/op
Iteration  10: 58,571 ms/op


Result "benchmarkFind":
  59,792 ±(99.9%) 2,485 ms/op [Average]
  (min, avg, max) = (58,526, 59,792, 64,163), stdev = 1,644
  CI (99.9%): [57,307, 62,278] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 128, patternSize = 128)

# Run progress: 64,61% complete, ETA 05:31:45
# Fork: 1 of 1
# Warmup Iteration   1: 61,758 ms/op
# Warmup Iteration   2: 59,608 ms/op
# Warmup Iteration   3: 59,301 ms/op
# Warmup Iteration   4: 59,363 ms/op
# Warmup Iteration   5: 59,138 ms/op
# Warmup Iteration   6: 59,193 ms/op
# Warmup Iteration   7: 59,352 ms/op
# Warmup Iteration   8: 59,643 ms/op
# Warmup Iteration   9: 59,671 ms/op
# Warmup Iteration  10: 59,841 ms/op
Iteration   1: 59,439 ms/op
Iteration   2: 59,166 ms/op
Iteration   3: 59,713 ms/op
Iteration   4: 59,409 ms/op
Iteration   5: 59,652 ms/op
Iteration   6: 59,478 ms/op
Iteration   7: 59,374 ms/op
Iteration   8: 59,442 ms/op
Iteration   9: 60,168 ms/op
Iteration  10: 60,159 ms/op


Result "benchmarkFind":
  59,600 ±(99.9%) 0,502 ms/op [Average]
  (min, avg, max) = (59,166, 59,600, 60,168), stdev = 0,332
  CI (99.9%): [59,098, 60,102] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 128, patternSize = 256)

# Run progress: 64,66% complete, ETA 05:31:16
# Fork: 1 of 1
# Warmup Iteration   1: 62,873 ms/op
# Warmup Iteration   2: 59,395 ms/op
# Warmup Iteration   3: 59,569 ms/op
# Warmup Iteration   4: 59,310 ms/op
# Warmup Iteration   5: 59,818 ms/op
# Warmup Iteration   6: 59,801 ms/op
# Warmup Iteration   7: 59,452 ms/op
# Warmup Iteration   8: 59,531 ms/op
# Warmup Iteration   9: 60,057 ms/op
# Warmup Iteration  10: 59,801 ms/op
Iteration   1: 59,827 ms/op
Iteration   2: 59,983 ms/op
Iteration   3: 59,640 ms/op
Iteration   4: 59,582 ms/op
Iteration   5: 59,574 ms/op
Iteration   6: 59,397 ms/op
Iteration   7: 59,067 ms/op
Iteration   8: 59,370 ms/op
Iteration   9: 59,342 ms/op
Iteration  10: 59,366 ms/op


Result "benchmarkFind":
  59,515 ±(99.9%) 0,399 ms/op [Average]
  (min, avg, max) = (59,067, 59,515, 59,983), stdev = 0,264
  CI (99.9%): [59,115, 59,914] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 2, patternSize = 2)

# Run progress: 64,71% complete, ETA 05:30:47
# Fork: 1 of 1
# Warmup Iteration   1: 0,367 ms/op
# Warmup Iteration   2: 0,346 ms/op
# Warmup Iteration   3: 0,345 ms/op
# Warmup Iteration   4: 0,344 ms/op
# Warmup Iteration   5: 0,345 ms/op
# Warmup Iteration   6: 0,344 ms/op
# Warmup Iteration   7: 0,342 ms/op
# Warmup Iteration   8: 0,342 ms/op
# Warmup Iteration   9: 0,361 ms/op
# Warmup Iteration  10: 0,347 ms/op
Iteration   1: 0,342 ms/op
Iteration   2: 0,344 ms/op
Iteration   3: 0,356 ms/op
Iteration   4: 0,345 ms/op
Iteration   5: 0,344 ms/op
Iteration   6: 0,347 ms/op
Iteration   7: 0,344 ms/op
Iteration   8: 0,344 ms/op
Iteration   9: 0,344 ms/op
Iteration  10: 0,344 ms/op


Result "benchmarkFind":
  0,345 ±(99.9%) 0,006 ms/op [Average]
  (min, avg, max) = (0,342, 0,345, 0,356), stdev = 0,004
  CI (99.9%): [0,339, 0,351] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 2, patternSize = 4)

# Run progress: 64,75% complete, ETA 05:30:19
# Fork: 1 of 1
# Warmup Iteration   1: 13,448 ms/op
# Warmup Iteration   2: 12,219 ms/op
# Warmup Iteration   3: 12,350 ms/op
# Warmup Iteration   4: 12,326 ms/op
# Warmup Iteration   5: 12,211 ms/op
# Warmup Iteration   6: 12,269 ms/op
# Warmup Iteration   7: 12,250 ms/op
# Warmup Iteration   8: 12,245 ms/op
# Warmup Iteration   9: 12,275 ms/op
# Warmup Iteration  10: 12,200 ms/op
Iteration   1: 12,234 ms/op
Iteration   2: 12,266 ms/op
Iteration   3: 12,268 ms/op
Iteration   4: 12,313 ms/op
Iteration   5: 12,211 ms/op
Iteration   6: 12,244 ms/op
Iteration   7: 12,346 ms/op
Iteration   8: 12,363 ms/op
Iteration   9: 12,224 ms/op
Iteration  10: 12,253 ms/op


Result "benchmarkFind":
  12,272 ±(99.9%) 0,078 ms/op [Average]
  (min, avg, max) = (12,211, 12,272, 12,363), stdev = 0,052
  CI (99.9%): [12,194, 12,350] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 2, patternSize = 8)

# Run progress: 64,80% complete, ETA 05:29:50
# Fork: 1 of 1
# Warmup Iteration   1: 6,074 ms/op
# Warmup Iteration   2: 5,754 ms/op
# Warmup Iteration   3: 6,131 ms/op
# Warmup Iteration   4: 5,749 ms/op
# Warmup Iteration   5: 5,748 ms/op
# Warmup Iteration   6: 5,736 ms/op
# Warmup Iteration   7: 5,704 ms/op
# Warmup Iteration   8: 5,649 ms/op
# Warmup Iteration   9: 5,655 ms/op
# Warmup Iteration  10: 5,709 ms/op
Iteration   1: 5,654 ms/op
Iteration   2: 5,661 ms/op
Iteration   3: 5,662 ms/op
Iteration   4: 5,703 ms/op
Iteration   5: 5,644 ms/op
Iteration   6: 5,681 ms/op
Iteration   7: 5,680 ms/op
Iteration   8: 5,697 ms/op
Iteration   9: 5,733 ms/op
Iteration  10: 5,694 ms/op


Result "benchmarkFind":
  5,681 ±(99.9%) 0,040 ms/op [Average]
  (min, avg, max) = (5,644, 5,681, 5,733), stdev = 0,027
  CI (99.9%): [5,640, 5,721] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 2, patternSize = 16)

# Run progress: 64,84% complete, ETA 05:29:21
# Fork: 1 of 1
# Warmup Iteration   1: 3,819 ms/op
# Warmup Iteration   2: 3,556 ms/op
# Warmup Iteration   3: 3,580 ms/op
# Warmup Iteration   4: 3,538 ms/op
# Warmup Iteration   5: 3,563 ms/op
# Warmup Iteration   6: 3,544 ms/op
# Warmup Iteration   7: 3,981 ms/op
# Warmup Iteration   8: 3,575 ms/op
# Warmup Iteration   9: 3,586 ms/op
# Warmup Iteration  10: 3,619 ms/op
Iteration   1: 3,531 ms/op
Iteration   2: 3,578 ms/op
Iteration   3: 3,579 ms/op
Iteration   4: 3,559 ms/op
Iteration   5: 3,545 ms/op
Iteration   6: 3,589 ms/op
Iteration   7: 3,584 ms/op
Iteration   8: 3,584 ms/op
Iteration   9: 3,569 ms/op
Iteration  10: 3,586 ms/op


Result "benchmarkFind":
  3,570 ±(99.9%) 0,030 ms/op [Average]
  (min, avg, max) = (3,531, 3,570, 3,589), stdev = 0,020
  CI (99.9%): [3,541, 3,600] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 2, patternSize = 32)

# Run progress: 64,89% complete, ETA 05:28:53
# Fork: 1 of 1
# Warmup Iteration   1: 5,132 ms/op
# Warmup Iteration   2: 4,768 ms/op
# Warmup Iteration   3: 4,790 ms/op
# Warmup Iteration   4: 4,770 ms/op
# Warmup Iteration   5: 4,763 ms/op
# Warmup Iteration   6: 4,761 ms/op
# Warmup Iteration   7: 4,805 ms/op
# Warmup Iteration   8: 4,757 ms/op
# Warmup Iteration   9: 4,754 ms/op
# Warmup Iteration  10: 4,737 ms/op
Iteration   1: 4,777 ms/op
Iteration   2: 4,765 ms/op
Iteration   3: 4,769 ms/op
Iteration   4: 4,739 ms/op
Iteration   5: 4,764 ms/op
Iteration   6: 4,781 ms/op
Iteration   7: 4,738 ms/op
Iteration   8: 4,668 ms/op
Iteration   9: 4,712 ms/op
Iteration  10: 4,739 ms/op


Result "benchmarkFind":
  4,745 ±(99.9%) 0,052 ms/op [Average]
  (min, avg, max) = (4,668, 4,745, 4,781), stdev = 0,035
  CI (99.9%): [4,693, 4,797] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 2, patternSize = 64)

# Run progress: 64,94% complete, ETA 05:28:24
# Fork: 1 of 1
# Warmup Iteration   1: 3,935 ms/op
# Warmup Iteration   2: 3,746 ms/op
# Warmup Iteration   3: 3,727 ms/op
# Warmup Iteration   4: 3,732 ms/op
# Warmup Iteration   5: 3,727 ms/op
# Warmup Iteration   6: 3,731 ms/op
# Warmup Iteration   7: 3,742 ms/op
# Warmup Iteration   8: 3,756 ms/op
# Warmup Iteration   9: 3,744 ms/op
# Warmup Iteration  10: 3,762 ms/op
Iteration   1: 3,726 ms/op
Iteration   2: 3,732 ms/op
Iteration   3: 3,742 ms/op
Iteration   4: 3,751 ms/op
Iteration   5: 3,730 ms/op
Iteration   6: 3,745 ms/op
Iteration   7: 3,729 ms/op
Iteration   8: 3,725 ms/op
Iteration   9: 3,720 ms/op
Iteration  10: 3,719 ms/op


Result "benchmarkFind":
  3,732 ±(99.9%) 0,016 ms/op [Average]
  (min, avg, max) = (3,719, 3,732, 3,751), stdev = 0,011
  CI (99.9%): [3,716, 3,748] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 2, patternSize = 128)

# Run progress: 64,98% complete, ETA 05:27:55
# Fork: 1 of 1
# Warmup Iteration   1: 2,465 ms/op
# Warmup Iteration   2: 2,322 ms/op
# Warmup Iteration   3: 2,337 ms/op
# Warmup Iteration   4: 2,310 ms/op
# Warmup Iteration   5: 2,297 ms/op
# Warmup Iteration   6: 2,464 ms/op
# Warmup Iteration   7: 2,287 ms/op
# Warmup Iteration   8: 2,287 ms/op
# Warmup Iteration   9: 2,280 ms/op
# Warmup Iteration  10: 2,294 ms/op
Iteration   1: 2,293 ms/op
Iteration   2: 2,290 ms/op
Iteration   3: 2,299 ms/op
Iteration   4: 2,281 ms/op
Iteration   5: 2,281 ms/op
Iteration   6: 2,280 ms/op
Iteration   7: 2,286 ms/op
Iteration   8: 2,317 ms/op
Iteration   9: 2,295 ms/op
Iteration  10: 2,291 ms/op


Result "benchmarkFind":
  2,291 ±(99.9%) 0,017 ms/op [Average]
  (min, avg, max) = (2,280, 2,291, 2,317), stdev = 0,011
  CI (99.9%): [2,275, 2,308] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 2, patternSize = 256)

# Run progress: 65,03% complete, ETA 05:27:27
# Fork: 1 of 1
# Warmup Iteration   1: 4,158 ms/op
# Warmup Iteration   2: 3,948 ms/op
# Warmup Iteration   3: 3,913 ms/op
# Warmup Iteration   4: 3,917 ms/op
# Warmup Iteration   5: 3,944 ms/op
# Warmup Iteration   6: 3,944 ms/op
# Warmup Iteration   7: 3,957 ms/op
# Warmup Iteration   8: 3,958 ms/op
# Warmup Iteration   9: 3,947 ms/op
# Warmup Iteration  10: 3,935 ms/op
Iteration   1: 3,939 ms/op
Iteration   2: 3,940 ms/op
Iteration   3: 3,957 ms/op
Iteration   4: 3,980 ms/op
Iteration   5: 3,942 ms/op
Iteration   6: 3,952 ms/op
Iteration   7: 3,911 ms/op
Iteration   8: 3,913 ms/op
Iteration   9: 3,918 ms/op
Iteration  10: 3,900 ms/op


Result "benchmarkFind":
  3,935 ±(99.9%) 0,037 ms/op [Average]
  (min, avg, max) = (3,900, 3,935, 3,980), stdev = 0,025
  CI (99.9%): [3,898, 3,972] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 8, patternSize = 2)

# Run progress: 65,07% complete, ETA 05:26:58
# Fork: 1 of 1
# Warmup Iteration   1: 2,496 ms/op
# Warmup Iteration   2: 2,346 ms/op
# Warmup Iteration   3: 2,347 ms/op
# Warmup Iteration   4: 2,341 ms/op
# Warmup Iteration   5: 2,350 ms/op
# Warmup Iteration   6: 2,355 ms/op
# Warmup Iteration   7: 2,327 ms/op
# Warmup Iteration   8: 2,336 ms/op
# Warmup Iteration   9: 2,343 ms/op
# Warmup Iteration  10: 2,341 ms/op
Iteration   1: 2,346 ms/op
Iteration   2: 2,353 ms/op
Iteration   3: 2,338 ms/op
Iteration   4: 2,324 ms/op
Iteration   5: 2,321 ms/op
Iteration   6: 2,315 ms/op
Iteration   7: 2,324 ms/op
Iteration   8: 2,321 ms/op
Iteration   9: 2,312 ms/op
Iteration  10: 2,319 ms/op


Result "benchmarkFind":
  2,327 ±(99.9%) 0,021 ms/op [Average]
  (min, avg, max) = (2,312, 2,327, 2,353), stdev = 0,014
  CI (99.9%): [2,307, 2,348] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 8, patternSize = 4)

# Run progress: 65,12% complete, ETA 05:26:29
# Fork: 1 of 1
# Warmup Iteration   1: 71,546 ms/op
# Warmup Iteration   2: 62,747 ms/op
# Warmup Iteration   3: 62,296 ms/op
# Warmup Iteration   4: 71,709 ms/op
# Warmup Iteration   5: 62,619 ms/op
# Warmup Iteration   6: 62,587 ms/op
# Warmup Iteration   7: 62,716 ms/op
# Warmup Iteration   8: 62,616 ms/op
# Warmup Iteration   9: 62,516 ms/op
# Warmup Iteration  10: 63,797 ms/op
Iteration   1: 62,540 ms/op
Iteration   2: 62,472 ms/op
Iteration   3: 62,503 ms/op
Iteration   4: 62,815 ms/op
Iteration   5: 62,912 ms/op
Iteration   6: 62,494 ms/op
Iteration   7: 63,359 ms/op
Iteration   8: 62,376 ms/op
Iteration   9: 62,473 ms/op
Iteration  10: 62,549 ms/op


Result "benchmarkFind":
  62,649 ±(99.9%) 0,452 ms/op [Average]
  (min, avg, max) = (62,376, 62,649, 63,359), stdev = 0,299
  CI (99.9%): [62,197, 63,102] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 8, patternSize = 8)

# Run progress: 65,17% complete, ETA 05:26:01
# Fork: 1 of 1
# Warmup Iteration   1: 16,491 ms/op
# Warmup Iteration   2: 15,292 ms/op
# Warmup Iteration   3: 15,159 ms/op
# Warmup Iteration   4: 15,161 ms/op
# Warmup Iteration   5: 15,115 ms/op
# Warmup Iteration   6: 15,044 ms/op
# Warmup Iteration   7: 15,024 ms/op
# Warmup Iteration   8: 15,065 ms/op
# Warmup Iteration   9: 15,121 ms/op
# Warmup Iteration  10: 15,159 ms/op
Iteration   1: 15,083 ms/op
Iteration   2: 15,137 ms/op
Iteration   3: 15,038 ms/op
Iteration   4: 15,092 ms/op
Iteration   5: 14,915 ms/op
Iteration   6: 15,165 ms/op
Iteration   7: 15,167 ms/op
Iteration   8: 14,948 ms/op
Iteration   9: 15,157 ms/op
Iteration  10: 15,024 ms/op


Result "benchmarkFind":
  15,073 ±(99.9%) 0,136 ms/op [Average]
  (min, avg, max) = (14,915, 15,073, 15,167), stdev = 0,090
  CI (99.9%): [14,936, 15,209] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 8, patternSize = 16)

# Run progress: 65,21% complete, ETA 05:25:32
# Fork: 1 of 1
# Warmup Iteration   1: 16,196 ms/op
# Warmup Iteration   2: 15,085 ms/op
# Warmup Iteration   3: 15,040 ms/op
# Warmup Iteration   4: 15,025 ms/op
# Warmup Iteration   5: 13,995 ms/op
# Warmup Iteration   6: 14,087 ms/op
# Warmup Iteration   7: 13,908 ms/op
# Warmup Iteration   8: 14,020 ms/op
# Warmup Iteration   9: 14,016 ms/op
# Warmup Iteration  10: 13,995 ms/op
Iteration   1: 13,967 ms/op
Iteration   2: 13,940 ms/op
Iteration   3: 14,045 ms/op
Iteration   4: 14,032 ms/op
Iteration   5: 14,001 ms/op
Iteration   6: 14,020 ms/op
Iteration   7: 14,096 ms/op
Iteration   8: 14,051 ms/op
Iteration   9: 14,158 ms/op
Iteration  10: 13,995 ms/op


Result "benchmarkFind":
  14,031 ±(99.9%) 0,095 ms/op [Average]
  (min, avg, max) = (13,940, 14,031, 14,158), stdev = 0,063
  CI (99.9%): [13,936, 14,126] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 8, patternSize = 32)

# Run progress: 65,26% complete, ETA 05:25:04
# Fork: 1 of 1
# Warmup Iteration   1: 14,190 ms/op
# Warmup Iteration   2: 14,743 ms/op
# Warmup Iteration   3: 13,314 ms/op
# Warmup Iteration   4: 13,388 ms/op
# Warmup Iteration   5: 13,637 ms/op
# Warmup Iteration   6: 13,581 ms/op
# Warmup Iteration   7: 13,669 ms/op
# Warmup Iteration   8: 13,708 ms/op
# Warmup Iteration   9: 13,600 ms/op
# Warmup Iteration  10: 13,650 ms/op
Iteration   1: 13,532 ms/op
Iteration   2: 13,621 ms/op
Iteration   3: 13,554 ms/op
Iteration   4: 13,635 ms/op
Iteration   5: 13,684 ms/op
Iteration   6: 13,616 ms/op
Iteration   7: 13,246 ms/op
Iteration   8: 13,139 ms/op
Iteration   9: 13,272 ms/op
Iteration  10: 13,215 ms/op


Result "benchmarkFind":
  13,451 ±(99.9%) 0,314 ms/op [Average]
  (min, avg, max) = (13,139, 13,451, 13,684), stdev = 0,208
  CI (99.9%): [13,137, 13,766] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 8, patternSize = 64)

# Run progress: 65,30% complete, ETA 05:24:35
# Fork: 1 of 1
# Warmup Iteration   1: 22,469 ms/op
# Warmup Iteration   2: 20,956 ms/op
# Warmup Iteration   3: 21,078 ms/op
# Warmup Iteration   4: 21,217 ms/op
# Warmup Iteration   5: 20,890 ms/op
# Warmup Iteration   6: 21,082 ms/op
# Warmup Iteration   7: 20,838 ms/op
# Warmup Iteration   8: 20,849 ms/op
# Warmup Iteration   9: 20,917 ms/op
# Warmup Iteration  10: 21,033 ms/op
Iteration   1: 20,924 ms/op
Iteration   2: 20,864 ms/op
Iteration   3: 20,891 ms/op
Iteration   4: 20,968 ms/op
Iteration   5: 20,782 ms/op
Iteration   6: 20,889 ms/op
Iteration   7: 20,965 ms/op
Iteration   8: 21,134 ms/op
Iteration   9: 20,961 ms/op
Iteration  10: 20,881 ms/op


Result "benchmarkFind":
  20,926 ±(99.9%) 0,140 ms/op [Average]
  (min, avg, max) = (20,782, 20,926, 21,134), stdev = 0,092
  CI (99.9%): [20,786, 21,066] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 8, patternSize = 128)

# Run progress: 65,35% complete, ETA 05:24:07
# Fork: 1 of 1
# Warmup Iteration   1: 21,390 ms/op
# Warmup Iteration   2: 20,579 ms/op
# Warmup Iteration   3: 20,534 ms/op
# Warmup Iteration   4: 20,342 ms/op
# Warmup Iteration   5: 20,423 ms/op
# Warmup Iteration   6: 20,595 ms/op
# Warmup Iteration   7: 20,846 ms/op
# Warmup Iteration   8: 20,739 ms/op
# Warmup Iteration   9: 20,555 ms/op
# Warmup Iteration  10: 20,639 ms/op
Iteration   1: 20,672 ms/op
Iteration   2: 20,751 ms/op
Iteration   3: 20,635 ms/op
Iteration   4: 20,780 ms/op
Iteration   5: 20,692 ms/op
Iteration   6: 20,621 ms/op
Iteration   7: 20,332 ms/op
Iteration   8: 20,267 ms/op
Iteration   9: 20,272 ms/op
Iteration  10: 20,978 ms/op


Result "benchmarkFind":
  20,600 ±(99.9%) 0,358 ms/op [Average]
  (min, avg, max) = (20,267, 20,600, 20,978), stdev = 0,237
  CI (99.9%): [20,242, 20,958] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 8, patternSize = 256)

# Run progress: 65,40% complete, ETA 05:23:38
# Fork: 1 of 1
# Warmup Iteration   1: 17,177 ms/op
# Warmup Iteration   2: 16,099 ms/op
# Warmup Iteration   3: 16,143 ms/op
# Warmup Iteration   4: 16,332 ms/op
# Warmup Iteration   5: 16,129 ms/op
# Warmup Iteration   6: 16,001 ms/op
# Warmup Iteration   7: 16,171 ms/op
# Warmup Iteration   8: 16,134 ms/op
# Warmup Iteration   9: 16,124 ms/op
# Warmup Iteration  10: 16,292 ms/op
Iteration   1: 16,017 ms/op
Iteration   2: 16,054 ms/op
Iteration   3: 16,197 ms/op
Iteration   4: 16,102 ms/op
Iteration   5: 16,045 ms/op
Iteration   6: 16,073 ms/op
Iteration   7: 16,254 ms/op
Iteration   8: 16,177 ms/op
Iteration   9: 16,130 ms/op
Iteration  10: 16,029 ms/op


Result "benchmarkFind":
  16,108 ±(99.9%) 0,121 ms/op [Average]
  (min, avg, max) = (16,017, 16,108, 16,254), stdev = 0,080
  CI (99.9%): [15,987, 16,228] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 32, patternSize = 2)

# Run progress: 65,44% complete, ETA 05:23:10
# Fork: 1 of 1
# Warmup Iteration   1: 16,308 ms/op
# Warmup Iteration   2: 15,145 ms/op
# Warmup Iteration   3: 15,254 ms/op
# Warmup Iteration   4: 14,990 ms/op
# Warmup Iteration   5: 15,061 ms/op
# Warmup Iteration   6: 15,010 ms/op
# Warmup Iteration   7: 14,987 ms/op
# Warmup Iteration   8: 15,122 ms/op
# Warmup Iteration   9: 15,030 ms/op
# Warmup Iteration  10: 15,000 ms/op
Iteration   1: 14,986 ms/op
Iteration   2: 14,996 ms/op
Iteration   3: 14,910 ms/op
Iteration   4: 14,965 ms/op
Iteration   5: 15,067 ms/op
Iteration   6: 15,103 ms/op
Iteration   7: 14,932 ms/op
Iteration   8: 14,937 ms/op
Iteration   9: 15,089 ms/op
Iteration  10: 14,954 ms/op


Result "benchmarkFind":
  14,994 ±(99.9%) 0,104 ms/op [Average]
  (min, avg, max) = (14,910, 14,994, 15,103), stdev = 0,069
  CI (99.9%): [14,889, 15,098] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 32, patternSize = 4)

# Run progress: 65,49% complete, ETA 05:22:41
# Fork: 1 of 1
# Warmup Iteration   1: 737,522 ms/op
# Warmup Iteration   2: 694,462 ms/op
# Warmup Iteration   3: 692,174 ms/op
# Warmup Iteration   4: 691,245 ms/op
# Warmup Iteration   5: 687,316 ms/op
# Warmup Iteration   6: 694,230 ms/op
# Warmup Iteration   7: 691,425 ms/op
# Warmup Iteration   8: 696,498 ms/op
# Warmup Iteration   9: 697,450 ms/op
# Warmup Iteration  10: 689,303 ms/op
Iteration   1: 688,104 ms/op
Iteration   2: 696,882 ms/op
Iteration   3: 737,736 ms/op
Iteration   4: 687,806 ms/op
Iteration   5: 695,161 ms/op
Iteration   6: 692,561 ms/op
Iteration   7: 687,770 ms/op
Iteration   8: 690,968 ms/op
Iteration   9: 694,122 ms/op
Iteration  10: 693,071 ms/op


Result "benchmarkFind":
  696,418 ±(99.9%) 22,470 ms/op [Average]
  (min, avg, max) = (687,770, 696,418, 737,736), stdev = 14,863
  CI (99.9%): [673,948, 718,888] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 32, patternSize = 8)

# Run progress: 65,53% complete, ETA 05:22:17
# Fork: 1 of 1
# Warmup Iteration   1: 33,701 ms/op
# Warmup Iteration   2: 30,954 ms/op
# Warmup Iteration   3: 31,127 ms/op
# Warmup Iteration   4: 30,913 ms/op
# Warmup Iteration   5: 30,851 ms/op
# Warmup Iteration   6: 31,104 ms/op
# Warmup Iteration   7: 31,409 ms/op
# Warmup Iteration   8: 31,040 ms/op
# Warmup Iteration   9: 30,977 ms/op
# Warmup Iteration  10: 31,160 ms/op
Iteration   1: 31,084 ms/op
Iteration   2: 31,098 ms/op
Iteration   3: 30,834 ms/op
Iteration   4: 30,819 ms/op
Iteration   5: 30,779 ms/op
Iteration   6: 30,927 ms/op
Iteration   7: 31,772 ms/op
Iteration   8: 31,727 ms/op
Iteration   9: 31,808 ms/op
Iteration  10: 31,730 ms/op


Result "benchmarkFind":
  31,258 ±(99.9%) 0,672 ms/op [Average]
  (min, avg, max) = (30,779, 31,258, 31,808), stdev = 0,444
  CI (99.9%): [30,586, 31,930] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 32, patternSize = 16)

# Run progress: 65,58% complete, ETA 05:21:49
# Fork: 1 of 1
# Warmup Iteration   1: 34,678 ms/op
# Warmup Iteration   2: 31,842 ms/op
# Warmup Iteration   3: 31,825 ms/op
# Warmup Iteration   4: 31,894 ms/op
# Warmup Iteration   5: 31,845 ms/op
# Warmup Iteration   6: 31,749 ms/op
# Warmup Iteration   7: 31,843 ms/op
# Warmup Iteration   8: 32,155 ms/op
# Warmup Iteration   9: 32,084 ms/op
# Warmup Iteration  10: 31,496 ms/op
Iteration   1: 31,631 ms/op
Iteration   2: 31,618 ms/op
Iteration   3: 31,842 ms/op
Iteration   4: 31,427 ms/op
Iteration   5: 31,653 ms/op
Iteration   6: 31,604 ms/op
Iteration   7: 31,840 ms/op
Iteration   8: 31,499 ms/op
Iteration   9: 31,747 ms/op
Iteration  10: 31,722 ms/op


Result "benchmarkFind":
  31,658 ±(99.9%) 0,204 ms/op [Average]
  (min, avg, max) = (31,427, 31,658, 31,842), stdev = 0,135
  CI (99.9%): [31,455, 31,862] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 32, patternSize = 32)

# Run progress: 65,63% complete, ETA 05:21:20
# Fork: 1 of 1
# Warmup Iteration   1: 32,468 ms/op
# Warmup Iteration   2: 29,821 ms/op
# Warmup Iteration   3: 29,689 ms/op
# Warmup Iteration   4: 29,614 ms/op
# Warmup Iteration   5: 29,701 ms/op
# Warmup Iteration   6: 29,942 ms/op
# Warmup Iteration   7: 29,991 ms/op
# Warmup Iteration   8: 32,833 ms/op
# Warmup Iteration   9: 29,608 ms/op
# Warmup Iteration  10: 30,051 ms/op
Iteration   1: 30,081 ms/op
Iteration   2: 29,999 ms/op
Iteration   3: 29,627 ms/op
Iteration   4: 29,968 ms/op
Iteration   5: 30,033 ms/op
Iteration   6: 29,865 ms/op
Iteration   7: 29,696 ms/op
Iteration   8: 29,699 ms/op
Iteration   9: 29,929 ms/op
Iteration  10: 29,849 ms/op


Result "benchmarkFind":
  29,875 ±(99.9%) 0,236 ms/op [Average]
  (min, avg, max) = (29,627, 29,875, 30,081), stdev = 0,156
  CI (99.9%): [29,639, 30,111] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 32, patternSize = 64)

# Run progress: 65,67% complete, ETA 05:20:52
# Fork: 1 of 1
# Warmup Iteration   1: 32,338 ms/op
# Warmup Iteration   2: 30,367 ms/op
# Warmup Iteration   3: 30,435 ms/op
# Warmup Iteration   4: 31,258 ms/op
# Warmup Iteration   5: 31,978 ms/op
# Warmup Iteration   6: 31,674 ms/op
# Warmup Iteration   7: 31,832 ms/op
# Warmup Iteration   8: 32,301 ms/op
# Warmup Iteration   9: 30,463 ms/op
# Warmup Iteration  10: 30,926 ms/op
Iteration   1: 30,937 ms/op
Iteration   2: 30,616 ms/op
Iteration   3: 30,667 ms/op
Iteration   4: 30,963 ms/op
Iteration   5: 30,959 ms/op
Iteration   6: 30,824 ms/op
Iteration   7: 30,436 ms/op
Iteration   8: 30,173 ms/op
Iteration   9: 30,247 ms/op
Iteration  10: 30,100 ms/op


Result "benchmarkFind":
  30,592 ±(99.9%) 0,507 ms/op [Average]
  (min, avg, max) = (30,100, 30,592, 30,963), stdev = 0,336
  CI (99.9%): [30,085, 31,100] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 32, patternSize = 128)

# Run progress: 65,72% complete, ETA 05:20:24
# Fork: 1 of 1
# Warmup Iteration   1: 32,713 ms/op
# Warmup Iteration   2: 30,710 ms/op
# Warmup Iteration   3: 30,854 ms/op
# Warmup Iteration   4: 30,760 ms/op
# Warmup Iteration   5: 30,730 ms/op
# Warmup Iteration   6: 30,779 ms/op
# Warmup Iteration   7: 30,838 ms/op
# Warmup Iteration   8: 30,759 ms/op
# Warmup Iteration   9: 30,774 ms/op
# Warmup Iteration  10: 30,743 ms/op
Iteration   1: 31,019 ms/op
Iteration   2: 30,748 ms/op
Iteration   3: 30,699 ms/op
Iteration   4: 30,615 ms/op
Iteration   5: 30,767 ms/op
Iteration   6: 30,698 ms/op
Iteration   7: 30,784 ms/op
Iteration   8: 30,750 ms/op
Iteration   9: 30,702 ms/op
Iteration  10: 30,740 ms/op


Result "benchmarkFind":
  30,752 ±(99.9%) 0,159 ms/op [Average]
  (min, avg, max) = (30,615, 30,752, 31,019), stdev = 0,105
  CI (99.9%): [30,593, 30,911] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 32, patternSize = 256)

# Run progress: 65,76% complete, ETA 05:19:55
# Fork: 1 of 1
# Warmup Iteration   1: 32,105 ms/op
# Warmup Iteration   2: 29,828 ms/op
# Warmup Iteration   3: 29,964 ms/op
# Warmup Iteration   4: 30,061 ms/op
# Warmup Iteration   5: 32,621 ms/op
# Warmup Iteration   6: 29,950 ms/op
# Warmup Iteration   7: 30,022 ms/op
# Warmup Iteration   8: 29,918 ms/op
# Warmup Iteration   9: 30,136 ms/op
# Warmup Iteration  10: 29,821 ms/op
Iteration   1: 29,836 ms/op
Iteration   2: 29,872 ms/op
Iteration   3: 29,921 ms/op
Iteration   4: 29,815 ms/op
Iteration   5: 29,869 ms/op
Iteration   6: 30,070 ms/op
Iteration   7: 30,032 ms/op
Iteration   8: 29,902 ms/op
Iteration   9: 29,687 ms/op
Iteration  10: 30,701 ms/op


Result "benchmarkFind":
  29,971 ±(99.9%) 0,421 ms/op [Average]
  (min, avg, max) = (29,687, 29,971, 30,701), stdev = 0,278
  CI (99.9%): [29,550, 30,391] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 128, patternSize = 2)

# Run progress: 65,81% complete, ETA 05:19:27
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

com.almondtools.stringbench.SampleNotQualifiedException
	at com.almondtools.stringbench.MultiPatternMatcherBenchmark.setup(MultiPatternMatcherBenchmark.java:36)
	at com.almondtools.stringbench.generated.SCSetHorspoolBenchmark_benchmarkFind_jmhTest._jmh_tryInit_f_scsethorspoolbenchmark0_0(SCSetHorspoolBenchmark_benchmarkFind_jmhTest.java:425)
	at com.almondtools.stringbench.generated.SCSetHorspoolBenchmark_benchmarkFind_jmhTest.benchmarkFind_AverageTime(SCSetHorspoolBenchmark_benchmarkFind_jmhTest.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:430)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:412)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)




# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 128, patternSize = 4)

# Run progress: 65,85% complete, ETA 05:18:49
# Fork: 1 of 1
# Warmup Iteration   1: 7186,314 ms/op
# Warmup Iteration   2: 7176,722 ms/op
# Warmup Iteration   3: 7102,486 ms/op
# Warmup Iteration   4: 7124,853 ms/op
# Warmup Iteration   5: 7131,137 ms/op
# Warmup Iteration   6: 7210,131 ms/op
# Warmup Iteration   7: 9368,544 ms/op
# Warmup Iteration   8: 7119,543 ms/op
# Warmup Iteration   9: 7151,860 ms/op
# Warmup Iteration  10: 7137,210 ms/op
Iteration   1: 7154,694 ms/op
Iteration   2: 7378,489 ms/op
Iteration   3: 7145,967 ms/op
Iteration   4: 7069,708 ms/op
Iteration   5: 7019,146 ms/op
Iteration   6: 7071,835 ms/op
Iteration   7: 7091,327 ms/op
Iteration   8: 7230,734 ms/op
Iteration   9: 7146,222 ms/op
Iteration  10: 7123,050 ms/op


Result "benchmarkFind":
  7143,117 ±(99.9%) 152,983 ms/op [Average]
  (min, avg, max) = (7019,146, 7143,117, 7378,489), stdev = 101,189
  CI (99.9%): [6990,134, 7296,100] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 128, patternSize = 8)

# Run progress: 65,90% complete, ETA 05:19:32
# Fork: 1 of 1
# Warmup Iteration   1: 44,790 ms/op
# Warmup Iteration   2: 40,921 ms/op
# Warmup Iteration   3: 43,678 ms/op
# Warmup Iteration   4: 41,222 ms/op
# Warmup Iteration   5: 40,852 ms/op
# Warmup Iteration   6: 41,150 ms/op
# Warmup Iteration   7: 40,867 ms/op
# Warmup Iteration   8: 41,075 ms/op
# Warmup Iteration   9: 40,436 ms/op
# Warmup Iteration  10: 39,778 ms/op
Iteration   1: 39,654 ms/op
Iteration   2: 39,773 ms/op
Iteration   3: 40,220 ms/op
Iteration   4: 39,842 ms/op
Iteration   5: 39,663 ms/op
Iteration   6: 39,818 ms/op
Iteration   7: 39,640 ms/op
Iteration   8: 39,449 ms/op
Iteration   9: 39,756 ms/op
Iteration  10: 39,526 ms/op


Result "benchmarkFind":
  39,734 ±(99.9%) 0,319 ms/op [Average]
  (min, avg, max) = (39,449, 39,734, 40,220), stdev = 0,211
  CI (99.9%): [39,415, 40,054] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 128, patternSize = 16)

# Run progress: 65,95% complete, ETA 05:19:04
# Fork: 1 of 1
# Warmup Iteration   1: 39,643 ms/op
# Warmup Iteration   2: 37,882 ms/op
# Warmup Iteration   3: 37,874 ms/op
# Warmup Iteration   4: 37,854 ms/op
# Warmup Iteration   5: 37,782 ms/op
# Warmup Iteration   6: 37,572 ms/op
# Warmup Iteration   7: 37,975 ms/op
# Warmup Iteration   8: 37,558 ms/op
# Warmup Iteration   9: 37,460 ms/op
# Warmup Iteration  10: 37,603 ms/op
Iteration   1: 37,805 ms/op
Iteration   2: 37,735 ms/op
Iteration   3: 38,040 ms/op
Iteration   4: 37,768 ms/op
Iteration   5: 38,057 ms/op
Iteration   6: 37,682 ms/op
Iteration   7: 37,619 ms/op
Iteration   8: 37,519 ms/op
Iteration   9: 37,574 ms/op
Iteration  10: 37,376 ms/op


Result "benchmarkFind":
  37,717 ±(99.9%) 0,326 ms/op [Average]
  (min, avg, max) = (37,376, 37,717, 38,057), stdev = 0,215
  CI (99.9%): [37,392, 38,043] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 128, patternSize = 32)

# Run progress: 65,99% complete, ETA 05:18:36
# Fork: 1 of 1
# Warmup Iteration   1: 40,567 ms/op
# Warmup Iteration   2: 38,416 ms/op
# Warmup Iteration   3: 38,757 ms/op
# Warmup Iteration   4: 38,732 ms/op
# Warmup Iteration   5: 38,233 ms/op
# Warmup Iteration   6: 38,326 ms/op
# Warmup Iteration   7: 38,498 ms/op
# Warmup Iteration   8: 38,509 ms/op
# Warmup Iteration   9: 38,525 ms/op
# Warmup Iteration  10: 38,348 ms/op
Iteration   1: 38,669 ms/op
Iteration   2: 38,270 ms/op
Iteration   3: 38,494 ms/op
Iteration   4: 38,252 ms/op
Iteration   5: 38,494 ms/op
Iteration   6: 38,175 ms/op
Iteration   7: 38,639 ms/op
Iteration   8: 38,808 ms/op
Iteration   9: 38,815 ms/op
Iteration  10: 38,627 ms/op


Result "benchmarkFind":
  38,524 ±(99.9%) 0,346 ms/op [Average]
  (min, avg, max) = (38,175, 38,524, 38,815), stdev = 0,229
  CI (99.9%): [38,178, 38,870] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 128, patternSize = 64)

# Run progress: 66,04% complete, ETA 05:18:07
# Fork: 1 of 1
# Warmup Iteration   1: 42,074 ms/op
# Warmup Iteration   2: 39,136 ms/op
# Warmup Iteration   3: 39,084 ms/op
# Warmup Iteration   4: 39,072 ms/op
# Warmup Iteration   5: 39,750 ms/op
# Warmup Iteration   6: 39,469 ms/op
# Warmup Iteration   7: 39,300 ms/op
# Warmup Iteration   8: 39,458 ms/op
# Warmup Iteration   9: 39,744 ms/op
# Warmup Iteration  10: 39,541 ms/op
Iteration   1: 39,016 ms/op
Iteration   2: 39,071 ms/op
Iteration   3: 38,947 ms/op
Iteration   4: 39,154 ms/op
Iteration   5: 38,978 ms/op
Iteration   6: 38,914 ms/op
Iteration   7: 38,933 ms/op
Iteration   8: 39,112 ms/op
Iteration   9: 39,076 ms/op
Iteration  10: 39,087 ms/op


Result "benchmarkFind":
  39,029 ±(99.9%) 0,125 ms/op [Average]
  (min, avg, max) = (38,914, 39,029, 39,154), stdev = 0,083
  CI (99.9%): [38,904, 39,154] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 128, patternSize = 128)

# Run progress: 66,08% complete, ETA 05:17:39
# Fork: 1 of 1
# Warmup Iteration   1: 40,811 ms/op
# Warmup Iteration   2: 39,152 ms/op
# Warmup Iteration   3: 38,957 ms/op
# Warmup Iteration   4: 38,662 ms/op
# Warmup Iteration   5: 38,821 ms/op
# Warmup Iteration   6: 39,175 ms/op
# Warmup Iteration   7: 38,773 ms/op
# Warmup Iteration   8: 38,997 ms/op
# Warmup Iteration   9: 39,094 ms/op
# Warmup Iteration  10: 39,092 ms/op
Iteration   1: 39,017 ms/op
Iteration   2: 39,141 ms/op
Iteration   3: 39,340 ms/op
Iteration   4: 39,237 ms/op
Iteration   5: 38,813 ms/op
Iteration   6: 38,960 ms/op
Iteration   7: 40,088 ms/op
Iteration   8: 40,688 ms/op
Iteration   9: 40,316 ms/op
Iteration  10: 40,436 ms/op


Result "benchmarkFind":
  39,604 ±(99.9%) 1,059 ms/op [Average]
  (min, avg, max) = (38,813, 39,604, 40,688), stdev = 0,700
  CI (99.9%): [38,545, 40,662] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 128, patternSize = 256)

# Run progress: 66,13% complete, ETA 05:17:11
# Fork: 1 of 1
# Warmup Iteration   1: 43,124 ms/op
# Warmup Iteration   2: 41,098 ms/op
# Warmup Iteration   3: 40,975 ms/op
# Warmup Iteration   4: 41,192 ms/op
# Warmup Iteration   5: 40,586 ms/op
# Warmup Iteration   6: 40,454 ms/op
# Warmup Iteration   7: 40,210 ms/op
# Warmup Iteration   8: 40,251 ms/op
# Warmup Iteration   9: 40,475 ms/op
# Warmup Iteration  10: 40,246 ms/op
Iteration   1: 40,555 ms/op
Iteration   2: 40,196 ms/op
Iteration   3: 40,244 ms/op
Iteration   4: 40,324 ms/op
Iteration   5: 40,273 ms/op
Iteration   6: 40,573 ms/op
Iteration   7: 41,055 ms/op
Iteration   8: 44,465 ms/op
Iteration   9: 40,740 ms/op
Iteration  10: 40,694 ms/op


Result "benchmarkFind":
  40,912 ±(99.9%) 1,930 ms/op [Average]
  (min, avg, max) = (40,196, 40,912, 44,465), stdev = 1,277
  CI (99.9%): [38,981, 42,842] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 2, patternSize = 2)

# Run progress: 66,18% complete, ETA 05:16:42
# Fork: 1 of 1
# Warmup Iteration   1: 0,807 ms/op
# Warmup Iteration   2: 0,743 ms/op
# Warmup Iteration   3: 0,744 ms/op
# Warmup Iteration   4: 0,739 ms/op
# Warmup Iteration   5: 0,737 ms/op
# Warmup Iteration   6: 0,738 ms/op
# Warmup Iteration   7: 0,738 ms/op
# Warmup Iteration   8: 0,736 ms/op
# Warmup Iteration   9: 0,742 ms/op
# Warmup Iteration  10: 0,740 ms/op
Iteration   1: 0,743 ms/op
Iteration   2: 0,743 ms/op
Iteration   3: 0,737 ms/op
Iteration   4: 0,739 ms/op
Iteration   5: 0,736 ms/op
Iteration   6: 0,746 ms/op
Iteration   7: 0,743 ms/op
Iteration   8: 0,744 ms/op
Iteration   9: 0,738 ms/op
Iteration  10: 0,740 ms/op


Result "benchmarkFind":
  0,741 ±(99.9%) 0,005 ms/op [Average]
  (min, avg, max) = (0,736, 0,741, 0,746), stdev = 0,003
  CI (99.9%): [0,736, 0,746] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 2, patternSize = 4)

# Run progress: 66,22% complete, ETA 05:16:14
# Fork: 1 of 1
# Warmup Iteration   1: 7,538 ms/op
# Warmup Iteration   2: 7,144 ms/op
# Warmup Iteration   3: 7,002 ms/op
# Warmup Iteration   4: 6,968 ms/op
# Warmup Iteration   5: 7,019 ms/op
# Warmup Iteration   6: 7,071 ms/op
# Warmup Iteration   7: 7,002 ms/op
# Warmup Iteration   8: 6,990 ms/op
# Warmup Iteration   9: 6,990 ms/op
# Warmup Iteration  10: 6,986 ms/op
Iteration   1: 6,966 ms/op
Iteration   2: 6,936 ms/op
Iteration   3: 6,965 ms/op
Iteration   4: 7,026 ms/op
Iteration   5: 7,019 ms/op
Iteration   6: 7,016 ms/op
Iteration   7: 6,984 ms/op
Iteration   8: 6,987 ms/op
Iteration   9: 6,995 ms/op
Iteration  10: 6,946 ms/op


Result "benchmarkFind":
  6,984 ±(99.9%) 0,047 ms/op [Average]
  (min, avg, max) = (6,936, 6,984, 7,026), stdev = 0,031
  CI (99.9%): [6,937, 7,031] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 2, patternSize = 8)

# Run progress: 66,27% complete, ETA 05:15:45
# Fork: 1 of 1
# Warmup Iteration   1: 3,815 ms/op
# Warmup Iteration   2: 3,607 ms/op
# Warmup Iteration   3: 3,561 ms/op
# Warmup Iteration   4: 3,586 ms/op
# Warmup Iteration   5: 3,532 ms/op
# Warmup Iteration   6: 3,576 ms/op
# Warmup Iteration   7: 3,564 ms/op
# Warmup Iteration   8: 3,579 ms/op
# Warmup Iteration   9: 3,575 ms/op
# Warmup Iteration  10: 3,553 ms/op
Iteration   1: 3,548 ms/op
Iteration   2: 3,556 ms/op
Iteration   3: 3,603 ms/op
Iteration   4: 3,550 ms/op
Iteration   5: 3,580 ms/op
Iteration   6: 3,578 ms/op
Iteration   7: 4,097 ms/op
Iteration   8: 3,569 ms/op
Iteration   9: 3,584 ms/op
Iteration  10: 3,592 ms/op


Result "benchmarkFind":
  3,626 ±(99.9%) 0,252 ms/op [Average]
  (min, avg, max) = (3,548, 3,626, 4,097), stdev = 0,167
  CI (99.9%): [3,374, 3,878] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 2, patternSize = 16)

# Run progress: 66,31% complete, ETA 05:15:17
# Fork: 1 of 1
# Warmup Iteration   1: 2,350 ms/op
# Warmup Iteration   2: 2,218 ms/op
# Warmup Iteration   3: 2,218 ms/op
# Warmup Iteration   4: 2,237 ms/op
# Warmup Iteration   5: 2,244 ms/op
# Warmup Iteration   6: 2,228 ms/op
# Warmup Iteration   7: 2,212 ms/op
# Warmup Iteration   8: 2,203 ms/op
# Warmup Iteration   9: 2,239 ms/op
# Warmup Iteration  10: 2,240 ms/op
Iteration   1: 2,219 ms/op
Iteration   2: 2,220 ms/op
Iteration   3: 2,214 ms/op
Iteration   4: 2,210 ms/op
Iteration   5: 2,209 ms/op
Iteration   6: 2,197 ms/op
Iteration   7: 2,194 ms/op
Iteration   8: 2,202 ms/op
Iteration   9: 2,190 ms/op
Iteration  10: 2,215 ms/op


Result "benchmarkFind":
  2,207 ±(99.9%) 0,016 ms/op [Average]
  (min, avg, max) = (2,190, 2,207, 2,220), stdev = 0,011
  CI (99.9%): [2,191, 2,223] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 2, patternSize = 32)

# Run progress: 66,36% complete, ETA 05:14:48
# Fork: 1 of 1
# Warmup Iteration   1: 1,809 ms/op
# Warmup Iteration   2: 1,741 ms/op
# Warmup Iteration   3: 1,743 ms/op
# Warmup Iteration   4: 1,740 ms/op
# Warmup Iteration   5: 1,742 ms/op
# Warmup Iteration   6: 1,741 ms/op
# Warmup Iteration   7: 1,737 ms/op
# Warmup Iteration   8: 1,733 ms/op
# Warmup Iteration   9: 1,733 ms/op
# Warmup Iteration  10: 1,803 ms/op
Iteration   1: 1,825 ms/op
Iteration   2: 1,831 ms/op
Iteration   3: 1,822 ms/op
Iteration   4: 1,827 ms/op
Iteration   5: 1,805 ms/op
Iteration   6: 1,817 ms/op
Iteration   7: 1,646 ms/op
Iteration   8: 1,668 ms/op
Iteration   9: 1,645 ms/op
Iteration  10: 1,657 ms/op


Result "benchmarkFind":
  1,754 ±(99.9%) 0,131 ms/op [Average]
  (min, avg, max) = (1,645, 1,754, 1,831), stdev = 0,087
  CI (99.9%): [1,623, 1,886] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 2, patternSize = 64)

# Run progress: 66,41% complete, ETA 05:14:20
# Fork: 1 of 1
# Warmup Iteration   1: 1,712 ms/op
# Warmup Iteration   2: 1,627 ms/op
# Warmup Iteration   3: 1,603 ms/op
# Warmup Iteration   4: 1,601 ms/op
# Warmup Iteration   5: 1,603 ms/op
# Warmup Iteration   6: 1,604 ms/op
# Warmup Iteration   7: 1,605 ms/op
# Warmup Iteration   8: 1,606 ms/op
# Warmup Iteration   9: 1,614 ms/op
# Warmup Iteration  10: 1,592 ms/op
Iteration   1: 1,580 ms/op
Iteration   2: 1,580 ms/op
Iteration   3: 1,581 ms/op
Iteration   4: 1,602 ms/op
Iteration   5: 1,725 ms/op
Iteration   6: 1,579 ms/op
Iteration   7: 1,581 ms/op
Iteration   8: 1,587 ms/op
Iteration   9: 1,641 ms/op
Iteration  10: 1,595 ms/op


Result "benchmarkFind":
  1,605 ±(99.9%) 0,070 ms/op [Average]
  (min, avg, max) = (1,579, 1,605, 1,725), stdev = 0,046
  CI (99.9%): [1,535, 1,675] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 2, patternSize = 128)

# Run progress: 66,45% complete, ETA 05:13:51
# Fork: 1 of 1
# Warmup Iteration   1: 1,189 ms/op
# Warmup Iteration   2: 1,100 ms/op
# Warmup Iteration   3: 1,096 ms/op
# Warmup Iteration   4: 1,106 ms/op
# Warmup Iteration   5: 1,089 ms/op
# Warmup Iteration   6: 1,099 ms/op
# Warmup Iteration   7: 1,115 ms/op
# Warmup Iteration   8: 1,109 ms/op
# Warmup Iteration   9: 1,115 ms/op
# Warmup Iteration  10: 1,102 ms/op
Iteration   1: 1,106 ms/op
Iteration   2: 1,116 ms/op
Iteration   3: 1,105 ms/op
Iteration   4: 1,111 ms/op
Iteration   5: 1,110 ms/op
Iteration   6: 1,102 ms/op
Iteration   7: 1,100 ms/op
Iteration   8: 1,089 ms/op
Iteration   9: 1,095 ms/op
Iteration  10: 1,094 ms/op


Result "benchmarkFind":
  1,103 ±(99.9%) 0,013 ms/op [Average]
  (min, avg, max) = (1,089, 1,103, 1,116), stdev = 0,009
  CI (99.9%): [1,090, 1,116] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 2, patternSize = 256)

# Run progress: 66,50% complete, ETA 05:13:23
# Fork: 1 of 1
# Warmup Iteration   1: 1,388 ms/op
# Warmup Iteration   2: 1,302 ms/op
# Warmup Iteration   3: 1,305 ms/op
# Warmup Iteration   4: 1,316 ms/op
# Warmup Iteration   5: 1,296 ms/op
# Warmup Iteration   6: 1,295 ms/op
# Warmup Iteration   7: 1,294 ms/op
# Warmup Iteration   8: 1,316 ms/op
# Warmup Iteration   9: 1,310 ms/op
# Warmup Iteration  10: 1,306 ms/op
Iteration   1: 1,326 ms/op
Iteration   2: 1,305 ms/op
Iteration   3: 1,308 ms/op
Iteration   4: 1,309 ms/op
Iteration   5: 1,311 ms/op
Iteration   6: 1,318 ms/op
Iteration   7: 1,312 ms/op
Iteration   8: 1,303 ms/op
Iteration   9: 1,300 ms/op
Iteration  10: 1,297 ms/op


Result "benchmarkFind":
  1,309 ±(99.9%) 0,013 ms/op [Average]
  (min, avg, max) = (1,297, 1,309, 1,326), stdev = 0,008
  CI (99.9%): [1,296, 1,322] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 8, patternSize = 2)

# Run progress: 66,54% complete, ETA 05:12:54
# Fork: 1 of 1
# Warmup Iteration   1: 3,091 ms/op
# Warmup Iteration   2: 2,849 ms/op
# Warmup Iteration   3: 2,855 ms/op
# Warmup Iteration   4: 2,853 ms/op
# Warmup Iteration   5: 2,847 ms/op
# Warmup Iteration   6: 2,846 ms/op
# Warmup Iteration   7: 2,863 ms/op
# Warmup Iteration   8: 2,841 ms/op
# Warmup Iteration   9: 2,840 ms/op
# Warmup Iteration  10: 2,843 ms/op
Iteration   1: 2,855 ms/op
Iteration   2: 2,839 ms/op
Iteration   3: 2,849 ms/op
Iteration   4: 3,210 ms/op
Iteration   5: 2,839 ms/op
Iteration   6: 2,836 ms/op
Iteration   7: 2,837 ms/op
Iteration   8: 2,841 ms/op
Iteration   9: 2,832 ms/op
Iteration  10: 2,839 ms/op


Result "benchmarkFind":
  2,878 ±(99.9%) 0,177 ms/op [Average]
  (min, avg, max) = (2,832, 2,878, 3,210), stdev = 0,117
  CI (99.9%): [2,701, 3,055] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 8, patternSize = 4)

# Run progress: 66,59% complete, ETA 05:12:26
# Fork: 1 of 1
# Warmup Iteration   1: 14,408 ms/op
# Warmup Iteration   2: 13,075 ms/op
# Warmup Iteration   3: 12,822 ms/op
# Warmup Iteration   4: 12,907 ms/op
# Warmup Iteration   5: 12,945 ms/op
# Warmup Iteration   6: 12,920 ms/op
# Warmup Iteration   7: 12,898 ms/op
# Warmup Iteration   8: 12,917 ms/op
# Warmup Iteration   9: 12,825 ms/op
# Warmup Iteration  10: 12,974 ms/op
Iteration   1: 12,855 ms/op
Iteration   2: 12,932 ms/op
Iteration   3: 12,830 ms/op
Iteration   4: 12,909 ms/op
Iteration   5: 12,862 ms/op
Iteration   6: 12,966 ms/op
Iteration   7: 12,819 ms/op
Iteration   8: 12,960 ms/op
Iteration   9: 12,860 ms/op
Iteration  10: 12,985 ms/op


Result "benchmarkFind":
  12,898 ±(99.9%) 0,091 ms/op [Average]
  (min, avg, max) = (12,819, 12,898, 12,985), stdev = 0,060
  CI (99.9%): [12,807, 12,989] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 8, patternSize = 8)

# Run progress: 66,64% complete, ETA 05:11:57
# Fork: 1 of 1
# Warmup Iteration   1: 8,104 ms/op
# Warmup Iteration   2: 7,529 ms/op
# Warmup Iteration   3: 7,457 ms/op
# Warmup Iteration   4: 7,461 ms/op
# Warmup Iteration   5: 7,404 ms/op
# Warmup Iteration   6: 7,437 ms/op
# Warmup Iteration   7: 7,400 ms/op
# Warmup Iteration   8: 7,406 ms/op
# Warmup Iteration   9: 7,426 ms/op
# Warmup Iteration  10: 7,410 ms/op
Iteration   1: 7,378 ms/op
Iteration   2: 7,377 ms/op
Iteration   3: 7,442 ms/op
Iteration   4: 7,365 ms/op
Iteration   5: 7,380 ms/op
Iteration   6: 7,421 ms/op
Iteration   7: 7,562 ms/op
Iteration   8: 7,551 ms/op
Iteration   9: 7,500 ms/op
Iteration  10: 7,461 ms/op


Result "benchmarkFind":
  7,444 ±(99.9%) 0,111 ms/op [Average]
  (min, avg, max) = (7,365, 7,444, 7,562), stdev = 0,074
  CI (99.9%): [7,333, 7,555] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 8, patternSize = 16)

# Run progress: 66,68% complete, ETA 05:11:29
# Fork: 1 of 1
# Warmup Iteration   1: 8,484 ms/op
# Warmup Iteration   2: 7,948 ms/op
# Warmup Iteration   3: 7,958 ms/op
# Warmup Iteration   4: 7,908 ms/op
# Warmup Iteration   5: 7,897 ms/op
# Warmup Iteration   6: 7,920 ms/op
# Warmup Iteration   7: 7,970 ms/op
# Warmup Iteration   8: 7,898 ms/op
# Warmup Iteration   9: 7,907 ms/op
# Warmup Iteration  10: 7,918 ms/op
Iteration   1: 7,916 ms/op
Iteration   2: 8,657 ms/op
Iteration   3: 7,870 ms/op
Iteration   4: 7,896 ms/op
Iteration   5: 7,975 ms/op
Iteration   6: 7,908 ms/op
Iteration   7: 7,940 ms/op
Iteration   8: 7,959 ms/op
Iteration   9: 7,968 ms/op
Iteration  10: 7,942 ms/op


Result "benchmarkFind":
  8,003 ±(99.9%) 0,351 ms/op [Average]
  (min, avg, max) = (7,870, 8,003, 8,657), stdev = 0,232
  CI (99.9%): [7,652, 8,354] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 8, patternSize = 32)

# Run progress: 66,73% complete, ETA 05:11:01
# Fork: 1 of 1
# Warmup Iteration   1: 7,945 ms/op
# Warmup Iteration   2: 7,398 ms/op
# Warmup Iteration   3: 7,415 ms/op
# Warmup Iteration   4: 7,401 ms/op
# Warmup Iteration   5: 7,402 ms/op
# Warmup Iteration   6: 7,366 ms/op
# Warmup Iteration   7: 7,354 ms/op
# Warmup Iteration   8: 7,365 ms/op
# Warmup Iteration   9: 7,358 ms/op
# Warmup Iteration  10: 7,370 ms/op
Iteration   1: 7,366 ms/op
Iteration   2: 7,472 ms/op
Iteration   3: 7,380 ms/op
Iteration   4: 7,361 ms/op
Iteration   5: 7,396 ms/op
Iteration   6: 7,361 ms/op
Iteration   7: 7,358 ms/op
Iteration   8: 7,396 ms/op
Iteration   9: 7,356 ms/op
Iteration  10: 7,383 ms/op


Result "benchmarkFind":
  7,383 ±(99.9%) 0,052 ms/op [Average]
  (min, avg, max) = (7,356, 7,383, 7,472), stdev = 0,035
  CI (99.9%): [7,330, 7,435] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 8, patternSize = 64)

# Run progress: 66,77% complete, ETA 05:10:32
# Fork: 1 of 1
# Warmup Iteration   1: 11,326 ms/op
# Warmup Iteration   2: 10,435 ms/op
# Warmup Iteration   3: 10,462 ms/op
# Warmup Iteration   4: 10,432 ms/op
# Warmup Iteration   5: 10,509 ms/op
# Warmup Iteration   6: 10,410 ms/op
# Warmup Iteration   7: 10,421 ms/op
# Warmup Iteration   8: 10,420 ms/op
# Warmup Iteration   9: 10,401 ms/op
# Warmup Iteration  10: 10,415 ms/op
Iteration   1: 10,412 ms/op
Iteration   2: 10,429 ms/op
Iteration   3: 10,422 ms/op
Iteration   4: 10,497 ms/op
Iteration   5: 10,426 ms/op
Iteration   6: 10,419 ms/op
Iteration   7: 10,422 ms/op
Iteration   8: 10,475 ms/op
Iteration   9: 10,408 ms/op
Iteration  10: 10,417 ms/op


Result "benchmarkFind":
  10,433 ±(99.9%) 0,044 ms/op [Average]
  (min, avg, max) = (10,408, 10,433, 10,497), stdev = 0,029
  CI (99.9%): [10,388, 10,477] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 8, patternSize = 128)

# Run progress: 66,82% complete, ETA 05:10:04
# Fork: 1 of 1
# Warmup Iteration   1: 8,950 ms/op
# Warmup Iteration   2: 8,354 ms/op
# Warmup Iteration   3: 8,306 ms/op
# Warmup Iteration   4: 8,273 ms/op
# Warmup Iteration   5: 8,252 ms/op
# Warmup Iteration   6: 8,243 ms/op
# Warmup Iteration   7: 8,270 ms/op
# Warmup Iteration   8: 8,257 ms/op
# Warmup Iteration   9: 8,238 ms/op
# Warmup Iteration  10: 9,289 ms/op
Iteration   1: 8,259 ms/op
Iteration   2: 8,269 ms/op
Iteration   3: 8,259 ms/op
Iteration   4: 8,249 ms/op
Iteration   5: 8,212 ms/op
Iteration   6: 8,235 ms/op
Iteration   7: 8,287 ms/op
Iteration   8: 8,260 ms/op
Iteration   9: 8,273 ms/op
Iteration  10: 8,281 ms/op


Result "benchmarkFind":
  8,258 ±(99.9%) 0,034 ms/op [Average]
  (min, avg, max) = (8,212, 8,258, 8,287), stdev = 0,022
  CI (99.9%): [8,225, 8,292] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 8, patternSize = 256)

# Run progress: 66,87% complete, ETA 05:09:36
# Fork: 1 of 1
# Warmup Iteration   1: 7,865 ms/op
# Warmup Iteration   2: 7,354 ms/op
# Warmup Iteration   3: 7,365 ms/op
# Warmup Iteration   4: 7,309 ms/op
# Warmup Iteration   5: 7,337 ms/op
# Warmup Iteration   6: 7,335 ms/op
# Warmup Iteration   7: 7,352 ms/op
# Warmup Iteration   8: 7,329 ms/op
# Warmup Iteration   9: 7,372 ms/op
# Warmup Iteration  10: 7,359 ms/op
Iteration   1: 7,323 ms/op
Iteration   2: 7,307 ms/op
Iteration   3: 7,328 ms/op
Iteration   4: 7,316 ms/op
Iteration   5: 7,339 ms/op
Iteration   6: 7,333 ms/op
Iteration   7: 7,325 ms/op
Iteration   8: 7,317 ms/op
Iteration   9: 7,329 ms/op
Iteration  10: 7,338 ms/op


Result "benchmarkFind":
  7,326 ±(99.9%) 0,015 ms/op [Average]
  (min, avg, max) = (7,307, 7,326, 7,339), stdev = 0,010
  CI (99.9%): [7,310, 7,341] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 32, patternSize = 2)

# Run progress: 66,91% complete, ETA 05:09:07
# Fork: 1 of 1
# Warmup Iteration   1: 25,975 ms/op
# Warmup Iteration   2: 23,900 ms/op
# Warmup Iteration   3: 23,936 ms/op
# Warmup Iteration   4: 23,839 ms/op
# Warmup Iteration   5: 23,833 ms/op
# Warmup Iteration   6: 24,068 ms/op
# Warmup Iteration   7: 23,944 ms/op
# Warmup Iteration   8: 23,861 ms/op
# Warmup Iteration   9: 23,881 ms/op
# Warmup Iteration  10: 23,925 ms/op
Iteration   1: 23,854 ms/op
Iteration   2: 23,907 ms/op
Iteration   3: 23,871 ms/op
Iteration   4: 23,842 ms/op
Iteration   5: 23,872 ms/op
Iteration   6: 23,951 ms/op
Iteration   7: 24,049 ms/op
Iteration   8: 23,897 ms/op
Iteration   9: 24,070 ms/op
Iteration  10: 23,920 ms/op


Result "benchmarkFind":
  23,923 ±(99.9%) 0,119 ms/op [Average]
  (min, avg, max) = (23,842, 23,923, 24,070), stdev = 0,079
  CI (99.9%): [23,804, 24,043] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 32, patternSize = 4)

# Run progress: 66,96% complete, ETA 05:08:39
# Fork: 1 of 1
# Warmup Iteration   1: 38,950 ms/op
# Warmup Iteration   2: 34,832 ms/op
# Warmup Iteration   3: 34,450 ms/op
# Warmup Iteration   4: 34,401 ms/op
# Warmup Iteration   5: 34,497 ms/op
# Warmup Iteration   6: 34,686 ms/op
# Warmup Iteration   7: 34,542 ms/op
# Warmup Iteration   8: 38,707 ms/op
# Warmup Iteration   9: 34,663 ms/op
# Warmup Iteration  10: 34,704 ms/op
Iteration   1: 34,459 ms/op
Iteration   2: 34,488 ms/op
Iteration   3: 34,591 ms/op
Iteration   4: 34,688 ms/op
Iteration   5: 34,502 ms/op
Iteration   6: 34,641 ms/op
Iteration   7: 34,941 ms/op
Iteration   8: 35,071 ms/op
Iteration   9: 35,211 ms/op
Iteration  10: 34,988 ms/op


Result "benchmarkFind":
  34,758 ±(99.9%) 0,410 ms/op [Average]
  (min, avg, max) = (34,459, 34,758, 35,211), stdev = 0,272
  CI (99.9%): [34,348, 35,169] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 32, patternSize = 8)

# Run progress: 67,00% complete, ETA 05:08:11
# Fork: 1 of 1
# Warmup Iteration   1: 23,158 ms/op
# Warmup Iteration   2: 21,633 ms/op
# Warmup Iteration   3: 21,352 ms/op
# Warmup Iteration   4: 20,687 ms/op
# Warmup Iteration   5: 20,735 ms/op
# Warmup Iteration   6: 20,796 ms/op
# Warmup Iteration   7: 20,894 ms/op
# Warmup Iteration   8: 20,829 ms/op
# Warmup Iteration   9: 20,906 ms/op
# Warmup Iteration  10: 20,873 ms/op
Iteration   1: 20,853 ms/op
Iteration   2: 20,868 ms/op
Iteration   3: 20,818 ms/op
Iteration   4: 20,921 ms/op
Iteration   5: 20,818 ms/op
Iteration   6: 20,842 ms/op
Iteration   7: 20,914 ms/op
Iteration   8: 20,836 ms/op
Iteration   9: 20,768 ms/op
Iteration  10: 20,769 ms/op


Result "benchmarkFind":
  20,841 ±(99.9%) 0,078 ms/op [Average]
  (min, avg, max) = (20,768, 20,841, 20,921), stdev = 0,052
  CI (99.9%): [20,762, 20,919] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 32, patternSize = 16)

# Run progress: 67,05% complete, ETA 05:07:43
# Fork: 1 of 1
# Warmup Iteration   1: 22,092 ms/op
# Warmup Iteration   2: 20,476 ms/op
# Warmup Iteration   3: 20,457 ms/op
# Warmup Iteration   4: 20,633 ms/op
# Warmup Iteration   5: 20,534 ms/op
# Warmup Iteration   6: 20,428 ms/op
# Warmup Iteration   7: 20,659 ms/op
# Warmup Iteration   8: 20,519 ms/op
# Warmup Iteration   9: 20,466 ms/op
# Warmup Iteration  10: 20,578 ms/op
Iteration   1: 20,319 ms/op
Iteration   2: 20,607 ms/op
Iteration   3: 20,499 ms/op
Iteration   4: 20,419 ms/op
Iteration   5: 20,454 ms/op
Iteration   6: 20,410 ms/op
Iteration   7: 20,569 ms/op
Iteration   8: 20,718 ms/op
Iteration   9: 20,735 ms/op
Iteration  10: 20,454 ms/op


Result "benchmarkFind":
  20,519 ±(99.9%) 0,206 ms/op [Average]
  (min, avg, max) = (20,319, 20,519, 20,735), stdev = 0,136
  CI (99.9%): [20,312, 20,725] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 32, patternSize = 32)

# Run progress: 67,10% complete, ETA 05:07:14
# Fork: 1 of 1
# Warmup Iteration   1: 21,044 ms/op
# Warmup Iteration   2: 19,750 ms/op
# Warmup Iteration   3: 19,679 ms/op
# Warmup Iteration   4: 19,873 ms/op
# Warmup Iteration   5: 19,817 ms/op
# Warmup Iteration   6: 22,402 ms/op
# Warmup Iteration   7: 19,718 ms/op
# Warmup Iteration   8: 19,801 ms/op
# Warmup Iteration   9: 19,894 ms/op
# Warmup Iteration  10: 20,282 ms/op
Iteration   1: 19,637 ms/op
Iteration   2: 19,730 ms/op
Iteration   3: 19,730 ms/op
Iteration   4: 19,603 ms/op
Iteration   5: 19,570 ms/op
Iteration   6: 19,508 ms/op
Iteration   7: 19,761 ms/op
Iteration   8: 19,686 ms/op
Iteration   9: 19,559 ms/op
Iteration  10: 19,709 ms/op


Result "benchmarkFind":
  19,649 ±(99.9%) 0,131 ms/op [Average]
  (min, avg, max) = (19,508, 19,649, 19,761), stdev = 0,086
  CI (99.9%): [19,518, 19,780] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 32, patternSize = 64)

# Run progress: 67,14% complete, ETA 05:06:46
# Fork: 1 of 1
# Warmup Iteration   1: 19,704 ms/op
# Warmup Iteration   2: 18,592 ms/op
# Warmup Iteration   3: 18,555 ms/op
# Warmup Iteration   4: 18,524 ms/op
# Warmup Iteration   5: 18,534 ms/op
# Warmup Iteration   6: 18,636 ms/op
# Warmup Iteration   7: 18,821 ms/op
# Warmup Iteration   8: 18,522 ms/op
# Warmup Iteration   9: 18,434 ms/op
# Warmup Iteration  10: 18,520 ms/op
Iteration   1: 18,633 ms/op
Iteration   2: 18,424 ms/op
Iteration   3: 18,408 ms/op
Iteration   4: 18,580 ms/op
Iteration   5: 18,629 ms/op
Iteration   6: 18,668 ms/op
Iteration   7: 18,625 ms/op
Iteration   8: 18,651 ms/op
Iteration   9: 18,550 ms/op
Iteration  10: 18,334 ms/op


Result "benchmarkFind":
  18,550 ±(99.9%) 0,179 ms/op [Average]
  (min, avg, max) = (18,334, 18,550, 18,668), stdev = 0,119
  CI (99.9%): [18,371, 18,729] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 32, patternSize = 128)

# Run progress: 67,19% complete, ETA 05:06:18
# Fork: 1 of 1
# Warmup Iteration   1: 23,276 ms/op
# Warmup Iteration   2: 20,866 ms/op
# Warmup Iteration   3: 20,700 ms/op
# Warmup Iteration   4: 20,690 ms/op
# Warmup Iteration   5: 20,708 ms/op
# Warmup Iteration   6: 20,629 ms/op
# Warmup Iteration   7: 20,840 ms/op
# Warmup Iteration   8: 20,773 ms/op
# Warmup Iteration   9: 20,628 ms/op
# Warmup Iteration  10: 20,719 ms/op
Iteration   1: 20,544 ms/op
Iteration   2: 20,627 ms/op
Iteration   3: 20,647 ms/op
Iteration   4: 20,568 ms/op
Iteration   5: 20,682 ms/op
Iteration   6: 20,623 ms/op
Iteration   7: 20,856 ms/op
Iteration   8: 20,456 ms/op
Iteration   9: 20,576 ms/op
Iteration  10: 20,624 ms/op


Result "benchmarkFind":
  20,620 ±(99.9%) 0,157 ms/op [Average]
  (min, avg, max) = (20,456, 20,620, 20,856), stdev = 0,104
  CI (99.9%): [20,463, 20,778] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 32, patternSize = 256)

# Run progress: 67,23% complete, ETA 05:05:50
# Fork: 1 of 1
# Warmup Iteration   1: 25,454 ms/op
# Warmup Iteration   2: 23,608 ms/op
# Warmup Iteration   3: 23,593 ms/op
# Warmup Iteration   4: 25,859 ms/op
# Warmup Iteration   5: 23,771 ms/op
# Warmup Iteration   6: 23,716 ms/op
# Warmup Iteration   7: 23,589 ms/op
# Warmup Iteration   8: 23,426 ms/op
# Warmup Iteration   9: 23,384 ms/op
# Warmup Iteration  10: 23,533 ms/op
Iteration   1: 24,021 ms/op
Iteration   2: 23,662 ms/op
Iteration   3: 23,601 ms/op
Iteration   4: 23,560 ms/op
Iteration   5: 23,578 ms/op
Iteration   6: 23,533 ms/op
Iteration   7: 23,712 ms/op
Iteration   8: 23,825 ms/op
Iteration   9: 23,554 ms/op
Iteration  10: 23,690 ms/op


Result "benchmarkFind":
  23,674 ±(99.9%) 0,229 ms/op [Average]
  (min, avg, max) = (23,533, 23,674, 24,021), stdev = 0,152
  CI (99.9%): [23,444, 23,903] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 128, patternSize = 2)

# Run progress: 67,28% complete, ETA 05:05:22
# Fork: 1 of 1
# Warmup Iteration   1: 185,441 ms/op
# Warmup Iteration   2: 174,236 ms/op
# Warmup Iteration   3: 175,070 ms/op
# Warmup Iteration   4: 173,874 ms/op
# Warmup Iteration   5: 174,929 ms/op
# Warmup Iteration   6: 175,036 ms/op
# Warmup Iteration   7: 174,523 ms/op
# Warmup Iteration   8: 174,287 ms/op
# Warmup Iteration   9: 174,564 ms/op
# Warmup Iteration  10: 175,045 ms/op
Iteration   1: 175,530 ms/op
Iteration   2: 174,626 ms/op
Iteration   3: 174,627 ms/op
Iteration   4: 173,918 ms/op
Iteration   5: 175,346 ms/op
Iteration   6: 173,982 ms/op
Iteration   7: 173,664 ms/op
Iteration   8: 176,773 ms/op
Iteration   9: 174,764 ms/op
Iteration  10: 176,080 ms/op


Result "benchmarkFind":
  174,931 ±(99.9%) 1,511 ms/op [Average]
  (min, avg, max) = (173,664, 174,931, 176,773), stdev = 1,000
  CI (99.9%): [173,420, 176,442] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 128, patternSize = 4)

# Run progress: 67,33% complete, ETA 05:04:54
# Fork: 1 of 1
# Warmup Iteration   1: 201,511 ms/op
# Warmup Iteration   2: 182,344 ms/op
# Warmup Iteration   3: 179,988 ms/op
# Warmup Iteration   4: 180,759 ms/op
# Warmup Iteration   5: 182,382 ms/op
# Warmup Iteration   6: 180,084 ms/op
# Warmup Iteration   7: 181,832 ms/op
# Warmup Iteration   8: 181,906 ms/op
# Warmup Iteration   9: 181,120 ms/op
# Warmup Iteration  10: 180,158 ms/op
Iteration   1: 179,720 ms/op
Iteration   2: 182,616 ms/op
Iteration   3: 180,384 ms/op
Iteration   4: 181,753 ms/op
Iteration   5: 180,372 ms/op
Iteration   6: 180,712 ms/op
Iteration   7: 181,183 ms/op
Iteration   8: 181,203 ms/op
Iteration   9: 180,697 ms/op
Iteration  10: 194,959 ms/op


Result "benchmarkFind":
  182,360 ±(99.9%) 6,802 ms/op [Average]
  (min, avg, max) = (179,720, 182,360, 194,959), stdev = 4,499
  CI (99.9%): [175,558, 189,162] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 128, patternSize = 8)

# Run progress: 67,37% complete, ETA 05:04:27
# Fork: 1 of 1
# Warmup Iteration   1: 32,647 ms/op
# Warmup Iteration   2: 30,804 ms/op
# Warmup Iteration   3: 30,856 ms/op
# Warmup Iteration   4: 30,877 ms/op
# Warmup Iteration   5: 31,225 ms/op
# Warmup Iteration   6: 30,968 ms/op
# Warmup Iteration   7: 30,916 ms/op
# Warmup Iteration   8: 30,810 ms/op
# Warmup Iteration   9: 30,831 ms/op
# Warmup Iteration  10: 30,863 ms/op
Iteration   1: 30,859 ms/op
Iteration   2: 30,673 ms/op
Iteration   3: 30,605 ms/op
Iteration   4: 30,850 ms/op
Iteration   5: 30,792 ms/op
Iteration   6: 31,121 ms/op
Iteration   7: 30,899 ms/op
Iteration   8: 30,787 ms/op
Iteration   9: 30,893 ms/op
Iteration  10: 30,952 ms/op


Result "benchmarkFind":
  30,843 ±(99.9%) 0,217 ms/op [Average]
  (min, avg, max) = (30,605, 30,843, 31,121), stdev = 0,144
  CI (99.9%): [30,626, 31,060] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 128, patternSize = 16)

# Run progress: 67,42% complete, ETA 05:03:58
# Fork: 1 of 1
# Warmup Iteration   1: 32,006 ms/op
# Warmup Iteration   2: 30,447 ms/op
# Warmup Iteration   3: 30,503 ms/op
# Warmup Iteration   4: 30,651 ms/op
# Warmup Iteration   5: 30,377 ms/op
# Warmup Iteration   6: 30,423 ms/op
# Warmup Iteration   7: 30,546 ms/op
# Warmup Iteration   8: 30,457 ms/op
# Warmup Iteration   9: 30,534 ms/op
# Warmup Iteration  10: 30,473 ms/op
Iteration   1: 30,527 ms/op
Iteration   2: 30,589 ms/op
Iteration   3: 30,717 ms/op
Iteration   4: 30,586 ms/op
Iteration   5: 30,579 ms/op
Iteration   6: 30,879 ms/op
Iteration   7: 30,311 ms/op
Iteration   8: 30,216 ms/op
Iteration   9: 30,170 ms/op
Iteration  10: 30,107 ms/op


Result "benchmarkFind":
  30,468 ±(99.9%) 0,385 ms/op [Average]
  (min, avg, max) = (30,107, 30,468, 30,879), stdev = 0,254
  CI (99.9%): [30,083, 30,853] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 128, patternSize = 32)

# Run progress: 67,46% complete, ETA 05:03:30
# Fork: 1 of 1
# Warmup Iteration   1: 32,043 ms/op
# Warmup Iteration   2: 30,383 ms/op
# Warmup Iteration   3: 30,344 ms/op
# Warmup Iteration   4: 30,923 ms/op
# Warmup Iteration   5: 31,119 ms/op
# Warmup Iteration   6: 31,249 ms/op
# Warmup Iteration   7: 31,042 ms/op
# Warmup Iteration   8: 31,220 ms/op
# Warmup Iteration   9: 30,847 ms/op
# Warmup Iteration  10: 30,727 ms/op
Iteration   1: 30,915 ms/op
Iteration   2: 30,781 ms/op
Iteration   3: 30,827 ms/op
Iteration   4: 30,766 ms/op
Iteration   5: 30,771 ms/op
Iteration   6: 30,960 ms/op
Iteration   7: 32,471 ms/op
Iteration   8: 32,160 ms/op
Iteration   9: 30,589 ms/op
Iteration  10: 30,542 ms/op


Result "benchmarkFind":
  31,078 ±(99.9%) 1,011 ms/op [Average]
  (min, avg, max) = (30,542, 31,078, 32,471), stdev = 0,668
  CI (99.9%): [30,068, 32,089] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 128, patternSize = 64)

# Run progress: 67,51% complete, ETA 05:03:02
# Fork: 1 of 1
# Warmup Iteration   1: 34,354 ms/op
# Warmup Iteration   2: 32,137 ms/op
# Warmup Iteration   3: 32,308 ms/op
# Warmup Iteration   4: 32,131 ms/op
# Warmup Iteration   5: 32,196 ms/op
# Warmup Iteration   6: 32,203 ms/op
# Warmup Iteration   7: 32,063 ms/op
# Warmup Iteration   8: 32,192 ms/op
# Warmup Iteration   9: 31,974 ms/op
# Warmup Iteration  10: 31,950 ms/op
Iteration   1: 31,570 ms/op
Iteration   2: 31,648 ms/op
Iteration   3: 31,503 ms/op
Iteration   4: 32,262 ms/op
Iteration   5: 31,510 ms/op
Iteration   6: 31,676 ms/op
Iteration   7: 31,680 ms/op
Iteration   8: 31,808 ms/op
Iteration   9: 31,843 ms/op
Iteration  10: 31,804 ms/op


Result "benchmarkFind":
  31,730 ±(99.9%) 0,336 ms/op [Average]
  (min, avg, max) = (31,503, 31,730, 32,262), stdev = 0,222
  CI (99.9%): [31,394, 32,067] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 128, patternSize = 128)

# Run progress: 67,56% complete, ETA 05:02:34
# Fork: 1 of 1
# Warmup Iteration   1: 32,652 ms/op
# Warmup Iteration   2: 30,965 ms/op
# Warmup Iteration   3: 30,669 ms/op
# Warmup Iteration   4: 30,763 ms/op
# Warmup Iteration   5: 30,492 ms/op
# Warmup Iteration   6: 30,600 ms/op
# Warmup Iteration   7: 30,390 ms/op
# Warmup Iteration   8: 30,905 ms/op
# Warmup Iteration   9: 30,642 ms/op
# Warmup Iteration  10: 30,738 ms/op
Iteration   1: 30,675 ms/op
Iteration   2: 30,594 ms/op
Iteration   3: 30,815 ms/op
Iteration   4: 30,561 ms/op
Iteration   5: 30,434 ms/op
Iteration   6: 30,592 ms/op
Iteration   7: 30,633 ms/op
Iteration   8: 30,565 ms/op
Iteration   9: 30,661 ms/op
Iteration  10: 30,660 ms/op


Result "benchmarkFind":
  30,619 ±(99.9%) 0,149 ms/op [Average]
  (min, avg, max) = (30,434, 30,619, 30,815), stdev = 0,098
  CI (99.9%): [30,470, 30,768] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 128, patternSize = 256)

# Run progress: 67,60% complete, ETA 05:02:06
# Fork: 1 of 1
# Warmup Iteration   1: 35,057 ms/op
# Warmup Iteration   2: 32,504 ms/op
# Warmup Iteration   3: 32,511 ms/op
# Warmup Iteration   4: 32,608 ms/op
# Warmup Iteration   5: 32,836 ms/op
# Warmup Iteration   6: 32,849 ms/op
# Warmup Iteration   7: 32,814 ms/op
# Warmup Iteration   8: 32,771 ms/op
# Warmup Iteration   9: 32,579 ms/op
# Warmup Iteration  10: 32,317 ms/op
Iteration   1: 32,429 ms/op
Iteration   2: 32,363 ms/op
Iteration   3: 32,437 ms/op
Iteration   4: 32,425 ms/op
Iteration   5: 37,770 ms/op
Iteration   6: 32,653 ms/op
Iteration   7: 33,554 ms/op
Iteration   8: 33,409 ms/op
Iteration   9: 33,633 ms/op
Iteration  10: 33,660 ms/op


Result "benchmarkFind":
  33,433 ±(99.9%) 2,453 ms/op [Average]
  (min, avg, max) = (32,363, 33,433, 37,770), stdev = 1,622
  CI (99.9%): [30,981, 35,886] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 2, patternSize = 2)

# Run progress: 67,65% complete, ETA 05:01:38
# Fork: 1 of 1
# Warmup Iteration   1: 2,767 ms/op
# Warmup Iteration   2: 2,569 ms/op
# Warmup Iteration   3: 2,559 ms/op
# Warmup Iteration   4: 2,529 ms/op
# Warmup Iteration   5: 2,549 ms/op
# Warmup Iteration   6: 2,535 ms/op
# Warmup Iteration   7: 2,555 ms/op
# Warmup Iteration   8: 2,557 ms/op
# Warmup Iteration   9: 2,545 ms/op
# Warmup Iteration  10: 2,544 ms/op
Iteration   1: 2,540 ms/op
Iteration   2: 2,538 ms/op
Iteration   3: 2,542 ms/op
Iteration   4: 2,557 ms/op
Iteration   5: 2,538 ms/op
Iteration   6: 2,547 ms/op
Iteration   7: 2,547 ms/op
Iteration   8: 2,532 ms/op
Iteration   9: 2,535 ms/op
Iteration  10: 2,538 ms/op


Result "benchmarkFind":
  2,542 ±(99.9%) 0,011 ms/op [Average]
  (min, avg, max) = (2,532, 2,542, 2,557), stdev = 0,007
  CI (99.9%): [2,531, 2,553] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 2, patternSize = 4)

# Run progress: 67,69% complete, ETA 05:01:10
# Fork: 1 of 1
# Warmup Iteration   1: 54,804 ms/op
# Warmup Iteration   2: 50,615 ms/op
# Warmup Iteration   3: 50,942 ms/op
# Warmup Iteration   4: 50,969 ms/op
# Warmup Iteration   5: 50,914 ms/op
# Warmup Iteration   6: 50,737 ms/op
# Warmup Iteration   7: 50,929 ms/op
# Warmup Iteration   8: 50,447 ms/op
# Warmup Iteration   9: 50,756 ms/op
# Warmup Iteration  10: 50,667 ms/op
Iteration   1: 50,800 ms/op
Iteration   2: 50,448 ms/op
Iteration   3: 50,787 ms/op
Iteration   4: 50,973 ms/op
Iteration   5: 50,616 ms/op
Iteration   6: 50,811 ms/op
Iteration   7: 50,559 ms/op
Iteration   8: 50,535 ms/op
Iteration   9: 50,547 ms/op
Iteration  10: 50,732 ms/op


Result "benchmarkFind":
  50,681 ±(99.9%) 0,248 ms/op [Average]
  (min, avg, max) = (50,448, 50,681, 50,973), stdev = 0,164
  CI (99.9%): [50,432, 50,929] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 2, patternSize = 8)

# Run progress: 67,74% complete, ETA 05:00:42
# Fork: 1 of 1
# Warmup Iteration   1: 24,813 ms/op
# Warmup Iteration   2: 22,618 ms/op
# Warmup Iteration   3: 22,651 ms/op
# Warmup Iteration   4: 22,514 ms/op
# Warmup Iteration   5: 22,420 ms/op
# Warmup Iteration   6: 22,525 ms/op
# Warmup Iteration   7: 22,525 ms/op
# Warmup Iteration   8: 22,405 ms/op
# Warmup Iteration   9: 22,405 ms/op
# Warmup Iteration  10: 22,306 ms/op
Iteration   1: 22,434 ms/op
Iteration   2: 22,413 ms/op
Iteration   3: 24,386 ms/op
Iteration   4: 22,582 ms/op
Iteration   5: 22,598 ms/op
Iteration   6: 23,095 ms/op
Iteration   7: 22,681 ms/op
Iteration   8: 22,483 ms/op
Iteration   9: 22,675 ms/op
Iteration  10: 22,695 ms/op


Result "benchmarkFind":
  22,804 ±(99.9%) 0,889 ms/op [Average]
  (min, avg, max) = (22,413, 22,804, 24,386), stdev = 0,588
  CI (99.9%): [21,915, 23,693] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 2, patternSize = 16)

# Run progress: 67,78% complete, ETA 05:00:14
# Fork: 1 of 1
# Warmup Iteration   1: 14,597 ms/op
# Warmup Iteration   2: 13,087 ms/op
# Warmup Iteration   3: 13,485 ms/op
# Warmup Iteration   4: 13,176 ms/op
# Warmup Iteration   5: 13,062 ms/op
# Warmup Iteration   6: 13,000 ms/op
# Warmup Iteration   7: 12,925 ms/op
# Warmup Iteration   8: 12,951 ms/op
# Warmup Iteration   9: 12,955 ms/op
# Warmup Iteration  10: 13,018 ms/op
Iteration   1: 13,021 ms/op
Iteration   2: 13,001 ms/op
Iteration   3: 12,986 ms/op
Iteration   4: 12,981 ms/op
Iteration   5: 13,009 ms/op
Iteration   6: 12,969 ms/op
Iteration   7: 12,938 ms/op
Iteration   8: 12,976 ms/op
Iteration   9: 12,951 ms/op
Iteration  10: 12,942 ms/op


Result "benchmarkFind":
  12,977 ±(99.9%) 0,042 ms/op [Average]
  (min, avg, max) = (12,938, 12,977, 13,021), stdev = 0,028
  CI (99.9%): [12,935, 13,020] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 2, patternSize = 32)

# Run progress: 67,83% complete, ETA 04:59:46
# Fork: 1 of 1
# Warmup Iteration   1: 10,021 ms/op
# Warmup Iteration   2: 9,220 ms/op
# Warmup Iteration   3: 9,286 ms/op
# Warmup Iteration   4: 9,216 ms/op
# Warmup Iteration   5: 9,197 ms/op
# Warmup Iteration   6: 9,183 ms/op
# Warmup Iteration   7: 9,189 ms/op
# Warmup Iteration   8: 9,185 ms/op
# Warmup Iteration   9: 9,160 ms/op
# Warmup Iteration  10: 9,178 ms/op
Iteration   1: 9,164 ms/op
Iteration   2: 9,182 ms/op
Iteration   3: 9,185 ms/op
Iteration   4: 9,188 ms/op
Iteration   5: 9,265 ms/op
Iteration   6: 9,180 ms/op
Iteration   7: 9,160 ms/op
Iteration   8: 9,151 ms/op
Iteration   9: 9,189 ms/op
Iteration  10: 9,123 ms/op


Result "benchmarkFind":
  9,179 ±(99.9%) 0,056 ms/op [Average]
  (min, avg, max) = (9,123, 9,179, 9,265), stdev = 0,037
  CI (99.9%): [9,123, 9,234] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 2, patternSize = 64)

# Run progress: 67,88% complete, ETA 04:59:18
# Fork: 1 of 1
# Warmup Iteration   1: 9,103 ms/op
# Warmup Iteration   2: 8,341 ms/op
# Warmup Iteration   3: 8,412 ms/op
# Warmup Iteration   4: 8,341 ms/op
# Warmup Iteration   5: 8,321 ms/op
# Warmup Iteration   6: 8,321 ms/op
# Warmup Iteration   7: 8,211 ms/op
# Warmup Iteration   8: 8,223 ms/op
# Warmup Iteration   9: 8,264 ms/op
# Warmup Iteration  10: 9,067 ms/op
Iteration   1: 8,291 ms/op
Iteration   2: 8,270 ms/op
Iteration   3: 8,278 ms/op
Iteration   4: 8,290 ms/op
Iteration   5: 8,287 ms/op
Iteration   6: 8,312 ms/op
Iteration   7: 8,265 ms/op
Iteration   8: 8,413 ms/op
Iteration   9: 8,272 ms/op
Iteration  10: 8,287 ms/op


Result "benchmarkFind":
  8,297 ±(99.9%) 0,065 ms/op [Average]
  (min, avg, max) = (8,265, 8,297, 8,413), stdev = 0,043
  CI (99.9%): [8,231, 8,362] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 2, patternSize = 128)

# Run progress: 67,92% complete, ETA 04:58:50
# Fork: 1 of 1
# Warmup Iteration   1: 8,868 ms/op
# Warmup Iteration   2: 8,241 ms/op
# Warmup Iteration   3: 8,108 ms/op
# Warmup Iteration   4: 8,079 ms/op
# Warmup Iteration   5: 8,008 ms/op
# Warmup Iteration   6: 8,095 ms/op
# Warmup Iteration   7: 8,035 ms/op
# Warmup Iteration   8: 8,096 ms/op
# Warmup Iteration   9: 8,040 ms/op
# Warmup Iteration  10: 8,096 ms/op
Iteration   1: 8,058 ms/op
Iteration   2: 8,089 ms/op
Iteration   3: 8,065 ms/op
Iteration   4: 8,017 ms/op
Iteration   5: 8,045 ms/op
Iteration   6: 8,062 ms/op
Iteration   7: 7,996 ms/op
Iteration   8: 7,964 ms/op
Iteration   9: 8,044 ms/op
Iteration  10: 8,002 ms/op


Result "benchmarkFind":
  8,034 ±(99.9%) 0,058 ms/op [Average]
  (min, avg, max) = (7,964, 8,034, 8,089), stdev = 0,038
  CI (99.9%): [7,976, 8,092] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 2, patternSize = 256)

# Run progress: 67,97% complete, ETA 04:58:22
# Fork: 1 of 1
# Warmup Iteration   1: 7,353 ms/op
# Warmup Iteration   2: 6,801 ms/op
# Warmup Iteration   3: 6,787 ms/op
# Warmup Iteration   4: 6,794 ms/op
# Warmup Iteration   5: 6,756 ms/op
# Warmup Iteration   6: 6,865 ms/op
# Warmup Iteration   7: 6,768 ms/op
# Warmup Iteration   8: 6,787 ms/op
# Warmup Iteration   9: 6,766 ms/op
# Warmup Iteration  10: 6,812 ms/op
Iteration   1: 6,812 ms/op
Iteration   2: 6,797 ms/op
Iteration   3: 6,792 ms/op
Iteration   4: 6,830 ms/op
Iteration   5: 6,781 ms/op
Iteration   6: 6,776 ms/op
Iteration   7: 6,719 ms/op
Iteration   8: 6,753 ms/op
Iteration   9: 6,741 ms/op
Iteration  10: 6,719 ms/op


Result "benchmarkFind":
  6,772 ±(99.9%) 0,058 ms/op [Average]
  (min, avg, max) = (6,719, 6,772, 6,830), stdev = 0,038
  CI (99.9%): [6,715, 6,830] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 8, patternSize = 2)

# Run progress: 68,01% complete, ETA 04:57:54
# Fork: 1 of 1
# Warmup Iteration   1: 5,918 ms/op
# Warmup Iteration   2: 5,507 ms/op
# Warmup Iteration   3: 5,536 ms/op
# Warmup Iteration   4: 5,450 ms/op
# Warmup Iteration   5: 5,447 ms/op
# Warmup Iteration   6: 5,432 ms/op
# Warmup Iteration   7: 5,447 ms/op
# Warmup Iteration   8: 6,044 ms/op
# Warmup Iteration   9: 5,457 ms/op
# Warmup Iteration  10: 5,456 ms/op
Iteration   1: 5,445 ms/op
Iteration   2: 5,427 ms/op
Iteration   3: 5,481 ms/op
Iteration   4: 5,434 ms/op
Iteration   5: 5,455 ms/op
Iteration   6: 5,425 ms/op
Iteration   7: 5,516 ms/op
Iteration   8: 5,438 ms/op
Iteration   9: 5,443 ms/op
Iteration  10: 5,467 ms/op


Result "benchmarkFind":
  5,453 ±(99.9%) 0,042 ms/op [Average]
  (min, avg, max) = (5,425, 5,453, 5,516), stdev = 0,028
  CI (99.9%): [5,410, 5,495] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 8, patternSize = 4)

# Run progress: 68,06% complete, ETA 04:57:26
# Fork: 1 of 1
# Warmup Iteration   1: 90,992 ms/op
# Warmup Iteration   2: 84,982 ms/op
# Warmup Iteration   3: 84,633 ms/op
# Warmup Iteration   4: 85,492 ms/op
# Warmup Iteration   5: 85,541 ms/op
# Warmup Iteration   6: 86,092 ms/op
# Warmup Iteration   7: 85,111 ms/op
# Warmup Iteration   8: 86,110 ms/op
# Warmup Iteration   9: 85,170 ms/op
# Warmup Iteration  10: 84,791 ms/op
Iteration   1: 84,555 ms/op
Iteration   2: 84,576 ms/op
Iteration   3: 84,828 ms/op
Iteration   4: 85,121 ms/op
Iteration   5: 84,357 ms/op
Iteration   6: 85,287 ms/op
Iteration   7: 84,764 ms/op
Iteration   8: 84,548 ms/op
Iteration   9: 84,792 ms/op
Iteration  10: 84,641 ms/op


Result "benchmarkFind":
  84,747 ±(99.9%) 0,424 ms/op [Average]
  (min, avg, max) = (84,357, 84,747, 85,287), stdev = 0,281
  CI (99.9%): [84,323, 85,171] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 8, patternSize = 8)

# Run progress: 68,11% complete, ETA 04:56:58
# Fork: 1 of 1
# Warmup Iteration   1: 61,306 ms/op
# Warmup Iteration   2: 57,942 ms/op
# Warmup Iteration   3: 56,943 ms/op
# Warmup Iteration   4: 56,770 ms/op
# Warmup Iteration   5: 57,197 ms/op
# Warmup Iteration   6: 56,984 ms/op
# Warmup Iteration   7: 56,935 ms/op
# Warmup Iteration   8: 57,326 ms/op
# Warmup Iteration   9: 56,704 ms/op
# Warmup Iteration  10: 56,620 ms/op
Iteration   1: 56,838 ms/op
Iteration   2: 56,858 ms/op
Iteration   3: 57,058 ms/op
Iteration   4: 56,662 ms/op
Iteration   5: 56,810 ms/op
Iteration   6: 56,828 ms/op
Iteration   7: 56,488 ms/op
Iteration   8: 56,857 ms/op
Iteration   9: 56,733 ms/op
Iteration  10: 56,901 ms/op


Result "benchmarkFind":
  56,803 ±(99.9%) 0,229 ms/op [Average]
  (min, avg, max) = (56,488, 56,803, 57,058), stdev = 0,151
  CI (99.9%): [56,574, 57,032] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 8, patternSize = 16)

# Run progress: 68,15% complete, ETA 04:56:30
# Fork: 1 of 1
# Warmup Iteration   1: 50,123 ms/op
# Warmup Iteration   2: 47,307 ms/op
# Warmup Iteration   3: 48,346 ms/op
# Warmup Iteration   4: 47,056 ms/op
# Warmup Iteration   5: 49,289 ms/op
# Warmup Iteration   6: 47,127 ms/op
# Warmup Iteration   7: 47,147 ms/op
# Warmup Iteration   8: 46,909 ms/op
# Warmup Iteration   9: 46,785 ms/op
# Warmup Iteration  10: 46,658 ms/op
Iteration   1: 46,652 ms/op
Iteration   2: 46,781 ms/op
Iteration   3: 47,075 ms/op
Iteration   4: 46,925 ms/op
Iteration   5: 46,581 ms/op
Iteration   6: 46,585 ms/op
Iteration   7: 50,029 ms/op
Iteration   8: 49,734 ms/op
Iteration   9: 49,757 ms/op
Iteration  10: 50,267 ms/op


Result "benchmarkFind":
  48,039 ±(99.9%) 2,503 ms/op [Average]
  (min, avg, max) = (46,581, 48,039, 50,267), stdev = 1,655
  CI (99.9%): [45,536, 50,541] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 8, patternSize = 32)

# Run progress: 68,20% complete, ETA 04:56:03
# Fork: 1 of 1
# Warmup Iteration   1: 36,490 ms/op
# Warmup Iteration   2: 33,881 ms/op
# Warmup Iteration   3: 33,680 ms/op
# Warmup Iteration   4: 34,097 ms/op
# Warmup Iteration   5: 34,663 ms/op
# Warmup Iteration   6: 34,486 ms/op
# Warmup Iteration   7: 34,453 ms/op
# Warmup Iteration   8: 34,644 ms/op
# Warmup Iteration   9: 34,191 ms/op
# Warmup Iteration  10: 33,449 ms/op
Iteration   1: 33,775 ms/op
Iteration   2: 33,531 ms/op
Iteration   3: 34,156 ms/op
Iteration   4: 33,710 ms/op
Iteration   5: 33,617 ms/op
Iteration   6: 33,521 ms/op
Iteration   7: 33,943 ms/op
Iteration   8: 34,029 ms/op
Iteration   9: 34,211 ms/op
Iteration  10: 33,883 ms/op


Result "benchmarkFind":
  33,838 ±(99.9%) 0,375 ms/op [Average]
  (min, avg, max) = (33,521, 33,838, 34,211), stdev = 0,248
  CI (99.9%): [33,463, 34,212] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 8, patternSize = 64)

# Run progress: 68,24% complete, ETA 04:55:35
# Fork: 1 of 1
# Warmup Iteration   1: 44,424 ms/op
# Warmup Iteration   2: 40,709 ms/op
# Warmup Iteration   3: 40,697 ms/op
# Warmup Iteration   4: 40,477 ms/op
# Warmup Iteration   5: 40,421 ms/op
# Warmup Iteration   6: 40,609 ms/op
# Warmup Iteration   7: 40,532 ms/op
# Warmup Iteration   8: 40,694 ms/op
# Warmup Iteration   9: 40,561 ms/op
# Warmup Iteration  10: 40,592 ms/op
Iteration   1: 40,683 ms/op
Iteration   2: 40,586 ms/op
Iteration   3: 40,951 ms/op
Iteration   4: 40,938 ms/op
Iteration   5: 40,609 ms/op
Iteration   6: 40,636 ms/op
Iteration   7: 40,536 ms/op
Iteration   8: 40,627 ms/op
Iteration   9: 40,824 ms/op
Iteration  10: 40,860 ms/op


Result "benchmarkFind":
  40,725 ±(99.9%) 0,232 ms/op [Average]
  (min, avg, max) = (40,536, 40,725, 40,951), stdev = 0,153
  CI (99.9%): [40,493, 40,957] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 8, patternSize = 128)

# Run progress: 68,29% complete, ETA 04:55:07
# Fork: 1 of 1
# Warmup Iteration   1: 53,324 ms/op
# Warmup Iteration   2: 54,570 ms/op
# Warmup Iteration   3: 49,552 ms/op
# Warmup Iteration   4: 49,448 ms/op
# Warmup Iteration   5: 49,706 ms/op
# Warmup Iteration   6: 49,524 ms/op
# Warmup Iteration   7: 49,884 ms/op
# Warmup Iteration   8: 49,650 ms/op
# Warmup Iteration   9: 50,362 ms/op
# Warmup Iteration  10: 49,047 ms/op
Iteration   1: 49,314 ms/op
Iteration   2: 49,181 ms/op
Iteration   3: 49,062 ms/op
Iteration   4: 48,777 ms/op
Iteration   5: 49,072 ms/op
Iteration   6: 49,036 ms/op
Iteration   7: 49,074 ms/op
Iteration   8: 49,201 ms/op
Iteration   9: 49,296 ms/op
Iteration  10: 48,696 ms/op


Result "benchmarkFind":
  49,071 ±(99.9%) 0,305 ms/op [Average]
  (min, avg, max) = (48,696, 49,071, 49,314), stdev = 0,202
  CI (99.9%): [48,766, 49,376] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 8, patternSize = 256)

# Run progress: 68,34% complete, ETA 04:54:39
# Fork: 1 of 1
# Warmup Iteration   1: 37,769 ms/op
# Warmup Iteration   2: 35,585 ms/op
# Warmup Iteration   3: 35,407 ms/op
# Warmup Iteration   4: 35,366 ms/op
# Warmup Iteration   5: 35,436 ms/op
# Warmup Iteration   6: 35,330 ms/op
# Warmup Iteration   7: 35,221 ms/op
# Warmup Iteration   8: 35,088 ms/op
# Warmup Iteration   9: 35,199 ms/op
# Warmup Iteration  10: 35,322 ms/op
Iteration   1: 35,469 ms/op
Iteration   2: 35,109 ms/op
Iteration   3: 35,382 ms/op
Iteration   4: 35,241 ms/op
Iteration   5: 35,102 ms/op
Iteration   6: 35,338 ms/op
Iteration   7: 34,886 ms/op
Iteration   8: 35,144 ms/op
Iteration   9: 35,138 ms/op
Iteration  10: 35,456 ms/op


Result "benchmarkFind":
  35,226 ±(99.9%) 0,280 ms/op [Average]
  (min, avg, max) = (34,886, 35,226, 35,469), stdev = 0,185
  CI (99.9%): [34,947, 35,506] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 32, patternSize = 2)

# Run progress: 68,38% complete, ETA 04:54:12
# Fork: 1 of 1
# Warmup Iteration   1: 35,920 ms/op
# Warmup Iteration   2: 33,542 ms/op
# Warmup Iteration   3: 33,431 ms/op
# Warmup Iteration   4: 33,695 ms/op
# Warmup Iteration   5: 33,517 ms/op
# Warmup Iteration   6: 33,500 ms/op
# Warmup Iteration   7: 33,490 ms/op
# Warmup Iteration   8: 33,511 ms/op
# Warmup Iteration   9: 33,420 ms/op
# Warmup Iteration  10: 33,530 ms/op
Iteration   1: 33,440 ms/op
Iteration   2: 33,451 ms/op
Iteration   3: 33,500 ms/op
Iteration   4: 33,397 ms/op
Iteration   5: 33,458 ms/op
Iteration   6: 33,383 ms/op
Iteration   7: 33,569 ms/op
Iteration   8: 33,435 ms/op
Iteration   9: 37,401 ms/op
Iteration  10: 33,812 ms/op


Result "benchmarkFind":
  33,885 ±(99.9%) 1,877 ms/op [Average]
  (min, avg, max) = (33,383, 33,885, 37,401), stdev = 1,242
  CI (99.9%): [32,007, 35,762] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 32, patternSize = 4)

# Run progress: 68,43% complete, ETA 04:53:44
# Fork: 1 of 1
# Warmup Iteration   1: 169,186 ms/op
# Warmup Iteration   2: 158,707 ms/op
# Warmup Iteration   3: 151,038 ms/op
# Warmup Iteration   4: 156,285 ms/op
# Warmup Iteration   5: 151,928 ms/op
# Warmup Iteration   6: 152,709 ms/op
# Warmup Iteration   7: 152,035 ms/op
# Warmup Iteration   8: 153,385 ms/op
# Warmup Iteration   9: 154,473 ms/op
# Warmup Iteration  10: 155,204 ms/op
Iteration   1: 152,096 ms/op
Iteration   2: 151,457 ms/op
Iteration   3: 153,620 ms/op
Iteration   4: 152,347 ms/op
Iteration   5: 154,374 ms/op
Iteration   6: 153,408 ms/op
Iteration   7: 155,617 ms/op
Iteration   8: 156,148 ms/op
Iteration   9: 154,472 ms/op
Iteration  10: 155,174 ms/op


Result "benchmarkFind":
  153,871 ±(99.9%) 2,370 ms/op [Average]
  (min, avg, max) = (151,457, 153,871, 156,148), stdev = 1,568
  CI (99.9%): [151,501, 156,242] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 32, patternSize = 8)

# Run progress: 68,47% complete, ETA 04:53:16
# Fork: 1 of 1
# Warmup Iteration   1: 131,258 ms/op
# Warmup Iteration   2: 125,341 ms/op
# Warmup Iteration   3: 124,019 ms/op
# Warmup Iteration   4: 123,438 ms/op
# Warmup Iteration   5: 124,513 ms/op
# Warmup Iteration   6: 125,624 ms/op
# Warmup Iteration   7: 125,780 ms/op
# Warmup Iteration   8: 124,410 ms/op
# Warmup Iteration   9: 124,805 ms/op
# Warmup Iteration  10: 125,758 ms/op
Iteration   1: 124,752 ms/op
Iteration   2: 129,609 ms/op
Iteration   3: 131,842 ms/op
Iteration   4: 125,418 ms/op
Iteration   5: 124,698 ms/op
Iteration   6: 125,916 ms/op
Iteration   7: 129,381 ms/op
Iteration   8: 128,799 ms/op
Iteration   9: 127,831 ms/op
Iteration  10: 126,802 ms/op


Result "benchmarkFind":
  127,505 ±(99.9%) 3,612 ms/op [Average]
  (min, avg, max) = (124,698, 127,505, 131,842), stdev = 2,389
  CI (99.9%): [123,893, 131,117] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 32, patternSize = 16)

# Run progress: 68,52% complete, ETA 04:52:49
# Fork: 1 of 1
# Warmup Iteration   1: 143,789 ms/op
# Warmup Iteration   2: 134,050 ms/op
# Warmup Iteration   3: 135,001 ms/op
# Warmup Iteration   4: 133,882 ms/op
# Warmup Iteration   5: 133,634 ms/op
# Warmup Iteration   6: 134,018 ms/op
# Warmup Iteration   7: 133,589 ms/op
# Warmup Iteration   8: 133,656 ms/op
# Warmup Iteration   9: 133,154 ms/op
# Warmup Iteration  10: 133,066 ms/op
Iteration   1: 133,218 ms/op
Iteration   2: 133,140 ms/op
Iteration   3: 141,253 ms/op
Iteration   4: 133,867 ms/op
Iteration   5: 133,302 ms/op
Iteration   6: 134,089 ms/op
Iteration   7: 133,874 ms/op
Iteration   8: 134,019 ms/op
Iteration   9: 134,141 ms/op
Iteration  10: 134,066 ms/op


Result "benchmarkFind":
  134,497 ±(99.9%) 3,636 ms/op [Average]
  (min, avg, max) = (133,140, 134,497, 141,253), stdev = 2,405
  CI (99.9%): [130,861, 138,133] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 32, patternSize = 32)

# Run progress: 68,57% complete, ETA 04:52:22
# Fork: 1 of 1
# Warmup Iteration   1: 117,690 ms/op
# Warmup Iteration   2: 114,757 ms/op
# Warmup Iteration   3: 113,890 ms/op
# Warmup Iteration   4: 116,030 ms/op
# Warmup Iteration   5: 112,957 ms/op
# Warmup Iteration   6: 114,132 ms/op
# Warmup Iteration   7: 112,602 ms/op
# Warmup Iteration   8: 112,103 ms/op
# Warmup Iteration   9: 112,127 ms/op
# Warmup Iteration  10: 111,808 ms/op
Iteration   1: 113,041 ms/op
Iteration   2: 112,332 ms/op
Iteration   3: 112,756 ms/op
Iteration   4: 115,157 ms/op
Iteration   5: 112,483 ms/op
Iteration   6: 112,550 ms/op
Iteration   7: 113,770 ms/op
Iteration   8: 112,234 ms/op
Iteration   9: 111,611 ms/op
Iteration  10: 113,539 ms/op


Result "benchmarkFind":
  112,947 ±(99.9%) 1,512 ms/op [Average]
  (min, avg, max) = (111,611, 112,947, 115,157), stdev = 1,000
  CI (99.9%): [111,435, 114,459] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 32, patternSize = 64)

# Run progress: 68,61% complete, ETA 04:51:54
# Fork: 1 of 1
# Warmup Iteration   1: 137,921 ms/op
# Warmup Iteration   2: 132,294 ms/op
# Warmup Iteration   3: 131,420 ms/op
# Warmup Iteration   4: 130,625 ms/op
# Warmup Iteration   5: 130,655 ms/op
# Warmup Iteration   6: 131,006 ms/op
# Warmup Iteration   7: 130,843 ms/op
# Warmup Iteration   8: 131,083 ms/op
# Warmup Iteration   9: 131,794 ms/op
# Warmup Iteration  10: 131,230 ms/op
Iteration   1: 130,704 ms/op
Iteration   2: 131,842 ms/op
Iteration   3: 131,305 ms/op
Iteration   4: 131,731 ms/op
Iteration   5: 131,411 ms/op
Iteration   6: 131,547 ms/op
Iteration   7: 132,693 ms/op
Iteration   8: 132,970 ms/op
Iteration   9: 133,758 ms/op
Iteration  10: 132,624 ms/op


Result "benchmarkFind":
  132,058 ±(99.9%) 1,396 ms/op [Average]
  (min, avg, max) = (130,704, 132,058, 133,758), stdev = 0,923
  CI (99.9%): [130,662, 133,455] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 32, patternSize = 128)

# Run progress: 68,66% complete, ETA 04:51:27
# Fork: 1 of 1
# Warmup Iteration   1: 145,325 ms/op
# Warmup Iteration   2: 144,884 ms/op
# Warmup Iteration   3: 143,794 ms/op
# Warmup Iteration   4: 135,449 ms/op
# Warmup Iteration   5: 135,379 ms/op
# Warmup Iteration   6: 136,315 ms/op
# Warmup Iteration   7: 134,667 ms/op
# Warmup Iteration   8: 143,635 ms/op
# Warmup Iteration   9: 139,600 ms/op
# Warmup Iteration  10: 135,149 ms/op
Iteration   1: 134,016 ms/op
Iteration   2: 134,929 ms/op
Iteration   3: 134,677 ms/op
Iteration   4: 135,088 ms/op
Iteration   5: 135,043 ms/op
Iteration   6: 134,784 ms/op
Iteration   7: 135,466 ms/op
Iteration   8: 135,044 ms/op
Iteration   9: 134,625 ms/op
Iteration  10: 134,471 ms/op


Result "benchmarkFind":
  134,814 ±(99.9%) 0,602 ms/op [Average]
  (min, avg, max) = (134,016, 134,814, 135,466), stdev = 0,398
  CI (99.9%): [134,212, 135,417] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 32, patternSize = 256)

# Run progress: 68,70% complete, ETA 04:51:00
# Fork: 1 of 1
# Warmup Iteration   1: 141,096 ms/op
# Warmup Iteration   2: 134,824 ms/op
# Warmup Iteration   3: 135,926 ms/op
# Warmup Iteration   4: 135,121 ms/op
# Warmup Iteration   5: 134,365 ms/op
# Warmup Iteration   6: 135,391 ms/op
# Warmup Iteration   7: 134,196 ms/op
# Warmup Iteration   8: 133,992 ms/op
# Warmup Iteration   9: 133,251 ms/op
# Warmup Iteration  10: 133,977 ms/op
Iteration   1: 133,585 ms/op
Iteration   2: 135,136 ms/op
Iteration   3: 133,431 ms/op
Iteration   4: 134,427 ms/op
Iteration   5: 133,990 ms/op
Iteration   6: 133,700 ms/op
Iteration   7: 137,509 ms/op
Iteration   8: 137,217 ms/op
Iteration   9: 137,401 ms/op
Iteration  10: 136,228 ms/op


Result "benchmarkFind":
  135,263 ±(99.9%) 2,535 ms/op [Average]
  (min, avg, max) = (133,431, 135,263, 137,509), stdev = 1,677
  CI (99.9%): [132,727, 137,798] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 128, patternSize = 2)

# Run progress: 68,75% complete, ETA 04:50:32
# Fork: 1 of 1
# Warmup Iteration   1: 378,079 ms/op
# Warmup Iteration   2: 355,324 ms/op
# Warmup Iteration   3: 355,111 ms/op
# Warmup Iteration   4: 353,546 ms/op
# Warmup Iteration   5: 353,095 ms/op
# Warmup Iteration   6: 354,662 ms/op
# Warmup Iteration   7: 353,227 ms/op
# Warmup Iteration   8: 351,954 ms/op
# Warmup Iteration   9: 353,665 ms/op
# Warmup Iteration  10: 353,668 ms/op
Iteration   1: 361,116 ms/op
Iteration   2: 355,677 ms/op
Iteration   3: 354,024 ms/op
Iteration   4: 353,366 ms/op
Iteration   5: 352,178 ms/op
Iteration   6: 354,287 ms/op
Iteration   7: 353,196 ms/op
Iteration   8: 355,662 ms/op
Iteration   9: 352,683 ms/op
Iteration  10: 353,797 ms/op


Result "benchmarkFind":
  354,599 ±(99.9%) 3,866 ms/op [Average]
  (min, avg, max) = (352,178, 354,599, 361,116), stdev = 2,557
  CI (99.9%): [350,732, 358,465] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 128, patternSize = 4)

# Run progress: 68,80% complete, ETA 04:50:05
# Fork: 1 of 1
# Warmup Iteration   1: 413,475 ms/op
# Warmup Iteration   2: 421,858 ms/op
# Warmup Iteration   3: 384,375 ms/op
# Warmup Iteration   4: 382,417 ms/op
# Warmup Iteration   5: 379,663 ms/op
# Warmup Iteration   6: 379,029 ms/op
# Warmup Iteration   7: 381,989 ms/op
# Warmup Iteration   8: 378,231 ms/op
# Warmup Iteration   9: 380,150 ms/op
# Warmup Iteration  10: 381,573 ms/op
Iteration   1: 378,843 ms/op
Iteration   2: 378,818 ms/op
Iteration   3: 379,654 ms/op
Iteration   4: 380,487 ms/op
Iteration   5: 380,024 ms/op
Iteration   6: 380,044 ms/op
Iteration   7: 381,078 ms/op
Iteration   8: 387,559 ms/op
Iteration   9: 380,666 ms/op
Iteration  10: 379,387 ms/op


Result "benchmarkFind":
  380,656 ±(99.9%) 3,835 ms/op [Average]
  (min, avg, max) = (378,818, 380,656, 387,559), stdev = 2,537
  CI (99.9%): [376,821, 384,491] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 128, patternSize = 8)

# Run progress: 68,84% complete, ETA 04:49:39
# Fork: 1 of 1
# Warmup Iteration   1: 226,425 ms/op
# Warmup Iteration   2: 214,764 ms/op
# Warmup Iteration   3: 213,598 ms/op
# Warmup Iteration   4: 211,795 ms/op
# Warmup Iteration   5: 214,629 ms/op
# Warmup Iteration   6: 212,201 ms/op
# Warmup Iteration   7: 214,549 ms/op
# Warmup Iteration   8: 212,746 ms/op
# Warmup Iteration   9: 214,740 ms/op
# Warmup Iteration  10: 213,649 ms/op
Iteration   1: 213,545 ms/op
Iteration   2: 211,809 ms/op
Iteration   3: 213,927 ms/op
Iteration   4: 213,140 ms/op
Iteration   5: 213,287 ms/op
Iteration   6: 212,826 ms/op
Iteration   7: 213,567 ms/op
Iteration   8: 213,759 ms/op
Iteration   9: 213,480 ms/op
Iteration  10: 215,403 ms/op


Result "benchmarkFind":
  213,474 ±(99.9%) 1,367 ms/op [Average]
  (min, avg, max) = (211,809, 213,474, 215,403), stdev = 0,904
  CI (99.9%): [212,107, 214,841] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 128, patternSize = 16)

# Run progress: 68,89% complete, ETA 04:49:12
# Fork: 1 of 1
# Warmup Iteration   1: 229,487 ms/op
# Warmup Iteration   2: 219,938 ms/op
# Warmup Iteration   3: 222,441 ms/op
# Warmup Iteration   4: 224,451 ms/op
# Warmup Iteration   5: 227,706 ms/op
# Warmup Iteration   6: 224,505 ms/op
# Warmup Iteration   7: 224,852 ms/op
# Warmup Iteration   8: 223,871 ms/op
# Warmup Iteration   9: 222,380 ms/op
# Warmup Iteration  10: 224,455 ms/op
Iteration   1: 223,323 ms/op
Iteration   2: 224,543 ms/op
Iteration   3: 223,675 ms/op
Iteration   4: 235,955 ms/op
Iteration   5: 226,295 ms/op
Iteration   6: 220,514 ms/op
Iteration   7: 214,578 ms/op
Iteration   8: 214,916 ms/op
Iteration   9: 216,179 ms/op
Iteration  10: 214,077 ms/op


Result "benchmarkFind":
  221,405 ±(99.9%) 10,387 ms/op [Average]
  (min, avg, max) = (214,077, 221,405, 235,955), stdev = 6,870
  CI (99.9%): [211,019, 231,792] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 128, patternSize = 32)

# Run progress: 68,93% complete, ETA 04:48:45
# Fork: 1 of 1
# Warmup Iteration   1: 229,979 ms/op
# Warmup Iteration   2: 218,171 ms/op
# Warmup Iteration   3: 219,328 ms/op
# Warmup Iteration   4: 217,266 ms/op
# Warmup Iteration   5: 217,983 ms/op
# Warmup Iteration   6: 216,940 ms/op
# Warmup Iteration   7: 216,269 ms/op
# Warmup Iteration   8: 215,949 ms/op
# Warmup Iteration   9: 217,425 ms/op
# Warmup Iteration  10: 216,401 ms/op
Iteration   1: 214,842 ms/op
Iteration   2: 213,823 ms/op
Iteration   3: 215,666 ms/op
Iteration   4: 214,912 ms/op
Iteration   5: 216,268 ms/op
Iteration   6: 214,612 ms/op
Iteration   7: 221,516 ms/op
Iteration   8: 222,612 ms/op
Iteration   9: 222,361 ms/op
Iteration  10: 221,793 ms/op


Result "benchmarkFind":
  217,840 ±(99.9%) 5,604 ms/op [Average]
  (min, avg, max) = (213,823, 217,840, 222,612), stdev = 3,707
  CI (99.9%): [212,236, 223,444] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 128, patternSize = 64)

# Run progress: 68,98% complete, ETA 04:48:18
# Fork: 1 of 1
# Warmup Iteration   1: 222,451 ms/op
# Warmup Iteration   2: 204,627 ms/op
# Warmup Iteration   3: 204,838 ms/op
# Warmup Iteration   4: 204,222 ms/op
# Warmup Iteration   5: 203,870 ms/op
# Warmup Iteration   6: 204,663 ms/op
# Warmup Iteration   7: 204,297 ms/op
# Warmup Iteration   8: 203,685 ms/op
# Warmup Iteration   9: 203,711 ms/op
# Warmup Iteration  10: 203,717 ms/op
Iteration   1: 204,562 ms/op
Iteration   2: 204,771 ms/op
Iteration   3: 204,771 ms/op
Iteration   4: 203,892 ms/op
Iteration   5: 205,352 ms/op
Iteration   6: 204,676 ms/op
Iteration   7: 205,017 ms/op
Iteration   8: 203,766 ms/op
Iteration   9: 205,394 ms/op
Iteration  10: 202,712 ms/op


Result "benchmarkFind":
  204,491 ±(99.9%) 1,243 ms/op [Average]
  (min, avg, max) = (202,712, 204,491, 205,394), stdev = 0,822
  CI (99.9%): [203,249, 205,734] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 128, patternSize = 128)

# Run progress: 69,03% complete, ETA 04:47:50
# Fork: 1 of 1
# Warmup Iteration   1: 225,863 ms/op
# Warmup Iteration   2: 210,823 ms/op
# Warmup Iteration   3: 210,971 ms/op
# Warmup Iteration   4: 210,466 ms/op
# Warmup Iteration   5: 210,045 ms/op
# Warmup Iteration   6: 210,026 ms/op
# Warmup Iteration   7: 209,420 ms/op
# Warmup Iteration   8: 210,210 ms/op
# Warmup Iteration   9: 225,831 ms/op
# Warmup Iteration  10: 208,784 ms/op
Iteration   1: 209,658 ms/op
Iteration   2: 214,058 ms/op
Iteration   3: 211,247 ms/op
Iteration   4: 209,668 ms/op
Iteration   5: 209,333 ms/op
Iteration   6: 209,959 ms/op
Iteration   7: 210,519 ms/op
Iteration   8: 211,379 ms/op
Iteration   9: 212,288 ms/op
Iteration  10: 212,204 ms/op


Result "benchmarkFind":
  211,031 ±(99.9%) 2,272 ms/op [Average]
  (min, avg, max) = (209,333, 211,031, 214,058), stdev = 1,503
  CI (99.9%): [208,759, 213,303] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 128, patternSize = 256)

# Run progress: 69,07% complete, ETA 04:47:23
# Fork: 1 of 1
# Warmup Iteration   1: 243,112 ms/op
# Warmup Iteration   2: 240,083 ms/op
# Warmup Iteration   3: 241,914 ms/op
# Warmup Iteration   4: 241,406 ms/op
# Warmup Iteration   5: 241,871 ms/op
# Warmup Iteration   6: 240,667 ms/op
# Warmup Iteration   7: 241,484 ms/op
# Warmup Iteration   8: 241,545 ms/op
# Warmup Iteration   9: 245,793 ms/op
# Warmup Iteration  10: 242,476 ms/op
Iteration   1: 245,981 ms/op
Iteration   2: 241,408 ms/op
Iteration   3: 243,201 ms/op
Iteration   4: 242,592 ms/op
Iteration   5: 240,839 ms/op
Iteration   6: 241,416 ms/op
Iteration   7: 239,839 ms/op
Iteration   8: 241,328 ms/op
Iteration   9: 242,539 ms/op
Iteration  10: 241,683 ms/op


Result "benchmarkFind":
  242,083 ±(99.9%) 2,526 ms/op [Average]
  (min, avg, max) = (239,839, 242,083, 245,981), stdev = 1,671
  CI (99.9%): [239,557, 244,609] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 2, patternSize = 2)

# Run progress: 69,12% complete, ETA 04:46:57
# Fork: 1 of 1
# Warmup Iteration   1: 12,660 ms/op
# Warmup Iteration   2: 11,334 ms/op
# Warmup Iteration   3: 11,274 ms/op
# Warmup Iteration   4: 11,193 ms/op
# Warmup Iteration   5: 11,228 ms/op
# Warmup Iteration   6: 11,119 ms/op
# Warmup Iteration   7: 11,178 ms/op
# Warmup Iteration   8: 11,219 ms/op
# Warmup Iteration   9: 11,193 ms/op
# Warmup Iteration  10: 11,200 ms/op
Iteration   1: 11,231 ms/op
Iteration   2: 11,277 ms/op
Iteration   3: 11,256 ms/op
Iteration   4: 11,278 ms/op
Iteration   5: 11,266 ms/op
Iteration   6: 11,221 ms/op
Iteration   7: 11,279 ms/op
Iteration   8: 11,347 ms/op
Iteration   9: 11,294 ms/op
Iteration  10: 11,209 ms/op


Result "benchmarkFind":
  11,266 ±(99.9%) 0,060 ms/op [Average]
  (min, avg, max) = (11,209, 11,266, 11,347), stdev = 0,040
  CI (99.9%): [11,206, 11,326] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 2, patternSize = 4)

# Run progress: 69,16% complete, ETA 04:46:29
# Fork: 1 of 1
# Warmup Iteration   1: 9,177 ms/op
# Warmup Iteration   2: 8,903 ms/op
# Warmup Iteration   3: 8,226 ms/op
# Warmup Iteration   4: 8,260 ms/op
# Warmup Iteration   5: 8,278 ms/op
# Warmup Iteration   6: 8,299 ms/op
# Warmup Iteration   7: 8,284 ms/op
# Warmup Iteration   8: 8,291 ms/op
# Warmup Iteration   9: 8,414 ms/op
# Warmup Iteration  10: 8,322 ms/op
Iteration   1: 8,309 ms/op
Iteration   2: 8,339 ms/op
Iteration   3: 8,325 ms/op
Iteration   4: 8,301 ms/op
Iteration   5: 8,362 ms/op
Iteration   6: 8,357 ms/op
Iteration   7: 8,431 ms/op
Iteration   8: 8,448 ms/op
Iteration   9: 8,465 ms/op
Iteration  10: 8,407 ms/op


Result "benchmarkFind":
  8,374 ±(99.9%) 0,090 ms/op [Average]
  (min, avg, max) = (8,301, 8,374, 8,465), stdev = 0,059
  CI (99.9%): [8,285, 8,464] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 2, patternSize = 8)

# Run progress: 69,21% complete, ETA 04:46:01
# Fork: 1 of 1
# Warmup Iteration   1: 4,788 ms/op
# Warmup Iteration   2: 4,433 ms/op
# Warmup Iteration   3: 4,423 ms/op
# Warmup Iteration   4: 4,465 ms/op
# Warmup Iteration   5: 4,460 ms/op
# Warmup Iteration   6: 4,425 ms/op
# Warmup Iteration   7: 4,435 ms/op
# Warmup Iteration   8: 4,487 ms/op
# Warmup Iteration   9: 4,480 ms/op
# Warmup Iteration  10: 4,493 ms/op
Iteration   1: 4,487 ms/op
Iteration   2: 4,474 ms/op
Iteration   3: 4,508 ms/op
Iteration   4: 4,499 ms/op
Iteration   5: 4,492 ms/op
Iteration   6: 4,493 ms/op
Iteration   7: 4,475 ms/op
Iteration   8: 4,464 ms/op
Iteration   9: 4,480 ms/op
Iteration  10: 4,478 ms/op


Result "benchmarkFind":
  4,485 ±(99.9%) 0,020 ms/op [Average]
  (min, avg, max) = (4,464, 4,485, 4,508), stdev = 0,013
  CI (99.9%): [4,465, 4,505] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 2, patternSize = 16)

# Run progress: 69,26% complete, ETA 04:45:34
# Fork: 1 of 1
# Warmup Iteration   1: 2,708 ms/op
# Warmup Iteration   2: 2,455 ms/op
# Warmup Iteration   3: 2,472 ms/op
# Warmup Iteration   4: 2,480 ms/op
# Warmup Iteration   5: 2,483 ms/op
# Warmup Iteration   6: 2,482 ms/op
# Warmup Iteration   7: 2,492 ms/op
# Warmup Iteration   8: 2,529 ms/op
# Warmup Iteration   9: 2,510 ms/op
# Warmup Iteration  10: 2,500 ms/op
Iteration   1: 2,522 ms/op
Iteration   2: 2,503 ms/op
Iteration   3: 2,525 ms/op
Iteration   4: 2,524 ms/op
Iteration   5: 2,510 ms/op
Iteration   6: 2,518 ms/op
Iteration   7: 2,496 ms/op
Iteration   8: 2,504 ms/op
Iteration   9: 2,504 ms/op
Iteration  10: 2,517 ms/op


Result "benchmarkFind":
  2,512 ±(99.9%) 0,015 ms/op [Average]
  (min, avg, max) = (2,496, 2,512, 2,525), stdev = 0,010
  CI (99.9%): [2,497, 2,528] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 2, patternSize = 32)

# Run progress: 69,30% complete, ETA 04:45:06
# Fork: 1 of 1
# Warmup Iteration   1: 1,714 ms/op
# Warmup Iteration   2: 1,567 ms/op
# Warmup Iteration   3: 1,570 ms/op
# Warmup Iteration   4: 1,577 ms/op
# Warmup Iteration   5: 1,571 ms/op
# Warmup Iteration   6: 1,571 ms/op
# Warmup Iteration   7: 1,590 ms/op
# Warmup Iteration   8: 1,582 ms/op
# Warmup Iteration   9: 1,609 ms/op
# Warmup Iteration  10: 1,561 ms/op
Iteration   1: 1,575 ms/op
Iteration   2: 1,579 ms/op
Iteration   3: 1,578 ms/op
Iteration   4: 1,588 ms/op
Iteration   5: 1,583 ms/op
Iteration   6: 1,590 ms/op
Iteration   7: 1,579 ms/op
Iteration   8: 1,594 ms/op
Iteration   9: 1,585 ms/op
Iteration  10: 1,578 ms/op


Result "benchmarkFind":
  1,583 ±(99.9%) 0,009 ms/op [Average]
  (min, avg, max) = (1,575, 1,583, 1,594), stdev = 0,006
  CI (99.9%): [1,574, 1,592] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 2, patternSize = 64)

# Run progress: 69,35% complete, ETA 04:44:38
# Fork: 1 of 1
# Warmup Iteration   1: 1,200 ms/op
# Warmup Iteration   2: 1,127 ms/op
# Warmup Iteration   3: 1,088 ms/op
# Warmup Iteration   4: 1,091 ms/op
# Warmup Iteration   5: 1,090 ms/op
# Warmup Iteration   6: 1,101 ms/op
# Warmup Iteration   7: 1,099 ms/op
# Warmup Iteration   8: 1,092 ms/op
# Warmup Iteration   9: 1,102 ms/op
# Warmup Iteration  10: 1,106 ms/op
Iteration   1: 1,108 ms/op
Iteration   2: 1,098 ms/op
Iteration   3: 1,100 ms/op
Iteration   4: 1,107 ms/op
Iteration   5: 1,101 ms/op
Iteration   6: 1,101 ms/op
Iteration   7: 1,095 ms/op
Iteration   8: 1,096 ms/op
Iteration   9: 1,102 ms/op
Iteration  10: 1,099 ms/op


Result "benchmarkFind":
  1,101 ±(99.9%) 0,007 ms/op [Average]
  (min, avg, max) = (1,095, 1,101, 1,108), stdev = 0,004
  CI (99.9%): [1,094, 1,107] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 2, patternSize = 128)

# Run progress: 69,39% complete, ETA 04:44:10
# Fork: 1 of 1
# Warmup Iteration   1: 0,821 ms/op
# Warmup Iteration   2: 0,748 ms/op
# Warmup Iteration   3: 0,751 ms/op
# Warmup Iteration   4: 0,751 ms/op
# Warmup Iteration   5: 0,745 ms/op
# Warmup Iteration   6: 0,746 ms/op
# Warmup Iteration   7: 0,750 ms/op
# Warmup Iteration   8: 0,748 ms/op
# Warmup Iteration   9: 0,755 ms/op
# Warmup Iteration  10: 0,751 ms/op
Iteration   1: 0,759 ms/op
Iteration   2: 0,754 ms/op
Iteration   3: 0,753 ms/op
Iteration   4: 0,754 ms/op
Iteration   5: 0,752 ms/op
Iteration   6: 0,759 ms/op
Iteration   7: 0,757 ms/op
Iteration   8: 0,757 ms/op
Iteration   9: 0,844 ms/op
Iteration  10: 0,740 ms/op


Result "benchmarkFind":
  0,763 ±(99.9%) 0,044 ms/op [Average]
  (min, avg, max) = (0,740, 0,763, 0,844), stdev = 0,029
  CI (99.9%): [0,719, 0,807] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 2, patternSize = 256)

# Run progress: 69,44% complete, ETA 04:43:42
# Fork: 1 of 1
# Warmup Iteration   1: 0,627 ms/op
# Warmup Iteration   2: 0,564 ms/op
# Warmup Iteration   3: 0,565 ms/op
# Warmup Iteration   4: 0,578 ms/op
# Warmup Iteration   5: 0,570 ms/op
# Warmup Iteration   6: 0,572 ms/op
# Warmup Iteration   7: 0,579 ms/op
# Warmup Iteration   8: 0,576 ms/op
# Warmup Iteration   9: 0,584 ms/op
# Warmup Iteration  10: 0,586 ms/op
Iteration   1: 0,584 ms/op
Iteration   2: 0,580 ms/op
Iteration   3: 0,589 ms/op
Iteration   4: 0,583 ms/op
Iteration   5: 0,586 ms/op
Iteration   6: 0,584 ms/op
Iteration   7: 0,586 ms/op
Iteration   8: 0,567 ms/op
Iteration   9: 0,562 ms/op
Iteration  10: 0,568 ms/op


Result "benchmarkFind":
  0,579 ±(99.9%) 0,015 ms/op [Average]
  (min, avg, max) = (0,562, 0,579, 0,589), stdev = 0,010
  CI (99.9%): [0,564, 0,593] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 8, patternSize = 2)

# Run progress: 69,49% complete, ETA 04:43:14
# Fork: 1 of 1
# Warmup Iteration   1: 18,398 ms/op
# Warmup Iteration   2: 16,599 ms/op
# Warmup Iteration   3: 16,257 ms/op
# Warmup Iteration   4: 16,375 ms/op
# Warmup Iteration   5: 16,247 ms/op
# Warmup Iteration   6: 16,338 ms/op
# Warmup Iteration   7: 16,509 ms/op
# Warmup Iteration   8: 16,351 ms/op
# Warmup Iteration   9: 16,368 ms/op
# Warmup Iteration  10: 16,341 ms/op
Iteration   1: 16,420 ms/op
Iteration   2: 16,564 ms/op
Iteration   3: 16,473 ms/op
Iteration   4: 16,462 ms/op
Iteration   5: 16,370 ms/op
Iteration   6: 16,483 ms/op
Iteration   7: 16,499 ms/op
Iteration   8: 16,521 ms/op
Iteration   9: 16,558 ms/op
Iteration  10: 16,682 ms/op


Result "benchmarkFind":
  16,503 ±(99.9%) 0,130 ms/op [Average]
  (min, avg, max) = (16,370, 16,503, 16,682), stdev = 0,086
  CI (99.9%): [16,373, 16,633] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 8, patternSize = 4)

# Run progress: 69,53% complete, ETA 04:42:47
# Fork: 1 of 1
# Warmup Iteration   1: 11,004 ms/op
# Warmup Iteration   2: 10,133 ms/op
# Warmup Iteration   3: 9,989 ms/op
# Warmup Iteration   4: 9,906 ms/op
# Warmup Iteration   5: 10,008 ms/op
# Warmup Iteration   6: 10,064 ms/op
# Warmup Iteration   7: 9,979 ms/op
# Warmup Iteration   8: 9,956 ms/op
# Warmup Iteration   9: 9,994 ms/op
# Warmup Iteration  10: 10,103 ms/op
Iteration   1: 10,064 ms/op
Iteration   2: 10,131 ms/op
Iteration   3: 10,034 ms/op
Iteration   4: 10,060 ms/op
Iteration   5: 10,117 ms/op
Iteration   6: 10,142 ms/op
Iteration   7: 10,964 ms/op
Iteration   8: 9,873 ms/op
Iteration   9: 9,834 ms/op
Iteration  10: 9,859 ms/op


Result "benchmarkFind":
  10,108 ±(99.9%) 0,488 ms/op [Average]
  (min, avg, max) = (9,834, 10,108, 10,964), stdev = 0,323
  CI (99.9%): [9,620, 10,596] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 8, patternSize = 8)

# Run progress: 69,58% complete, ETA 04:42:19
# Fork: 1 of 1
# Warmup Iteration   1: 7,059 ms/op
# Warmup Iteration   2: 6,627 ms/op
# Warmup Iteration   3: 6,550 ms/op
# Warmup Iteration   4: 6,527 ms/op
# Warmup Iteration   5: 6,525 ms/op
# Warmup Iteration   6: 6,572 ms/op
# Warmup Iteration   7: 6,556 ms/op
# Warmup Iteration   8: 6,553 ms/op
# Warmup Iteration   9: 6,605 ms/op
# Warmup Iteration  10: 6,570 ms/op
Iteration   1: 6,629 ms/op
Iteration   2: 6,612 ms/op
Iteration   3: 6,563 ms/op
Iteration   4: 6,590 ms/op
Iteration   5: 6,629 ms/op
Iteration   6: 6,579 ms/op
Iteration   7: 6,595 ms/op
Iteration   8: 6,592 ms/op
Iteration   9: 6,618 ms/op
Iteration  10: 6,588 ms/op


Result "benchmarkFind":
  6,600 ±(99.9%) 0,033 ms/op [Average]
  (min, avg, max) = (6,563, 6,600, 6,629), stdev = 0,022
  CI (99.9%): [6,567, 6,632] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 8, patternSize = 16)

# Run progress: 69,62% complete, ETA 04:41:51
# Fork: 1 of 1
# Warmup Iteration   1: 4,917 ms/op
# Warmup Iteration   2: 4,538 ms/op
# Warmup Iteration   3: 4,504 ms/op
# Warmup Iteration   4: 4,554 ms/op
# Warmup Iteration   5: 4,559 ms/op
# Warmup Iteration   6: 4,529 ms/op
# Warmup Iteration   7: 4,555 ms/op
# Warmup Iteration   8: 4,503 ms/op
# Warmup Iteration   9: 4,576 ms/op
# Warmup Iteration  10: 4,579 ms/op
Iteration   1: 4,551 ms/op
Iteration   2: 4,555 ms/op
Iteration   3: 4,557 ms/op
Iteration   4: 4,529 ms/op
Iteration   5: 4,617 ms/op
Iteration   6: 4,512 ms/op
Iteration   7: 4,505 ms/op
Iteration   8: 4,516 ms/op
Iteration   9: 4,533 ms/op
Iteration  10: 4,580 ms/op


Result "benchmarkFind":
  4,545 ±(99.9%) 0,052 ms/op [Average]
  (min, avg, max) = (4,505, 4,545, 4,617), stdev = 0,034
  CI (99.9%): [4,493, 4,598] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 8, patternSize = 32)

# Run progress: 69,67% complete, ETA 04:41:23
# Fork: 1 of 1
# Warmup Iteration   1: 3,902 ms/op
# Warmup Iteration   2: 3,544 ms/op
# Warmup Iteration   3: 3,567 ms/op
# Warmup Iteration   4: 3,536 ms/op
# Warmup Iteration   5: 3,539 ms/op
# Warmup Iteration   6: 3,546 ms/op
# Warmup Iteration   7: 3,552 ms/op
# Warmup Iteration   8: 3,549 ms/op
# Warmup Iteration   9: 3,583 ms/op
# Warmup Iteration  10: 3,594 ms/op
Iteration   1: 3,581 ms/op
Iteration   2: 3,595 ms/op
Iteration   3: 3,587 ms/op
Iteration   4: 3,582 ms/op
Iteration   5: 3,858 ms/op
Iteration   6: 3,631 ms/op
Iteration   7: 3,530 ms/op
Iteration   8: 3,527 ms/op
Iteration   9: 3,651 ms/op
Iteration  10: 3,547 ms/op


Result "benchmarkFind":
  3,609 ±(99.9%) 0,146 ms/op [Average]
  (min, avg, max) = (3,527, 3,609, 3,858), stdev = 0,096
  CI (99.9%): [3,463, 3,754] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 8, patternSize = 64)

# Run progress: 69,72% complete, ETA 04:40:56
# Fork: 1 of 1
# Warmup Iteration   1: 3,851 ms/op
# Warmup Iteration   2: 3,552 ms/op
# Warmup Iteration   3: 3,533 ms/op
# Warmup Iteration   4: 3,525 ms/op
# Warmup Iteration   5: 3,529 ms/op
# Warmup Iteration   6: 3,540 ms/op
# Warmup Iteration   7: 3,546 ms/op
# Warmup Iteration   8: 3,545 ms/op
# Warmup Iteration   9: 3,586 ms/op
# Warmup Iteration  10: 3,572 ms/op
Iteration   1: 3,567 ms/op
Iteration   2: 3,584 ms/op
Iteration   3: 3,573 ms/op
Iteration   4: 3,565 ms/op
Iteration   5: 3,563 ms/op
Iteration   6: 3,566 ms/op
Iteration   7: 3,554 ms/op
Iteration   8: 3,583 ms/op
Iteration   9: 3,552 ms/op
Iteration  10: 3,554 ms/op


Result "benchmarkFind":
  3,566 ±(99.9%) 0,017 ms/op [Average]
  (min, avg, max) = (3,552, 3,566, 3,584), stdev = 0,011
  CI (99.9%): [3,549, 3,583] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 8, patternSize = 128)

# Run progress: 69,76% complete, ETA 04:40:28
# Fork: 1 of 1
# Warmup Iteration   1: 3,002 ms/op
# Warmup Iteration   2: 2,710 ms/op
# Warmup Iteration   3: 2,707 ms/op
# Warmup Iteration   4: 2,702 ms/op
# Warmup Iteration   5: 2,677 ms/op
# Warmup Iteration   6: 2,686 ms/op
# Warmup Iteration   7: 2,690 ms/op
# Warmup Iteration   8: 2,701 ms/op
# Warmup Iteration   9: 2,722 ms/op
# Warmup Iteration  10: 2,734 ms/op
Iteration   1: 2,731 ms/op
Iteration   2: 2,826 ms/op
Iteration   3: 2,755 ms/op
Iteration   4: 2,708 ms/op
Iteration   5: 2,730 ms/op
Iteration   6: 2,717 ms/op
Iteration   7: 2,747 ms/op
Iteration   8: 2,711 ms/op
Iteration   9: 2,731 ms/op
Iteration  10: 2,723 ms/op


Result "benchmarkFind":
  2,738 ±(99.9%) 0,052 ms/op [Average]
  (min, avg, max) = (2,708, 2,738, 2,826), stdev = 0,034
  CI (99.9%): [2,686, 2,790] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 8, patternSize = 256)

# Run progress: 69,81% complete, ETA 04:40:00
# Fork: 1 of 1
# Warmup Iteration   1: 3,596 ms/op
# Warmup Iteration   2: 3,396 ms/op
# Warmup Iteration   3: 3,252 ms/op
# Warmup Iteration   4: 3,270 ms/op
# Warmup Iteration   5: 3,289 ms/op
# Warmup Iteration   6: 3,279 ms/op
# Warmup Iteration   7: 3,274 ms/op
# Warmup Iteration   8: 3,272 ms/op
# Warmup Iteration   9: 3,254 ms/op
# Warmup Iteration  10: 3,257 ms/op
Iteration   1: 3,292 ms/op
Iteration   2: 3,275 ms/op
Iteration   3: 3,239 ms/op
Iteration   4: 3,425 ms/op
Iteration   5: 3,240 ms/op
Iteration   6: 3,268 ms/op
Iteration   7: 3,257 ms/op
Iteration   8: 3,281 ms/op
Iteration   9: 3,281 ms/op
Iteration  10: 3,276 ms/op


Result "benchmarkFind":
  3,283 ±(99.9%) 0,080 ms/op [Average]
  (min, avg, max) = (3,239, 3,283, 3,425), stdev = 0,053
  CI (99.9%): [3,203, 3,363] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 32, patternSize = 2)

# Run progress: 69,85% complete, ETA 04:39:32
# Fork: 1 of 1
# Warmup Iteration   1: 58,246 ms/op
# Warmup Iteration   2: 51,939 ms/op
# Warmup Iteration   3: 51,706 ms/op
# Warmup Iteration   4: 51,773 ms/op
# Warmup Iteration   5: 51,927 ms/op
# Warmup Iteration   6: 51,890 ms/op
# Warmup Iteration   7: 51,939 ms/op
# Warmup Iteration   8: 52,417 ms/op
# Warmup Iteration   9: 51,801 ms/op
# Warmup Iteration  10: 51,774 ms/op
Iteration   1: 52,173 ms/op
Iteration   2: 51,985 ms/op
Iteration   3: 52,146 ms/op
Iteration   4: 51,666 ms/op
Iteration   5: 51,809 ms/op
Iteration   6: 52,212 ms/op
Iteration   7: 52,150 ms/op
Iteration   8: 51,931 ms/op
Iteration   9: 51,497 ms/op
Iteration  10: 51,850 ms/op


Result "benchmarkFind":
  51,942 ±(99.9%) 0,361 ms/op [Average]
  (min, avg, max) = (51,497, 51,942, 52,212), stdev = 0,239
  CI (99.9%): [51,581, 52,303] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 32, patternSize = 4)

# Run progress: 69,90% complete, ETA 04:39:05
# Fork: 1 of 1
# Warmup Iteration   1: 16,488 ms/op
# Warmup Iteration   2: 15,076 ms/op
# Warmup Iteration   3: 14,856 ms/op
# Warmup Iteration   4: 14,848 ms/op
# Warmup Iteration   5: 14,845 ms/op
# Warmup Iteration   6: 14,931 ms/op
# Warmup Iteration   7: 14,951 ms/op
# Warmup Iteration   8: 14,978 ms/op
# Warmup Iteration   9: 14,936 ms/op
# Warmup Iteration  10: 15,087 ms/op
Iteration   1: 15,091 ms/op
Iteration   2: 14,899 ms/op
Iteration   3: 15,052 ms/op
Iteration   4: 14,988 ms/op
Iteration   5: 15,106 ms/op
Iteration   6: 15,044 ms/op
Iteration   7: 15,040 ms/op
Iteration   8: 15,057 ms/op
Iteration   9: 15,035 ms/op
Iteration  10: 15,157 ms/op


Result "benchmarkFind":
  15,047 ±(99.9%) 0,105 ms/op [Average]
  (min, avg, max) = (14,899, 15,047, 15,157), stdev = 0,069
  CI (99.9%): [14,942, 15,152] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 32, patternSize = 8)

# Run progress: 69,94% complete, ETA 04:38:37
# Fork: 1 of 1
# Warmup Iteration   1: 13,307 ms/op
# Warmup Iteration   2: 12,144 ms/op
# Warmup Iteration   3: 12,209 ms/op
# Warmup Iteration   4: 12,279 ms/op
# Warmup Iteration   5: 12,181 ms/op
# Warmup Iteration   6: 12,178 ms/op
# Warmup Iteration   7: 12,233 ms/op
# Warmup Iteration   8: 12,211 ms/op
# Warmup Iteration   9: 12,324 ms/op
# Warmup Iteration  10: 12,299 ms/op
Iteration   1: 13,962 ms/op
Iteration   2: 12,266 ms/op
Iteration   3: 12,240 ms/op
Iteration   4: 12,243 ms/op
Iteration   5: 12,190 ms/op
Iteration   6: 12,225 ms/op
Iteration   7: 12,203 ms/op
Iteration   8: 12,272 ms/op
Iteration   9: 12,280 ms/op
Iteration  10: 12,460 ms/op


Result "benchmarkFind":
  12,434 ±(99.9%) 0,819 ms/op [Average]
  (min, avg, max) = (12,190, 12,434, 13,962), stdev = 0,542
  CI (99.9%): [11,615, 13,253] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 32, patternSize = 16)

# Run progress: 69,99% complete, ETA 04:38:10
# Fork: 1 of 1
# Warmup Iteration   1: 14,065 ms/op
# Warmup Iteration   2: 12,687 ms/op
# Warmup Iteration   3: 12,699 ms/op
# Warmup Iteration   4: 12,748 ms/op
# Warmup Iteration   5: 12,817 ms/op
# Warmup Iteration   6: 12,698 ms/op
# Warmup Iteration   7: 12,713 ms/op
# Warmup Iteration   8: 12,789 ms/op
# Warmup Iteration   9: 12,716 ms/op
# Warmup Iteration  10: 12,759 ms/op
Iteration   1: 13,155 ms/op
Iteration   2: 12,614 ms/op
Iteration   3: 12,691 ms/op
Iteration   4: 12,814 ms/op
Iteration   5: 12,650 ms/op
Iteration   6: 12,685 ms/op
Iteration   7: 12,803 ms/op
Iteration   8: 12,727 ms/op
Iteration   9: 12,818 ms/op
Iteration  10: 12,769 ms/op


Result "benchmarkFind":
  12,773 ±(99.9%) 0,230 ms/op [Average]
  (min, avg, max) = (12,614, 12,773, 13,155), stdev = 0,152
  CI (99.9%): [12,543, 13,002] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 32, patternSize = 32)

# Run progress: 70,04% complete, ETA 04:37:42
# Fork: 1 of 1
# Warmup Iteration   1: 14,409 ms/op
# Warmup Iteration   2: 12,984 ms/op
# Warmup Iteration   3: 13,130 ms/op
# Warmup Iteration   4: 13,185 ms/op
# Warmup Iteration   5: 13,062 ms/op
# Warmup Iteration   6: 13,092 ms/op
# Warmup Iteration   7: 13,015 ms/op
# Warmup Iteration   8: 13,142 ms/op
# Warmup Iteration   9: 13,090 ms/op
# Warmup Iteration  10: 13,152 ms/op
Iteration   1: 13,117 ms/op
Iteration   2: 13,201 ms/op
Iteration   3: 13,302 ms/op
Iteration   4: 13,144 ms/op
Iteration   5: 13,099 ms/op
Iteration   6: 12,851 ms/op
Iteration   7: 12,830 ms/op
Iteration   8: 12,965 ms/op
Iteration   9: 12,901 ms/op
Iteration  10: 12,814 ms/op


Result "benchmarkFind":
  13,022 ±(99.9%) 0,261 ms/op [Average]
  (min, avg, max) = (12,814, 13,022, 13,302), stdev = 0,172
  CI (99.9%): [12,762, 13,283] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 32, patternSize = 64)

# Run progress: 70,08% complete, ETA 04:37:14
# Fork: 1 of 1
# Warmup Iteration   1: 12,579 ms/op
# Warmup Iteration   2: 11,525 ms/op
# Warmup Iteration   3: 11,372 ms/op
# Warmup Iteration   4: 11,437 ms/op
# Warmup Iteration   5: 11,390 ms/op
# Warmup Iteration   6: 11,454 ms/op
# Warmup Iteration   7: 11,522 ms/op
# Warmup Iteration   8: 11,542 ms/op
# Warmup Iteration   9: 12,857 ms/op
# Warmup Iteration  10: 11,469 ms/op
Iteration   1: 11,376 ms/op
Iteration   2: 11,375 ms/op
Iteration   3: 11,378 ms/op
Iteration   4: 11,368 ms/op
Iteration   5: 11,429 ms/op
Iteration   6: 11,485 ms/op
Iteration   7: 11,468 ms/op
Iteration   8: 11,615 ms/op
Iteration   9: 11,593 ms/op
Iteration  10: 11,593 ms/op


Result "benchmarkFind":
  11,468 ±(99.9%) 0,151 ms/op [Average]
  (min, avg, max) = (11,368, 11,468, 11,615), stdev = 0,100
  CI (99.9%): [11,317, 11,619] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 32, patternSize = 128)

# Run progress: 70,13% complete, ETA 04:36:47
# Fork: 1 of 1
# Warmup Iteration   1: 12,776 ms/op
# Warmup Iteration   2: 11,928 ms/op
# Warmup Iteration   3: 11,447 ms/op
# Warmup Iteration   4: 11,410 ms/op
# Warmup Iteration   5: 11,386 ms/op
# Warmup Iteration   6: 11,408 ms/op
# Warmup Iteration   7: 11,406 ms/op
# Warmup Iteration   8: 11,375 ms/op
# Warmup Iteration   9: 11,550 ms/op
# Warmup Iteration  10: 11,514 ms/op
Iteration   1: 11,418 ms/op
Iteration   2: 11,384 ms/op
Iteration   3: 11,517 ms/op
Iteration   4: 11,381 ms/op
Iteration   5: 11,436 ms/op
Iteration   6: 11,529 ms/op
Iteration   7: 11,603 ms/op
Iteration   8: 11,613 ms/op
Iteration   9: 11,548 ms/op
Iteration  10: 11,592 ms/op


Result "benchmarkFind":
  11,502 ±(99.9%) 0,137 ms/op [Average]
  (min, avg, max) = (11,381, 11,502, 11,613), stdev = 0,090
  CI (99.9%): [11,365, 11,639] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 32, patternSize = 256)

# Run progress: 70,17% complete, ETA 04:36:19
# Fork: 1 of 1
# Warmup Iteration   1: 14,333 ms/op
# Warmup Iteration   2: 12,909 ms/op
# Warmup Iteration   3: 12,872 ms/op
# Warmup Iteration   4: 12,632 ms/op
# Warmup Iteration   5: 12,748 ms/op
# Warmup Iteration   6: 12,591 ms/op
# Warmup Iteration   7: 12,533 ms/op
# Warmup Iteration   8: 12,623 ms/op
# Warmup Iteration   9: 12,520 ms/op
# Warmup Iteration  10: 12,554 ms/op
Iteration   1: 12,622 ms/op
Iteration   2: 12,556 ms/op
Iteration   3: 12,561 ms/op
Iteration   4: 12,576 ms/op
Iteration   5: 12,614 ms/op
Iteration   6: 12,682 ms/op
Iteration   7: 12,586 ms/op
Iteration   8: 12,704 ms/op
Iteration   9: 12,800 ms/op
Iteration  10: 12,828 ms/op


Result "benchmarkFind":
  12,653 ±(99.9%) 0,148 ms/op [Average]
  (min, avg, max) = (12,556, 12,653, 12,828), stdev = 0,098
  CI (99.9%): [12,505, 12,801] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 128, patternSize = 2)

# Run progress: 70,22% complete, ETA 04:35:51
# Fork: 1 of 1
# Warmup Iteration   1: 520,472 ms/op
# Warmup Iteration   2: 462,956 ms/op
# Warmup Iteration   3: 462,640 ms/op
# Warmup Iteration   4: 459,210 ms/op
# Warmup Iteration   5: 459,302 ms/op
# Warmup Iteration   6: 477,525 ms/op
# Warmup Iteration   7: 457,380 ms/op
# Warmup Iteration   8: 463,358 ms/op
# Warmup Iteration   9: 463,136 ms/op
# Warmup Iteration  10: 459,052 ms/op
Iteration   1: 458,405 ms/op
Iteration   2: 460,945 ms/op
Iteration   3: 462,220 ms/op
Iteration   4: 459,402 ms/op
Iteration   5: 461,914 ms/op
Iteration   6: 460,432 ms/op
Iteration   7: 459,722 ms/op
Iteration   8: 456,577 ms/op
Iteration   9: 461,950 ms/op
Iteration  10: 461,236 ms/op


Result "benchmarkFind":
  460,280 ±(99.9%) 2,710 ms/op [Average]
  (min, avg, max) = (456,577, 460,280, 462,220), stdev = 1,792
  CI (99.9%): [457,570, 462,990] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 128, patternSize = 4)

# Run progress: 70,27% complete, ETA 04:35:27
# Fork: 1 of 1
# Warmup Iteration   1: 29,626 ms/op
# Warmup Iteration   2: 27,140 ms/op
# Warmup Iteration   3: 26,402 ms/op
# Warmup Iteration   4: 26,319 ms/op
# Warmup Iteration   5: 26,423 ms/op
# Warmup Iteration   6: 26,114 ms/op
# Warmup Iteration   7: 26,713 ms/op
# Warmup Iteration   8: 26,238 ms/op
# Warmup Iteration   9: 26,631 ms/op
# Warmup Iteration  10: 26,387 ms/op
Iteration   1: 26,428 ms/op
Iteration   2: 26,527 ms/op
Iteration   3: 26,517 ms/op
Iteration   4: 26,791 ms/op
Iteration   5: 26,870 ms/op
Iteration   6: 26,947 ms/op
Iteration   7: 26,908 ms/op
Iteration   8: 26,865 ms/op
Iteration   9: 26,967 ms/op
Iteration  10: 26,894 ms/op


Result "benchmarkFind":
  26,771 ±(99.9%) 0,304 ms/op [Average]
  (min, avg, max) = (26,428, 26,771, 26,967), stdev = 0,201
  CI (99.9%): [26,467, 27,075] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 128, patternSize = 8)

# Run progress: 70,31% complete, ETA 04:34:59
# Fork: 1 of 1
# Warmup Iteration   1: 28,811 ms/op
# Warmup Iteration   2: 26,311 ms/op
# Warmup Iteration   3: 26,083 ms/op
# Warmup Iteration   4: 26,161 ms/op
# Warmup Iteration   5: 26,083 ms/op
# Warmup Iteration   6: 26,155 ms/op
# Warmup Iteration   7: 26,015 ms/op
# Warmup Iteration   8: 26,201 ms/op
# Warmup Iteration   9: 26,279 ms/op
# Warmup Iteration  10: 26,382 ms/op
Iteration   1: 26,484 ms/op
Iteration   2: 26,537 ms/op
Iteration   3: 26,574 ms/op
Iteration   4: 26,341 ms/op
Iteration   5: 26,505 ms/op
Iteration   6: 26,412 ms/op
Iteration   7: 26,465 ms/op
Iteration   8: 29,822 ms/op
Iteration   9: 26,105 ms/op
Iteration  10: 26,094 ms/op


Result "benchmarkFind":
  26,734 ±(99.9%) 1,660 ms/op [Average]
  (min, avg, max) = (26,094, 26,734, 29,822), stdev = 1,098
  CI (99.9%): [25,074, 28,394] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 128, patternSize = 16)

# Run progress: 70,36% complete, ETA 04:34:32
# Fork: 1 of 1
# Warmup Iteration   1: 30,415 ms/op
# Warmup Iteration   2: 26,740 ms/op
# Warmup Iteration   3: 26,874 ms/op
# Warmup Iteration   4: 26,729 ms/op
# Warmup Iteration   5: 26,912 ms/op
# Warmup Iteration   6: 27,278 ms/op
# Warmup Iteration   7: 27,424 ms/op
# Warmup Iteration   8: 27,107 ms/op
# Warmup Iteration   9: 27,226 ms/op
# Warmup Iteration  10: 27,379 ms/op
Iteration   1: 27,254 ms/op
Iteration   2: 27,354 ms/op
Iteration   3: 27,335 ms/op
Iteration   4: 27,400 ms/op
Iteration   5: 27,429 ms/op
Iteration   6: 27,523 ms/op
Iteration   7: 27,600 ms/op
Iteration   8: 27,313 ms/op
Iteration   9: 27,421 ms/op
Iteration  10: 27,469 ms/op


Result "benchmarkFind":
  27,410 ±(99.9%) 0,156 ms/op [Average]
  (min, avg, max) = (27,254, 27,410, 27,600), stdev = 0,103
  CI (99.9%): [27,254, 27,565] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 128, patternSize = 32)

# Run progress: 70,40% complete, ETA 04:34:04
# Fork: 1 of 1
# Warmup Iteration   1: 31,984 ms/op
# Warmup Iteration   2: 29,351 ms/op
# Warmup Iteration   3: 28,804 ms/op
# Warmup Iteration   4: 28,584 ms/op
# Warmup Iteration   5: 28,684 ms/op
# Warmup Iteration   6: 28,672 ms/op
# Warmup Iteration   7: 28,699 ms/op
# Warmup Iteration   8: 28,736 ms/op
# Warmup Iteration   9: 28,582 ms/op
# Warmup Iteration  10: 28,694 ms/op
Iteration   1: 28,605 ms/op
Iteration   2: 28,910 ms/op
Iteration   3: 28,961 ms/op
Iteration   4: 29,179 ms/op
Iteration   5: 28,979 ms/op
Iteration   6: 29,250 ms/op
Iteration   7: 29,164 ms/op
Iteration   8: 29,231 ms/op
Iteration   9: 28,973 ms/op
Iteration  10: 29,362 ms/op


Result "benchmarkFind":
  29,062 ±(99.9%) 0,333 ms/op [Average]
  (min, avg, max) = (28,605, 29,062, 29,362), stdev = 0,220
  CI (99.9%): [28,729, 29,394] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 128, patternSize = 64)

# Run progress: 70,45% complete, ETA 04:33:37
# Fork: 1 of 1
# Warmup Iteration   1: 29,327 ms/op
# Warmup Iteration   2: 26,266 ms/op
# Warmup Iteration   3: 26,153 ms/op
# Warmup Iteration   4: 25,361 ms/op
# Warmup Iteration   5: 25,637 ms/op
# Warmup Iteration   6: 25,561 ms/op
# Warmup Iteration   7: 25,713 ms/op
# Warmup Iteration   8: 25,506 ms/op
# Warmup Iteration   9: 25,444 ms/op
# Warmup Iteration  10: 25,602 ms/op
Iteration   1: 25,646 ms/op
Iteration   2: 25,576 ms/op
Iteration   3: 25,651 ms/op
Iteration   4: 25,735 ms/op
Iteration   5: 25,786 ms/op
Iteration   6: 28,370 ms/op
Iteration   7: 25,554 ms/op
Iteration   8: 25,760 ms/op
Iteration   9: 25,724 ms/op
Iteration  10: 25,926 ms/op


Result "benchmarkFind":
  25,973 ±(99.9%) 1,284 ms/op [Average]
  (min, avg, max) = (25,554, 25,973, 28,370), stdev = 0,849
  CI (99.9%): [24,689, 27,257] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 128, patternSize = 128)

# Run progress: 70,50% complete, ETA 04:33:09
# Fork: 1 of 1
# Warmup Iteration   1: 31,043 ms/op
# Warmup Iteration   2: 28,441 ms/op
# Warmup Iteration   3: 28,144 ms/op
# Warmup Iteration   4: 27,754 ms/op
# Warmup Iteration   5: 27,734 ms/op
# Warmup Iteration   6: 27,631 ms/op
# Warmup Iteration   7: 27,683 ms/op
# Warmup Iteration   8: 27,818 ms/op
# Warmup Iteration   9: 27,935 ms/op
# Warmup Iteration  10: 27,838 ms/op
Iteration   1: 27,914 ms/op
Iteration   2: 28,274 ms/op
Iteration   3: 27,961 ms/op
Iteration   4: 28,228 ms/op
Iteration   5: 28,062 ms/op
Iteration   6: 28,363 ms/op
Iteration   7: 28,367 ms/op
Iteration   8: 28,501 ms/op
Iteration   9: 28,572 ms/op
Iteration  10: 28,663 ms/op


Result "benchmarkFind":
  28,290 ±(99.9%) 0,384 ms/op [Average]
  (min, avg, max) = (27,914, 28,290, 28,663), stdev = 0,254
  CI (99.9%): [27,907, 28,674] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 128, patternSize = 256)

# Run progress: 70,54% complete, ETA 04:32:42
# Fork: 1 of 1
# Warmup Iteration   1: 31,493 ms/op
# Warmup Iteration   2: 28,698 ms/op
# Warmup Iteration   3: 28,657 ms/op
# Warmup Iteration   4: 28,648 ms/op
# Warmup Iteration   5: 28,411 ms/op
# Warmup Iteration   6: 28,547 ms/op
# Warmup Iteration   7: 28,445 ms/op
# Warmup Iteration   8: 28,098 ms/op
# Warmup Iteration   9: 28,129 ms/op
# Warmup Iteration  10: 28,024 ms/op
Iteration   1: 28,127 ms/op
Iteration   2: 27,883 ms/op
Iteration   3: 28,126 ms/op
Iteration   4: 28,320 ms/op
Iteration   5: 28,266 ms/op
Iteration   6: 28,539 ms/op
Iteration   7: 28,738 ms/op
Iteration   8: 28,599 ms/op
Iteration   9: 28,486 ms/op
Iteration  10: 28,650 ms/op


Result "benchmarkFind":
  28,374 ±(99.9%) 0,415 ms/op [Average]
  (min, avg, max) = (27,883, 28,374, 28,738), stdev = 0,274
  CI (99.9%): [27,959, 28,788] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 2, patternSize = 2)

# Run progress: 70,59% complete, ETA 04:32:14
# Fork: 1 of 1
# Warmup Iteration   1: 45,473 ms/op
# Warmup Iteration   2: 41,328 ms/op
# Warmup Iteration   3: 40,846 ms/op
# Warmup Iteration   4: 41,465 ms/op
# Warmup Iteration   5: 41,022 ms/op
# Warmup Iteration   6: 41,228 ms/op
# Warmup Iteration   7: 41,161 ms/op
# Warmup Iteration   8: 41,857 ms/op
# Warmup Iteration   9: 41,208 ms/op
# Warmup Iteration  10: 41,535 ms/op
Iteration   1: 42,018 ms/op
Iteration   2: 41,605 ms/op
Iteration   3: 46,197 ms/op
Iteration   4: 40,621 ms/op
Iteration   5: 40,747 ms/op
Iteration   6: 40,735 ms/op
Iteration   7: 40,894 ms/op
Iteration   8: 40,966 ms/op
Iteration   9: 40,984 ms/op
Iteration  10: 41,087 ms/op


Result "benchmarkFind":
  41,585 ±(99.9%) 2,534 ms/op [Average]
  (min, avg, max) = (40,621, 41,585, 46,197), stdev = 1,676
  CI (99.9%): [39,052, 44,119] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 2, patternSize = 4)

# Run progress: 70,63% complete, ETA 04:31:47
# Fork: 1 of 1
# Warmup Iteration   1: 27,340 ms/op
# Warmup Iteration   2: 23,544 ms/op
# Warmup Iteration   3: 23,649 ms/op
# Warmup Iteration   4: 23,915 ms/op
# Warmup Iteration   5: 23,578 ms/op
# Warmup Iteration   6: 23,791 ms/op
# Warmup Iteration   7: 23,981 ms/op
# Warmup Iteration   8: 23,758 ms/op
# Warmup Iteration   9: 23,784 ms/op
# Warmup Iteration  10: 23,838 ms/op
Iteration   1: 23,742 ms/op
Iteration   2: 23,769 ms/op
Iteration   3: 23,902 ms/op
Iteration   4: 23,589 ms/op
Iteration   5: 23,681 ms/op
Iteration   6: 23,781 ms/op
Iteration   7: 23,870 ms/op
Iteration   8: 23,777 ms/op
Iteration   9: 23,910 ms/op
Iteration  10: 23,731 ms/op


Result "benchmarkFind":
  23,775 ±(99.9%) 0,151 ms/op [Average]
  (min, avg, max) = (23,589, 23,775, 23,910), stdev = 0,100
  CI (99.9%): [23,624, 23,926] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 2, patternSize = 8)

# Run progress: 70,68% complete, ETA 04:31:20
# Fork: 1 of 1
# Warmup Iteration   1: 15,051 ms/op
# Warmup Iteration   2: 13,731 ms/op
# Warmup Iteration   3: 13,735 ms/op
# Warmup Iteration   4: 13,561 ms/op
# Warmup Iteration   5: 13,504 ms/op
# Warmup Iteration   6: 13,635 ms/op
# Warmup Iteration   7: 13,609 ms/op
# Warmup Iteration   8: 13,710 ms/op
# Warmup Iteration   9: 13,598 ms/op
# Warmup Iteration  10: 13,737 ms/op
Iteration   1: 13,670 ms/op
Iteration   2: 13,886 ms/op
Iteration   3: 13,775 ms/op
Iteration   4: 13,670 ms/op
Iteration   5: 13,875 ms/op
Iteration   6: 13,838 ms/op
Iteration   7: 13,810 ms/op
Iteration   8: 13,819 ms/op
Iteration   9: 13,857 ms/op
Iteration  10: 13,806 ms/op


Result "benchmarkFind":
  13,801 ±(99.9%) 0,116 ms/op [Average]
  (min, avg, max) = (13,670, 13,801, 13,886), stdev = 0,077
  CI (99.9%): [13,685, 13,916] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 2, patternSize = 16)

# Run progress: 70,73% complete, ETA 04:30:52
# Fork: 1 of 1
# Warmup Iteration   1: 7,678 ms/op
# Warmup Iteration   2: 6,934 ms/op
# Warmup Iteration   3: 6,961 ms/op
# Warmup Iteration   4: 6,865 ms/op
# Warmup Iteration   5: 6,891 ms/op
# Warmup Iteration   6: 6,847 ms/op
# Warmup Iteration   7: 6,945 ms/op
# Warmup Iteration   8: 6,966 ms/op
# Warmup Iteration   9: 7,000 ms/op
# Warmup Iteration  10: 6,997 ms/op
Iteration   1: 8,005 ms/op
Iteration   2: 6,949 ms/op
Iteration   3: 6,837 ms/op
Iteration   4: 6,852 ms/op
Iteration   5: 6,898 ms/op
Iteration   6: 6,862 ms/op
Iteration   7: 6,905 ms/op
Iteration   8: 6,929 ms/op
Iteration   9: 6,996 ms/op
Iteration  10: 6,963 ms/op


Result "benchmarkFind":
  7,020 ±(99.9%) 0,529 ms/op [Average]
  (min, avg, max) = (6,837, 7,020, 8,005), stdev = 0,350
  CI (99.9%): [6,491, 7,549] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 2, patternSize = 32)

# Run progress: 70,77% complete, ETA 04:30:25
# Fork: 1 of 1
# Warmup Iteration   1: 4,204 ms/op
# Warmup Iteration   2: 3,866 ms/op
# Warmup Iteration   3: 3,819 ms/op
# Warmup Iteration   4: 3,777 ms/op
# Warmup Iteration   5: 3,786 ms/op
# Warmup Iteration   6: 3,807 ms/op
# Warmup Iteration   7: 3,803 ms/op
# Warmup Iteration   8: 3,827 ms/op
# Warmup Iteration   9: 3,835 ms/op
# Warmup Iteration  10: 3,862 ms/op
Iteration   1: 3,869 ms/op
Iteration   2: 3,847 ms/op
Iteration   3: 3,842 ms/op
Iteration   4: 3,828 ms/op
Iteration   5: 3,848 ms/op
Iteration   6: 3,866 ms/op
Iteration   7: 3,861 ms/op
Iteration   8: 3,845 ms/op
Iteration   9: 3,874 ms/op
Iteration  10: 3,874 ms/op


Result "benchmarkFind":
  3,855 ±(99.9%) 0,023 ms/op [Average]
  (min, avg, max) = (3,828, 3,855, 3,874), stdev = 0,015
  CI (99.9%): [3,832, 3,879] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 2, patternSize = 64)

# Run progress: 70,82% complete, ETA 04:29:57
# Fork: 1 of 1
# Warmup Iteration   1: 2,781 ms/op
# Warmup Iteration   2: 2,544 ms/op
# Warmup Iteration   3: 2,438 ms/op
# Warmup Iteration   4: 2,456 ms/op
# Warmup Iteration   5: 2,438 ms/op
# Warmup Iteration   6: 2,440 ms/op
# Warmup Iteration   7: 2,443 ms/op
# Warmup Iteration   8: 2,452 ms/op
# Warmup Iteration   9: 2,448 ms/op
# Warmup Iteration  10: 2,461 ms/op
Iteration   1: 2,461 ms/op
Iteration   2: 2,489 ms/op
Iteration   3: 2,503 ms/op
Iteration   4: 2,473 ms/op
Iteration   5: 2,465 ms/op
Iteration   6: 2,481 ms/op
Iteration   7: 2,489 ms/op
Iteration   8: 2,481 ms/op
Iteration   9: 2,471 ms/op
Iteration  10: 2,484 ms/op


Result "benchmarkFind":
  2,480 ±(99.9%) 0,019 ms/op [Average]
  (min, avg, max) = (2,461, 2,480, 2,503), stdev = 0,013
  CI (99.9%): [2,461, 2,499] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 2, patternSize = 128)

# Run progress: 70,86% complete, ETA 04:29:30
# Fork: 1 of 1
# Warmup Iteration   1: 2,190 ms/op
# Warmup Iteration   2: 1,993 ms/op
# Warmup Iteration   3: 1,970 ms/op
# Warmup Iteration   4: 1,957 ms/op
# Warmup Iteration   5: 1,965 ms/op
# Warmup Iteration   6: 1,969 ms/op
# Warmup Iteration   7: 1,977 ms/op
# Warmup Iteration   8: 2,052 ms/op
# Warmup Iteration   9: 2,137 ms/op
# Warmup Iteration  10: 1,967 ms/op
Iteration   1: 1,973 ms/op
Iteration   2: 1,948 ms/op
Iteration   3: 1,943 ms/op
Iteration   4: 1,954 ms/op
Iteration   5: 1,956 ms/op
Iteration   6: 1,956 ms/op
Iteration   7: 1,963 ms/op
Iteration   8: 1,975 ms/op
Iteration   9: 1,999 ms/op
Iteration  10: 1,988 ms/op


Result "benchmarkFind":
  1,966 ±(99.9%) 0,028 ms/op [Average]
  (min, avg, max) = (1,943, 1,966, 1,999), stdev = 0,018
  CI (99.9%): [1,938, 1,993] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 2, patternSize = 256)

# Run progress: 70,91% complete, ETA 04:29:02
# Fork: 1 of 1
# Warmup Iteration   1: 2,331 ms/op
# Warmup Iteration   2: 2,117 ms/op
# Warmup Iteration   3: 2,081 ms/op
# Warmup Iteration   4: 2,078 ms/op
# Warmup Iteration   5: 2,081 ms/op
# Warmup Iteration   6: 2,085 ms/op
# Warmup Iteration   7: 2,086 ms/op
# Warmup Iteration   8: 2,084 ms/op
# Warmup Iteration   9: 2,086 ms/op
# Warmup Iteration  10: 2,091 ms/op
Iteration   1: 2,101 ms/op
Iteration   2: 2,113 ms/op
Iteration   3: 2,112 ms/op
Iteration   4: 2,111 ms/op
Iteration   5: 2,108 ms/op
Iteration   6: 2,113 ms/op
Iteration   7: 2,125 ms/op
Iteration   8: 2,118 ms/op
Iteration   9: 2,118 ms/op
Iteration  10: 2,111 ms/op


Result "benchmarkFind":
  2,113 ±(99.9%) 0,010 ms/op [Average]
  (min, avg, max) = (2,101, 2,113, 2,125), stdev = 0,006
  CI (99.9%): [2,104, 2,123] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 8, patternSize = 2)

# Run progress: 70,96% complete, ETA 04:28:35
# Fork: 1 of 1
# Warmup Iteration   1: 58,128 ms/op
# Warmup Iteration   2: 52,431 ms/op
# Warmup Iteration   3: 51,958 ms/op
# Warmup Iteration   4: 51,417 ms/op
# Warmup Iteration   5: 51,443 ms/op
# Warmup Iteration   6: 51,022 ms/op
# Warmup Iteration   7: 51,299 ms/op
# Warmup Iteration   8: 51,058 ms/op
# Warmup Iteration   9: 51,629 ms/op
# Warmup Iteration  10: 51,815 ms/op
Iteration   1: 51,798 ms/op
Iteration   2: 51,575 ms/op
Iteration   3: 51,563 ms/op
Iteration   4: 51,745 ms/op
Iteration   5: 51,640 ms/op
Iteration   6: 51,686 ms/op
Iteration   7: 51,752 ms/op
Iteration   8: 51,864 ms/op
Iteration   9: 51,582 ms/op
Iteration  10: 51,568 ms/op


Result "benchmarkFind":
  51,677 ±(99.9%) 0,164 ms/op [Average]
  (min, avg, max) = (51,563, 51,677, 51,864), stdev = 0,108
  CI (99.9%): [51,513, 51,841] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 8, patternSize = 4)

# Run progress: 71,00% complete, ETA 04:28:07
# Fork: 1 of 1
# Warmup Iteration   1: 37,742 ms/op
# Warmup Iteration   2: 34,468 ms/op
# Warmup Iteration   3: 33,789 ms/op
# Warmup Iteration   4: 33,856 ms/op
# Warmup Iteration   5: 33,965 ms/op
# Warmup Iteration   6: 37,737 ms/op
# Warmup Iteration   7: 33,898 ms/op
# Warmup Iteration   8: 33,892 ms/op
# Warmup Iteration   9: 35,068 ms/op
# Warmup Iteration  10: 34,030 ms/op
Iteration   1: 34,141 ms/op
Iteration   2: 34,056 ms/op
Iteration   3: 34,140 ms/op
Iteration   4: 33,996 ms/op
Iteration   5: 33,996 ms/op
Iteration   6: 33,948 ms/op
Iteration   7: 34,035 ms/op
Iteration   8: 34,158 ms/op
Iteration   9: 33,957 ms/op
Iteration  10: 34,238 ms/op


Result "benchmarkFind":
  34,067 ±(99.9%) 0,148 ms/op [Average]
  (min, avg, max) = (33,948, 34,067, 34,238), stdev = 0,098
  CI (99.9%): [33,919, 34,214] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 8, patternSize = 8)

# Run progress: 71,05% complete, ETA 04:27:40
# Fork: 1 of 1
# Warmup Iteration   1: 24,126 ms/op
# Warmup Iteration   2: 21,827 ms/op
# Warmup Iteration   3: 21,433 ms/op
# Warmup Iteration   4: 21,608 ms/op
# Warmup Iteration   5: 21,621 ms/op
# Warmup Iteration   6: 21,690 ms/op
# Warmup Iteration   7: 21,542 ms/op
# Warmup Iteration   8: 21,447 ms/op
# Warmup Iteration   9: 21,607 ms/op
# Warmup Iteration  10: 21,647 ms/op
Iteration   1: 21,662 ms/op
Iteration   2: 21,876 ms/op
Iteration   3: 21,767 ms/op
Iteration   4: 21,619 ms/op
Iteration   5: 21,706 ms/op
Iteration   6: 21,669 ms/op
Iteration   7: 21,632 ms/op
Iteration   8: 21,538 ms/op
Iteration   9: 21,847 ms/op
Iteration  10: 21,891 ms/op


Result "benchmarkFind":
  21,721 ±(99.9%) 0,181 ms/op [Average]
  (min, avg, max) = (21,538, 21,721, 21,891), stdev = 0,120
  CI (99.9%): [21,540, 21,902] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 8, patternSize = 16)

# Run progress: 71,09% complete, ETA 04:27:13
# Fork: 1 of 1
# Warmup Iteration   1: 15,138 ms/op
# Warmup Iteration   2: 13,786 ms/op
# Warmup Iteration   3: 14,735 ms/op
# Warmup Iteration   4: 13,830 ms/op
# Warmup Iteration   5: 13,897 ms/op
# Warmup Iteration   6: 13,614 ms/op
# Warmup Iteration   7: 13,715 ms/op
# Warmup Iteration   8: 13,707 ms/op
# Warmup Iteration   9: 13,670 ms/op
# Warmup Iteration  10: 13,737 ms/op
Iteration   1: 13,837 ms/op
Iteration   2: 13,825 ms/op
Iteration   3: 13,793 ms/op
Iteration   4: 13,884 ms/op
Iteration   5: 13,731 ms/op
Iteration   6: 13,805 ms/op
Iteration   7: 13,701 ms/op
Iteration   8: 13,774 ms/op
Iteration   9: 13,707 ms/op
Iteration  10: 13,727 ms/op


Result "benchmarkFind":
  13,778 ±(99.9%) 0,093 ms/op [Average]
  (min, avg, max) = (13,701, 13,778, 13,884), stdev = 0,061
  CI (99.9%): [13,686, 13,871] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 8, patternSize = 32)

# Run progress: 71,14% complete, ETA 04:26:45
# Fork: 1 of 1
# Warmup Iteration   1: 9,965 ms/op
# Warmup Iteration   2: 9,052 ms/op
# Warmup Iteration   3: 9,690 ms/op
# Warmup Iteration   4: 8,843 ms/op
# Warmup Iteration   5: 8,905 ms/op
# Warmup Iteration   6: 8,881 ms/op
# Warmup Iteration   7: 8,873 ms/op
# Warmup Iteration   8: 8,883 ms/op
# Warmup Iteration   9: 9,003 ms/op
# Warmup Iteration  10: 8,983 ms/op
Iteration   1: 9,008 ms/op
Iteration   2: 9,057 ms/op
Iteration   3: 8,965 ms/op
Iteration   4: 9,018 ms/op
Iteration   5: 9,062 ms/op
Iteration   6: 8,989 ms/op
Iteration   7: 8,972 ms/op
Iteration   8: 9,098 ms/op
Iteration   9: 9,097 ms/op
Iteration  10: 8,956 ms/op


Result "benchmarkFind":
  9,022 ±(99.9%) 0,080 ms/op [Average]
  (min, avg, max) = (8,956, 9,022, 9,098), stdev = 0,053
  CI (99.9%): [8,942, 9,103] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 8, patternSize = 64)

# Run progress: 71,19% complete, ETA 04:26:18
# Fork: 1 of 1
# Warmup Iteration   1: 7,702 ms/op
# Warmup Iteration   2: 7,186 ms/op
# Warmup Iteration   3: 7,030 ms/op
# Warmup Iteration   4: 7,005 ms/op
# Warmup Iteration   5: 7,055 ms/op
# Warmup Iteration   6: 7,038 ms/op
# Warmup Iteration   7: 7,073 ms/op
# Warmup Iteration   8: 7,025 ms/op
# Warmup Iteration   9: 7,066 ms/op
# Warmup Iteration  10: 7,142 ms/op
Iteration   1: 7,217 ms/op
Iteration   2: 7,099 ms/op
Iteration   3: 7,099 ms/op
Iteration   4: 7,116 ms/op
Iteration   5: 7,140 ms/op
Iteration   6: 7,138 ms/op
Iteration   7: 7,206 ms/op
Iteration   8: 7,195 ms/op
Iteration   9: 7,186 ms/op
Iteration  10: 7,149 ms/op


Result "benchmarkFind":
  7,155 ±(99.9%) 0,066 ms/op [Average]
  (min, avg, max) = (7,099, 7,155, 7,217), stdev = 0,044
  CI (99.9%): [7,088, 7,221] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 8, patternSize = 128)

# Run progress: 71,23% complete, ETA 04:25:51
# Fork: 1 of 1
# Warmup Iteration   1: 6,334 ms/op
# Warmup Iteration   2: 5,798 ms/op
# Warmup Iteration   3: 5,774 ms/op
# Warmup Iteration   4: 5,786 ms/op
# Warmup Iteration   5: 5,770 ms/op
# Warmup Iteration   6: 5,772 ms/op
# Warmup Iteration   7: 5,777 ms/op
# Warmup Iteration   8: 5,799 ms/op
# Warmup Iteration   9: 5,820 ms/op
# Warmup Iteration  10: 5,846 ms/op
Iteration   1: 5,847 ms/op
Iteration   2: 5,843 ms/op
Iteration   3: 5,902 ms/op
Iteration   4: 5,897 ms/op
Iteration   5: 5,853 ms/op
Iteration   6: 5,860 ms/op
Iteration   7: 5,807 ms/op
Iteration   8: 5,820 ms/op
Iteration   9: 5,814 ms/op
Iteration  10: 5,851 ms/op


Result "benchmarkFind":
  5,849 ±(99.9%) 0,048 ms/op [Average]
  (min, avg, max) = (5,807, 5,849, 5,902), stdev = 0,032
  CI (99.9%): [5,801, 5,897] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 8, patternSize = 256)

# Run progress: 71,28% complete, ETA 04:25:23
# Fork: 1 of 1
# Warmup Iteration   1: 7,060 ms/op
# Warmup Iteration   2: 5,921 ms/op
# Warmup Iteration   3: 5,993 ms/op
# Warmup Iteration   4: 5,812 ms/op
# Warmup Iteration   5: 5,797 ms/op
# Warmup Iteration   6: 5,810 ms/op
# Warmup Iteration   7: 5,833 ms/op
# Warmup Iteration   8: 5,801 ms/op
# Warmup Iteration   9: 5,766 ms/op
# Warmup Iteration  10: 5,842 ms/op
Iteration   1: 5,802 ms/op
Iteration   2: 5,821 ms/op
Iteration   3: 5,794 ms/op
Iteration   4: 5,798 ms/op
Iteration   5: 5,846 ms/op
Iteration   6: 5,884 ms/op
Iteration   7: 5,899 ms/op
Iteration   8: 5,908 ms/op
Iteration   9: 5,989 ms/op
Iteration  10: 5,889 ms/op


Result "benchmarkFind":
  5,863 ±(99.9%) 0,094 ms/op [Average]
  (min, avg, max) = (5,794, 5,863, 5,989), stdev = 0,062
  CI (99.9%): [5,769, 5,958] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 32, patternSize = 2)

# Run progress: 71,32% complete, ETA 04:24:56
# Fork: 1 of 1
# Warmup Iteration   1: 107,270 ms/op
# Warmup Iteration   2: 92,157 ms/op
# Warmup Iteration   3: 90,932 ms/op
# Warmup Iteration   4: 91,431 ms/op
# Warmup Iteration   5: 90,883 ms/op
# Warmup Iteration   6: 90,314 ms/op
# Warmup Iteration   7: 90,622 ms/op
# Warmup Iteration   8: 90,923 ms/op
# Warmup Iteration   9: 91,894 ms/op
# Warmup Iteration  10: 91,581 ms/op
Iteration   1: 91,457 ms/op
Iteration   2: 92,451 ms/op
Iteration   3: 92,606 ms/op
Iteration   4: 92,257 ms/op
Iteration   5: 92,033 ms/op
Iteration   6: 92,950 ms/op
Iteration   7: 96,303 ms/op
Iteration   8: 96,966 ms/op
Iteration   9: 96,707 ms/op
Iteration  10: 96,158 ms/op


Result "benchmarkFind":
  93,989 ±(99.9%) 3,377 ms/op [Average]
  (min, avg, max) = (91,457, 93,989, 96,966), stdev = 2,234
  CI (99.9%): [90,612, 97,366] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 32, patternSize = 4)

# Run progress: 71,37% complete, ETA 04:24:29
# Fork: 1 of 1
# Warmup Iteration   1: 52,001 ms/op
# Warmup Iteration   2: 47,200 ms/op
# Warmup Iteration   3: 46,365 ms/op
# Warmup Iteration   4: 46,402 ms/op
# Warmup Iteration   5: 46,536 ms/op
# Warmup Iteration   6: 46,694 ms/op
# Warmup Iteration   7: 46,372 ms/op
# Warmup Iteration   8: 46,184 ms/op
# Warmup Iteration   9: 46,384 ms/op
# Warmup Iteration  10: 46,779 ms/op
Iteration   1: 46,915 ms/op
Iteration   2: 46,648 ms/op
Iteration   3: 47,357 ms/op
Iteration   4: 46,690 ms/op
Iteration   5: 46,988 ms/op
Iteration   6: 46,574 ms/op
Iteration   7: 46,591 ms/op
Iteration   8: 47,051 ms/op
Iteration   9: 52,665 ms/op
Iteration  10: 46,069 ms/op


Result "benchmarkFind":
  47,355 ±(99.9%) 2,869 ms/op [Average]
  (min, avg, max) = (46,069, 47,355, 52,665), stdev = 1,897
  CI (99.9%): [44,486, 50,223] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 32, patternSize = 8)

# Run progress: 71,42% complete, ETA 04:24:01
# Fork: 1 of 1
# Warmup Iteration   1: 34,333 ms/op
# Warmup Iteration   2: 31,162 ms/op
# Warmup Iteration   3: 30,615 ms/op
# Warmup Iteration   4: 30,549 ms/op
# Warmup Iteration   5: 30,481 ms/op
# Warmup Iteration   6: 30,480 ms/op
# Warmup Iteration   7: 30,699 ms/op
# Warmup Iteration   8: 30,665 ms/op
# Warmup Iteration   9: 30,752 ms/op
# Warmup Iteration  10: 30,693 ms/op
Iteration   1: 30,828 ms/op
Iteration   2: 30,848 ms/op
Iteration   3: 30,852 ms/op
Iteration   4: 30,700 ms/op
Iteration   5: 30,818 ms/op
Iteration   6: 31,102 ms/op
Iteration   7: 30,837 ms/op
Iteration   8: 30,799 ms/op
Iteration   9: 30,944 ms/op
Iteration  10: 31,076 ms/op


Result "benchmarkFind":
  30,880 ±(99.9%) 0,189 ms/op [Average]
  (min, avg, max) = (30,700, 30,880, 31,102), stdev = 0,125
  CI (99.9%): [30,691, 31,070] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 32, patternSize = 16)

# Run progress: 71,46% complete, ETA 04:23:34
# Fork: 1 of 1
# Warmup Iteration   1: 28,275 ms/op
# Warmup Iteration   2: 25,917 ms/op
# Warmup Iteration   3: 25,628 ms/op
# Warmup Iteration   4: 25,764 ms/op
# Warmup Iteration   5: 25,778 ms/op
# Warmup Iteration   6: 26,006 ms/op
# Warmup Iteration   7: 25,846 ms/op
# Warmup Iteration   8: 26,135 ms/op
# Warmup Iteration   9: 26,442 ms/op
# Warmup Iteration  10: 26,561 ms/op
Iteration   1: 26,551 ms/op
Iteration   2: 26,378 ms/op
Iteration   3: 26,589 ms/op
Iteration   4: 26,349 ms/op
Iteration   5: 26,215 ms/op
Iteration   6: 26,489 ms/op
Iteration   7: 26,367 ms/op
Iteration   8: 26,778 ms/op
Iteration   9: 26,269 ms/op
Iteration  10: 26,208 ms/op


Result "benchmarkFind":
  26,419 ±(99.9%) 0,275 ms/op [Average]
  (min, avg, max) = (26,208, 26,419, 26,778), stdev = 0,182
  CI (99.9%): [26,144, 26,695] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 32, patternSize = 32)

# Run progress: 71,51% complete, ETA 04:23:07
# Fork: 1 of 1
# Warmup Iteration   1: 27,119 ms/op
# Warmup Iteration   2: 24,734 ms/op
# Warmup Iteration   3: 24,325 ms/op
# Warmup Iteration   4: 24,341 ms/op
# Warmup Iteration   5: 24,478 ms/op
# Warmup Iteration   6: 24,472 ms/op
# Warmup Iteration   7: 24,362 ms/op
# Warmup Iteration   8: 24,511 ms/op
# Warmup Iteration   9: 24,846 ms/op
# Warmup Iteration  10: 24,752 ms/op
Iteration   1: 25,082 ms/op
Iteration   2: 24,964 ms/op
Iteration   3: 24,809 ms/op
Iteration   4: 24,979 ms/op
Iteration   5: 24,931 ms/op
Iteration   6: 27,973 ms/op
Iteration   7: 24,310 ms/op
Iteration   8: 24,157 ms/op
Iteration   9: 24,351 ms/op
Iteration  10: 24,292 ms/op


Result "benchmarkFind":
  24,985 ±(99.9%) 1,671 ms/op [Average]
  (min, avg, max) = (24,157, 24,985, 27,973), stdev = 1,105
  CI (99.9%): [23,314, 26,656] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 32, patternSize = 64)

# Run progress: 71,55% complete, ETA 04:22:40
# Fork: 1 of 1
# Warmup Iteration   1: 24,690 ms/op
# Warmup Iteration   2: 22,467 ms/op
# Warmup Iteration   3: 22,360 ms/op
# Warmup Iteration   4: 22,306 ms/op
# Warmup Iteration   5: 22,333 ms/op
# Warmup Iteration   6: 22,215 ms/op
# Warmup Iteration   7: 22,242 ms/op
# Warmup Iteration   8: 22,431 ms/op
# Warmup Iteration   9: 22,734 ms/op
# Warmup Iteration  10: 22,817 ms/op
Iteration   1: 22,510 ms/op
Iteration   2: 22,541 ms/op
Iteration   3: 22,735 ms/op
Iteration   4: 22,666 ms/op
Iteration   5: 22,602 ms/op
Iteration   6: 22,708 ms/op
Iteration   7: 22,725 ms/op
Iteration   8: 22,659 ms/op
Iteration   9: 22,669 ms/op
Iteration  10: 22,656 ms/op


Result "benchmarkFind":
  22,647 ±(99.9%) 0,113 ms/op [Average]
  (min, avg, max) = (22,510, 22,647, 22,735), stdev = 0,075
  CI (99.9%): [22,534, 22,761] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 32, patternSize = 128)

# Run progress: 71,60% complete, ETA 04:22:12
# Fork: 1 of 1
# Warmup Iteration   1: 27,923 ms/op
# Warmup Iteration   2: 25,540 ms/op
# Warmup Iteration   3: 24,863 ms/op
# Warmup Iteration   4: 25,123 ms/op
# Warmup Iteration   5: 25,003 ms/op
# Warmup Iteration   6: 24,957 ms/op
# Warmup Iteration   7: 25,667 ms/op
# Warmup Iteration   8: 26,070 ms/op
# Warmup Iteration   9: 26,271 ms/op
# Warmup Iteration  10: 26,435 ms/op
Iteration   1: 26,717 ms/op
Iteration   2: 26,935 ms/op
Iteration   3: 26,792 ms/op
Iteration   4: 26,632 ms/op
Iteration   5: 26,805 ms/op
Iteration   6: 26,679 ms/op
Iteration   7: 25,445 ms/op
Iteration   8: 25,640 ms/op
Iteration   9: 25,605 ms/op
Iteration  10: 25,757 ms/op


Result "benchmarkFind":
  26,301 ±(99.9%) 0,912 ms/op [Average]
  (min, avg, max) = (25,445, 26,301, 26,935), stdev = 0,603
  CI (99.9%): [25,389, 27,212] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 32, patternSize = 256)

# Run progress: 71,65% complete, ETA 04:21:45
# Fork: 1 of 1
# Warmup Iteration   1: 23,818 ms/op
# Warmup Iteration   2: 22,502 ms/op
# Warmup Iteration   3: 21,678 ms/op
# Warmup Iteration   4: 21,308 ms/op
# Warmup Iteration   5: 21,285 ms/op
# Warmup Iteration   6: 21,314 ms/op
# Warmup Iteration   7: 21,370 ms/op
# Warmup Iteration   8: 21,422 ms/op
# Warmup Iteration   9: 21,259 ms/op
# Warmup Iteration  10: 21,270 ms/op
Iteration   1: 21,298 ms/op
Iteration   2: 21,469 ms/op
Iteration   3: 23,483 ms/op
Iteration   4: 21,580 ms/op
Iteration   5: 21,626 ms/op
Iteration   6: 22,083 ms/op
Iteration   7: 21,817 ms/op
Iteration   8: 21,771 ms/op
Iteration   9: 21,700 ms/op
Iteration  10: 21,611 ms/op


Result "benchmarkFind":
  21,844 ±(99.9%) 0,927 ms/op [Average]
  (min, avg, max) = (21,298, 21,844, 23,483), stdev = 0,613
  CI (99.9%): [20,917, 22,771] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 128, patternSize = 2)

# Run progress: 71,69% complete, ETA 04:21:18
# Fork: 1 of 1
# Warmup Iteration   1: 644,225 ms/op
# Warmup Iteration   2: 586,679 ms/op
# Warmup Iteration   3: 583,760 ms/op
# Warmup Iteration   4: 586,263 ms/op
# Warmup Iteration   5: 590,950 ms/op
# Warmup Iteration   6: 580,737 ms/op
# Warmup Iteration   7: 577,307 ms/op
# Warmup Iteration   8: 580,116 ms/op
# Warmup Iteration   9: 580,758 ms/op
# Warmup Iteration  10: 581,231 ms/op
Iteration   1: 583,443 ms/op
Iteration   2: 586,574 ms/op
Iteration   3: 580,356 ms/op
Iteration   4: 580,514 ms/op
Iteration   5: 577,672 ms/op
Iteration   6: 577,566 ms/op
Iteration   7: 583,250 ms/op
Iteration   8: 584,263 ms/op
Iteration   9: 582,634 ms/op
Iteration  10: 581,940 ms/op


Result "benchmarkFind":
  581,821 ±(99.9%) 4,308 ms/op [Average]
  (min, avg, max) = (577,566, 581,821, 586,574), stdev = 2,849
  CI (99.9%): [577,513, 586,129] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 128, patternSize = 4)

# Run progress: 71,74% complete, ETA 04:20:52
# Fork: 1 of 1
# Warmup Iteration   1: 86,539 ms/op
# Warmup Iteration   2: 76,201 ms/op
# Warmup Iteration   3: 76,777 ms/op
# Warmup Iteration   4: 77,192 ms/op
# Warmup Iteration   5: 77,781 ms/op
# Warmup Iteration   6: 77,572 ms/op
# Warmup Iteration   7: 77,743 ms/op
# Warmup Iteration   8: 77,886 ms/op
# Warmup Iteration   9: 77,632 ms/op
# Warmup Iteration  10: 77,537 ms/op
Iteration   1: 77,599 ms/op
Iteration   2: 77,560 ms/op
Iteration   3: 77,775 ms/op
Iteration   4: 77,438 ms/op
Iteration   5: 77,628 ms/op
Iteration   6: 77,851 ms/op
Iteration   7: 77,607 ms/op
Iteration   8: 77,293 ms/op
Iteration   9: 76,934 ms/op
Iteration  10: 77,431 ms/op


Result "benchmarkFind":
  77,512 ±(99.9%) 0,394 ms/op [Average]
  (min, avg, max) = (76,934, 77,512, 77,851), stdev = 0,261
  CI (99.9%): [77,118, 77,906] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 128, patternSize = 8)

# Run progress: 71,78% complete, ETA 04:20:25
# Fork: 1 of 1
# Warmup Iteration   1: 80,249 ms/op
# Warmup Iteration   2: 72,802 ms/op
# Warmup Iteration   3: 72,616 ms/op
# Warmup Iteration   4: 73,308 ms/op
# Warmup Iteration   5: 72,853 ms/op
# Warmup Iteration   6: 73,104 ms/op
# Warmup Iteration   7: 79,189 ms/op
# Warmup Iteration   8: 73,721 ms/op
# Warmup Iteration   9: 74,041 ms/op
# Warmup Iteration  10: 74,303 ms/op
Iteration   1: 74,123 ms/op
Iteration   2: 73,757 ms/op
Iteration   3: 73,715 ms/op
Iteration   4: 73,760 ms/op
Iteration   5: 74,095 ms/op
Iteration   6: 73,718 ms/op
Iteration   7: 73,863 ms/op
Iteration   8: 74,480 ms/op
Iteration   9: 75,013 ms/op
Iteration  10: 75,172 ms/op


Result "benchmarkFind":
  74,170 ±(99.9%) 0,822 ms/op [Average]
  (min, avg, max) = (73,715, 74,170, 75,172), stdev = 0,544
  CI (99.9%): [73,347, 74,992] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 128, patternSize = 16)

# Run progress: 71,83% complete, ETA 04:19:58
# Fork: 1 of 1
# Warmup Iteration   1: 85,365 ms/op
# Warmup Iteration   2: 75,092 ms/op
# Warmup Iteration   3: 75,119 ms/op
# Warmup Iteration   4: 75,572 ms/op
# Warmup Iteration   5: 75,437 ms/op
# Warmup Iteration   6: 76,533 ms/op
# Warmup Iteration   7: 77,072 ms/op
# Warmup Iteration   8: 76,395 ms/op
# Warmup Iteration   9: 77,248 ms/op
# Warmup Iteration  10: 77,197 ms/op
Iteration   1: 76,495 ms/op
Iteration   2: 76,935 ms/op
Iteration   3: 76,947 ms/op
Iteration   4: 77,159 ms/op
Iteration   5: 77,254 ms/op
Iteration   6: 75,077 ms/op
Iteration   7: 76,256 ms/op
Iteration   8: 76,205 ms/op
Iteration   9: 76,976 ms/op
Iteration  10: 76,457 ms/op


Result "benchmarkFind":
  76,576 ±(99.9%) 0,974 ms/op [Average]
  (min, avg, max) = (75,077, 76,576, 77,254), stdev = 0,644
  CI (99.9%): [75,602, 77,550] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 128, patternSize = 32)

# Run progress: 71,88% complete, ETA 04:19:31
# Fork: 1 of 1
# Warmup Iteration   1: 85,577 ms/op
# Warmup Iteration   2: 76,958 ms/op
# Warmup Iteration   3: 75,485 ms/op
# Warmup Iteration   4: 75,542 ms/op
# Warmup Iteration   5: 76,428 ms/op
# Warmup Iteration   6: 75,792 ms/op
# Warmup Iteration   7: 75,945 ms/op
# Warmup Iteration   8: 76,404 ms/op
# Warmup Iteration   9: 76,280 ms/op
# Warmup Iteration  10: 76,710 ms/op
Iteration   1: 76,827 ms/op
Iteration   2: 77,112 ms/op
Iteration   3: 76,766 ms/op
Iteration   4: 77,099 ms/op
Iteration   5: 77,391 ms/op
Iteration   6: 76,958 ms/op
Iteration   7: 76,874 ms/op
Iteration   8: 76,619 ms/op
Iteration   9: 77,154 ms/op
Iteration  10: 77,109 ms/op


Result "benchmarkFind":
  76,991 ±(99.9%) 0,341 ms/op [Average]
  (min, avg, max) = (76,619, 76,991, 77,391), stdev = 0,226
  CI (99.9%): [76,650, 77,332] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 128, patternSize = 64)

# Run progress: 71,92% complete, ETA 04:19:04
# Fork: 1 of 1
# Warmup Iteration   1: 87,652 ms/op
# Warmup Iteration   2: 78,440 ms/op
# Warmup Iteration   3: 83,376 ms/op
# Warmup Iteration   4: 76,819 ms/op
# Warmup Iteration   5: 77,289 ms/op
# Warmup Iteration   6: 77,326 ms/op
# Warmup Iteration   7: 77,332 ms/op
# Warmup Iteration   8: 77,539 ms/op
# Warmup Iteration   9: 77,118 ms/op
# Warmup Iteration  10: 78,979 ms/op
Iteration   1: 78,006 ms/op
Iteration   2: 78,369 ms/op
Iteration   3: 77,925 ms/op
Iteration   4: 78,351 ms/op
Iteration   5: 78,497 ms/op
Iteration   6: 78,502 ms/op
Iteration   7: 77,858 ms/op
Iteration   8: 77,759 ms/op
Iteration   9: 77,894 ms/op
Iteration  10: 77,737 ms/op


Result "benchmarkFind":
  78,090 ±(99.9%) 0,463 ms/op [Average]
  (min, avg, max) = (77,737, 78,090, 78,502), stdev = 0,306
  CI (99.9%): [77,627, 78,553] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 128, patternSize = 128)

# Run progress: 71,97% complete, ETA 04:18:36
# Fork: 1 of 1
# Warmup Iteration   1: 87,006 ms/op
# Warmup Iteration   2: 77,607 ms/op
# Warmup Iteration   3: 77,594 ms/op
# Warmup Iteration   4: 76,399 ms/op
# Warmup Iteration   5: 76,338 ms/op
# Warmup Iteration   6: 75,826 ms/op
# Warmup Iteration   7: 75,939 ms/op
# Warmup Iteration   8: 76,648 ms/op
# Warmup Iteration   9: 77,695 ms/op
# Warmup Iteration  10: 77,116 ms/op
Iteration   1: 78,081 ms/op
Iteration   2: 78,034 ms/op
Iteration   3: 78,978 ms/op
Iteration   4: 78,152 ms/op
Iteration   5: 78,349 ms/op
Iteration   6: 78,169 ms/op
Iteration   7: 78,004 ms/op
Iteration   8: 78,609 ms/op
Iteration   9: 78,339 ms/op
Iteration  10: 78,784 ms/op


Result "benchmarkFind":
  78,350 ±(99.9%) 0,507 ms/op [Average]
  (min, avg, max) = (78,004, 78,350, 78,978), stdev = 0,336
  CI (99.9%): [77,842, 78,857] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 128, patternSize = 256)

# Run progress: 72,01% complete, ETA 04:18:09
# Fork: 1 of 1
# Warmup Iteration   1: 87,100 ms/op
# Warmup Iteration   2: 76,840 ms/op
# Warmup Iteration   3: 75,365 ms/op
# Warmup Iteration   4: 76,114 ms/op
# Warmup Iteration   5: 76,068 ms/op
# Warmup Iteration   6: 76,218 ms/op
# Warmup Iteration   7: 76,288 ms/op
# Warmup Iteration   8: 76,173 ms/op
# Warmup Iteration   9: 76,133 ms/op
# Warmup Iteration  10: 76,461 ms/op
Iteration   1: 76,116 ms/op
Iteration   2: 76,524 ms/op
Iteration   3: 76,425 ms/op
Iteration   4: 76,538 ms/op
Iteration   5: 77,298 ms/op
Iteration   6: 76,626 ms/op
Iteration   7: 76,749 ms/op
Iteration   8: 76,638 ms/op
Iteration   9: 83,066 ms/op
Iteration  10: 76,196 ms/op


Result "benchmarkFind":
  77,218 ±(99.9%) 3,145 ms/op [Average]
  (min, avg, max) = (76,116, 77,218, 83,066), stdev = 2,080
  CI (99.9%): [74,072, 80,363] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 2, patternSize = 2)

# Run progress: 72,06% complete, ETA 04:17:43
# Fork: 1 of 1
# Warmup Iteration   1: 183,991 ms/op
# Warmup Iteration   2: 174,680 ms/op
# Warmup Iteration   3: 168,090 ms/op
# Warmup Iteration   4: 169,413 ms/op
# Warmup Iteration   5: 169,418 ms/op
# Warmup Iteration   6: 170,093 ms/op
# Warmup Iteration   7: 169,109 ms/op
# Warmup Iteration   8: 169,040 ms/op
# Warmup Iteration   9: 170,159 ms/op
# Warmup Iteration  10: 169,242 ms/op
Iteration   1: 171,659 ms/op
Iteration   2: 171,087 ms/op
Iteration   3: 171,976 ms/op
Iteration   4: 169,976 ms/op
Iteration   5: 171,346 ms/op
Iteration   6: 170,897 ms/op
Iteration   7: 173,049 ms/op
Iteration   8: 180,089 ms/op
Iteration   9: 180,682 ms/op
Iteration  10: 181,216 ms/op


Result "benchmarkFind":
  174,198 ±(99.9%) 6,859 ms/op [Average]
  (min, avg, max) = (169,976, 174,198, 181,216), stdev = 4,537
  CI (99.9%): [167,339, 181,057] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 2, patternSize = 4)

# Run progress: 72,10% complete, ETA 04:17:16
# Fork: 1 of 1
# Warmup Iteration   1: 113,474 ms/op
# Warmup Iteration   2: 106,498 ms/op
# Warmup Iteration   3: 103,995 ms/op
# Warmup Iteration   4: 103,764 ms/op
# Warmup Iteration   5: 103,402 ms/op
# Warmup Iteration   6: 104,445 ms/op
# Warmup Iteration   7: 104,596 ms/op
# Warmup Iteration   8: 104,198 ms/op
# Warmup Iteration   9: 103,768 ms/op
# Warmup Iteration  10: 105,402 ms/op
Iteration   1: 105,261 ms/op
Iteration   2: 104,434 ms/op
Iteration   3: 104,495 ms/op
Iteration   4: 103,982 ms/op
Iteration   5: 103,555 ms/op
Iteration   6: 103,781 ms/op
Iteration   7: 103,068 ms/op
Iteration   8: 102,485 ms/op
Iteration   9: 103,004 ms/op
Iteration  10: 103,473 ms/op


Result "benchmarkFind":
  103,754 ±(99.9%) 1,244 ms/op [Average]
  (min, avg, max) = (102,485, 103,754, 105,261), stdev = 0,823
  CI (99.9%): [102,510, 104,998] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 2, patternSize = 8)

# Run progress: 72,15% complete, ETA 04:16:49
# Fork: 1 of 1
# Warmup Iteration   1: 54,724 ms/op
# Warmup Iteration   2: 50,922 ms/op
# Warmup Iteration   3: 50,181 ms/op
# Warmup Iteration   4: 49,894 ms/op
# Warmup Iteration   5: 49,751 ms/op
# Warmup Iteration   6: 49,624 ms/op
# Warmup Iteration   7: 50,072 ms/op
# Warmup Iteration   8: 49,999 ms/op
# Warmup Iteration   9: 50,563 ms/op
# Warmup Iteration  10: 50,350 ms/op
Iteration   1: 50,229 ms/op
Iteration   2: 50,112 ms/op
Iteration   3: 50,544 ms/op
Iteration   4: 50,168 ms/op
Iteration   5: 57,313 ms/op
Iteration   6: 49,579 ms/op
Iteration   7: 49,929 ms/op
Iteration   8: 49,666 ms/op
Iteration   9: 50,129 ms/op
Iteration  10: 50,924 ms/op


Result "benchmarkFind":
  50,859 ±(99.9%) 3,479 ms/op [Average]
  (min, avg, max) = (49,579, 50,859, 57,313), stdev = 2,301
  CI (99.9%): [47,380, 54,338] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 2, patternSize = 16)

# Run progress: 72,20% complete, ETA 04:16:22
# Fork: 1 of 1
# Warmup Iteration   1: 26,929 ms/op
# Warmup Iteration   2: 24,340 ms/op
# Warmup Iteration   3: 23,705 ms/op
# Warmup Iteration   4: 23,807 ms/op
# Warmup Iteration   5: 23,844 ms/op
# Warmup Iteration   6: 24,063 ms/op
# Warmup Iteration   7: 24,066 ms/op
# Warmup Iteration   8: 24,084 ms/op
# Warmup Iteration   9: 24,275 ms/op
# Warmup Iteration  10: 25,044 ms/op
Iteration   1: 25,338 ms/op
Iteration   2: 25,510 ms/op
Iteration   3: 25,387 ms/op
Iteration   4: 25,563 ms/op
Iteration   5: 25,276 ms/op
Iteration   6: 25,146 ms/op
Iteration   7: 23,994 ms/op
Iteration   8: 24,131 ms/op
Iteration   9: 24,207 ms/op
Iteration  10: 23,973 ms/op


Result "benchmarkFind":
  24,853 ±(99.9%) 1,029 ms/op [Average]
  (min, avg, max) = (23,973, 24,853, 25,563), stdev = 0,681
  CI (99.9%): [23,823, 25,882] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 2, patternSize = 32)

# Run progress: 72,24% complete, ETA 04:15:55
# Fork: 1 of 1
# Warmup Iteration   1: 13,934 ms/op
# Warmup Iteration   2: 12,959 ms/op
# Warmup Iteration   3: 12,506 ms/op
# Warmup Iteration   4: 12,536 ms/op
# Warmup Iteration   5: 12,604 ms/op
# Warmup Iteration   6: 12,544 ms/op
# Warmup Iteration   7: 12,599 ms/op
# Warmup Iteration   8: 12,760 ms/op
# Warmup Iteration   9: 12,741 ms/op
# Warmup Iteration  10: 12,762 ms/op
Iteration   1: 12,757 ms/op
Iteration   2: 12,766 ms/op
Iteration   3: 12,759 ms/op
Iteration   4: 12,763 ms/op
Iteration   5: 12,727 ms/op
Iteration   6: 12,612 ms/op
Iteration   7: 12,743 ms/op
Iteration   8: 12,708 ms/op
Iteration   9: 12,709 ms/op
Iteration  10: 12,691 ms/op


Result "benchmarkFind":
  12,724 ±(99.9%) 0,071 ms/op [Average]
  (min, avg, max) = (12,612, 12,724, 12,766), stdev = 0,047
  CI (99.9%): [12,652, 12,795] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 2, patternSize = 64)

# Run progress: 72,29% complete, ETA 04:15:28
# Fork: 1 of 1
# Warmup Iteration   1: 8,256 ms/op
# Warmup Iteration   2: 7,562 ms/op
# Warmup Iteration   3: 7,294 ms/op
# Warmup Iteration   4: 7,291 ms/op
# Warmup Iteration   5: 7,272 ms/op
# Warmup Iteration   6: 7,306 ms/op
# Warmup Iteration   7: 7,296 ms/op
# Warmup Iteration   8: 7,318 ms/op
# Warmup Iteration   9: 7,315 ms/op
# Warmup Iteration  10: 7,411 ms/op
Iteration   1: 8,718 ms/op
Iteration   2: 7,301 ms/op
Iteration   3: 7,303 ms/op
Iteration   4: 7,439 ms/op
Iteration   5: 7,303 ms/op
Iteration   6: 7,318 ms/op
Iteration   7: 7,313 ms/op
Iteration   8: 7,326 ms/op
Iteration   9: 7,341 ms/op
Iteration  10: 7,385 ms/op


Result "benchmarkFind":
  7,475 ±(99.9%) 0,664 ms/op [Average]
  (min, avg, max) = (7,301, 7,475, 8,718), stdev = 0,439
  CI (99.9%): [6,811, 8,139] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 2, patternSize = 128)

# Run progress: 72,33% complete, ETA 04:15:01
# Fork: 1 of 1
# Warmup Iteration   1: 7,768 ms/op
# Warmup Iteration   2: 7,175 ms/op
# Warmup Iteration   3: 7,064 ms/op
# Warmup Iteration   4: 6,971 ms/op
# Warmup Iteration   5: 6,979 ms/op
# Warmup Iteration   6: 6,975 ms/op
# Warmup Iteration   7: 6,963 ms/op
# Warmup Iteration   8: 6,983 ms/op
# Warmup Iteration   9: 6,996 ms/op
# Warmup Iteration  10: 6,987 ms/op
Iteration   1: 6,994 ms/op
Iteration   2: 7,006 ms/op
Iteration   3: 7,000 ms/op
Iteration   4: 7,009 ms/op
Iteration   5: 7,036 ms/op
Iteration   6: 7,067 ms/op
Iteration   7: 7,114 ms/op
Iteration   8: 7,072 ms/op
Iteration   9: 7,044 ms/op
Iteration  10: 7,043 ms/op


Result "benchmarkFind":
  7,039 ±(99.9%) 0,058 ms/op [Average]
  (min, avg, max) = (6,994, 7,039, 7,114), stdev = 0,038
  CI (99.9%): [6,981, 7,096] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 2, patternSize = 256)

# Run progress: 72,38% complete, ETA 04:14:34
# Fork: 1 of 1
# Warmup Iteration   1: 7,748 ms/op
# Warmup Iteration   2: 7,260 ms/op
# Warmup Iteration   3: 7,322 ms/op
# Warmup Iteration   4: 7,101 ms/op
# Warmup Iteration   5: 7,111 ms/op
# Warmup Iteration   6: 7,100 ms/op
# Warmup Iteration   7: 7,092 ms/op
# Warmup Iteration   8: 7,116 ms/op
# Warmup Iteration   9: 7,772 ms/op
# Warmup Iteration  10: 7,183 ms/op
Iteration   1: 7,197 ms/op
Iteration   2: 7,108 ms/op
Iteration   3: 7,121 ms/op
Iteration   4: 7,141 ms/op
Iteration   5: 7,123 ms/op
Iteration   6: 7,116 ms/op
Iteration   7: 7,132 ms/op
Iteration   8: 7,146 ms/op
Iteration   9: 7,140 ms/op
Iteration  10: 7,188 ms/op


Result "benchmarkFind":
  7,141 ±(99.9%) 0,045 ms/op [Average]
  (min, avg, max) = (7,108, 7,141, 7,197), stdev = 0,030
  CI (99.9%): [7,096, 7,186] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 8, patternSize = 2)

# Run progress: 72,43% complete, ETA 04:14:07
# Fork: 1 of 1
# Warmup Iteration   1: 212,872 ms/op
# Warmup Iteration   2: 194,206 ms/op
# Warmup Iteration   3: 192,539 ms/op
# Warmup Iteration   4: 194,039 ms/op
# Warmup Iteration   5: 192,932 ms/op
# Warmup Iteration   6: 192,529 ms/op
# Warmup Iteration   7: 204,215 ms/op
# Warmup Iteration   8: 193,950 ms/op
# Warmup Iteration   9: 192,743 ms/op
# Warmup Iteration  10: 194,642 ms/op
Iteration   1: 192,721 ms/op
Iteration   2: 192,617 ms/op
Iteration   3: 193,397 ms/op
Iteration   4: 192,150 ms/op
Iteration   5: 195,934 ms/op
Iteration   6: 194,247 ms/op
Iteration   7: 194,891 ms/op
Iteration   8: 193,482 ms/op
Iteration   9: 196,584 ms/op
Iteration  10: 194,351 ms/op


Result "benchmarkFind":
  194,038 ±(99.9%) 2,196 ms/op [Average]
  (min, avg, max) = (192,150, 194,038, 196,584), stdev = 1,452
  CI (99.9%): [191,842, 196,233] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 8, patternSize = 4)

# Run progress: 72,47% complete, ETA 04:13:41
# Fork: 1 of 1
# Warmup Iteration   1: 133,182 ms/op
# Warmup Iteration   2: 125,825 ms/op
# Warmup Iteration   3: 122,110 ms/op
# Warmup Iteration   4: 122,350 ms/op
# Warmup Iteration   5: 121,799 ms/op
# Warmup Iteration   6: 121,348 ms/op
# Warmup Iteration   7: 123,266 ms/op
# Warmup Iteration   8: 122,402 ms/op
# Warmup Iteration   9: 122,536 ms/op
# Warmup Iteration  10: 123,914 ms/op
Iteration   1: 124,480 ms/op
Iteration   2: 124,341 ms/op
Iteration   3: 123,955 ms/op
Iteration   4: 123,546 ms/op
Iteration   5: 123,487 ms/op
Iteration   6: 123,925 ms/op
Iteration   7: 124,017 ms/op
Iteration   8: 124,521 ms/op
Iteration   9: 123,939 ms/op
Iteration  10: 125,093 ms/op


Result "benchmarkFind":
  124,130 ±(99.9%) 0,734 ms/op [Average]
  (min, avg, max) = (123,487, 124,130, 125,093), stdev = 0,486
  CI (99.9%): [123,396, 124,865] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 8, patternSize = 8)

# Run progress: 72,52% complete, ETA 04:13:14
# Fork: 1 of 1
# Warmup Iteration   1: 82,215 ms/op
# Warmup Iteration   2: 77,172 ms/op
# Warmup Iteration   3: 75,608 ms/op
# Warmup Iteration   4: 75,827 ms/op
# Warmup Iteration   5: 75,394 ms/op
# Warmup Iteration   6: 75,578 ms/op
# Warmup Iteration   7: 75,490 ms/op
# Warmup Iteration   8: 76,376 ms/op
# Warmup Iteration   9: 76,498 ms/op
# Warmup Iteration  10: 76,558 ms/op
Iteration   1: 77,016 ms/op
Iteration   2: 77,505 ms/op
Iteration   3: 76,995 ms/op
Iteration   4: 77,442 ms/op
Iteration   5: 76,610 ms/op
Iteration   6: 77,004 ms/op
Iteration   7: 77,058 ms/op
Iteration   8: 77,153 ms/op
Iteration   9: 76,915 ms/op
Iteration  10: 85,033 ms/op


Result "benchmarkFind":
  77,873 ±(99.9%) 3,823 ms/op [Average]
  (min, avg, max) = (76,610, 77,873, 85,033), stdev = 2,529
  CI (99.9%): [74,050, 81,696] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 8, patternSize = 16)

# Run progress: 72,56% complete, ETA 04:12:48
# Fork: 1 of 1
# Warmup Iteration   1: 46,787 ms/op
# Warmup Iteration   2: 43,787 ms/op
# Warmup Iteration   3: 42,990 ms/op
# Warmup Iteration   4: 42,840 ms/op
# Warmup Iteration   5: 43,065 ms/op
# Warmup Iteration   6: 42,626 ms/op
# Warmup Iteration   7: 42,751 ms/op
# Warmup Iteration   8: 43,037 ms/op
# Warmup Iteration   9: 43,116 ms/op
# Warmup Iteration  10: 43,259 ms/op
Iteration   1: 43,499 ms/op
Iteration   2: 43,750 ms/op
Iteration   3: 43,585 ms/op
Iteration   4: 43,469 ms/op
Iteration   5: 43,595 ms/op
Iteration   6: 43,335 ms/op
Iteration   7: 43,506 ms/op
Iteration   8: 42,803 ms/op
Iteration   9: 43,787 ms/op
Iteration  10: 42,643 ms/op


Result "benchmarkFind":
  43,397 ±(99.9%) 0,575 ms/op [Average]
  (min, avg, max) = (42,643, 43,397, 43,787), stdev = 0,381
  CI (99.9%): [42,822, 43,973] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 8, patternSize = 32)

# Run progress: 72,61% complete, ETA 04:12:21
# Fork: 1 of 1
# Warmup Iteration   1: 28,980 ms/op
# Warmup Iteration   2: 26,589 ms/op
# Warmup Iteration   3: 25,747 ms/op
# Warmup Iteration   4: 25,554 ms/op
# Warmup Iteration   5: 26,051 ms/op
# Warmup Iteration   6: 25,929 ms/op
# Warmup Iteration   7: 25,763 ms/op
# Warmup Iteration   8: 25,742 ms/op
# Warmup Iteration   9: 26,079 ms/op
# Warmup Iteration  10: 26,062 ms/op
Iteration   1: 26,165 ms/op
Iteration   2: 26,011 ms/op
Iteration   3: 26,158 ms/op
Iteration   4: 26,164 ms/op
Iteration   5: 26,069 ms/op
Iteration   6: 26,149 ms/op
Iteration   7: 26,236 ms/op
Iteration   8: 26,034 ms/op
Iteration   9: 26,137 ms/op
Iteration  10: 26,288 ms/op


Result "benchmarkFind":
  26,141 ±(99.9%) 0,129 ms/op [Average]
  (min, avg, max) = (26,011, 26,141, 26,288), stdev = 0,085
  CI (99.9%): [26,012, 26,270] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 8, patternSize = 64)

# Run progress: 72,66% complete, ETA 04:11:54
# Fork: 1 of 1
# Warmup Iteration   1: 19,913 ms/op
# Warmup Iteration   2: 18,327 ms/op
# Warmup Iteration   3: 17,831 ms/op
# Warmup Iteration   4: 17,641 ms/op
# Warmup Iteration   5: 17,703 ms/op
# Warmup Iteration   6: 17,636 ms/op
# Warmup Iteration   7: 17,704 ms/op
# Warmup Iteration   8: 17,682 ms/op
# Warmup Iteration   9: 17,554 ms/op
# Warmup Iteration  10: 17,714 ms/op
Iteration   1: 17,882 ms/op
Iteration   2: 17,926 ms/op
Iteration   3: 17,885 ms/op
Iteration   4: 17,869 ms/op
Iteration   5: 18,021 ms/op
Iteration   6: 20,112 ms/op
Iteration   7: 17,750 ms/op
Iteration   8: 17,717 ms/op
Iteration   9: 17,479 ms/op
Iteration  10: 17,799 ms/op


Result "benchmarkFind":
  18,044 ±(99.9%) 1,121 ms/op [Average]
  (min, avg, max) = (17,479, 18,044, 20,112), stdev = 0,741
  CI (99.9%): [16,923, 19,165] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 8, patternSize = 128)

# Run progress: 72,70% complete, ETA 04:11:27
# Fork: 1 of 1
# Warmup Iteration   1: 15,517 ms/op
# Warmup Iteration   2: 14,305 ms/op
# Warmup Iteration   3: 13,915 ms/op
# Warmup Iteration   4: 13,951 ms/op
# Warmup Iteration   5: 13,994 ms/op
# Warmup Iteration   6: 13,950 ms/op
# Warmup Iteration   7: 13,935 ms/op
# Warmup Iteration   8: 13,941 ms/op
# Warmup Iteration   9: 13,926 ms/op
# Warmup Iteration  10: 14,014 ms/op
Iteration   1: 13,914 ms/op
Iteration   2: 14,154 ms/op
Iteration   3: 14,163 ms/op
Iteration   4: 14,095 ms/op
Iteration   5: 14,152 ms/op
Iteration   6: 14,140 ms/op
Iteration   7: 14,122 ms/op
Iteration   8: 14,226 ms/op
Iteration   9: 14,204 ms/op
Iteration  10: 14,045 ms/op


Result "benchmarkFind":
  14,122 ±(99.9%) 0,135 ms/op [Average]
  (min, avg, max) = (13,914, 14,122, 14,226), stdev = 0,089
  CI (99.9%): [13,987, 14,256] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 8, patternSize = 256)

# Run progress: 72,75% complete, ETA 04:11:00
# Fork: 1 of 1
# Warmup Iteration   1: 14,101 ms/op
# Warmup Iteration   2: 12,766 ms/op
# Warmup Iteration   3: 12,536 ms/op
# Warmup Iteration   4: 12,436 ms/op
# Warmup Iteration   5: 12,475 ms/op
# Warmup Iteration   6: 12,361 ms/op
# Warmup Iteration   7: 12,474 ms/op
# Warmup Iteration   8: 12,376 ms/op
# Warmup Iteration   9: 12,396 ms/op
# Warmup Iteration  10: 12,464 ms/op
Iteration   1: 12,506 ms/op
Iteration   2: 12,695 ms/op
Iteration   3: 12,616 ms/op
Iteration   4: 12,591 ms/op
Iteration   5: 12,670 ms/op
Iteration   6: 12,639 ms/op
Iteration   7: 12,602 ms/op
Iteration   8: 12,663 ms/op
Iteration   9: 12,715 ms/op
Iteration  10: 12,669 ms/op


Result "benchmarkFind":
  12,637 ±(99.9%) 0,092 ms/op [Average]
  (min, avg, max) = (12,506, 12,637, 12,715), stdev = 0,061
  CI (99.9%): [12,545, 12,729] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 32, patternSize = 2)

# Run progress: 72,79% complete, ETA 04:10:33
# Fork: 1 of 1
# Warmup Iteration   1: 258,901 ms/op
# Warmup Iteration   2: 236,636 ms/op
# Warmup Iteration   3: 241,689 ms/op
# Warmup Iteration   4: 231,421 ms/op
# Warmup Iteration   5: 229,051 ms/op
# Warmup Iteration   6: 229,287 ms/op
# Warmup Iteration   7: 229,031 ms/op
# Warmup Iteration   8: 229,573 ms/op
# Warmup Iteration   9: 230,586 ms/op
# Warmup Iteration  10: 232,891 ms/op
Iteration   1: 264,029 ms/op
Iteration   2: 230,655 ms/op
Iteration   3: 228,222 ms/op
Iteration   4: 230,883 ms/op
Iteration   5: 229,206 ms/op
Iteration   6: 228,284 ms/op
Iteration   7: 227,287 ms/op
Iteration   8: 227,414 ms/op
Iteration   9: 229,530 ms/op
Iteration  10: 229,706 ms/op


Result "benchmarkFind":
  232,521 ±(99.9%) 16,841 ms/op [Average]
  (min, avg, max) = (227,287, 232,521, 264,029), stdev = 11,139
  CI (99.9%): [215,681, 249,362] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 32, patternSize = 4)

# Run progress: 72,84% complete, ETA 04:10:07
# Fork: 1 of 1
# Warmup Iteration   1: 151,989 ms/op
# Warmup Iteration   2: 144,414 ms/op
# Warmup Iteration   3: 141,349 ms/op
# Warmup Iteration   4: 139,261 ms/op
# Warmup Iteration   5: 139,452 ms/op
# Warmup Iteration   6: 140,383 ms/op
# Warmup Iteration   7: 139,943 ms/op
# Warmup Iteration   8: 140,261 ms/op
# Warmup Iteration   9: 141,495 ms/op
# Warmup Iteration  10: 141,066 ms/op
Iteration   1: 142,036 ms/op
Iteration   2: 140,692 ms/op
Iteration   3: 140,970 ms/op
Iteration   4: 141,476 ms/op
Iteration   5: 140,002 ms/op
Iteration   6: 140,090 ms/op
Iteration   7: 140,177 ms/op
Iteration   8: 139,465 ms/op
Iteration   9: 140,010 ms/op
Iteration  10: 138,801 ms/op


Result "benchmarkFind":
  140,372 ±(99.9%) 1,436 ms/op [Average]
  (min, avg, max) = (138,801, 140,372, 142,036), stdev = 0,950
  CI (99.9%): [138,936, 141,808] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 32, patternSize = 8)

# Run progress: 72,89% complete, ETA 04:09:41
# Fork: 1 of 1
# Warmup Iteration   1: 105,258 ms/op
# Warmup Iteration   2: 100,301 ms/op
# Warmup Iteration   3: 96,833 ms/op
# Warmup Iteration   4: 97,847 ms/op
# Warmup Iteration   5: 97,659 ms/op
# Warmup Iteration   6: 97,706 ms/op
# Warmup Iteration   7: 97,469 ms/op
# Warmup Iteration   8: 98,686 ms/op
# Warmup Iteration   9: 98,341 ms/op
# Warmup Iteration  10: 100,353 ms/op
Iteration   1: 100,700 ms/op
Iteration   2: 99,463 ms/op
Iteration   3: 100,345 ms/op
Iteration   4: 100,184 ms/op
Iteration   5: 99,779 ms/op
Iteration   6: 101,336 ms/op
Iteration   7: 100,793 ms/op
Iteration   8: 100,611 ms/op
Iteration   9: 101,816 ms/op
Iteration  10: 102,037 ms/op


Result "benchmarkFind":
  100,706 ±(99.9%) 1,257 ms/op [Average]
  (min, avg, max) = (99,463, 100,706, 102,037), stdev = 0,832
  CI (99.9%): [99,449, 101,964] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 32, patternSize = 16)

# Run progress: 72,93% complete, ETA 04:09:14
# Fork: 1 of 1
# Warmup Iteration   1: 70,981 ms/op
# Warmup Iteration   2: 65,923 ms/op
# Warmup Iteration   3: 73,495 ms/op
# Warmup Iteration   4: 64,782 ms/op
# Warmup Iteration   5: 64,773 ms/op
# Warmup Iteration   6: 65,737 ms/op
# Warmup Iteration   7: 65,047 ms/op
# Warmup Iteration   8: 65,659 ms/op
# Warmup Iteration   9: 65,315 ms/op
# Warmup Iteration  10: 65,416 ms/op
Iteration   1: 65,105 ms/op
Iteration   2: 65,919 ms/op
Iteration   3: 65,380 ms/op
Iteration   4: 65,603 ms/op
Iteration   5: 65,621 ms/op
Iteration   6: 65,933 ms/op
Iteration   7: 65,826 ms/op
Iteration   8: 65,483 ms/op
Iteration   9: 66,224 ms/op
Iteration  10: 65,561 ms/op


Result "benchmarkFind":
  65,665 ±(99.9%) 0,483 ms/op [Average]
  (min, avg, max) = (65,105, 65,665, 66,224), stdev = 0,320
  CI (99.9%): [65,182, 66,149] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 32, patternSize = 32)

# Run progress: 72,98% complete, ETA 04:08:47
# Fork: 1 of 1
# Warmup Iteration   1: 52,289 ms/op
# Warmup Iteration   2: 47,502 ms/op
# Warmup Iteration   3: 46,572 ms/op
# Warmup Iteration   4: 46,843 ms/op
# Warmup Iteration   5: 46,717 ms/op
# Warmup Iteration   6: 46,640 ms/op
# Warmup Iteration   7: 46,289 ms/op
# Warmup Iteration   8: 46,434 ms/op
# Warmup Iteration   9: 46,668 ms/op
# Warmup Iteration  10: 47,457 ms/op
Iteration   1: 46,239 ms/op
Iteration   2: 46,812 ms/op
Iteration   3: 46,408 ms/op
Iteration   4: 46,761 ms/op
Iteration   5: 46,840 ms/op
Iteration   6: 47,629 ms/op
Iteration   7: 47,302 ms/op
Iteration   8: 47,275 ms/op
Iteration   9: 46,922 ms/op
Iteration  10: 46,861 ms/op


Result "benchmarkFind":
  46,905 ±(99.9%) 0,626 ms/op [Average]
  (min, avg, max) = (46,239, 46,905, 47,629), stdev = 0,414
  CI (99.9%): [46,278, 47,531] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 32, patternSize = 64)

# Run progress: 73,02% complete, ETA 04:08:21
# Fork: 1 of 1
# Warmup Iteration   1: 50,118 ms/op
# Warmup Iteration   2: 46,515 ms/op
# Warmup Iteration   3: 45,149 ms/op
# Warmup Iteration   4: 45,420 ms/op
# Warmup Iteration   5: 45,113 ms/op
# Warmup Iteration   6: 45,673 ms/op
# Warmup Iteration   7: 45,053 ms/op
# Warmup Iteration   8: 45,302 ms/op
# Warmup Iteration   9: 45,159 ms/op
# Warmup Iteration  10: 45,341 ms/op
Iteration   1: 45,664 ms/op
Iteration   2: 45,869 ms/op
Iteration   3: 45,659 ms/op
Iteration   4: 45,831 ms/op
Iteration   5: 45,767 ms/op
Iteration   6: 45,393 ms/op
Iteration   7: 45,532 ms/op
Iteration   8: 45,643 ms/op
Iteration   9: 50,919 ms/op
Iteration  10: 45,430 ms/op


Result "benchmarkFind":
  46,171 ±(99.9%) 2,534 ms/op [Average]
  (min, avg, max) = (45,393, 46,171, 50,919), stdev = 1,676
  CI (99.9%): [43,637, 48,704] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 32, patternSize = 128)

# Run progress: 73,07% complete, ETA 04:07:54
# Fork: 1 of 1
# Warmup Iteration   1: 49,063 ms/op
# Warmup Iteration   2: 45,656 ms/op
# Warmup Iteration   3: 44,200 ms/op
# Warmup Iteration   4: 44,295 ms/op
# Warmup Iteration   5: 44,133 ms/op
# Warmup Iteration   6: 44,322 ms/op
# Warmup Iteration   7: 44,568 ms/op
# Warmup Iteration   8: 44,003 ms/op
# Warmup Iteration   9: 44,338 ms/op
# Warmup Iteration  10: 44,599 ms/op
Iteration   1: 44,773 ms/op
Iteration   2: 45,275 ms/op
Iteration   3: 44,842 ms/op
Iteration   4: 44,779 ms/op
Iteration   5: 44,740 ms/op
Iteration   6: 45,130 ms/op
Iteration   7: 45,619 ms/op
Iteration   8: 46,001 ms/op
Iteration   9: 46,187 ms/op
Iteration  10: 45,508 ms/op


Result "benchmarkFind":
  45,286 ±(99.9%) 0,801 ms/op [Average]
  (min, avg, max) = (44,740, 45,286, 46,187), stdev = 0,530
  CI (99.9%): [44,485, 46,086] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 32, patternSize = 256)

# Run progress: 73,12% complete, ETA 04:07:27
# Fork: 1 of 1
# Warmup Iteration   1: 52,145 ms/op
# Warmup Iteration   2: 48,402 ms/op
# Warmup Iteration   3: 47,726 ms/op
# Warmup Iteration   4: 47,452 ms/op
# Warmup Iteration   5: 47,248 ms/op
# Warmup Iteration   6: 47,074 ms/op
# Warmup Iteration   7: 47,260 ms/op
# Warmup Iteration   8: 47,228 ms/op
# Warmup Iteration   9: 47,242 ms/op
# Warmup Iteration  10: 47,168 ms/op
Iteration   1: 46,918 ms/op
Iteration   2: 47,656 ms/op
Iteration   3: 46,950 ms/op
Iteration   4: 47,429 ms/op
Iteration   5: 47,158 ms/op
Iteration   6: 47,091 ms/op
Iteration   7: 47,423 ms/op
Iteration   8: 46,775 ms/op
Iteration   9: 47,096 ms/op
Iteration  10: 47,119 ms/op


Result "benchmarkFind":
  47,162 ±(99.9%) 0,406 ms/op [Average]
  (min, avg, max) = (46,775, 47,162, 47,656), stdev = 0,269
  CI (99.9%): [46,756, 47,568] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 128, patternSize = 2)

# Run progress: 73,16% complete, ETA 04:07:00
# Fork: 1 of 1
# Warmup Iteration   1: 798,524 ms/op
# Warmup Iteration   2: 733,497 ms/op
# Warmup Iteration   3: 728,875 ms/op
# Warmup Iteration   4: 727,133 ms/op
# Warmup Iteration   5: 728,104 ms/op
# Warmup Iteration   6: 728,012 ms/op
# Warmup Iteration   7: 727,540 ms/op
# Warmup Iteration   8: 721,853 ms/op
# Warmup Iteration   9: 726,399 ms/op
# Warmup Iteration  10: 774,915 ms/op
Iteration   1: 728,264 ms/op
Iteration   2: 724,704 ms/op
Iteration   3: 726,663 ms/op
Iteration   4: 745,094 ms/op
Iteration   5: 736,409 ms/op
Iteration   6: 732,881 ms/op
Iteration   7: 729,999 ms/op
Iteration   8: 732,800 ms/op
Iteration   9: 735,350 ms/op
Iteration  10: 729,907 ms/op


Result "benchmarkFind":
  732,207 ±(99.9%) 8,832 ms/op [Average]
  (min, avg, max) = (724,704, 732,207, 745,094), stdev = 5,842
  CI (99.9%): [723,375, 741,040] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 128, patternSize = 4)

# Run progress: 73,21% complete, ETA 04:06:37
# Fork: 1 of 1
# Warmup Iteration   1: 231,231 ms/op
# Warmup Iteration   2: 208,748 ms/op
# Warmup Iteration   3: 205,033 ms/op
# Warmup Iteration   4: 205,399 ms/op
# Warmup Iteration   5: 208,546 ms/op
# Warmup Iteration   6: 207,162 ms/op
# Warmup Iteration   7: 206,897 ms/op
# Warmup Iteration   8: 208,216 ms/op
# Warmup Iteration   9: 208,547 ms/op
# Warmup Iteration  10: 207,995 ms/op
Iteration   1: 210,448 ms/op
Iteration   2: 208,015 ms/op
Iteration   3: 208,574 ms/op
Iteration   4: 209,119 ms/op
Iteration   5: 207,657 ms/op
Iteration   6: 207,154 ms/op
Iteration   7: 208,938 ms/op
Iteration   8: 208,435 ms/op
Iteration   9: 208,591 ms/op
Iteration  10: 208,227 ms/op


Result "benchmarkFind":
  208,516 ±(99.9%) 1,354 ms/op [Average]
  (min, avg, max) = (207,154, 208,516, 210,448), stdev = 0,895
  CI (99.9%): [207,162, 209,870] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 128, patternSize = 8)

# Run progress: 73,25% complete, ETA 04:06:10
# Fork: 1 of 1
# Warmup Iteration   1: 195,620 ms/op
# Warmup Iteration   2: 176,386 ms/op
# Warmup Iteration   3: 174,161 ms/op
# Warmup Iteration   4: 174,045 ms/op
# Warmup Iteration   5: 174,489 ms/op
# Warmup Iteration   6: 176,912 ms/op
# Warmup Iteration   7: 175,419 ms/op
# Warmup Iteration   8: 174,976 ms/op
# Warmup Iteration   9: 175,277 ms/op
# Warmup Iteration  10: 177,002 ms/op
Iteration   1: 175,435 ms/op
Iteration   2: 176,385 ms/op
Iteration   3: 175,640 ms/op
Iteration   4: 176,408 ms/op
Iteration   5: 178,179 ms/op
Iteration   6: 177,747 ms/op
Iteration   7: 185,774 ms/op
Iteration   8: 187,215 ms/op
Iteration   9: 178,374 ms/op
Iteration  10: 176,876 ms/op


Result "benchmarkFind":
  178,803 ±(99.9%) 6,328 ms/op [Average]
  (min, avg, max) = (175,435, 178,803, 187,215), stdev = 4,186
  CI (99.9%): [172,475, 185,132] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 128, patternSize = 16)

# Run progress: 73,30% complete, ETA 04:05:44
# Fork: 1 of 1
# Warmup Iteration   1: 174,051 ms/op
# Warmup Iteration   2: 165,935 ms/op
# Warmup Iteration   3: 160,991 ms/op
# Warmup Iteration   4: 159,677 ms/op
# Warmup Iteration   5: 160,305 ms/op
# Warmup Iteration   6: 160,740 ms/op
# Warmup Iteration   7: 160,517 ms/op
# Warmup Iteration   8: 161,289 ms/op
# Warmup Iteration   9: 162,626 ms/op
# Warmup Iteration  10: 160,688 ms/op
Iteration   1: 162,165 ms/op
Iteration   2: 161,323 ms/op
Iteration   3: 161,635 ms/op
Iteration   4: 161,774 ms/op
Iteration   5: 162,206 ms/op
Iteration   6: 162,046 ms/op
Iteration   7: 161,832 ms/op
Iteration   8: 161,250 ms/op
Iteration   9: 162,204 ms/op
Iteration  10: 162,173 ms/op


Result "benchmarkFind":
  161,861 ±(99.9%) 0,548 ms/op [Average]
  (min, avg, max) = (161,250, 161,861, 162,206), stdev = 0,362
  CI (99.9%): [161,313, 162,409] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 128, patternSize = 32)

# Run progress: 73,35% complete, ETA 04:05:18
# Fork: 1 of 1
# Warmup Iteration   1: 173,618 ms/op
# Warmup Iteration   2: 160,352 ms/op
# Warmup Iteration   3: 156,946 ms/op
# Warmup Iteration   4: 159,133 ms/op
# Warmup Iteration   5: 158,601 ms/op
# Warmup Iteration   6: 158,391 ms/op
# Warmup Iteration   7: 158,764 ms/op
# Warmup Iteration   8: 158,355 ms/op
# Warmup Iteration   9: 157,925 ms/op
# Warmup Iteration  10: 158,267 ms/op
Iteration   1: 159,251 ms/op
Iteration   2: 158,812 ms/op
Iteration   3: 159,491 ms/op
Iteration   4: 158,936 ms/op
Iteration   5: 159,190 ms/op
Iteration   6: 157,986 ms/op
Iteration   7: 159,143 ms/op
Iteration   8: 160,020 ms/op
Iteration   9: 159,451 ms/op
Iteration  10: 165,165 ms/op


Result "benchmarkFind":
  159,745 ±(99.9%) 2,987 ms/op [Average]
  (min, avg, max) = (157,986, 159,745, 165,165), stdev = 1,976
  CI (99.9%): [156,757, 162,732] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 128, patternSize = 64)

# Run progress: 73,39% complete, ETA 04:04:52
# Fork: 1 of 1
# Warmup Iteration   1: 168,822 ms/op
# Warmup Iteration   2: 152,450 ms/op
# Warmup Iteration   3: 149,834 ms/op
# Warmup Iteration   4: 150,296 ms/op
# Warmup Iteration   5: 149,215 ms/op
# Warmup Iteration   6: 149,496 ms/op
# Warmup Iteration   7: 149,156 ms/op
# Warmup Iteration   8: 149,686 ms/op
# Warmup Iteration   9: 149,347 ms/op
# Warmup Iteration  10: 149,947 ms/op
Iteration   1: 151,541 ms/op
Iteration   2: 170,146 ms/op
Iteration   3: 151,854 ms/op
Iteration   4: 151,118 ms/op
Iteration   5: 151,795 ms/op
Iteration   6: 150,945 ms/op
Iteration   7: 152,354 ms/op
Iteration   8: 151,688 ms/op
Iteration   9: 151,505 ms/op
Iteration  10: 150,064 ms/op


Result "benchmarkFind":
  153,301 ±(99.9%) 8,997 ms/op [Average]
  (min, avg, max) = (150,064, 153,301, 170,146), stdev = 5,951
  CI (99.9%): [144,304, 162,298] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 128, patternSize = 128)

# Run progress: 73,44% complete, ETA 04:04:25
# Fork: 1 of 1
# Warmup Iteration   1: 194,065 ms/op
# Warmup Iteration   2: 180,070 ms/op
# Warmup Iteration   3: 179,814 ms/op
# Warmup Iteration   4: 178,197 ms/op
# Warmup Iteration   5: 176,511 ms/op
# Warmup Iteration   6: 178,954 ms/op
# Warmup Iteration   7: 178,905 ms/op
# Warmup Iteration   8: 178,443 ms/op
# Warmup Iteration   9: 179,600 ms/op
# Warmup Iteration  10: 176,655 ms/op
Iteration   1: 178,424 ms/op
Iteration   2: 177,321 ms/op
Iteration   3: 181,015 ms/op
Iteration   4: 175,405 ms/op
Iteration   5: 179,238 ms/op
Iteration   6: 178,128 ms/op
Iteration   7: 177,164 ms/op
Iteration   8: 177,525 ms/op
Iteration   9: 178,909 ms/op
Iteration  10: 176,331 ms/op


Result "benchmarkFind":
  177,946 ±(99.9%) 2,392 ms/op [Average]
  (min, avg, max) = (175,405, 177,946, 181,015), stdev = 1,582
  CI (99.9%): [175,554, 180,337] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSetHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 128, patternSize = 256)

# Run progress: 73,48% complete, ETA 04:03:59
# Fork: 1 of 1
# Warmup Iteration   1: 184,405 ms/op
# Warmup Iteration   2: 171,793 ms/op
# Warmup Iteration   3: 172,152 ms/op
# Warmup Iteration   4: 167,432 ms/op
# Warmup Iteration   5: 169,295 ms/op
# Warmup Iteration   6: 168,352 ms/op
# Warmup Iteration   7: 167,283 ms/op
# Warmup Iteration   8: 166,982 ms/op
# Warmup Iteration   9: 166,683 ms/op
# Warmup Iteration  10: 165,374 ms/op
Iteration   1: 167,040 ms/op
Iteration   2: 167,384 ms/op
Iteration   3: 167,381 ms/op
Iteration   4: 167,261 ms/op
Iteration   5: 166,677 ms/op
Iteration   6: 165,424 ms/op
Iteration   7: 164,264 ms/op
Iteration   8: 165,431 ms/op
Iteration   9: 166,151 ms/op
Iteration  10: 165,585 ms/op


Result "benchmarkFind":
  166,260 ±(99.9%) 1,605 ms/op [Average]
  (min, avg, max) = (164,264, 166,260, 167,384), stdev = 1,062
  CI (99.9%): [164,655, 167,865] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCShiftAndBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternSize = 2)

# Run progress: 73,53% complete, ETA 04:03:33
# Fork: 1 of 1
# Warmup Iteration   1: 0,179 ms/op
# Warmup Iteration   2: 0,162 ms/op
# Warmup Iteration   3: 0,161 ms/op
# Warmup Iteration   4: 0,161 ms/op
# Warmup Iteration   5: 0,161 ms/op
# Warmup Iteration   6: 0,180 ms/op
# Warmup Iteration   7: 0,164 ms/op
# Warmup Iteration   8: 0,163 ms/op
# Warmup Iteration   9: 0,164 ms/op
# Warmup Iteration  10: 0,160 ms/op
Iteration   1: 0,164 ms/op
Iteration   2: 0,166 ms/op
Iteration   3: 0,161 ms/op
Iteration   4: 0,162 ms/op
Iteration   5: 0,162 ms/op
Iteration   6: 0,163 ms/op
Iteration   7: 0,163 ms/op
Iteration   8: 0,164 ms/op
Iteration   9: 0,161 ms/op
Iteration  10: 0,168 ms/op


Result "benchmarkFind":
  0,163 ±(99.9%) 0,003 ms/op [Average]
  (min, avg, max) = (0,161, 0,163, 0,168), stdev = 0,002
  CI (99.9%): [0,160, 0,167] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCShiftAndBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternSize = 4)

# Run progress: 73,58% complete, ETA 04:03:05
# Fork: 1 of 1
# Warmup Iteration   1: 0,430 ms/op
# Warmup Iteration   2: 0,395 ms/op
# Warmup Iteration   3: 0,387 ms/op
# Warmup Iteration   4: 0,388 ms/op
# Warmup Iteration   5: 0,388 ms/op
# Warmup Iteration   6: 0,387 ms/op
# Warmup Iteration   7: 0,391 ms/op
# Warmup Iteration   8: 0,389 ms/op
# Warmup Iteration   9: 0,392 ms/op
# Warmup Iteration  10: 0,393 ms/op
Iteration   1: 0,392 ms/op
Iteration   2: 0,393 ms/op
Iteration   3: 0,393 ms/op
Iteration   4: 0,392 ms/op
Iteration   5: 0,397 ms/op
Iteration   6: 0,395 ms/op
Iteration   7: 0,393 ms/op
Iteration   8: 0,395 ms/op
Iteration   9: 0,394 ms/op
Iteration  10: 0,396 ms/op


Result "benchmarkFind":
  0,394 ±(99.9%) 0,003 ms/op [Average]
  (min, avg, max) = (0,392, 0,394, 0,397), stdev = 0,002
  CI (99.9%): [0,392, 0,397] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCShiftAndBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternSize = 8)

# Run progress: 73,62% complete, ETA 04:02:38
# Fork: 1 of 1
# Warmup Iteration   1: 13,933 ms/op
# Warmup Iteration   2: 12,694 ms/op
# Warmup Iteration   3: 12,537 ms/op
# Warmup Iteration   4: 12,566 ms/op
# Warmup Iteration   5: 12,911 ms/op
# Warmup Iteration   6: 13,088 ms/op
# Warmup Iteration   7: 12,688 ms/op
# Warmup Iteration   8: 12,677 ms/op
# Warmup Iteration   9: 12,526 ms/op
# Warmup Iteration  10: 12,484 ms/op
Iteration   1: 12,504 ms/op
Iteration   2: 12,576 ms/op
Iteration   3: 12,586 ms/op
Iteration   4: 12,461 ms/op
Iteration   5: 12,462 ms/op
Iteration   6: 12,514 ms/op
Iteration   7: 12,522 ms/op
Iteration   8: 12,545 ms/op
Iteration   9: 12,417 ms/op
Iteration  10: 12,470 ms/op


Result "benchmarkFind":
  12,506 ±(99.9%) 0,082 ms/op [Average]
  (min, avg, max) = (12,417, 12,506, 12,586), stdev = 0,054
  CI (99.9%): [12,424, 12,588] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCShiftAndBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternSize = 16)

# Run progress: 73,67% complete, ETA 04:02:11
# Fork: 1 of 1
# Warmup Iteration   1: 136,424 ms/op
# Warmup Iteration   2: 130,791 ms/op
# Warmup Iteration   3: 137,064 ms/op
# Warmup Iteration   4: 132,169 ms/op
# Warmup Iteration   5: 125,854 ms/op
# Warmup Iteration   6: 126,040 ms/op
# Warmup Iteration   7: 126,057 ms/op
# Warmup Iteration   8: 126,801 ms/op
# Warmup Iteration   9: 126,913 ms/op
# Warmup Iteration  10: 126,540 ms/op
Iteration   1: 126,114 ms/op
Iteration   2: 126,273 ms/op
Iteration   3: 126,247 ms/op
Iteration   4: 127,097 ms/op
Iteration   5: 126,073 ms/op
Iteration   6: 126,940 ms/op
Iteration   7: 125,700 ms/op
Iteration   8: 127,477 ms/op
Iteration   9: 126,543 ms/op
Iteration  10: 125,614 ms/op


Result "benchmarkFind":
  126,408 ±(99.9%) 0,915 ms/op [Average]
  (min, avg, max) = (125,614, 126,408, 127,477), stdev = 0,605
  CI (99.9%): [125,493, 127,322] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCShiftAndBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternSize = 32)

# Run progress: 73,71% complete, ETA 04:01:45
# Fork: 1 of 1
# Warmup Iteration   1: 131,703 ms/op
# Warmup Iteration   2: 126,362 ms/op
# Warmup Iteration   3: 125,893 ms/op
# Warmup Iteration   4: 125,561 ms/op
# Warmup Iteration   5: 125,615 ms/op
# Warmup Iteration   6: 126,210 ms/op
# Warmup Iteration   7: 125,800 ms/op
# Warmup Iteration   8: 126,518 ms/op
# Warmup Iteration   9: 125,634 ms/op
# Warmup Iteration  10: 126,107 ms/op
Iteration   1: 128,454 ms/op
Iteration   2: 129,086 ms/op
Iteration   3: 128,766 ms/op
Iteration   4: 128,648 ms/op
Iteration   5: 128,735 ms/op
Iteration   6: 129,656 ms/op
Iteration   7: 129,746 ms/op
Iteration   8: 129,275 ms/op
Iteration   9: 128,700 ms/op
Iteration  10: 128,519 ms/op


Result "benchmarkFind":
  128,958 ±(99.9%) 0,698 ms/op [Average]
  (min, avg, max) = (128,454, 128,958, 129,746), stdev = 0,462
  CI (99.9%): [128,260, 129,657] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCShiftAndBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternSize = 64)

# Run progress: 73,76% complete, ETA 04:01:18
# Fork: 1 of 1
# Warmup Iteration   1: 133,180 ms/op
# Warmup Iteration   2: 126,181 ms/op
# Warmup Iteration   3: 125,632 ms/op
# Warmup Iteration   4: 126,128 ms/op
# Warmup Iteration   5: 126,937 ms/op
# Warmup Iteration   6: 125,882 ms/op
# Warmup Iteration   7: 125,911 ms/op
# Warmup Iteration   8: 126,321 ms/op
# Warmup Iteration   9: 125,789 ms/op
# Warmup Iteration  10: 125,256 ms/op
Iteration   1: 128,573 ms/op
Iteration   2: 127,178 ms/op
Iteration   3: 127,376 ms/op
Iteration   4: 126,649 ms/op
Iteration   5: 127,383 ms/op
Iteration   6: 127,786 ms/op
Iteration   7: 127,446 ms/op
Iteration   8: 126,548 ms/op
Iteration   9: 127,665 ms/op
Iteration  10: 137,730 ms/op


Result "benchmarkFind":
  128,433 ±(99.9%) 5,013 ms/op [Average]
  (min, avg, max) = (126,548, 128,433, 137,730), stdev = 3,316
  CI (99.9%): [123,420, 133,447] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCShiftAndBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternSize = 128)

# Run progress: 73,81% complete, ETA 04:00:51
# Fork: 1 of 1
# Warmup Iteration   1: 714,140 ms/op
# Warmup Iteration   2: 699,884 ms/op
# Warmup Iteration   3: 699,717 ms/op
# Warmup Iteration   4: 695,119 ms/op
# Warmup Iteration   5: 694,524 ms/op
# Warmup Iteration   6: 696,606 ms/op
# Warmup Iteration   7: 696,932 ms/op
# Warmup Iteration   8: 696,248 ms/op
# Warmup Iteration   9: 692,442 ms/op
# Warmup Iteration  10: 700,867 ms/op
Iteration   1: 697,116 ms/op
Iteration   2: 697,072 ms/op
Iteration   3: 697,116 ms/op
Iteration   4: 694,748 ms/op
Iteration   5: 696,489 ms/op
Iteration   6: 691,369 ms/op
Iteration   7: 693,375 ms/op
Iteration   8: 692,648 ms/op
Iteration   9: 698,412 ms/op
Iteration  10: 695,902 ms/op


Result "benchmarkFind":
  695,425 ±(99.9%) 3,474 ms/op [Average]
  (min, avg, max) = (691,369, 695,425, 698,412), stdev = 2,298
  CI (99.9%): [691,950, 698,899] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCShiftAndBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternSize = 256)

# Run progress: 73,85% complete, ETA 04:00:27
# Fork: 1 of 1
# Warmup Iteration   1: 1056,639 ms/op
# Warmup Iteration   2: 1021,152 ms/op
# Warmup Iteration   3: 1019,678 ms/op
# Warmup Iteration   4: 1020,931 ms/op
# Warmup Iteration   5: 1018,498 ms/op
# Warmup Iteration   6: 1019,005 ms/op
# Warmup Iteration   7: 1018,857 ms/op
# Warmup Iteration   8: 1019,346 ms/op
# Warmup Iteration   9: 1018,582 ms/op
# Warmup Iteration  10: 1018,087 ms/op
Iteration   1: 1013,084 ms/op
Iteration   2: 1019,515 ms/op
Iteration   3: 1018,391 ms/op
Iteration   4: 1019,643 ms/op
Iteration   5: 1019,516 ms/op
Iteration   6: 1020,936 ms/op
Iteration   7: 1018,244 ms/op
Iteration   8: 1018,295 ms/op
Iteration   9: 1019,846 ms/op
Iteration  10: 1019,444 ms/op


Result "benchmarkFind":
  1018,691 ±(99.9%) 3,230 ms/op [Average]
  (min, avg, max) = (1013,084, 1018,691, 1020,936), stdev = 2,137
  CI (99.9%): [1015,461, 1021,922] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCShiftAndBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternSize = 2)

# Run progress: 73,90% complete, ETA 04:00:00
# Fork: 1 of 1
# Warmup Iteration   1: 0,521 ms/op
# Warmup Iteration   2: 0,485 ms/op
# Warmup Iteration   3: 0,476 ms/op
# Warmup Iteration   4: 0,473 ms/op
# Warmup Iteration   5: 0,480 ms/op
# Warmup Iteration   6: 0,477 ms/op
# Warmup Iteration   7: 0,477 ms/op
# Warmup Iteration   8: 0,474 ms/op
# Warmup Iteration   9: 0,555 ms/op
# Warmup Iteration  10: 0,476 ms/op
Iteration   1: 0,472 ms/op
Iteration   2: 0,474 ms/op
Iteration   3: 0,474 ms/op
Iteration   4: 0,478 ms/op
Iteration   5: 0,483 ms/op
Iteration   6: 0,484 ms/op
Iteration   7: 0,487 ms/op
Iteration   8: 0,480 ms/op
Iteration   9: 0,480 ms/op
Iteration  10: 0,485 ms/op


Result "benchmarkFind":
  0,480 ±(99.9%) 0,008 ms/op [Average]
  (min, avg, max) = (0,472, 0,480, 0,487), stdev = 0,005
  CI (99.9%): [0,472, 0,488] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCShiftAndBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternSize = 4)

# Run progress: 73,94% complete, ETA 03:59:33
# Fork: 1 of 1
# Warmup Iteration   1: 18,808 ms/op
# Warmup Iteration   2: 17,482 ms/op
# Warmup Iteration   3: 17,536 ms/op
# Warmup Iteration   4: 17,315 ms/op
# Warmup Iteration   5: 17,326 ms/op
# Warmup Iteration   6: 17,378 ms/op
# Warmup Iteration   7: 17,593 ms/op
# Warmup Iteration   8: 17,428 ms/op
# Warmup Iteration   9: 17,354 ms/op
# Warmup Iteration  10: 17,431 ms/op
Iteration   1: 17,357 ms/op
Iteration   2: 17,369 ms/op
Iteration   3: 17,435 ms/op
Iteration   4: 17,375 ms/op
Iteration   5: 17,347 ms/op
Iteration   6: 17,359 ms/op
Iteration   7: 17,398 ms/op
Iteration   8: 17,476 ms/op
Iteration   9: 17,366 ms/op
Iteration  10: 17,371 ms/op


Result "benchmarkFind":
  17,385 ±(99.9%) 0,061 ms/op [Average]
  (min, avg, max) = (17,347, 17,385, 17,476), stdev = 0,040
  CI (99.9%): [17,324, 17,446] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCShiftAndBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternSize = 8)

# Run progress: 73,99% complete, ETA 03:59:06
# Fork: 1 of 1
# Warmup Iteration   1: 157,870 ms/op
# Warmup Iteration   2: 147,720 ms/op
# Warmup Iteration   3: 157,638 ms/op
# Warmup Iteration   4: 164,128 ms/op
# Warmup Iteration   5: 164,722 ms/op
# Warmup Iteration   6: 165,842 ms/op
# Warmup Iteration   7: 163,737 ms/op
# Warmup Iteration   8: 165,684 ms/op
# Warmup Iteration   9: 165,324 ms/op
# Warmup Iteration  10: 164,289 ms/op
Iteration   1: 163,989 ms/op
Iteration   2: 165,498 ms/op
Iteration   3: 162,954 ms/op
Iteration   4: 162,755 ms/op
Iteration   5: 162,907 ms/op
Iteration   6: 164,267 ms/op
Iteration   7: 162,930 ms/op
Iteration   8: 162,981 ms/op
Iteration   9: 162,891 ms/op
Iteration  10: 163,316 ms/op


Result "benchmarkFind":
  163,449 ±(99.9%) 1,333 ms/op [Average]
  (min, avg, max) = (162,755, 163,449, 165,498), stdev = 0,882
  CI (99.9%): [162,116, 164,782] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCShiftAndBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternSize = 16)

# Run progress: 74,03% complete, ETA 03:58:40
# Fork: 1 of 1
# Warmup Iteration   1: 140,834 ms/op
# Warmup Iteration   2: 133,773 ms/op
# Warmup Iteration   3: 143,615 ms/op
# Warmup Iteration   4: 135,153 ms/op
# Warmup Iteration   5: 132,994 ms/op
# Warmup Iteration   6: 133,466 ms/op
# Warmup Iteration   7: 134,571 ms/op
# Warmup Iteration   8: 134,897 ms/op
# Warmup Iteration   9: 133,622 ms/op
# Warmup Iteration  10: 134,200 ms/op
Iteration   1: 136,857 ms/op
Iteration   2: 138,747 ms/op
Iteration   3: 138,365 ms/op
Iteration   4: 138,005 ms/op
Iteration   5: 139,650 ms/op
Iteration   6: 139,102 ms/op
Iteration   7: 138,947 ms/op
Iteration   8: 138,692 ms/op
Iteration   9: 138,102 ms/op
Iteration  10: 138,239 ms/op


Result "benchmarkFind":
  138,470 ±(99.9%) 1,145 ms/op [Average]
  (min, avg, max) = (136,857, 138,470, 139,650), stdev = 0,757
  CI (99.9%): [137,325, 139,616] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCShiftAndBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternSize = 32)

# Run progress: 74,08% complete, ETA 03:58:14
# Fork: 1 of 1
# Warmup Iteration   1: 132,310 ms/op
# Warmup Iteration   2: 127,064 ms/op
# Warmup Iteration   3: 126,421 ms/op
# Warmup Iteration   4: 125,888 ms/op
# Warmup Iteration   5: 125,647 ms/op
# Warmup Iteration   6: 125,406 ms/op
# Warmup Iteration   7: 125,581 ms/op
# Warmup Iteration   8: 125,741 ms/op
# Warmup Iteration   9: 126,397 ms/op
# Warmup Iteration  10: 125,643 ms/op
Iteration   1: 128,739 ms/op
Iteration   2: 127,572 ms/op
Iteration   3: 127,417 ms/op
Iteration   4: 128,939 ms/op
Iteration   5: 128,455 ms/op
Iteration   6: 128,641 ms/op
Iteration   7: 128,450 ms/op
Iteration   8: 128,458 ms/op
Iteration   9: 129,061 ms/op
Iteration  10: 127,007 ms/op


Result "benchmarkFind":
  128,274 ±(99.9%) 1,050 ms/op [Average]
  (min, avg, max) = (127,007, 128,274, 129,061), stdev = 0,694
  CI (99.9%): [127,224, 129,324] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCShiftAndBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternSize = 64)

# Run progress: 74,13% complete, ETA 03:57:47
# Fork: 1 of 1
# Warmup Iteration   1: 131,040 ms/op
# Warmup Iteration   2: 125,667 ms/op
# Warmup Iteration   3: 125,789 ms/op
# Warmup Iteration   4: 125,066 ms/op
# Warmup Iteration   5: 127,391 ms/op
# Warmup Iteration   6: 125,824 ms/op
# Warmup Iteration   7: 126,376 ms/op
# Warmup Iteration   8: 125,917 ms/op
# Warmup Iteration   9: 126,886 ms/op
# Warmup Iteration  10: 126,581 ms/op
Iteration   1: 129,519 ms/op
Iteration   2: 126,889 ms/op
Iteration   3: 126,365 ms/op
Iteration   4: 128,165 ms/op
Iteration   5: 127,203 ms/op
Iteration   6: 127,452 ms/op
Iteration   7: 127,831 ms/op
Iteration   8: 127,002 ms/op
Iteration   9: 143,683 ms/op
Iteration  10: 126,060 ms/op


Result "benchmarkFind":
  129,017 ±(99.9%) 7,930 ms/op [Average]
  (min, avg, max) = (126,060, 129,017, 143,683), stdev = 5,245
  CI (99.9%): [121,087, 136,946] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCShiftAndBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternSize = 128)

# Run progress: 74,17% complete, ETA 03:57:21
# Fork: 1 of 1
# Warmup Iteration   1: 724,196 ms/op
# Warmup Iteration   2: 696,669 ms/op
# Warmup Iteration   3: 694,739 ms/op
# Warmup Iteration   4: 696,726 ms/op
# Warmup Iteration   5: 697,188 ms/op
# Warmup Iteration   6: 696,715 ms/op
# Warmup Iteration   7: 698,878 ms/op
# Warmup Iteration   8: 693,483 ms/op
# Warmup Iteration   9: 696,965 ms/op
# Warmup Iteration  10: 693,489 ms/op
Iteration   1: 697,386 ms/op
Iteration   2: 694,677 ms/op
Iteration   3: 695,279 ms/op
Iteration   4: 697,052 ms/op
Iteration   5: 696,319 ms/op
Iteration   6: 692,848 ms/op
Iteration   7: 693,873 ms/op
Iteration   8: 694,874 ms/op
Iteration   9: 694,353 ms/op
Iteration  10: 697,115 ms/op


Result "benchmarkFind":
  695,378 ±(99.9%) 2,321 ms/op [Average]
  (min, avg, max) = (692,848, 695,378, 697,386), stdev = 1,535
  CI (99.9%): [693,057, 697,699] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCShiftAndBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternSize = 256)

# Run progress: 74,22% complete, ETA 03:56:57
# Fork: 1 of 1
# Warmup Iteration   1: 1060,716 ms/op
# Warmup Iteration   2: 1032,325 ms/op
# Warmup Iteration   3: 1030,375 ms/op
# Warmup Iteration   4: 1039,615 ms/op
# Warmup Iteration   5: 1043,536 ms/op
# Warmup Iteration   6: 1028,630 ms/op
# Warmup Iteration   7: 1033,631 ms/op
# Warmup Iteration   8: 1033,344 ms/op
# Warmup Iteration   9: 1039,308 ms/op
# Warmup Iteration  10: 1038,284 ms/op
Iteration   1: 1035,355 ms/op
Iteration   2: 1033,424 ms/op
Iteration   3: 1045,270 ms/op
Iteration   4: 1039,727 ms/op
Iteration   5: 1033,077 ms/op
Iteration   6: 1029,598 ms/op
Iteration   7: 1040,418 ms/op
Iteration   8: 1039,065 ms/op
Iteration   9: 1039,924 ms/op
Iteration  10: 1030,120 ms/op


Result "benchmarkFind":
  1036,598 ±(99.9%) 7,671 ms/op [Average]
  (min, avg, max) = (1029,598, 1036,598, 1045,270), stdev = 5,074
  CI (99.9%): [1028,926, 1044,269] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCShiftAndBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternSize = 2)

# Run progress: 74,26% complete, ETA 03:56:30
# Fork: 1 of 1
# Warmup Iteration   1: 1,857 ms/op
# Warmup Iteration   2: 1,723 ms/op
# Warmup Iteration   3: 1,699 ms/op
# Warmup Iteration   4: 1,688 ms/op
# Warmup Iteration   5: 1,700 ms/op
# Warmup Iteration   6: 1,700 ms/op
# Warmup Iteration   7: 1,691 ms/op
# Warmup Iteration   8: 1,841 ms/op
# Warmup Iteration   9: 1,699 ms/op
# Warmup Iteration  10: 1,698 ms/op
Iteration   1: 1,703 ms/op
Iteration   2: 1,698 ms/op
Iteration   3: 1,701 ms/op
Iteration   4: 1,705 ms/op
Iteration   5: 1,710 ms/op
Iteration   6: 1,702 ms/op
Iteration   7: 1,709 ms/op
Iteration   8: 1,711 ms/op
Iteration   9: 1,699 ms/op
Iteration  10: 1,703 ms/op


Result "benchmarkFind":
  1,704 ±(99.9%) 0,007 ms/op [Average]
  (min, avg, max) = (1,698, 1,704, 1,711), stdev = 0,005
  CI (99.9%): [1,697, 1,711] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCShiftAndBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternSize = 4)

# Run progress: 74,31% complete, ETA 03:56:03
# Fork: 1 of 1
# Warmup Iteration   1: 284,292 ms/op
# Warmup Iteration   2: 262,308 ms/op
# Warmup Iteration   3: 263,563 ms/op
# Warmup Iteration   4: 261,368 ms/op
# Warmup Iteration   5: 264,359 ms/op
# Warmup Iteration   6: 261,039 ms/op
# Warmup Iteration   7: 263,542 ms/op
# Warmup Iteration   8: 263,170 ms/op
# Warmup Iteration   9: 263,896 ms/op
# Warmup Iteration  10: 262,161 ms/op
Iteration   1: 264,069 ms/op
Iteration   2: 262,089 ms/op
Iteration   3: 263,161 ms/op
Iteration   4: 262,307 ms/op
Iteration   5: 265,799 ms/op
Iteration   6: 263,448 ms/op
Iteration   7: 261,730 ms/op
Iteration   8: 262,976 ms/op
Iteration   9: 261,670 ms/op
Iteration  10: 262,417 ms/op


Result "benchmarkFind":
  262,967 ±(99.9%) 1,901 ms/op [Average]
  (min, avg, max) = (261,670, 262,967, 265,799), stdev = 1,257
  CI (99.9%): [261,066, 264,868] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCShiftAndBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternSize = 8)

# Run progress: 74,36% complete, ETA 03:55:37
# Fork: 1 of 1
# Warmup Iteration   1: 210,375 ms/op
# Warmup Iteration   2: 197,151 ms/op
# Warmup Iteration   3: 198,645 ms/op
# Warmup Iteration   4: 197,217 ms/op
# Warmup Iteration   5: 196,668 ms/op
# Warmup Iteration   6: 196,981 ms/op
# Warmup Iteration   7: 197,537 ms/op
# Warmup Iteration   8: 198,320 ms/op
# Warmup Iteration   9: 197,830 ms/op
# Warmup Iteration  10: 197,454 ms/op
Iteration   1: 196,744 ms/op
Iteration   2: 199,071 ms/op
Iteration   3: 196,502 ms/op
Iteration   4: 196,229 ms/op
Iteration   5: 202,141 ms/op
Iteration   6: 203,343 ms/op
Iteration   7: 200,750 ms/op
Iteration   8: 201,215 ms/op
Iteration   9: 201,094 ms/op
Iteration  10: 201,698 ms/op


Result "benchmarkFind":
  199,878 ±(99.9%) 3,892 ms/op [Average]
  (min, avg, max) = (196,229, 199,878, 203,343), stdev = 2,574
  CI (99.9%): [195,986, 203,770] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCShiftAndBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternSize = 16)

# Run progress: 74,40% complete, ETA 03:55:11
# Fork: 1 of 1
# Warmup Iteration   1: 175,359 ms/op
# Warmup Iteration   2: 148,347 ms/op
# Warmup Iteration   3: 148,328 ms/op
# Warmup Iteration   4: 149,438 ms/op
# Warmup Iteration   5: 148,085 ms/op
# Warmup Iteration   6: 147,110 ms/op
# Warmup Iteration   7: 147,899 ms/op
# Warmup Iteration   8: 148,454 ms/op
# Warmup Iteration   9: 149,638 ms/op
# Warmup Iteration  10: 148,342 ms/op
Iteration   1: 147,083 ms/op
Iteration   2: 148,837 ms/op
Iteration   3: 155,418 ms/op
Iteration   4: 156,642 ms/op
Iteration   5: 156,832 ms/op
Iteration   6: 156,176 ms/op
Iteration   7: 155,453 ms/op
Iteration   8: 156,850 ms/op
Iteration   9: 156,565 ms/op
Iteration  10: 157,781 ms/op


Result "benchmarkFind":
  154,764 ±(99.9%) 5,556 ms/op [Average]
  (min, avg, max) = (147,083, 154,764, 157,781), stdev = 3,675
  CI (99.9%): [149,208, 160,319] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCShiftAndBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternSize = 32)

# Run progress: 74,45% complete, ETA 03:54:44
# Fork: 1 of 1
# Warmup Iteration   1: 143,441 ms/op
# Warmup Iteration   2: 131,660 ms/op
# Warmup Iteration   3: 131,147 ms/op
# Warmup Iteration   4: 132,264 ms/op
# Warmup Iteration   5: 131,432 ms/op
# Warmup Iteration   6: 131,962 ms/op
# Warmup Iteration   7: 130,952 ms/op
# Warmup Iteration   8: 132,634 ms/op
# Warmup Iteration   9: 133,090 ms/op
# Warmup Iteration  10: 131,397 ms/op
Iteration   1: 136,573 ms/op
Iteration   2: 139,623 ms/op
Iteration   3: 139,501 ms/op
Iteration   4: 138,921 ms/op
Iteration   5: 138,585 ms/op
Iteration   6: 139,290 ms/op
Iteration   7: 139,093 ms/op
Iteration   8: 139,256 ms/op
Iteration   9: 139,390 ms/op
Iteration  10: 138,895 ms/op


Result "benchmarkFind":
  138,913 ±(99.9%) 1,329 ms/op [Average]
  (min, avg, max) = (136,573, 138,913, 139,623), stdev = 0,879
  CI (99.9%): [137,584, 140,241] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCShiftAndBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternSize = 64)

# Run progress: 74,49% complete, ETA 03:54:18
# Fork: 1 of 1
# Warmup Iteration   1: 132,168 ms/op
# Warmup Iteration   2: 126,170 ms/op
# Warmup Iteration   3: 125,482 ms/op
# Warmup Iteration   4: 126,150 ms/op
# Warmup Iteration   5: 125,947 ms/op
# Warmup Iteration   6: 125,307 ms/op
# Warmup Iteration   7: 124,872 ms/op
# Warmup Iteration   8: 124,604 ms/op
# Warmup Iteration   9: 124,489 ms/op
# Warmup Iteration  10: 125,077 ms/op
Iteration   1: 127,159 ms/op
Iteration   2: 125,929 ms/op
Iteration   3: 125,874 ms/op
Iteration   4: 126,015 ms/op
Iteration   5: 126,469 ms/op
Iteration   6: 143,494 ms/op
Iteration   7: 126,290 ms/op
Iteration   8: 126,359 ms/op
Iteration   9: 126,093 ms/op
Iteration  10: 125,772 ms/op


Result "benchmarkFind":
  127,945 ±(99.9%) 8,282 ms/op [Average]
  (min, avg, max) = (125,772, 127,945, 143,494), stdev = 5,478
  CI (99.9%): [119,664, 136,227] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCShiftAndBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternSize = 128)

# Run progress: 74,54% complete, ETA 03:53:51
# Fork: 1 of 1
# Warmup Iteration   1: 720,978 ms/op
# Warmup Iteration   2: 700,601 ms/op
# Warmup Iteration   3: 695,875 ms/op
# Warmup Iteration   4: 693,207 ms/op
# Warmup Iteration   5: 695,868 ms/op
# Warmup Iteration   6: 694,281 ms/op
# Warmup Iteration   7: 698,820 ms/op
# Warmup Iteration   8: 699,579 ms/op
# Warmup Iteration   9: 697,480 ms/op
# Warmup Iteration  10: 693,575 ms/op
Iteration   1: 701,671 ms/op
Iteration   2: 696,278 ms/op
Iteration   3: 697,442 ms/op
Iteration   4: 696,726 ms/op
Iteration   5: 693,364 ms/op
Iteration   6: 693,523 ms/op
Iteration   7: 693,583 ms/op
Iteration   8: 694,464 ms/op
Iteration   9: 688,528 ms/op
Iteration  10: 692,622 ms/op


Result "benchmarkFind":
  694,820 ±(99.9%) 5,272 ms/op [Average]
  (min, avg, max) = (688,528, 694,820, 701,671), stdev = 3,487
  CI (99.9%): [689,548, 700,092] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCShiftAndBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternSize = 256)

# Run progress: 74,59% complete, ETA 03:53:27
# Fork: 1 of 1
# Warmup Iteration   1: 1060,780 ms/op
# Warmup Iteration   2: 1038,865 ms/op
# Warmup Iteration   3: 1037,355 ms/op
# Warmup Iteration   4: 1026,546 ms/op
# Warmup Iteration   5: 1041,131 ms/op
# Warmup Iteration   6: 1033,556 ms/op
# Warmup Iteration   7: 1026,627 ms/op
# Warmup Iteration   8: 1033,809 ms/op
# Warmup Iteration   9: 1033,316 ms/op
# Warmup Iteration  10: 1035,465 ms/op
Iteration   1: 1029,054 ms/op
Iteration   2: 1031,255 ms/op
Iteration   3: 1032,695 ms/op
Iteration   4: 1045,758 ms/op
Iteration   5: 1040,839 ms/op
Iteration   6: 1026,170 ms/op
Iteration   7: 1034,846 ms/op
Iteration   8: 1024,906 ms/op
Iteration   9: 1027,335 ms/op
Iteration  10: 1035,571 ms/op


Result "benchmarkFind":
  1032,843 ±(99.9%) 10,040 ms/op [Average]
  (min, avg, max) = (1024,906, 1032,843, 1045,758), stdev = 6,641
  CI (99.9%): [1022,803, 1042,883] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCShiftAndBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternSize = 2)

# Run progress: 74,63% complete, ETA 03:53:01
# Fork: 1 of 1
# Warmup Iteration   1: 24,838 ms/op
# Warmup Iteration   2: 22,812 ms/op
# Warmup Iteration   3: 22,613 ms/op
# Warmup Iteration   4: 22,540 ms/op
# Warmup Iteration   5: 23,838 ms/op
# Warmup Iteration   6: 22,597 ms/op
# Warmup Iteration   7: 22,566 ms/op
# Warmup Iteration   8: 22,700 ms/op
# Warmup Iteration   9: 22,572 ms/op
# Warmup Iteration  10: 22,627 ms/op
Iteration   1: 22,643 ms/op
Iteration   2: 22,708 ms/op
Iteration   3: 22,634 ms/op
Iteration   4: 22,670 ms/op
Iteration   5: 22,643 ms/op
Iteration   6: 22,600 ms/op
Iteration   7: 22,657 ms/op
Iteration   8: 22,619 ms/op
Iteration   9: 22,729 ms/op
Iteration  10: 22,639 ms/op


Result "benchmarkFind":
  22,654 ±(99.9%) 0,059 ms/op [Average]
  (min, avg, max) = (22,600, 22,654, 22,729), stdev = 0,039
  CI (99.9%): [22,595, 22,713] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCShiftAndBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternSize = 4)

# Run progress: 74,68% complete, ETA 03:52:34
# Fork: 1 of 1
# Warmup Iteration   1: 285,914 ms/op
# Warmup Iteration   2: 275,222 ms/op
# Warmup Iteration   3: 275,380 ms/op
# Warmup Iteration   4: 273,919 ms/op
# Warmup Iteration   5: 292,503 ms/op
# Warmup Iteration   6: 293,392 ms/op
# Warmup Iteration   7: 293,918 ms/op
# Warmup Iteration   8: 296,901 ms/op
# Warmup Iteration   9: 296,815 ms/op
# Warmup Iteration  10: 294,534 ms/op
Iteration   1: 297,672 ms/op
Iteration   2: 295,618 ms/op
Iteration   3: 292,685 ms/op
Iteration   4: 294,435 ms/op
Iteration   5: 295,091 ms/op
Iteration   6: 294,663 ms/op
Iteration   7: 294,472 ms/op
Iteration   8: 295,757 ms/op
Iteration   9: 297,501 ms/op
Iteration  10: 296,190 ms/op


Result "benchmarkFind":
  295,408 ±(99.9%) 2,264 ms/op [Average]
  (min, avg, max) = (292,685, 295,408, 297,672), stdev = 1,497
  CI (99.9%): [293,145, 297,672] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCShiftAndBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternSize = 8)

# Run progress: 74,72% complete, ETA 03:52:08
# Fork: 1 of 1
# Warmup Iteration   1: 235,330 ms/op
# Warmup Iteration   2: 228,828 ms/op
# Warmup Iteration   3: 227,456 ms/op
# Warmup Iteration   4: 226,032 ms/op
# Warmup Iteration   5: 226,774 ms/op
# Warmup Iteration   6: 227,304 ms/op
# Warmup Iteration   7: 227,047 ms/op
# Warmup Iteration   8: 225,528 ms/op
# Warmup Iteration   9: 224,318 ms/op
# Warmup Iteration  10: 226,674 ms/op
Iteration   1: 225,872 ms/op
Iteration   2: 226,344 ms/op
Iteration   3: 225,161 ms/op
Iteration   4: 226,432 ms/op
Iteration   5: 226,339 ms/op
Iteration   6: 226,476 ms/op
Iteration   7: 242,734 ms/op
Iteration   8: 226,342 ms/op
Iteration   9: 226,200 ms/op
Iteration  10: 228,844 ms/op


Result "benchmarkFind":
  228,074 ±(99.9%) 7,914 ms/op [Average]
  (min, avg, max) = (225,161, 228,074, 242,734), stdev = 5,235
  CI (99.9%): [220,160, 235,989] (assumes normal distribution)


# JMH 1.11.2 (released 60 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCShiftAndBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternSize = 16)

# Run progress: 74,77% complete, ETA 03:51:42
# Fork: 1 of 1
# Warmup Iteration   1: 173,565 ms/op
# Warmup Iteration   2: 163,096 ms/op
# Warmup Iteration   3: 162,981 ms/op
# Warmup Iteration   4: 163,344 ms/op
# Warmup Iteration   5: 163,284 ms/op
# Warmup Iteration   6: 162,771 ms/op
# Warmup Iteration   7: 163,040 ms/op
# Warmup Iteration   8: 162,841 ms/op
# Warmup Iteration   9: 162,767 ms/op
# Warmup Iteration  10: 163,157 ms/op
Iteration   1: 364,519 ms/op
Iteration   2: 163,045 ms/op
Iteration   3: 165,966 ms/op
Iteration   4: 170,262 ms/op
Iteration   5: 169,940 ms/op
Iteration   6: 170,017 ms/op
Iteration   7: 170,992 ms/op
Iteration   8: 170,187 ms/op
Iteration   9: 170,552 ms/op
Iteration  10: 170,226 ms/op


Result "benchmarkFind":
  188,571 ±(99.9%) 93,544 ms/op [Average]
  (min, avg, max) = (163,045, 188,571, 364,519), stdev = 61,874
  CI (99.9%): [95,027, 282,115] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCShiftAndBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternSize = 32)

# Run progress: 74,82% complete, ETA 03:51:16
# Fork: 1 of 1
# Warmup Iteration   1: 148,126 ms/op
# Warmup Iteration   2: 140,633 ms/op
# Warmup Iteration   3: 140,221 ms/op
# Warmup Iteration   4: 139,425 ms/op
# Warmup Iteration   5: 141,106 ms/op
# Warmup Iteration   6: 141,533 ms/op
# Warmup Iteration   7: 140,407 ms/op
# Warmup Iteration   8: 139,820 ms/op
# Warmup Iteration   9: 140,056 ms/op
# Warmup Iteration  10: 140,770 ms/op
Iteration   1: 145,235 ms/op
Iteration   2: 147,473 ms/op
Iteration   3: 150,039 ms/op
Iteration   4: 152,775 ms/op
Iteration   5: 145,559 ms/op
Iteration   6: 145,659 ms/op
Iteration   7: 145,432 ms/op
Iteration   8: 145,724 ms/op
Iteration   9: 145,967 ms/op
Iteration  10: 145,545 ms/op


Result "benchmarkFind":
  146,941 ±(99.9%) 3,806 ms/op [Average]
  (min, avg, max) = (145,235, 146,941, 152,775), stdev = 2,517
  CI (99.9%): [143,135, 150,747] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCShiftAndBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternSize = 64)

# Run progress: 74,86% complete, ETA 03:50:50
# Fork: 1 of 1
# Warmup Iteration   1: 143,834 ms/op
# Warmup Iteration   2: 130,273 ms/op
# Warmup Iteration   3: 130,253 ms/op
# Warmup Iteration   4: 130,962 ms/op
# Warmup Iteration   5: 129,451 ms/op
# Warmup Iteration   6: 130,312 ms/op
# Warmup Iteration   7: 129,887 ms/op
# Warmup Iteration   8: 130,066 ms/op
# Warmup Iteration   9: 129,669 ms/op
# Warmup Iteration  10: 130,457 ms/op
Iteration   1: 147,789 ms/op
Iteration   2: 137,693 ms/op
Iteration   3: 137,339 ms/op
Iteration   4: 136,852 ms/op
Iteration   5: 138,408 ms/op
Iteration   6: 137,632 ms/op
Iteration   7: 137,483 ms/op
Iteration   8: 137,551 ms/op
Iteration   9: 137,781 ms/op
Iteration  10: 138,499 ms/op


Result "benchmarkFind":
  138,703 ±(99.9%) 4,881 ms/op [Average]
  (min, avg, max) = (136,852, 138,703, 147,789), stdev = 3,229
  CI (99.9%): [133,822, 143,584] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCShiftAndBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternSize = 128)

# Run progress: 74,91% complete, ETA 03:50:23
# Fork: 1 of 1
# Warmup Iteration   1: 716,699 ms/op
# Warmup Iteration   2: 698,415 ms/op
# Warmup Iteration   3: 701,262 ms/op
# Warmup Iteration   4: 698,844 ms/op
# Warmup Iteration   5: 699,472 ms/op
# Warmup Iteration   6: 699,518 ms/op
# Warmup Iteration   7: 702,621 ms/op
# Warmup Iteration   8: 694,502 ms/op
# Warmup Iteration   9: 697,933 ms/op
# Warmup Iteration  10: 702,615 ms/op
Iteration   1: 696,024 ms/op
Iteration   2: 699,111 ms/op
Iteration   3: 701,774 ms/op
Iteration   4: 696,379 ms/op
Iteration   5: 697,037 ms/op
Iteration   6: 696,925 ms/op
Iteration   7: 693,944 ms/op
Iteration   8: 694,629 ms/op
Iteration   9: 696,654 ms/op
Iteration  10: 697,660 ms/op


Result "benchmarkFind":
  697,014 ±(99.9%) 3,347 ms/op [Average]
  (min, avg, max) = (693,944, 697,014, 701,774), stdev = 2,214
  CI (99.9%): [693,667, 700,361] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCShiftAndBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternSize = 256)

# Run progress: 74,95% complete, ETA 03:49:59
# Fork: 1 of 1
# Warmup Iteration   1: 1040,223 ms/op
# Warmup Iteration   2: 1021,087 ms/op
# Warmup Iteration   3: 1016,107 ms/op
# Warmup Iteration   4: 1018,397 ms/op
# Warmup Iteration   5: 1015,204 ms/op
# Warmup Iteration   6: 1022,632 ms/op
# Warmup Iteration   7: 1025,529 ms/op
# Warmup Iteration   8: 1023,174 ms/op
# Warmup Iteration   9: 1014,172 ms/op
# Warmup Iteration  10: 1008,845 ms/op
Iteration   1: 1014,294 ms/op
Iteration   2: 1019,964 ms/op
Iteration   3: 1016,627 ms/op
Iteration   4: 1016,494 ms/op
Iteration   5: 1010,839 ms/op
Iteration   6: 1016,190 ms/op
Iteration   7: 1019,285 ms/op
Iteration   8: 1011,902 ms/op
Iteration   9: 1015,600 ms/op
Iteration  10: 1106,102 ms/op


Result "benchmarkFind":
  1024,730 ±(99.9%) 43,439 ms/op [Average]
  (min, avg, max) = (1010,839, 1024,730, 1106,102), stdev = 28,732
  CI (99.9%): [981,290, 1068,169] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCShiftAndBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternSize = 2)

# Run progress: 75,00% complete, ETA 03:49:32
# Fork: 1 of 1
# Warmup Iteration   1: 81,395 ms/op
# Warmup Iteration   2: 76,111 ms/op
# Warmup Iteration   3: 76,908 ms/op
# Warmup Iteration   4: 76,644 ms/op
# Warmup Iteration   5: 76,257 ms/op
# Warmup Iteration   6: 75,947 ms/op
# Warmup Iteration   7: 76,166 ms/op
# Warmup Iteration   8: 76,823 ms/op
# Warmup Iteration   9: 76,265 ms/op
# Warmup Iteration  10: 75,870 ms/op
Iteration   1: 76,452 ms/op
Iteration   2: 76,144 ms/op
Iteration   3: 76,277 ms/op
Iteration   4: 76,243 ms/op
Iteration   5: 76,320 ms/op
Iteration   6: 76,458 ms/op
Iteration   7: 77,019 ms/op
Iteration   8: 77,408 ms/op
Iteration   9: 75,896 ms/op
Iteration  10: 76,580 ms/op


Result "benchmarkFind":
  76,480 ±(99.9%) 0,665 ms/op [Average]
  (min, avg, max) = (75,896, 76,480, 77,408), stdev = 0,440
  CI (99.9%): [75,815, 77,145] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCShiftAndBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternSize = 4)

# Run progress: 75,05% complete, ETA 03:49:06
# Fork: 1 of 1
# Warmup Iteration   1: 2356,463 ms/op
# Warmup Iteration   2: 2330,352 ms/op
# Warmup Iteration   3: 2341,643 ms/op
# Warmup Iteration   4: 2321,772 ms/op
# Warmup Iteration   5: 2334,474 ms/op
# Warmup Iteration   6: 2325,198 ms/op
# Warmup Iteration   7: 2324,851 ms/op
# Warmup Iteration   8: 2334,366 ms/op
# Warmup Iteration   9: 2334,316 ms/op
# Warmup Iteration  10: 2320,995 ms/op
Iteration   1: 2328,452 ms/op
Iteration   2: 2326,920 ms/op
Iteration   3: 2323,098 ms/op
Iteration   4: 2328,962 ms/op
Iteration   5: 2447,579 ms/op
Iteration   6: 2326,574 ms/op
Iteration   7: 2331,628 ms/op
Iteration   8: 2319,622 ms/op
Iteration   9: 2337,465 ms/op
Iteration  10: 2325,514 ms/op


Result "benchmarkFind":
  2339,582 ±(99.9%) 57,824 ms/op [Average]
  (min, avg, max) = (2319,622, 2339,582, 2447,579), stdev = 38,247
  CI (99.9%): [2281,758, 2397,405] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCShiftAndBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternSize = 8)

# Run progress: 75,09% complete, ETA 03:48:49
# Fork: 1 of 1
# Warmup Iteration   1: 1873,692 ms/op
# Warmup Iteration   2: 1807,920 ms/op
# Warmup Iteration   3: 1807,229 ms/op
# Warmup Iteration   4: 1811,845 ms/op
# Warmup Iteration   5: 1805,555 ms/op
# Warmup Iteration   6: 1807,742 ms/op
# Warmup Iteration   7: 1810,948 ms/op
# Warmup Iteration   8: 1813,077 ms/op
# Warmup Iteration   9: 1805,843 ms/op
# Warmup Iteration  10: 1802,761 ms/op
Iteration   1: 1807,370 ms/op
Iteration   2: 1803,974 ms/op
Iteration   3: 1804,229 ms/op
Iteration   4: 1807,612 ms/op
Iteration   5: 1802,893 ms/op
Iteration   6: 1809,510 ms/op
Iteration   7: 1809,282 ms/op
Iteration   8: 1802,842 ms/op
Iteration   9: 1804,276 ms/op
Iteration  10: 1803,052 ms/op


Result "benchmarkFind":
  1805,504 ±(99.9%) 4,020 ms/op [Average]
  (min, avg, max) = (1802,842, 1805,504, 1809,510), stdev = 2,659
  CI (99.9%): [1801,484, 1809,524] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCShiftAndBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternSize = 16)

# Run progress: 75,14% complete, ETA 03:48:28
# Fork: 1 of 1
# Warmup Iteration   1: 1455,349 ms/op
# Warmup Iteration   2: 1410,918 ms/op
# Warmup Iteration   3: 1515,023 ms/op
# Warmup Iteration   4: 1411,793 ms/op
# Warmup Iteration   5: 1415,240 ms/op
# Warmup Iteration   6: 1418,909 ms/op
# Warmup Iteration   7: 1424,463 ms/op
# Warmup Iteration   8: 1420,598 ms/op
# Warmup Iteration   9: 1423,058 ms/op
# Warmup Iteration  10: 1421,594 ms/op
Iteration   1: 1417,134 ms/op
Iteration   2: 1413,824 ms/op
Iteration   3: 1416,952 ms/op
Iteration   4: 1405,040 ms/op
Iteration   5: 1418,163 ms/op
Iteration   6: 1411,281 ms/op
Iteration   7: 1416,239 ms/op
Iteration   8: 1413,260 ms/op
Iteration   9: 1416,675 ms/op
Iteration  10: 1412,280 ms/op


Result "benchmarkFind":
  1414,085 ±(99.9%) 5,945 ms/op [Average]
  (min, avg, max) = (1405,040, 1414,085, 1418,163), stdev = 3,932
  CI (99.9%): [1408,140, 1420,030] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCShiftAndBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternSize = 32)

# Run progress: 75,18% complete, ETA 03:48:05
# Fork: 1 of 1
# Warmup Iteration   1: 1237,611 ms/op
# Warmup Iteration   2: 1167,564 ms/op
# Warmup Iteration   3: 1168,500 ms/op
# Warmup Iteration   4: 1170,746 ms/op
# Warmup Iteration   5: 1164,187 ms/op
# Warmup Iteration   6: 1170,443 ms/op
# Warmup Iteration   7: 1166,862 ms/op
# Warmup Iteration   8: 1168,669 ms/op
# Warmup Iteration   9: 1165,865 ms/op
# Warmup Iteration  10: 1164,292 ms/op
Iteration   1: 1163,997 ms/op
Iteration   2: 1168,062 ms/op
Iteration   3: 1161,091 ms/op
Iteration   4: 1161,392 ms/op
Iteration   5: 1162,539 ms/op
Iteration   6: 1167,122 ms/op
Iteration   7: 1161,029 ms/op
Iteration   8: 1160,081 ms/op
Iteration   9: 1160,865 ms/op
Iteration  10: 1166,041 ms/op


Result "benchmarkFind":
  1163,222 ±(99.9%) 4,387 ms/op [Average]
  (min, avg, max) = (1160,081, 1163,222, 1168,062), stdev = 2,902
  CI (99.9%): [1158,835, 1167,609] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCShiftAndBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternSize = 64)

# Run progress: 75,23% complete, ETA 03:47:40
# Fork: 1 of 1
# Warmup Iteration   1: 1142,645 ms/op
# Warmup Iteration   2: 1085,898 ms/op
# Warmup Iteration   3: 1084,963 ms/op
# Warmup Iteration   4: 1096,942 ms/op
# Warmup Iteration   5: 1182,491 ms/op
# Warmup Iteration   6: 1080,017 ms/op
# Warmup Iteration   7: 1075,446 ms/op
# Warmup Iteration   8: 1125,636 ms/op
# Warmup Iteration   9: 1090,189 ms/op
# Warmup Iteration  10: 1082,711 ms/op
Iteration   1: 1088,062 ms/op
Iteration   2: 1086,478 ms/op
Iteration   3: 1084,471 ms/op
Iteration   4: 1076,096 ms/op
Iteration   5: 1083,628 ms/op
Iteration   6: 1072,465 ms/op
Iteration   7: 1082,792 ms/op
Iteration   8: 1085,633 ms/op
Iteration   9: 1083,932 ms/op
Iteration  10: 1083,503 ms/op


Result "benchmarkFind":
  1082,706 ±(99.9%) 7,236 ms/op [Average]
  (min, avg, max) = (1072,465, 1082,706, 1088,062), stdev = 4,786
  CI (99.9%): [1075,470, 1089,942] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCShiftAndBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternSize = 128)

# Run progress: 75,28% complete, ETA 03:47:15
# Fork: 1 of 1
# Warmup Iteration   1: 5808,455 ms/op
# Warmup Iteration   2: 5797,521 ms/op
# Warmup Iteration   3: 5778,487 ms/op
# Warmup Iteration   4: 5787,885 ms/op
# Warmup Iteration   5: 5806,120 ms/op
# Warmup Iteration   6: 5810,084 ms/op
# Warmup Iteration   7: 5895,894 ms/op
# Warmup Iteration   8: 5794,655 ms/op
# Warmup Iteration   9: 5771,723 ms/op
# Warmup Iteration  10: 5797,928 ms/op
Iteration   1: 5798,542 ms/op
Iteration   2: 5801,036 ms/op
Iteration   3: 5797,239 ms/op
Iteration   4: 5794,947 ms/op
Iteration   5: 5794,044 ms/op
Iteration   6: 5794,201 ms/op
Iteration   7: 5789,132 ms/op
Iteration   8: 5916,088 ms/op
Iteration   9: 5814,913 ms/op
Iteration  10: 5793,465 ms/op


Result "benchmarkFind":
  5809,361 ±(99.9%) 57,656 ms/op [Average]
  (min, avg, max) = (5789,132, 5809,361, 5916,088), stdev = 38,136
  CI (99.9%): [5751,705, 5867,016] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCShiftAndBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternSize = 256)

# Run progress: 75,32% complete, ETA 03:47:20
# Fork: 1 of 1
# Warmup Iteration   1: 8230,134 ms/op
# Warmup Iteration   2: 8229,468 ms/op
# Warmup Iteration   3: 8209,804 ms/op
# Warmup Iteration   4: 8220,196 ms/op
# Warmup Iteration   5: 8358,419 ms/op
# Warmup Iteration   6: 8285,241 ms/op
# Warmup Iteration   7: 8321,510 ms/op
# Warmup Iteration   8: 8269,737 ms/op
# Warmup Iteration   9: 8313,397 ms/op
# Warmup Iteration  10: 8302,286 ms/op
Iteration   1: 8307,112 ms/op
Iteration   2: 8297,293 ms/op
Iteration   3: 8670,196 ms/op
Iteration   4: 8670,095 ms/op
Iteration   5: 8413,059 ms/op
Iteration   6: 8384,260 ms/op
Iteration   7: 8481,497 ms/op
Iteration   8: 8467,200 ms/op
Iteration   9: 8407,011 ms/op
Iteration  10: 8676,439 ms/op


Result "benchmarkFind":
  8477,416 ±(99.9%) 221,536 ms/op [Average]
  (min, avg, max) = (8297,293, 8477,416, 8676,439), stdev = 146,532
  CI (99.9%): [8255,881, 8698,952] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCShiftAndBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternSize = 2)

# Run progress: 75,37% complete, ETA 03:47:43
# Fork: 1 of 1
# Warmup Iteration   1: 302,035 ms/op
# Warmup Iteration   2: 279,473 ms/op
# Warmup Iteration   3: 278,496 ms/op
# Warmup Iteration   4: 276,725 ms/op
# Warmup Iteration   5: 280,836 ms/op
# Warmup Iteration   6: 273,161 ms/op
# Warmup Iteration   7: 270,733 ms/op
# Warmup Iteration   8: 266,053 ms/op
# Warmup Iteration   9: 272,278 ms/op
# Warmup Iteration  10: 267,706 ms/op
Iteration   1: 268,912 ms/op
Iteration   2: 268,105 ms/op
Iteration   3: 270,386 ms/op
Iteration   4: 268,475 ms/op
Iteration   5: 269,582 ms/op
Iteration   6: 269,136 ms/op
Iteration   7: 273,667 ms/op
Iteration   8: 271,394 ms/op
Iteration   9: 272,137 ms/op
Iteration  10: 280,338 ms/op


Result "benchmarkFind":
  271,213 ±(99.9%) 5,527 ms/op [Average]
  (min, avg, max) = (268,105, 271,213, 280,338), stdev = 3,656
  CI (99.9%): [265,686, 276,740] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCShiftAndBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternSize = 4)

# Run progress: 75,41% complete, ETA 03:47:16
# Fork: 1 of 1
# Warmup Iteration   1: 307,380 ms/op
# Warmup Iteration   2: 292,310 ms/op
# Warmup Iteration   3: 296,899 ms/op
# Warmup Iteration   4: 296,889 ms/op
# Warmup Iteration   5: 295,235 ms/op
# Warmup Iteration   6: 292,496 ms/op
# Warmup Iteration   7: 293,713 ms/op
# Warmup Iteration   8: 303,718 ms/op
# Warmup Iteration   9: 306,391 ms/op
# Warmup Iteration  10: 341,792 ms/op
Iteration   1: 325,301 ms/op
Iteration   2: 308,436 ms/op
Iteration   3: 288,180 ms/op
Iteration   4: 306,981 ms/op
Iteration   5: 312,256 ms/op
Iteration   6: 300,443 ms/op
Iteration   7: 284,673 ms/op
Iteration   8: 284,783 ms/op
Iteration   9: 284,159 ms/op
Iteration  10: 282,943 ms/op


Result "benchmarkFind":
  297,816 ±(99.9%) 22,598 ms/op [Average]
  (min, avg, max) = (282,943, 297,816, 325,301), stdev = 14,947
  CI (99.9%): [275,218, 320,414] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCShiftAndBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternSize = 8)

# Run progress: 75,46% complete, ETA 03:46:50
# Fork: 1 of 1
# Warmup Iteration   1: 257,423 ms/op
# Warmup Iteration   2: 244,726 ms/op
# Warmup Iteration   3: 243,944 ms/op
# Warmup Iteration   4: 257,185 ms/op
# Warmup Iteration   5: 256,178 ms/op
# Warmup Iteration   6: 245,409 ms/op
# Warmup Iteration   7: 245,622 ms/op
# Warmup Iteration   8: 247,010 ms/op
# Warmup Iteration   9: 246,489 ms/op
# Warmup Iteration  10: 247,485 ms/op
Iteration   1: 247,154 ms/op
Iteration   2: 245,660 ms/op
Iteration   3: 246,519 ms/op
Iteration   4: 246,954 ms/op
Iteration   5: 245,259 ms/op
Iteration   6: 245,866 ms/op
Iteration   7: 246,753 ms/op
Iteration   8: 247,368 ms/op
Iteration   9: 245,640 ms/op
Iteration  10: 247,769 ms/op


Result "benchmarkFind":
  246,494 ±(99.9%) 1,280 ms/op [Average]
  (min, avg, max) = (245,259, 246,494, 247,769), stdev = 0,846
  CI (99.9%): [245,215, 247,774] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCShiftAndBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternSize = 16)

# Run progress: 75,51% complete, ETA 03:46:25
# Fork: 1 of 1
# Warmup Iteration   1: 189,378 ms/op
# Warmup Iteration   2: 181,064 ms/op
# Warmup Iteration   3: 179,936 ms/op
# Warmup Iteration   4: 180,600 ms/op
# Warmup Iteration   5: 180,815 ms/op
# Warmup Iteration   6: 181,026 ms/op
# Warmup Iteration   7: 181,648 ms/op
# Warmup Iteration   8: 180,968 ms/op
# Warmup Iteration   9: 181,836 ms/op
# Warmup Iteration  10: 180,038 ms/op
Iteration   1: 181,428 ms/op
Iteration   2: 180,860 ms/op
Iteration   3: 180,988 ms/op
Iteration   4: 180,087 ms/op
Iteration   5: 191,486 ms/op
Iteration   6: 189,529 ms/op
Iteration   7: 187,743 ms/op
Iteration   8: 188,149 ms/op
Iteration   9: 188,369 ms/op
Iteration  10: 188,389 ms/op


Result "benchmarkFind":
  185,703 ±(99.9%) 6,533 ms/op [Average]
  (min, avg, max) = (180,087, 185,703, 191,486), stdev = 4,321
  CI (99.9%): [179,170, 192,236] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCShiftAndBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternSize = 32)

# Run progress: 75,55% complete, ETA 03:45:58
# Fork: 1 of 1
# Warmup Iteration   1: 162,836 ms/op
# Warmup Iteration   2: 156,288 ms/op
# Warmup Iteration   3: 156,951 ms/op
# Warmup Iteration   4: 156,012 ms/op
# Warmup Iteration   5: 156,038 ms/op
# Warmup Iteration   6: 156,214 ms/op
# Warmup Iteration   7: 156,654 ms/op
# Warmup Iteration   8: 156,066 ms/op
# Warmup Iteration   9: 155,109 ms/op
# Warmup Iteration  10: 155,081 ms/op
Iteration   1: 155,165 ms/op
Iteration   2: 156,572 ms/op
Iteration   3: 163,595 ms/op
Iteration   4: 163,139 ms/op
Iteration   5: 163,868 ms/op
Iteration   6: 178,196 ms/op
Iteration   7: 163,354 ms/op
Iteration   8: 163,401 ms/op
Iteration   9: 164,472 ms/op
Iteration  10: 163,805 ms/op


Result "benchmarkFind":
  163,557 ±(99.9%) 9,220 ms/op [Average]
  (min, avg, max) = (155,165, 163,557, 178,196), stdev = 6,099
  CI (99.9%): [154,336, 172,777] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCShiftAndBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternSize = 64)

# Run progress: 75,60% complete, ETA 03:45:32
# Fork: 1 of 1
# Warmup Iteration   1: 145,563 ms/op
# Warmup Iteration   2: 138,577 ms/op
# Warmup Iteration   3: 138,824 ms/op
# Warmup Iteration   4: 138,558 ms/op
# Warmup Iteration   5: 138,883 ms/op
# Warmup Iteration   6: 138,451 ms/op
# Warmup Iteration   7: 137,735 ms/op
# Warmup Iteration   8: 138,212 ms/op
# Warmup Iteration   9: 138,845 ms/op
# Warmup Iteration  10: 139,106 ms/op
Iteration   1: 141,142 ms/op
Iteration   2: 148,147 ms/op
Iteration   3: 147,865 ms/op
Iteration   4: 148,513 ms/op
Iteration   5: 147,433 ms/op
Iteration   6: 147,564 ms/op
Iteration   7: 149,491 ms/op
Iteration   8: 148,412 ms/op
Iteration   9: 148,452 ms/op
Iteration  10: 147,964 ms/op


Result "benchmarkFind":
  147,498 ±(99.9%) 3,489 ms/op [Average]
  (min, avg, max) = (141,142, 147,498, 149,491), stdev = 2,308
  CI (99.9%): [144,009, 150,987] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCShiftAndBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternSize = 128)

# Run progress: 75,64% complete, ETA 03:45:06
# Fork: 1 of 1
# Warmup Iteration   1: 748,316 ms/op
# Warmup Iteration   2: 719,210 ms/op
# Warmup Iteration   3: 720,279 ms/op
# Warmup Iteration   4: 722,057 ms/op
# Warmup Iteration   5: 722,037 ms/op
# Warmup Iteration   6: 722,727 ms/op
# Warmup Iteration   7: 722,813 ms/op
# Warmup Iteration   8: 717,557 ms/op
# Warmup Iteration   9: 721,684 ms/op
# Warmup Iteration  10: 720,455 ms/op
Iteration   1: 719,790 ms/op
Iteration   2: 729,755 ms/op
Iteration   3: 729,103 ms/op
Iteration   4: 718,818 ms/op
Iteration   5: 717,677 ms/op
Iteration   6: 719,050 ms/op
Iteration   7: 721,625 ms/op
Iteration   8: 722,614 ms/op
Iteration   9: 716,931 ms/op
Iteration  10: 720,624 ms/op


Result "benchmarkFind":
  721,599 ±(99.9%) 6,752 ms/op [Average]
  (min, avg, max) = (716,931, 721,599, 729,755), stdev = 4,466
  CI (99.9%): [714,847, 728,350] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCShiftAndBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternSize = 256)

# Run progress: 75,69% complete, ETA 03:44:42
# Fork: 1 of 1
# Warmup Iteration   1: 1025,561 ms/op
# Warmup Iteration   2: 1110,678 ms/op
# Warmup Iteration   3: 975,067 ms/op
# Warmup Iteration   4: 970,827 ms/op
# Warmup Iteration   5: 972,788 ms/op
# Warmup Iteration   6: 969,066 ms/op
# Warmup Iteration   7: 973,810 ms/op
# Warmup Iteration   8: 971,054 ms/op
# Warmup Iteration   9: 970,483 ms/op
# Warmup Iteration  10: 977,687 ms/op
Iteration   1: 969,463 ms/op
Iteration   2: 977,395 ms/op
Iteration   3: 974,004 ms/op
Iteration   4: 970,923 ms/op
Iteration   5: 976,191 ms/op
Iteration   6: 973,998 ms/op
Iteration   7: 977,782 ms/op
Iteration   8: 971,597 ms/op
Iteration   9: 978,176 ms/op
Iteration  10: 972,075 ms/op


Result "benchmarkFind":
  974,161 ±(99.9%) 4,710 ms/op [Average]
  (min, avg, max) = (969,463, 974,161, 978,176), stdev = 3,115
  CI (99.9%): [969,451, 978,870] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCShiftAndBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternSize = 2)

# Run progress: 75,74% complete, ETA 03:44:20
# Fork: 1 of 1
# Warmup Iteration   1: 1200,703 ms/op
# Warmup Iteration   2: 1164,145 ms/op
# Warmup Iteration   3: 1159,930 ms/op
# Warmup Iteration   4: 1181,317 ms/op
# Warmup Iteration   5: 1205,310 ms/op
# Warmup Iteration   6: 1199,553 ms/op
# Warmup Iteration   7: 1211,669 ms/op
# Warmup Iteration   8: 1203,401 ms/op
# Warmup Iteration   9: 1202,139 ms/op
# Warmup Iteration  10: 1208,824 ms/op
Iteration   1: 1208,993 ms/op
Iteration   2: 1209,698 ms/op
Iteration   3: 1197,877 ms/op
Iteration   4: 1205,903 ms/op
Iteration   5: 1206,274 ms/op
Iteration   6: 1217,731 ms/op
Iteration   7: 1204,476 ms/op
Iteration   8: 1200,773 ms/op
Iteration   9: 1303,531 ms/op
Iteration  10: 1199,600 ms/op


Result "benchmarkFind":
  1215,485 ±(99.9%) 47,568 ms/op [Average]
  (min, avg, max) = (1197,877, 1215,485, 1303,531), stdev = 31,463
  CI (99.9%): [1167,918, 1263,053] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCShiftAndBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternSize = 4)

# Run progress: 75,78% complete, ETA 03:43:55
# Fork: 1 of 1
# Warmup Iteration   1: 1225,602 ms/op
# Warmup Iteration   2: 1183,402 ms/op
# Warmup Iteration   3: 1185,719 ms/op
# Warmup Iteration   4: 1195,956 ms/op
# Warmup Iteration   5: 1197,711 ms/op
# Warmup Iteration   6: 1181,112 ms/op
# Warmup Iteration   7: 1181,789 ms/op
# Warmup Iteration   8: 1182,092 ms/op
# Warmup Iteration   9: 1176,553 ms/op
# Warmup Iteration  10: 1184,033 ms/op
Iteration   1: 1179,684 ms/op
Iteration   2: 1198,049 ms/op
Iteration   3: 1184,202 ms/op
Iteration   4: 1190,568 ms/op
Iteration   5: 1186,077 ms/op
Iteration   6: 1183,164 ms/op
Iteration   7: 1189,424 ms/op
Iteration   8: 1177,520 ms/op
Iteration   9: 1182,964 ms/op
Iteration  10: 1178,794 ms/op


Result "benchmarkFind":
  1185,045 ±(99.9%) 9,466 ms/op [Average]
  (min, avg, max) = (1177,520, 1185,045, 1198,049), stdev = 6,261
  CI (99.9%): [1175,578, 1194,511] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCShiftAndBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternSize = 8)

# Run progress: 75,83% complete, ETA 03:43:29
# Fork: 1 of 1
# Warmup Iteration   1: 905,465 ms/op
# Warmup Iteration   2: 885,141 ms/op
# Warmup Iteration   3: 882,875 ms/op
# Warmup Iteration   4: 886,191 ms/op
# Warmup Iteration   5: 885,273 ms/op
# Warmup Iteration   6: 880,594 ms/op
# Warmup Iteration   7: 879,328 ms/op
# Warmup Iteration   8: 885,819 ms/op
# Warmup Iteration   9: 880,842 ms/op
# Warmup Iteration  10: 883,267 ms/op
Iteration   1: 881,656 ms/op
Iteration   2: 879,603 ms/op
Iteration   3: 883,657 ms/op
Iteration   4: 878,871 ms/op
Iteration   5: 882,282 ms/op
Iteration   6: 880,604 ms/op
Iteration   7: 882,335 ms/op
Iteration   8: 915,716 ms/op
Iteration   9: 874,011 ms/op
Iteration  10: 881,943 ms/op


Result "benchmarkFind":
  884,068 ±(99.9%) 17,299 ms/op [Average]
  (min, avg, max) = (874,011, 884,068, 915,716), stdev = 11,442
  CI (99.9%): [866,768, 901,367] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCShiftAndBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternSize = 16)

# Run progress: 75,87% complete, ETA 03:43:08
# Fork: 1 of 1
# Warmup Iteration   1: 762,507 ms/op
# Warmup Iteration   2: 741,386 ms/op
# Warmup Iteration   3: 741,974 ms/op
# Warmup Iteration   4: 742,605 ms/op
# Warmup Iteration   5: 741,453 ms/op
# Warmup Iteration   6: 740,986 ms/op
# Warmup Iteration   7: 741,021 ms/op
# Warmup Iteration   8: 741,737 ms/op
# Warmup Iteration   9: 748,437 ms/op
# Warmup Iteration  10: 741,886 ms/op
Iteration   1: 745,003 ms/op
Iteration   2: 741,869 ms/op
Iteration   3: 741,105 ms/op
Iteration   4: 745,128 ms/op
Iteration   5: 744,217 ms/op
Iteration   6: 745,397 ms/op
Iteration   7: 743,525 ms/op
Iteration   8: 744,971 ms/op
Iteration   9: 743,510 ms/op
Iteration  10: 746,877 ms/op


Result "benchmarkFind":
  744,160 ±(99.9%) 2,601 ms/op [Average]
  (min, avg, max) = (741,105, 744,160, 746,877), stdev = 1,720
  CI (99.9%): [741,560, 746,761] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCShiftAndBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternSize = 32)

# Run progress: 75,92% complete, ETA 03:42:44
# Fork: 1 of 1
# Warmup Iteration   1: 676,542 ms/op
# Warmup Iteration   2: 660,326 ms/op
# Warmup Iteration   3: 657,631 ms/op
# Warmup Iteration   4: 654,119 ms/op
# Warmup Iteration   5: 658,855 ms/op
# Warmup Iteration   6: 657,612 ms/op
# Warmup Iteration   7: 657,230 ms/op
# Warmup Iteration   8: 663,262 ms/op
# Warmup Iteration   9: 658,481 ms/op
# Warmup Iteration  10: 657,084 ms/op
Iteration   1: 655,426 ms/op
Iteration   2: 656,266 ms/op
Iteration   3: 655,275 ms/op
Iteration   4: 658,089 ms/op
Iteration   5: 653,497 ms/op
Iteration   6: 660,421 ms/op
Iteration   7: 695,646 ms/op
Iteration   8: 656,653 ms/op
Iteration   9: 650,767 ms/op
Iteration  10: 657,285 ms/op


Result "benchmarkFind":
  659,932 ±(99.9%) 19,373 ms/op [Average]
  (min, avg, max) = (650,767, 659,932, 695,646), stdev = 12,814
  CI (99.9%): [640,560, 679,305] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCShiftAndBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternSize = 64)

# Run progress: 75,97% complete, ETA 03:42:19
# Fork: 1 of 1
# Warmup Iteration   1: 589,776 ms/op
# Warmup Iteration   2: 570,696 ms/op
# Warmup Iteration   3: 575,309 ms/op
# Warmup Iteration   4: 571,177 ms/op
# Warmup Iteration   5: 569,827 ms/op
# Warmup Iteration   6: 567,987 ms/op
# Warmup Iteration   7: 570,170 ms/op
# Warmup Iteration   8: 569,320 ms/op
# Warmup Iteration   9: 567,775 ms/op
# Warmup Iteration  10: 578,491 ms/op
Iteration   1: 571,249 ms/op
Iteration   2: 571,152 ms/op
Iteration   3: 569,035 ms/op
Iteration   4: 573,122 ms/op
Iteration   5: 573,204 ms/op
Iteration   6: 571,522 ms/op
Iteration   7: 577,811 ms/op
Iteration   8: 568,761 ms/op
Iteration   9: 572,334 ms/op
Iteration  10: 568,348 ms/op


Result "benchmarkFind":
  571,654 ±(99.9%) 4,202 ms/op [Average]
  (min, avg, max) = (568,348, 571,654, 577,811), stdev = 2,779
  CI (99.9%): [567,452, 575,855] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCShiftAndBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternSize = 128)

# Run progress: 76,01% complete, ETA 03:41:54
# Fork: 1 of 1
# Warmup Iteration   1: 2975,503 ms/op
# Warmup Iteration   2: 2950,019 ms/op
# Warmup Iteration   3: 2947,461 ms/op
# Warmup Iteration   4: 2947,381 ms/op
# Warmup Iteration   5: 2947,670 ms/op
# Warmup Iteration   6: 2948,132 ms/op
# Warmup Iteration   7: 2947,651 ms/op
# Warmup Iteration   8: 2948,190 ms/op
# Warmup Iteration   9: 2947,257 ms/op
# Warmup Iteration  10: 3061,706 ms/op
Iteration   1: 2994,837 ms/op
Iteration   2: 3005,912 ms/op
Iteration   3: 2999,700 ms/op
Iteration   4: 2998,354 ms/op
Iteration   5: 2991,521 ms/op
Iteration   6: 3007,324 ms/op
Iteration   7: 3004,361 ms/op
Iteration   8: 2986,885 ms/op
Iteration   9: 2999,963 ms/op
Iteration  10: 2991,497 ms/op


Result "benchmarkFind":
  2998,035 ±(99.9%) 10,262 ms/op [Average]
  (min, avg, max) = (2986,885, 2998,035, 3007,324), stdev = 6,788
  CI (99.9%): [2987,773, 3008,297] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCShiftAndBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternSize = 256)

# Run progress: 76,06% complete, ETA 03:41:39
# Fork: 1 of 1
# Warmup Iteration   1: 4148,984 ms/op
# Warmup Iteration   2: 4155,853 ms/op
# Warmup Iteration   3: 4167,418 ms/op
# Warmup Iteration   4: 4158,502 ms/op
# Warmup Iteration   5: 4163,454 ms/op
# Warmup Iteration   6: 4147,414 ms/op
# Warmup Iteration   7: 4259,062 ms/op
# Warmup Iteration   8: 4147,525 ms/op
# Warmup Iteration   9: 4146,239 ms/op
# Warmup Iteration  10: 4142,623 ms/op
Iteration   1: 4147,754 ms/op
Iteration   2: 4137,306 ms/op
Iteration   3: 4143,346 ms/op
Iteration   4: 4145,649 ms/op
Iteration   5: 4148,757 ms/op
Iteration   6: 4137,322 ms/op
Iteration   7: 4141,418 ms/op
Iteration   8: 4159,124 ms/op
Iteration   9: 4170,739 ms/op
Iteration  10: 4165,606 ms/op


Result "benchmarkFind":
  4149,702 ±(99.9%) 17,612 ms/op [Average]
  (min, avg, max) = (4137,306, 4149,702, 4170,739), stdev = 11,649
  CI (99.9%): [4132,090, 4167,314] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCShiftAndBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternSize = 2)

# Run progress: 76,10% complete, ETA 03:41:33
# Fork: 1 of 1
# Warmup Iteration   1: 4582,264 ms/op
# Warmup Iteration   2: 4297,132 ms/op
# Warmup Iteration   3: 4399,282 ms/op
# Warmup Iteration   4: 4757,265 ms/op
# Warmup Iteration   5: 4603,198 ms/op
# Warmup Iteration   6: 4313,784 ms/op
# Warmup Iteration   7: 4310,260 ms/op
# Warmup Iteration   8: 4323,882 ms/op
# Warmup Iteration   9: 4321,776 ms/op
# Warmup Iteration  10: 4316,334 ms/op
Iteration   1: 4305,674 ms/op
Iteration   2: 4321,991 ms/op
Iteration   3: 4318,171 ms/op
Iteration   4: 4423,768 ms/op
Iteration   5: 4321,519 ms/op
Iteration   6: 4303,659 ms/op
Iteration   7: 4295,689 ms/op
Iteration   8: 4302,149 ms/op
Iteration   9: 4310,461 ms/op
Iteration  10: 4303,265 ms/op


Result "benchmarkFind":
  4320,635 ±(99.9%) 56,403 ms/op [Average]
  (min, avg, max) = (4295,689, 4320,635, 4423,768), stdev = 37,307
  CI (99.9%): [4264,232, 4377,038] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCShiftAndBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternSize = 4)

# Run progress: 76,15% complete, ETA 03:41:28
# Fork: 1 of 1
# Warmup Iteration   1: 4614,423 ms/op
# Warmup Iteration   2: 4617,173 ms/op
# Warmup Iteration   3: 4555,891 ms/op
# Warmup Iteration   4: 4556,806 ms/op
# Warmup Iteration   5: 4555,106 ms/op
# Warmup Iteration   6: 4645,261 ms/op
# Warmup Iteration   7: 4564,207 ms/op
# Warmup Iteration   8: 4577,903 ms/op
# Warmup Iteration   9: 4576,616 ms/op
# Warmup Iteration  10: 4577,339 ms/op
Iteration   1: 4563,882 ms/op
Iteration   2: 4568,771 ms/op
Iteration   3: 4565,443 ms/op
Iteration   4: 4565,878 ms/op
Iteration   5: 4571,052 ms/op
Iteration   6: 4567,612 ms/op
Iteration   7: 4567,808 ms/op
Iteration   8: 4567,931 ms/op
Iteration   9: 4597,810 ms/op
Iteration  10: 4547,218 ms/op


Result "benchmarkFind":
  4568,341 ±(99.9%) 18,568 ms/op [Average]
  (min, avg, max) = (4547,218, 4568,341, 4597,810), stdev = 12,281
  CI (99.9%): [4549,773, 4586,908] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCShiftAndBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternSize = 8)

# Run progress: 76,19% complete, ETA 03:41:25
# Fork: 1 of 1
# Warmup Iteration   1: 3566,356 ms/op
# Warmup Iteration   2: 3501,639 ms/op
# Warmup Iteration   3: 3474,500 ms/op
# Warmup Iteration   4: 3455,811 ms/op
# Warmup Iteration   5: 3452,831 ms/op
# Warmup Iteration   6: 3446,192 ms/op
# Warmup Iteration   7: 3468,049 ms/op
# Warmup Iteration   8: 3449,822 ms/op
# Warmup Iteration   9: 3449,975 ms/op
# Warmup Iteration  10: 3449,971 ms/op
Iteration   1: 3448,715 ms/op
Iteration   2: 3445,489 ms/op
Iteration   3: 3448,510 ms/op
Iteration   4: 3571,530 ms/op
Iteration   5: 3492,612 ms/op
Iteration   6: 3506,449 ms/op
Iteration   7: 3513,540 ms/op
Iteration   8: 3494,221 ms/op
Iteration   9: 3488,167 ms/op
Iteration  10: 3481,863 ms/op


Result "benchmarkFind":
  3489,110 ±(99.9%) 57,383 ms/op [Average]
  (min, avg, max) = (3445,489, 3489,110, 3571,530), stdev = 37,955
  CI (99.9%): [3431,727, 3546,492] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCShiftAndBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternSize = 16)

# Run progress: 76,24% complete, ETA 03:41:15
# Fork: 1 of 1
# Warmup Iteration   1: 3156,254 ms/op
# Warmup Iteration   2: 3107,680 ms/op
# Warmup Iteration   3: 3107,768 ms/op
# Warmup Iteration   4: 3105,707 ms/op
# Warmup Iteration   5: 3127,051 ms/op
# Warmup Iteration   6: 3106,726 ms/op
# Warmup Iteration   7: 3101,042 ms/op
# Warmup Iteration   8: 3105,631 ms/op
# Warmup Iteration   9: 3103,223 ms/op
# Warmup Iteration  10: 3115,592 ms/op
Iteration   1: 3250,379 ms/op
Iteration   2: 3159,189 ms/op
Iteration   3: 3133,424 ms/op
Iteration   4: 3147,350 ms/op
Iteration   5: 3163,132 ms/op
Iteration   6: 3138,421 ms/op
Iteration   7: 3149,333 ms/op
Iteration   8: 3141,408 ms/op
Iteration   9: 3142,881 ms/op
Iteration  10: 3149,790 ms/op


Result "benchmarkFind":
  3157,530 ±(99.9%) 51,162 ms/op [Average]
  (min, avg, max) = (3133,424, 3157,530, 3250,379), stdev = 33,840
  CI (99.9%): [3106,369, 3208,692] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCShiftAndBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternSize = 32)

# Run progress: 76,29% complete, ETA 03:41:03
# Fork: 1 of 1
# Warmup Iteration   1: 2651,361 ms/op
# Warmup Iteration   2: 2605,228 ms/op
# Warmup Iteration   3: 2596,855 ms/op
# Warmup Iteration   4: 2613,349 ms/op
# Warmup Iteration   5: 2596,674 ms/op
# Warmup Iteration   6: 2601,316 ms/op
# Warmup Iteration   7: 2601,102 ms/op
# Warmup Iteration   8: 2604,501 ms/op
# Warmup Iteration   9: 2668,070 ms/op
# Warmup Iteration  10: 2609,038 ms/op
Iteration   1: 2593,651 ms/op
Iteration   2: 2583,592 ms/op
Iteration   3: 2591,092 ms/op
Iteration   4: 2585,315 ms/op
Iteration   5: 2584,452 ms/op
Iteration   6: 2585,356 ms/op
Iteration   7: 2585,298 ms/op
Iteration   8: 2594,382 ms/op
Iteration   9: 2584,021 ms/op
Iteration  10: 2593,919 ms/op


Result "benchmarkFind":
  2588,108 ±(99.9%) 6,882 ms/op [Average]
  (min, avg, max) = (2583,592, 2588,108, 2594,382), stdev = 4,552
  CI (99.9%): [2581,226, 2594,990] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCShiftAndBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternSize = 64)

# Run progress: 76,33% complete, ETA 03:40:47
# Fork: 1 of 1
# Warmup Iteration   1: 2393,905 ms/op
# Warmup Iteration   2: 2321,081 ms/op
# Warmup Iteration   3: 2344,515 ms/op
# Warmup Iteration   4: 2326,136 ms/op
# Warmup Iteration   5: 2336,184 ms/op
# Warmup Iteration   6: 2325,854 ms/op
# Warmup Iteration   7: 2339,589 ms/op
# Warmup Iteration   8: 2325,557 ms/op
# Warmup Iteration   9: 2334,142 ms/op
# Warmup Iteration  10: 2331,745 ms/op
Iteration   1: 2414,665 ms/op
Iteration   2: 2327,306 ms/op
Iteration   3: 2321,550 ms/op
Iteration   4: 2333,748 ms/op
Iteration   5: 2335,731 ms/op
Iteration   6: 2325,679 ms/op
Iteration   7: 2336,123 ms/op
Iteration   8: 2331,934 ms/op
Iteration   9: 2330,833 ms/op
Iteration  10: 2331,432 ms/op


Result "benchmarkFind":
  2338,900 ±(99.9%) 40,830 ms/op [Average]
  (min, avg, max) = (2321,550, 2338,900, 2414,665), stdev = 27,007
  CI (99.9%): [2298,070, 2379,730] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCShiftAndBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternSize = 128)

# Run progress: 76,38% complete, ETA 03:40:30
# Fork: 1 of 1
# Warmup Iteration   1: 12045,970 ms/op
# Warmup Iteration   2: 12021,890 ms/op
# Warmup Iteration   3: 12086,620 ms/op
# Warmup Iteration   4: 12029,913 ms/op
# Warmup Iteration   5: 11995,873 ms/op
# Warmup Iteration   6: 12006,855 ms/op
# Warmup Iteration   7: 11996,607 ms/op
# Warmup Iteration   8: 12059,165 ms/op
# Warmup Iteration   9: 11836,178 ms/op
# Warmup Iteration  10: 11842,685 ms/op
Iteration   1: 11837,993 ms/op
Iteration   2: 11846,600 ms/op
Iteration   3: 12013,048 ms/op
Iteration   4: 12012,458 ms/op
Iteration   5: 11982,122 ms/op
Iteration   6: 11963,222 ms/op
Iteration   7: 12016,936 ms/op
Iteration   8: 12113,644 ms/op
Iteration   9: 11983,251 ms/op
Iteration  10: 11960,152 ms/op


Result "benchmarkFind":
  11972,943 ±(99.9%) 122,953 ms/op [Average]
  (min, avg, max) = (11837,993, 11972,943, 12113,644), stdev = 81,326
  CI (99.9%): [11849,990, 12095,895] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCShiftAndBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternSize = 256)

# Run progress: 76,42% complete, ETA 03:41:12
# Fork: 1 of 1
# Warmup Iteration   1: 15756,025 ms/op
# Warmup Iteration   2: 15659,449 ms/op
# Warmup Iteration   3: 15625,900 ms/op
# Warmup Iteration   4: 15638,244 ms/op
# Warmup Iteration   5: 15594,298 ms/op
# Warmup Iteration   6: 15710,235 ms/op
# Warmup Iteration   7: 15643,550 ms/op
# Warmup Iteration   8: 15664,039 ms/op
# Warmup Iteration   9: 15650,804 ms/op
# Warmup Iteration  10: 15735,058 ms/op
Iteration   1: 15654,844 ms/op
Iteration   2: 15657,539 ms/op
Iteration   3: 15647,767 ms/op
Iteration   4: 15572,098 ms/op
Iteration   5: 15411,058 ms/op
Iteration   6: 15424,961 ms/op
Iteration   7: 15496,159 ms/op
Iteration   8: 15727,274 ms/op
Iteration   9: 15575,260 ms/op
Iteration  10: 15659,257 ms/op


Result "benchmarkFind":
  15582,622 ±(99.9%) 162,365 ms/op [Average]
  (min, avg, max) = (15411,058, 15582,622, 15727,274), stdev = 107,394
  CI (99.9%): [15420,257, 15744,987] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSundayBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternSize = 2)

# Run progress: 76,47% complete, ETA 03:42:16
# Fork: 1 of 1
# Warmup Iteration   1: 0,226 ms/op
# Warmup Iteration   2: 0,205 ms/op
# Warmup Iteration   3: 0,191 ms/op
# Warmup Iteration   4: 0,192 ms/op
# Warmup Iteration   5: 0,190 ms/op
# Warmup Iteration   6: 0,192 ms/op
# Warmup Iteration   7: 0,193 ms/op
# Warmup Iteration   8: 0,192 ms/op
# Warmup Iteration   9: 0,193 ms/op
# Warmup Iteration  10: 0,192 ms/op
Iteration   1: 0,195 ms/op
Iteration   2: 0,194 ms/op
Iteration   3: 0,214 ms/op
Iteration   4: 0,204 ms/op
Iteration   5: 0,190 ms/op
Iteration   6: 0,192 ms/op
Iteration   7: 0,192 ms/op
Iteration   8: 0,191 ms/op
Iteration   9: 0,194 ms/op
Iteration  10: 0,193 ms/op


Result "benchmarkFind":
  0,196 ±(99.9%) 0,011 ms/op [Average]
  (min, avg, max) = (0,190, 0,196, 0,214), stdev = 0,007
  CI (99.9%): [0,185, 0,207] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSundayBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternSize = 4)

# Run progress: 76,52% complete, ETA 03:41:49
# Fork: 1 of 1
# Warmup Iteration   1: 0,712 ms/op
# Warmup Iteration   2: 0,657 ms/op
# Warmup Iteration   3: 0,650 ms/op
# Warmup Iteration   4: 0,656 ms/op
# Warmup Iteration   5: 0,655 ms/op
# Warmup Iteration   6: 0,661 ms/op
# Warmup Iteration   7: 0,657 ms/op
# Warmup Iteration   8: 0,654 ms/op
# Warmup Iteration   9: 0,658 ms/op
# Warmup Iteration  10: 0,660 ms/op
Iteration   1: 0,658 ms/op
Iteration   2: 0,666 ms/op
Iteration   3: 0,660 ms/op
Iteration   4: 0,661 ms/op
Iteration   5: 0,655 ms/op
Iteration   6: 0,664 ms/op
Iteration   7: 0,654 ms/op
Iteration   8: 0,655 ms/op
Iteration   9: 0,659 ms/op
Iteration  10: 0,656 ms/op


Result "benchmarkFind":
  0,659 ±(99.9%) 0,006 ms/op [Average]
  (min, avg, max) = (0,654, 0,659, 0,666), stdev = 0,004
  CI (99.9%): [0,653, 0,665] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSundayBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternSize = 8)

# Run progress: 76,56% complete, ETA 03:41:21
# Fork: 1 of 1
# Warmup Iteration   1: 54,749 ms/op
# Warmup Iteration   2: 48,499 ms/op
# Warmup Iteration   3: 48,593 ms/op
# Warmup Iteration   4: 48,122 ms/op
# Warmup Iteration   5: 48,211 ms/op
# Warmup Iteration   6: 48,140 ms/op
# Warmup Iteration   7: 48,305 ms/op
# Warmup Iteration   8: 48,021 ms/op
# Warmup Iteration   9: 48,071 ms/op
# Warmup Iteration  10: 48,300 ms/op
Iteration   1: 48,153 ms/op
Iteration   2: 48,493 ms/op
Iteration   3: 48,993 ms/op
Iteration   4: 48,217 ms/op
Iteration   5: 48,386 ms/op
Iteration   6: 48,658 ms/op
Iteration   7: 48,881 ms/op
Iteration   8: 49,021 ms/op
Iteration   9: 48,582 ms/op
Iteration  10: 48,739 ms/op


Result "benchmarkFind":
  48,612 ±(99.9%) 0,461 ms/op [Average]
  (min, avg, max) = (48,153, 48,612, 49,021), stdev = 0,305
  CI (99.9%): [48,151, 49,073] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSundayBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternSize = 16)

# Run progress: 76,61% complete, ETA 03:40:53
# Fork: 1 of 1
# Warmup Iteration   1: 693,728 ms/op
# Warmup Iteration   2: 658,259 ms/op
# Warmup Iteration   3: 657,292 ms/op
# Warmup Iteration   4: 657,551 ms/op
# Warmup Iteration   5: 655,851 ms/op
# Warmup Iteration   6: 654,838 ms/op
# Warmup Iteration   7: 657,505 ms/op
# Warmup Iteration   8: 698,557 ms/op
# Warmup Iteration   9: 671,270 ms/op
# Warmup Iteration  10: 656,623 ms/op
Iteration   1: 658,806 ms/op
Iteration   2: 656,602 ms/op
Iteration   3: 657,801 ms/op
Iteration   4: 658,749 ms/op
Iteration   5: 659,395 ms/op
Iteration   6: 660,613 ms/op
Iteration   7: 659,876 ms/op
Iteration   8: 663,287 ms/op
Iteration   9: 658,436 ms/op
Iteration  10: 659,273 ms/op


Result "benchmarkFind":
  659,284 ±(99.9%) 2,703 ms/op [Average]
  (min, avg, max) = (656,602, 659,284, 663,287), stdev = 1,788
  CI (99.9%): [656,580, 661,987] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSundayBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternSize = 32)

# Run progress: 76,65% complete, ETA 03:40:28
# Fork: 1 of 1
# Warmup Iteration   1: 703,297 ms/op
# Warmup Iteration   2: 670,802 ms/op
# Warmup Iteration   3: 671,700 ms/op
# Warmup Iteration   4: 668,149 ms/op
# Warmup Iteration   5: 669,870 ms/op
# Warmup Iteration   6: 673,383 ms/op
# Warmup Iteration   7: 670,816 ms/op
# Warmup Iteration   8: 674,135 ms/op
# Warmup Iteration   9: 675,646 ms/op
# Warmup Iteration  10: 676,619 ms/op
Iteration   1: 671,413 ms/op
Iteration   2: 670,957 ms/op
Iteration   3: 671,302 ms/op
Iteration   4: 667,760 ms/op
Iteration   5: 671,310 ms/op
Iteration   6: 671,091 ms/op
Iteration   7: 672,320 ms/op
Iteration   8: 671,607 ms/op
Iteration   9: 673,047 ms/op
Iteration  10: 670,544 ms/op


Result "benchmarkFind":
  671,135 ±(99.9%) 2,089 ms/op [Average]
  (min, avg, max) = (667,760, 671,135, 673,047), stdev = 1,382
  CI (99.9%): [669,046, 673,224] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSundayBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternSize = 64)

# Run progress: 76,70% complete, ETA 03:40:02
# Fork: 1 of 1
# Warmup Iteration   1: 706,938 ms/op
# Warmup Iteration   2: 678,200 ms/op
# Warmup Iteration   3: 671,620 ms/op
# Warmup Iteration   4: 673,552 ms/op
# Warmup Iteration   5: 674,221 ms/op
# Warmup Iteration   6: 675,548 ms/op
# Warmup Iteration   7: 673,420 ms/op
# Warmup Iteration   8: 674,822 ms/op
# Warmup Iteration   9: 673,740 ms/op
# Warmup Iteration  10: 675,720 ms/op
Iteration   1: 699,422 ms/op
Iteration   2: 692,052 ms/op
Iteration   3: 667,465 ms/op
Iteration   4: 669,888 ms/op
Iteration   5: 663,948 ms/op
Iteration   6: 667,794 ms/op
Iteration   7: 665,932 ms/op
Iteration   8: 669,958 ms/op
Iteration   9: 667,773 ms/op
Iteration  10: 666,011 ms/op


Result "benchmarkFind":
  673,024 ±(99.9%) 18,488 ms/op [Average]
  (min, avg, max) = (663,948, 673,024, 699,422), stdev = 12,229
  CI (99.9%): [654,536, 691,512] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSundayBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternSize = 128)

# Run progress: 76,75% complete, ETA 03:39:37
# Fork: 1 of 1
# Warmup Iteration   1: 704,326 ms/op
# Warmup Iteration   2: 685,140 ms/op
# Warmup Iteration   3: 681,393 ms/op
# Warmup Iteration   4: 685,965 ms/op
# Warmup Iteration   5: 682,528 ms/op
# Warmup Iteration   6: 691,836 ms/op
# Warmup Iteration   7: 683,277 ms/op
# Warmup Iteration   8: 684,053 ms/op
# Warmup Iteration   9: 686,124 ms/op
# Warmup Iteration  10: 687,983 ms/op
Iteration   1: 682,715 ms/op
Iteration   2: 687,760 ms/op
Iteration   3: 682,483 ms/op
Iteration   4: 681,957 ms/op
Iteration   5: 689,533 ms/op
Iteration   6: 680,980 ms/op
Iteration   7: 676,818 ms/op
Iteration   8: 677,307 ms/op
Iteration   9: 683,446 ms/op
Iteration  10: 675,970 ms/op


Result "benchmarkFind":
  681,897 ±(99.9%) 6,741 ms/op [Average]
  (min, avg, max) = (675,970, 681,897, 689,533), stdev = 4,459
  CI (99.9%): [675,156, 688,638] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSundayBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternSize = 256)

# Run progress: 76,79% complete, ETA 03:39:12
# Fork: 1 of 1
# Warmup Iteration   1: 703,041 ms/op
# Warmup Iteration   2: 669,242 ms/op
# Warmup Iteration   3: 663,807 ms/op
# Warmup Iteration   4: 661,379 ms/op
# Warmup Iteration   5: 663,693 ms/op
# Warmup Iteration   6: 661,818 ms/op
# Warmup Iteration   7: 662,214 ms/op
# Warmup Iteration   8: 662,805 ms/op
# Warmup Iteration   9: 663,511 ms/op
# Warmup Iteration  10: 665,306 ms/op
Iteration   1: 666,052 ms/op
Iteration   2: 663,410 ms/op
Iteration   3: 664,479 ms/op
Iteration   4: 725,265 ms/op
Iteration   5: 664,165 ms/op
Iteration   6: 664,023 ms/op
Iteration   7: 660,860 ms/op
Iteration   8: 662,575 ms/op
Iteration   9: 665,086 ms/op
Iteration  10: 663,055 ms/op


Result "benchmarkFind":
  669,897 ±(99.9%) 29,491 ms/op [Average]
  (min, avg, max) = (660,860, 669,897, 725,265), stdev = 19,506
  CI (99.9%): [640,406, 699,388] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSundayBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternSize = 2)

# Run progress: 76,84% complete, ETA 03:38:46
# Fork: 1 of 1
# Warmup Iteration   1: 0,654 ms/op
# Warmup Iteration   2: 0,598 ms/op
# Warmup Iteration   3: 0,596 ms/op
# Warmup Iteration   4: 0,597 ms/op
# Warmup Iteration   5: 0,592 ms/op
# Warmup Iteration   6: 0,598 ms/op
# Warmup Iteration   7: 0,601 ms/op
# Warmup Iteration   8: 0,600 ms/op
# Warmup Iteration   9: 0,602 ms/op
# Warmup Iteration  10: 0,605 ms/op
Iteration   1: 0,604 ms/op
Iteration   2: 0,611 ms/op
Iteration   3: 0,602 ms/op
Iteration   4: 0,599 ms/op
Iteration   5: 0,601 ms/op
Iteration   6: 0,603 ms/op
Iteration   7: 0,600 ms/op
Iteration   8: 0,600 ms/op
Iteration   9: 0,598 ms/op
Iteration  10: 0,599 ms/op


Result "benchmarkFind":
  0,602 ±(99.9%) 0,006 ms/op [Average]
  (min, avg, max) = (0,598, 0,602, 0,611), stdev = 0,004
  CI (99.9%): [0,596, 0,607] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSundayBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternSize = 4)

# Run progress: 76,88% complete, ETA 03:38:18
# Fork: 1 of 1
# Warmup Iteration   1: 33,667 ms/op
# Warmup Iteration   2: 30,817 ms/op
# Warmup Iteration   3: 30,739 ms/op
# Warmup Iteration   4: 30,759 ms/op
# Warmup Iteration   5: 30,834 ms/op
# Warmup Iteration   6: 30,846 ms/op
# Warmup Iteration   7: 30,649 ms/op
# Warmup Iteration   8: 30,693 ms/op
# Warmup Iteration   9: 31,007 ms/op
# Warmup Iteration  10: 30,753 ms/op
Iteration   1: 30,628 ms/op
Iteration   2: 30,858 ms/op
Iteration   3: 30,674 ms/op
Iteration   4: 30,815 ms/op
Iteration   5: 30,533 ms/op
Iteration   6: 30,660 ms/op
Iteration   7: 30,687 ms/op
Iteration   8: 30,871 ms/op
Iteration   9: 30,674 ms/op
Iteration  10: 30,705 ms/op


Result "benchmarkFind":
  30,710 ±(99.9%) 0,161 ms/op [Average]
  (min, avg, max) = (30,533, 30,710, 30,871), stdev = 0,107
  CI (99.9%): [30,549, 30,872] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSundayBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternSize = 8)

# Run progress: 76,93% complete, ETA 03:37:51
# Fork: 1 of 1
# Warmup Iteration   1: 455,773 ms/op
# Warmup Iteration   2: 400,389 ms/op
# Warmup Iteration   3: 401,173 ms/op
# Warmup Iteration   4: 397,894 ms/op
# Warmup Iteration   5: 397,220 ms/op
# Warmup Iteration   6: 399,125 ms/op
# Warmup Iteration   7: 401,344 ms/op
# Warmup Iteration   8: 425,561 ms/op
# Warmup Iteration   9: 402,062 ms/op
# Warmup Iteration  10: 408,799 ms/op
Iteration   1: 398,001 ms/op
Iteration   2: 402,232 ms/op
Iteration   3: 398,347 ms/op
Iteration   4: 401,876 ms/op
Iteration   5: 397,320 ms/op
Iteration   6: 396,651 ms/op
Iteration   7: 400,028 ms/op
Iteration   8: 398,034 ms/op
Iteration   9: 399,059 ms/op
Iteration  10: 396,754 ms/op


Result "benchmarkFind":
  398,830 ±(99.9%) 2,991 ms/op [Average]
  (min, avg, max) = (396,651, 398,830, 402,232), stdev = 1,978
  CI (99.9%): [395,839, 401,821] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSundayBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternSize = 16)

# Run progress: 76,98% complete, ETA 03:37:24
# Fork: 1 of 1
# Warmup Iteration   1: 362,569 ms/op
# Warmup Iteration   2: 339,352 ms/op
# Warmup Iteration   3: 339,653 ms/op
# Warmup Iteration   4: 338,252 ms/op
# Warmup Iteration   5: 337,635 ms/op
# Warmup Iteration   6: 338,979 ms/op
# Warmup Iteration   7: 339,599 ms/op
# Warmup Iteration   8: 337,037 ms/op
# Warmup Iteration   9: 339,368 ms/op
# Warmup Iteration  10: 338,152 ms/op
Iteration   1: 336,618 ms/op
Iteration   2: 337,945 ms/op
Iteration   3: 343,180 ms/op
Iteration   4: 337,621 ms/op
Iteration   5: 336,541 ms/op
Iteration   6: 338,442 ms/op
Iteration   7: 341,087 ms/op
Iteration   8: 339,485 ms/op
Iteration   9: 339,339 ms/op
Iteration  10: 339,284 ms/op


Result "benchmarkFind":
  338,954 ±(99.9%) 3,077 ms/op [Average]
  (min, avg, max) = (336,541, 338,954, 343,180), stdev = 2,035
  CI (99.9%): [335,877, 342,031] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSundayBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternSize = 32)

# Run progress: 77,02% complete, ETA 03:36:57
# Fork: 1 of 1
# Warmup Iteration   1: 330,440 ms/op
# Warmup Iteration   2: 317,268 ms/op
# Warmup Iteration   3: 314,549 ms/op
# Warmup Iteration   4: 314,196 ms/op
# Warmup Iteration   5: 315,172 ms/op
# Warmup Iteration   6: 326,381 ms/op
# Warmup Iteration   7: 319,283 ms/op
# Warmup Iteration   8: 312,296 ms/op
# Warmup Iteration   9: 315,282 ms/op
# Warmup Iteration  10: 312,262 ms/op
Iteration   1: 312,700 ms/op
Iteration   2: 312,663 ms/op
Iteration   3: 311,899 ms/op
Iteration   4: 311,970 ms/op
Iteration   5: 311,823 ms/op
Iteration   6: 312,352 ms/op
Iteration   7: 311,355 ms/op
Iteration   8: 332,292 ms/op
Iteration   9: 314,845 ms/op
Iteration  10: 313,949 ms/op


Result "benchmarkFind":
  314,585 ±(99.9%) 9,540 ms/op [Average]
  (min, avg, max) = (311,355, 314,585, 332,292), stdev = 6,310
  CI (99.9%): [305,045, 324,125] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSundayBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternSize = 64)

# Run progress: 77,07% complete, ETA 03:36:31
# Fork: 1 of 1
# Warmup Iteration   1: 345,534 ms/op
# Warmup Iteration   2: 330,715 ms/op
# Warmup Iteration   3: 330,931 ms/op
# Warmup Iteration   4: 330,208 ms/op
# Warmup Iteration   5: 330,167 ms/op
# Warmup Iteration   6: 330,634 ms/op
# Warmup Iteration   7: 329,192 ms/op
# Warmup Iteration   8: 328,505 ms/op
# Warmup Iteration   9: 328,944 ms/op
# Warmup Iteration  10: 327,929 ms/op
Iteration   1: 329,366 ms/op
Iteration   2: 330,444 ms/op
Iteration   3: 327,616 ms/op
Iteration   4: 330,649 ms/op
Iteration   5: 328,052 ms/op
Iteration   6: 330,207 ms/op
Iteration   7: 329,740 ms/op
Iteration   8: 329,769 ms/op
Iteration   9: 330,079 ms/op
Iteration  10: 331,070 ms/op


Result "benchmarkFind":
  329,699 ±(99.9%) 1,664 ms/op [Average]
  (min, avg, max) = (327,616, 329,699, 331,070), stdev = 1,101
  CI (99.9%): [328,035, 331,364] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSundayBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternSize = 128)

# Run progress: 77,11% complete, ETA 03:36:05
# Fork: 1 of 1
# Warmup Iteration   1: 362,809 ms/op
# Warmup Iteration   2: 343,951 ms/op
# Warmup Iteration   3: 340,176 ms/op
# Warmup Iteration   4: 339,381 ms/op
# Warmup Iteration   5: 339,524 ms/op
# Warmup Iteration   6: 340,848 ms/op
# Warmup Iteration   7: 341,200 ms/op
# Warmup Iteration   8: 340,338 ms/op
# Warmup Iteration   9: 337,779 ms/op
# Warmup Iteration  10: 338,286 ms/op
Iteration   1: 341,227 ms/op
Iteration   2: 342,997 ms/op
Iteration   3: 339,594 ms/op
Iteration   4: 340,374 ms/op
Iteration   5: 340,644 ms/op
Iteration   6: 338,619 ms/op
Iteration   7: 341,792 ms/op
Iteration   8: 337,771 ms/op
Iteration   9: 337,378 ms/op
Iteration  10: 341,062 ms/op


Result "benchmarkFind":
  340,146 ±(99.9%) 2,718 ms/op [Average]
  (min, avg, max) = (337,378, 340,146, 342,997), stdev = 1,798
  CI (99.9%): [337,428, 342,864] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSundayBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternSize = 256)

# Run progress: 77,16% complete, ETA 03:35:38
# Fork: 1 of 1
# Warmup Iteration   1: 349,042 ms/op
# Warmup Iteration   2: 329,127 ms/op
# Warmup Iteration   3: 330,566 ms/op
# Warmup Iteration   4: 328,904 ms/op
# Warmup Iteration   5: 329,518 ms/op
# Warmup Iteration   6: 328,781 ms/op
# Warmup Iteration   7: 360,257 ms/op
# Warmup Iteration   8: 328,765 ms/op
# Warmup Iteration   9: 326,759 ms/op
# Warmup Iteration  10: 327,031 ms/op
Iteration   1: 327,075 ms/op
Iteration   2: 326,656 ms/op
Iteration   3: 326,397 ms/op
Iteration   4: 327,834 ms/op
Iteration   5: 327,036 ms/op
Iteration   6: 327,137 ms/op
Iteration   7: 323,844 ms/op
Iteration   8: 323,512 ms/op
Iteration   9: 322,457 ms/op
Iteration  10: 323,341 ms/op


Result "benchmarkFind":
  325,529 ±(99.9%) 3,012 ms/op [Average]
  (min, avg, max) = (322,457, 325,529, 327,834), stdev = 1,992
  CI (99.9%): [322,517, 328,541] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSundayBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternSize = 2)

# Run progress: 77,21% complete, ETA 03:35:12
# Fork: 1 of 1
# Warmup Iteration   1: 2,417 ms/op
# Warmup Iteration   2: 2,202 ms/op
# Warmup Iteration   3: 2,204 ms/op
# Warmup Iteration   4: 2,188 ms/op
# Warmup Iteration   5: 2,201 ms/op
# Warmup Iteration   6: 2,195 ms/op
# Warmup Iteration   7: 2,197 ms/op
# Warmup Iteration   8: 2,202 ms/op
# Warmup Iteration   9: 2,200 ms/op
# Warmup Iteration  10: 2,203 ms/op
Iteration   1: 2,210 ms/op
Iteration   2: 2,194 ms/op
Iteration   3: 2,217 ms/op
Iteration   4: 2,203 ms/op
Iteration   5: 2,194 ms/op
Iteration   6: 2,191 ms/op
Iteration   7: 2,186 ms/op
Iteration   8: 2,213 ms/op
Iteration   9: 2,207 ms/op
Iteration  10: 2,203 ms/op


Result "benchmarkFind":
  2,202 ±(99.9%) 0,016 ms/op [Average]
  (min, avg, max) = (2,186, 2,202, 2,217), stdev = 0,010
  CI (99.9%): [2,186, 2,218] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSundayBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternSize = 4)

# Run progress: 77,25% complete, ETA 03:34:44
# Fork: 1 of 1
# Warmup Iteration   1: 289,136 ms/op
# Warmup Iteration   2: 265,614 ms/op
# Warmup Iteration   3: 266,768 ms/op
# Warmup Iteration   4: 266,938 ms/op
# Warmup Iteration   5: 264,769 ms/op
# Warmup Iteration   6: 264,368 ms/op
# Warmup Iteration   7: 265,926 ms/op
# Warmup Iteration   8: 266,039 ms/op
# Warmup Iteration   9: 263,375 ms/op
# Warmup Iteration  10: 265,819 ms/op
Iteration   1: 265,585 ms/op
Iteration   2: 263,032 ms/op
Iteration   3: 264,613 ms/op
Iteration   4: 263,996 ms/op
Iteration   5: 262,791 ms/op
Iteration   6: 263,621 ms/op
Iteration   7: 267,403 ms/op
Iteration   8: 265,943 ms/op
Iteration   9: 265,922 ms/op
Iteration  10: 294,311 ms/op


Result "benchmarkFind":
  267,722 ±(99.9%) 14,296 ms/op [Average]
  (min, avg, max) = (262,791, 267,722, 294,311), stdev = 9,456
  CI (99.9%): [253,425, 282,018] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSundayBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternSize = 8)

# Run progress: 77,30% complete, ETA 03:34:17
# Fork: 1 of 1
# Warmup Iteration   1: 187,219 ms/op
# Warmup Iteration   2: 172,688 ms/op
# Warmup Iteration   3: 173,402 ms/op
# Warmup Iteration   4: 172,574 ms/op
# Warmup Iteration   5: 172,444 ms/op
# Warmup Iteration   6: 173,272 ms/op
# Warmup Iteration   7: 172,720 ms/op
# Warmup Iteration   8: 172,614 ms/op
# Warmup Iteration   9: 172,296 ms/op
# Warmup Iteration  10: 172,982 ms/op
Iteration   1: 172,325 ms/op
Iteration   2: 172,208 ms/op
Iteration   3: 172,386 ms/op
Iteration   4: 171,150 ms/op
Iteration   5: 172,918 ms/op
Iteration   6: 172,236 ms/op
Iteration   7: 173,485 ms/op
Iteration   8: 172,565 ms/op
Iteration   9: 172,272 ms/op
Iteration  10: 172,659 ms/op


Result "benchmarkFind":
  172,420 ±(99.9%) 0,899 ms/op [Average]
  (min, avg, max) = (171,150, 172,420, 173,485), stdev = 0,595
  CI (99.9%): [171,521, 173,319] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSundayBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternSize = 16)

# Run progress: 77,34% complete, ETA 03:33:50
# Fork: 1 of 1
# Warmup Iteration   1: 144,206 ms/op
# Warmup Iteration   2: 129,332 ms/op
# Warmup Iteration   3: 129,199 ms/op
# Warmup Iteration   4: 134,475 ms/op
# Warmup Iteration   5: 143,311 ms/op
# Warmup Iteration   6: 133,041 ms/op
# Warmup Iteration   7: 129,368 ms/op
# Warmup Iteration   8: 129,980 ms/op
# Warmup Iteration   9: 131,294 ms/op
# Warmup Iteration  10: 130,711 ms/op
Iteration   1: 129,538 ms/op
Iteration   2: 129,772 ms/op
Iteration   3: 130,086 ms/op
Iteration   4: 129,989 ms/op
Iteration   5: 129,036 ms/op
Iteration   6: 129,134 ms/op
Iteration   7: 130,565 ms/op
Iteration   8: 130,275 ms/op
Iteration   9: 129,566 ms/op
Iteration  10: 129,941 ms/op


Result "benchmarkFind":
  129,790 ±(99.9%) 0,730 ms/op [Average]
  (min, avg, max) = (129,036, 129,790, 130,565), stdev = 0,483
  CI (99.9%): [129,060, 130,520] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSundayBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternSize = 32)

# Run progress: 77,39% complete, ETA 03:33:23
# Fork: 1 of 1
# Warmup Iteration   1: 133,545 ms/op
# Warmup Iteration   2: 116,065 ms/op
# Warmup Iteration   3: 115,023 ms/op
# Warmup Iteration   4: 115,555 ms/op
# Warmup Iteration   5: 115,971 ms/op
# Warmup Iteration   6: 115,743 ms/op
# Warmup Iteration   7: 114,526 ms/op
# Warmup Iteration   8: 115,292 ms/op
# Warmup Iteration   9: 115,737 ms/op
# Warmup Iteration  10: 115,551 ms/op
Iteration   1: 115,753 ms/op
Iteration   2: 115,717 ms/op
Iteration   3: 115,765 ms/op
Iteration   4: 114,978 ms/op
Iteration   5: 129,651 ms/op
Iteration   6: 115,174 ms/op
Iteration   7: 115,170 ms/op
Iteration   8: 116,069 ms/op
Iteration   9: 116,446 ms/op
Iteration  10: 117,489 ms/op


Result "benchmarkFind":
  117,221 ±(99.9%) 6,694 ms/op [Average]
  (min, avg, max) = (114,978, 117,221, 129,651), stdev = 4,428
  CI (99.9%): [110,527, 123,916] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSundayBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternSize = 64)

# Run progress: 77,44% complete, ETA 03:32:56
# Fork: 1 of 1
# Warmup Iteration   1: 126,644 ms/op
# Warmup Iteration   2: 119,294 ms/op
# Warmup Iteration   3: 118,414 ms/op
# Warmup Iteration   4: 119,261 ms/op
# Warmup Iteration   5: 118,353 ms/op
# Warmup Iteration   6: 119,121 ms/op
# Warmup Iteration   7: 118,863 ms/op
# Warmup Iteration   8: 119,366 ms/op
# Warmup Iteration   9: 118,472 ms/op
# Warmup Iteration  10: 118,579 ms/op
Iteration   1: 118,864 ms/op
Iteration   2: 118,759 ms/op
Iteration   3: 119,710 ms/op
Iteration   4: 119,333 ms/op
Iteration   5: 120,546 ms/op
Iteration   6: 119,328 ms/op
Iteration   7: 118,219 ms/op
Iteration   8: 117,737 ms/op
Iteration   9: 119,657 ms/op
Iteration  10: 118,734 ms/op


Result "benchmarkFind":
  119,089 ±(99.9%) 1,216 ms/op [Average]
  (min, avg, max) = (117,737, 119,089, 120,546), stdev = 0,804
  CI (99.9%): [117,873, 120,304] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSundayBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternSize = 128)

# Run progress: 77,48% complete, ETA 03:32:28
# Fork: 1 of 1
# Warmup Iteration   1: 132,832 ms/op
# Warmup Iteration   2: 124,161 ms/op
# Warmup Iteration   3: 123,175 ms/op
# Warmup Iteration   4: 122,949 ms/op
# Warmup Iteration   5: 122,136 ms/op
# Warmup Iteration   6: 122,687 ms/op
# Warmup Iteration   7: 123,620 ms/op
# Warmup Iteration   8: 123,426 ms/op
# Warmup Iteration   9: 122,615 ms/op
# Warmup Iteration  10: 124,344 ms/op
Iteration   1: 123,385 ms/op
Iteration   2: 124,217 ms/op
Iteration   3: 124,030 ms/op
Iteration   4: 121,986 ms/op
Iteration   5: 123,088 ms/op
Iteration   6: 122,422 ms/op
Iteration   7: 123,232 ms/op
Iteration   8: 122,973 ms/op
Iteration   9: 123,211 ms/op
Iteration  10: 123,585 ms/op


Result "benchmarkFind":
  123,213 ±(99.9%) 1,014 ms/op [Average]
  (min, avg, max) = (121,986, 123,213, 124,217), stdev = 0,671
  CI (99.9%): [122,199, 124,227] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSundayBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternSize = 256)

# Run progress: 77,53% complete, ETA 03:32:02
# Fork: 1 of 1
# Warmup Iteration   1: 126,915 ms/op
# Warmup Iteration   2: 120,517 ms/op
# Warmup Iteration   3: 120,048 ms/op
# Warmup Iteration   4: 120,429 ms/op
# Warmup Iteration   5: 119,244 ms/op
# Warmup Iteration   6: 120,478 ms/op
# Warmup Iteration   7: 120,161 ms/op
# Warmup Iteration   8: 132,042 ms/op
# Warmup Iteration   9: 119,890 ms/op
# Warmup Iteration  10: 122,372 ms/op
Iteration   1: 117,895 ms/op
Iteration   2: 118,025 ms/op
Iteration   3: 118,019 ms/op
Iteration   4: 118,025 ms/op
Iteration   5: 118,995 ms/op
Iteration   6: 118,551 ms/op
Iteration   7: 118,838 ms/op
Iteration   8: 118,563 ms/op
Iteration   9: 119,086 ms/op
Iteration  10: 118,813 ms/op


Result "benchmarkFind":
  118,481 ±(99.9%) 0,686 ms/op [Average]
  (min, avg, max) = (117,895, 118,481, 119,086), stdev = 0,454
  CI (99.9%): [117,795, 119,167] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSundayBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternSize = 2)

# Run progress: 77,57% complete, ETA 03:31:34
# Fork: 1 of 1
# Warmup Iteration   1: 24,888 ms/op
# Warmup Iteration   2: 23,397 ms/op
# Warmup Iteration   3: 23,351 ms/op
# Warmup Iteration   4: 23,099 ms/op
# Warmup Iteration   5: 23,189 ms/op
# Warmup Iteration   6: 22,933 ms/op
# Warmup Iteration   7: 23,221 ms/op
# Warmup Iteration   8: 23,232 ms/op
# Warmup Iteration   9: 23,140 ms/op
# Warmup Iteration  10: 23,045 ms/op
Iteration   1: 23,053 ms/op
Iteration   2: 22,996 ms/op
Iteration   3: 23,015 ms/op
Iteration   4: 23,080 ms/op
Iteration   5: 23,180 ms/op
Iteration   6: 23,276 ms/op
Iteration   7: 23,211 ms/op
Iteration   8: 23,063 ms/op
Iteration   9: 22,947 ms/op
Iteration  10: 23,095 ms/op


Result "benchmarkFind":
  23,092 ±(99.9%) 0,155 ms/op [Average]
  (min, avg, max) = (22,947, 23,092, 23,276), stdev = 0,103
  CI (99.9%): [22,937, 23,247] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSundayBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternSize = 4)

# Run progress: 77,62% complete, ETA 03:31:07
# Fork: 1 of 1
# Warmup Iteration   1: 213,475 ms/op
# Warmup Iteration   2: 201,210 ms/op
# Warmup Iteration   3: 200,538 ms/op
# Warmup Iteration   4: 201,599 ms/op
# Warmup Iteration   5: 202,728 ms/op
# Warmup Iteration   6: 201,032 ms/op
# Warmup Iteration   7: 200,427 ms/op
# Warmup Iteration   8: 201,521 ms/op
# Warmup Iteration   9: 199,536 ms/op
# Warmup Iteration  10: 201,161 ms/op
Iteration   1: 200,960 ms/op
Iteration   2: 198,736 ms/op
Iteration   3: 200,525 ms/op
Iteration   4: 199,356 ms/op
Iteration   5: 201,253 ms/op
Iteration   6: 199,449 ms/op
Iteration   7: 199,641 ms/op
Iteration   8: 200,372 ms/op
Iteration   9: 199,010 ms/op
Iteration  10: 198,392 ms/op


Result "benchmarkFind":
  199,769 ±(99.9%) 1,459 ms/op [Average]
  (min, avg, max) = (198,392, 199,769, 201,253), stdev = 0,965
  CI (99.9%): [198,310, 201,228] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSundayBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternSize = 8)

# Run progress: 77,67% complete, ETA 03:30:40
# Fork: 1 of 1
# Warmup Iteration   1: 123,697 ms/op
# Warmup Iteration   2: 114,490 ms/op
# Warmup Iteration   3: 127,507 ms/op
# Warmup Iteration   4: 114,334 ms/op
# Warmup Iteration   5: 115,161 ms/op
# Warmup Iteration   6: 114,338 ms/op
# Warmup Iteration   7: 114,539 ms/op
# Warmup Iteration   8: 114,145 ms/op
# Warmup Iteration   9: 114,802 ms/op
# Warmup Iteration  10: 115,216 ms/op
Iteration   1: 114,787 ms/op
Iteration   2: 115,078 ms/op
Iteration   3: 115,293 ms/op
Iteration   4: 114,968 ms/op
Iteration   5: 114,898 ms/op
Iteration   6: 115,193 ms/op
Iteration   7: 114,546 ms/op
Iteration   8: 114,902 ms/op
Iteration   9: 115,020 ms/op
Iteration  10: 114,577 ms/op


Result "benchmarkFind":
  114,926 ±(99.9%) 0,366 ms/op [Average]
  (min, avg, max) = (114,546, 114,926, 115,293), stdev = 0,242
  CI (99.9%): [114,560, 115,292] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSundayBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternSize = 16)

# Run progress: 77,71% complete, ETA 03:30:13
# Fork: 1 of 1
# Warmup Iteration   1: 79,092 ms/op
# Warmup Iteration   2: 72,041 ms/op
# Warmup Iteration   3: 71,184 ms/op
# Warmup Iteration   4: 71,300 ms/op
# Warmup Iteration   5: 71,227 ms/op
# Warmup Iteration   6: 71,964 ms/op
# Warmup Iteration   7: 71,142 ms/op
# Warmup Iteration   8: 71,767 ms/op
# Warmup Iteration   9: 71,160 ms/op
# Warmup Iteration  10: 71,840 ms/op
Iteration   1: 71,714 ms/op
Iteration   2: 70,764 ms/op
Iteration   3: 71,027 ms/op
Iteration   4: 70,871 ms/op
Iteration   5: 71,197 ms/op
Iteration   6: 71,605 ms/op
Iteration   7: 72,093 ms/op
Iteration   8: 71,728 ms/op
Iteration   9: 71,616 ms/op
Iteration  10: 71,156 ms/op


Result "benchmarkFind":
  71,377 ±(99.9%) 0,656 ms/op [Average]
  (min, avg, max) = (70,764, 71,377, 72,093), stdev = 0,434
  CI (99.9%): [70,721, 72,033] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSundayBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternSize = 32)

# Run progress: 77,76% complete, ETA 03:29:45
# Fork: 1 of 1
# Warmup Iteration   1: 59,493 ms/op
# Warmup Iteration   2: 54,280 ms/op
# Warmup Iteration   3: 54,513 ms/op
# Warmup Iteration   4: 54,277 ms/op
# Warmup Iteration   5: 55,600 ms/op
# Warmup Iteration   6: 53,862 ms/op
# Warmup Iteration   7: 54,193 ms/op
# Warmup Iteration   8: 54,363 ms/op
# Warmup Iteration   9: 54,526 ms/op
# Warmup Iteration  10: 54,290 ms/op
Iteration   1: 54,370 ms/op
Iteration   2: 54,494 ms/op
Iteration   3: 54,143 ms/op
Iteration   4: 54,062 ms/op
Iteration   5: 53,905 ms/op
Iteration   6: 54,254 ms/op
Iteration   7: 54,276 ms/op
Iteration   8: 54,489 ms/op
Iteration   9: 59,336 ms/op
Iteration  10: 53,855 ms/op


Result "benchmarkFind":
  54,718 ±(99.9%) 2,475 ms/op [Average]
  (min, avg, max) = (53,855, 54,718, 59,336), stdev = 1,637
  CI (99.9%): [52,243, 57,194] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSundayBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternSize = 64)

# Run progress: 77,80% complete, ETA 03:29:18
# Fork: 1 of 1
# Warmup Iteration   1: 57,620 ms/op
# Warmup Iteration   2: 50,535 ms/op
# Warmup Iteration   3: 50,143 ms/op
# Warmup Iteration   4: 50,264 ms/op
# Warmup Iteration   5: 49,902 ms/op
# Warmup Iteration   6: 49,740 ms/op
# Warmup Iteration   7: 50,165 ms/op
# Warmup Iteration   8: 49,646 ms/op
# Warmup Iteration   9: 50,109 ms/op
# Warmup Iteration  10: 49,761 ms/op
Iteration   1: 49,645 ms/op
Iteration   2: 49,810 ms/op
Iteration   3: 49,849 ms/op
Iteration   4: 49,924 ms/op
Iteration   5: 49,757 ms/op
Iteration   6: 49,468 ms/op
Iteration   7: 49,613 ms/op
Iteration   8: 50,328 ms/op
Iteration   9: 49,766 ms/op
Iteration  10: 49,495 ms/op


Result "benchmarkFind":
  49,765 ±(99.9%) 0,373 ms/op [Average]
  (min, avg, max) = (49,468, 49,765, 50,328), stdev = 0,247
  CI (99.9%): [49,392, 50,139] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSundayBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternSize = 128)

# Run progress: 77,85% complete, ETA 03:28:51
# Fork: 1 of 1
# Warmup Iteration   1: 52,282 ms/op
# Warmup Iteration   2: 48,708 ms/op
# Warmup Iteration   3: 48,708 ms/op
# Warmup Iteration   4: 48,863 ms/op
# Warmup Iteration   5: 48,768 ms/op
# Warmup Iteration   6: 48,359 ms/op
# Warmup Iteration   7: 48,233 ms/op
# Warmup Iteration   8: 48,220 ms/op
# Warmup Iteration   9: 48,211 ms/op
# Warmup Iteration  10: 48,140 ms/op
Iteration   1: 48,581 ms/op
Iteration   2: 48,267 ms/op
Iteration   3: 48,248 ms/op
Iteration   4: 48,232 ms/op
Iteration   5: 48,313 ms/op
Iteration   6: 48,224 ms/op
Iteration   7: 48,468 ms/op
Iteration   8: 48,358 ms/op
Iteration   9: 48,289 ms/op
Iteration  10: 48,379 ms/op


Result "benchmarkFind":
  48,336 ±(99.9%) 0,174 ms/op [Average]
  (min, avg, max) = (48,224, 48,336, 48,581), stdev = 0,115
  CI (99.9%): [48,162, 48,510] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSundayBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternSize = 256)

# Run progress: 77,90% complete, ETA 03:28:23
# Fork: 1 of 1
# Warmup Iteration   1: 52,036 ms/op
# Warmup Iteration   2: 47,706 ms/op
# Warmup Iteration   3: 47,436 ms/op
# Warmup Iteration   4: 47,673 ms/op
# Warmup Iteration   5: 47,660 ms/op
# Warmup Iteration   6: 47,730 ms/op
# Warmup Iteration   7: 47,777 ms/op
# Warmup Iteration   8: 47,933 ms/op
# Warmup Iteration   9: 47,770 ms/op
# Warmup Iteration  10: 47,656 ms/op
Iteration   1: 47,656 ms/op
Iteration   2: 47,762 ms/op
Iteration   3: 47,923 ms/op
Iteration   4: 48,025 ms/op
Iteration   5: 52,159 ms/op
Iteration   6: 49,477 ms/op
Iteration   7: 47,097 ms/op
Iteration   8: 47,512 ms/op
Iteration   9: 47,434 ms/op
Iteration  10: 47,411 ms/op


Result "benchmarkFind":
  48,246 ±(99.9%) 2,297 ms/op [Average]
  (min, avg, max) = (47,097, 48,246, 52,159), stdev = 1,519
  CI (99.9%): [45,949, 50,543] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSundayBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternSize = 2)

# Run progress: 77,94% complete, ETA 03:27:56
# Fork: 1 of 1
# Warmup Iteration   1: 80,342 ms/op
# Warmup Iteration   2: 73,382 ms/op
# Warmup Iteration   3: 73,991 ms/op
# Warmup Iteration   4: 73,686 ms/op
# Warmup Iteration   5: 73,817 ms/op
# Warmup Iteration   6: 73,455 ms/op
# Warmup Iteration   7: 73,936 ms/op
# Warmup Iteration   8: 73,730 ms/op
# Warmup Iteration   9: 73,228 ms/op
# Warmup Iteration  10: 73,541 ms/op
Iteration   1: 73,669 ms/op
Iteration   2: 73,443 ms/op
Iteration   3: 73,299 ms/op
Iteration   4: 73,720 ms/op
Iteration   5: 73,765 ms/op
Iteration   6: 73,262 ms/op
Iteration   7: 73,744 ms/op
Iteration   8: 73,316 ms/op
Iteration   9: 73,601 ms/op
Iteration  10: 73,374 ms/op


Result "benchmarkFind":
  73,519 ±(99.9%) 0,304 ms/op [Average]
  (min, avg, max) = (73,262, 73,519, 73,765), stdev = 0,201
  CI (99.9%): [73,216, 73,823] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSundayBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternSize = 4)

# Run progress: 77,99% complete, ETA 03:27:29
# Fork: 1 of 1
# Warmup Iteration   1: 1442,226 ms/op
# Warmup Iteration   2: 1393,484 ms/op
# Warmup Iteration   3: 1382,604 ms/op
# Warmup Iteration   4: 1385,499 ms/op
# Warmup Iteration   5: 1382,950 ms/op
# Warmup Iteration   6: 1390,863 ms/op
# Warmup Iteration   7: 1382,022 ms/op
# Warmup Iteration   8: 1382,984 ms/op
# Warmup Iteration   9: 1385,964 ms/op
# Warmup Iteration  10: 1381,034 ms/op
Iteration   1: 1386,348 ms/op
Iteration   2: 1384,121 ms/op
Iteration   3: 1382,916 ms/op
Iteration   4: 1385,877 ms/op
Iteration   5: 1382,658 ms/op
Iteration   6: 1384,240 ms/op
Iteration   7: 1382,258 ms/op
Iteration   8: 1382,156 ms/op
Iteration   9: 1379,890 ms/op
Iteration  10: 1382,987 ms/op


Result "benchmarkFind":
  1383,345 ±(99.9%) 2,858 ms/op [Average]
  (min, avg, max) = (1379,890, 1383,345, 1386,348), stdev = 1,890
  CI (99.9%): [1380,488, 1386,203] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSundayBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternSize = 8)

# Run progress: 78,03% complete, ETA 03:27:04
# Fork: 1 of 1
# Warmup Iteration   1: 782,948 ms/op
# Warmup Iteration   2: 737,228 ms/op
# Warmup Iteration   3: 735,913 ms/op
# Warmup Iteration   4: 737,495 ms/op
# Warmup Iteration   5: 736,580 ms/op
# Warmup Iteration   6: 735,945 ms/op
# Warmup Iteration   7: 736,550 ms/op
# Warmup Iteration   8: 735,991 ms/op
# Warmup Iteration   9: 736,458 ms/op
# Warmup Iteration  10: 737,666 ms/op
Iteration   1: 736,143 ms/op
Iteration   2: 735,489 ms/op
Iteration   3: 735,376 ms/op
Iteration   4: 738,684 ms/op
Iteration   5: 737,409 ms/op
Iteration   6: 736,408 ms/op
Iteration   7: 733,130 ms/op
Iteration   8: 733,929 ms/op
Iteration   9: 738,825 ms/op
Iteration  10: 736,505 ms/op


Result "benchmarkFind":
  736,190 ±(99.9%) 2,780 ms/op [Average]
  (min, avg, max) = (733,130, 736,190, 738,825), stdev = 1,839
  CI (99.9%): [733,410, 738,970] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSundayBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternSize = 16)

# Run progress: 78,08% complete, ETA 03:26:40
# Fork: 1 of 1
# Warmup Iteration   1: 433,178 ms/op
# Warmup Iteration   2: 414,344 ms/op
# Warmup Iteration   3: 412,148 ms/op
# Warmup Iteration   4: 410,669 ms/op
# Warmup Iteration   5: 411,946 ms/op
# Warmup Iteration   6: 409,340 ms/op
# Warmup Iteration   7: 410,497 ms/op
# Warmup Iteration   8: 409,495 ms/op
# Warmup Iteration   9: 409,689 ms/op
# Warmup Iteration  10: 412,099 ms/op
Iteration   1: 411,941 ms/op
Iteration   2: 411,097 ms/op
Iteration   3: 410,187 ms/op
Iteration   4: 409,643 ms/op
Iteration   5: 411,025 ms/op
Iteration   6: 413,502 ms/op
Iteration   7: 408,919 ms/op
Iteration   8: 411,825 ms/op
Iteration   9: 409,572 ms/op
Iteration  10: 408,572 ms/op


Result "benchmarkFind":
  410,628 ±(99.9%) 2,321 ms/op [Average]
  (min, avg, max) = (408,572, 410,628, 413,502), stdev = 1,535
  CI (99.9%): [408,307, 412,950] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSundayBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternSize = 32)

# Run progress: 78,13% complete, ETA 03:26:15
# Fork: 1 of 1
# Warmup Iteration   1: 310,739 ms/op
# Warmup Iteration   2: 282,925 ms/op
# Warmup Iteration   3: 281,202 ms/op
# Warmup Iteration   4: 281,493 ms/op
# Warmup Iteration   5: 281,950 ms/op
# Warmup Iteration   6: 280,340 ms/op
# Warmup Iteration   7: 281,866 ms/op
# Warmup Iteration   8: 283,772 ms/op
# Warmup Iteration   9: 281,100 ms/op
# Warmup Iteration  10: 280,565 ms/op
Iteration   1: 281,778 ms/op
Iteration   2: 282,412 ms/op
Iteration   3: 281,568 ms/op
Iteration   4: 282,106 ms/op
Iteration   5: 282,125 ms/op
Iteration   6: 282,070 ms/op
Iteration   7: 283,269 ms/op
Iteration   8: 281,277 ms/op
Iteration   9: 283,266 ms/op
Iteration  10: 282,130 ms/op


Result "benchmarkFind":
  282,200 ±(99.9%) 0,981 ms/op [Average]
  (min, avg, max) = (281,277, 282,200, 283,269), stdev = 0,649
  CI (99.9%): [281,219, 283,181] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSundayBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternSize = 64)

# Run progress: 78,17% complete, ETA 03:25:49
# Fork: 1 of 1
# Warmup Iteration   1: 254,813 ms/op
# Warmup Iteration   2: 236,260 ms/op
# Warmup Iteration   3: 233,782 ms/op
# Warmup Iteration   4: 233,623 ms/op
# Warmup Iteration   5: 233,163 ms/op
# Warmup Iteration   6: 234,313 ms/op
# Warmup Iteration   7: 234,591 ms/op
# Warmup Iteration   8: 234,192 ms/op
# Warmup Iteration   9: 234,796 ms/op
# Warmup Iteration  10: 234,358 ms/op
Iteration   1: 234,682 ms/op
Iteration   2: 233,781 ms/op
Iteration   3: 232,559 ms/op
Iteration   4: 233,995 ms/op
Iteration   5: 238,196 ms/op
Iteration   6: 239,366 ms/op
Iteration   7: 235,687 ms/op
Iteration   8: 231,909 ms/op
Iteration   9: 231,869 ms/op
Iteration  10: 232,875 ms/op


Result "benchmarkFind":
  234,492 ±(99.9%) 3,890 ms/op [Average]
  (min, avg, max) = (231,869, 234,492, 239,366), stdev = 2,573
  CI (99.9%): [230,601, 238,382] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSundayBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternSize = 128)

# Run progress: 78,22% complete, ETA 03:25:23
# Fork: 1 of 1
# Warmup Iteration   1: 244,948 ms/op
# Warmup Iteration   2: 224,351 ms/op
# Warmup Iteration   3: 221,837 ms/op
# Warmup Iteration   4: 220,387 ms/op
# Warmup Iteration   5: 240,069 ms/op
# Warmup Iteration   6: 220,446 ms/op
# Warmup Iteration   7: 219,433 ms/op
# Warmup Iteration   8: 219,742 ms/op
# Warmup Iteration   9: 219,499 ms/op
# Warmup Iteration  10: 220,195 ms/op
Iteration   1: 219,505 ms/op
Iteration   2: 220,281 ms/op
Iteration   3: 219,799 ms/op
Iteration   4: 219,789 ms/op
Iteration   5: 219,803 ms/op
Iteration   6: 221,607 ms/op
Iteration   7: 221,931 ms/op
Iteration   8: 220,030 ms/op
Iteration   9: 223,424 ms/op
Iteration  10: 221,241 ms/op


Result "benchmarkFind":
  220,741 ±(99.9%) 1,921 ms/op [Average]
  (min, avg, max) = (219,505, 220,741, 223,424), stdev = 1,271
  CI (99.9%): [218,820, 222,662] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSundayBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternSize = 256)

# Run progress: 78,26% complete, ETA 03:24:57
# Fork: 1 of 1
# Warmup Iteration   1: 221,221 ms/op
# Warmup Iteration   2: 213,183 ms/op
# Warmup Iteration   3: 211,443 ms/op
# Warmup Iteration   4: 212,303 ms/op
# Warmup Iteration   5: 210,504 ms/op
# Warmup Iteration   6: 209,411 ms/op
# Warmup Iteration   7: 212,008 ms/op
# Warmup Iteration   8: 212,239 ms/op
# Warmup Iteration   9: 210,630 ms/op
# Warmup Iteration  10: 210,976 ms/op
Iteration   1: 212,845 ms/op
Iteration   2: 210,741 ms/op
Iteration   3: 210,810 ms/op
Iteration   4: 210,478 ms/op
Iteration   5: 211,358 ms/op
Iteration   6: 212,042 ms/op
Iteration   7: 211,421 ms/op
Iteration   8: 209,955 ms/op
Iteration   9: 211,647 ms/op
Iteration  10: 211,528 ms/op


Result "benchmarkFind":
  211,282 ±(99.9%) 1,251 ms/op [Average]
  (min, avg, max) = (209,955, 211,282, 212,845), stdev = 0,827
  CI (99.9%): [210,032, 212,533] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSundayBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternSize = 2)

# Run progress: 78,31% complete, ETA 03:24:30
# Fork: 1 of 1
# Warmup Iteration   1: 274,323 ms/op
# Warmup Iteration   2: 253,289 ms/op
# Warmup Iteration   3: 253,803 ms/op
# Warmup Iteration   4: 252,871 ms/op
# Warmup Iteration   5: 255,578 ms/op
# Warmup Iteration   6: 251,063 ms/op
# Warmup Iteration   7: 254,126 ms/op
# Warmup Iteration   8: 253,985 ms/op
# Warmup Iteration   9: 253,819 ms/op
# Warmup Iteration  10: 255,364 ms/op
Iteration   1: 253,791 ms/op
Iteration   2: 251,932 ms/op
Iteration   3: 255,151 ms/op
Iteration   4: 252,717 ms/op
Iteration   5: 253,828 ms/op
Iteration   6: 253,601 ms/op
Iteration   7: 275,163 ms/op
Iteration   8: 252,407 ms/op
Iteration   9: 253,097 ms/op
Iteration  10: 251,414 ms/op


Result "benchmarkFind":
  255,310 ±(99.9%) 10,670 ms/op [Average]
  (min, avg, max) = (251,414, 255,310, 275,163), stdev = 7,057
  CI (99.9%): [244,641, 265,980] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSundayBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternSize = 4)

# Run progress: 78,35% complete, ETA 03:24:03
# Fork: 1 of 1
# Warmup Iteration   1: 170,721 ms/op
# Warmup Iteration   2: 162,221 ms/op
# Warmup Iteration   3: 159,992 ms/op
# Warmup Iteration   4: 160,886 ms/op
# Warmup Iteration   5: 161,873 ms/op
# Warmup Iteration   6: 160,680 ms/op
# Warmup Iteration   7: 160,632 ms/op
# Warmup Iteration   8: 160,732 ms/op
# Warmup Iteration   9: 161,661 ms/op
# Warmup Iteration  10: 159,931 ms/op
Iteration   1: 160,482 ms/op
Iteration   2: 160,583 ms/op
Iteration   3: 161,706 ms/op
Iteration   4: 161,288 ms/op
Iteration   5: 164,014 ms/op
Iteration   6: 159,924 ms/op
Iteration   7: 161,577 ms/op
Iteration   8: 161,175 ms/op
Iteration   9: 161,044 ms/op
Iteration  10: 160,693 ms/op


Result "benchmarkFind":
  161,249 ±(99.9%) 1,680 ms/op [Average]
  (min, avg, max) = (159,924, 161,249, 164,014), stdev = 1,111
  CI (99.9%): [159,569, 162,928] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSundayBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternSize = 8)

# Run progress: 78,40% complete, ETA 03:23:36
# Fork: 1 of 1
# Warmup Iteration   1: 88,162 ms/op
# Warmup Iteration   2: 82,436 ms/op
# Warmup Iteration   3: 82,533 ms/op
# Warmup Iteration   4: 82,628 ms/op
# Warmup Iteration   5: 82,562 ms/op
# Warmup Iteration   6: 82,429 ms/op
# Warmup Iteration   7: 82,512 ms/op
# Warmup Iteration   8: 82,639 ms/op
# Warmup Iteration   9: 81,971 ms/op
# Warmup Iteration  10: 81,853 ms/op
Iteration   1: 81,891 ms/op
Iteration   2: 81,942 ms/op
Iteration   3: 82,295 ms/op
Iteration   4: 81,732 ms/op
Iteration   5: 82,277 ms/op
Iteration   6: 81,454 ms/op
Iteration   7: 82,450 ms/op
Iteration   8: 81,876 ms/op
Iteration   9: 81,209 ms/op
Iteration  10: 81,293 ms/op


Result "benchmarkFind":
  81,842 ±(99.9%) 0,646 ms/op [Average]
  (min, avg, max) = (81,209, 81,842, 82,450), stdev = 0,427
  CI (99.9%): [81,196, 82,488] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSundayBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternSize = 16)

# Run progress: 78,45% complete, ETA 03:23:09
# Fork: 1 of 1
# Warmup Iteration   1: 46,086 ms/op
# Warmup Iteration   2: 43,563 ms/op
# Warmup Iteration   3: 43,367 ms/op
# Warmup Iteration   4: 43,570 ms/op
# Warmup Iteration   5: 42,980 ms/op
# Warmup Iteration   6: 42,822 ms/op
# Warmup Iteration   7: 42,946 ms/op
# Warmup Iteration   8: 42,804 ms/op
# Warmup Iteration   9: 42,806 ms/op
# Warmup Iteration  10: 42,784 ms/op
Iteration   1: 48,919 ms/op
Iteration   2: 43,784 ms/op
Iteration   3: 43,315 ms/op
Iteration   4: 43,268 ms/op
Iteration   5: 43,731 ms/op
Iteration   6: 43,519 ms/op
Iteration   7: 43,239 ms/op
Iteration   8: 43,643 ms/op
Iteration   9: 43,492 ms/op
Iteration  10: 43,434 ms/op


Result "benchmarkFind":
  44,034 ±(99.9%) 2,610 ms/op [Average]
  (min, avg, max) = (43,239, 44,034, 48,919), stdev = 1,727
  CI (99.9%): [41,424, 46,645] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSundayBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternSize = 32)

# Run progress: 78,49% complete, ETA 03:22:42
# Fork: 1 of 1
# Warmup Iteration   1: 27,334 ms/op
# Warmup Iteration   2: 25,958 ms/op
# Warmup Iteration   3: 26,142 ms/op
# Warmup Iteration   4: 25,580 ms/op
# Warmup Iteration   5: 25,738 ms/op
# Warmup Iteration   6: 25,629 ms/op
# Warmup Iteration   7: 25,692 ms/op
# Warmup Iteration   8: 25,915 ms/op
# Warmup Iteration   9: 25,714 ms/op
# Warmup Iteration  10: 25,642 ms/op
Iteration   1: 25,728 ms/op
Iteration   2: 25,825 ms/op
Iteration   3: 25,691 ms/op
Iteration   4: 25,716 ms/op
Iteration   5: 25,662 ms/op
Iteration   6: 25,602 ms/op
Iteration   7: 25,633 ms/op
Iteration   8: 25,607 ms/op
Iteration   9: 25,834 ms/op
Iteration  10: 25,627 ms/op


Result "benchmarkFind":
  25,693 ±(99.9%) 0,127 ms/op [Average]
  (min, avg, max) = (25,602, 25,693, 25,834), stdev = 0,084
  CI (99.9%): [25,565, 25,820] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSundayBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternSize = 64)

# Run progress: 78,54% complete, ETA 03:22:15
# Fork: 1 of 1
# Warmup Iteration   1: 18,971 ms/op
# Warmup Iteration   2: 18,145 ms/op
# Warmup Iteration   3: 17,939 ms/op
# Warmup Iteration   4: 17,846 ms/op
# Warmup Iteration   5: 17,974 ms/op
# Warmup Iteration   6: 17,989 ms/op
# Warmup Iteration   7: 17,829 ms/op
# Warmup Iteration   8: 17,922 ms/op
# Warmup Iteration   9: 17,911 ms/op
# Warmup Iteration  10: 18,039 ms/op
Iteration   1: 17,876 ms/op
Iteration   2: 17,840 ms/op
Iteration   3: 17,937 ms/op
Iteration   4: 17,974 ms/op
Iteration   5: 17,941 ms/op
Iteration   6: 17,793 ms/op
Iteration   7: 17,838 ms/op
Iteration   8: 17,824 ms/op
Iteration   9: 17,903 ms/op
Iteration  10: 17,910 ms/op


Result "benchmarkFind":
  17,884 ±(99.9%) 0,089 ms/op [Average]
  (min, avg, max) = (17,793, 17,884, 17,974), stdev = 0,059
  CI (99.9%): [17,795, 17,972] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSundayBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternSize = 128)

# Run progress: 78,58% complete, ETA 03:21:47
# Fork: 1 of 1
# Warmup Iteration   1: 16,138 ms/op
# Warmup Iteration   2: 15,088 ms/op
# Warmup Iteration   3: 14,781 ms/op
# Warmup Iteration   4: 14,861 ms/op
# Warmup Iteration   5: 14,858 ms/op
# Warmup Iteration   6: 14,780 ms/op
# Warmup Iteration   7: 14,843 ms/op
# Warmup Iteration   8: 16,533 ms/op
# Warmup Iteration   9: 14,876 ms/op
# Warmup Iteration  10: 14,820 ms/op
Iteration   1: 14,863 ms/op
Iteration   2: 14,929 ms/op
Iteration   3: 14,978 ms/op
Iteration   4: 14,812 ms/op
Iteration   5: 14,821 ms/op
Iteration   6: 14,588 ms/op
Iteration   7: 14,658 ms/op
Iteration   8: 14,643 ms/op
Iteration   9: 14,674 ms/op
Iteration  10: 14,543 ms/op


Result "benchmarkFind":
  14,751 ±(99.9%) 0,225 ms/op [Average]
  (min, avg, max) = (14,543, 14,751, 14,978), stdev = 0,149
  CI (99.9%): [14,525, 14,976] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSundayBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternSize = 256)

# Run progress: 78,63% complete, ETA 03:21:20
# Fork: 1 of 1
# Warmup Iteration   1: 14,950 ms/op
# Warmup Iteration   2: 13,947 ms/op
# Warmup Iteration   3: 13,666 ms/op
# Warmup Iteration   4: 13,491 ms/op
# Warmup Iteration   5: 13,551 ms/op
# Warmup Iteration   6: 13,491 ms/op
# Warmup Iteration   7: 13,507 ms/op
# Warmup Iteration   8: 13,561 ms/op
# Warmup Iteration   9: 13,512 ms/op
# Warmup Iteration  10: 13,647 ms/op
Iteration   1: 13,763 ms/op
Iteration   2: 13,772 ms/op
Iteration   3: 13,658 ms/op
Iteration   4: 13,779 ms/op
Iteration   5: 13,666 ms/op
Iteration   6: 13,795 ms/op
Iteration   7: 13,823 ms/op
Iteration   8: 13,929 ms/op
Iteration   9: 13,850 ms/op
Iteration  10: 13,780 ms/op


Result "benchmarkFind":
  13,782 ±(99.9%) 0,121 ms/op [Average]
  (min, avg, max) = (13,658, 13,782, 13,929), stdev = 0,080
  CI (99.9%): [13,661, 13,902] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSundayBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternSize = 2)

# Run progress: 78,68% complete, ETA 03:20:53
# Fork: 1 of 1
# Warmup Iteration   1: 1118,552 ms/op
# Warmup Iteration   2: 1038,254 ms/op
# Warmup Iteration   3: 1022,475 ms/op
# Warmup Iteration   4: 1033,338 ms/op
# Warmup Iteration   5: 1035,298 ms/op
# Warmup Iteration   6: 1019,603 ms/op
# Warmup Iteration   7: 1017,270 ms/op
# Warmup Iteration   8: 1020,733 ms/op
# Warmup Iteration   9: 1021,844 ms/op
# Warmup Iteration  10: 1021,071 ms/op
Iteration   1: 1022,871 ms/op
Iteration   2: 1026,843 ms/op
Iteration   3: 1027,476 ms/op
Iteration   4: 1026,538 ms/op
Iteration   5: 1025,816 ms/op
Iteration   6: 1024,455 ms/op
Iteration   7: 1017,706 ms/op
Iteration   8: 1021,884 ms/op
Iteration   9: 1024,345 ms/op
Iteration  10: 1032,138 ms/op


Result "benchmarkFind":
  1025,007 ±(99.9%) 5,783 ms/op [Average]
  (min, avg, max) = (1017,706, 1025,007, 1032,138), stdev = 3,825
  CI (99.9%): [1019,224, 1030,790] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSundayBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternSize = 4)

# Run progress: 78,72% complete, ETA 03:20:26
# Fork: 1 of 1
# Warmup Iteration   1: 666,293 ms/op
# Warmup Iteration   2: 682,564 ms/op
# Warmup Iteration   3: 622,797 ms/op
# Warmup Iteration   4: 635,465 ms/op
# Warmup Iteration   5: 630,605 ms/op
# Warmup Iteration   6: 624,818 ms/op
# Warmup Iteration   7: 627,070 ms/op
# Warmup Iteration   8: 625,713 ms/op
# Warmup Iteration   9: 624,017 ms/op
# Warmup Iteration  10: 624,894 ms/op
Iteration   1: 626,729 ms/op
Iteration   2: 626,103 ms/op
Iteration   3: 623,148 ms/op
Iteration   4: 624,259 ms/op
Iteration   5: 628,512 ms/op
Iteration   6: 630,190 ms/op
Iteration   7: 623,052 ms/op
Iteration   8: 629,177 ms/op
Iteration   9: 624,886 ms/op
Iteration  10: 629,206 ms/op


Result "benchmarkFind":
  626,526 ±(99.9%) 4,003 ms/op [Average]
  (min, avg, max) = (623,052, 626,526, 630,190), stdev = 2,648
  CI (99.9%): [622,523, 630,530] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSundayBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternSize = 8)

# Run progress: 78,77% complete, ETA 03:20:00
# Fork: 1 of 1
# Warmup Iteration   1: 320,608 ms/op
# Warmup Iteration   2: 311,584 ms/op
# Warmup Iteration   3: 309,157 ms/op
# Warmup Iteration   4: 310,372 ms/op
# Warmup Iteration   5: 309,191 ms/op
# Warmup Iteration   6: 309,483 ms/op
# Warmup Iteration   7: 308,819 ms/op
# Warmup Iteration   8: 308,932 ms/op
# Warmup Iteration   9: 309,355 ms/op
# Warmup Iteration  10: 308,236 ms/op
Iteration   1: 311,527 ms/op
Iteration   2: 309,539 ms/op
Iteration   3: 310,736 ms/op
Iteration   4: 308,897 ms/op
Iteration   5: 308,665 ms/op
Iteration   6: 310,696 ms/op
Iteration   7: 308,320 ms/op
Iteration   8: 307,486 ms/op
Iteration   9: 308,995 ms/op
Iteration  10: 306,770 ms/op


Result "benchmarkFind":
  309,163 ±(99.9%) 2,262 ms/op [Average]
  (min, avg, max) = (306,770, 309,163, 311,527), stdev = 1,496
  CI (99.9%): [306,901, 311,425] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSundayBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternSize = 16)

# Run progress: 78,81% complete, ETA 03:19:34
# Fork: 1 of 1
# Warmup Iteration   1: 169,323 ms/op
# Warmup Iteration   2: 160,554 ms/op
# Warmup Iteration   3: 159,573 ms/op
# Warmup Iteration   4: 159,793 ms/op
# Warmup Iteration   5: 159,148 ms/op
# Warmup Iteration   6: 160,585 ms/op
# Warmup Iteration   7: 159,925 ms/op
# Warmup Iteration   8: 177,392 ms/op
# Warmup Iteration   9: 160,082 ms/op
# Warmup Iteration  10: 160,565 ms/op
Iteration   1: 160,665 ms/op
Iteration   2: 160,283 ms/op
Iteration   3: 159,676 ms/op
Iteration   4: 160,031 ms/op
Iteration   5: 160,640 ms/op
Iteration   6: 160,915 ms/op
Iteration   7: 159,726 ms/op
Iteration   8: 161,991 ms/op
Iteration   9: 160,249 ms/op
Iteration  10: 161,062 ms/op


Result "benchmarkFind":
  160,524 ±(99.9%) 1,052 ms/op [Average]
  (min, avg, max) = (159,676, 160,524, 161,991), stdev = 0,696
  CI (99.9%): [159,472, 161,576] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSundayBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternSize = 32)

# Run progress: 78,86% complete, ETA 03:19:08
# Fork: 1 of 1
# Warmup Iteration   1: 97,333 ms/op
# Warmup Iteration   2: 92,378 ms/op
# Warmup Iteration   3: 91,797 ms/op
# Warmup Iteration   4: 91,825 ms/op
# Warmup Iteration   5: 91,377 ms/op
# Warmup Iteration   6: 91,636 ms/op
# Warmup Iteration   7: 91,754 ms/op
# Warmup Iteration   8: 92,865 ms/op
# Warmup Iteration   9: 90,929 ms/op
# Warmup Iteration  10: 91,176 ms/op
Iteration   1: 90,521 ms/op
Iteration   2: 90,533 ms/op
Iteration   3: 90,350 ms/op
Iteration   4: 90,329 ms/op
Iteration   5: 91,830 ms/op
Iteration   6: 90,604 ms/op
Iteration   7: 90,156 ms/op
Iteration   8: 90,598 ms/op
Iteration   9: 90,683 ms/op
Iteration  10: 91,063 ms/op


Result "benchmarkFind":
  90,667 ±(99.9%) 0,719 ms/op [Average]
  (min, avg, max) = (90,156, 90,667, 91,830), stdev = 0,475
  CI (99.9%): [89,948, 91,385] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSundayBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternSize = 64)

# Run progress: 78,91% complete, ETA 03:18:41
# Fork: 1 of 1
# Warmup Iteration   1: 70,089 ms/op
# Warmup Iteration   2: 66,885 ms/op
# Warmup Iteration   3: 67,881 ms/op
# Warmup Iteration   4: 67,132 ms/op
# Warmup Iteration   5: 66,760 ms/op
# Warmup Iteration   6: 67,295 ms/op
# Warmup Iteration   7: 66,416 ms/op
# Warmup Iteration   8: 66,275 ms/op
# Warmup Iteration   9: 66,151 ms/op
# Warmup Iteration  10: 65,815 ms/op
Iteration   1: 66,360 ms/op
Iteration   2: 65,835 ms/op
Iteration   3: 65,868 ms/op
Iteration   4: 66,094 ms/op
Iteration   5: 66,035 ms/op
Iteration   6: 65,738 ms/op
Iteration   7: 65,484 ms/op
Iteration   8: 65,737 ms/op
Iteration   9: 65,985 ms/op
Iteration  10: 66,185 ms/op


Result "benchmarkFind":
  65,932 ±(99.9%) 0,383 ms/op [Average]
  (min, avg, max) = (65,484, 65,932, 66,360), stdev = 0,253
  CI (99.9%): [65,549, 66,315] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSundayBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternSize = 128)

# Run progress: 78,95% complete, ETA 03:18:14
# Fork: 1 of 1
# Warmup Iteration   1: 85,242 ms/op
# Warmup Iteration   2: 80,817 ms/op
# Warmup Iteration   3: 80,941 ms/op
# Warmup Iteration   4: 81,038 ms/op
# Warmup Iteration   5: 80,873 ms/op
# Warmup Iteration   6: 80,815 ms/op
# Warmup Iteration   7: 80,957 ms/op
# Warmup Iteration   8: 80,572 ms/op
# Warmup Iteration   9: 80,640 ms/op
# Warmup Iteration  10: 80,596 ms/op
Iteration   1: 80,141 ms/op
Iteration   2: 80,273 ms/op
Iteration   3: 80,245 ms/op
Iteration   4: 80,229 ms/op
Iteration   5: 80,111 ms/op
Iteration   6: 80,264 ms/op
Iteration   7: 79,896 ms/op
Iteration   8: 80,669 ms/op
Iteration   9: 80,017 ms/op
Iteration  10: 79,774 ms/op


Result "benchmarkFind":
  80,162 ±(99.9%) 0,369 ms/op [Average]
  (min, avg, max) = (79,774, 80,162, 80,669), stdev = 0,244
  CI (99.9%): [79,792, 80,531] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSundayBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternSize = 256)

# Run progress: 79,00% complete, ETA 03:17:47
# Fork: 1 of 1
# Warmup Iteration   1: 84,932 ms/op
# Warmup Iteration   2: 78,986 ms/op
# Warmup Iteration   3: 78,566 ms/op
# Warmup Iteration   4: 78,868 ms/op
# Warmup Iteration   5: 78,809 ms/op
# Warmup Iteration   6: 78,595 ms/op
# Warmup Iteration   7: 78,817 ms/op
# Warmup Iteration   8: 78,268 ms/op
# Warmup Iteration   9: 78,295 ms/op
# Warmup Iteration  10: 78,395 ms/op
Iteration   1: 78,120 ms/op
Iteration   2: 78,105 ms/op
Iteration   3: 78,091 ms/op
Iteration   4: 77,906 ms/op
Iteration   5: 77,985 ms/op
Iteration   6: 77,881 ms/op
Iteration   7: 78,236 ms/op
Iteration   8: 78,008 ms/op
Iteration   9: 78,703 ms/op
Iteration  10: 78,031 ms/op


Result "benchmarkFind":
  78,107 ±(99.9%) 0,354 ms/op [Average]
  (min, avg, max) = (77,881, 78,107, 78,703), stdev = 0,234
  CI (99.9%): [77,752, 78,461] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSundayBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternSize = 2)

# Run progress: 79,04% complete, ETA 03:17:20
# Fork: 1 of 1
# Warmup Iteration   1: 3913,603 ms/op
# Warmup Iteration   2: 3846,394 ms/op
# Warmup Iteration   3: 3880,834 ms/op
# Warmup Iteration   4: 3812,479 ms/op
# Warmup Iteration   5: 3798,670 ms/op
# Warmup Iteration   6: 3786,517 ms/op
# Warmup Iteration   7: 3800,026 ms/op
# Warmup Iteration   8: 3793,143 ms/op
# Warmup Iteration   9: 3800,303 ms/op
# Warmup Iteration  10: 3784,936 ms/op
Iteration   1: 3787,420 ms/op
Iteration   2: 3789,037 ms/op
Iteration   3: 3827,386 ms/op
Iteration   4: 3796,509 ms/op
Iteration   5: 3801,183 ms/op
Iteration   6: 3803,188 ms/op
Iteration   7: 3791,825 ms/op
Iteration   8: 3799,313 ms/op
Iteration   9: 3893,594 ms/op
Iteration  10: 3792,679 ms/op


Result "benchmarkFind":
  3808,213 ±(99.9%) 48,490 ms/op [Average]
  (min, avg, max) = (3787,420, 3808,213, 3893,594), stdev = 32,073
  CI (99.9%): [3759,723, 3856,704] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSundayBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternSize = 4)

# Run progress: 79,09% complete, ETA 03:17:09
# Fork: 1 of 1
# Warmup Iteration   1: 2667,454 ms/op
# Warmup Iteration   2: 2636,441 ms/op
# Warmup Iteration   3: 2632,084 ms/op
# Warmup Iteration   4: 2637,731 ms/op
# Warmup Iteration   5: 2643,878 ms/op
# Warmup Iteration   6: 2629,302 ms/op
# Warmup Iteration   7: 2635,808 ms/op
# Warmup Iteration   8: 2633,851 ms/op
# Warmup Iteration   9: 2638,057 ms/op
# Warmup Iteration  10: 2639,188 ms/op
Iteration   1: 2636,075 ms/op
Iteration   2: 2633,608 ms/op
Iteration   3: 2629,187 ms/op
Iteration   4: 2628,541 ms/op
Iteration   5: 2638,296 ms/op
Iteration   6: 2637,184 ms/op
Iteration   7: 2624,756 ms/op
Iteration   8: 2704,052 ms/op
Iteration   9: 2649,911 ms/op
Iteration  10: 2646,713 ms/op


Result "benchmarkFind":
  2642,832 ±(99.9%) 34,599 ms/op [Average]
  (min, avg, max) = (2624,756, 2642,832, 2704,052), stdev = 22,885
  CI (99.9%): [2608,234, 2677,431] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSundayBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternSize = 8)

# Run progress: 79,14% complete, ETA 03:16:52
# Fork: 1 of 1
# Warmup Iteration   1: 1293,814 ms/op
# Warmup Iteration   2: 1311,489 ms/op
# Warmup Iteration   3: 1327,221 ms/op
# Warmup Iteration   4: 1328,045 ms/op
# Warmup Iteration   5: 1322,914 ms/op
# Warmup Iteration   6: 1313,953 ms/op
# Warmup Iteration   7: 1312,476 ms/op
# Warmup Iteration   8: 1317,489 ms/op
# Warmup Iteration   9: 1313,535 ms/op
# Warmup Iteration  10: 1331,620 ms/op
Iteration   1: 1310,674 ms/op
Iteration   2: 1313,431 ms/op
Iteration   3: 1320,658 ms/op
Iteration   4: 1309,684 ms/op
Iteration   5: 1320,767 ms/op
Iteration   6: 1308,731 ms/op
Iteration   7: 1317,465 ms/op
Iteration   8: 1318,032 ms/op
Iteration   9: 1315,757 ms/op
Iteration  10: 1305,582 ms/op


Result "benchmarkFind":
  1314,078 ±(99.9%) 7,969 ms/op [Average]
  (min, avg, max) = (1305,582, 1314,078, 1320,767), stdev = 5,271
  CI (99.9%): [1306,109, 1322,047] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSundayBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternSize = 16)

# Run progress: 79,18% complete, ETA 03:16:28
# Fork: 1 of 1
# Warmup Iteration   1: 703,664 ms/op
# Warmup Iteration   2: 694,226 ms/op
# Warmup Iteration   3: 672,535 ms/op
# Warmup Iteration   4: 670,656 ms/op
# Warmup Iteration   5: 676,004 ms/op
# Warmup Iteration   6: 673,447 ms/op
# Warmup Iteration   7: 673,006 ms/op
# Warmup Iteration   8: 672,448 ms/op
# Warmup Iteration   9: 675,219 ms/op
# Warmup Iteration  10: 670,973 ms/op
Iteration   1: 669,872 ms/op
Iteration   2: 722,116 ms/op
Iteration   3: 675,235 ms/op
Iteration   4: 673,360 ms/op
Iteration   5: 671,494 ms/op
Iteration   6: 669,721 ms/op
Iteration   7: 669,401 ms/op
Iteration   8: 671,730 ms/op
Iteration   9: 671,673 ms/op
Iteration  10: 672,733 ms/op


Result "benchmarkFind":
  676,734 ±(99.9%) 24,260 ms/op [Average]
  (min, avg, max) = (669,401, 676,734, 722,116), stdev = 16,046
  CI (99.9%): [652,474, 700,993] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSundayBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternSize = 32)

# Run progress: 79,23% complete, ETA 03:16:04
# Fork: 1 of 1
# Warmup Iteration   1: 378,963 ms/op
# Warmup Iteration   2: 358,239 ms/op
# Warmup Iteration   3: 357,246 ms/op
# Warmup Iteration   4: 356,084 ms/op
# Warmup Iteration   5: 353,457 ms/op
# Warmup Iteration   6: 357,041 ms/op
# Warmup Iteration   7: 356,737 ms/op
# Warmup Iteration   8: 353,829 ms/op
# Warmup Iteration   9: 356,366 ms/op
# Warmup Iteration  10: 357,608 ms/op
Iteration   1: 357,234 ms/op
Iteration   2: 355,727 ms/op
Iteration   3: 357,238 ms/op
Iteration   4: 357,193 ms/op
Iteration   5: 356,373 ms/op
Iteration   6: 355,825 ms/op
Iteration   7: 356,685 ms/op
Iteration   8: 356,548 ms/op
Iteration   9: 356,472 ms/op
Iteration  10: 358,515 ms/op


Result "benchmarkFind":
  356,781 ±(99.9%) 1,228 ms/op [Average]
  (min, avg, max) = (355,727, 356,781, 358,515), stdev = 0,812
  CI (99.9%): [355,552, 358,009] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSundayBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternSize = 64)

# Run progress: 79,27% complete, ETA 03:15:38
# Fork: 1 of 1
# Warmup Iteration   1: 261,876 ms/op
# Warmup Iteration   2: 245,805 ms/op
# Warmup Iteration   3: 245,004 ms/op
# Warmup Iteration   4: 244,308 ms/op
# Warmup Iteration   5: 244,344 ms/op
# Warmup Iteration   6: 244,681 ms/op
# Warmup Iteration   7: 244,303 ms/op
# Warmup Iteration   8: 245,307 ms/op
# Warmup Iteration   9: 244,860 ms/op
# Warmup Iteration  10: 244,953 ms/op
Iteration   1: 244,484 ms/op
Iteration   2: 244,196 ms/op
Iteration   3: 268,267 ms/op
Iteration   4: 245,406 ms/op
Iteration   5: 244,371 ms/op
Iteration   6: 244,726 ms/op
Iteration   7: 244,904 ms/op
Iteration   8: 246,026 ms/op
Iteration   9: 244,545 ms/op
Iteration  10: 244,853 ms/op


Result "benchmarkFind":
  247,178 ±(99.9%) 11,232 ms/op [Average]
  (min, avg, max) = (244,196, 247,178, 268,267), stdev = 7,429
  CI (99.9%): [235,946, 258,410] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSundayBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternSize = 128)

# Run progress: 79,32% complete, ETA 03:15:13
# Fork: 1 of 1
# Warmup Iteration   1: 307,143 ms/op
# Warmup Iteration   2: 292,488 ms/op
# Warmup Iteration   3: 292,253 ms/op
# Warmup Iteration   4: 291,951 ms/op
# Warmup Iteration   5: 293,901 ms/op
# Warmup Iteration   6: 292,569 ms/op
# Warmup Iteration   7: 291,949 ms/op
# Warmup Iteration   8: 291,765 ms/op
# Warmup Iteration   9: 291,820 ms/op
# Warmup Iteration  10: 291,263 ms/op
Iteration   1: 292,356 ms/op
Iteration   2: 293,024 ms/op
Iteration   3: 292,000 ms/op
Iteration   4: 292,556 ms/op
Iteration   5: 291,738 ms/op
Iteration   6: 292,401 ms/op
Iteration   7: 291,487 ms/op
Iteration   8: 291,986 ms/op
Iteration   9: 291,490 ms/op
Iteration  10: 291,839 ms/op


Result "benchmarkFind":
  292,088 ±(99.9%) 0,745 ms/op [Average]
  (min, avg, max) = (291,487, 292,088, 293,024), stdev = 0,493
  CI (99.9%): [291,343, 292,833] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCSundayBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternSize = 256)

# Run progress: 79,37% complete, ETA 03:14:48
# Fork: 1 of 1
# Warmup Iteration   1: 285,775 ms/op
# Warmup Iteration   2: 271,336 ms/op
# Warmup Iteration   3: 271,350 ms/op
# Warmup Iteration   4: 271,168 ms/op
# Warmup Iteration   5: 270,868 ms/op
# Warmup Iteration   6: 270,961 ms/op
# Warmup Iteration   7: 271,201 ms/op
# Warmup Iteration   8: 270,801 ms/op
# Warmup Iteration   9: 270,802 ms/op
# Warmup Iteration  10: 270,749 ms/op
Iteration   1: 270,794 ms/op
Iteration   2: 271,185 ms/op
Iteration   3: 271,317 ms/op
Iteration   4: 289,157 ms/op
Iteration   5: 271,241 ms/op
Iteration   6: 271,007 ms/op
Iteration   7: 270,497 ms/op
Iteration   8: 270,534 ms/op
Iteration   9: 270,223 ms/op
Iteration  10: 270,609 ms/op


Result "benchmarkFind":
  272,656 ±(99.9%) 8,782 ms/op [Average]
  (min, avg, max) = (270,223, 272,656, 289,157), stdev = 5,809
  CI (99.9%): [263,874, 281,439] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 2, patternSize = 2)

# Run progress: 79,41% complete, ETA 03:14:22
# Fork: 1 of 1
# Warmup Iteration   1: 0,170 ms/op
# Warmup Iteration   2: 0,154 ms/op
# Warmup Iteration   3: 0,153 ms/op
# Warmup Iteration   4: 0,154 ms/op
# Warmup Iteration   5: 0,153 ms/op
# Warmup Iteration   6: 0,153 ms/op
# Warmup Iteration   7: 0,153 ms/op
# Warmup Iteration   8: 0,153 ms/op
# Warmup Iteration   9: 0,153 ms/op
# Warmup Iteration  10: 0,154 ms/op
Iteration   1: 0,155 ms/op
Iteration   2: 0,153 ms/op
Iteration   3: 0,153 ms/op
Iteration   4: 0,154 ms/op
Iteration   5: 0,154 ms/op
Iteration   6: 0,154 ms/op
Iteration   7: 0,154 ms/op
Iteration   8: 0,153 ms/op
Iteration   9: 0,154 ms/op
Iteration  10: 0,155 ms/op


Result "benchmarkFind":
  0,154 ±(99.9%) 0,001 ms/op [Average]
  (min, avg, max) = (0,153, 0,154, 0,155), stdev = 0,001
  CI (99.9%): [0,153, 0,155] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 2, patternSize = 4)

# Run progress: 79,46% complete, ETA 03:13:55
# Fork: 1 of 1
# Warmup Iteration   1: 0,507 ms/op
# Warmup Iteration   2: 0,464 ms/op
# Warmup Iteration   3: 0,459 ms/op
# Warmup Iteration   4: 0,458 ms/op
# Warmup Iteration   5: 0,458 ms/op
# Warmup Iteration   6: 0,460 ms/op
# Warmup Iteration   7: 0,457 ms/op
# Warmup Iteration   8: 0,460 ms/op
# Warmup Iteration   9: 0,461 ms/op
# Warmup Iteration  10: 0,460 ms/op
Iteration   1: 0,461 ms/op
Iteration   2: 0,461 ms/op
Iteration   3: 0,460 ms/op
Iteration   4: 0,463 ms/op
Iteration   5: 0,466 ms/op
Iteration   6: 0,463 ms/op
Iteration   7: 0,461 ms/op
Iteration   8: 0,465 ms/op
Iteration   9: 0,465 ms/op
Iteration  10: 0,468 ms/op


Result "benchmarkFind":
  0,463 ±(99.9%) 0,004 ms/op [Average]
  (min, avg, max) = (0,460, 0,463, 0,468), stdev = 0,003
  CI (99.9%): [0,459, 0,467] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 2, patternSize = 8)

# Run progress: 79,50% complete, ETA 03:13:27
# Fork: 1 of 1
# Warmup Iteration   1: 4,304 ms/op
# Warmup Iteration   2: 3,841 ms/op
# Warmup Iteration   3: 3,677 ms/op
# Warmup Iteration   4: 3,729 ms/op
# Warmup Iteration   5: 3,696 ms/op
# Warmup Iteration   6: 3,719 ms/op
# Warmup Iteration   7: 3,725 ms/op
# Warmup Iteration   8: 3,731 ms/op
# Warmup Iteration   9: 3,748 ms/op
# Warmup Iteration  10: 3,764 ms/op
Iteration   1: 3,803 ms/op
Iteration   2: 4,187 ms/op
Iteration   3: 3,830 ms/op
Iteration   4: 3,747 ms/op
Iteration   5: 3,707 ms/op
Iteration   6: 3,729 ms/op
Iteration   7: 3,748 ms/op
Iteration   8: 3,735 ms/op
Iteration   9: 3,751 ms/op
Iteration  10: 3,745 ms/op


Result "benchmarkFind":
  3,798 ±(99.9%) 0,214 ms/op [Average]
  (min, avg, max) = (3,707, 3,798, 4,187), stdev = 0,141
  CI (99.9%): [3,585, 4,012] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 2, patternSize = 16)

# Run progress: 79,55% complete, ETA 03:13:00
# Fork: 1 of 1
# Warmup Iteration   1: 55,932 ms/op
# Warmup Iteration   2: 51,183 ms/op
# Warmup Iteration   3: 48,699 ms/op
# Warmup Iteration   4: 48,062 ms/op
# Warmup Iteration   5: 48,445 ms/op
# Warmup Iteration   6: 48,079 ms/op
# Warmup Iteration   7: 48,058 ms/op
# Warmup Iteration   8: 47,786 ms/op
# Warmup Iteration   9: 48,308 ms/op
# Warmup Iteration  10: 48,722 ms/op
Iteration   1: 48,887 ms/op
Iteration   2: 48,621 ms/op
Iteration   3: 48,728 ms/op
Iteration   4: 49,006 ms/op
Iteration   5: 48,547 ms/op
Iteration   6: 48,374 ms/op
Iteration   7: 48,583 ms/op
Iteration   8: 48,420 ms/op
Iteration   9: 48,798 ms/op
Iteration  10: 48,908 ms/op


Result "benchmarkFind":
  48,687 ±(99.9%) 0,322 ms/op [Average]
  (min, avg, max) = (48,374, 48,687, 49,006), stdev = 0,213
  CI (99.9%): [48,365, 49,009] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 2, patternSize = 32)

# Run progress: 79,60% complete, ETA 03:12:33
# Fork: 1 of 1
# Warmup Iteration   1: 58,851 ms/op
# Warmup Iteration   2: 54,645 ms/op
# Warmup Iteration   3: 53,264 ms/op
# Warmup Iteration   4: 52,924 ms/op
# Warmup Iteration   5: 52,752 ms/op
# Warmup Iteration   6: 52,919 ms/op
# Warmup Iteration   7: 53,497 ms/op
# Warmup Iteration   8: 53,899 ms/op
# Warmup Iteration   9: 53,745 ms/op
# Warmup Iteration  10: 53,875 ms/op
Iteration   1: 53,983 ms/op
Iteration   2: 53,453 ms/op
Iteration   3: 53,827 ms/op
Iteration   4: 53,286 ms/op
Iteration   5: 53,691 ms/op
Iteration   6: 54,056 ms/op
Iteration   7: 52,990 ms/op
Iteration   8: 52,823 ms/op
Iteration   9: 53,748 ms/op
Iteration  10: 53,512 ms/op


Result "benchmarkFind":
  53,537 ±(99.9%) 0,618 ms/op [Average]
  (min, avg, max) = (52,823, 53,537, 54,056), stdev = 0,409
  CI (99.9%): [52,919, 54,155] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 2, patternSize = 64)

# Run progress: 79,64% complete, ETA 03:12:05
# Fork: 1 of 1
# Warmup Iteration   1: 79,081 ms/op
# Warmup Iteration   2: 69,057 ms/op
# Warmup Iteration   3: 69,163 ms/op
# Warmup Iteration   4: 69,649 ms/op
# Warmup Iteration   5: 69,892 ms/op
# Warmup Iteration   6: 70,385 ms/op
# Warmup Iteration   7: 70,773 ms/op
# Warmup Iteration   8: 70,881 ms/op
# Warmup Iteration   9: 70,818 ms/op
# Warmup Iteration  10: 76,571 ms/op
Iteration   1: 69,748 ms/op
Iteration   2: 72,276 ms/op
Iteration   3: 69,870 ms/op
Iteration   4: 70,450 ms/op
Iteration   5: 70,702 ms/op
Iteration   6: 70,511 ms/op
Iteration   7: 70,332 ms/op
Iteration   8: 70,839 ms/op
Iteration   9: 70,651 ms/op
Iteration  10: 70,306 ms/op


Result "benchmarkFind":
  70,569 ±(99.9%) 1,047 ms/op [Average]
  (min, avg, max) = (69,748, 70,569, 72,276), stdev = 0,693
  CI (99.9%): [69,521, 71,616] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 2, patternSize = 128)

# Run progress: 79,69% complete, ETA 03:11:38
# Fork: 1 of 1
# Warmup Iteration   1: 121,024 ms/op
# Warmup Iteration   2: 106,462 ms/op
# Warmup Iteration   3: 106,310 ms/op
# Warmup Iteration   4: 107,048 ms/op
# Warmup Iteration   5: 107,956 ms/op
# Warmup Iteration   6: 106,670 ms/op
# Warmup Iteration   7: 107,599 ms/op
# Warmup Iteration   8: 107,830 ms/op
# Warmup Iteration   9: 107,563 ms/op
# Warmup Iteration  10: 108,458 ms/op
Iteration   1: 107,410 ms/op
Iteration   2: 107,366 ms/op
Iteration   3: 107,619 ms/op
Iteration   4: 108,029 ms/op
Iteration   5: 107,667 ms/op
Iteration   6: 107,470 ms/op
Iteration   7: 107,774 ms/op
Iteration   8: 107,658 ms/op
Iteration   9: 107,911 ms/op
Iteration  10: 108,056 ms/op


Result "benchmarkFind":
  107,696 ±(99.9%) 0,371 ms/op [Average]
  (min, avg, max) = (107,366, 107,696, 108,056), stdev = 0,246
  CI (99.9%): [107,325, 108,067] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 2, patternSize = 256)

# Run progress: 79,73% complete, ETA 03:11:11
# Fork: 1 of 1
# Warmup Iteration   1: 212,000 ms/op
# Warmup Iteration   2: 188,494 ms/op
# Warmup Iteration   3: 187,631 ms/op
# Warmup Iteration   4: 189,745 ms/op
# Warmup Iteration   5: 192,466 ms/op
# Warmup Iteration   6: 191,923 ms/op
# Warmup Iteration   7: 193,615 ms/op
# Warmup Iteration   8: 190,683 ms/op
# Warmup Iteration   9: 193,223 ms/op
# Warmup Iteration  10: 191,868 ms/op
Iteration   1: 191,986 ms/op
Iteration   2: 191,353 ms/op
Iteration   3: 192,286 ms/op
Iteration   4: 191,666 ms/op
Iteration   5: 193,850 ms/op
Iteration   6: 191,841 ms/op
Iteration   7: 193,169 ms/op
Iteration   8: 191,387 ms/op
Iteration   9: 192,530 ms/op
Iteration  10: 191,754 ms/op


Result "benchmarkFind":
  192,182 ±(99.9%) 1,215 ms/op [Average]
  (min, avg, max) = (191,353, 192,182, 193,850), stdev = 0,804
  CI (99.9%): [190,967, 193,397] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 8, patternSize = 2)

# Run progress: 79,78% complete, ETA 03:10:44
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

com.almondtools.stringbench.SampleNotQualifiedException
	at com.almondtools.stringbench.MultiPatternMatcherBenchmark.setup(MultiPatternMatcherBenchmark.java:36)
	at com.almondtools.stringbench.generated.SCWuManberBenchmark_benchmarkFind_jmhTest._jmh_tryInit_f_scwumanberbenchmark0_0(SCWuManberBenchmark_benchmarkFind_jmhTest.java:425)
	at com.almondtools.stringbench.generated.SCWuManberBenchmark_benchmarkFind_jmhTest.benchmarkFind_AverageTime(SCWuManberBenchmark_benchmarkFind_jmhTest.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:430)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:412)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)




# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 8, patternSize = 4)

# Run progress: 79,83% complete, ETA 03:10:12
# Fork: 1 of 1
# Warmup Iteration   1: 1,925 ms/op
# Warmup Iteration   2: 2,077 ms/op
# Warmup Iteration   3: 1,798 ms/op
# Warmup Iteration   4: 1,813 ms/op
# Warmup Iteration   5: 1,815 ms/op
# Warmup Iteration   6: 1,793 ms/op
# Warmup Iteration   7: 1,782 ms/op
# Warmup Iteration   8: 1,792 ms/op
# Warmup Iteration   9: 1,805 ms/op
# Warmup Iteration  10: 1,800 ms/op
Iteration   1: 1,786 ms/op
Iteration   2: 1,784 ms/op
Iteration   3: 1,784 ms/op
Iteration   4: 1,790 ms/op
Iteration   5: 1,784 ms/op
Iteration   6: 1,783 ms/op
Iteration   7: 1,789 ms/op
Iteration   8: 1,784 ms/op
Iteration   9: 1,797 ms/op
Iteration  10: 1,802 ms/op


Result "benchmarkFind":
  1,788 ±(99.9%) 0,010 ms/op [Average]
  (min, avg, max) = (1,783, 1,788, 1,802), stdev = 0,006
  CI (99.9%): [1,778, 1,798] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 8, patternSize = 8)

# Run progress: 79,87% complete, ETA 03:09:45
# Fork: 1 of 1
# Warmup Iteration   1: 19,482 ms/op
# Warmup Iteration   2: 17,785 ms/op
# Warmup Iteration   3: 17,675 ms/op
# Warmup Iteration   4: 17,767 ms/op
# Warmup Iteration   5: 17,598 ms/op
# Warmup Iteration   6: 17,562 ms/op
# Warmup Iteration   7: 17,721 ms/op
# Warmup Iteration   8: 17,761 ms/op
# Warmup Iteration   9: 17,655 ms/op
# Warmup Iteration  10: 17,720 ms/op
Iteration   1: 17,640 ms/op
Iteration   2: 17,482 ms/op
Iteration   3: 17,660 ms/op
Iteration   4: 17,510 ms/op
Iteration   5: 17,546 ms/op
Iteration   6: 17,722 ms/op
Iteration   7: 17,701 ms/op
Iteration   8: 17,589 ms/op
Iteration   9: 17,502 ms/op
Iteration  10: 17,660 ms/op


Result "benchmarkFind":
  17,601 ±(99.9%) 0,132 ms/op [Average]
  (min, avg, max) = (17,482, 17,601, 17,722), stdev = 0,087
  CI (99.9%): [17,469, 17,733] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 8, patternSize = 16)

# Run progress: 79,92% complete, ETA 03:09:17
# Fork: 1 of 1
# Warmup Iteration   1: 69,677 ms/op
# Warmup Iteration   2: 63,378 ms/op
# Warmup Iteration   3: 61,403 ms/op
# Warmup Iteration   4: 61,588 ms/op
# Warmup Iteration   5: 61,997 ms/op
# Warmup Iteration   6: 61,858 ms/op
# Warmup Iteration   7: 62,016 ms/op
# Warmup Iteration   8: 61,983 ms/op
# Warmup Iteration   9: 62,521 ms/op
# Warmup Iteration  10: 61,997 ms/op
Iteration   1: 62,262 ms/op
Iteration   2: 62,189 ms/op
Iteration   3: 62,345 ms/op
Iteration   4: 62,618 ms/op
Iteration   5: 61,942 ms/op
Iteration   6: 61,811 ms/op
Iteration   7: 61,927 ms/op
Iteration   8: 62,632 ms/op
Iteration   9: 62,621 ms/op
Iteration  10: 67,896 ms/op


Result "benchmarkFind":
  62,824 ±(99.9%) 2,733 ms/op [Average]
  (min, avg, max) = (61,811, 62,824, 67,896), stdev = 1,808
  CI (99.9%): [60,091, 65,557] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 8, patternSize = 32)

# Run progress: 79,96% complete, ETA 03:08:50
# Fork: 1 of 1
# Warmup Iteration   1: 61,809 ms/op
# Warmup Iteration   2: 56,485 ms/op
# Warmup Iteration   3: 54,895 ms/op
# Warmup Iteration   4: 54,466 ms/op
# Warmup Iteration   5: 54,724 ms/op
# Warmup Iteration   6: 55,051 ms/op
# Warmup Iteration   7: 56,269 ms/op
# Warmup Iteration   8: 55,577 ms/op
# Warmup Iteration   9: 55,034 ms/op
# Warmup Iteration  10: 55,896 ms/op
Iteration   1: 55,645 ms/op
Iteration   2: 55,438 ms/op
Iteration   3: 55,453 ms/op
Iteration   4: 55,919 ms/op
Iteration   5: 55,331 ms/op
Iteration   6: 55,321 ms/op
Iteration   7: 55,584 ms/op
Iteration   8: 55,372 ms/op
Iteration   9: 57,116 ms/op
Iteration  10: 54,871 ms/op


Result "benchmarkFind":
  55,605 ±(99.9%) 0,899 ms/op [Average]
  (min, avg, max) = (54,871, 55,605, 57,116), stdev = 0,595
  CI (99.9%): [54,706, 56,504] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 8, patternSize = 64)

# Run progress: 80,01% complete, ETA 03:08:23
# Fork: 1 of 1
# Warmup Iteration   1: 83,666 ms/op
# Warmup Iteration   2: 72,118 ms/op
# Warmup Iteration   3: 71,827 ms/op
# Warmup Iteration   4: 72,698 ms/op
# Warmup Iteration   5: 72,450 ms/op
# Warmup Iteration   6: 72,351 ms/op
# Warmup Iteration   7: 73,403 ms/op
# Warmup Iteration   8: 72,143 ms/op
# Warmup Iteration   9: 72,628 ms/op
# Warmup Iteration  10: 72,224 ms/op
Iteration   1: 72,244 ms/op
Iteration   2: 72,243 ms/op
Iteration   3: 72,905 ms/op
Iteration   4: 72,705 ms/op
Iteration   5: 72,494 ms/op
Iteration   6: 72,958 ms/op
Iteration   7: 72,218 ms/op
Iteration   8: 72,535 ms/op
Iteration   9: 72,581 ms/op
Iteration  10: 72,415 ms/op


Result "benchmarkFind":
  72,530 ±(99.9%) 0,401 ms/op [Average]
  (min, avg, max) = (72,218, 72,530, 72,958), stdev = 0,265
  CI (99.9%): [72,128, 72,931] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 8, patternSize = 128)

# Run progress: 80,06% complete, ETA 03:07:56
# Fork: 1 of 1
# Warmup Iteration   1: 126,991 ms/op
# Warmup Iteration   2: 110,101 ms/op
# Warmup Iteration   3: 109,580 ms/op
# Warmup Iteration   4: 109,986 ms/op
# Warmup Iteration   5: 111,326 ms/op
# Warmup Iteration   6: 110,977 ms/op
# Warmup Iteration   7: 111,171 ms/op
# Warmup Iteration   8: 111,185 ms/op
# Warmup Iteration   9: 110,927 ms/op
# Warmup Iteration  10: 112,266 ms/op
Iteration   1: 111,647 ms/op
Iteration   2: 110,493 ms/op
Iteration   3: 111,860 ms/op
Iteration   4: 111,266 ms/op
Iteration   5: 111,431 ms/op
Iteration   6: 119,749 ms/op
Iteration   7: 114,653 ms/op
Iteration   8: 111,407 ms/op
Iteration   9: 110,175 ms/op
Iteration  10: 110,253 ms/op


Result "benchmarkFind":
  112,293 ±(99.9%) 4,400 ms/op [Average]
  (min, avg, max) = (110,175, 112,293, 119,749), stdev = 2,910
  CI (99.9%): [107,893, 116,693] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 8, patternSize = 256)

# Run progress: 80,10% complete, ETA 03:07:29
# Fork: 1 of 1
# Warmup Iteration   1: 210,319 ms/op
# Warmup Iteration   2: 182,289 ms/op
# Warmup Iteration   3: 181,546 ms/op
# Warmup Iteration   4: 180,784 ms/op
# Warmup Iteration   5: 183,230 ms/op
# Warmup Iteration   6: 181,542 ms/op
# Warmup Iteration   7: 182,194 ms/op
# Warmup Iteration   8: 180,602 ms/op
# Warmup Iteration   9: 181,834 ms/op
# Warmup Iteration  10: 181,436 ms/op
Iteration   1: 181,148 ms/op
Iteration   2: 182,597 ms/op
Iteration   3: 180,903 ms/op
Iteration   4: 182,383 ms/op
Iteration   5: 180,716 ms/op
Iteration   6: 182,519 ms/op
Iteration   7: 181,782 ms/op
Iteration   8: 182,809 ms/op
Iteration   9: 180,542 ms/op
Iteration  10: 182,485 ms/op


Result "benchmarkFind":
  181,788 ±(99.9%) 1,330 ms/op [Average]
  (min, avg, max) = (180,542, 181,788, 182,809), stdev = 0,880
  CI (99.9%): [180,458, 183,118] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 32, patternSize = 2)

# Run progress: 80,15% complete, ETA 03:07:02
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

com.almondtools.stringbench.SampleNotQualifiedException
	at com.almondtools.stringbench.MultiPatternMatcherBenchmark.setup(MultiPatternMatcherBenchmark.java:36)
	at com.almondtools.stringbench.generated.SCWuManberBenchmark_benchmarkFind_jmhTest._jmh_tryInit_f_scwumanberbenchmark0_0(SCWuManberBenchmark_benchmarkFind_jmhTest.java:425)
	at com.almondtools.stringbench.generated.SCWuManberBenchmark_benchmarkFind_jmhTest.benchmarkFind_AverageTime(SCWuManberBenchmark_benchmarkFind_jmhTest.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:430)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:412)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)




# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 32, patternSize = 4)

# Run progress: 80,19% complete, ETA 03:06:30
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

com.almondtools.stringbench.SampleNotQualifiedException
	at com.almondtools.stringbench.MultiPatternMatcherBenchmark.setup(MultiPatternMatcherBenchmark.java:36)
	at com.almondtools.stringbench.generated.SCWuManberBenchmark_benchmarkFind_jmhTest._jmh_tryInit_f_scwumanberbenchmark0_0(SCWuManberBenchmark_benchmarkFind_jmhTest.java:425)
	at com.almondtools.stringbench.generated.SCWuManberBenchmark_benchmarkFind_jmhTest.benchmarkFind_AverageTime(SCWuManberBenchmark_benchmarkFind_jmhTest.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:430)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:412)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)




# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 32, patternSize = 8)

# Run progress: 80,24% complete, ETA 03:05:58
# Fork: 1 of 1
# Warmup Iteration   1: 176,755 ms/op
# Warmup Iteration   2: 155,359 ms/op
# Warmup Iteration   3: 154,473 ms/op
# Warmup Iteration   4: 153,243 ms/op
# Warmup Iteration   5: 154,206 ms/op
# Warmup Iteration   6: 153,829 ms/op
# Warmup Iteration   7: 153,169 ms/op
# Warmup Iteration   8: 153,741 ms/op
# Warmup Iteration   9: 152,601 ms/op
# Warmup Iteration  10: 153,109 ms/op
Iteration   1: 154,074 ms/op
Iteration   2: 153,823 ms/op
Iteration   3: 153,880 ms/op
Iteration   4: 154,498 ms/op
Iteration   5: 152,927 ms/op
Iteration   6: 153,721 ms/op
Iteration   7: 153,435 ms/op
Iteration   8: 153,434 ms/op
Iteration   9: 153,938 ms/op
Iteration  10: 153,472 ms/op


Result "benchmarkFind":
  153,720 ±(99.9%) 0,651 ms/op [Average]
  (min, avg, max) = (152,927, 153,720, 154,498), stdev = 0,430
  CI (99.9%): [153,070, 154,371] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 32, patternSize = 16)

# Run progress: 80,28% complete, ETA 03:05:31
# Fork: 1 of 1
# Warmup Iteration   1: 195,015 ms/op
# Warmup Iteration   2: 180,744 ms/op
# Warmup Iteration   3: 178,361 ms/op
# Warmup Iteration   4: 176,577 ms/op
# Warmup Iteration   5: 181,796 ms/op
# Warmup Iteration   6: 175,276 ms/op
# Warmup Iteration   7: 175,996 ms/op
# Warmup Iteration   8: 188,429 ms/op
# Warmup Iteration   9: 173,734 ms/op
# Warmup Iteration  10: 173,164 ms/op
Iteration   1: 173,201 ms/op
Iteration   2: 174,416 ms/op
Iteration   3: 173,882 ms/op
Iteration   4: 184,098 ms/op
Iteration   5: 173,057 ms/op
Iteration   6: 173,477 ms/op
Iteration   7: 173,424 ms/op
Iteration   8: 174,471 ms/op
Iteration   9: 174,461 ms/op
Iteration  10: 173,494 ms/op


Result "benchmarkFind":
  174,798 ±(99.9%) 5,004 ms/op [Average]
  (min, avg, max) = (173,057, 174,798, 184,098), stdev = 3,310
  CI (99.9%): [169,794, 179,802] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 32, patternSize = 32)

# Run progress: 80,33% complete, ETA 03:05:04
# Fork: 1 of 1
# Warmup Iteration   1: 67,761 ms/op
# Warmup Iteration   2: 61,607 ms/op
# Warmup Iteration   3: 59,471 ms/op
# Warmup Iteration   4: 59,231 ms/op
# Warmup Iteration   5: 60,430 ms/op
# Warmup Iteration   6: 59,236 ms/op
# Warmup Iteration   7: 59,393 ms/op
# Warmup Iteration   8: 59,393 ms/op
# Warmup Iteration   9: 59,389 ms/op
# Warmup Iteration  10: 59,366 ms/op
Iteration   1: 59,913 ms/op
Iteration   2: 59,509 ms/op
Iteration   3: 59,493 ms/op
Iteration   4: 59,563 ms/op
Iteration   5: 59,543 ms/op
Iteration   6: 60,140 ms/op
Iteration   7: 60,515 ms/op
Iteration   8: 59,747 ms/op
Iteration   9: 59,588 ms/op
Iteration  10: 60,068 ms/op


Result "benchmarkFind":
  59,808 ±(99.9%) 0,519 ms/op [Average]
  (min, avg, max) = (59,493, 59,808, 60,515), stdev = 0,343
  CI (99.9%): [59,289, 60,327] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 32, patternSize = 64)

# Run progress: 80,38% complete, ETA 03:04:37
# Fork: 1 of 1
# Warmup Iteration   1: 86,131 ms/op
# Warmup Iteration   2: 77,503 ms/op
# Warmup Iteration   3: 75,576 ms/op
# Warmup Iteration   4: 76,099 ms/op
# Warmup Iteration   5: 76,644 ms/op
# Warmup Iteration   6: 76,165 ms/op
# Warmup Iteration   7: 77,992 ms/op
# Warmup Iteration   8: 77,060 ms/op
# Warmup Iteration   9: 77,038 ms/op
# Warmup Iteration  10: 77,485 ms/op
Iteration   1: 77,108 ms/op
Iteration   2: 76,768 ms/op
Iteration   3: 76,997 ms/op
Iteration   4: 77,485 ms/op
Iteration   5: 77,039 ms/op
Iteration   6: 78,068 ms/op
Iteration   7: 77,174 ms/op
Iteration   8: 77,266 ms/op
Iteration   9: 77,176 ms/op
Iteration  10: 76,947 ms/op


Result "benchmarkFind":
  77,203 ±(99.9%) 0,544 ms/op [Average]
  (min, avg, max) = (76,768, 77,203, 78,068), stdev = 0,360
  CI (99.9%): [76,659, 77,747] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 32, patternSize = 128)

# Run progress: 80,42% complete, ETA 03:04:10
# Fork: 1 of 1
# Warmup Iteration   1: 135,645 ms/op
# Warmup Iteration   2: 120,347 ms/op
# Warmup Iteration   3: 120,321 ms/op
# Warmup Iteration   4: 128,024 ms/op
# Warmup Iteration   5: 122,664 ms/op
# Warmup Iteration   6: 123,261 ms/op
# Warmup Iteration   7: 119,146 ms/op
# Warmup Iteration   8: 119,849 ms/op
# Warmup Iteration   9: 121,384 ms/op
# Warmup Iteration  10: 121,882 ms/op
Iteration   1: 122,190 ms/op
Iteration   2: 120,915 ms/op
Iteration   3: 121,778 ms/op
Iteration   4: 121,260 ms/op
Iteration   5: 121,955 ms/op
Iteration   6: 120,464 ms/op
Iteration   7: 121,278 ms/op
Iteration   8: 122,301 ms/op
Iteration   9: 121,485 ms/op
Iteration  10: 121,754 ms/op


Result "benchmarkFind":
  121,538 ±(99.9%) 0,869 ms/op [Average]
  (min, avg, max) = (120,464, 121,538, 122,301), stdev = 0,575
  CI (99.9%): [120,669, 122,407] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 32, patternSize = 256)

# Run progress: 80,47% complete, ETA 03:03:43
# Fork: 1 of 1
# Warmup Iteration   1: 231,790 ms/op
# Warmup Iteration   2: 209,005 ms/op
# Warmup Iteration   3: 209,063 ms/op
# Warmup Iteration   4: 209,432 ms/op
# Warmup Iteration   5: 210,478 ms/op
# Warmup Iteration   6: 210,531 ms/op
# Warmup Iteration   7: 212,332 ms/op
# Warmup Iteration   8: 211,298 ms/op
# Warmup Iteration   9: 212,760 ms/op
# Warmup Iteration  10: 211,411 ms/op
Iteration   1: 212,608 ms/op
Iteration   2: 210,240 ms/op
Iteration   3: 212,292 ms/op
Iteration   4: 211,233 ms/op
Iteration   5: 212,065 ms/op
Iteration   6: 209,934 ms/op
Iteration   7: 211,874 ms/op
Iteration   8: 211,038 ms/op
Iteration   9: 212,040 ms/op
Iteration  10: 210,526 ms/op


Result "benchmarkFind":
  211,385 ±(99.9%) 1,403 ms/op [Average]
  (min, avg, max) = (209,934, 211,385, 212,608), stdev = 0,928
  CI (99.9%): [209,983, 212,788] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 128, patternSize = 2)

# Run progress: 80,51% complete, ETA 03:03:16
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

com.almondtools.stringbench.SampleNotQualifiedException
	at com.almondtools.stringbench.MultiPatternMatcherBenchmark.setup(MultiPatternMatcherBenchmark.java:36)
	at com.almondtools.stringbench.generated.SCWuManberBenchmark_benchmarkFind_jmhTest._jmh_tryInit_f_scwumanberbenchmark0_0(SCWuManberBenchmark_benchmarkFind_jmhTest.java:425)
	at com.almondtools.stringbench.generated.SCWuManberBenchmark_benchmarkFind_jmhTest.benchmarkFind_AverageTime(SCWuManberBenchmark_benchmarkFind_jmhTest.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:430)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:412)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)




# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 128, patternSize = 4)

# Run progress: 80,56% complete, ETA 03:02:44
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

com.almondtools.stringbench.SampleNotQualifiedException
	at com.almondtools.stringbench.MultiPatternMatcherBenchmark.setup(MultiPatternMatcherBenchmark.java:36)
	at com.almondtools.stringbench.generated.SCWuManberBenchmark_benchmarkFind_jmhTest._jmh_tryInit_f_scwumanberbenchmark0_0(SCWuManberBenchmark_benchmarkFind_jmhTest.java:425)
	at com.almondtools.stringbench.generated.SCWuManberBenchmark_benchmarkFind_jmhTest.benchmarkFind_AverageTime(SCWuManberBenchmark_benchmarkFind_jmhTest.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:430)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:412)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)




# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 128, patternSize = 8)

# Run progress: 80,61% complete, ETA 03:02:12
# Fork: 1 of 1
# Warmup Iteration   1: 502,691 ms/op
# Warmup Iteration   2: 425,352 ms/op
# Warmup Iteration   3: 424,947 ms/op
# Warmup Iteration   4: 435,736 ms/op
# Warmup Iteration   5: 474,119 ms/op
# Warmup Iteration   6: 455,757 ms/op
# Warmup Iteration   7: 462,917 ms/op
# Warmup Iteration   8: 454,268 ms/op
# Warmup Iteration   9: 453,312 ms/op
# Warmup Iteration  10: 461,683 ms/op
Iteration   1: 455,673 ms/op
Iteration   2: 456,327 ms/op
Iteration   3: 467,765 ms/op
Iteration   4: 475,531 ms/op
Iteration   5: 466,502 ms/op
Iteration   6: 456,456 ms/op
Iteration   7: 457,893 ms/op
Iteration   8: 458,169 ms/op
Iteration   9: 457,343 ms/op
Iteration  10: 454,280 ms/op


Result "benchmarkFind":
  460,594 ±(99.9%) 10,482 ms/op [Average]
  (min, avg, max) = (454,280, 460,594, 475,531), stdev = 6,933
  CI (99.9%): [450,112, 471,076] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 128, patternSize = 16)

# Run progress: 80,65% complete, ETA 03:01:47
# Fork: 1 of 1
# Warmup Iteration   1: 1646,457 ms/op
# Warmup Iteration   2: 1641,673 ms/op
# Warmup Iteration   3: 1600,095 ms/op
# Warmup Iteration   4: 1692,898 ms/op
# Warmup Iteration   5: 1700,873 ms/op
# Warmup Iteration   6: 1693,608 ms/op
# Warmup Iteration   7: 1714,369 ms/op
# Warmup Iteration   8: 1690,625 ms/op
# Warmup Iteration   9: 1683,438 ms/op
# Warmup Iteration  10: 1688,903 ms/op
Iteration   1: 1688,126 ms/op
Iteration   2: 1686,967 ms/op
Iteration   3: 1706,831 ms/op
Iteration   4: 1705,269 ms/op
Iteration   5: 1689,177 ms/op
Iteration   6: 1693,958 ms/op
Iteration   7: 1688,729 ms/op
Iteration   8: 1697,071 ms/op
Iteration   9: 1701,285 ms/op
Iteration  10: 1674,757 ms/op


Result "benchmarkFind":
  1693,217 ±(99.9%) 14,721 ms/op [Average]
  (min, avg, max) = (1674,757, 1693,217, 1706,831), stdev = 9,737
  CI (99.9%): [1678,496, 1707,938] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 128, patternSize = 32)

# Run progress: 80,70% complete, ETA 03:01:23
# Fork: 1 of 1
# Warmup Iteration   1: 94,373 ms/op
# Warmup Iteration   2: 84,735 ms/op
# Warmup Iteration   3: 80,768 ms/op
# Warmup Iteration   4: 81,270 ms/op
# Warmup Iteration   5: 81,543 ms/op
# Warmup Iteration   6: 80,745 ms/op
# Warmup Iteration   7: 80,822 ms/op
# Warmup Iteration   8: 81,560 ms/op
# Warmup Iteration   9: 80,729 ms/op
# Warmup Iteration  10: 81,266 ms/op
Iteration   1: 81,744 ms/op
Iteration   2: 81,766 ms/op
Iteration   3: 81,703 ms/op
Iteration   4: 92,579 ms/op
Iteration   5: 81,526 ms/op
Iteration   6: 80,650 ms/op
Iteration   7: 80,475 ms/op
Iteration   8: 81,689 ms/op
Iteration   9: 81,026 ms/op
Iteration  10: 80,754 ms/op


Result "benchmarkFind":
  82,391 ±(99.9%) 5,464 ms/op [Average]
  (min, avg, max) = (80,475, 82,391, 92,579), stdev = 3,614
  CI (99.9%): [76,927, 87,855] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 128, patternSize = 64)

# Run progress: 80,74% complete, ETA 03:00:56
# Fork: 1 of 1
# Warmup Iteration   1: 125,682 ms/op
# Warmup Iteration   2: 110,673 ms/op
# Warmup Iteration   3: 108,623 ms/op
# Warmup Iteration   4: 108,095 ms/op
# Warmup Iteration   5: 108,709 ms/op
# Warmup Iteration   6: 109,310 ms/op
# Warmup Iteration   7: 109,353 ms/op
# Warmup Iteration   8: 109,612 ms/op
# Warmup Iteration   9: 109,279 ms/op
# Warmup Iteration  10: 110,487 ms/op
Iteration   1: 109,954 ms/op
Iteration   2: 110,559 ms/op
Iteration   3: 108,840 ms/op
Iteration   4: 108,674 ms/op
Iteration   5: 109,699 ms/op
Iteration   6: 109,835 ms/op
Iteration   7: 109,477 ms/op
Iteration   8: 109,701 ms/op
Iteration   9: 109,733 ms/op
Iteration  10: 110,670 ms/op


Result "benchmarkFind":
  109,714 ±(99.9%) 0,956 ms/op [Average]
  (min, avg, max) = (108,674, 109,714, 110,670), stdev = 0,633
  CI (99.9%): [108,758, 110,671] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 128, patternSize = 128)

# Run progress: 80,79% complete, ETA 03:00:30
# Fork: 1 of 1
# Warmup Iteration   1: 179,757 ms/op
# Warmup Iteration   2: 164,950 ms/op
# Warmup Iteration   3: 161,485 ms/op
# Warmup Iteration   4: 159,922 ms/op
# Warmup Iteration   5: 162,379 ms/op
# Warmup Iteration   6: 161,605 ms/op
# Warmup Iteration   7: 162,340 ms/op
# Warmup Iteration   8: 163,054 ms/op
# Warmup Iteration   9: 163,372 ms/op
# Warmup Iteration  10: 162,877 ms/op
Iteration   1: 161,712 ms/op
Iteration   2: 163,381 ms/op
Iteration   3: 164,024 ms/op
Iteration   4: 164,717 ms/op
Iteration   5: 164,227 ms/op
Iteration   6: 163,422 ms/op
Iteration   7: 162,606 ms/op
Iteration   8: 163,446 ms/op
Iteration   9: 163,731 ms/op
Iteration  10: 163,002 ms/op


Result "benchmarkFind":
  163,427 ±(99.9%) 1,290 ms/op [Average]
  (min, avg, max) = (161,712, 163,427, 164,717), stdev = 0,853
  CI (99.9%): [162,137, 164,717] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternNumber = 128, patternSize = 256)

# Run progress: 80,84% complete, ETA 03:00:03
# Fork: 1 of 1
# Warmup Iteration   1: 310,616 ms/op
# Warmup Iteration   2: 283,421 ms/op
# Warmup Iteration   3: 278,887 ms/op
# Warmup Iteration   4: 282,159 ms/op
# Warmup Iteration   5: 305,681 ms/op
# Warmup Iteration   6: 286,875 ms/op
# Warmup Iteration   7: 282,784 ms/op
# Warmup Iteration   8: 280,263 ms/op
# Warmup Iteration   9: 281,535 ms/op
# Warmup Iteration  10: 281,853 ms/op
Iteration   1: 281,428 ms/op
Iteration   2: 282,312 ms/op
Iteration   3: 283,454 ms/op
Iteration   4: 282,284 ms/op
Iteration   5: 282,191 ms/op
Iteration   6: 283,126 ms/op
Iteration   7: 285,164 ms/op
Iteration   8: 283,640 ms/op
Iteration   9: 283,482 ms/op
Iteration  10: 283,557 ms/op


Result "benchmarkFind":
  283,064 ±(99.9%) 1,588 ms/op [Average]
  (min, avg, max) = (281,428, 283,064, 285,164), stdev = 1,050
  CI (99.9%): [281,476, 284,652] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 2, patternSize = 2)

# Run progress: 80,88% complete, ETA 02:59:37
# Fork: 1 of 1
# Warmup Iteration   1: 0,306 ms/op
# Warmup Iteration   2: 0,278 ms/op
# Warmup Iteration   3: 0,277 ms/op
# Warmup Iteration   4: 0,278 ms/op
# Warmup Iteration   5: 0,280 ms/op
# Warmup Iteration   6: 0,278 ms/op
# Warmup Iteration   7: 0,279 ms/op
# Warmup Iteration   8: 0,280 ms/op
# Warmup Iteration   9: 0,281 ms/op
# Warmup Iteration  10: 0,280 ms/op
Iteration   1: 0,280 ms/op
Iteration   2: 0,281 ms/op
Iteration   3: 0,281 ms/op
Iteration   4: 0,284 ms/op
Iteration   5: 0,282 ms/op
Iteration   6: 0,283 ms/op
Iteration   7: 0,282 ms/op
Iteration   8: 0,284 ms/op
Iteration   9: 0,283 ms/op
Iteration  10: 0,282 ms/op


Result "benchmarkFind":
  0,282 ±(99.9%) 0,002 ms/op [Average]
  (min, avg, max) = (0,280, 0,282, 0,284), stdev = 0,001
  CI (99.9%): [0,280, 0,284] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 2, patternSize = 4)

# Run progress: 80,93% complete, ETA 02:59:09
# Fork: 1 of 1
# Warmup Iteration   1: 3,739 ms/op
# Warmup Iteration   2: 3,253 ms/op
# Warmup Iteration   3: 3,256 ms/op
# Warmup Iteration   4: 3,296 ms/op
# Warmup Iteration   5: 3,298 ms/op
# Warmup Iteration   6: 3,280 ms/op
# Warmup Iteration   7: 3,295 ms/op
# Warmup Iteration   8: 3,298 ms/op
# Warmup Iteration   9: 3,311 ms/op
# Warmup Iteration  10: 3,317 ms/op
Iteration   1: 3,316 ms/op
Iteration   2: 3,330 ms/op
Iteration   3: 3,300 ms/op
Iteration   4: 3,310 ms/op
Iteration   5: 3,311 ms/op
Iteration   6: 3,298 ms/op
Iteration   7: 3,296 ms/op
Iteration   8: 3,289 ms/op
Iteration   9: 3,294 ms/op
Iteration  10: 3,313 ms/op


Result "benchmarkFind":
  3,305 ±(99.9%) 0,019 ms/op [Average]
  (min, avg, max) = (3,289, 3,305, 3,330), stdev = 0,012
  CI (99.9%): [3,287, 3,324] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 2, patternSize = 8)

# Run progress: 80,97% complete, ETA 02:58:42
# Fork: 1 of 1
# Warmup Iteration   1: 17,047 ms/op
# Warmup Iteration   2: 16,711 ms/op
# Warmup Iteration   3: 15,230 ms/op
# Warmup Iteration   4: 15,302 ms/op
# Warmup Iteration   5: 15,156 ms/op
# Warmup Iteration   6: 15,355 ms/op
# Warmup Iteration   7: 15,322 ms/op
# Warmup Iteration   8: 15,283 ms/op
# Warmup Iteration   9: 15,450 ms/op
# Warmup Iteration  10: 15,443 ms/op
Iteration   1: 15,474 ms/op
Iteration   2: 15,431 ms/op
Iteration   3: 15,304 ms/op
Iteration   4: 15,461 ms/op
Iteration   5: 15,312 ms/op
Iteration   6: 15,435 ms/op
Iteration   7: 15,368 ms/op
Iteration   8: 15,530 ms/op
Iteration   9: 15,330 ms/op
Iteration  10: 15,359 ms/op


Result "benchmarkFind":
  15,400 ±(99.9%) 0,116 ms/op [Average]
  (min, avg, max) = (15,304, 15,400, 15,530), stdev = 0,077
  CI (99.9%): [15,285, 15,516] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 2, patternSize = 16)

# Run progress: 81,02% complete, ETA 02:58:15
# Fork: 1 of 1
# Warmup Iteration   1: 8,136 ms/op
# Warmup Iteration   2: 7,754 ms/op
# Warmup Iteration   3: 7,418 ms/op
# Warmup Iteration   4: 7,271 ms/op
# Warmup Iteration   5: 7,325 ms/op
# Warmup Iteration   6: 7,305 ms/op
# Warmup Iteration   7: 7,309 ms/op
# Warmup Iteration   8: 7,326 ms/op
# Warmup Iteration   9: 7,300 ms/op
# Warmup Iteration  10: 7,330 ms/op
Iteration   1: 7,318 ms/op
Iteration   2: 7,339 ms/op
Iteration   3: 7,388 ms/op
Iteration   4: 7,434 ms/op
Iteration   5: 7,440 ms/op
Iteration   6: 7,462 ms/op
Iteration   7: 7,410 ms/op
Iteration   8: 7,545 ms/op
Iteration   9: 7,410 ms/op
Iteration  10: 7,434 ms/op


Result "benchmarkFind":
  7,418 ±(99.9%) 0,096 ms/op [Average]
  (min, avg, max) = (7,318, 7,418, 7,545), stdev = 0,063
  CI (99.9%): [7,322, 7,514] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 2, patternSize = 32)

# Run progress: 81,07% complete, ETA 02:57:48
# Fork: 1 of 1
# Warmup Iteration   1: 4,018 ms/op
# Warmup Iteration   2: 3,669 ms/op
# Warmup Iteration   3: 3,527 ms/op
# Warmup Iteration   4: 3,514 ms/op
# Warmup Iteration   5: 3,515 ms/op
# Warmup Iteration   6: 3,521 ms/op
# Warmup Iteration   7: 3,550 ms/op
# Warmup Iteration   8: 3,512 ms/op
# Warmup Iteration   9: 3,571 ms/op
# Warmup Iteration  10: 3,566 ms/op
Iteration   1: 3,611 ms/op
Iteration   2: 3,561 ms/op
Iteration   3: 3,519 ms/op
Iteration   4: 3,529 ms/op
Iteration   5: 3,581 ms/op
Iteration   6: 3,602 ms/op
Iteration   7: 3,590 ms/op
Iteration   8: 3,595 ms/op
Iteration   9: 3,605 ms/op
Iteration  10: 3,594 ms/op


Result "benchmarkFind":
  3,579 ±(99.9%) 0,048 ms/op [Average]
  (min, avg, max) = (3,519, 3,579, 3,611), stdev = 0,032
  CI (99.9%): [3,530, 3,627] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 2, patternSize = 64)

# Run progress: 81,11% complete, ETA 02:57:21
# Fork: 1 of 1
# Warmup Iteration   1: 2,635 ms/op
# Warmup Iteration   2: 2,371 ms/op
# Warmup Iteration   3: 2,326 ms/op
# Warmup Iteration   4: 2,324 ms/op
# Warmup Iteration   5: 2,332 ms/op
# Warmup Iteration   6: 2,316 ms/op
# Warmup Iteration   7: 2,331 ms/op
# Warmup Iteration   8: 2,372 ms/op
# Warmup Iteration   9: 2,350 ms/op
# Warmup Iteration  10: 2,354 ms/op
Iteration   1: 2,376 ms/op
Iteration   2: 2,363 ms/op
Iteration   3: 2,348 ms/op
Iteration   4: 2,326 ms/op
Iteration   5: 2,332 ms/op
Iteration   6: 2,335 ms/op
Iteration   7: 2,338 ms/op
Iteration   8: 2,342 ms/op
Iteration   9: 2,333 ms/op
Iteration  10: 2,352 ms/op


Result "benchmarkFind":
  2,345 ±(99.9%) 0,023 ms/op [Average]
  (min, avg, max) = (2,326, 2,345, 2,376), stdev = 0,015
  CI (99.9%): [2,321, 2,368] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 2, patternSize = 128)

# Run progress: 81,16% complete, ETA 02:56:54
# Fork: 1 of 1
# Warmup Iteration   1: 1,935 ms/op
# Warmup Iteration   2: 1,729 ms/op
# Warmup Iteration   3: 1,713 ms/op
# Warmup Iteration   4: 1,706 ms/op
# Warmup Iteration   5: 1,728 ms/op
# Warmup Iteration   6: 1,720 ms/op
# Warmup Iteration   7: 1,733 ms/op
# Warmup Iteration   8: 1,738 ms/op
# Warmup Iteration   9: 1,737 ms/op
# Warmup Iteration  10: 1,744 ms/op
Iteration   1: 1,728 ms/op
Iteration   2: 1,727 ms/op
Iteration   3: 1,728 ms/op
Iteration   4: 1,748 ms/op
Iteration   5: 1,730 ms/op
Iteration   6: 1,727 ms/op
Iteration   7: 1,722 ms/op
Iteration   8: 1,730 ms/op
Iteration   9: 1,745 ms/op
Iteration  10: 1,720 ms/op


Result "benchmarkFind":
  1,730 ±(99.9%) 0,013 ms/op [Average]
  (min, avg, max) = (1,720, 1,730, 1,748), stdev = 0,009
  CI (99.9%): [1,717, 1,744] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 2, patternSize = 256)

# Run progress: 81,20% complete, ETA 02:56:27
# Fork: 1 of 1
# Warmup Iteration   1: 1,590 ms/op
# Warmup Iteration   2: 1,399 ms/op
# Warmup Iteration   3: 1,397 ms/op
# Warmup Iteration   4: 1,407 ms/op
# Warmup Iteration   5: 1,418 ms/op
# Warmup Iteration   6: 1,413 ms/op
# Warmup Iteration   7: 1,432 ms/op
# Warmup Iteration   8: 1,437 ms/op
# Warmup Iteration   9: 1,418 ms/op
# Warmup Iteration  10: 1,415 ms/op
Iteration   1: 1,414 ms/op
Iteration   2: 1,418 ms/op
Iteration   3: 1,417 ms/op
Iteration   4: 1,410 ms/op
Iteration   5: 1,411 ms/op
Iteration   6: 1,413 ms/op
Iteration   7: 1,419 ms/op
Iteration   8: 1,418 ms/op
Iteration   9: 1,561 ms/op
Iteration  10: 1,393 ms/op


Result "benchmarkFind":
  1,427 ±(99.9%) 0,072 ms/op [Average]
  (min, avg, max) = (1,393, 1,427, 1,561), stdev = 0,048
  CI (99.9%): [1,356, 1,499] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 8, patternSize = 2)

# Run progress: 81,25% complete, ETA 02:56:00
# Fork: 1 of 1
# Warmup Iteration   1: 1,132 ms/op
# Warmup Iteration   2: 1,039 ms/op
# Warmup Iteration   3: 1,032 ms/op
# Warmup Iteration   4: 1,039 ms/op
# Warmup Iteration   5: 1,038 ms/op
# Warmup Iteration   6: 1,030 ms/op
# Warmup Iteration   7: 1,020 ms/op
# Warmup Iteration   8: 1,018 ms/op
# Warmup Iteration   9: 1,026 ms/op
# Warmup Iteration  10: 1,026 ms/op
Iteration   1: 1,026 ms/op
Iteration   2: 1,027 ms/op
Iteration   3: 1,020 ms/op
Iteration   4: 1,030 ms/op
Iteration   5: 1,025 ms/op
Iteration   6: 1,021 ms/op
Iteration   7: 1,028 ms/op
Iteration   8: 1,023 ms/op
Iteration   9: 1,028 ms/op
Iteration  10: 1,025 ms/op


Result "benchmarkFind":
  1,025 ±(99.9%) 0,005 ms/op [Average]
  (min, avg, max) = (1,020, 1,025, 1,030), stdev = 0,003
  CI (99.9%): [1,021, 1,030] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 8, patternSize = 4)

# Run progress: 81,30% complete, ETA 02:55:32
# Fork: 1 of 1
# Warmup Iteration   1: 24,739 ms/op
# Warmup Iteration   2: 22,853 ms/op
# Warmup Iteration   3: 22,703 ms/op
# Warmup Iteration   4: 22,753 ms/op
# Warmup Iteration   5: 22,753 ms/op
# Warmup Iteration   6: 22,608 ms/op
# Warmup Iteration   7: 22,801 ms/op
# Warmup Iteration   8: 22,720 ms/op
# Warmup Iteration   9: 22,683 ms/op
# Warmup Iteration  10: 22,484 ms/op
Iteration   1: 22,692 ms/op
Iteration   2: 22,663 ms/op
Iteration   3: 22,728 ms/op
Iteration   4: 22,607 ms/op
Iteration   5: 22,708 ms/op
Iteration   6: 22,664 ms/op
Iteration   7: 22,848 ms/op
Iteration   8: 22,669 ms/op
Iteration   9: 22,672 ms/op
Iteration  10: 22,475 ms/op


Result "benchmarkFind":
  22,673 ±(99.9%) 0,142 ms/op [Average]
  (min, avg, max) = (22,475, 22,673, 22,848), stdev = 0,094
  CI (99.9%): [22,531, 22,814] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 8, patternSize = 8)

# Run progress: 81,34% complete, ETA 02:55:05
# Fork: 1 of 1
# Warmup Iteration   1: 36,429 ms/op
# Warmup Iteration   2: 32,658 ms/op
# Warmup Iteration   3: 32,913 ms/op
# Warmup Iteration   4: 31,491 ms/op
# Warmup Iteration   5: 31,418 ms/op
# Warmup Iteration   6: 31,616 ms/op
# Warmup Iteration   7: 31,593 ms/op
# Warmup Iteration   8: 31,612 ms/op
# Warmup Iteration   9: 31,802 ms/op
# Warmup Iteration  10: 31,577 ms/op
Iteration   1: 31,394 ms/op
Iteration   2: 31,507 ms/op
Iteration   3: 31,568 ms/op
Iteration   4: 31,920 ms/op
Iteration   5: 31,771 ms/op
Iteration   6: 31,722 ms/op
Iteration   7: 36,212 ms/op
Iteration   8: 31,860 ms/op
Iteration   9: 31,598 ms/op
Iteration  10: 31,702 ms/op


Result "benchmarkFind":
  32,125 ±(99.9%) 2,184 ms/op [Average]
  (min, avg, max) = (31,394, 32,125, 36,212), stdev = 1,445
  CI (99.9%): [29,941, 34,310] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 8, patternSize = 16)

# Run progress: 81,39% complete, ETA 02:54:38
# Fork: 1 of 1
# Warmup Iteration   1: 14,222 ms/op
# Warmup Iteration   2: 12,457 ms/op
# Warmup Iteration   3: 12,435 ms/op
# Warmup Iteration   4: 12,474 ms/op
# Warmup Iteration   5: 12,441 ms/op
# Warmup Iteration   6: 12,429 ms/op
# Warmup Iteration   7: 12,456 ms/op
# Warmup Iteration   8: 12,535 ms/op
# Warmup Iteration   9: 12,666 ms/op
# Warmup Iteration  10: 12,623 ms/op
Iteration   1: 12,642 ms/op
Iteration   2: 12,790 ms/op
Iteration   3: 12,621 ms/op
Iteration   4: 12,602 ms/op
Iteration   5: 12,625 ms/op
Iteration   6: 12,669 ms/op
Iteration   7: 12,724 ms/op
Iteration   8: 12,666 ms/op
Iteration   9: 12,606 ms/op
Iteration  10: 12,636 ms/op


Result "benchmarkFind":
  12,658 ±(99.9%) 0,089 ms/op [Average]
  (min, avg, max) = (12,602, 12,658, 12,790), stdev = 0,059
  CI (99.9%): [12,569, 12,747] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 8, patternSize = 32)

# Run progress: 81,43% complete, ETA 02:54:11
# Fork: 1 of 1
# Warmup Iteration   1: 7,287 ms/op
# Warmup Iteration   2: 6,508 ms/op
# Warmup Iteration   3: 6,490 ms/op
# Warmup Iteration   4: 6,526 ms/op
# Warmup Iteration   5: 6,546 ms/op
# Warmup Iteration   6: 6,564 ms/op
# Warmup Iteration   7: 6,622 ms/op
# Warmup Iteration   8: 6,626 ms/op
# Warmup Iteration   9: 6,592 ms/op
# Warmup Iteration  10: 6,663 ms/op
Iteration   1: 6,605 ms/op
Iteration   2: 6,611 ms/op
Iteration   3: 6,613 ms/op
Iteration   4: 6,660 ms/op
Iteration   5: 6,627 ms/op
Iteration   6: 6,606 ms/op
Iteration   7: 6,573 ms/op
Iteration   8: 6,615 ms/op
Iteration   9: 6,643 ms/op
Iteration  10: 6,603 ms/op


Result "benchmarkFind":
  6,616 ±(99.9%) 0,036 ms/op [Average]
  (min, avg, max) = (6,573, 6,616, 6,660), stdev = 0,024
  CI (99.9%): [6,580, 6,651] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 8, patternSize = 64)

# Run progress: 81,48% complete, ETA 02:53:44
# Fork: 1 of 1
# Warmup Iteration   1: 8,607 ms/op
# Warmup Iteration   2: 7,533 ms/op
# Warmup Iteration   3: 7,514 ms/op
# Warmup Iteration   4: 7,524 ms/op
# Warmup Iteration   5: 7,523 ms/op
# Warmup Iteration   6: 7,525 ms/op
# Warmup Iteration   7: 7,581 ms/op
# Warmup Iteration   8: 7,574 ms/op
# Warmup Iteration   9: 7,623 ms/op
# Warmup Iteration  10: 7,568 ms/op
Iteration   1: 7,630 ms/op
Iteration   2: 7,585 ms/op
Iteration   3: 7,597 ms/op
Iteration   4: 7,585 ms/op
Iteration   5: 8,383 ms/op
Iteration   6: 7,513 ms/op
Iteration   7: 7,600 ms/op
Iteration   8: 7,529 ms/op
Iteration   9: 7,477 ms/op
Iteration  10: 7,492 ms/op


Result "benchmarkFind":
  7,639 ±(99.9%) 0,402 ms/op [Average]
  (min, avg, max) = (7,477, 7,639, 8,383), stdev = 0,266
  CI (99.9%): [7,237, 8,042] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 8, patternSize = 128)

# Run progress: 81,53% complete, ETA 02:53:17
# Fork: 1 of 1
# Warmup Iteration   1: 6,759 ms/op
# Warmup Iteration   2: 6,152 ms/op
# Warmup Iteration   3: 6,037 ms/op
# Warmup Iteration   4: 6,090 ms/op
# Warmup Iteration   5: 6,098 ms/op
# Warmup Iteration   6: 6,126 ms/op
# Warmup Iteration   7: 6,121 ms/op
# Warmup Iteration   8: 6,178 ms/op
# Warmup Iteration   9: 6,149 ms/op
# Warmup Iteration  10: 6,167 ms/op
Iteration   1: 6,163 ms/op
Iteration   2: 6,180 ms/op
Iteration   3: 6,155 ms/op
Iteration   4: 6,174 ms/op
Iteration   5: 6,151 ms/op
Iteration   6: 6,170 ms/op
Iteration   7: 6,160 ms/op
Iteration   8: 6,223 ms/op
Iteration   9: 6,254 ms/op
Iteration  10: 6,178 ms/op


Result "benchmarkFind":
  6,181 ±(99.9%) 0,049 ms/op [Average]
  (min, avg, max) = (6,151, 6,181, 6,254), stdev = 0,033
  CI (99.9%): [6,131, 6,230] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 8, patternSize = 256)

# Run progress: 81,57% complete, ETA 02:52:50
# Fork: 1 of 1
# Warmup Iteration   1: 6,954 ms/op
# Warmup Iteration   2: 6,372 ms/op
# Warmup Iteration   3: 6,278 ms/op
# Warmup Iteration   4: 6,278 ms/op
# Warmup Iteration   5: 6,254 ms/op
# Warmup Iteration   6: 6,259 ms/op
# Warmup Iteration   7: 6,319 ms/op
# Warmup Iteration   8: 6,332 ms/op
# Warmup Iteration   9: 6,325 ms/op
# Warmup Iteration  10: 6,359 ms/op
Iteration   1: 6,339 ms/op
Iteration   2: 6,360 ms/op
Iteration   3: 6,372 ms/op
Iteration   4: 6,351 ms/op
Iteration   5: 6,375 ms/op
Iteration   6: 6,360 ms/op
Iteration   7: 6,362 ms/op
Iteration   8: 6,305 ms/op
Iteration   9: 6,384 ms/op
Iteration  10: 6,235 ms/op


Result "benchmarkFind":
  6,344 ±(99.9%) 0,067 ms/op [Average]
  (min, avg, max) = (6,235, 6,344, 6,384), stdev = 0,044
  CI (99.9%): [6,277, 6,412] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 32, patternSize = 2)

# Run progress: 81,62% complete, ETA 02:52:23
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

com.almondtools.stringbench.SampleNotQualifiedException
	at com.almondtools.stringbench.MultiPatternMatcherBenchmark.setup(MultiPatternMatcherBenchmark.java:36)
	at com.almondtools.stringbench.generated.SCWuManberBenchmark_benchmarkFind_jmhTest._jmh_tryInit_f_scwumanberbenchmark0_0(SCWuManberBenchmark_benchmarkFind_jmhTest.java:425)
	at com.almondtools.stringbench.generated.SCWuManberBenchmark_benchmarkFind_jmhTest.benchmarkFind_AverageTime(SCWuManberBenchmark_benchmarkFind_jmhTest.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:430)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:412)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)




# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 32, patternSize = 4)

# Run progress: 81,66% complete, ETA 02:51:52
# Fork: 1 of 1
# Warmup Iteration   1: 177,515 ms/op
# Warmup Iteration   2: 160,900 ms/op
# Warmup Iteration   3: 161,717 ms/op
# Warmup Iteration   4: 160,657 ms/op
# Warmup Iteration   5: 159,355 ms/op
# Warmup Iteration   6: 160,030 ms/op
# Warmup Iteration   7: 158,953 ms/op
# Warmup Iteration   8: 159,755 ms/op
# Warmup Iteration   9: 160,214 ms/op
# Warmup Iteration  10: 159,633 ms/op
Iteration   1: 179,072 ms/op
Iteration   2: 158,631 ms/op
Iteration   3: 159,124 ms/op
Iteration   4: 158,802 ms/op
Iteration   5: 158,588 ms/op
Iteration   6: 159,198 ms/op
Iteration   7: 160,103 ms/op
Iteration   8: 159,704 ms/op
Iteration   9: 158,579 ms/op
Iteration  10: 158,441 ms/op


Result "benchmarkFind":
  161,024 ±(99.9%) 9,621 ms/op [Average]
  (min, avg, max) = (158,441, 161,024, 179,072), stdev = 6,364
  CI (99.9%): [151,403, 170,646] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 32, patternSize = 8)

# Run progress: 81,71% complete, ETA 02:51:25
# Fork: 1 of 1
# Warmup Iteration   1: 134,486 ms/op
# Warmup Iteration   2: 122,582 ms/op
# Warmup Iteration   3: 121,936 ms/op
# Warmup Iteration   4: 120,640 ms/op
# Warmup Iteration   5: 121,292 ms/op
# Warmup Iteration   6: 119,840 ms/op
# Warmup Iteration   7: 119,987 ms/op
# Warmup Iteration   8: 120,268 ms/op
# Warmup Iteration   9: 120,761 ms/op
# Warmup Iteration  10: 120,591 ms/op
Iteration   1: 119,985 ms/op
Iteration   2: 121,359 ms/op
Iteration   3: 121,627 ms/op
Iteration   4: 120,948 ms/op
Iteration   5: 121,251 ms/op
Iteration   6: 121,140 ms/op
Iteration   7: 122,228 ms/op
Iteration   8: 121,081 ms/op
Iteration   9: 120,894 ms/op
Iteration  10: 119,611 ms/op


Result "benchmarkFind":
  121,013 ±(99.9%) 1,137 ms/op [Average]
  (min, avg, max) = (119,611, 121,013, 122,228), stdev = 0,752
  CI (99.9%): [119,875, 122,150] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 32, patternSize = 16)

# Run progress: 81,76% complete, ETA 02:50:59
# Fork: 1 of 1
# Warmup Iteration   1: 32,910 ms/op
# Warmup Iteration   2: 29,839 ms/op
# Warmup Iteration   3: 29,094 ms/op
# Warmup Iteration   4: 29,161 ms/op
# Warmup Iteration   5: 29,248 ms/op
# Warmup Iteration   6: 29,305 ms/op
# Warmup Iteration   7: 29,360 ms/op
# Warmup Iteration   8: 29,798 ms/op
# Warmup Iteration   9: 29,708 ms/op
# Warmup Iteration  10: 29,869 ms/op
Iteration   1: 29,834 ms/op
Iteration   2: 29,822 ms/op
Iteration   3: 29,812 ms/op
Iteration   4: 29,973 ms/op
Iteration   5: 29,817 ms/op
Iteration   6: 29,959 ms/op
Iteration   7: 29,759 ms/op
Iteration   8: 29,811 ms/op
Iteration   9: 29,963 ms/op
Iteration  10: 29,884 ms/op


Result "benchmarkFind":
  29,863 ±(99.9%) 0,116 ms/op [Average]
  (min, avg, max) = (29,759, 29,863, 29,973), stdev = 0,076
  CI (99.9%): [29,748, 29,979] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 32, patternSize = 32)

# Run progress: 81,80% complete, ETA 02:50:32
# Fork: 1 of 1
# Warmup Iteration   1: 33,814 ms/op
# Warmup Iteration   2: 30,440 ms/op
# Warmup Iteration   3: 29,702 ms/op
# Warmup Iteration   4: 29,635 ms/op
# Warmup Iteration   5: 29,654 ms/op
# Warmup Iteration   6: 33,198 ms/op
# Warmup Iteration   7: 30,202 ms/op
# Warmup Iteration   8: 31,375 ms/op
# Warmup Iteration   9: 30,389 ms/op
# Warmup Iteration  10: 30,475 ms/op
Iteration   1: 30,607 ms/op
Iteration   2: 30,657 ms/op
Iteration   3: 30,753 ms/op
Iteration   4: 30,388 ms/op
Iteration   5: 30,539 ms/op
Iteration   6: 30,598 ms/op
Iteration   7: 30,482 ms/op
Iteration   8: 30,376 ms/op
Iteration   9: 30,573 ms/op
Iteration  10: 30,558 ms/op


Result "benchmarkFind":
  30,553 ±(99.9%) 0,175 ms/op [Average]
  (min, avg, max) = (30,376, 30,553, 30,753), stdev = 0,116
  CI (99.9%): [30,378, 30,728] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 32, patternSize = 64)

# Run progress: 81,85% complete, ETA 02:50:05
# Fork: 1 of 1
# Warmup Iteration   1: 33,546 ms/op
# Warmup Iteration   2: 30,320 ms/op
# Warmup Iteration   3: 29,637 ms/op
# Warmup Iteration   4: 29,938 ms/op
# Warmup Iteration   5: 29,732 ms/op
# Warmup Iteration   6: 29,820 ms/op
# Warmup Iteration   7: 29,657 ms/op
# Warmup Iteration   8: 29,918 ms/op
# Warmup Iteration   9: 30,040 ms/op
# Warmup Iteration  10: 30,105 ms/op
Iteration   1: 30,194 ms/op
Iteration   2: 29,971 ms/op
Iteration   3: 30,098 ms/op
Iteration   4: 30,190 ms/op
Iteration   5: 30,011 ms/op
Iteration   6: 30,059 ms/op
Iteration   7: 30,353 ms/op
Iteration   8: 30,284 ms/op
Iteration   9: 30,272 ms/op
Iteration  10: 30,027 ms/op


Result "benchmarkFind":
  30,146 ±(99.9%) 0,198 ms/op [Average]
  (min, avg, max) = (29,971, 30,146, 30,353), stdev = 0,131
  CI (99.9%): [29,948, 30,344] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 32, patternSize = 128)

# Run progress: 81,89% complete, ETA 02:49:38
# Fork: 1 of 1
# Warmup Iteration   1: 26,582 ms/op
# Warmup Iteration   2: 24,384 ms/op
# Warmup Iteration   3: 24,000 ms/op
# Warmup Iteration   4: 23,894 ms/op
# Warmup Iteration   5: 23,932 ms/op
# Warmup Iteration   6: 23,922 ms/op
# Warmup Iteration   7: 24,133 ms/op
# Warmup Iteration   8: 24,088 ms/op
# Warmup Iteration   9: 24,334 ms/op
# Warmup Iteration  10: 24,626 ms/op
Iteration   1: 24,557 ms/op
Iteration   2: 24,543 ms/op
Iteration   3: 26,174 ms/op
Iteration   4: 24,691 ms/op
Iteration   5: 24,702 ms/op
Iteration   6: 24,609 ms/op
Iteration   7: 24,491 ms/op
Iteration   8: 24,425 ms/op
Iteration   9: 24,631 ms/op
Iteration  10: 24,523 ms/op


Result "benchmarkFind":
  24,735 ±(99.9%) 0,776 ms/op [Average]
  (min, avg, max) = (24,425, 24,735, 26,174), stdev = 0,513
  CI (99.9%): [23,959, 25,511] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 32, patternSize = 256)

# Run progress: 81,94% complete, ETA 02:49:11
# Fork: 1 of 1
# Warmup Iteration   1: 15,890 ms/op
# Warmup Iteration   2: 14,448 ms/op
# Warmup Iteration   3: 14,628 ms/op
# Warmup Iteration   4: 14,824 ms/op
# Warmup Iteration   5: 14,033 ms/op
# Warmup Iteration   6: 14,032 ms/op
# Warmup Iteration   7: 14,027 ms/op
# Warmup Iteration   8: 14,045 ms/op
# Warmup Iteration   9: 14,043 ms/op
# Warmup Iteration  10: 14,102 ms/op
Iteration   1: 14,194 ms/op
Iteration   2: 14,243 ms/op
Iteration   3: 14,268 ms/op
Iteration   4: 14,303 ms/op
Iteration   5: 14,038 ms/op
Iteration   6: 14,044 ms/op
Iteration   7: 14,113 ms/op
Iteration   8: 14,126 ms/op
Iteration   9: 14,244 ms/op
Iteration  10: 14,163 ms/op


Result "benchmarkFind":
  14,174 ±(99.9%) 0,140 ms/op [Average]
  (min, avg, max) = (14,038, 14,174, 14,303), stdev = 0,093
  CI (99.9%): [14,034, 14,314] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 128, patternSize = 2)

# Run progress: 81,99% complete, ETA 02:48:44
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

com.almondtools.stringbench.SampleNotQualifiedException
	at com.almondtools.stringbench.MultiPatternMatcherBenchmark.setup(MultiPatternMatcherBenchmark.java:36)
	at com.almondtools.stringbench.generated.SCWuManberBenchmark_benchmarkFind_jmhTest._jmh_tryInit_f_scwumanberbenchmark0_0(SCWuManberBenchmark_benchmarkFind_jmhTest.java:425)
	at com.almondtools.stringbench.generated.SCWuManberBenchmark_benchmarkFind_jmhTest.benchmarkFind_AverageTime(SCWuManberBenchmark_benchmarkFind_jmhTest.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:430)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:412)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)




# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 128, patternSize = 4)

# Run progress: 82,03% complete, ETA 02:48:13
# Fork: 1 of 1
# Warmup Iteration   1: 482,934 ms/op
# Warmup Iteration   2: 448,399 ms/op
# Warmup Iteration   3: 583,352 ms/op
# Warmup Iteration   4: 455,794 ms/op
# Warmup Iteration   5: 454,740 ms/op
# Warmup Iteration   6: 453,084 ms/op
# Warmup Iteration   7: 455,998 ms/op
# Warmup Iteration   8: 454,803 ms/op
# Warmup Iteration   9: 453,052 ms/op
# Warmup Iteration  10: 453,340 ms/op
Iteration   1: 455,516 ms/op
Iteration   2: 455,888 ms/op
Iteration   3: 456,958 ms/op
Iteration   4: 456,268 ms/op
Iteration   5: 455,157 ms/op
Iteration   6: 452,693 ms/op
Iteration   7: 456,838 ms/op
Iteration   8: 456,891 ms/op
Iteration   9: 454,026 ms/op
Iteration  10: 454,653 ms/op


Result "benchmarkFind":
  455,489 ±(99.9%) 2,107 ms/op [Average]
  (min, avg, max) = (452,693, 455,489, 456,958), stdev = 1,393
  CI (99.9%): [453,382, 457,595] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 128, patternSize = 8)

# Run progress: 82,08% complete, ETA 02:47:47
# Fork: 1 of 1
# Warmup Iteration   1: 942,872 ms/op
# Warmup Iteration   2: 899,527 ms/op
# Warmup Iteration   3: 898,471 ms/op
# Warmup Iteration   4: 899,159 ms/op
# Warmup Iteration   5: 914,899 ms/op
# Warmup Iteration   6: 899,282 ms/op
# Warmup Iteration   7: 894,710 ms/op
# Warmup Iteration   8: 923,521 ms/op
# Warmup Iteration   9: 898,103 ms/op
# Warmup Iteration  10: 901,456 ms/op
Iteration   1: 903,647 ms/op
Iteration   2: 894,407 ms/op
Iteration   3: 904,135 ms/op
Iteration   4: 898,012 ms/op
Iteration   5: 898,527 ms/op
Iteration   6: 899,644 ms/op
Iteration   7: 890,958 ms/op
Iteration   8: 899,601 ms/op
Iteration   9: 897,923 ms/op
Iteration  10: 888,721 ms/op


Result "benchmarkFind":
  897,558 ±(99.9%) 7,504 ms/op [Average]
  (min, avg, max) = (888,721, 897,558, 904,135), stdev = 4,963
  CI (99.9%): [890,054, 905,062] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 128, patternSize = 16)

# Run progress: 82,12% complete, ETA 02:47:24
# Fork: 1 of 1
# Warmup Iteration   1: 75,577 ms/op
# Warmup Iteration   2: 66,984 ms/op
# Warmup Iteration   3: 67,805 ms/op
# Warmup Iteration   4: 65,920 ms/op
# Warmup Iteration   5: 65,730 ms/op
# Warmup Iteration   6: 65,928 ms/op
# Warmup Iteration   7: 65,499 ms/op
# Warmup Iteration   8: 65,509 ms/op
# Warmup Iteration   9: 66,041 ms/op
# Warmup Iteration  10: 66,499 ms/op
Iteration   1: 65,854 ms/op
Iteration   2: 65,755 ms/op
Iteration   3: 65,640 ms/op
Iteration   4: 66,143 ms/op
Iteration   5: 66,298 ms/op
Iteration   6: 66,167 ms/op
Iteration   7: 66,505 ms/op
Iteration   8: 66,908 ms/op
Iteration   9: 66,449 ms/op
Iteration  10: 66,948 ms/op


Result "benchmarkFind":
  66,267 ±(99.9%) 0,679 ms/op [Average]
  (min, avg, max) = (65,640, 66,267, 66,948), stdev = 0,449
  CI (99.9%): [65,587, 66,946] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 128, patternSize = 32)

# Run progress: 82,17% complete, ETA 02:46:57
# Fork: 1 of 1
# Warmup Iteration   1: 74,942 ms/op
# Warmup Iteration   2: 67,641 ms/op
# Warmup Iteration   3: 65,351 ms/op
# Warmup Iteration   4: 65,375 ms/op
# Warmup Iteration   5: 65,632 ms/op
# Warmup Iteration   6: 65,623 ms/op
# Warmup Iteration   7: 65,734 ms/op
# Warmup Iteration   8: 65,802 ms/op
# Warmup Iteration   9: 66,025 ms/op
# Warmup Iteration  10: 66,159 ms/op
Iteration   1: 66,202 ms/op
Iteration   2: 65,970 ms/op
Iteration   3: 67,040 ms/op
Iteration   4: 66,438 ms/op
Iteration   5: 72,629 ms/op
Iteration   6: 66,019 ms/op
Iteration   7: 65,959 ms/op
Iteration   8: 65,909 ms/op
Iteration   9: 65,849 ms/op
Iteration  10: 66,011 ms/op


Result "benchmarkFind":
  66,803 ±(99.9%) 3,141 ms/op [Average]
  (min, avg, max) = (65,849, 66,803, 72,629), stdev = 2,078
  CI (99.9%): [63,662, 69,944] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 128, patternSize = 64)

# Run progress: 82,22% complete, ETA 02:46:30
# Fork: 1 of 1
# Warmup Iteration   1: 56,950 ms/op
# Warmup Iteration   2: 51,160 ms/op
# Warmup Iteration   3: 50,959 ms/op
# Warmup Iteration   4: 49,467 ms/op
# Warmup Iteration   5: 49,502 ms/op
# Warmup Iteration   6: 49,229 ms/op
# Warmup Iteration   7: 49,805 ms/op
# Warmup Iteration   8: 49,320 ms/op
# Warmup Iteration   9: 49,247 ms/op
# Warmup Iteration  10: 49,909 ms/op
Iteration   1: 49,447 ms/op
Iteration   2: 49,841 ms/op
Iteration   3: 50,231 ms/op
Iteration   4: 49,904 ms/op
Iteration   5: 50,182 ms/op
Iteration   6: 50,107 ms/op
Iteration   7: 50,295 ms/op
Iteration   8: 50,077 ms/op
Iteration   9: 50,118 ms/op
Iteration  10: 49,879 ms/op


Result "benchmarkFind":
  50,008 ±(99.9%) 0,377 ms/op [Average]
  (min, avg, max) = (49,447, 50,008, 50,295), stdev = 0,249
  CI (99.9%): [49,631, 50,385] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 128, patternSize = 128)

# Run progress: 82,26% complete, ETA 02:46:03
# Fork: 1 of 1
# Warmup Iteration   1: 58,144 ms/op
# Warmup Iteration   2: 52,432 ms/op
# Warmup Iteration   3: 51,962 ms/op
# Warmup Iteration   4: 51,474 ms/op
# Warmup Iteration   5: 51,695 ms/op
# Warmup Iteration   6: 51,553 ms/op
# Warmup Iteration   7: 51,822 ms/op
# Warmup Iteration   8: 51,825 ms/op
# Warmup Iteration   9: 52,077 ms/op
# Warmup Iteration  10: 52,004 ms/op
Iteration   1: 52,262 ms/op
Iteration   2: 52,361 ms/op
Iteration   3: 51,999 ms/op
Iteration   4: 52,405 ms/op
Iteration   5: 52,101 ms/op
Iteration   6: 51,989 ms/op
Iteration   7: 52,178 ms/op
Iteration   8: 52,216 ms/op
Iteration   9: 52,067 ms/op
Iteration  10: 51,841 ms/op


Result "benchmarkFind":
  52,142 ±(99.9%) 0,267 ms/op [Average]
  (min, avg, max) = (51,841, 52,142, 52,405), stdev = 0,176
  CI (99.9%): [51,875, 52,409] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternNumber = 128, patternSize = 256)

# Run progress: 82,31% complete, ETA 02:45:37
# Fork: 1 of 1
# Warmup Iteration   1: 38,371 ms/op
# Warmup Iteration   2: 35,142 ms/op
# Warmup Iteration   3: 34,068 ms/op
# Warmup Iteration   4: 34,266 ms/op
# Warmup Iteration   5: 34,222 ms/op
# Warmup Iteration   6: 34,168 ms/op
# Warmup Iteration   7: 34,081 ms/op
# Warmup Iteration   8: 38,017 ms/op
# Warmup Iteration   9: 34,208 ms/op
# Warmup Iteration  10: 34,199 ms/op
Iteration   1: 34,208 ms/op
Iteration   2: 34,266 ms/op
Iteration   3: 34,179 ms/op
Iteration   4: 34,219 ms/op
Iteration   5: 34,222 ms/op
Iteration   6: 34,291 ms/op
Iteration   7: 34,121 ms/op
Iteration   8: 34,237 ms/op
Iteration   9: 34,280 ms/op
Iteration  10: 34,141 ms/op


Result "benchmarkFind":
  34,216 ±(99.9%) 0,086 ms/op [Average]
  (min, avg, max) = (34,121, 34,216, 34,291), stdev = 0,057
  CI (99.9%): [34,130, 34,302] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 2, patternSize = 2)

# Run progress: 82,35% complete, ETA 02:45:11
# Fork: 1 of 1
# Warmup Iteration   1: 0,782 ms/op
# Warmup Iteration   2: 0,713 ms/op
# Warmup Iteration   3: 0,700 ms/op
# Warmup Iteration   4: 0,705 ms/op
# Warmup Iteration   5: 0,698 ms/op
# Warmup Iteration   6: 0,702 ms/op
# Warmup Iteration   7: 0,697 ms/op
# Warmup Iteration   8: 0,702 ms/op
# Warmup Iteration   9: 0,703 ms/op
# Warmup Iteration  10: 0,710 ms/op
Iteration   1: 0,710 ms/op
Iteration   2: 0,703 ms/op
Iteration   3: 0,704 ms/op
Iteration   4: 0,708 ms/op
Iteration   5: 0,705 ms/op
Iteration   6: 0,705 ms/op
Iteration   7: 0,711 ms/op
Iteration   8: 0,703 ms/op
Iteration   9: 0,709 ms/op
Iteration  10: 0,716 ms/op


Result "benchmarkFind":
  0,707 ±(99.9%) 0,007 ms/op [Average]
  (min, avg, max) = (0,703, 0,707, 0,716), stdev = 0,004
  CI (99.9%): [0,701, 0,714] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 2, patternSize = 4)

# Run progress: 82,40% complete, ETA 02:44:44
# Fork: 1 of 1
# Warmup Iteration   1: 24,135 ms/op
# Warmup Iteration   2: 22,390 ms/op
# Warmup Iteration   3: 21,618 ms/op
# Warmup Iteration   4: 21,664 ms/op
# Warmup Iteration   5: 21,611 ms/op
# Warmup Iteration   6: 21,734 ms/op
# Warmup Iteration   7: 21,831 ms/op
# Warmup Iteration   8: 21,896 ms/op
# Warmup Iteration   9: 21,881 ms/op
# Warmup Iteration  10: 22,026 ms/op
Iteration   1: 21,947 ms/op
Iteration   2: 21,992 ms/op
Iteration   3: 21,896 ms/op
Iteration   4: 21,926 ms/op
Iteration   5: 22,061 ms/op
Iteration   6: 22,117 ms/op
Iteration   7: 22,033 ms/op
Iteration   8: 22,056 ms/op
Iteration   9: 22,037 ms/op
Iteration  10: 21,988 ms/op


Result "benchmarkFind":
  22,005 ±(99.9%) 0,103 ms/op [Average]
  (min, avg, max) = (21,896, 22,005, 22,117), stdev = 0,068
  CI (99.9%): [21,902, 22,108] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 2, patternSize = 8)

# Run progress: 82,44% complete, ETA 02:44:17
# Fork: 1 of 1
# Warmup Iteration   1: 10,817 ms/op
# Warmup Iteration   2: 10,133 ms/op
# Warmup Iteration   3: 9,870 ms/op
# Warmup Iteration   4: 9,844 ms/op
# Warmup Iteration   5: 9,867 ms/op
# Warmup Iteration   6: 11,188 ms/op
# Warmup Iteration   7: 10,004 ms/op
# Warmup Iteration   8: 10,256 ms/op
# Warmup Iteration   9: 10,044 ms/op
# Warmup Iteration  10: 9,968 ms/op
Iteration   1: 9,899 ms/op
Iteration   2: 9,792 ms/op
Iteration   3: 9,989 ms/op
Iteration   4: 9,940 ms/op
Iteration   5: 9,863 ms/op
Iteration   6: 9,849 ms/op
Iteration   7: 9,916 ms/op
Iteration   8: 9,945 ms/op
Iteration   9: 9,924 ms/op
Iteration  10: 10,007 ms/op


Result "benchmarkFind":
  9,913 ±(99.9%) 0,098 ms/op [Average]
  (min, avg, max) = (9,792, 9,913, 10,007), stdev = 0,065
  CI (99.9%): [9,815, 10,010] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 2, patternSize = 16)

# Run progress: 82,49% complete, ETA 02:43:50
# Fork: 1 of 1
# Warmup Iteration   1: 5,894 ms/op
# Warmup Iteration   2: 5,496 ms/op
# Warmup Iteration   3: 5,324 ms/op
# Warmup Iteration   4: 5,359 ms/op
# Warmup Iteration   5: 5,320 ms/op
# Warmup Iteration   6: 5,383 ms/op
# Warmup Iteration   7: 5,367 ms/op
# Warmup Iteration   8: 5,427 ms/op
# Warmup Iteration   9: 5,412 ms/op
# Warmup Iteration  10: 5,404 ms/op
Iteration   1: 5,444 ms/op
Iteration   2: 5,423 ms/op
Iteration   3: 5,414 ms/op
Iteration   4: 5,395 ms/op
Iteration   5: 5,448 ms/op
Iteration   6: 5,440 ms/op
Iteration   7: 5,434 ms/op
Iteration   8: 5,416 ms/op
Iteration   9: 5,428 ms/op
Iteration  10: 5,417 ms/op


Result "benchmarkFind":
  5,426 ±(99.9%) 0,025 ms/op [Average]
  (min, avg, max) = (5,395, 5,426, 5,448), stdev = 0,016
  CI (99.9%): [5,401, 5,450] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 2, patternSize = 32)

# Run progress: 82,54% complete, ETA 02:43:23
# Fork: 1 of 1
# Warmup Iteration   1: 3,120 ms/op
# Warmup Iteration   2: 2,878 ms/op
# Warmup Iteration   3: 2,804 ms/op
# Warmup Iteration   4: 2,818 ms/op
# Warmup Iteration   5: 2,838 ms/op
# Warmup Iteration   6: 2,823 ms/op
# Warmup Iteration   7: 2,823 ms/op
# Warmup Iteration   8: 2,844 ms/op
# Warmup Iteration   9: 2,865 ms/op
# Warmup Iteration  10: 2,852 ms/op
Iteration   1: 2,874 ms/op
Iteration   2: 2,862 ms/op
Iteration   3: 2,821 ms/op
Iteration   4: 2,852 ms/op
Iteration   5: 2,849 ms/op
Iteration   6: 2,877 ms/op
Iteration   7: 2,844 ms/op
Iteration   8: 2,828 ms/op
Iteration   9: 2,848 ms/op
Iteration  10: 2,838 ms/op


Result "benchmarkFind":
  2,849 ±(99.9%) 0,027 ms/op [Average]
  (min, avg, max) = (2,821, 2,849, 2,877), stdev = 0,018
  CI (99.9%): [2,822, 2,877] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 2, patternSize = 64)

# Run progress: 82,58% complete, ETA 02:42:56
# Fork: 1 of 1
# Warmup Iteration   1: 1,769 ms/op
# Warmup Iteration   2: 1,647 ms/op
# Warmup Iteration   3: 1,602 ms/op
# Warmup Iteration   4: 1,681 ms/op
# Warmup Iteration   5: 1,630 ms/op
# Warmup Iteration   6: 1,601 ms/op
# Warmup Iteration   7: 1,605 ms/op
# Warmup Iteration   8: 1,602 ms/op
# Warmup Iteration   9: 1,619 ms/op
# Warmup Iteration  10: 1,596 ms/op
Iteration   1: 1,604 ms/op
Iteration   2: 1,610 ms/op
Iteration   3: 1,613 ms/op
Iteration   4: 1,621 ms/op
Iteration   5: 1,611 ms/op
Iteration   6: 1,621 ms/op
Iteration   7: 1,612 ms/op
Iteration   8: 1,614 ms/op
Iteration   9: 1,619 ms/op
Iteration  10: 1,625 ms/op


Result "benchmarkFind":
  1,615 ±(99.9%) 0,010 ms/op [Average]
  (min, avg, max) = (1,604, 1,615, 1,625), stdev = 0,006
  CI (99.9%): [1,605, 1,625] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 2, patternSize = 128)

# Run progress: 82,63% complete, ETA 02:42:29
# Fork: 1 of 1
# Warmup Iteration   1: 1,164 ms/op
# Warmup Iteration   2: 1,121 ms/op
# Warmup Iteration   3: 1,055 ms/op
# Warmup Iteration   4: 1,012 ms/op
# Warmup Iteration   5: 1,016 ms/op
# Warmup Iteration   6: 1,026 ms/op
# Warmup Iteration   7: 1,016 ms/op
# Warmup Iteration   8: 1,007 ms/op
# Warmup Iteration   9: 1,014 ms/op
# Warmup Iteration  10: 1,016 ms/op
Iteration   1: 1,020 ms/op
Iteration   2: 1,018 ms/op
Iteration   3: 1,028 ms/op
Iteration   4: 1,025 ms/op
Iteration   5: 1,032 ms/op
Iteration   6: 1,037 ms/op
Iteration   7: 1,029 ms/op
Iteration   8: 1,032 ms/op
Iteration   9: 1,037 ms/op
Iteration  10: 1,033 ms/op


Result "benchmarkFind":
  1,029 ±(99.9%) 0,010 ms/op [Average]
  (min, avg, max) = (1,018, 1,029, 1,037), stdev = 0,007
  CI (99.9%): [1,019, 1,039] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 2, patternSize = 256)

# Run progress: 82,67% complete, ETA 02:42:02
# Fork: 1 of 1
# Warmup Iteration   1: 0,866 ms/op
# Warmup Iteration   2: 0,791 ms/op
# Warmup Iteration   3: 0,787 ms/op
# Warmup Iteration   4: 0,766 ms/op
# Warmup Iteration   5: 0,760 ms/op
# Warmup Iteration   6: 0,763 ms/op
# Warmup Iteration   7: 0,754 ms/op
# Warmup Iteration   8: 0,755 ms/op
# Warmup Iteration   9: 0,761 ms/op
# Warmup Iteration  10: 0,756 ms/op
Iteration   1: 0,765 ms/op
Iteration   2: 0,761 ms/op
Iteration   3: 0,762 ms/op
Iteration   4: 0,770 ms/op
Iteration   5: 0,772 ms/op
Iteration   6: 0,774 ms/op
Iteration   7: 0,772 ms/op
Iteration   8: 0,772 ms/op
Iteration   9: 0,770 ms/op
Iteration  10: 0,772 ms/op


Result "benchmarkFind":
  0,769 ±(99.9%) 0,007 ms/op [Average]
  (min, avg, max) = (0,761, 0,769, 0,774), stdev = 0,005
  CI (99.9%): [0,762, 0,776] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 8, patternSize = 2)

# Run progress: 82,72% complete, ETA 02:41:35
# Fork: 1 of 1
# Warmup Iteration   1: 2,862 ms/op
# Warmup Iteration   2: 2,593 ms/op
# Warmup Iteration   3: 2,968 ms/op
# Warmup Iteration   4: 2,602 ms/op
# Warmup Iteration   5: 2,622 ms/op
# Warmup Iteration   6: 2,611 ms/op
# Warmup Iteration   7: 2,607 ms/op
# Warmup Iteration   8: 2,606 ms/op
# Warmup Iteration   9: 2,602 ms/op
# Warmup Iteration  10: 2,614 ms/op
Iteration   1: 2,603 ms/op
Iteration   2: 2,594 ms/op
Iteration   3: 2,609 ms/op
Iteration   4: 2,590 ms/op
Iteration   5: 2,618 ms/op
Iteration   6: 2,608 ms/op
Iteration   7: 2,603 ms/op
Iteration   8: 2,603 ms/op
Iteration   9: 2,611 ms/op
Iteration  10: 2,598 ms/op


Result "benchmarkFind":
  2,604 ±(99.9%) 0,013 ms/op [Average]
  (min, avg, max) = (2,590, 2,604, 2,618), stdev = 0,008
  CI (99.9%): [2,591, 2,616] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 8, patternSize = 4)

# Run progress: 82,77% complete, ETA 02:41:08
# Fork: 1 of 1
# Warmup Iteration   1: 73,685 ms/op
# Warmup Iteration   2: 67,365 ms/op
# Warmup Iteration   3: 66,416 ms/op
# Warmup Iteration   4: 66,470 ms/op
# Warmup Iteration   5: 66,563 ms/op
# Warmup Iteration   6: 66,498 ms/op
# Warmup Iteration   7: 66,620 ms/op
# Warmup Iteration   8: 67,054 ms/op
# Warmup Iteration   9: 66,530 ms/op
# Warmup Iteration  10: 66,474 ms/op
Iteration   1: 66,618 ms/op
Iteration   2: 66,314 ms/op
Iteration   3: 67,190 ms/op
Iteration   4: 66,454 ms/op
Iteration   5: 66,887 ms/op
Iteration   6: 67,115 ms/op
Iteration   7: 67,570 ms/op
Iteration   8: 67,492 ms/op
Iteration   9: 67,151 ms/op
Iteration  10: 67,249 ms/op


Result "benchmarkFind":
  67,004 ±(99.9%) 0,643 ms/op [Average]
  (min, avg, max) = (66,314, 67,004, 67,570), stdev = 0,425
  CI (99.9%): [66,361, 67,647] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 8, patternSize = 8)

# Run progress: 82,81% complete, ETA 02:40:42
# Fork: 1 of 1
# Warmup Iteration   1: 15,675 ms/op
# Warmup Iteration   2: 14,623 ms/op
# Warmup Iteration   3: 14,128 ms/op
# Warmup Iteration   4: 14,223 ms/op
# Warmup Iteration   5: 14,230 ms/op
# Warmup Iteration   6: 14,193 ms/op
# Warmup Iteration   7: 14,268 ms/op
# Warmup Iteration   8: 14,397 ms/op
# Warmup Iteration   9: 14,351 ms/op
# Warmup Iteration  10: 14,368 ms/op
Iteration   1: 14,336 ms/op
Iteration   2: 14,281 ms/op
Iteration   3: 14,312 ms/op
Iteration   4: 14,322 ms/op
Iteration   5: 14,371 ms/op
Iteration   6: 14,248 ms/op
Iteration   7: 14,282 ms/op
Iteration   8: 14,280 ms/op
Iteration   9: 14,371 ms/op
Iteration  10: 14,391 ms/op


Result "benchmarkFind":
  14,320 ±(99.9%) 0,072 ms/op [Average]
  (min, avg, max) = (14,248, 14,320, 14,391), stdev = 0,048
  CI (99.9%): [14,248, 14,391] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 8, patternSize = 16)

# Run progress: 82,86% complete, ETA 02:40:15
# Fork: 1 of 1
# Warmup Iteration   1: 8,369 ms/op
# Warmup Iteration   2: 7,206 ms/op
# Warmup Iteration   3: 7,122 ms/op
# Warmup Iteration   4: 6,923 ms/op
# Warmup Iteration   5: 6,902 ms/op
# Warmup Iteration   6: 6,961 ms/op
# Warmup Iteration   7: 6,919 ms/op
# Warmup Iteration   8: 6,930 ms/op
# Warmup Iteration   9: 6,906 ms/op
# Warmup Iteration  10: 6,949 ms/op
Iteration   1: 6,960 ms/op
Iteration   2: 6,922 ms/op
Iteration   3: 7,010 ms/op
Iteration   4: 7,017 ms/op
Iteration   5: 7,111 ms/op
Iteration   6: 7,106 ms/op
Iteration   7: 7,075 ms/op
Iteration   8: 7,093 ms/op
Iteration   9: 7,088 ms/op
Iteration  10: 7,034 ms/op


Result "benchmarkFind":
  7,041 ±(99.9%) 0,097 ms/op [Average]
  (min, avg, max) = (6,922, 7,041, 7,111), stdev = 0,064
  CI (99.9%): [6,944, 7,139] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 8, patternSize = 32)

# Run progress: 82,90% complete, ETA 02:39:48
# Fork: 1 of 1
# Warmup Iteration   1: 4,673 ms/op
# Warmup Iteration   2: 4,336 ms/op
# Warmup Iteration   3: 4,237 ms/op
# Warmup Iteration   4: 4,239 ms/op
# Warmup Iteration   5: 4,223 ms/op
# Warmup Iteration   6: 4,235 ms/op
# Warmup Iteration   7: 4,239 ms/op
# Warmup Iteration   8: 4,260 ms/op
# Warmup Iteration   9: 4,296 ms/op
# Warmup Iteration  10: 4,303 ms/op
Iteration   1: 4,297 ms/op
Iteration   2: 4,291 ms/op
Iteration   3: 4,291 ms/op
Iteration   4: 4,272 ms/op
Iteration   5: 4,328 ms/op
Iteration   6: 4,283 ms/op
Iteration   7: 4,281 ms/op
Iteration   8: 4,303 ms/op
Iteration   9: 4,272 ms/op
Iteration  10: 4,273 ms/op


Result "benchmarkFind":
  4,289 ±(99.9%) 0,026 ms/op [Average]
  (min, avg, max) = (4,272, 4,289, 4,328), stdev = 0,017
  CI (99.9%): [4,263, 4,315] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 8, patternSize = 64)

# Run progress: 82,95% complete, ETA 02:39:21
# Fork: 1 of 1
# Warmup Iteration   1: 3,482 ms/op
# Warmup Iteration   2: 3,271 ms/op
# Warmup Iteration   3: 3,146 ms/op
# Warmup Iteration   4: 3,153 ms/op
# Warmup Iteration   5: 3,140 ms/op
# Warmup Iteration   6: 3,142 ms/op
# Warmup Iteration   7: 3,139 ms/op
# Warmup Iteration   8: 3,153 ms/op
# Warmup Iteration   9: 3,147 ms/op
# Warmup Iteration  10: 3,182 ms/op
Iteration   1: 3,186 ms/op
Iteration   2: 3,202 ms/op
Iteration   3: 3,205 ms/op
Iteration   4: 3,207 ms/op
Iteration   5: 3,201 ms/op
Iteration   6: 3,219 ms/op
Iteration   7: 3,219 ms/op
Iteration   8: 3,214 ms/op
Iteration   9: 3,556 ms/op
Iteration  10: 3,166 ms/op


Result "benchmarkFind":
  3,238 ±(99.9%) 0,171 ms/op [Average]
  (min, avg, max) = (3,166, 3,238, 3,556), stdev = 0,113
  CI (99.9%): [3,067, 3,408] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 8, patternSize = 128)

# Run progress: 83,00% complete, ETA 02:38:54
# Fork: 1 of 1
# Warmup Iteration   1: 3,203 ms/op
# Warmup Iteration   2: 2,958 ms/op
# Warmup Iteration   3: 2,887 ms/op
# Warmup Iteration   4: 2,903 ms/op
# Warmup Iteration   5: 2,892 ms/op
# Warmup Iteration   6: 2,914 ms/op
# Warmup Iteration   7: 2,909 ms/op
# Warmup Iteration   8: 2,910 ms/op
# Warmup Iteration   9: 2,944 ms/op
# Warmup Iteration  10: 2,960 ms/op
Iteration   1: 2,942 ms/op
Iteration   2: 2,957 ms/op
Iteration   3: 2,929 ms/op
Iteration   4: 2,972 ms/op
Iteration   5: 2,927 ms/op
Iteration   6: 2,922 ms/op
Iteration   7: 2,934 ms/op
Iteration   8: 2,943 ms/op
Iteration   9: 2,932 ms/op
Iteration  10: 2,941 ms/op


Result "benchmarkFind":
  2,940 ±(99.9%) 0,023 ms/op [Average]
  (min, avg, max) = (2,922, 2,940, 2,972), stdev = 0,015
  CI (99.9%): [2,917, 2,963] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 8, patternSize = 256)

# Run progress: 83,04% complete, ETA 02:38:27
# Fork: 1 of 1
# Warmup Iteration   1: 3,084 ms/op
# Warmup Iteration   2: 2,804 ms/op
# Warmup Iteration   3: 2,736 ms/op
# Warmup Iteration   4: 2,724 ms/op
# Warmup Iteration   5: 2,718 ms/op
# Warmup Iteration   6: 2,753 ms/op
# Warmup Iteration   7: 2,759 ms/op
# Warmup Iteration   8: 2,762 ms/op
# Warmup Iteration   9: 2,798 ms/op
# Warmup Iteration  10: 2,810 ms/op
Iteration   1: 2,747 ms/op
Iteration   2: 2,778 ms/op
Iteration   3: 2,781 ms/op
Iteration   4: 2,784 ms/op
Iteration   5: 2,784 ms/op
Iteration   6: 2,774 ms/op
Iteration   7: 2,779 ms/op
Iteration   8: 2,795 ms/op
Iteration   9: 2,796 ms/op
Iteration  10: 2,782 ms/op


Result "benchmarkFind":
  2,780 ±(99.9%) 0,020 ms/op [Average]
  (min, avg, max) = (2,747, 2,780, 2,796), stdev = 0,013
  CI (99.9%): [2,760, 2,800] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 32, patternSize = 2)

# Run progress: 83,09% complete, ETA 02:38:01
# Fork: 1 of 1
# Warmup Iteration   1: 16,221 ms/op
# Warmup Iteration   2: 15,395 ms/op
# Warmup Iteration   3: 15,140 ms/op
# Warmup Iteration   4: 15,429 ms/op
# Warmup Iteration   5: 15,291 ms/op
# Warmup Iteration   6: 15,289 ms/op
# Warmup Iteration   7: 15,227 ms/op
# Warmup Iteration   8: 15,278 ms/op
# Warmup Iteration   9: 15,245 ms/op
# Warmup Iteration  10: 15,277 ms/op
Iteration   1: 15,213 ms/op
Iteration   2: 15,237 ms/op
Iteration   3: 15,310 ms/op
Iteration   4: 15,269 ms/op
Iteration   5: 15,360 ms/op
Iteration   6: 15,275 ms/op
Iteration   7: 15,384 ms/op
Iteration   8: 17,073 ms/op
Iteration   9: 15,629 ms/op
Iteration  10: 15,244 ms/op


Result "benchmarkFind":
  15,499 ±(99.9%) 0,855 ms/op [Average]
  (min, avg, max) = (15,213, 15,499, 17,073), stdev = 0,566
  CI (99.9%): [14,644, 16,355] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 32, patternSize = 4)

# Run progress: 83,13% complete, ETA 02:37:34
# Fork: 1 of 1
# Warmup Iteration   1: 742,301 ms/op
# Warmup Iteration   2: 709,115 ms/op
# Warmup Iteration   3: 707,757 ms/op
# Warmup Iteration   4: 704,140 ms/op
# Warmup Iteration   5: 711,340 ms/op
# Warmup Iteration   6: 708,411 ms/op
# Warmup Iteration   7: 700,131 ms/op
# Warmup Iteration   8: 705,779 ms/op
# Warmup Iteration   9: 703,735 ms/op
# Warmup Iteration  10: 704,198 ms/op
Iteration   1: 710,326 ms/op
Iteration   2: 705,453 ms/op
Iteration   3: 698,551 ms/op
Iteration   4: 702,350 ms/op
Iteration   5: 697,415 ms/op
Iteration   6: 706,622 ms/op
Iteration   7: 701,723 ms/op
Iteration   8: 705,967 ms/op
Iteration   9: 702,716 ms/op
Iteration  10: 698,884 ms/op


Result "benchmarkFind":
  703,001 ±(99.9%) 6,206 ms/op [Average]
  (min, avg, max) = (697,415, 703,001, 710,326), stdev = 4,105
  CI (99.9%): [696,794, 709,207] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 32, patternSize = 8)

# Run progress: 83,18% complete, ETA 02:37:09
# Fork: 1 of 1
# Warmup Iteration   1: 26,559 ms/op
# Warmup Iteration   2: 24,452 ms/op
# Warmup Iteration   3: 23,770 ms/op
# Warmup Iteration   4: 23,707 ms/op
# Warmup Iteration   5: 23,684 ms/op
# Warmup Iteration   6: 23,854 ms/op
# Warmup Iteration   7: 23,698 ms/op
# Warmup Iteration   8: 23,507 ms/op
# Warmup Iteration   9: 23,748 ms/op
# Warmup Iteration  10: 23,868 ms/op
Iteration   1: 23,985 ms/op
Iteration   2: 23,869 ms/op
Iteration   3: 24,013 ms/op
Iteration   4: 24,062 ms/op
Iteration   5: 23,755 ms/op
Iteration   6: 23,719 ms/op
Iteration   7: 26,944 ms/op
Iteration   8: 23,915 ms/op
Iteration   9: 23,907 ms/op
Iteration  10: 24,115 ms/op


Result "benchmarkFind":
  24,228 ±(99.9%) 1,455 ms/op [Average]
  (min, avg, max) = (23,719, 24,228, 26,944), stdev = 0,962
  CI (99.9%): [22,774, 25,683] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 32, patternSize = 16)

# Run progress: 83,23% complete, ETA 02:36:42
# Fork: 1 of 1
# Warmup Iteration   1: 16,869 ms/op
# Warmup Iteration   2: 15,727 ms/op
# Warmup Iteration   3: 15,367 ms/op
# Warmup Iteration   4: 15,376 ms/op
# Warmup Iteration   5: 15,348 ms/op
# Warmup Iteration   6: 15,379 ms/op
# Warmup Iteration   7: 16,714 ms/op
# Warmup Iteration   8: 15,215 ms/op
# Warmup Iteration   9: 15,357 ms/op
# Warmup Iteration  10: 15,281 ms/op
Iteration   1: 15,310 ms/op
Iteration   2: 15,624 ms/op
Iteration   3: 15,623 ms/op
Iteration   4: 15,719 ms/op
Iteration   5: 15,552 ms/op
Iteration   6: 15,698 ms/op
Iteration   7: 15,385 ms/op
Iteration   8: 15,565 ms/op
Iteration   9: 15,443 ms/op
Iteration  10: 15,594 ms/op


Result "benchmarkFind":
  15,551 ±(99.9%) 0,202 ms/op [Average]
  (min, avg, max) = (15,310, 15,551, 15,719), stdev = 0,133
  CI (99.9%): [15,350, 15,753] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 32, patternSize = 32)

# Run progress: 83,27% complete, ETA 02:36:15
# Fork: 1 of 1
# Warmup Iteration   1: 13,929 ms/op
# Warmup Iteration   2: 13,173 ms/op
# Warmup Iteration   3: 12,720 ms/op
# Warmup Iteration   4: 12,840 ms/op
# Warmup Iteration   5: 12,816 ms/op
# Warmup Iteration   6: 12,830 ms/op
# Warmup Iteration   7: 12,854 ms/op
# Warmup Iteration   8: 12,951 ms/op
# Warmup Iteration   9: 12,858 ms/op
# Warmup Iteration  10: 13,013 ms/op
Iteration   1: 13,008 ms/op
Iteration   2: 13,020 ms/op
Iteration   3: 13,016 ms/op
Iteration   4: 13,095 ms/op
Iteration   5: 12,854 ms/op
Iteration   6: 12,892 ms/op
Iteration   7: 13,004 ms/op
Iteration   8: 13,079 ms/op
Iteration   9: 13,038 ms/op
Iteration  10: 13,050 ms/op


Result "benchmarkFind":
  13,006 ±(99.9%) 0,116 ms/op [Average]
  (min, avg, max) = (12,854, 13,006, 13,095), stdev = 0,076
  CI (99.9%): [12,890, 13,121] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 32, patternSize = 64)

# Run progress: 83,32% complete, ETA 02:35:48
# Fork: 1 of 1
# Warmup Iteration   1: 12,713 ms/op
# Warmup Iteration   2: 11,733 ms/op
# Warmup Iteration   3: 11,848 ms/op
# Warmup Iteration   4: 11,580 ms/op
# Warmup Iteration   5: 11,492 ms/op
# Warmup Iteration   6: 11,415 ms/op
# Warmup Iteration   7: 11,481 ms/op
# Warmup Iteration   8: 11,431 ms/op
# Warmup Iteration   9: 11,474 ms/op
# Warmup Iteration  10: 11,400 ms/op
Iteration   1: 11,443 ms/op
Iteration   2: 11,592 ms/op
Iteration   3: 11,504 ms/op
Iteration   4: 11,491 ms/op
Iteration   5: 11,535 ms/op
Iteration   6: 11,586 ms/op
Iteration   7: 11,670 ms/op
Iteration   8: 11,758 ms/op
Iteration   9: 11,590 ms/op
Iteration  10: 11,619 ms/op


Result "benchmarkFind":
  11,579 ±(99.9%) 0,139 ms/op [Average]
  (min, avg, max) = (11,443, 11,579, 11,758), stdev = 0,092
  CI (99.9%): [11,440, 11,718] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 32, patternSize = 128)

# Run progress: 83,36% complete, ETA 02:35:22
# Fork: 1 of 1
# Warmup Iteration   1: 14,341 ms/op
# Warmup Iteration   2: 13,156 ms/op
# Warmup Iteration   3: 12,675 ms/op
# Warmup Iteration   4: 12,653 ms/op
# Warmup Iteration   5: 13,638 ms/op
# Warmup Iteration   6: 12,554 ms/op
# Warmup Iteration   7: 12,563 ms/op
# Warmup Iteration   8: 12,567 ms/op
# Warmup Iteration   9: 12,603 ms/op
# Warmup Iteration  10: 12,626 ms/op
Iteration   1: 12,742 ms/op
Iteration   2: 12,861 ms/op
Iteration   3: 12,628 ms/op
Iteration   4: 12,569 ms/op
Iteration   5: 12,678 ms/op
Iteration   6: 12,714 ms/op
Iteration   7: 12,780 ms/op
Iteration   8: 12,758 ms/op
Iteration   9: 12,768 ms/op
Iteration  10: 12,851 ms/op


Result "benchmarkFind":
  12,735 ±(99.9%) 0,139 ms/op [Average]
  (min, avg, max) = (12,569, 12,735, 12,861), stdev = 0,092
  CI (99.9%): [12,596, 12,874] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 32, patternSize = 256)

# Run progress: 83,41% complete, ETA 02:34:55
# Fork: 1 of 1
# Warmup Iteration   1: 15,007 ms/op
# Warmup Iteration   2: 13,503 ms/op
# Warmup Iteration   3: 13,412 ms/op
# Warmup Iteration   4: 13,483 ms/op
# Warmup Iteration   5: 13,317 ms/op
# Warmup Iteration   6: 13,297 ms/op
# Warmup Iteration   7: 13,432 ms/op
# Warmup Iteration   8: 13,417 ms/op
# Warmup Iteration   9: 13,428 ms/op
# Warmup Iteration  10: 13,453 ms/op
Iteration   1: 13,434 ms/op
Iteration   2: 13,495 ms/op
Iteration   3: 13,678 ms/op
Iteration   4: 13,442 ms/op
Iteration   5: 13,542 ms/op
Iteration   6: 13,447 ms/op
Iteration   7: 13,405 ms/op
Iteration   8: 13,442 ms/op
Iteration   9: 13,400 ms/op
Iteration  10: 13,395 ms/op


Result "benchmarkFind":
  13,468 ±(99.9%) 0,131 ms/op [Average]
  (min, avg, max) = (13,395, 13,468, 13,678), stdev = 0,086
  CI (99.9%): [13,337, 13,598] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 128, patternSize = 2)

# Run progress: 83,46% complete, ETA 02:34:28
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

com.almondtools.stringbench.SampleNotQualifiedException
	at com.almondtools.stringbench.MultiPatternMatcherBenchmark.setup(MultiPatternMatcherBenchmark.java:36)
	at com.almondtools.stringbench.generated.SCWuManberBenchmark_benchmarkFind_jmhTest._jmh_tryInit_f_scwumanberbenchmark0_0(SCWuManberBenchmark_benchmarkFind_jmhTest.java:425)
	at com.almondtools.stringbench.generated.SCWuManberBenchmark_benchmarkFind_jmhTest.benchmarkFind_AverageTime(SCWuManberBenchmark_benchmarkFind_jmhTest.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:430)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:412)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)




# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 128, patternSize = 4)

# Run progress: 83,50% complete, ETA 02:33:58
# Fork: 1 of 1
# Warmup Iteration   1: 7597,634 ms/op
# Warmup Iteration   2: 7389,353 ms/op
# Warmup Iteration   3: 7285,209 ms/op
# Warmup Iteration   4: 7143,600 ms/op
# Warmup Iteration   5: 7155,035 ms/op
# Warmup Iteration   6: 7236,881 ms/op
# Warmup Iteration   7: 7197,191 ms/op
# Warmup Iteration   8: 7190,578 ms/op
# Warmup Iteration   9: 7180,556 ms/op
# Warmup Iteration  10: 7274,997 ms/op
Iteration   1: 7151,333 ms/op
Iteration   2: 7216,323 ms/op
Iteration   3: 7256,868 ms/op
Iteration   4: 7081,395 ms/op
Iteration   5: 7043,102 ms/op
Iteration   6: 7110,190 ms/op
Iteration   7: 7073,616 ms/op
Iteration   8: 7107,059 ms/op
Iteration   9: 7127,085 ms/op
Iteration  10: 7323,079 ms/op


Result "benchmarkFind":
  7149,005 ±(99.9%) 134,933 ms/op [Average]
  (min, avg, max) = (7043,102, 7149,005, 7323,079), stdev = 89,250
  CI (99.9%): [7014,072, 7283,938] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 128, patternSize = 8)

# Run progress: 83,55% complete, ETA 02:33:55
# Fork: 1 of 1
# Warmup Iteration   1: 61,313 ms/op
# Warmup Iteration   2: 52,639 ms/op
# Warmup Iteration   3: 52,787 ms/op
# Warmup Iteration   4: 52,347 ms/op
# Warmup Iteration   5: 53,147 ms/op
# Warmup Iteration   6: 52,716 ms/op
# Warmup Iteration   7: 52,702 ms/op
# Warmup Iteration   8: 52,986 ms/op
# Warmup Iteration   9: 52,798 ms/op
# Warmup Iteration  10: 52,779 ms/op
Iteration   1: 53,122 ms/op
Iteration   2: 53,000 ms/op
Iteration   3: 53,099 ms/op
Iteration   4: 53,066 ms/op
Iteration   5: 53,110 ms/op
Iteration   6: 52,629 ms/op
Iteration   7: 53,425 ms/op
Iteration   8: 53,156 ms/op
Iteration   9: 53,368 ms/op
Iteration  10: 53,344 ms/op


Result "benchmarkFind":
  53,132 ±(99.9%) 0,343 ms/op [Average]
  (min, avg, max) = (52,629, 53,132, 53,425), stdev = 0,227
  CI (99.9%): [52,789, 53,475] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 128, patternSize = 16)

# Run progress: 83,59% complete, ETA 02:33:29
# Fork: 1 of 1
# Warmup Iteration   1: 59,012 ms/op
# Warmup Iteration   2: 52,036 ms/op
# Warmup Iteration   3: 52,991 ms/op
# Warmup Iteration   4: 51,174 ms/op
# Warmup Iteration   5: 50,777 ms/op
# Warmup Iteration   6: 50,924 ms/op
# Warmup Iteration   7: 51,111 ms/op
# Warmup Iteration   8: 51,028 ms/op
# Warmup Iteration   9: 50,660 ms/op
# Warmup Iteration  10: 50,774 ms/op
Iteration   1: 50,621 ms/op
Iteration   2: 50,761 ms/op
Iteration   3: 51,002 ms/op
Iteration   4: 50,744 ms/op
Iteration   5: 51,058 ms/op
Iteration   6: 50,962 ms/op
Iteration   7: 51,129 ms/op
Iteration   8: 51,144 ms/op
Iteration   9: 51,373 ms/op
Iteration  10: 51,785 ms/op


Result "benchmarkFind":
  51,058 ±(99.9%) 0,511 ms/op [Average]
  (min, avg, max) = (50,621, 51,058, 51,785), stdev = 0,338
  CI (99.9%): [50,546, 51,569] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 128, patternSize = 32)

# Run progress: 83,64% complete, ETA 02:33:02
# Fork: 1 of 1
# Warmup Iteration   1: 54,722 ms/op
# Warmup Iteration   2: 48,213 ms/op
# Warmup Iteration   3: 47,790 ms/op
# Warmup Iteration   4: 47,686 ms/op
# Warmup Iteration   5: 47,924 ms/op
# Warmup Iteration   6: 47,202 ms/op
# Warmup Iteration   7: 47,561 ms/op
# Warmup Iteration   8: 47,618 ms/op
# Warmup Iteration   9: 47,764 ms/op
# Warmup Iteration  10: 48,398 ms/op
Iteration   1: 47,727 ms/op
Iteration   2: 48,083 ms/op
Iteration   3: 48,186 ms/op
Iteration   4: 47,939 ms/op
Iteration   5: 54,073 ms/op
Iteration   6: 47,170 ms/op
Iteration   7: 47,510 ms/op
Iteration   8: 47,731 ms/op
Iteration   9: 47,776 ms/op
Iteration  10: 47,362 ms/op


Result "benchmarkFind":
  48,356 ±(99.9%) 3,073 ms/op [Average]
  (min, avg, max) = (47,170, 48,356, 54,073), stdev = 2,033
  CI (99.9%): [45,283, 51,429] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 128, patternSize = 64)

# Run progress: 83,69% complete, ETA 02:32:35
# Fork: 1 of 1
# Warmup Iteration   1: 52,160 ms/op
# Warmup Iteration   2: 47,127 ms/op
# Warmup Iteration   3: 45,948 ms/op
# Warmup Iteration   4: 45,223 ms/op
# Warmup Iteration   5: 45,252 ms/op
# Warmup Iteration   6: 45,154 ms/op
# Warmup Iteration   7: 44,842 ms/op
# Warmup Iteration   8: 45,244 ms/op
# Warmup Iteration   9: 45,105 ms/op
# Warmup Iteration  10: 45,240 ms/op
Iteration   1: 45,217 ms/op
Iteration   2: 45,218 ms/op
Iteration   3: 45,484 ms/op
Iteration   4: 45,747 ms/op
Iteration   5: 45,915 ms/op
Iteration   6: 45,659 ms/op
Iteration   7: 45,465 ms/op
Iteration   8: 45,694 ms/op
Iteration   9: 45,789 ms/op
Iteration  10: 45,889 ms/op


Result "benchmarkFind":
  45,608 ±(99.9%) 0,383 ms/op [Average]
  (min, avg, max) = (45,217, 45,608, 45,915), stdev = 0,253
  CI (99.9%): [45,225, 45,991] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 128, patternSize = 128)

# Run progress: 83,73% complete, ETA 02:32:08
# Fork: 1 of 1
# Warmup Iteration   1: 51,492 ms/op
# Warmup Iteration   2: 44,716 ms/op
# Warmup Iteration   3: 44,757 ms/op
# Warmup Iteration   4: 44,842 ms/op
# Warmup Iteration   5: 45,466 ms/op
# Warmup Iteration   6: 45,328 ms/op
# Warmup Iteration   7: 45,457 ms/op
# Warmup Iteration   8: 45,304 ms/op
# Warmup Iteration   9: 45,364 ms/op
# Warmup Iteration  10: 45,103 ms/op
Iteration   1: 44,841 ms/op
Iteration   2: 45,199 ms/op
Iteration   3: 45,604 ms/op
Iteration   4: 45,280 ms/op
Iteration   5: 45,470 ms/op
Iteration   6: 45,324 ms/op
Iteration   7: 45,421 ms/op
Iteration   8: 45,544 ms/op
Iteration   9: 45,393 ms/op
Iteration  10: 45,559 ms/op


Result "benchmarkFind":
  45,363 ±(99.9%) 0,339 ms/op [Average]
  (min, avg, max) = (44,841, 45,363, 45,604), stdev = 0,224
  CI (99.9%): [45,024, 45,703] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternNumber = 128, patternSize = 256)

# Run progress: 83,78% complete, ETA 02:31:42
# Fork: 1 of 1
# Warmup Iteration   1: 56,860 ms/op
# Warmup Iteration   2: 51,450 ms/op
# Warmup Iteration   3: 50,676 ms/op
# Warmup Iteration   4: 49,924 ms/op
# Warmup Iteration   5: 50,012 ms/op
# Warmup Iteration   6: 49,403 ms/op
# Warmup Iteration   7: 49,507 ms/op
# Warmup Iteration   8: 49,613 ms/op
# Warmup Iteration   9: 49,464 ms/op
# Warmup Iteration  10: 55,790 ms/op
Iteration   1: 49,850 ms/op
Iteration   2: 49,922 ms/op
Iteration   3: 50,017 ms/op
Iteration   4: 50,069 ms/op
Iteration   5: 50,448 ms/op
Iteration   6: 50,068 ms/op
Iteration   7: 50,462 ms/op
Iteration   8: 50,030 ms/op
Iteration   9: 50,271 ms/op
Iteration  10: 50,658 ms/op


Result "benchmarkFind":
  50,179 ±(99.9%) 0,402 ms/op [Average]
  (min, avg, max) = (49,850, 50,179, 50,658), stdev = 0,266
  CI (99.9%): [49,777, 50,582] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 2, patternSize = 2)

# Run progress: 83,82% complete, ETA 02:31:15
# Fork: 1 of 1
# Warmup Iteration   1: 2,693 ms/op
# Warmup Iteration   2: 2,402 ms/op
# Warmup Iteration   3: 2,357 ms/op
# Warmup Iteration   4: 2,347 ms/op
# Warmup Iteration   5: 2,354 ms/op
# Warmup Iteration   6: 2,356 ms/op
# Warmup Iteration   7: 2,360 ms/op
# Warmup Iteration   8: 2,372 ms/op
# Warmup Iteration   9: 2,372 ms/op
# Warmup Iteration  10: 2,404 ms/op
Iteration   1: 2,355 ms/op
Iteration   2: 2,360 ms/op
Iteration   3: 2,378 ms/op
Iteration   4: 2,378 ms/op
Iteration   5: 2,365 ms/op
Iteration   6: 2,385 ms/op
Iteration   7: 2,366 ms/op
Iteration   8: 2,362 ms/op
Iteration   9: 2,353 ms/op
Iteration  10: 2,366 ms/op


Result "benchmarkFind":
  2,367 ±(99.9%) 0,016 ms/op [Average]
  (min, avg, max) = (2,353, 2,367, 2,385), stdev = 0,010
  CI (99.9%): [2,351, 2,382] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 2, patternSize = 4)

# Run progress: 83,87% complete, ETA 02:30:49
# Fork: 1 of 1
# Warmup Iteration   1: 19,827 ms/op
# Warmup Iteration   2: 18,078 ms/op
# Warmup Iteration   3: 17,752 ms/op
# Warmup Iteration   4: 17,737 ms/op
# Warmup Iteration   5: 17,837 ms/op
# Warmup Iteration   6: 17,863 ms/op
# Warmup Iteration   7: 17,863 ms/op
# Warmup Iteration   8: 18,164 ms/op
# Warmup Iteration   9: 18,151 ms/op
# Warmup Iteration  10: 17,999 ms/op
Iteration   1: 18,254 ms/op
Iteration   2: 18,138 ms/op
Iteration   3: 18,219 ms/op
Iteration   4: 18,142 ms/op
Iteration   5: 18,213 ms/op
Iteration   6: 18,073 ms/op
Iteration   7: 18,053 ms/op
Iteration   8: 18,247 ms/op
Iteration   9: 18,124 ms/op
Iteration  10: 18,140 ms/op


Result "benchmarkFind":
  18,160 ±(99.9%) 0,106 ms/op [Average]
  (min, avg, max) = (18,053, 18,160, 18,254), stdev = 0,070
  CI (99.9%): [18,054, 18,266] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 2, patternSize = 8)

# Run progress: 83,92% complete, ETA 02:30:22
# Fork: 1 of 1
# Warmup Iteration   1: 9,838 ms/op
# Warmup Iteration   2: 8,831 ms/op
# Warmup Iteration   3: 8,778 ms/op
# Warmup Iteration   4: 8,783 ms/op
# Warmup Iteration   5: 8,788 ms/op
# Warmup Iteration   6: 8,847 ms/op
# Warmup Iteration   7: 8,941 ms/op
# Warmup Iteration   8: 9,663 ms/op
# Warmup Iteration   9: 9,030 ms/op
# Warmup Iteration  10: 8,783 ms/op
Iteration   1: 8,841 ms/op
Iteration   2: 8,857 ms/op
Iteration   3: 8,932 ms/op
Iteration   4: 9,055 ms/op
Iteration   5: 8,943 ms/op
Iteration   6: 9,082 ms/op
Iteration   7: 8,931 ms/op
Iteration   8: 8,906 ms/op
Iteration   9: 8,930 ms/op
Iteration  10: 8,988 ms/op


Result "benchmarkFind":
  8,947 ±(99.9%) 0,116 ms/op [Average]
  (min, avg, max) = (8,841, 8,947, 9,082), stdev = 0,077
  CI (99.9%): [8,830, 9,063] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 2, patternSize = 16)

# Run progress: 83,96% complete, ETA 02:29:55
# Fork: 1 of 1
# Warmup Iteration   1: 5,050 ms/op
# Warmup Iteration   2: 4,693 ms/op
# Warmup Iteration   3: 4,432 ms/op
# Warmup Iteration   4: 4,446 ms/op
# Warmup Iteration   5: 4,446 ms/op
# Warmup Iteration   6: 4,468 ms/op
# Warmup Iteration   7: 4,458 ms/op
# Warmup Iteration   8: 4,460 ms/op
# Warmup Iteration   9: 4,461 ms/op
# Warmup Iteration  10: 4,460 ms/op
Iteration   1: 4,507 ms/op
Iteration   2: 4,541 ms/op
Iteration   3: 4,583 ms/op
Iteration   4: 4,578 ms/op
Iteration   5: 4,528 ms/op
Iteration   6: 4,545 ms/op
Iteration   7: 4,569 ms/op
Iteration   8: 4,589 ms/op
Iteration   9: 4,584 ms/op
Iteration  10: 4,587 ms/op


Result "benchmarkFind":
  4,561 ±(99.9%) 0,043 ms/op [Average]
  (min, avg, max) = (4,507, 4,561, 4,589), stdev = 0,029
  CI (99.9%): [4,518, 4,604] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 2, patternSize = 32)

# Run progress: 84,01% complete, ETA 02:29:28
# Fork: 1 of 1
# Warmup Iteration   1: 2,626 ms/op
# Warmup Iteration   2: 2,407 ms/op
# Warmup Iteration   3: 2,348 ms/op
# Warmup Iteration   4: 2,356 ms/op
# Warmup Iteration   5: 2,354 ms/op
# Warmup Iteration   6: 2,379 ms/op
# Warmup Iteration   7: 2,388 ms/op
# Warmup Iteration   8: 2,395 ms/op
# Warmup Iteration   9: 2,403 ms/op
# Warmup Iteration  10: 2,406 ms/op
Iteration   1: 2,408 ms/op
Iteration   2: 2,391 ms/op
Iteration   3: 2,419 ms/op
Iteration   4: 2,386 ms/op
Iteration   5: 2,392 ms/op
Iteration   6: 2,411 ms/op
Iteration   7: 2,397 ms/op
Iteration   8: 2,395 ms/op
Iteration   9: 2,388 ms/op
Iteration  10: 2,396 ms/op


Result "benchmarkFind":
  2,398 ±(99.9%) 0,016 ms/op [Average]
  (min, avg, max) = (2,386, 2,398, 2,419), stdev = 0,011
  CI (99.9%): [2,382, 2,415] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 2, patternSize = 64)

# Run progress: 84,05% complete, ETA 02:29:01
# Fork: 1 of 1
# Warmup Iteration   1: 1,514 ms/op
# Warmup Iteration   2: 1,433 ms/op
# Warmup Iteration   3: 1,361 ms/op
# Warmup Iteration   4: 1,357 ms/op
# Warmup Iteration   5: 1,350 ms/op
# Warmup Iteration   6: 1,351 ms/op
# Warmup Iteration   7: 1,482 ms/op
# Warmup Iteration   8: 1,350 ms/op
# Warmup Iteration   9: 1,342 ms/op
# Warmup Iteration  10: 1,349 ms/op
Iteration   1: 1,358 ms/op
Iteration   2: 1,357 ms/op
Iteration   3: 1,373 ms/op
Iteration   4: 1,372 ms/op
Iteration   5: 1,381 ms/op
Iteration   6: 1,371 ms/op
Iteration   7: 1,371 ms/op
Iteration   8: 1,377 ms/op
Iteration   9: 1,369 ms/op
Iteration  10: 1,373 ms/op


Result "benchmarkFind":
  1,370 ±(99.9%) 0,011 ms/op [Average]
  (min, avg, max) = (1,357, 1,370, 1,381), stdev = 0,008
  CI (99.9%): [1,359, 1,382] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 2, patternSize = 128)

# Run progress: 84,10% complete, ETA 02:28:35
# Fork: 1 of 1
# Warmup Iteration   1: 0,893 ms/op
# Warmup Iteration   2: 0,817 ms/op
# Warmup Iteration   3: 0,804 ms/op
# Warmup Iteration   4: 0,798 ms/op
# Warmup Iteration   5: 0,809 ms/op
# Warmup Iteration   6: 0,801 ms/op
# Warmup Iteration   7: 0,802 ms/op
# Warmup Iteration   8: 0,806 ms/op
# Warmup Iteration   9: 0,810 ms/op
# Warmup Iteration  10: 0,817 ms/op
Iteration   1: 0,814 ms/op
Iteration   2: 0,817 ms/op
Iteration   3: 0,811 ms/op
Iteration   4: 0,815 ms/op
Iteration   5: 0,818 ms/op
Iteration   6: 0,813 ms/op
Iteration   7: 0,811 ms/op
Iteration   8: 0,811 ms/op
Iteration   9: 0,815 ms/op
Iteration  10: 0,809 ms/op


Result "benchmarkFind":
  0,813 ±(99.9%) 0,004 ms/op [Average]
  (min, avg, max) = (0,809, 0,813, 0,818), stdev = 0,003
  CI (99.9%): [0,809, 0,818] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 2, patternSize = 256)

# Run progress: 84,15% complete, ETA 02:28:08
# Fork: 1 of 1
# Warmup Iteration   1: 0,590 ms/op
# Warmup Iteration   2: 0,538 ms/op
# Warmup Iteration   3: 0,531 ms/op
# Warmup Iteration   4: 0,514 ms/op
# Warmup Iteration   5: 0,519 ms/op
# Warmup Iteration   6: 0,520 ms/op
# Warmup Iteration   7: 0,521 ms/op
# Warmup Iteration   8: 0,527 ms/op
# Warmup Iteration   9: 0,536 ms/op
# Warmup Iteration  10: 0,533 ms/op
Iteration   1: 0,527 ms/op
Iteration   2: 0,530 ms/op
Iteration   3: 0,529 ms/op
Iteration   4: 0,530 ms/op
Iteration   5: 0,537 ms/op
Iteration   6: 0,530 ms/op
Iteration   7: 0,533 ms/op
Iteration   8: 0,534 ms/op
Iteration   9: 0,529 ms/op
Iteration  10: 0,530 ms/op


Result "benchmarkFind":
  0,531 ±(99.9%) 0,004 ms/op [Average]
  (min, avg, max) = (0,527, 0,531, 0,537), stdev = 0,003
  CI (99.9%): [0,527, 0,535] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 8, patternSize = 2)

# Run progress: 84,19% complete, ETA 02:27:41
# Fork: 1 of 1
# Warmup Iteration   1: 4,835 ms/op
# Warmup Iteration   2: 4,328 ms/op
# Warmup Iteration   3: 4,314 ms/op
# Warmup Iteration   4: 4,279 ms/op
# Warmup Iteration   5: 4,520 ms/op
# Warmup Iteration   6: 4,311 ms/op
# Warmup Iteration   7: 4,379 ms/op
# Warmup Iteration   8: 4,268 ms/op
# Warmup Iteration   9: 4,262 ms/op
# Warmup Iteration  10: 4,317 ms/op
Iteration   1: 4,306 ms/op
Iteration   2: 4,332 ms/op
Iteration   3: 4,306 ms/op
Iteration   4: 4,307 ms/op
Iteration   5: 4,308 ms/op
Iteration   6: 4,278 ms/op
Iteration   7: 4,303 ms/op
Iteration   8: 4,307 ms/op
Iteration   9: 4,277 ms/op
Iteration  10: 4,312 ms/op


Result "benchmarkFind":
  4,304 ±(99.9%) 0,024 ms/op [Average]
  (min, avg, max) = (4,277, 4,304, 4,332), stdev = 0,016
  CI (99.9%): [4,279, 4,328] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 8, patternSize = 4)

# Run progress: 84,24% complete, ETA 02:27:14
# Fork: 1 of 1
# Warmup Iteration   1: 21,640 ms/op
# Warmup Iteration   2: 19,716 ms/op
# Warmup Iteration   3: 19,232 ms/op
# Warmup Iteration   4: 19,105 ms/op
# Warmup Iteration   5: 19,123 ms/op
# Warmup Iteration   6: 19,055 ms/op
# Warmup Iteration   7: 19,076 ms/op
# Warmup Iteration   8: 19,194 ms/op
# Warmup Iteration   9: 19,191 ms/op
# Warmup Iteration  10: 19,176 ms/op
Iteration   1: 19,290 ms/op
Iteration   2: 19,293 ms/op
Iteration   3: 19,297 ms/op
Iteration   4: 19,405 ms/op
Iteration   5: 19,170 ms/op
Iteration   6: 19,259 ms/op
Iteration   7: 19,230 ms/op
Iteration   8: 19,279 ms/op
Iteration   9: 19,261 ms/op
Iteration  10: 19,285 ms/op


Result "benchmarkFind":
  19,277 ±(99.9%) 0,090 ms/op [Average]
  (min, avg, max) = (19,170, 19,277, 19,405), stdev = 0,059
  CI (99.9%): [19,187, 19,367] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 8, patternSize = 8)

# Run progress: 84,28% complete, ETA 02:26:48
# Fork: 1 of 1
# Warmup Iteration   1: 11,392 ms/op
# Warmup Iteration   2: 10,473 ms/op
# Warmup Iteration   3: 10,215 ms/op
# Warmup Iteration   4: 10,175 ms/op
# Warmup Iteration   5: 10,199 ms/op
# Warmup Iteration   6: 10,206 ms/op
# Warmup Iteration   7: 10,296 ms/op
# Warmup Iteration   8: 10,419 ms/op
# Warmup Iteration   9: 10,401 ms/op
# Warmup Iteration  10: 10,350 ms/op
Iteration   1: 10,323 ms/op
Iteration   2: 10,404 ms/op
Iteration   3: 10,297 ms/op
Iteration   4: 11,076 ms/op
Iteration   5: 10,381 ms/op
Iteration   6: 10,387 ms/op
Iteration   7: 10,364 ms/op
Iteration   8: 10,288 ms/op
Iteration   9: 10,286 ms/op
Iteration  10: 10,308 ms/op


Result "benchmarkFind":
  10,412 ±(99.9%) 0,359 ms/op [Average]
  (min, avg, max) = (10,286, 10,412, 11,076), stdev = 0,238
  CI (99.9%): [10,052, 10,771] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 8, patternSize = 16)

# Run progress: 84,33% complete, ETA 02:26:21
# Fork: 1 of 1
# Warmup Iteration   1: 6,068 ms/op
# Warmup Iteration   2: 5,665 ms/op
# Warmup Iteration   3: 6,208 ms/op
# Warmup Iteration   4: 5,556 ms/op
# Warmup Iteration   5: 5,565 ms/op
# Warmup Iteration   6: 5,563 ms/op
# Warmup Iteration   7: 5,573 ms/op
# Warmup Iteration   8: 5,594 ms/op
# Warmup Iteration   9: 5,649 ms/op
# Warmup Iteration  10: 5,678 ms/op
Iteration   1: 5,622 ms/op
Iteration   2: 5,672 ms/op
Iteration   3: 5,637 ms/op
Iteration   4: 5,656 ms/op
Iteration   5: 5,636 ms/op
Iteration   6: 5,613 ms/op
Iteration   7: 5,657 ms/op
Iteration   8: 5,628 ms/op
Iteration   9: 5,615 ms/op
Iteration  10: 5,592 ms/op


Result "benchmarkFind":
  5,633 ±(99.9%) 0,036 ms/op [Average]
  (min, avg, max) = (5,592, 5,633, 5,672), stdev = 0,024
  CI (99.9%): [5,597, 5,669] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 8, patternSize = 32)

# Run progress: 84,38% complete, ETA 02:25:54
# Fork: 1 of 1
# Warmup Iteration   1: 3,639 ms/op
# Warmup Iteration   2: 3,374 ms/op
# Warmup Iteration   3: 3,314 ms/op
# Warmup Iteration   4: 3,289 ms/op
# Warmup Iteration   5: 3,322 ms/op
# Warmup Iteration   6: 3,304 ms/op
# Warmup Iteration   7: 3,336 ms/op
# Warmup Iteration   8: 3,308 ms/op
# Warmup Iteration   9: 3,366 ms/op
# Warmup Iteration  10: 3,336 ms/op
Iteration   1: 3,356 ms/op
Iteration   2: 3,372 ms/op
Iteration   3: 3,327 ms/op
Iteration   4: 3,314 ms/op
Iteration   5: 3,329 ms/op
Iteration   6: 3,323 ms/op
Iteration   7: 3,323 ms/op
Iteration   8: 3,318 ms/op
Iteration   9: 3,337 ms/op
Iteration  10: 3,331 ms/op


Result "benchmarkFind":
  3,333 ±(99.9%) 0,027 ms/op [Average]
  (min, avg, max) = (3,314, 3,333, 3,372), stdev = 0,018
  CI (99.9%): [3,306, 3,360] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 8, patternSize = 64)

# Run progress: 84,42% complete, ETA 02:25:28
# Fork: 1 of 1
# Warmup Iteration   1: 2,191 ms/op
# Warmup Iteration   2: 1,992 ms/op
# Warmup Iteration   3: 1,962 ms/op
# Warmup Iteration   4: 1,960 ms/op
# Warmup Iteration   5: 1,973 ms/op
# Warmup Iteration   6: 1,953 ms/op
# Warmup Iteration   7: 1,976 ms/op
# Warmup Iteration   8: 1,964 ms/op
# Warmup Iteration   9: 1,960 ms/op
# Warmup Iteration  10: 1,978 ms/op
Iteration   1: 1,973 ms/op
Iteration   2: 1,977 ms/op
Iteration   3: 1,987 ms/op
Iteration   4: 1,978 ms/op
Iteration   5: 1,979 ms/op
Iteration   6: 1,986 ms/op
Iteration   7: 1,981 ms/op
Iteration   8: 1,973 ms/op
Iteration   9: 1,978 ms/op
Iteration  10: 1,982 ms/op


Result "benchmarkFind":
  1,979 ±(99.9%) 0,007 ms/op [Average]
  (min, avg, max) = (1,973, 1,979, 1,987), stdev = 0,005
  CI (99.9%): [1,972, 1,987] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 8, patternSize = 128)

# Run progress: 84,47% complete, ETA 02:25:01
# Fork: 1 of 1
# Warmup Iteration   1: 1,620 ms/op
# Warmup Iteration   2: 1,645 ms/op
# Warmup Iteration   3: 1,450 ms/op
# Warmup Iteration   4: 1,457 ms/op
# Warmup Iteration   5: 1,471 ms/op
# Warmup Iteration   6: 1,462 ms/op
# Warmup Iteration   7: 1,466 ms/op
# Warmup Iteration   8: 1,464 ms/op
# Warmup Iteration   9: 1,479 ms/op
# Warmup Iteration  10: 1,476 ms/op
Iteration   1: 1,477 ms/op
Iteration   2: 1,477 ms/op
Iteration   3: 1,475 ms/op
Iteration   4: 1,479 ms/op
Iteration   5: 1,475 ms/op
Iteration   6: 1,483 ms/op
Iteration   7: 1,481 ms/op
Iteration   8: 1,482 ms/op
Iteration   9: 1,477 ms/op
Iteration  10: 1,475 ms/op


Result "benchmarkFind":
  1,478 ±(99.9%) 0,005 ms/op [Average]
  (min, avg, max) = (1,475, 1,478, 1,483), stdev = 0,003
  CI (99.9%): [1,473, 1,483] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 8, patternSize = 256)

# Run progress: 84,51% complete, ETA 02:24:34
# Fork: 1 of 1
# Warmup Iteration   1: 1,539 ms/op
# Warmup Iteration   2: 1,417 ms/op
# Warmup Iteration   3: 1,373 ms/op
# Warmup Iteration   4: 1,358 ms/op
# Warmup Iteration   5: 1,351 ms/op
# Warmup Iteration   6: 1,349 ms/op
# Warmup Iteration   7: 1,346 ms/op
# Warmup Iteration   8: 1,342 ms/op
# Warmup Iteration   9: 1,346 ms/op
# Warmup Iteration  10: 1,352 ms/op
Iteration   1: 1,347 ms/op
Iteration   2: 1,362 ms/op
Iteration   3: 1,363 ms/op
Iteration   4: 1,358 ms/op
Iteration   5: 1,367 ms/op
Iteration   6: 1,370 ms/op
Iteration   7: 1,382 ms/op
Iteration   8: 1,374 ms/op
Iteration   9: 1,370 ms/op
Iteration  10: 1,366 ms/op


Result "benchmarkFind":
  1,366 ±(99.9%) 0,014 ms/op [Average]
  (min, avg, max) = (1,347, 1,366, 1,382), stdev = 0,009
  CI (99.9%): [1,352, 1,380] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 32, patternSize = 2)

# Run progress: 84,56% complete, ETA 02:24:08
# Fork: 1 of 1
# Warmup Iteration   1: 27,526 ms/op
# Warmup Iteration   2: 25,343 ms/op
# Warmup Iteration   3: 25,255 ms/op
# Warmup Iteration   4: 25,019 ms/op
# Warmup Iteration   5: 25,259 ms/op
# Warmup Iteration   6: 25,343 ms/op
# Warmup Iteration   7: 25,236 ms/op
# Warmup Iteration   8: 25,205 ms/op
# Warmup Iteration   9: 25,189 ms/op
# Warmup Iteration  10: 25,379 ms/op
Iteration   1: 25,360 ms/op
Iteration   2: 25,118 ms/op
Iteration   3: 25,135 ms/op
Iteration   4: 25,049 ms/op
Iteration   5: 25,240 ms/op
Iteration   6: 25,139 ms/op
Iteration   7: 25,282 ms/op
Iteration   8: 25,054 ms/op
Iteration   9: 25,217 ms/op
Iteration  10: 26,571 ms/op


Result "benchmarkFind":
  25,316 ±(99.9%) 0,683 ms/op [Average]
  (min, avg, max) = (25,049, 25,316, 26,571), stdev = 0,452
  CI (99.9%): [24,633, 26,000] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 32, patternSize = 4)

# Run progress: 84,60% complete, ETA 02:23:41
# Fork: 1 of 1
# Warmup Iteration   1: 39,338 ms/op
# Warmup Iteration   2: 34,986 ms/op
# Warmup Iteration   3: 35,425 ms/op
# Warmup Iteration   4: 34,130 ms/op
# Warmup Iteration   5: 34,343 ms/op
# Warmup Iteration   6: 34,203 ms/op
# Warmup Iteration   7: 34,487 ms/op
# Warmup Iteration   8: 34,221 ms/op
# Warmup Iteration   9: 34,297 ms/op
# Warmup Iteration  10: 34,185 ms/op
Iteration   1: 34,261 ms/op
Iteration   2: 34,247 ms/op
Iteration   3: 34,423 ms/op
Iteration   4: 34,440 ms/op
Iteration   5: 34,328 ms/op
Iteration   6: 34,623 ms/op
Iteration   7: 34,491 ms/op
Iteration   8: 34,314 ms/op
Iteration   9: 34,783 ms/op
Iteration  10: 34,493 ms/op


Result "benchmarkFind":
  34,440 ±(99.9%) 0,254 ms/op [Average]
  (min, avg, max) = (34,247, 34,440, 34,783), stdev = 0,168
  CI (99.9%): [34,186, 34,695] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 32, patternSize = 8)

# Run progress: 84,65% complete, ETA 02:23:14
# Fork: 1 of 1
# Warmup Iteration   1: 18,747 ms/op
# Warmup Iteration   2: 17,139 ms/op
# Warmup Iteration   3: 16,831 ms/op
# Warmup Iteration   4: 16,781 ms/op
# Warmup Iteration   5: 16,923 ms/op
# Warmup Iteration   6: 16,895 ms/op
# Warmup Iteration   7: 16,850 ms/op
# Warmup Iteration   8: 16,933 ms/op
# Warmup Iteration   9: 16,910 ms/op
# Warmup Iteration  10: 17,004 ms/op
Iteration   1: 17,041 ms/op
Iteration   2: 17,012 ms/op
Iteration   3: 16,811 ms/op
Iteration   4: 17,027 ms/op
Iteration   5: 16,926 ms/op
Iteration   6: 17,119 ms/op
Iteration   7: 16,977 ms/op
Iteration   8: 16,924 ms/op
Iteration   9: 17,042 ms/op
Iteration  10: 17,044 ms/op


Result "benchmarkFind":
  16,992 ±(99.9%) 0,131 ms/op [Average]
  (min, avg, max) = (16,811, 16,992, 17,119), stdev = 0,087
  CI (99.9%): [16,862, 17,123] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 32, patternSize = 16)

# Run progress: 84,70% complete, ETA 02:22:48
# Fork: 1 of 1
# Warmup Iteration   1: 10,207 ms/op
# Warmup Iteration   2: 9,585 ms/op
# Warmup Iteration   3: 9,306 ms/op
# Warmup Iteration   4: 9,305 ms/op
# Warmup Iteration   5: 9,309 ms/op
# Warmup Iteration   6: 9,253 ms/op
# Warmup Iteration   7: 9,295 ms/op
# Warmup Iteration   8: 9,371 ms/op
# Warmup Iteration   9: 9,445 ms/op
# Warmup Iteration  10: 9,428 ms/op
Iteration   1: 9,433 ms/op
Iteration   2: 9,438 ms/op
Iteration   3: 9,451 ms/op
Iteration   4: 9,460 ms/op
Iteration   5: 9,433 ms/op
Iteration   6: 9,447 ms/op
Iteration   7: 9,424 ms/op
Iteration   8: 10,801 ms/op
Iteration   9: 9,363 ms/op
Iteration  10: 9,360 ms/op


Result "benchmarkFind":
  9,561 ±(99.9%) 0,661 ms/op [Average]
  (min, avg, max) = (9,360, 9,561, 10,801), stdev = 0,437
  CI (99.9%): [8,900, 10,222] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 32, patternSize = 32)

# Run progress: 84,74% complete, ETA 02:22:21
# Fork: 1 of 1
# Warmup Iteration   1: 7,423 ms/op
# Warmup Iteration   2: 7,034 ms/op
# Warmup Iteration   3: 6,839 ms/op
# Warmup Iteration   4: 6,812 ms/op
# Warmup Iteration   5: 6,849 ms/op
# Warmup Iteration   6: 6,886 ms/op
# Warmup Iteration   7: 6,848 ms/op
# Warmup Iteration   8: 6,854 ms/op
# Warmup Iteration   9: 6,856 ms/op
# Warmup Iteration  10: 6,870 ms/op
Iteration   1: 6,823 ms/op
Iteration   2: 6,928 ms/op
Iteration   3: 6,884 ms/op
Iteration   4: 6,863 ms/op
Iteration   5: 6,876 ms/op
Iteration   6: 6,876 ms/op
Iteration   7: 6,920 ms/op
Iteration   8: 6,932 ms/op
Iteration   9: 6,938 ms/op
Iteration  10: 6,912 ms/op


Result "benchmarkFind":
  6,895 ±(99.9%) 0,056 ms/op [Average]
  (min, avg, max) = (6,823, 6,895, 6,938), stdev = 0,037
  CI (99.9%): [6,839, 6,951] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 32, patternSize = 64)

# Run progress: 84,79% complete, ETA 02:21:54
# Fork: 1 of 1
# Warmup Iteration   1: 6,853 ms/op
# Warmup Iteration   2: 6,368 ms/op
# Warmup Iteration   3: 6,247 ms/op
# Warmup Iteration   4: 6,220 ms/op
# Warmup Iteration   5: 6,222 ms/op
# Warmup Iteration   6: 6,178 ms/op
# Warmup Iteration   7: 6,261 ms/op
# Warmup Iteration   8: 6,253 ms/op
# Warmup Iteration   9: 6,305 ms/op
# Warmup Iteration  10: 6,300 ms/op
Iteration   1: 6,341 ms/op
Iteration   2: 6,314 ms/op
Iteration   3: 6,325 ms/op
Iteration   4: 6,260 ms/op
Iteration   5: 6,292 ms/op
Iteration   6: 6,318 ms/op
Iteration   7: 6,290 ms/op
Iteration   8: 6,297 ms/op
Iteration   9: 6,303 ms/op
Iteration  10: 6,312 ms/op


Result "benchmarkFind":
  6,305 ±(99.9%) 0,034 ms/op [Average]
  (min, avg, max) = (6,260, 6,305, 6,341), stdev = 0,022
  CI (99.9%): [6,272, 6,339] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 32, patternSize = 128)

# Run progress: 84,83% complete, ETA 02:21:28
# Fork: 1 of 1
# Warmup Iteration   1: 7,031 ms/op
# Warmup Iteration   2: 6,445 ms/op
# Warmup Iteration   3: 6,354 ms/op
# Warmup Iteration   4: 6,300 ms/op
# Warmup Iteration   5: 6,266 ms/op
# Warmup Iteration   6: 6,330 ms/op
# Warmup Iteration   7: 6,332 ms/op
# Warmup Iteration   8: 6,366 ms/op
# Warmup Iteration   9: 6,416 ms/op
# Warmup Iteration  10: 6,305 ms/op
Iteration   1: 6,342 ms/op
Iteration   2: 6,402 ms/op
Iteration   3: 6,406 ms/op
Iteration   4: 6,466 ms/op
Iteration   5: 6,431 ms/op
Iteration   6: 7,364 ms/op
Iteration   7: 6,275 ms/op
Iteration   8: 6,434 ms/op
Iteration   9: 6,375 ms/op
Iteration  10: 6,292 ms/op


Result "benchmarkFind":
  6,479 ±(99.9%) 0,480 ms/op [Average]
  (min, avg, max) = (6,275, 6,479, 7,364), stdev = 0,317
  CI (99.9%): [5,999, 6,958] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 32, patternSize = 256)

# Run progress: 84,88% complete, ETA 02:21:01
# Fork: 1 of 1
# Warmup Iteration   1: 6,739 ms/op
# Warmup Iteration   2: 6,251 ms/op
# Warmup Iteration   3: 6,057 ms/op
# Warmup Iteration   4: 6,103 ms/op
# Warmup Iteration   5: 6,060 ms/op
# Warmup Iteration   6: 6,048 ms/op
# Warmup Iteration   7: 6,083 ms/op
# Warmup Iteration   8: 6,075 ms/op
# Warmup Iteration   9: 6,070 ms/op
# Warmup Iteration  10: 6,124 ms/op
Iteration   1: 6,107 ms/op
Iteration   2: 6,103 ms/op
Iteration   3: 6,189 ms/op
Iteration   4: 6,162 ms/op
Iteration   5: 6,111 ms/op
Iteration   6: 6,137 ms/op
Iteration   7: 6,143 ms/op
Iteration   8: 6,123 ms/op
Iteration   9: 6,146 ms/op
Iteration  10: 6,109 ms/op


Result "benchmarkFind":
  6,133 ±(99.9%) 0,042 ms/op [Average]
  (min, avg, max) = (6,103, 6,133, 6,189), stdev = 0,028
  CI (99.9%): [6,091, 6,175] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 128, patternSize = 2)

# Run progress: 84,93% complete, ETA 02:20:34
# Fork: 1 of 1
# Warmup Iteration   1: 188,282 ms/op
# Warmup Iteration   2: 178,112 ms/op
# Warmup Iteration   3: 176,417 ms/op
# Warmup Iteration   4: 176,817 ms/op
# Warmup Iteration   5: 177,425 ms/op
# Warmup Iteration   6: 177,310 ms/op
# Warmup Iteration   7: 175,325 ms/op
# Warmup Iteration   8: 176,622 ms/op
# Warmup Iteration   9: 175,655 ms/op
# Warmup Iteration  10: 176,952 ms/op
Iteration   1: 176,486 ms/op
Iteration   2: 175,882 ms/op
Iteration   3: 175,895 ms/op
Iteration   4: 175,652 ms/op
Iteration   5: 177,285 ms/op
Iteration   6: 175,284 ms/op
Iteration   7: 178,056 ms/op
Iteration   8: 176,934 ms/op
Iteration   9: 177,509 ms/op
Iteration  10: 176,612 ms/op


Result "benchmarkFind":
  176,560 ±(99.9%) 1,349 ms/op [Average]
  (min, avg, max) = (175,284, 176,560, 178,056), stdev = 0,892
  CI (99.9%): [175,210, 177,909] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 128, patternSize = 4)

# Run progress: 84,97% complete, ETA 02:20:08
# Fork: 1 of 1
# Warmup Iteration   1: 223,046 ms/op
# Warmup Iteration   2: 204,096 ms/op
# Warmup Iteration   3: 206,293 ms/op
# Warmup Iteration   4: 202,399 ms/op
# Warmup Iteration   5: 201,172 ms/op
# Warmup Iteration   6: 202,758 ms/op
# Warmup Iteration   7: 202,174 ms/op
# Warmup Iteration   8: 202,184 ms/op
# Warmup Iteration   9: 201,844 ms/op
# Warmup Iteration  10: 202,692 ms/op
Iteration   1: 202,322 ms/op
Iteration   2: 203,433 ms/op
Iteration   3: 222,757 ms/op
Iteration   4: 201,828 ms/op
Iteration   5: 202,608 ms/op
Iteration   6: 202,977 ms/op
Iteration   7: 201,328 ms/op
Iteration   8: 200,217 ms/op
Iteration   9: 200,692 ms/op
Iteration  10: 201,755 ms/op


Result "benchmarkFind":
  203,992 ±(99.9%) 10,080 ms/op [Average]
  (min, avg, max) = (200,217, 203,992, 222,757), stdev = 6,667
  CI (99.9%): [193,911, 214,072] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 128, patternSize = 8)

# Run progress: 85,02% complete, ETA 02:19:42
# Fork: 1 of 1
# Warmup Iteration   1: 35,749 ms/op
# Warmup Iteration   2: 32,288 ms/op
# Warmup Iteration   3: 31,559 ms/op
# Warmup Iteration   4: 31,611 ms/op
# Warmup Iteration   5: 31,548 ms/op
# Warmup Iteration   6: 31,515 ms/op
# Warmup Iteration   7: 31,896 ms/op
# Warmup Iteration   8: 31,761 ms/op
# Warmup Iteration   9: 32,151 ms/op
# Warmup Iteration  10: 32,172 ms/op
Iteration   1: 32,260 ms/op
Iteration   2: 32,635 ms/op
Iteration   3: 32,497 ms/op
Iteration   4: 32,567 ms/op
Iteration   5: 32,731 ms/op
Iteration   6: 32,573 ms/op
Iteration   7: 32,364 ms/op
Iteration   8: 32,470 ms/op
Iteration   9: 32,209 ms/op
Iteration  10: 32,426 ms/op


Result "benchmarkFind":
  32,473 ±(99.9%) 0,248 ms/op [Average]
  (min, avg, max) = (32,209, 32,473, 32,731), stdev = 0,164
  CI (99.9%): [32,226, 32,721] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 128, patternSize = 16)

# Run progress: 85,06% complete, ETA 02:19:15
# Fork: 1 of 1
# Warmup Iteration   1: 32,440 ms/op
# Warmup Iteration   2: 29,007 ms/op
# Warmup Iteration   3: 28,268 ms/op
# Warmup Iteration   4: 28,258 ms/op
# Warmup Iteration   5: 28,387 ms/op
# Warmup Iteration   6: 28,192 ms/op
# Warmup Iteration   7: 28,394 ms/op
# Warmup Iteration   8: 28,294 ms/op
# Warmup Iteration   9: 28,482 ms/op
# Warmup Iteration  10: 28,580 ms/op
Iteration   1: 28,896 ms/op
Iteration   2: 28,790 ms/op
Iteration   3: 28,845 ms/op
Iteration   4: 28,835 ms/op
Iteration   5: 28,950 ms/op
Iteration   6: 28,857 ms/op
Iteration   7: 28,879 ms/op
Iteration   8: 28,933 ms/op
Iteration   9: 28,663 ms/op
Iteration  10: 28,938 ms/op


Result "benchmarkFind":
  28,859 ±(99.9%) 0,129 ms/op [Average]
  (min, avg, max) = (28,663, 28,859, 28,950), stdev = 0,085
  CI (99.9%): [28,730, 28,987] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 128, patternSize = 32)

# Run progress: 85,11% complete, ETA 02:18:48
# Fork: 1 of 1
# Warmup Iteration   1: 34,220 ms/op
# Warmup Iteration   2: 30,859 ms/op
# Warmup Iteration   3: 30,211 ms/op
# Warmup Iteration   4: 30,310 ms/op
# Warmup Iteration   5: 30,089 ms/op
# Warmup Iteration   6: 30,105 ms/op
# Warmup Iteration   7: 30,356 ms/op
# Warmup Iteration   8: 30,359 ms/op
# Warmup Iteration   9: 30,216 ms/op
# Warmup Iteration  10: 34,013 ms/op
Iteration   1: 31,851 ms/op
Iteration   2: 30,947 ms/op
Iteration   3: 30,968 ms/op
Iteration   4: 30,931 ms/op
Iteration   5: 30,992 ms/op
Iteration   6: 31,207 ms/op
Iteration   7: 31,246 ms/op
Iteration   8: 31,058 ms/op
Iteration   9: 31,037 ms/op
Iteration  10: 31,097 ms/op


Result "benchmarkFind":
  31,133 ±(99.9%) 0,413 ms/op [Average]
  (min, avg, max) = (30,931, 31,133, 31,851), stdev = 0,273
  CI (99.9%): [30,720, 31,546] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 128, patternSize = 64)

# Run progress: 85,16% complete, ETA 02:18:22
# Fork: 1 of 1
# Warmup Iteration   1: 32,968 ms/op
# Warmup Iteration   2: 28,734 ms/op
# Warmup Iteration   3: 28,843 ms/op
# Warmup Iteration   4: 29,169 ms/op
# Warmup Iteration   5: 29,126 ms/op
# Warmup Iteration   6: 29,516 ms/op
# Warmup Iteration   7: 29,388 ms/op
# Warmup Iteration   8: 29,408 ms/op
# Warmup Iteration   9: 29,392 ms/op
# Warmup Iteration  10: 29,552 ms/op
Iteration   1: 29,398 ms/op
Iteration   2: 29,476 ms/op
Iteration   3: 29,095 ms/op
Iteration   4: 30,275 ms/op
Iteration   5: 29,793 ms/op
Iteration   6: 29,410 ms/op
Iteration   7: 29,211 ms/op
Iteration   8: 29,205 ms/op
Iteration   9: 29,498 ms/op
Iteration  10: 29,218 ms/op


Result "benchmarkFind":
  29,458 ±(99.9%) 0,529 ms/op [Average]
  (min, avg, max) = (29,095, 29,458, 30,275), stdev = 0,350
  CI (99.9%): [28,929, 29,987] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 128, patternSize = 128)

# Run progress: 85,20% complete, ETA 02:17:55
# Fork: 1 of 1
# Warmup Iteration   1: 31,008 ms/op
# Warmup Iteration   2: 28,314 ms/op
# Warmup Iteration   3: 27,494 ms/op
# Warmup Iteration   4: 27,321 ms/op
# Warmup Iteration   5: 27,352 ms/op
# Warmup Iteration   6: 27,405 ms/op
# Warmup Iteration   7: 27,368 ms/op
# Warmup Iteration   8: 27,378 ms/op
# Warmup Iteration   9: 27,392 ms/op
# Warmup Iteration  10: 27,535 ms/op
Iteration   1: 27,598 ms/op
Iteration   2: 27,660 ms/op
Iteration   3: 27,749 ms/op
Iteration   4: 27,817 ms/op
Iteration   5: 27,869 ms/op
Iteration   6: 27,886 ms/op
Iteration   7: 27,619 ms/op
Iteration   8: 27,667 ms/op
Iteration   9: 27,603 ms/op
Iteration  10: 27,274 ms/op


Result "benchmarkFind":
  27,674 ±(99.9%) 0,268 ms/op [Average]
  (min, avg, max) = (27,274, 27,674, 27,886), stdev = 0,177
  CI (99.9%): [27,406, 27,943] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternNumber = 128, patternSize = 256)

# Run progress: 85,25% complete, ETA 02:17:29
# Fork: 1 of 1
# Warmup Iteration   1: 30,728 ms/op
# Warmup Iteration   2: 27,937 ms/op
# Warmup Iteration   3: 27,646 ms/op
# Warmup Iteration   4: 26,586 ms/op
# Warmup Iteration   5: 26,617 ms/op
# Warmup Iteration   6: 26,597 ms/op
# Warmup Iteration   7: 29,865 ms/op
# Warmup Iteration   8: 27,006 ms/op
# Warmup Iteration   9: 26,757 ms/op
# Warmup Iteration  10: 26,790 ms/op
Iteration   1: 26,751 ms/op
Iteration   2: 26,845 ms/op
Iteration   3: 26,903 ms/op
Iteration   4: 26,838 ms/op
Iteration   5: 26,829 ms/op
Iteration   6: 27,101 ms/op
Iteration   7: 27,076 ms/op
Iteration   8: 27,312 ms/op
Iteration   9: 27,380 ms/op
Iteration  10: 27,136 ms/op


Result "benchmarkFind":
  27,017 ±(99.9%) 0,328 ms/op [Average]
  (min, avg, max) = (26,751, 27,017, 27,380), stdev = 0,217
  CI (99.9%): [26,689, 27,345] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 2, patternSize = 2)

# Run progress: 85,29% complete, ETA 02:17:02
# Fork: 1 of 1
# Warmup Iteration   1: 5,795 ms/op
# Warmup Iteration   2: 5,395 ms/op
# Warmup Iteration   3: 5,204 ms/op
# Warmup Iteration   4: 5,190 ms/op
# Warmup Iteration   5: 5,202 ms/op
# Warmup Iteration   6: 5,215 ms/op
# Warmup Iteration   7: 5,248 ms/op
# Warmup Iteration   8: 5,247 ms/op
# Warmup Iteration   9: 5,281 ms/op
# Warmup Iteration  10: 5,268 ms/op
Iteration   1: 5,299 ms/op
Iteration   2: 5,269 ms/op
Iteration   3: 5,263 ms/op
Iteration   4: 5,283 ms/op
Iteration   5: 5,326 ms/op
Iteration   6: 5,309 ms/op
Iteration   7: 5,300 ms/op
Iteration   8: 5,297 ms/op
Iteration   9: 5,295 ms/op
Iteration  10: 5,303 ms/op


Result "benchmarkFind":
  5,294 ±(99.9%) 0,028 ms/op [Average]
  (min, avg, max) = (5,263, 5,294, 5,326), stdev = 0,019
  CI (99.9%): [5,266, 5,322] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 2, patternSize = 4)

# Run progress: 85,34% complete, ETA 02:16:36
# Fork: 1 of 1
# Warmup Iteration   1: 116,050 ms/op
# Warmup Iteration   2: 105,801 ms/op
# Warmup Iteration   3: 104,514 ms/op
# Warmup Iteration   4: 104,927 ms/op
# Warmup Iteration   5: 104,381 ms/op
# Warmup Iteration   6: 104,543 ms/op
# Warmup Iteration   7: 105,524 ms/op
# Warmup Iteration   8: 105,908 ms/op
# Warmup Iteration   9: 106,219 ms/op
# Warmup Iteration  10: 104,941 ms/op
Iteration   1: 105,241 ms/op
Iteration   2: 106,098 ms/op
Iteration   3: 105,399 ms/op
Iteration   4: 104,950 ms/op
Iteration   5: 104,859 ms/op
Iteration   6: 105,843 ms/op
Iteration   7: 105,374 ms/op
Iteration   8: 106,193 ms/op
Iteration   9: 105,243 ms/op
Iteration  10: 106,106 ms/op


Result "benchmarkFind":
  105,530 ±(99.9%) 0,745 ms/op [Average]
  (min, avg, max) = (104,859, 105,530, 106,193), stdev = 0,493
  CI (99.9%): [104,785, 106,276] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 2, patternSize = 8)

# Run progress: 85,39% complete, ETA 02:16:09
# Fork: 1 of 1
# Warmup Iteration   1: 68,208 ms/op
# Warmup Iteration   2: 64,384 ms/op
# Warmup Iteration   3: 60,710 ms/op
# Warmup Iteration   4: 64,992 ms/op
# Warmup Iteration   5: 60,515 ms/op
# Warmup Iteration   6: 60,890 ms/op
# Warmup Iteration   7: 61,132 ms/op
# Warmup Iteration   8: 61,256 ms/op
# Warmup Iteration   9: 60,713 ms/op
# Warmup Iteration  10: 60,955 ms/op
Iteration   1: 61,275 ms/op
Iteration   2: 61,189 ms/op
Iteration   3: 61,273 ms/op
Iteration   4: 61,634 ms/op
Iteration   5: 61,429 ms/op
Iteration   6: 61,523 ms/op
Iteration   7: 61,533 ms/op
Iteration   8: 61,280 ms/op
Iteration   9: 61,398 ms/op
Iteration  10: 61,349 ms/op


Result "benchmarkFind":
  61,388 ±(99.9%) 0,214 ms/op [Average]
  (min, avg, max) = (61,189, 61,388, 61,634), stdev = 0,141
  CI (99.9%): [61,174, 61,602] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 2, patternSize = 16)

# Run progress: 85,43% complete, ETA 02:15:43
# Fork: 1 of 1
# Warmup Iteration   1: 30,803 ms/op
# Warmup Iteration   2: 28,431 ms/op
# Warmup Iteration   3: 26,877 ms/op
# Warmup Iteration   4: 26,845 ms/op
# Warmup Iteration   5: 26,940 ms/op
# Warmup Iteration   6: 26,929 ms/op
# Warmup Iteration   7: 27,005 ms/op
# Warmup Iteration   8: 26,906 ms/op
# Warmup Iteration   9: 27,078 ms/op
# Warmup Iteration  10: 27,086 ms/op
Iteration   1: 27,456 ms/op
Iteration   2: 27,331 ms/op
Iteration   3: 27,128 ms/op
Iteration   4: 27,258 ms/op
Iteration   5: 27,347 ms/op
Iteration   6: 27,282 ms/op
Iteration   7: 27,097 ms/op
Iteration   8: 27,188 ms/op
Iteration   9: 27,144 ms/op
Iteration  10: 27,163 ms/op


Result "benchmarkFind":
  27,239 ±(99.9%) 0,174 ms/op [Average]
  (min, avg, max) = (27,097, 27,239, 27,456), stdev = 0,115
  CI (99.9%): [27,065, 27,414] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 2, patternSize = 32)

# Run progress: 85,48% complete, ETA 02:15:17
# Fork: 1 of 1
# Warmup Iteration   1: 15,727 ms/op
# Warmup Iteration   2: 15,044 ms/op
# Warmup Iteration   3: 14,237 ms/op
# Warmup Iteration   4: 14,445 ms/op
# Warmup Iteration   5: 14,260 ms/op
# Warmup Iteration   6: 14,396 ms/op
# Warmup Iteration   7: 14,289 ms/op
# Warmup Iteration   8: 14,430 ms/op
# Warmup Iteration   9: 14,362 ms/op
# Warmup Iteration  10: 14,481 ms/op
Iteration   1: 14,527 ms/op
Iteration   2: 14,485 ms/op
Iteration   3: 14,487 ms/op
Iteration   4: 14,711 ms/op
Iteration   5: 14,507 ms/op
Iteration   6: 14,482 ms/op
Iteration   7: 14,515 ms/op
Iteration   8: 14,582 ms/op
Iteration   9: 14,529 ms/op
Iteration  10: 14,491 ms/op


Result "benchmarkFind":
  14,532 ±(99.9%) 0,105 ms/op [Average]
  (min, avg, max) = (14,482, 14,532, 14,711), stdev = 0,070
  CI (99.9%): [14,426, 14,637] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 2, patternSize = 64)

# Run progress: 85,52% complete, ETA 02:14:50
# Fork: 1 of 1
# Warmup Iteration   1: 8,961 ms/op
# Warmup Iteration   2: 8,501 ms/op
# Warmup Iteration   3: 8,096 ms/op
# Warmup Iteration   4: 8,066 ms/op
# Warmup Iteration   5: 8,132 ms/op
# Warmup Iteration   6: 8,150 ms/op
# Warmup Iteration   7: 8,228 ms/op
# Warmup Iteration   8: 8,241 ms/op
# Warmup Iteration   9: 8,264 ms/op
# Warmup Iteration  10: 8,231 ms/op
Iteration   1: 8,255 ms/op
Iteration   2: 8,188 ms/op
Iteration   3: 8,211 ms/op
Iteration   4: 8,167 ms/op
Iteration   5: 8,256 ms/op
Iteration   6: 8,247 ms/op
Iteration   7: 8,254 ms/op
Iteration   8: 8,231 ms/op
Iteration   9: 8,244 ms/op
Iteration  10: 8,302 ms/op


Result "benchmarkFind":
  8,236 ±(99.9%) 0,058 ms/op [Average]
  (min, avg, max) = (8,167, 8,236, 8,302), stdev = 0,038
  CI (99.9%): [8,177, 8,294] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 2, patternSize = 128)

# Run progress: 85,57% complete, ETA 02:14:24
# Fork: 1 of 1
# Warmup Iteration   1: 6,098 ms/op
# Warmup Iteration   2: 5,580 ms/op
# Warmup Iteration   3: 5,592 ms/op
# Warmup Iteration   4: 5,417 ms/op
# Warmup Iteration   5: 5,420 ms/op
# Warmup Iteration   6: 5,397 ms/op
# Warmup Iteration   7: 5,423 ms/op
# Warmup Iteration   8: 5,403 ms/op
# Warmup Iteration   9: 5,418 ms/op
# Warmup Iteration  10: 5,423 ms/op
Iteration   1: 5,412 ms/op
Iteration   2: 5,435 ms/op
Iteration   3: 5,482 ms/op
Iteration   4: 5,506 ms/op
Iteration   5: 5,486 ms/op
Iteration   6: 5,480 ms/op
Iteration   7: 5,508 ms/op
Iteration   8: 5,536 ms/op
Iteration   9: 5,477 ms/op
Iteration  10: 5,496 ms/op


Result "benchmarkFind":
  5,482 ±(99.9%) 0,054 ms/op [Average]
  (min, avg, max) = (5,412, 5,482, 5,536), stdev = 0,036
  CI (99.9%): [5,428, 5,536] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 2, patternSize = 256)

# Run progress: 85,62% complete, ETA 02:13:57
# Fork: 1 of 1
# Warmup Iteration   1: 5,961 ms/op
# Warmup Iteration   2: 5,615 ms/op
# Warmup Iteration   3: 5,460 ms/op
# Warmup Iteration   4: 5,459 ms/op
# Warmup Iteration   5: 5,460 ms/op
# Warmup Iteration   6: 5,469 ms/op
# Warmup Iteration   7: 5,459 ms/op
# Warmup Iteration   8: 5,466 ms/op
# Warmup Iteration   9: 5,504 ms/op
# Warmup Iteration  10: 5,762 ms/op
Iteration   1: 5,568 ms/op
Iteration   2: 5,533 ms/op
Iteration   3: 5,564 ms/op
Iteration   4: 5,558 ms/op
Iteration   5: 5,554 ms/op
Iteration   6: 5,563 ms/op
Iteration   7: 5,563 ms/op
Iteration   8: 5,562 ms/op
Iteration   9: 6,134 ms/op
Iteration  10: 5,462 ms/op


Result "benchmarkFind":
  5,606 ±(99.9%) 0,285 ms/op [Average]
  (min, avg, max) = (5,462, 5,606, 6,134), stdev = 0,188
  CI (99.9%): [5,321, 5,891] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 8, patternSize = 2)

# Run progress: 85,66% complete, ETA 02:13:31
# Fork: 1 of 1
# Warmup Iteration   1: 13,120 ms/op
# Warmup Iteration   2: 11,899 ms/op
# Warmup Iteration   3: 11,689 ms/op
# Warmup Iteration   4: 11,753 ms/op
# Warmup Iteration   5: 11,632 ms/op
# Warmup Iteration   6: 11,730 ms/op
# Warmup Iteration   7: 11,796 ms/op
# Warmup Iteration   8: 11,886 ms/op
# Warmup Iteration   9: 11,788 ms/op
# Warmup Iteration  10: 11,799 ms/op
Iteration   1: 11,910 ms/op
Iteration   2: 11,805 ms/op
Iteration   3: 11,855 ms/op
Iteration   4: 11,889 ms/op
Iteration   5: 11,856 ms/op
Iteration   6: 11,816 ms/op
Iteration   7: 11,870 ms/op
Iteration   8: 11,900 ms/op
Iteration   9: 11,801 ms/op
Iteration  10: 11,870 ms/op


Result "benchmarkFind":
  11,857 ±(99.9%) 0,059 ms/op [Average]
  (min, avg, max) = (11,801, 11,857, 11,910), stdev = 0,039
  CI (99.9%): [11,799, 11,916] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 8, patternSize = 4)

# Run progress: 85,71% complete, ETA 02:13:04
# Fork: 1 of 1
# Warmup Iteration   1: 169,823 ms/op
# Warmup Iteration   2: 151,190 ms/op
# Warmup Iteration   3: 149,419 ms/op
# Warmup Iteration   4: 148,623 ms/op
# Warmup Iteration   5: 150,553 ms/op
# Warmup Iteration   6: 150,329 ms/op
# Warmup Iteration   7: 150,605 ms/op
# Warmup Iteration   8: 151,899 ms/op
# Warmup Iteration   9: 150,391 ms/op
# Warmup Iteration  10: 151,889 ms/op
Iteration   1: 150,341 ms/op
Iteration   2: 150,347 ms/op
Iteration   3: 150,396 ms/op
Iteration   4: 150,735 ms/op
Iteration   5: 151,982 ms/op
Iteration   6: 150,378 ms/op
Iteration   7: 150,603 ms/op
Iteration   8: 151,436 ms/op
Iteration   9: 150,789 ms/op
Iteration  10: 150,100 ms/op


Result "benchmarkFind":
  150,711 ±(99.9%) 0,874 ms/op [Average]
  (min, avg, max) = (150,100, 150,711, 151,982), stdev = 0,578
  CI (99.9%): [149,836, 151,585] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 8, patternSize = 8)

# Run progress: 85,75% complete, ETA 02:12:38
# Fork: 1 of 1
# Warmup Iteration   1: 86,957 ms/op
# Warmup Iteration   2: 78,438 ms/op
# Warmup Iteration   3: 77,188 ms/op
# Warmup Iteration   4: 76,528 ms/op
# Warmup Iteration   5: 77,172 ms/op
# Warmup Iteration   6: 77,105 ms/op
# Warmup Iteration   7: 77,887 ms/op
# Warmup Iteration   8: 78,082 ms/op
# Warmup Iteration   9: 77,118 ms/op
# Warmup Iteration  10: 77,667 ms/op
Iteration   1: 78,718 ms/op
Iteration   2: 78,344 ms/op
Iteration   3: 77,709 ms/op
Iteration   4: 77,649 ms/op
Iteration   5: 88,558 ms/op
Iteration   6: 77,787 ms/op
Iteration   7: 79,179 ms/op
Iteration   8: 78,270 ms/op
Iteration   9: 77,110 ms/op
Iteration  10: 77,308 ms/op


Result "benchmarkFind":
  79,063 ±(99.9%) 5,134 ms/op [Average]
  (min, avg, max) = (77,110, 79,063, 88,558), stdev = 3,396
  CI (99.9%): [73,929, 84,197] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 8, patternSize = 16)

# Run progress: 85,80% complete, ETA 02:12:11
# Fork: 1 of 1
# Warmup Iteration   1: 46,118 ms/op
# Warmup Iteration   2: 43,569 ms/op
# Warmup Iteration   3: 42,574 ms/op
# Warmup Iteration   4: 42,629 ms/op
# Warmup Iteration   5: 42,568 ms/op
# Warmup Iteration   6: 42,640 ms/op
# Warmup Iteration   7: 42,909 ms/op
# Warmup Iteration   8: 42,981 ms/op
# Warmup Iteration   9: 43,206 ms/op
# Warmup Iteration  10: 43,212 ms/op
Iteration   1: 42,712 ms/op
Iteration   2: 43,217 ms/op
Iteration   3: 42,883 ms/op
Iteration   4: 43,321 ms/op
Iteration   5: 42,841 ms/op
Iteration   6: 43,170 ms/op
Iteration   7: 42,853 ms/op
Iteration   8: 43,275 ms/op
Iteration   9: 42,842 ms/op
Iteration  10: 43,038 ms/op


Result "benchmarkFind":
  43,015 ±(99.9%) 0,327 ms/op [Average]
  (min, avg, max) = (42,712, 43,015, 43,321), stdev = 0,216
  CI (99.9%): [42,688, 43,343] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 8, patternSize = 32)

# Run progress: 85,85% complete, ETA 02:11:45
# Fork: 1 of 1
# Warmup Iteration   1: 27,783 ms/op
# Warmup Iteration   2: 26,119 ms/op
# Warmup Iteration   3: 24,531 ms/op
# Warmup Iteration   4: 24,693 ms/op
# Warmup Iteration   5: 24,533 ms/op
# Warmup Iteration   6: 24,561 ms/op
# Warmup Iteration   7: 24,566 ms/op
# Warmup Iteration   8: 24,694 ms/op
# Warmup Iteration   9: 24,820 ms/op
# Warmup Iteration  10: 24,891 ms/op
Iteration   1: 24,642 ms/op
Iteration   2: 24,815 ms/op
Iteration   3: 25,012 ms/op
Iteration   4: 25,185 ms/op
Iteration   5: 24,955 ms/op
Iteration   6: 25,072 ms/op
Iteration   7: 25,019 ms/op
Iteration   8: 25,146 ms/op
Iteration   9: 25,121 ms/op
Iteration  10: 24,982 ms/op


Result "benchmarkFind":
  24,995 ±(99.9%) 0,247 ms/op [Average]
  (min, avg, max) = (24,642, 24,995, 25,185), stdev = 0,164
  CI (99.9%): [24,748, 25,242] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 8, patternSize = 64)

# Run progress: 85,89% complete, ETA 02:11:18
# Fork: 1 of 1
# Warmup Iteration   1: 16,916 ms/op
# Warmup Iteration   2: 16,056 ms/op
# Warmup Iteration   3: 15,009 ms/op
# Warmup Iteration   4: 14,989 ms/op
# Warmup Iteration   5: 14,967 ms/op
# Warmup Iteration   6: 15,015 ms/op
# Warmup Iteration   7: 14,924 ms/op
# Warmup Iteration   8: 14,928 ms/op
# Warmup Iteration   9: 15,001 ms/op
# Warmup Iteration  10: 14,992 ms/op
Iteration   1: 15,041 ms/op
Iteration   2: 17,176 ms/op
Iteration   3: 15,000 ms/op
Iteration   4: 14,975 ms/op
Iteration   5: 14,999 ms/op
Iteration   6: 15,084 ms/op
Iteration   7: 15,271 ms/op
Iteration   8: 15,233 ms/op
Iteration   9: 15,127 ms/op
Iteration  10: 15,336 ms/op


Result "benchmarkFind":
  15,324 ±(99.9%) 1,001 ms/op [Average]
  (min, avg, max) = (14,975, 15,324, 17,176), stdev = 0,662
  CI (99.9%): [14,323, 16,326] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 8, patternSize = 128)

# Run progress: 85,94% complete, ETA 02:10:52
# Fork: 1 of 1
# Warmup Iteration   1: 13,240 ms/op
# Warmup Iteration   2: 12,419 ms/op
# Warmup Iteration   3: 12,145 ms/op
# Warmup Iteration   4: 11,898 ms/op
# Warmup Iteration   5: 11,954 ms/op
# Warmup Iteration   6: 11,819 ms/op
# Warmup Iteration   7: 11,879 ms/op
# Warmup Iteration   8: 11,952 ms/op
# Warmup Iteration   9: 11,919 ms/op
# Warmup Iteration  10: 11,964 ms/op
Iteration   1: 11,976 ms/op
Iteration   2: 11,963 ms/op
Iteration   3: 12,042 ms/op
Iteration   4: 12,181 ms/op
Iteration   5: 12,208 ms/op
Iteration   6: 12,156 ms/op
Iteration   7: 12,063 ms/op
Iteration   8: 12,189 ms/op
Iteration   9: 12,144 ms/op
Iteration  10: 12,152 ms/op


Result "benchmarkFind":
  12,107 ±(99.9%) 0,135 ms/op [Average]
  (min, avg, max) = (11,963, 12,107, 12,208), stdev = 0,089
  CI (99.9%): [11,972, 12,243] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 8, patternSize = 256)

# Run progress: 85,98% complete, ETA 02:10:26
# Fork: 1 of 1
# Warmup Iteration   1: 11,488 ms/op
# Warmup Iteration   2: 10,757 ms/op
# Warmup Iteration   3: 10,341 ms/op
# Warmup Iteration   4: 10,102 ms/op
# Warmup Iteration   5: 10,185 ms/op
# Warmup Iteration   6: 10,192 ms/op
# Warmup Iteration   7: 10,188 ms/op
# Warmup Iteration   8: 10,214 ms/op
# Warmup Iteration   9: 10,159 ms/op
# Warmup Iteration  10: 10,257 ms/op
Iteration   1: 10,259 ms/op
Iteration   2: 10,314 ms/op
Iteration   3: 10,346 ms/op
Iteration   4: 10,408 ms/op
Iteration   5: 10,409 ms/op
Iteration   6: 10,358 ms/op
Iteration   7: 10,391 ms/op
Iteration   8: 10,371 ms/op
Iteration   9: 10,364 ms/op
Iteration  10: 10,353 ms/op


Result "benchmarkFind":
  10,357 ±(99.9%) 0,068 ms/op [Average]
  (min, avg, max) = (10,259, 10,357, 10,409), stdev = 0,045
  CI (99.9%): [10,289, 10,425] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 32, patternSize = 2)

# Run progress: 86,03% complete, ETA 02:09:59
# Fork: 1 of 1
# Warmup Iteration   1: 44,785 ms/op
# Warmup Iteration   2: 41,099 ms/op
# Warmup Iteration   3: 39,331 ms/op
# Warmup Iteration   4: 39,276 ms/op
# Warmup Iteration   5: 39,301 ms/op
# Warmup Iteration   6: 39,270 ms/op
# Warmup Iteration   7: 39,328 ms/op
# Warmup Iteration   8: 39,455 ms/op
# Warmup Iteration   9: 41,831 ms/op
# Warmup Iteration  10: 40,460 ms/op
Iteration   1: 39,030 ms/op
Iteration   2: 39,083 ms/op
Iteration   3: 39,363 ms/op
Iteration   4: 39,082 ms/op
Iteration   5: 38,874 ms/op
Iteration   6: 39,071 ms/op
Iteration   7: 38,880 ms/op
Iteration   8: 39,001 ms/op
Iteration   9: 39,077 ms/op
Iteration  10: 38,899 ms/op


Result "benchmarkFind":
  39,036 ±(99.9%) 0,217 ms/op [Average]
  (min, avg, max) = (38,874, 39,036, 39,363), stdev = 0,143
  CI (99.9%): [38,819, 39,252] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 32, patternSize = 4)

# Run progress: 86,08% complete, ETA 02:09:33
# Fork: 1 of 1
# Warmup Iteration   1: 216,013 ms/op
# Warmup Iteration   2: 195,383 ms/op
# Warmup Iteration   3: 190,948 ms/op
# Warmup Iteration   4: 190,927 ms/op
# Warmup Iteration   5: 191,410 ms/op
# Warmup Iteration   6: 191,692 ms/op
# Warmup Iteration   7: 192,206 ms/op
# Warmup Iteration   8: 191,913 ms/op
# Warmup Iteration   9: 192,326 ms/op
# Warmup Iteration  10: 195,720 ms/op
Iteration   1: 192,826 ms/op
Iteration   2: 192,876 ms/op
Iteration   3: 192,668 ms/op
Iteration   4: 192,780 ms/op
Iteration   5: 192,960 ms/op
Iteration   6: 190,547 ms/op
Iteration   7: 193,122 ms/op
Iteration   8: 192,461 ms/op
Iteration   9: 193,501 ms/op
Iteration  10: 192,117 ms/op


Result "benchmarkFind":
  192,586 ±(99.9%) 1,218 ms/op [Average]
  (min, avg, max) = (190,547, 192,586, 193,501), stdev = 0,806
  CI (99.9%): [191,368, 193,804] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 32, patternSize = 8)

# Run progress: 86,12% complete, ETA 02:09:07
# Fork: 1 of 1
# Warmup Iteration   1: 117,174 ms/op
# Warmup Iteration   2: 110,258 ms/op
# Warmup Iteration   3: 103,983 ms/op
# Warmup Iteration   4: 104,222 ms/op
# Warmup Iteration   5: 104,404 ms/op
# Warmup Iteration   6: 104,441 ms/op
# Warmup Iteration   7: 104,525 ms/op
# Warmup Iteration   8: 104,898 ms/op
# Warmup Iteration   9: 106,545 ms/op
# Warmup Iteration  10: 105,948 ms/op
Iteration   1: 105,555 ms/op
Iteration   2: 105,913 ms/op
Iteration   3: 106,548 ms/op
Iteration   4: 106,131 ms/op
Iteration   5: 106,633 ms/op
Iteration   6: 106,601 ms/op
Iteration   7: 105,967 ms/op
Iteration   8: 106,699 ms/op
Iteration   9: 106,336 ms/op
Iteration  10: 106,286 ms/op


Result "benchmarkFind":
  106,267 ±(99.9%) 0,565 ms/op [Average]
  (min, avg, max) = (105,555, 106,267, 106,699), stdev = 0,374
  CI (99.9%): [105,702, 106,832] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 32, patternSize = 16)

# Run progress: 86,17% complete, ETA 02:08:41
# Fork: 1 of 1
# Warmup Iteration   1: 73,938 ms/op
# Warmup Iteration   2: 68,193 ms/op
# Warmup Iteration   3: 69,279 ms/op
# Warmup Iteration   4: 65,741 ms/op
# Warmup Iteration   5: 64,194 ms/op
# Warmup Iteration   6: 64,543 ms/op
# Warmup Iteration   7: 64,198 ms/op
# Warmup Iteration   8: 64,424 ms/op
# Warmup Iteration   9: 65,188 ms/op
# Warmup Iteration  10: 65,373 ms/op
Iteration   1: 64,846 ms/op
Iteration   2: 65,497 ms/op
Iteration   3: 65,692 ms/op
Iteration   4: 65,357 ms/op
Iteration   5: 65,892 ms/op
Iteration   6: 65,739 ms/op
Iteration   7: 65,258 ms/op
Iteration   8: 65,584 ms/op
Iteration   9: 65,860 ms/op
Iteration  10: 66,011 ms/op


Result "benchmarkFind":
  65,573 ±(99.9%) 0,528 ms/op [Average]
  (min, avg, max) = (64,846, 65,573, 66,011), stdev = 0,349
  CI (99.9%): [65,045, 66,102] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 32, patternSize = 32)

# Run progress: 86,21% complete, ETA 02:08:14
# Fork: 1 of 1
# Warmup Iteration   1: 52,702 ms/op
# Warmup Iteration   2: 48,272 ms/op
# Warmup Iteration   3: 46,979 ms/op
# Warmup Iteration   4: 46,772 ms/op
# Warmup Iteration   5: 46,957 ms/op
# Warmup Iteration   6: 47,080 ms/op
# Warmup Iteration   7: 47,844 ms/op
# Warmup Iteration   8: 47,683 ms/op
# Warmup Iteration   9: 47,595 ms/op
# Warmup Iteration  10: 47,960 ms/op
Iteration   1: 46,900 ms/op
Iteration   2: 47,227 ms/op
Iteration   3: 47,578 ms/op
Iteration   4: 47,777 ms/op
Iteration   5: 47,918 ms/op
Iteration   6: 47,706 ms/op
Iteration   7: 47,608 ms/op
Iteration   8: 47,663 ms/op
Iteration   9: 47,810 ms/op
Iteration  10: 47,570 ms/op


Result "benchmarkFind":
  47,576 ±(99.9%) 0,455 ms/op [Average]
  (min, avg, max) = (46,900, 47,576, 47,918), stdev = 0,301
  CI (99.9%): [47,120, 48,031] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 32, patternSize = 64)

# Run progress: 86,26% complete, ETA 02:07:48
# Fork: 1 of 1
# Warmup Iteration   1: 50,548 ms/op
# Warmup Iteration   2: 44,967 ms/op
# Warmup Iteration   3: 44,039 ms/op
# Warmup Iteration   4: 44,200 ms/op
# Warmup Iteration   5: 44,404 ms/op
# Warmup Iteration   6: 44,074 ms/op
# Warmup Iteration   7: 44,552 ms/op
# Warmup Iteration   8: 44,588 ms/op
# Warmup Iteration   9: 44,979 ms/op
# Warmup Iteration  10: 44,911 ms/op
Iteration   1: 44,723 ms/op
Iteration   2: 44,792 ms/op
Iteration   3: 45,146 ms/op
Iteration   4: 44,955 ms/op
Iteration   5: 44,517 ms/op
Iteration   6: 44,985 ms/op
Iteration   7: 44,548 ms/op
Iteration   8: 45,033 ms/op
Iteration   9: 49,584 ms/op
Iteration  10: 44,142 ms/op


Result "benchmarkFind":
  45,243 ±(99.9%) 2,350 ms/op [Average]
  (min, avg, max) = (44,142, 45,243, 49,584), stdev = 1,554
  CI (99.9%): [42,893, 47,593] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 32, patternSize = 128)

# Run progress: 86,31% complete, ETA 02:07:22
# Fork: 1 of 1
# Warmup Iteration   1: 43,185 ms/op
# Warmup Iteration   2: 41,163 ms/op
# Warmup Iteration   3: 38,238 ms/op
# Warmup Iteration   4: 38,251 ms/op
# Warmup Iteration   5: 38,316 ms/op
# Warmup Iteration   6: 38,590 ms/op
# Warmup Iteration   7: 38,480 ms/op
# Warmup Iteration   8: 38,947 ms/op
# Warmup Iteration   9: 38,590 ms/op
# Warmup Iteration  10: 38,872 ms/op
Iteration   1: 38,543 ms/op
Iteration   2: 39,032 ms/op
Iteration   3: 38,896 ms/op
Iteration   4: 38,867 ms/op
Iteration   5: 39,081 ms/op
Iteration   6: 39,355 ms/op
Iteration   7: 38,920 ms/op
Iteration   8: 38,915 ms/op
Iteration   9: 38,799 ms/op
Iteration  10: 38,915 ms/op


Result "benchmarkFind":
  38,932 ±(99.9%) 0,313 ms/op [Average]
  (min, avg, max) = (38,543, 38,932, 39,355), stdev = 0,207
  CI (99.9%): [38,619, 39,246] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 32, patternSize = 256)

# Run progress: 86,35% complete, ETA 02:06:55
# Fork: 1 of 1
# Warmup Iteration   1: 47,418 ms/op
# Warmup Iteration   2: 42,501 ms/op
# Warmup Iteration   3: 42,361 ms/op
# Warmup Iteration   4: 42,694 ms/op
# Warmup Iteration   5: 41,924 ms/op
# Warmup Iteration   6: 42,160 ms/op
# Warmup Iteration   7: 41,403 ms/op
# Warmup Iteration   8: 41,678 ms/op
# Warmup Iteration   9: 42,083 ms/op
# Warmup Iteration  10: 41,527 ms/op
Iteration   1: 41,978 ms/op
Iteration   2: 41,663 ms/op
Iteration   3: 41,760 ms/op
Iteration   4: 41,689 ms/op
Iteration   5: 41,873 ms/op
Iteration   6: 41,600 ms/op
Iteration   7: 41,857 ms/op
Iteration   8: 41,635 ms/op
Iteration   9: 41,741 ms/op
Iteration  10: 41,989 ms/op


Result "benchmarkFind":
  41,778 ±(99.9%) 0,211 ms/op [Average]
  (min, avg, max) = (41,600, 41,778, 41,989), stdev = 0,139
  CI (99.9%): [41,568, 41,989] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 128, patternSize = 2)

# Run progress: 86,40% complete, ETA 02:06:29
# Fork: 1 of 1
# Warmup Iteration   1: 385,996 ms/op
# Warmup Iteration   2: 360,684 ms/op
# Warmup Iteration   3: 365,180 ms/op
# Warmup Iteration   4: 361,930 ms/op
# Warmup Iteration   5: 360,677 ms/op
# Warmup Iteration   6: 362,758 ms/op
# Warmup Iteration   7: 359,243 ms/op
# Warmup Iteration   8: 362,100 ms/op
# Warmup Iteration   9: 358,074 ms/op
# Warmup Iteration  10: 359,415 ms/op
Iteration   1: 359,865 ms/op
Iteration   2: 358,016 ms/op
Iteration   3: 360,673 ms/op
Iteration   4: 359,387 ms/op
Iteration   5: 405,872 ms/op
Iteration   6: 357,689 ms/op
Iteration   7: 357,402 ms/op
Iteration   8: 359,527 ms/op
Iteration   9: 359,157 ms/op
Iteration  10: 357,759 ms/op


Result "benchmarkFind":
  363,535 ±(99.9%) 22,549 ms/op [Average]
  (min, avg, max) = (357,402, 363,535, 405,872), stdev = 14,915
  CI (99.9%): [340,985, 386,084] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 128, patternSize = 4)

# Run progress: 86,44% complete, ETA 02:06:03
# Fork: 1 of 1
# Warmup Iteration   1: 525,894 ms/op
# Warmup Iteration   2: 484,217 ms/op
# Warmup Iteration   3: 463,413 ms/op
# Warmup Iteration   4: 460,706 ms/op
# Warmup Iteration   5: 463,364 ms/op
# Warmup Iteration   6: 461,802 ms/op
# Warmup Iteration   7: 465,404 ms/op
# Warmup Iteration   8: 463,788 ms/op
# Warmup Iteration   9: 463,425 ms/op
# Warmup Iteration  10: 471,593 ms/op
Iteration   1: 466,774 ms/op
Iteration   2: 467,885 ms/op
Iteration   3: 469,767 ms/op
Iteration   4: 466,453 ms/op
Iteration   5: 464,728 ms/op
Iteration   6: 464,334 ms/op
Iteration   7: 469,185 ms/op
Iteration   8: 466,658 ms/op
Iteration   9: 464,587 ms/op
Iteration  10: 468,517 ms/op


Result "benchmarkFind":
  466,889 ±(99.9%) 2,936 ms/op [Average]
  (min, avg, max) = (464,334, 466,889, 469,767), stdev = 1,942
  CI (99.9%): [463,952, 469,825] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 128, patternSize = 8)

# Run progress: 86,49% complete, ETA 02:05:38
# Fork: 1 of 1
# Warmup Iteration   1: 280,903 ms/op
# Warmup Iteration   2: 256,938 ms/op
# Warmup Iteration   3: 263,184 ms/op
# Warmup Iteration   4: 252,241 ms/op
# Warmup Iteration   5: 251,782 ms/op
# Warmup Iteration   6: 252,149 ms/op
# Warmup Iteration   7: 253,331 ms/op
# Warmup Iteration   8: 252,196 ms/op
# Warmup Iteration   9: 252,531 ms/op
# Warmup Iteration  10: 252,191 ms/op
Iteration   1: 252,913 ms/op
Iteration   2: 252,986 ms/op
Iteration   3: 252,086 ms/op
Iteration   4: 252,813 ms/op
Iteration   5: 253,688 ms/op
Iteration   6: 257,436 ms/op
Iteration   7: 256,956 ms/op
Iteration   8: 257,902 ms/op
Iteration   9: 257,055 ms/op
Iteration  10: 257,179 ms/op


Result "benchmarkFind":
  255,101 ±(99.9%) 3,580 ms/op [Average]
  (min, avg, max) = (252,086, 255,101, 257,902), stdev = 2,368
  CI (99.9%): [251,522, 258,681] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 128, patternSize = 16)

# Run progress: 86,53% complete, ETA 02:05:11
# Fork: 1 of 1
# Warmup Iteration   1: 221,025 ms/op
# Warmup Iteration   2: 201,498 ms/op
# Warmup Iteration   3: 204,180 ms/op
# Warmup Iteration   4: 222,117 ms/op
# Warmup Iteration   5: 194,487 ms/op
# Warmup Iteration   6: 194,637 ms/op
# Warmup Iteration   7: 194,243 ms/op
# Warmup Iteration   8: 193,938 ms/op
# Warmup Iteration   9: 194,235 ms/op
# Warmup Iteration  10: 194,439 ms/op
Iteration   1: 194,080 ms/op
Iteration   2: 194,017 ms/op
Iteration   3: 194,601 ms/op
Iteration   4: 195,030 ms/op
Iteration   5: 194,407 ms/op
Iteration   6: 195,256 ms/op
Iteration   7: 195,840 ms/op
Iteration   8: 198,550 ms/op
Iteration   9: 195,398 ms/op
Iteration  10: 196,428 ms/op


Result "benchmarkFind":
  195,361 ±(99.9%) 2,053 ms/op [Average]
  (min, avg, max) = (194,017, 195,361, 198,550), stdev = 1,358
  CI (99.9%): [193,308, 197,414] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 128, patternSize = 32)

# Run progress: 86,58% complete, ETA 02:04:45
# Fork: 1 of 1
# Warmup Iteration   1: 224,697 ms/op
# Warmup Iteration   2: 205,234 ms/op
# Warmup Iteration   3: 207,880 ms/op
# Warmup Iteration   4: 201,206 ms/op
# Warmup Iteration   5: 200,411 ms/op
# Warmup Iteration   6: 200,592 ms/op
# Warmup Iteration   7: 200,481 ms/op
# Warmup Iteration   8: 200,550 ms/op
# Warmup Iteration   9: 200,949 ms/op
# Warmup Iteration  10: 202,220 ms/op
Iteration   1: 200,772 ms/op
Iteration   2: 200,865 ms/op
Iteration   3: 201,127 ms/op
Iteration   4: 202,769 ms/op
Iteration   5: 202,261 ms/op
Iteration   6: 203,505 ms/op
Iteration   7: 201,977 ms/op
Iteration   8: 202,193 ms/op
Iteration   9: 201,731 ms/op
Iteration  10: 202,579 ms/op


Result "benchmarkFind":
  201,978 ±(99.9%) 1,326 ms/op [Average]
  (min, avg, max) = (200,772, 201,978, 203,505), stdev = 0,877
  CI (99.9%): [200,652, 203,304] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 128, patternSize = 64)

# Run progress: 86,63% complete, ETA 02:04:19
# Fork: 1 of 1
# Warmup Iteration   1: 238,886 ms/op
# Warmup Iteration   2: 222,778 ms/op
# Warmup Iteration   3: 222,499 ms/op
# Warmup Iteration   4: 220,119 ms/op
# Warmup Iteration   5: 218,863 ms/op
# Warmup Iteration   6: 220,394 ms/op
# Warmup Iteration   7: 218,628 ms/op
# Warmup Iteration   8: 216,533 ms/op
# Warmup Iteration   9: 219,402 ms/op
# Warmup Iteration  10: 216,902 ms/op
Iteration   1: 218,884 ms/op
Iteration   2: 217,055 ms/op
Iteration   3: 218,108 ms/op
Iteration   4: 216,779 ms/op
Iteration   5: 218,191 ms/op
Iteration   6: 218,627 ms/op
Iteration   7: 238,269 ms/op
Iteration   8: 215,410 ms/op
Iteration   9: 215,768 ms/op
Iteration  10: 218,948 ms/op


Result "benchmarkFind":
  219,604 ±(99.9%) 10,096 ms/op [Average]
  (min, avg, max) = (215,410, 219,604, 238,269), stdev = 6,678
  CI (99.9%): [209,508, 229,700] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 128, patternSize = 128)

# Run progress: 86,67% complete, ETA 02:03:53
# Fork: 1 of 1
# Warmup Iteration   1: 228,570 ms/op
# Warmup Iteration   2: 221,622 ms/op
# Warmup Iteration   3: 210,320 ms/op
# Warmup Iteration   4: 212,069 ms/op
# Warmup Iteration   5: 210,096 ms/op
# Warmup Iteration   6: 210,278 ms/op
# Warmup Iteration   7: 210,196 ms/op
# Warmup Iteration   8: 209,400 ms/op
# Warmup Iteration   9: 210,425 ms/op
# Warmup Iteration  10: 209,173 ms/op
Iteration   1: 209,892 ms/op
Iteration   2: 210,735 ms/op
Iteration   3: 210,106 ms/op
Iteration   4: 210,802 ms/op
Iteration   5: 209,863 ms/op
Iteration   6: 210,509 ms/op
Iteration   7: 208,609 ms/op
Iteration   8: 208,657 ms/op
Iteration   9: 208,260 ms/op
Iteration  10: 208,742 ms/op


Result "benchmarkFind":
  209,618 ±(99.9%) 1,458 ms/op [Average]
  (min, avg, max) = (208,260, 209,618, 210,802), stdev = 0,964
  CI (99.9%): [208,159, 211,076] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternNumber = 128, patternSize = 256)

# Run progress: 86,72% complete, ETA 02:03:27
# Fork: 1 of 1
# Warmup Iteration   1: 231,264 ms/op
# Warmup Iteration   2: 214,982 ms/op
# Warmup Iteration   3: 208,604 ms/op
# Warmup Iteration   4: 206,103 ms/op
# Warmup Iteration   5: 207,391 ms/op
# Warmup Iteration   6: 207,194 ms/op
# Warmup Iteration   7: 206,389 ms/op
# Warmup Iteration   8: 206,153 ms/op
# Warmup Iteration   9: 206,199 ms/op
# Warmup Iteration  10: 207,167 ms/op
Iteration   1: 205,432 ms/op
Iteration   2: 206,404 ms/op
Iteration   3: 207,072 ms/op
Iteration   4: 205,106 ms/op
Iteration   5: 206,435 ms/op
Iteration   6: 208,352 ms/op
Iteration   7: 207,189 ms/op
Iteration   8: 205,412 ms/op
Iteration   9: 205,459 ms/op
Iteration  10: 206,483 ms/op


Result "benchmarkFind":
  206,334 ±(99.9%) 1,539 ms/op [Average]
  (min, avg, max) = (205,106, 206,334, 208,352), stdev = 1,018
  CI (99.9%): [204,796, 207,873] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 2, patternSize = 2)

# Run progress: 86,76% complete, ETA 02:03:01
# Fork: 1 of 1
# Warmup Iteration   1: 21,444 ms/op
# Warmup Iteration   2: 20,070 ms/op
# Warmup Iteration   3: 19,295 ms/op
# Warmup Iteration   4: 19,202 ms/op
# Warmup Iteration   5: 19,118 ms/op
# Warmup Iteration   6: 18,946 ms/op
# Warmup Iteration   7: 18,972 ms/op
# Warmup Iteration   8: 19,091 ms/op
# Warmup Iteration   9: 19,010 ms/op
# Warmup Iteration  10: 19,070 ms/op
Iteration   1: 19,105 ms/op
Iteration   2: 21,804 ms/op
Iteration   3: 19,433 ms/op
Iteration   4: 18,945 ms/op
Iteration   5: 18,956 ms/op
Iteration   6: 19,048 ms/op
Iteration   7: 19,090 ms/op
Iteration   8: 19,059 ms/op
Iteration   9: 19,180 ms/op
Iteration  10: 18,931 ms/op


Result "benchmarkFind":
  19,355 ±(99.9%) 1,320 ms/op [Average]
  (min, avg, max) = (18,931, 19,355, 21,804), stdev = 0,873
  CI (99.9%): [18,035, 20,674] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 2, patternSize = 4)

# Run progress: 86,81% complete, ETA 02:02:34
# Fork: 1 of 1
# Warmup Iteration   1: 13,472 ms/op
# Warmup Iteration   2: 12,263 ms/op
# Warmup Iteration   3: 12,349 ms/op
# Warmup Iteration   4: 12,297 ms/op
# Warmup Iteration   5: 12,370 ms/op
# Warmup Iteration   6: 12,339 ms/op
# Warmup Iteration   7: 12,345 ms/op
# Warmup Iteration   8: 12,412 ms/op
# Warmup Iteration   9: 12,372 ms/op
# Warmup Iteration  10: 12,496 ms/op
Iteration   1: 12,299 ms/op
Iteration   2: 12,330 ms/op
Iteration   3: 12,286 ms/op
Iteration   4: 12,423 ms/op
Iteration   5: 12,398 ms/op
Iteration   6: 12,328 ms/op
Iteration   7: 12,407 ms/op
Iteration   8: 12,430 ms/op
Iteration   9: 12,517 ms/op
Iteration  10: 12,351 ms/op


Result "benchmarkFind":
  12,377 ±(99.9%) 0,107 ms/op [Average]
  (min, avg, max) = (12,286, 12,377, 12,517), stdev = 0,071
  CI (99.9%): [12,270, 12,484] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 2, patternSize = 8)

# Run progress: 86,86% complete, ETA 02:02:08
# Fork: 1 of 1
# Warmup Iteration   1: 8,368 ms/op
# Warmup Iteration   2: 7,567 ms/op
# Warmup Iteration   3: 7,544 ms/op
# Warmup Iteration   4: 7,514 ms/op
# Warmup Iteration   5: 7,510 ms/op
# Warmup Iteration   6: 7,555 ms/op
# Warmup Iteration   7: 7,679 ms/op
# Warmup Iteration   8: 7,690 ms/op
# Warmup Iteration   9: 7,710 ms/op
# Warmup Iteration  10: 7,623 ms/op
Iteration   1: 7,664 ms/op
Iteration   2: 7,655 ms/op
Iteration   3: 7,592 ms/op
Iteration   4: 7,599 ms/op
Iteration   5: 7,612 ms/op
Iteration   6: 7,561 ms/op
Iteration   7: 7,641 ms/op
Iteration   8: 7,686 ms/op
Iteration   9: 7,630 ms/op
Iteration  10: 7,602 ms/op


Result "benchmarkFind":
  7,624 ±(99.9%) 0,057 ms/op [Average]
  (min, avg, max) = (7,561, 7,624, 7,686), stdev = 0,038
  CI (99.9%): [7,567, 7,682] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 2, patternSize = 16)

# Run progress: 86,90% complete, ETA 02:01:41
# Fork: 1 of 1
# Warmup Iteration   1: 4,864 ms/op
# Warmup Iteration   2: 4,612 ms/op
# Warmup Iteration   3: 4,358 ms/op
# Warmup Iteration   4: 4,343 ms/op
# Warmup Iteration   5: 4,377 ms/op
# Warmup Iteration   6: 4,426 ms/op
# Warmup Iteration   7: 4,410 ms/op
# Warmup Iteration   8: 4,415 ms/op
# Warmup Iteration   9: 4,412 ms/op
# Warmup Iteration  10: 5,196 ms/op
Iteration   1: 4,425 ms/op
Iteration   2: 4,525 ms/op
Iteration   3: 4,386 ms/op
Iteration   4: 4,381 ms/op
Iteration   5: 4,411 ms/op
Iteration   6: 4,406 ms/op
Iteration   7: 4,414 ms/op
Iteration   8: 4,459 ms/op
Iteration   9: 4,441 ms/op
Iteration  10: 4,459 ms/op


Result "benchmarkFind":
  4,431 ±(99.9%) 0,064 ms/op [Average]
  (min, avg, max) = (4,381, 4,431, 4,525), stdev = 0,043
  CI (99.9%): [4,366, 4,495] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 2, patternSize = 32)

# Run progress: 86,95% complete, ETA 02:01:15
# Fork: 1 of 1
# Warmup Iteration   1: 2,727 ms/op
# Warmup Iteration   2: 2,526 ms/op
# Warmup Iteration   3: 2,499 ms/op
# Warmup Iteration   4: 2,475 ms/op
# Warmup Iteration   5: 2,490 ms/op
# Warmup Iteration   6: 2,494 ms/op
# Warmup Iteration   7: 2,500 ms/op
# Warmup Iteration   8: 2,520 ms/op
# Warmup Iteration   9: 2,520 ms/op
# Warmup Iteration  10: 2,519 ms/op
Iteration   1: 2,518 ms/op
Iteration   2: 2,522 ms/op
Iteration   3: 2,528 ms/op
Iteration   4: 2,540 ms/op
Iteration   5: 2,500 ms/op
Iteration   6: 2,520 ms/op
Iteration   7: 2,566 ms/op
Iteration   8: 2,550 ms/op
Iteration   9: 2,552 ms/op
Iteration  10: 2,509 ms/op


Result "benchmarkFind":
  2,531 ±(99.9%) 0,031 ms/op [Average]
  (min, avg, max) = (2,500, 2,531, 2,566), stdev = 0,021
  CI (99.9%): [2,499, 2,562] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 2, patternSize = 64)

# Run progress: 86,99% complete, ETA 02:00:49
# Fork: 1 of 1
# Warmup Iteration   1: 1,486 ms/op
# Warmup Iteration   2: 1,379 ms/op
# Warmup Iteration   3: 1,351 ms/op
# Warmup Iteration   4: 1,356 ms/op
# Warmup Iteration   5: 1,370 ms/op
# Warmup Iteration   6: 1,366 ms/op
# Warmup Iteration   7: 1,372 ms/op
# Warmup Iteration   8: 1,369 ms/op
# Warmup Iteration   9: 1,369 ms/op
# Warmup Iteration  10: 1,374 ms/op
Iteration   1: 1,370 ms/op
Iteration   2: 1,368 ms/op
Iteration   3: 1,378 ms/op
Iteration   4: 1,375 ms/op
Iteration   5: 1,371 ms/op
Iteration   6: 1,366 ms/op
Iteration   7: 1,371 ms/op
Iteration   8: 1,379 ms/op
Iteration   9: 1,380 ms/op
Iteration  10: 1,375 ms/op


Result "benchmarkFind":
  1,373 ±(99.9%) 0,007 ms/op [Average]
  (min, avg, max) = (1,366, 1,373, 1,380), stdev = 0,005
  CI (99.9%): [1,366, 1,381] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 2, patternSize = 128)

# Run progress: 87,04% complete, ETA 02:00:22
# Fork: 1 of 1
# Warmup Iteration   1: 0,821 ms/op
# Warmup Iteration   2: 0,756 ms/op
# Warmup Iteration   3: 0,747 ms/op
# Warmup Iteration   4: 0,744 ms/op
# Warmup Iteration   5: 0,753 ms/op
# Warmup Iteration   6: 0,743 ms/op
# Warmup Iteration   7: 0,749 ms/op
# Warmup Iteration   8: 0,815 ms/op
# Warmup Iteration   9: 0,776 ms/op
# Warmup Iteration  10: 0,741 ms/op
Iteration   1: 0,740 ms/op
Iteration   2: 0,746 ms/op
Iteration   3: 0,753 ms/op
Iteration   4: 0,753 ms/op
Iteration   5: 0,752 ms/op
Iteration   6: 0,752 ms/op
Iteration   7: 0,760 ms/op
Iteration   8: 0,757 ms/op
Iteration   9: 0,752 ms/op
Iteration  10: 0,751 ms/op


Result "benchmarkFind":
  0,752 ±(99.9%) 0,008 ms/op [Average]
  (min, avg, max) = (0,740, 0,752, 0,760), stdev = 0,006
  CI (99.9%): [0,743, 0,760] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 2, patternSize = 256)

# Run progress: 87,09% complete, ETA 01:59:56
# Fork: 1 of 1
# Warmup Iteration   1: 0,547 ms/op
# Warmup Iteration   2: 0,505 ms/op
# Warmup Iteration   3: 0,500 ms/op
# Warmup Iteration   4: 0,491 ms/op
# Warmup Iteration   5: 0,496 ms/op
# Warmup Iteration   6: 0,496 ms/op
# Warmup Iteration   7: 0,493 ms/op
# Warmup Iteration   8: 0,504 ms/op
# Warmup Iteration   9: 0,492 ms/op
# Warmup Iteration  10: 0,494 ms/op
Iteration   1: 0,498 ms/op
Iteration   2: 0,506 ms/op
Iteration   3: 0,505 ms/op
Iteration   4: 0,506 ms/op
Iteration   5: 0,503 ms/op
Iteration   6: 0,503 ms/op
Iteration   7: 0,504 ms/op
Iteration   8: 0,504 ms/op
Iteration   9: 0,500 ms/op
Iteration  10: 0,504 ms/op


Result "benchmarkFind":
  0,503 ±(99.9%) 0,004 ms/op [Average]
  (min, avg, max) = (0,498, 0,503, 0,506), stdev = 0,002
  CI (99.9%): [0,500, 0,507] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 8, patternSize = 2)

# Run progress: 87,13% complete, ETA 01:59:30
# Fork: 1 of 1
# Warmup Iteration   1: 27,251 ms/op
# Warmup Iteration   2: 25,043 ms/op
# Warmup Iteration   3: 24,017 ms/op
# Warmup Iteration   4: 23,963 ms/op
# Warmup Iteration   5: 23,874 ms/op
# Warmup Iteration   6: 23,752 ms/op
# Warmup Iteration   7: 23,853 ms/op
# Warmup Iteration   8: 23,963 ms/op
# Warmup Iteration   9: 23,853 ms/op
# Warmup Iteration  10: 23,971 ms/op
Iteration   1: 24,239 ms/op
Iteration   2: 24,197 ms/op
Iteration   3: 24,477 ms/op
Iteration   4: 24,085 ms/op
Iteration   5: 24,121 ms/op
Iteration   6: 24,284 ms/op
Iteration   7: 24,072 ms/op
Iteration   8: 24,094 ms/op
Iteration   9: 24,214 ms/op
Iteration  10: 24,198 ms/op


Result "benchmarkFind":
  24,198 ±(99.9%) 0,183 ms/op [Average]
  (min, avg, max) = (24,072, 24,198, 24,477), stdev = 0,121
  CI (99.9%): [24,015, 24,382] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 8, patternSize = 4)

# Run progress: 87,18% complete, ETA 01:59:03
# Fork: 1 of 1
# Warmup Iteration   1: 17,290 ms/op
# Warmup Iteration   2: 15,885 ms/op
# Warmup Iteration   3: 15,588 ms/op
# Warmup Iteration   4: 15,653 ms/op
# Warmup Iteration   5: 15,696 ms/op
# Warmup Iteration   6: 15,726 ms/op
# Warmup Iteration   7: 17,707 ms/op
# Warmup Iteration   8: 15,561 ms/op
# Warmup Iteration   9: 15,633 ms/op
# Warmup Iteration  10: 15,632 ms/op
Iteration   1: 15,804 ms/op
Iteration   2: 15,845 ms/op
Iteration   3: 15,956 ms/op
Iteration   4: 15,931 ms/op
Iteration   5: 15,955 ms/op
Iteration   6: 16,048 ms/op
Iteration   7: 15,941 ms/op
Iteration   8: 15,947 ms/op
Iteration   9: 16,064 ms/op
Iteration  10: 16,080 ms/op


Result "benchmarkFind":
  15,957 ±(99.9%) 0,135 ms/op [Average]
  (min, avg, max) = (15,804, 15,957, 16,080), stdev = 0,089
  CI (99.9%): [15,822, 16,092] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 8, patternSize = 8)

# Run progress: 87,22% complete, ETA 01:58:37
# Fork: 1 of 1
# Warmup Iteration   1: 10,884 ms/op
# Warmup Iteration   2: 10,119 ms/op
# Warmup Iteration   3: 9,961 ms/op
# Warmup Iteration   4: 9,982 ms/op
# Warmup Iteration   5: 9,982 ms/op
# Warmup Iteration   6: 9,999 ms/op
# Warmup Iteration   7: 10,041 ms/op
# Warmup Iteration   8: 10,148 ms/op
# Warmup Iteration   9: 10,138 ms/op
# Warmup Iteration  10: 10,189 ms/op
Iteration   1: 10,162 ms/op
Iteration   2: 10,131 ms/op
Iteration   3: 10,148 ms/op
Iteration   4: 10,151 ms/op
Iteration   5: 10,151 ms/op
Iteration   6: 10,152 ms/op
Iteration   7: 10,177 ms/op
Iteration   8: 10,145 ms/op
Iteration   9: 10,195 ms/op
Iteration  10: 10,141 ms/op


Result "benchmarkFind":
  10,155 ±(99.9%) 0,028 ms/op [Average]
  (min, avg, max) = (10,131, 10,155, 10,195), stdev = 0,018
  CI (99.9%): [10,127, 10,183] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 8, patternSize = 16)

# Run progress: 87,27% complete, ETA 01:58:11
# Fork: 1 of 1
# Warmup Iteration   1: 5,863 ms/op
# Warmup Iteration   2: 5,593 ms/op
# Warmup Iteration   3: 5,256 ms/op
# Warmup Iteration   4: 5,284 ms/op
# Warmup Iteration   5: 5,274 ms/op
# Warmup Iteration   6: 5,278 ms/op
# Warmup Iteration   7: 5,283 ms/op
# Warmup Iteration   8: 5,267 ms/op
# Warmup Iteration   9: 5,282 ms/op
# Warmup Iteration  10: 5,341 ms/op
Iteration   1: 5,337 ms/op
Iteration   2: 5,396 ms/op
Iteration   3: 5,406 ms/op
Iteration   4: 5,395 ms/op
Iteration   5: 5,436 ms/op
Iteration   6: 5,406 ms/op
Iteration   7: 5,448 ms/op
Iteration   8: 5,401 ms/op
Iteration   9: 5,395 ms/op
Iteration  10: 5,386 ms/op


Result "benchmarkFind":
  5,400 ±(99.9%) 0,045 ms/op [Average]
  (min, avg, max) = (5,337, 5,400, 5,448), stdev = 0,030
  CI (99.9%): [5,356, 5,445] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 8, patternSize = 32)

# Run progress: 87,32% complete, ETA 01:57:44
# Fork: 1 of 1
# Warmup Iteration   1: 3,366 ms/op
# Warmup Iteration   2: 3,152 ms/op
# Warmup Iteration   3: 3,031 ms/op
# Warmup Iteration   4: 3,017 ms/op
# Warmup Iteration   5: 3,358 ms/op
# Warmup Iteration   6: 3,009 ms/op
# Warmup Iteration   7: 3,007 ms/op
# Warmup Iteration   8: 3,012 ms/op
# Warmup Iteration   9: 3,023 ms/op
# Warmup Iteration  10: 3,022 ms/op
Iteration   1: 3,035 ms/op
Iteration   2: 3,019 ms/op
Iteration   3: 3,024 ms/op
Iteration   4: 3,073 ms/op
Iteration   5: 3,060 ms/op
Iteration   6: 3,066 ms/op
Iteration   7: 3,085 ms/op
Iteration   8: 3,093 ms/op
Iteration   9: 3,109 ms/op
Iteration  10: 3,086 ms/op


Result "benchmarkFind":
  3,065 ±(99.9%) 0,046 ms/op [Average]
  (min, avg, max) = (3,019, 3,065, 3,109), stdev = 0,031
  CI (99.9%): [3,019, 3,111] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 8, patternSize = 64)

# Run progress: 87,36% complete, ETA 01:57:18
# Fork: 1 of 1
# Warmup Iteration   1: 2,126 ms/op
# Warmup Iteration   2: 1,960 ms/op
# Warmup Iteration   3: 1,909 ms/op
# Warmup Iteration   4: 1,958 ms/op
# Warmup Iteration   5: 1,916 ms/op
# Warmup Iteration   6: 1,911 ms/op
# Warmup Iteration   7: 1,934 ms/op
# Warmup Iteration   8: 1,938 ms/op
# Warmup Iteration   9: 1,943 ms/op
# Warmup Iteration  10: 1,958 ms/op
Iteration   1: 1,975 ms/op
Iteration   2: 1,960 ms/op
Iteration   3: 1,974 ms/op
Iteration   4: 1,975 ms/op
Iteration   5: 1,957 ms/op
Iteration   6: 1,967 ms/op
Iteration   7: 1,973 ms/op
Iteration   8: 1,966 ms/op
Iteration   9: 1,963 ms/op
Iteration  10: 1,965 ms/op


Result "benchmarkFind":
  1,968 ±(99.9%) 0,010 ms/op [Average]
  (min, avg, max) = (1,957, 1,968, 1,975), stdev = 0,006
  CI (99.9%): [1,958, 1,977] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 8, patternSize = 128)

# Run progress: 87,41% complete, ETA 01:56:52
# Fork: 1 of 1
# Warmup Iteration   1: 1,658 ms/op
# Warmup Iteration   2: 1,515 ms/op
# Warmup Iteration   3: 1,460 ms/op
# Warmup Iteration   4: 1,463 ms/op
# Warmup Iteration   5: 1,462 ms/op
# Warmup Iteration   6: 1,468 ms/op
# Warmup Iteration   7: 1,465 ms/op
# Warmup Iteration   8: 1,467 ms/op
# Warmup Iteration   9: 1,479 ms/op
# Warmup Iteration  10: 1,494 ms/op
Iteration   1: 1,492 ms/op
Iteration   2: 1,498 ms/op
Iteration   3: 1,492 ms/op
Iteration   4: 1,505 ms/op
Iteration   5: 1,484 ms/op
Iteration   6: 1,486 ms/op
Iteration   7: 1,487 ms/op
Iteration   8: 1,490 ms/op
Iteration   9: 1,489 ms/op
Iteration  10: 1,493 ms/op


Result "benchmarkFind":
  1,491 ±(99.9%) 0,009 ms/op [Average]
  (min, avg, max) = (1,484, 1,491, 1,505), stdev = 0,006
  CI (99.9%): [1,482, 1,501] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 8, patternSize = 256)

# Run progress: 87,45% complete, ETA 01:56:25
# Fork: 1 of 1
# Warmup Iteration   1: 1,336 ms/op
# Warmup Iteration   2: 1,236 ms/op
# Warmup Iteration   3: 1,308 ms/op
# Warmup Iteration   4: 1,240 ms/op
# Warmup Iteration   5: 1,202 ms/op
# Warmup Iteration   6: 1,210 ms/op
# Warmup Iteration   7: 1,217 ms/op
# Warmup Iteration   8: 1,221 ms/op
# Warmup Iteration   9: 1,218 ms/op
# Warmup Iteration  10: 1,225 ms/op
Iteration   1: 1,227 ms/op
Iteration   2: 1,224 ms/op
Iteration   3: 1,226 ms/op
Iteration   4: 1,222 ms/op
Iteration   5: 1,224 ms/op
Iteration   6: 1,221 ms/op
Iteration   7: 1,225 ms/op
Iteration   8: 1,214 ms/op
Iteration   9: 1,212 ms/op
Iteration  10: 1,222 ms/op


Result "benchmarkFind":
  1,222 ±(99.9%) 0,007 ms/op [Average]
  (min, avg, max) = (1,212, 1,222, 1,227), stdev = 0,005
  CI (99.9%): [1,214, 1,229] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 32, patternSize = 2)

# Run progress: 87,50% complete, ETA 01:55:59
# Fork: 1 of 1
# Warmup Iteration   1: 81,912 ms/op
# Warmup Iteration   2: 72,792 ms/op
# Warmup Iteration   3: 71,920 ms/op
# Warmup Iteration   4: 71,824 ms/op
# Warmup Iteration   5: 71,952 ms/op
# Warmup Iteration   6: 72,031 ms/op
# Warmup Iteration   7: 72,225 ms/op
# Warmup Iteration   8: 72,142 ms/op
# Warmup Iteration   9: 72,326 ms/op
# Warmup Iteration  10: 72,723 ms/op
Iteration   1: 72,813 ms/op
Iteration   2: 72,759 ms/op
Iteration   3: 72,750 ms/op
Iteration   4: 72,577 ms/op
Iteration   5: 73,157 ms/op
Iteration   6: 72,436 ms/op
Iteration   7: 72,754 ms/op
Iteration   8: 72,439 ms/op
Iteration   9: 72,785 ms/op
Iteration  10: 72,300 ms/op


Result "benchmarkFind":
  72,677 ±(99.9%) 0,372 ms/op [Average]
  (min, avg, max) = (72,300, 72,677, 73,157), stdev = 0,246
  CI (99.9%): [72,305, 73,049] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 32, patternSize = 4)

# Run progress: 87,55% complete, ETA 01:55:33
# Fork: 1 of 1
# Warmup Iteration   1: 23,748 ms/op
# Warmup Iteration   2: 22,330 ms/op
# Warmup Iteration   3: 21,746 ms/op
# Warmup Iteration   4: 21,747 ms/op
# Warmup Iteration   5: 21,815 ms/op
# Warmup Iteration   6: 21,891 ms/op
# Warmup Iteration   7: 21,788 ms/op
# Warmup Iteration   8: 21,889 ms/op
# Warmup Iteration   9: 22,054 ms/op
# Warmup Iteration  10: 22,019 ms/op
Iteration   1: 21,895 ms/op
Iteration   2: 21,866 ms/op
Iteration   3: 21,883 ms/op
Iteration   4: 21,978 ms/op
Iteration   5: 21,955 ms/op
Iteration   6: 22,125 ms/op
Iteration   7: 21,932 ms/op
Iteration   8: 21,919 ms/op
Iteration   9: 22,109 ms/op
Iteration  10: 21,909 ms/op


Result "benchmarkFind":
  21,957 ±(99.9%) 0,137 ms/op [Average]
  (min, avg, max) = (21,866, 21,957, 22,125), stdev = 0,090
  CI (99.9%): [21,821, 22,094] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 32, patternSize = 8)

# Run progress: 87,59% complete, ETA 01:55:07
# Fork: 1 of 1
# Warmup Iteration   1: 16,928 ms/op
# Warmup Iteration   2: 13,570 ms/op
# Warmup Iteration   3: 13,501 ms/op
# Warmup Iteration   4: 13,243 ms/op
# Warmup Iteration   5: 13,050 ms/op
# Warmup Iteration   6: 13,093 ms/op
# Warmup Iteration   7: 13,079 ms/op
# Warmup Iteration   8: 13,146 ms/op
# Warmup Iteration   9: 13,147 ms/op
# Warmup Iteration  10: 13,131 ms/op
Iteration   1: 13,105 ms/op
Iteration   2: 13,148 ms/op
Iteration   3: 13,167 ms/op
Iteration   4: 13,224 ms/op
Iteration   5: 13,113 ms/op
Iteration   6: 13,205 ms/op
Iteration   7: 13,322 ms/op
Iteration   8: 13,312 ms/op
Iteration   9: 13,203 ms/op
Iteration  10: 13,211 ms/op


Result "benchmarkFind":
  13,201 ±(99.9%) 0,111 ms/op [Average]
  (min, avg, max) = (13,105, 13,201, 13,322), stdev = 0,073
  CI (99.9%): [13,090, 13,312] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 32, patternSize = 16)

# Run progress: 87,64% complete, ETA 01:54:40
# Fork: 1 of 1
# Warmup Iteration   1: 8,839 ms/op
# Warmup Iteration   2: 8,483 ms/op
# Warmup Iteration   3: 8,006 ms/op
# Warmup Iteration   4: 7,983 ms/op
# Warmup Iteration   5: 7,998 ms/op
# Warmup Iteration   6: 8,027 ms/op
# Warmup Iteration   7: 8,056 ms/op
# Warmup Iteration   8: 7,991 ms/op
# Warmup Iteration   9: 8,042 ms/op
# Warmup Iteration  10: 7,939 ms/op
Iteration   1: 7,992 ms/op
Iteration   2: 8,018 ms/op
Iteration   3: 8,048 ms/op
Iteration   4: 8,099 ms/op
Iteration   5: 8,042 ms/op
Iteration   6: 8,080 ms/op
Iteration   7: 7,979 ms/op
Iteration   8: 8,092 ms/op
Iteration   9: 8,029 ms/op
Iteration  10: 8,052 ms/op


Result "benchmarkFind":
  8,043 ±(99.9%) 0,061 ms/op [Average]
  (min, avg, max) = (7,979, 8,043, 8,099), stdev = 0,040
  CI (99.9%): [7,983, 8,104] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 32, patternSize = 32)

# Run progress: 87,68% complete, ETA 01:54:14
# Fork: 1 of 1
# Warmup Iteration   1: 6,550 ms/op
# Warmup Iteration   2: 6,118 ms/op
# Warmup Iteration   3: 5,955 ms/op
# Warmup Iteration   4: 5,977 ms/op
# Warmup Iteration   5: 5,926 ms/op
# Warmup Iteration   6: 5,931 ms/op
# Warmup Iteration   7: 5,949 ms/op
# Warmup Iteration   8: 5,987 ms/op
# Warmup Iteration   9: 6,010 ms/op
# Warmup Iteration  10: 6,005 ms/op
Iteration   1: 6,005 ms/op
Iteration   2: 5,988 ms/op
Iteration   3: 6,012 ms/op
Iteration   4: 6,007 ms/op
Iteration   5: 5,983 ms/op
Iteration   6: 6,033 ms/op
Iteration   7: 6,005 ms/op
Iteration   8: 5,981 ms/op
Iteration   9: 6,480 ms/op
Iteration  10: 6,103 ms/op


Result "benchmarkFind":
  6,060 ±(99.9%) 0,229 ms/op [Average]
  (min, avg, max) = (5,981, 6,060, 6,480), stdev = 0,152
  CI (99.9%): [5,830, 6,289] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 32, patternSize = 64)

# Run progress: 87,73% complete, ETA 01:53:48
# Fork: 1 of 1
# Warmup Iteration   1: 5,653 ms/op
# Warmup Iteration   2: 5,340 ms/op
# Warmup Iteration   3: 5,125 ms/op
# Warmup Iteration   4: 5,155 ms/op
# Warmup Iteration   5: 5,184 ms/op
# Warmup Iteration   6: 5,173 ms/op
# Warmup Iteration   7: 5,148 ms/op
# Warmup Iteration   8: 5,155 ms/op
# Warmup Iteration   9: 5,220 ms/op
# Warmup Iteration  10: 5,197 ms/op
Iteration   1: 5,245 ms/op
Iteration   2: 5,232 ms/op
Iteration   3: 5,233 ms/op
Iteration   4: 5,219 ms/op
Iteration   5: 5,239 ms/op
Iteration   6: 5,254 ms/op
Iteration   7: 5,221 ms/op
Iteration   8: 5,228 ms/op
Iteration   9: 5,294 ms/op
Iteration  10: 5,189 ms/op


Result "benchmarkFind":
  5,235 ±(99.9%) 0,041 ms/op [Average]
  (min, avg, max) = (5,189, 5,235, 5,294), stdev = 0,027
  CI (99.9%): [5,194, 5,276] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 32, patternSize = 128)

# Run progress: 87,78% complete, ETA 01:53:21
# Fork: 1 of 1
# Warmup Iteration   1: 5,730 ms/op
# Warmup Iteration   2: 5,351 ms/op
# Warmup Iteration   3: 5,186 ms/op
# Warmup Iteration   4: 5,163 ms/op
# Warmup Iteration   5: 5,142 ms/op
# Warmup Iteration   6: 5,161 ms/op
# Warmup Iteration   7: 5,185 ms/op
# Warmup Iteration   8: 5,171 ms/op
# Warmup Iteration   9: 5,179 ms/op
# Warmup Iteration  10: 5,183 ms/op
Iteration   1: 5,225 ms/op
Iteration   2: 5,240 ms/op
Iteration   3: 5,226 ms/op
Iteration   4: 5,261 ms/op
Iteration   5: 5,214 ms/op
Iteration   6: 5,239 ms/op
Iteration   7: 5,244 ms/op
Iteration   8: 5,186 ms/op
Iteration   9: 5,197 ms/op
Iteration  10: 5,248 ms/op


Result "benchmarkFind":
  5,228 ±(99.9%) 0,035 ms/op [Average]
  (min, avg, max) = (5,186, 5,228, 5,261), stdev = 0,023
  CI (99.9%): [5,193, 5,263] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 32, patternSize = 256)

# Run progress: 87,82% complete, ETA 01:52:55
# Fork: 1 of 1
# Warmup Iteration   1: 6,515 ms/op
# Warmup Iteration   2: 6,097 ms/op
# Warmup Iteration   3: 5,904 ms/op
# Warmup Iteration   4: 5,877 ms/op
# Warmup Iteration   5: 5,875 ms/op
# Warmup Iteration   6: 5,890 ms/op
# Warmup Iteration   7: 5,922 ms/op
# Warmup Iteration   8: 5,851 ms/op
# Warmup Iteration   9: 5,817 ms/op
# Warmup Iteration  10: 5,849 ms/op
Iteration   1: 5,910 ms/op
Iteration   2: 5,929 ms/op
Iteration   3: 5,928 ms/op
Iteration   4: 5,968 ms/op
Iteration   5: 5,873 ms/op
Iteration   6: 5,962 ms/op
Iteration   7: 5,950 ms/op
Iteration   8: 6,647 ms/op
Iteration   9: 5,843 ms/op
Iteration  10: 5,880 ms/op


Result "benchmarkFind":
  5,989 ±(99.9%) 0,355 ms/op [Average]
  (min, avg, max) = (5,843, 5,989, 6,647), stdev = 0,235
  CI (99.9%): [5,634, 6,344] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 128, patternSize = 2)

# Run progress: 87,87% complete, ETA 01:52:29
# Fork: 1 of 1
# Warmup Iteration   1: 518,209 ms/op
# Warmup Iteration   2: 485,693 ms/op
# Warmup Iteration   3: 480,163 ms/op
# Warmup Iteration   4: 480,899 ms/op
# Warmup Iteration   5: 477,185 ms/op
# Warmup Iteration   6: 479,685 ms/op
# Warmup Iteration   7: 480,064 ms/op
# Warmup Iteration   8: 481,296 ms/op
# Warmup Iteration   9: 484,270 ms/op
# Warmup Iteration  10: 478,527 ms/op
Iteration   1: 477,479 ms/op
Iteration   2: 484,947 ms/op
Iteration   3: 483,001 ms/op
Iteration   4: 478,790 ms/op
Iteration   5: 482,797 ms/op
Iteration   6: 482,504 ms/op
Iteration   7: 479,642 ms/op
Iteration   8: 481,170 ms/op
Iteration   9: 477,775 ms/op
Iteration  10: 479,804 ms/op


Result "benchmarkFind":
  480,791 ±(99.9%) 3,758 ms/op [Average]
  (min, avg, max) = (477,479, 480,791, 484,947), stdev = 2,486
  CI (99.9%): [477,033, 484,549] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 128, patternSize = 4)

# Run progress: 87,91% complete, ETA 01:52:04
# Fork: 1 of 1
# Warmup Iteration   1: 41,868 ms/op
# Warmup Iteration   2: 36,823 ms/op
# Warmup Iteration   3: 36,418 ms/op
# Warmup Iteration   4: 36,824 ms/op
# Warmup Iteration   5: 36,530 ms/op
# Warmup Iteration   6: 37,119 ms/op
# Warmup Iteration   7: 36,815 ms/op
# Warmup Iteration   8: 36,762 ms/op
# Warmup Iteration   9: 37,158 ms/op
# Warmup Iteration  10: 37,001 ms/op
Iteration   1: 37,001 ms/op
Iteration   2: 36,688 ms/op
Iteration   3: 36,330 ms/op
Iteration   4: 36,598 ms/op
Iteration   5: 36,905 ms/op
Iteration   6: 37,007 ms/op
Iteration   7: 36,655 ms/op
Iteration   8: 36,786 ms/op
Iteration   9: 36,880 ms/op
Iteration  10: 36,906 ms/op


Result "benchmarkFind":
  36,776 ±(99.9%) 0,319 ms/op [Average]
  (min, avg, max) = (36,330, 36,776, 37,007), stdev = 0,211
  CI (99.9%): [36,456, 37,095] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 128, patternSize = 8)

# Run progress: 87,96% complete, ETA 01:51:38
# Fork: 1 of 1
# Warmup Iteration   1: 32,431 ms/op
# Warmup Iteration   2: 29,641 ms/op
# Warmup Iteration   3: 28,758 ms/op
# Warmup Iteration   4: 28,846 ms/op
# Warmup Iteration   5: 28,764 ms/op
# Warmup Iteration   6: 28,645 ms/op
# Warmup Iteration   7: 31,494 ms/op
# Warmup Iteration   8: 28,925 ms/op
# Warmup Iteration   9: 28,759 ms/op
# Warmup Iteration  10: 28,727 ms/op
Iteration   1: 28,757 ms/op
Iteration   2: 29,826 ms/op
Iteration   3: 29,168 ms/op
Iteration   4: 29,047 ms/op
Iteration   5: 29,115 ms/op
Iteration   6: 29,219 ms/op
Iteration   7: 29,087 ms/op
Iteration   8: 29,086 ms/op
Iteration   9: 29,070 ms/op
Iteration  10: 29,735 ms/op


Result "benchmarkFind":
  29,211 ±(99.9%) 0,491 ms/op [Average]
  (min, avg, max) = (28,757, 29,211, 29,826), stdev = 0,325
  CI (99.9%): [28,720, 29,702] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 128, patternSize = 16)

# Run progress: 88,01% complete, ETA 01:51:11
# Fork: 1 of 1
# Warmup Iteration   1: 31,725 ms/op
# Warmup Iteration   2: 28,814 ms/op
# Warmup Iteration   3: 28,758 ms/op
# Warmup Iteration   4: 28,989 ms/op
# Warmup Iteration   5: 31,089 ms/op
# Warmup Iteration   6: 31,891 ms/op
# Warmup Iteration   7: 31,896 ms/op
# Warmup Iteration   8: 29,855 ms/op
# Warmup Iteration   9: 29,906 ms/op
# Warmup Iteration  10: 29,976 ms/op
Iteration   1: 29,515 ms/op
Iteration   2: 29,167 ms/op
Iteration   3: 30,386 ms/op
Iteration   4: 29,567 ms/op
Iteration   5: 29,699 ms/op
Iteration   6: 29,157 ms/op
Iteration   7: 29,250 ms/op
Iteration   8: 29,540 ms/op
Iteration   9: 28,985 ms/op
Iteration  10: 29,168 ms/op


Result "benchmarkFind":
  29,443 ±(99.9%) 0,610 ms/op [Average]
  (min, avg, max) = (28,985, 29,443, 30,386), stdev = 0,404
  CI (99.9%): [28,833, 30,054] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 128, patternSize = 32)

# Run progress: 88,05% complete, ETA 01:50:45
# Fork: 1 of 1
# Warmup Iteration   1: 29,709 ms/op
# Warmup Iteration   2: 27,520 ms/op
# Warmup Iteration   3: 26,124 ms/op
# Warmup Iteration   4: 25,964 ms/op
# Warmup Iteration   5: 26,100 ms/op
# Warmup Iteration   6: 26,440 ms/op
# Warmup Iteration   7: 26,367 ms/op
# Warmup Iteration   8: 27,236 ms/op
# Warmup Iteration   9: 27,019 ms/op
# Warmup Iteration  10: 27,307 ms/op
Iteration   1: 27,347 ms/op
Iteration   2: 27,452 ms/op
Iteration   3: 27,112 ms/op
Iteration   4: 27,563 ms/op
Iteration   5: 27,767 ms/op
Iteration   6: 27,382 ms/op
Iteration   7: 27,329 ms/op
Iteration   8: 26,670 ms/op
Iteration   9: 26,637 ms/op
Iteration  10: 27,030 ms/op


Result "benchmarkFind":
  27,229 ±(99.9%) 0,555 ms/op [Average]
  (min, avg, max) = (26,637, 27,229, 27,767), stdev = 0,367
  CI (99.9%): [26,674, 27,784] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 128, patternSize = 64)

# Run progress: 88,10% complete, ETA 01:50:19
# Fork: 1 of 1
# Warmup Iteration   1: 29,836 ms/op
# Warmup Iteration   2: 26,181 ms/op
# Warmup Iteration   3: 25,925 ms/op
# Warmup Iteration   4: 26,250 ms/op
# Warmup Iteration   5: 25,539 ms/op
# Warmup Iteration   6: 25,533 ms/op
# Warmup Iteration   7: 25,143 ms/op
# Warmup Iteration   8: 25,330 ms/op
# Warmup Iteration   9: 25,481 ms/op
# Warmup Iteration  10: 25,182 ms/op
Iteration   1: 25,244 ms/op
Iteration   2: 25,467 ms/op
Iteration   3: 25,387 ms/op
Iteration   4: 25,121 ms/op
Iteration   5: 25,236 ms/op
Iteration   6: 25,659 ms/op
Iteration   7: 25,525 ms/op
Iteration   8: 25,569 ms/op
Iteration   9: 25,377 ms/op
Iteration  10: 25,623 ms/op


Result "benchmarkFind":
  25,421 ±(99.9%) 0,272 ms/op [Average]
  (min, avg, max) = (25,121, 25,421, 25,659), stdev = 0,180
  CI (99.9%): [25,149, 25,693] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 128, patternSize = 128)

# Run progress: 88,14% complete, ETA 01:49:53
# Fork: 1 of 1
# Warmup Iteration   1: 31,520 ms/op
# Warmup Iteration   2: 28,384 ms/op
# Warmup Iteration   3: 27,904 ms/op
# Warmup Iteration   4: 27,049 ms/op
# Warmup Iteration   5: 27,316 ms/op
# Warmup Iteration   6: 27,700 ms/op
# Warmup Iteration   7: 28,593 ms/op
# Warmup Iteration   8: 27,440 ms/op
# Warmup Iteration   9: 28,243 ms/op
# Warmup Iteration  10: 28,062 ms/op
Iteration   1: 27,328 ms/op
Iteration   2: 27,561 ms/op
Iteration   3: 26,905 ms/op
Iteration   4: 27,335 ms/op
Iteration   5: 27,570 ms/op
Iteration   6: 27,408 ms/op
Iteration   7: 27,496 ms/op
Iteration   8: 27,681 ms/op
Iteration   9: 27,652 ms/op
Iteration  10: 27,449 ms/op


Result "benchmarkFind":
  27,438 ±(99.9%) 0,337 ms/op [Average]
  (min, avg, max) = (26,905, 27,438, 27,681), stdev = 0,223
  CI (99.9%): [27,101, 27,776] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternNumber = 128, patternSize = 256)

# Run progress: 88,19% complete, ETA 01:49:27
# Fork: 1 of 1
# Warmup Iteration   1: 32,915 ms/op
# Warmup Iteration   2: 29,551 ms/op
# Warmup Iteration   3: 29,317 ms/op
# Warmup Iteration   4: 28,528 ms/op
# Warmup Iteration   5: 29,512 ms/op
# Warmup Iteration   6: 28,511 ms/op
# Warmup Iteration   7: 28,362 ms/op
# Warmup Iteration   8: 28,221 ms/op
# Warmup Iteration   9: 28,922 ms/op
# Warmup Iteration  10: 29,304 ms/op
Iteration   1: 30,356 ms/op
Iteration   2: 27,920 ms/op
Iteration   3: 27,827 ms/op
Iteration   4: 28,483 ms/op
Iteration   5: 29,603 ms/op
Iteration   6: 27,800 ms/op
Iteration   7: 27,833 ms/op
Iteration   8: 27,669 ms/op
Iteration   9: 27,917 ms/op
Iteration  10: 27,994 ms/op


Result "benchmarkFind":
  28,340 ±(99.9%) 1,372 ms/op [Average]
  (min, avg, max) = (27,669, 28,340, 30,356), stdev = 0,908
  CI (99.9%): [26,968, 29,713] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 2, patternSize = 2)

# Run progress: 88,24% complete, ETA 01:49:01
# Fork: 1 of 1
# Warmup Iteration   1: 89,049 ms/op
# Warmup Iteration   2: 72,076 ms/op
# Warmup Iteration   3: 69,688 ms/op
# Warmup Iteration   4: 68,663 ms/op
# Warmup Iteration   5: 68,926 ms/op
# Warmup Iteration   6: 68,668 ms/op
# Warmup Iteration   7: 69,158 ms/op
# Warmup Iteration   8: 68,556 ms/op
# Warmup Iteration   9: 68,975 ms/op
# Warmup Iteration  10: 69,016 ms/op
Iteration   1: 69,592 ms/op
Iteration   2: 69,861 ms/op
Iteration   3: 70,249 ms/op
Iteration   4: 69,869 ms/op
Iteration   5: 69,894 ms/op
Iteration   6: 69,550 ms/op
Iteration   7: 69,110 ms/op
Iteration   8: 70,271 ms/op
Iteration   9: 69,675 ms/op
Iteration  10: 69,386 ms/op


Result "benchmarkFind":
  69,746 ±(99.9%) 0,547 ms/op [Average]
  (min, avg, max) = (69,110, 69,746, 70,271), stdev = 0,362
  CI (99.9%): [69,198, 70,293] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 2, patternSize = 4)

# Run progress: 88,28% complete, ETA 01:48:34
# Fork: 1 of 1
# Warmup Iteration   1: 53,334 ms/op
# Warmup Iteration   2: 47,314 ms/op
# Warmup Iteration   3: 47,264 ms/op
# Warmup Iteration   4: 47,723 ms/op
# Warmup Iteration   5: 47,454 ms/op
# Warmup Iteration   6: 47,953 ms/op
# Warmup Iteration   7: 48,149 ms/op
# Warmup Iteration   8: 48,245 ms/op
# Warmup Iteration   9: 48,277 ms/op
# Warmup Iteration  10: 47,811 ms/op
Iteration   1: 47,946 ms/op
Iteration   2: 47,563 ms/op
Iteration   3: 48,367 ms/op
Iteration   4: 47,978 ms/op
Iteration   5: 47,958 ms/op
Iteration   6: 47,993 ms/op
Iteration   7: 47,809 ms/op
Iteration   8: 48,064 ms/op
Iteration   9: 48,143 ms/op
Iteration  10: 48,019 ms/op


Result "benchmarkFind":
  47,984 ±(99.9%) 0,315 ms/op [Average]
  (min, avg, max) = (47,563, 47,984, 48,367), stdev = 0,208
  CI (99.9%): [47,669, 48,298] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 2, patternSize = 8)

# Run progress: 88,33% complete, ETA 01:48:08
# Fork: 1 of 1
# Warmup Iteration   1: 27,172 ms/op
# Warmup Iteration   2: 24,039 ms/op
# Warmup Iteration   3: 24,102 ms/op
# Warmup Iteration   4: 24,235 ms/op
# Warmup Iteration   5: 24,445 ms/op
# Warmup Iteration   6: 24,399 ms/op
# Warmup Iteration   7: 24,631 ms/op
# Warmup Iteration   8: 24,598 ms/op
# Warmup Iteration   9: 24,597 ms/op
# Warmup Iteration  10: 24,515 ms/op
Iteration   1: 24,206 ms/op
Iteration   2: 24,292 ms/op
Iteration   3: 24,215 ms/op
Iteration   4: 24,248 ms/op
Iteration   5: 24,216 ms/op
Iteration   6: 24,279 ms/op
Iteration   7: 24,360 ms/op
Iteration   8: 25,823 ms/op
Iteration   9: 25,421 ms/op
Iteration  10: 24,187 ms/op


Result "benchmarkFind":
  24,525 ±(99.9%) 0,889 ms/op [Average]
  (min, avg, max) = (24,187, 24,525, 25,823), stdev = 0,588
  CI (99.9%): [23,635, 25,414] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 2, patternSize = 16)

# Run progress: 88,37% complete, ETA 01:47:42
# Fork: 1 of 1
# Warmup Iteration   1: 14,016 ms/op
# Warmup Iteration   2: 13,250 ms/op
# Warmup Iteration   3: 12,837 ms/op
# Warmup Iteration   4: 12,739 ms/op
# Warmup Iteration   5: 12,824 ms/op
# Warmup Iteration   6: 12,771 ms/op
# Warmup Iteration   7: 12,828 ms/op
# Warmup Iteration   8: 12,732 ms/op
# Warmup Iteration   9: 12,804 ms/op
# Warmup Iteration  10: 12,818 ms/op
Iteration   1: 12,981 ms/op
Iteration   2: 12,904 ms/op
Iteration   3: 12,991 ms/op
Iteration   4: 12,914 ms/op
Iteration   5: 12,942 ms/op
Iteration   6: 12,925 ms/op
Iteration   7: 12,953 ms/op
Iteration   8: 12,898 ms/op
Iteration   9: 12,865 ms/op
Iteration  10: 12,922 ms/op


Result "benchmarkFind":
  12,929 ±(99.9%) 0,058 ms/op [Average]
  (min, avg, max) = (12,865, 12,929, 12,991), stdev = 0,038
  CI (99.9%): [12,871, 12,987] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 2, patternSize = 32)

# Run progress: 88,42% complete, ETA 01:47:16
# Fork: 1 of 1
# Warmup Iteration   1: 7,851 ms/op
# Warmup Iteration   2: 7,100 ms/op
# Warmup Iteration   3: 7,125 ms/op
# Warmup Iteration   4: 7,127 ms/op
# Warmup Iteration   5: 7,146 ms/op
# Warmup Iteration   6: 7,157 ms/op
# Warmup Iteration   7: 7,108 ms/op
# Warmup Iteration   8: 7,089 ms/op
# Warmup Iteration   9: 7,151 ms/op
# Warmup Iteration  10: 7,160 ms/op
Iteration   1: 7,248 ms/op
Iteration   2: 7,240 ms/op
Iteration   3: 7,255 ms/op
Iteration   4: 7,239 ms/op
Iteration   5: 7,227 ms/op
Iteration   6: 7,240 ms/op
Iteration   7: 7,259 ms/op
Iteration   8: 7,241 ms/op
Iteration   9: 7,218 ms/op
Iteration  10: 7,270 ms/op


Result "benchmarkFind":
  7,244 ±(99.9%) 0,023 ms/op [Average]
  (min, avg, max) = (7,218, 7,244, 7,270), stdev = 0,015
  CI (99.9%): [7,221, 7,267] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 2, patternSize = 64)

# Run progress: 88,47% complete, ETA 01:46:50
# Fork: 1 of 1
# Warmup Iteration   1: 4,214 ms/op
# Warmup Iteration   2: 3,855 ms/op
# Warmup Iteration   3: 3,792 ms/op
# Warmup Iteration   4: 3,807 ms/op
# Warmup Iteration   5: 3,815 ms/op
# Warmup Iteration   6: 3,849 ms/op
# Warmup Iteration   7: 3,868 ms/op
# Warmup Iteration   8: 3,913 ms/op
# Warmup Iteration   9: 3,896 ms/op
# Warmup Iteration  10: 3,906 ms/op
Iteration   1: 3,916 ms/op
Iteration   2: 3,900 ms/op
Iteration   3: 3,958 ms/op
Iteration   4: 3,928 ms/op
Iteration   5: 3,922 ms/op
Iteration   6: 4,256 ms/op
Iteration   7: 4,027 ms/op
Iteration   8: 3,855 ms/op
Iteration   9: 3,874 ms/op
Iteration  10: 3,901 ms/op


Result "benchmarkFind":
  3,954 ±(99.9%) 0,176 ms/op [Average]
  (min, avg, max) = (3,855, 3,954, 4,256), stdev = 0,116
  CI (99.9%): [3,778, 4,129] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 2, patternSize = 128)

# Run progress: 88,51% complete, ETA 01:46:24
# Fork: 1 of 1
# Warmup Iteration   1: 2,973 ms/op
# Warmup Iteration   2: 2,753 ms/op
# Warmup Iteration   3: 2,684 ms/op
# Warmup Iteration   4: 2,692 ms/op
# Warmup Iteration   5: 2,703 ms/op
# Warmup Iteration   6: 2,699 ms/op
# Warmup Iteration   7: 2,716 ms/op
# Warmup Iteration   8: 2,727 ms/op
# Warmup Iteration   9: 2,733 ms/op
# Warmup Iteration  10: 2,774 ms/op
Iteration   1: 2,765 ms/op
Iteration   2: 2,749 ms/op
Iteration   3: 2,755 ms/op
Iteration   4: 2,757 ms/op
Iteration   5: 2,782 ms/op
Iteration   6: 2,701 ms/op
Iteration   7: 2,692 ms/op
Iteration   8: 2,689 ms/op
Iteration   9: 2,722 ms/op
Iteration  10: 2,732 ms/op


Result "benchmarkFind":
  2,734 ±(99.9%) 0,049 ms/op [Average]
  (min, avg, max) = (2,689, 2,734, 2,782), stdev = 0,033
  CI (99.9%): [2,685, 2,784] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 2, patternSize = 256)

# Run progress: 88,56% complete, ETA 01:45:57
# Fork: 1 of 1
# Warmup Iteration   1: 2,739 ms/op
# Warmup Iteration   2: 2,575 ms/op
# Warmup Iteration   3: 2,519 ms/op
# Warmup Iteration   4: 2,525 ms/op
# Warmup Iteration   5: 2,515 ms/op
# Warmup Iteration   6: 2,520 ms/op
# Warmup Iteration   7: 2,522 ms/op
# Warmup Iteration   8: 2,524 ms/op
# Warmup Iteration   9: 2,529 ms/op
# Warmup Iteration  10: 2,530 ms/op
Iteration   1: 2,541 ms/op
Iteration   2: 2,554 ms/op
Iteration   3: 2,565 ms/op
Iteration   4: 2,589 ms/op
Iteration   5: 2,560 ms/op
Iteration   6: 2,561 ms/op
Iteration   7: 2,558 ms/op
Iteration   8: 2,555 ms/op
Iteration   9: 2,557 ms/op
Iteration  10: 2,552 ms/op


Result "benchmarkFind":
  2,559 ±(99.9%) 0,019 ms/op [Average]
  (min, avg, max) = (2,541, 2,559, 2,589), stdev = 0,012
  CI (99.9%): [2,541, 2,578] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 8, patternSize = 2)

# Run progress: 88,60% complete, ETA 01:45:31
# Fork: 1 of 1
# Warmup Iteration   1: 88,237 ms/op
# Warmup Iteration   2: 78,918 ms/op
# Warmup Iteration   3: 75,816 ms/op
# Warmup Iteration   4: 76,187 ms/op
# Warmup Iteration   5: 76,163 ms/op
# Warmup Iteration   6: 76,004 ms/op
# Warmup Iteration   7: 75,599 ms/op
# Warmup Iteration   8: 76,383 ms/op
# Warmup Iteration   9: 75,707 ms/op
# Warmup Iteration  10: 76,659 ms/op
Iteration   1: 76,023 ms/op
Iteration   2: 76,576 ms/op
Iteration   3: 76,240 ms/op
Iteration   4: 84,727 ms/op
Iteration   5: 75,758 ms/op
Iteration   6: 75,810 ms/op
Iteration   7: 75,635 ms/op
Iteration   8: 75,970 ms/op
Iteration   9: 75,928 ms/op
Iteration  10: 75,592 ms/op


Result "benchmarkFind":
  76,826 ±(99.9%) 4,220 ms/op [Average]
  (min, avg, max) = (75,592, 76,826, 84,727), stdev = 2,791
  CI (99.9%): [72,606, 81,046] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 8, patternSize = 4)

# Run progress: 88,65% complete, ETA 01:45:05
# Fork: 1 of 1
# Warmup Iteration   1: 60,856 ms/op
# Warmup Iteration   2: 54,467 ms/op
# Warmup Iteration   3: 53,342 ms/op
# Warmup Iteration   4: 53,491 ms/op
# Warmup Iteration   5: 53,160 ms/op
# Warmup Iteration   6: 53,579 ms/op
# Warmup Iteration   7: 54,031 ms/op
# Warmup Iteration   8: 55,039 ms/op
# Warmup Iteration   9: 54,026 ms/op
# Warmup Iteration  10: 54,202 ms/op
Iteration   1: 54,062 ms/op
Iteration   2: 53,970 ms/op
Iteration   3: 54,024 ms/op
Iteration   4: 54,102 ms/op
Iteration   5: 54,186 ms/op
Iteration   6: 53,732 ms/op
Iteration   7: 54,018 ms/op
Iteration   8: 54,207 ms/op
Iteration   9: 54,247 ms/op
Iteration  10: 54,426 ms/op


Result "benchmarkFind":
  54,097 ±(99.9%) 0,282 ms/op [Average]
  (min, avg, max) = (53,732, 54,097, 54,426), stdev = 0,186
  CI (99.9%): [53,816, 54,379] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 8, patternSize = 8)

# Run progress: 88,69% complete, ETA 01:44:39
# Fork: 1 of 1
# Warmup Iteration   1: 38,592 ms/op
# Warmup Iteration   2: 34,278 ms/op
# Warmup Iteration   3: 34,214 ms/op
# Warmup Iteration   4: 33,990 ms/op
# Warmup Iteration   5: 34,511 ms/op
# Warmup Iteration   6: 34,371 ms/op
# Warmup Iteration   7: 34,525 ms/op
# Warmup Iteration   8: 34,585 ms/op
# Warmup Iteration   9: 34,507 ms/op
# Warmup Iteration  10: 34,411 ms/op
Iteration   1: 34,751 ms/op
Iteration   2: 34,707 ms/op
Iteration   3: 34,506 ms/op
Iteration   4: 34,594 ms/op
Iteration   5: 34,537 ms/op
Iteration   6: 34,586 ms/op
Iteration   7: 34,865 ms/op
Iteration   8: 34,545 ms/op
Iteration   9: 34,493 ms/op
Iteration  10: 34,704 ms/op


Result "benchmarkFind":
  34,629 ±(99.9%) 0,185 ms/op [Average]
  (min, avg, max) = (34,493, 34,629, 34,865), stdev = 0,122
  CI (99.9%): [34,444, 34,814] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 8, patternSize = 16)

# Run progress: 88,74% complete, ETA 01:44:13
# Fork: 1 of 1
# Warmup Iteration   1: 23,866 ms/op
# Warmup Iteration   2: 21,596 ms/op
# Warmup Iteration   3: 21,642 ms/op
# Warmup Iteration   4: 21,713 ms/op
# Warmup Iteration   5: 21,961 ms/op
# Warmup Iteration   6: 21,861 ms/op
# Warmup Iteration   7: 21,744 ms/op
# Warmup Iteration   8: 21,864 ms/op
# Warmup Iteration   9: 21,825 ms/op
# Warmup Iteration  10: 21,955 ms/op
Iteration   1: 24,569 ms/op
Iteration   2: 22,167 ms/op
Iteration   3: 21,511 ms/op
Iteration   4: 21,839 ms/op
Iteration   5: 21,744 ms/op
Iteration   6: 21,708 ms/op
Iteration   7: 21,804 ms/op
Iteration   8: 22,094 ms/op
Iteration   9: 21,814 ms/op
Iteration  10: 21,891 ms/op


Result "benchmarkFind":
  22,114 ±(99.9%) 1,334 ms/op [Average]
  (min, avg, max) = (21,511, 22,114, 24,569), stdev = 0,882
  CI (99.9%): [20,780, 23,448] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 8, patternSize = 32)

# Run progress: 88,79% complete, ETA 01:43:47
# Fork: 1 of 1
# Warmup Iteration   1: 12,880 ms/op
# Warmup Iteration   2: 11,746 ms/op
# Warmup Iteration   3: 11,604 ms/op
# Warmup Iteration   4: 11,521 ms/op
# Warmup Iteration   5: 11,523 ms/op
# Warmup Iteration   6: 11,468 ms/op
# Warmup Iteration   7: 11,646 ms/op
# Warmup Iteration   8: 11,663 ms/op
# Warmup Iteration   9: 11,707 ms/op
# Warmup Iteration  10: 11,657 ms/op
Iteration   1: 11,703 ms/op
Iteration   2: 11,767 ms/op
Iteration   3: 11,769 ms/op
Iteration   4: 11,694 ms/op
Iteration   5: 11,578 ms/op
Iteration   6: 11,803 ms/op
Iteration   7: 11,695 ms/op
Iteration   8: 11,754 ms/op
Iteration   9: 11,792 ms/op
Iteration  10: 11,779 ms/op


Result "benchmarkFind":
  11,733 ±(99.9%) 0,102 ms/op [Average]
  (min, avg, max) = (11,578, 11,733, 11,803), stdev = 0,068
  CI (99.9%): [11,631, 11,836] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 8, patternSize = 64)

# Run progress: 88,83% complete, ETA 01:43:21
# Fork: 1 of 1
# Warmup Iteration   1: 8,285 ms/op
# Warmup Iteration   2: 7,599 ms/op
# Warmup Iteration   3: 7,480 ms/op
# Warmup Iteration   4: 7,493 ms/op
# Warmup Iteration   5: 7,543 ms/op
# Warmup Iteration   6: 7,501 ms/op
# Warmup Iteration   7: 7,559 ms/op
# Warmup Iteration   8: 7,622 ms/op
# Warmup Iteration   9: 7,764 ms/op
# Warmup Iteration  10: 7,759 ms/op
Iteration   1: 7,672 ms/op
Iteration   2: 7,695 ms/op
Iteration   3: 7,723 ms/op
Iteration   4: 7,705 ms/op
Iteration   5: 7,684 ms/op
Iteration   6: 7,696 ms/op
Iteration   7: 7,740 ms/op
Iteration   8: 7,739 ms/op
Iteration   9: 7,710 ms/op
Iteration  10: 7,740 ms/op


Result "benchmarkFind":
  7,710 ±(99.9%) 0,037 ms/op [Average]
  (min, avg, max) = (7,672, 7,710, 7,740), stdev = 0,025
  CI (99.9%): [7,673, 7,747] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 8, patternSize = 128)

# Run progress: 88,88% complete, ETA 01:42:55
# Fork: 1 of 1
# Warmup Iteration   1: 6,398 ms/op
# Warmup Iteration   2: 6,187 ms/op
# Warmup Iteration   3: 5,809 ms/op
# Warmup Iteration   4: 5,772 ms/op
# Warmup Iteration   5: 5,712 ms/op
# Warmup Iteration   6: 5,749 ms/op
# Warmup Iteration   7: 5,774 ms/op
# Warmup Iteration   8: 6,224 ms/op
# Warmup Iteration   9: 5,719 ms/op
# Warmup Iteration  10: 5,789 ms/op
Iteration   1: 5,835 ms/op
Iteration   2: 5,816 ms/op
Iteration   3: 5,899 ms/op
Iteration   4: 5,858 ms/op
Iteration   5: 5,914 ms/op
Iteration   6: 5,900 ms/op
Iteration   7: 5,893 ms/op
Iteration   8: 5,905 ms/op
Iteration   9: 5,900 ms/op
Iteration  10: 5,862 ms/op


Result "benchmarkFind":
  5,878 ±(99.9%) 0,050 ms/op [Average]
  (min, avg, max) = (5,816, 5,878, 5,914), stdev = 0,033
  CI (99.9%): [5,828, 5,928] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 8, patternSize = 256)

# Run progress: 88,92% complete, ETA 01:42:29
# Fork: 1 of 1
# Warmup Iteration   1: 5,597 ms/op
# Warmup Iteration   2: 5,216 ms/op
# Warmup Iteration   3: 5,083 ms/op
# Warmup Iteration   4: 5,111 ms/op
# Warmup Iteration   5: 5,123 ms/op
# Warmup Iteration   6: 5,128 ms/op
# Warmup Iteration   7: 5,159 ms/op
# Warmup Iteration   8: 5,180 ms/op
# Warmup Iteration   9: 5,262 ms/op
# Warmup Iteration  10: 5,270 ms/op
Iteration   1: 5,246 ms/op
Iteration   2: 5,195 ms/op
Iteration   3: 5,248 ms/op
Iteration   4: 5,262 ms/op
Iteration   5: 5,292 ms/op
Iteration   6: 5,265 ms/op
Iteration   7: 5,214 ms/op
Iteration   8: 5,151 ms/op
Iteration   9: 5,186 ms/op
Iteration  10: 5,232 ms/op


Result "benchmarkFind":
  5,229 ±(99.9%) 0,064 ms/op [Average]
  (min, avg, max) = (5,151, 5,229, 5,292), stdev = 0,043
  CI (99.9%): [5,165, 5,293] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 32, patternSize = 2)

# Run progress: 88,97% complete, ETA 01:42:03
# Fork: 1 of 1
# Warmup Iteration   1: 207,998 ms/op
# Warmup Iteration   2: 194,892 ms/op
# Warmup Iteration   3: 188,733 ms/op
# Warmup Iteration   4: 185,121 ms/op
# Warmup Iteration   5: 185,382 ms/op
# Warmup Iteration   6: 186,163 ms/op
# Warmup Iteration   7: 186,755 ms/op
# Warmup Iteration   8: 186,380 ms/op
# Warmup Iteration   9: 186,597 ms/op
# Warmup Iteration  10: 186,714 ms/op
Iteration   1: 187,439 ms/op
Iteration   2: 187,570 ms/op
Iteration   3: 187,875 ms/op
Iteration   4: 187,972 ms/op
Iteration   5: 188,516 ms/op
Iteration   6: 189,131 ms/op
Iteration   7: 188,209 ms/op
Iteration   8: 188,234 ms/op
Iteration   9: 189,043 ms/op
Iteration  10: 188,438 ms/op


Result "benchmarkFind":
  188,243 ±(99.9%) 0,851 ms/op [Average]
  (min, avg, max) = (187,439, 188,243, 189,131), stdev = 0,563
  CI (99.9%): [187,392, 189,094] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 32, patternSize = 4)

# Run progress: 89,02% complete, ETA 01:41:37
# Fork: 1 of 1
# Warmup Iteration   1: 98,231 ms/op
# Warmup Iteration   2: 88,516 ms/op
# Warmup Iteration   3: 95,421 ms/op
# Warmup Iteration   4: 94,126 ms/op
# Warmup Iteration   5: 88,635 ms/op
# Warmup Iteration   6: 87,270 ms/op
# Warmup Iteration   7: 87,600 ms/op
# Warmup Iteration   8: 87,351 ms/op
# Warmup Iteration   9: 87,411 ms/op
# Warmup Iteration  10: 87,582 ms/op
Iteration   1: 87,278 ms/op
Iteration   2: 87,344 ms/op
Iteration   3: 87,431 ms/op
Iteration   4: 87,797 ms/op
Iteration   5: 87,856 ms/op
Iteration   6: 89,154 ms/op
Iteration   7: 89,699 ms/op
Iteration   8: 89,486 ms/op
Iteration   9: 89,963 ms/op
Iteration  10: 90,163 ms/op


Result "benchmarkFind":
  88,617 ±(99.9%) 1,781 ms/op [Average]
  (min, avg, max) = (87,278, 88,617, 90,163), stdev = 1,178
  CI (99.9%): [86,836, 90,398] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 32, patternSize = 8)

# Run progress: 89,06% complete, ETA 01:41:11
# Fork: 1 of 1
# Warmup Iteration   1: 57,924 ms/op
# Warmup Iteration   2: 52,666 ms/op
# Warmup Iteration   3: 49,925 ms/op
# Warmup Iteration   4: 49,657 ms/op
# Warmup Iteration   5: 49,826 ms/op
# Warmup Iteration   6: 50,044 ms/op
# Warmup Iteration   7: 49,783 ms/op
# Warmup Iteration   8: 50,099 ms/op
# Warmup Iteration   9: 49,922 ms/op
# Warmup Iteration  10: 49,992 ms/op
Iteration   1: 50,787 ms/op
Iteration   2: 50,903 ms/op
Iteration   3: 51,511 ms/op
Iteration   4: 51,723 ms/op
Iteration   5: 51,848 ms/op
Iteration   6: 51,770 ms/op
Iteration   7: 51,233 ms/op
Iteration   8: 51,346 ms/op
Iteration   9: 51,341 ms/op
Iteration  10: 51,004 ms/op


Result "benchmarkFind":
  51,347 ±(99.9%) 0,561 ms/op [Average]
  (min, avg, max) = (50,787, 51,347, 51,848), stdev = 0,371
  CI (99.9%): [50,786, 51,908] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 32, patternSize = 16)

# Run progress: 89,11% complete, ETA 01:40:45
# Fork: 1 of 1
# Warmup Iteration   1: 35,795 ms/op
# Warmup Iteration   2: 32,521 ms/op
# Warmup Iteration   3: 32,316 ms/op
# Warmup Iteration   4: 32,584 ms/op
# Warmup Iteration   5: 32,485 ms/op
# Warmup Iteration   6: 32,438 ms/op
# Warmup Iteration   7: 32,320 ms/op
# Warmup Iteration   8: 32,606 ms/op
# Warmup Iteration   9: 32,682 ms/op
# Warmup Iteration  10: 33,043 ms/op
Iteration   1: 32,634 ms/op
Iteration   2: 32,587 ms/op
Iteration   3: 32,692 ms/op
Iteration   4: 32,596 ms/op
Iteration   5: 32,676 ms/op
Iteration   6: 32,644 ms/op
Iteration   7: 32,515 ms/op
Iteration   8: 32,530 ms/op
Iteration   9: 32,952 ms/op
Iteration  10: 37,085 ms/op


Result "benchmarkFind":
  33,091 ±(99.9%) 2,130 ms/op [Average]
  (min, avg, max) = (32,515, 33,091, 37,085), stdev = 1,409
  CI (99.9%): [30,961, 35,221] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 32, patternSize = 32)

# Run progress: 89,15% complete, ETA 01:40:19
# Fork: 1 of 1
# Warmup Iteration   1: 27,553 ms/op
# Warmup Iteration   2: 24,865 ms/op
# Warmup Iteration   3: 24,416 ms/op
# Warmup Iteration   4: 24,521 ms/op
# Warmup Iteration   5: 24,435 ms/op
# Warmup Iteration   6: 24,460 ms/op
# Warmup Iteration   7: 24,563 ms/op
# Warmup Iteration   8: 24,680 ms/op
# Warmup Iteration   9: 24,924 ms/op
# Warmup Iteration  10: 24,843 ms/op
Iteration   1: 24,845 ms/op
Iteration   2: 24,783 ms/op
Iteration   3: 24,757 ms/op
Iteration   4: 24,742 ms/op
Iteration   5: 24,771 ms/op
Iteration   6: 24,698 ms/op
Iteration   7: 24,790 ms/op
Iteration   8: 24,782 ms/op
Iteration   9: 24,703 ms/op
Iteration  10: 24,820 ms/op


Result "benchmarkFind":
  24,769 ±(99.9%) 0,070 ms/op [Average]
  (min, avg, max) = (24,698, 24,769, 24,845), stdev = 0,046
  CI (99.9%): [24,699, 24,839] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 32, patternSize = 64)

# Run progress: 89,20% complete, ETA 01:39:53
# Fork: 1 of 1
# Warmup Iteration   1: 25,039 ms/op
# Warmup Iteration   2: 22,717 ms/op
# Warmup Iteration   3: 22,631 ms/op
# Warmup Iteration   4: 22,482 ms/op
# Warmup Iteration   5: 22,648 ms/op
# Warmup Iteration   6: 22,504 ms/op
# Warmup Iteration   7: 22,447 ms/op
# Warmup Iteration   8: 22,650 ms/op
# Warmup Iteration   9: 22,676 ms/op
# Warmup Iteration  10: 22,833 ms/op
Iteration   1: 22,632 ms/op
Iteration   2: 22,626 ms/op
Iteration   3: 22,600 ms/op
Iteration   4: 22,711 ms/op
Iteration   5: 22,673 ms/op
Iteration   6: 22,836 ms/op
Iteration   7: 22,741 ms/op
Iteration   8: 22,784 ms/op
Iteration   9: 22,581 ms/op
Iteration  10: 22,802 ms/op


Result "benchmarkFind":
  22,699 ±(99.9%) 0,136 ms/op [Average]
  (min, avg, max) = (22,581, 22,699, 22,836), stdev = 0,090
  CI (99.9%): [22,563, 22,834] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 32, patternSize = 128)

# Run progress: 89,25% complete, ETA 01:39:27
# Fork: 1 of 1
# Warmup Iteration   1: 21,073 ms/op
# Warmup Iteration   2: 19,178 ms/op
# Warmup Iteration   3: 18,992 ms/op
# Warmup Iteration   4: 18,770 ms/op
# Warmup Iteration   5: 18,945 ms/op
# Warmup Iteration   6: 18,811 ms/op
# Warmup Iteration   7: 18,943 ms/op
# Warmup Iteration   8: 18,829 ms/op
# Warmup Iteration   9: 19,079 ms/op
# Warmup Iteration  10: 19,186 ms/op
Iteration   1: 19,187 ms/op
Iteration   2: 19,089 ms/op
Iteration   3: 19,064 ms/op
Iteration   4: 19,066 ms/op
Iteration   5: 19,151 ms/op
Iteration   6: 19,178 ms/op
Iteration   7: 20,698 ms/op
Iteration   8: 19,709 ms/op
Iteration   9: 18,625 ms/op
Iteration  10: 18,626 ms/op


Result "benchmarkFind":
  19,239 ±(99.9%) 0,902 ms/op [Average]
  (min, avg, max) = (18,625, 19,239, 20,698), stdev = 0,596
  CI (99.9%): [18,338, 20,141] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 32, patternSize = 256)

# Run progress: 89,29% complete, ETA 01:39:01
# Fork: 1 of 1
# Warmup Iteration   1: 23,458 ms/op
# Warmup Iteration   2: 21,443 ms/op
# Warmup Iteration   3: 20,571 ms/op
# Warmup Iteration   4: 20,463 ms/op
# Warmup Iteration   5: 20,383 ms/op
# Warmup Iteration   6: 20,444 ms/op
# Warmup Iteration   7: 20,400 ms/op
# Warmup Iteration   8: 20,415 ms/op
# Warmup Iteration   9: 20,380 ms/op
# Warmup Iteration  10: 20,444 ms/op
Iteration   1: 20,484 ms/op
Iteration   2: 20,632 ms/op
Iteration   3: 20,608 ms/op
Iteration   4: 20,757 ms/op
Iteration   5: 20,614 ms/op
Iteration   6: 20,705 ms/op
Iteration   7: 20,664 ms/op
Iteration   8: 20,625 ms/op
Iteration   9: 20,608 ms/op
Iteration  10: 20,561 ms/op


Result "benchmarkFind":
  20,626 ±(99.9%) 0,113 ms/op [Average]
  (min, avg, max) = (20,484, 20,626, 20,757), stdev = 0,075
  CI (99.9%): [20,513, 20,738] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 128, patternSize = 2)

# Run progress: 89,34% complete, ETA 01:38:34
# Fork: 1 of 1
# Warmup Iteration   1: 743,413 ms/op
# Warmup Iteration   2: 700,349 ms/op
# Warmup Iteration   3: 700,871 ms/op
# Warmup Iteration   4: 689,975 ms/op
# Warmup Iteration   5: 688,828 ms/op
# Warmup Iteration   6: 688,300 ms/op
# Warmup Iteration   7: 694,745 ms/op
# Warmup Iteration   8: 691,795 ms/op
# Warmup Iteration   9: 689,896 ms/op
# Warmup Iteration  10: 691,855 ms/op
Iteration   1: 692,454 ms/op
Iteration   2: 689,345 ms/op
Iteration   3: 694,577 ms/op
Iteration   4: 696,528 ms/op
Iteration   5: 695,338 ms/op
Iteration   6: 695,282 ms/op
Iteration   7: 695,906 ms/op
Iteration   8: 701,818 ms/op
Iteration   9: 694,523 ms/op
Iteration  10: 694,568 ms/op


Result "benchmarkFind":
  695,034 ±(99.9%) 4,751 ms/op [Average]
  (min, avg, max) = (689,345, 695,034, 701,818), stdev = 3,142
  CI (99.9%): [690,283, 699,785] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 128, patternSize = 4)

# Run progress: 89,38% complete, ETA 01:38:09
# Fork: 1 of 1
# Warmup Iteration   1: 156,647 ms/op
# Warmup Iteration   2: 143,807 ms/op
# Warmup Iteration   3: 143,723 ms/op
# Warmup Iteration   4: 142,862 ms/op
# Warmup Iteration   5: 145,733 ms/op
# Warmup Iteration   6: 143,386 ms/op
# Warmup Iteration   7: 155,350 ms/op
# Warmup Iteration   8: 146,435 ms/op
# Warmup Iteration   9: 145,728 ms/op
# Warmup Iteration  10: 142,632 ms/op
Iteration   1: 142,106 ms/op
Iteration   2: 142,018 ms/op
Iteration   3: 142,930 ms/op
Iteration   4: 142,267 ms/op
Iteration   5: 141,517 ms/op
Iteration   6: 143,319 ms/op
Iteration   7: 143,828 ms/op
Iteration   8: 145,091 ms/op
Iteration   9: 144,862 ms/op
Iteration  10: 145,400 ms/op


Result "benchmarkFind":
  143,334 ±(99.9%) 2,125 ms/op [Average]
  (min, avg, max) = (141,517, 143,334, 145,400), stdev = 1,406
  CI (99.9%): [141,209, 145,459] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 128, patternSize = 8)

# Run progress: 89,43% complete, ETA 01:37:43
# Fork: 1 of 1
# Warmup Iteration   1: 122,588 ms/op
# Warmup Iteration   2: 112,104 ms/op
# Warmup Iteration   3: 111,911 ms/op
# Warmup Iteration   4: 110,774 ms/op
# Warmup Iteration   5: 111,095 ms/op
# Warmup Iteration   6: 111,841 ms/op
# Warmup Iteration   7: 111,536 ms/op
# Warmup Iteration   8: 111,673 ms/op
# Warmup Iteration   9: 113,330 ms/op
# Warmup Iteration  10: 112,596 ms/op
Iteration   1: 113,260 ms/op
Iteration   2: 112,104 ms/op
Iteration   3: 112,146 ms/op
Iteration   4: 112,738 ms/op
Iteration   5: 113,206 ms/op
Iteration   6: 113,080 ms/op
Iteration   7: 112,263 ms/op
Iteration   8: 112,236 ms/op
Iteration   9: 113,682 ms/op
Iteration  10: 113,400 ms/op


Result "benchmarkFind":
  112,812 ±(99.9%) 0,889 ms/op [Average]
  (min, avg, max) = (112,104, 112,812, 113,682), stdev = 0,588
  CI (99.9%): [111,923, 113,701] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 128, patternSize = 16)

# Run progress: 89,48% complete, ETA 01:37:17
# Fork: 1 of 1
# Warmup Iteration   1: 108,346 ms/op
# Warmup Iteration   2: 98,823 ms/op
# Warmup Iteration   3: 97,922 ms/op
# Warmup Iteration   4: 98,038 ms/op
# Warmup Iteration   5: 97,749 ms/op
# Warmup Iteration   6: 97,880 ms/op
# Warmup Iteration   7: 97,643 ms/op
# Warmup Iteration   8: 98,663 ms/op
# Warmup Iteration   9: 98,716 ms/op
# Warmup Iteration  10: 98,838 ms/op
Iteration   1: 99,196 ms/op
Iteration   2: 98,628 ms/op
Iteration   3: 98,735 ms/op
Iteration   4: 98,586 ms/op
Iteration   5: 98,635 ms/op
Iteration   6: 99,576 ms/op
Iteration   7: 99,997 ms/op
Iteration   8: 102,458 ms/op
Iteration   9: 98,619 ms/op
Iteration  10: 98,887 ms/op


Result "benchmarkFind":
  99,332 ±(99.9%) 1,809 ms/op [Average]
  (min, avg, max) = (98,586, 99,332, 102,458), stdev = 1,197
  CI (99.9%): [97,522, 101,141] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 128, patternSize = 32)

# Run progress: 89,52% complete, ETA 01:36:52
# Fork: 1 of 1
# Warmup Iteration   1: 107,773 ms/op
# Warmup Iteration   2: 112,227 ms/op
# Warmup Iteration   3: 99,476 ms/op
# Warmup Iteration   4: 98,100 ms/op
# Warmup Iteration   5: 98,417 ms/op
# Warmup Iteration   6: 98,668 ms/op
# Warmup Iteration   7: 98,511 ms/op
# Warmup Iteration   8: 98,873 ms/op
# Warmup Iteration   9: 97,719 ms/op
# Warmup Iteration  10: 98,403 ms/op
Iteration   1: 98,419 ms/op
Iteration   2: 98,248 ms/op
Iteration   3: 98,744 ms/op
Iteration   4: 98,546 ms/op
Iteration   5: 100,123 ms/op
Iteration   6: 100,129 ms/op
Iteration   7: 100,410 ms/op
Iteration   8: 100,182 ms/op
Iteration   9: 99,694 ms/op
Iteration  10: 100,028 ms/op


Result "benchmarkFind":
  99,452 ±(99.9%) 1,294 ms/op [Average]
  (min, avg, max) = (98,248, 99,452, 100,410), stdev = 0,856
  CI (99.9%): [98,159, 100,746] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 128, patternSize = 64)

# Run progress: 89,57% complete, ETA 01:36:26
# Fork: 1 of 1
# Warmup Iteration   1: 122,326 ms/op
# Warmup Iteration   2: 112,767 ms/op
# Warmup Iteration   3: 108,336 ms/op
# Warmup Iteration   4: 109,002 ms/op
# Warmup Iteration   5: 109,029 ms/op
# Warmup Iteration   6: 109,024 ms/op
# Warmup Iteration   7: 109,629 ms/op
# Warmup Iteration   8: 109,411 ms/op
# Warmup Iteration   9: 110,845 ms/op
# Warmup Iteration  10: 109,571 ms/op
Iteration   1: 109,305 ms/op
Iteration   2: 110,454 ms/op
Iteration   3: 110,773 ms/op
Iteration   4: 110,896 ms/op
Iteration   5: 110,775 ms/op
Iteration   6: 110,813 ms/op
Iteration   7: 110,834 ms/op
Iteration   8: 110,589 ms/op
Iteration   9: 110,832 ms/op
Iteration  10: 111,843 ms/op


Result "benchmarkFind":
  110,712 ±(99.9%) 0,932 ms/op [Average]
  (min, avg, max) = (109,305, 110,712, 111,843), stdev = 0,617
  CI (99.9%): [109,779, 111,644] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 128, patternSize = 128)

# Run progress: 89,61% complete, ETA 01:36:00
# Fork: 1 of 1
# Warmup Iteration   1: 118,076 ms/op
# Warmup Iteration   2: 103,349 ms/op
# Warmup Iteration   3: 103,721 ms/op
# Warmup Iteration   4: 100,533 ms/op
# Warmup Iteration   5: 100,669 ms/op
# Warmup Iteration   6: 100,231 ms/op
# Warmup Iteration   7: 100,604 ms/op
# Warmup Iteration   8: 101,490 ms/op
# Warmup Iteration   9: 101,010 ms/op
# Warmup Iteration  10: 100,342 ms/op
Iteration   1: 100,945 ms/op
Iteration   2: 101,038 ms/op
Iteration   3: 100,676 ms/op
Iteration   4: 101,471 ms/op
Iteration   5: 102,128 ms/op
Iteration   6: 101,771 ms/op
Iteration   7: 112,170 ms/op
Iteration   8: 100,610 ms/op
Iteration   9: 100,355 ms/op
Iteration  10: 100,866 ms/op


Result "benchmarkFind":
  102,203 ±(99.9%) 5,359 ms/op [Average]
  (min, avg, max) = (100,355, 102,203, 112,170), stdev = 3,545
  CI (99.9%): [96,844, 107,562] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternNumber = 128, patternSize = 256)

# Run progress: 89,66% complete, ETA 01:35:34
# Fork: 1 of 1
# Warmup Iteration   1: 119,913 ms/op
# Warmup Iteration   2: 114,007 ms/op
# Warmup Iteration   3: 108,045 ms/op
# Warmup Iteration   4: 108,881 ms/op
# Warmup Iteration   5: 108,205 ms/op
# Warmup Iteration   6: 108,983 ms/op
# Warmup Iteration   7: 108,890 ms/op
# Warmup Iteration   8: 108,547 ms/op
# Warmup Iteration   9: 108,812 ms/op
# Warmup Iteration  10: 109,507 ms/op
Iteration   1: 108,994 ms/op
Iteration   2: 109,527 ms/op
Iteration   3: 110,745 ms/op
Iteration   4: 112,428 ms/op
Iteration   5: 112,651 ms/op
Iteration   6: 109,395 ms/op
Iteration   7: 111,012 ms/op
Iteration   8: 111,159 ms/op
Iteration   9: 111,758 ms/op
Iteration  10: 110,553 ms/op


Result "benchmarkFind":
  110,822 ±(99.9%) 1,891 ms/op [Average]
  (min, avg, max) = (108,994, 110,822, 112,651), stdev = 1,251
  CI (99.9%): [108,931, 112,714] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 2, patternSize = 2)

# Run progress: 89,71% complete, ETA 01:35:08
# Fork: 1 of 1
# Warmup Iteration   1: 308,545 ms/op
# Warmup Iteration   2: 294,618 ms/op
# Warmup Iteration   3: 282,206 ms/op
# Warmup Iteration   4: 280,812 ms/op
# Warmup Iteration   5: 281,002 ms/op
# Warmup Iteration   6: 282,114 ms/op
# Warmup Iteration   7: 281,490 ms/op
# Warmup Iteration   8: 283,598 ms/op
# Warmup Iteration   9: 284,104 ms/op
# Warmup Iteration  10: 287,279 ms/op
Iteration   1: 287,602 ms/op
Iteration   2: 287,352 ms/op
Iteration   3: 287,073 ms/op
Iteration   4: 288,444 ms/op
Iteration   5: 287,961 ms/op
Iteration   6: 284,517 ms/op
Iteration   7: 285,146 ms/op
Iteration   8: 289,379 ms/op
Iteration   9: 285,717 ms/op
Iteration  10: 285,373 ms/op


Result "benchmarkFind":
  286,856 ±(99.9%) 2,409 ms/op [Average]
  (min, avg, max) = (284,517, 286,856, 289,379), stdev = 1,593
  CI (99.9%): [284,448, 289,265] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 2, patternSize = 4)

# Run progress: 89,75% complete, ETA 01:34:42
# Fork: 1 of 1
# Warmup Iteration   1: 207,045 ms/op
# Warmup Iteration   2: 192,934 ms/op
# Warmup Iteration   3: 187,538 ms/op
# Warmup Iteration   4: 187,544 ms/op
# Warmup Iteration   5: 190,023 ms/op
# Warmup Iteration   6: 187,653 ms/op
# Warmup Iteration   7: 186,985 ms/op
# Warmup Iteration   8: 188,728 ms/op
# Warmup Iteration   9: 210,278 ms/op
# Warmup Iteration  10: 189,361 ms/op
Iteration   1: 189,740 ms/op
Iteration   2: 189,257 ms/op
Iteration   3: 189,643 ms/op
Iteration   4: 190,643 ms/op
Iteration   5: 189,798 ms/op
Iteration   6: 189,584 ms/op
Iteration   7: 189,555 ms/op
Iteration   8: 189,614 ms/op
Iteration   9: 189,941 ms/op
Iteration  10: 189,851 ms/op


Result "benchmarkFind":
  189,763 ±(99.9%) 0,549 ms/op [Average]
  (min, avg, max) = (189,257, 189,763, 190,643), stdev = 0,363
  CI (99.9%): [189,214, 190,311] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 2, patternSize = 8)

# Run progress: 89,80% complete, ETA 01:34:17
# Fork: 1 of 1
# Warmup Iteration   1: 105,917 ms/op
# Warmup Iteration   2: 97,199 ms/op
# Warmup Iteration   3: 94,979 ms/op
# Warmup Iteration   4: 94,357 ms/op
# Warmup Iteration   5: 93,572 ms/op
# Warmup Iteration   6: 94,358 ms/op
# Warmup Iteration   7: 95,370 ms/op
# Warmup Iteration   8: 94,371 ms/op
# Warmup Iteration   9: 94,429 ms/op
# Warmup Iteration  10: 95,632 ms/op
Iteration   1: 94,191 ms/op
Iteration   2: 95,033 ms/op
Iteration   3: 95,055 ms/op
Iteration   4: 95,030 ms/op
Iteration   5: 95,253 ms/op
Iteration   6: 94,824 ms/op
Iteration   7: 94,616 ms/op
Iteration   8: 94,715 ms/op
Iteration   9: 94,718 ms/op
Iteration  10: 94,677 ms/op


Result "benchmarkFind":
  94,811 ±(99.9%) 0,454 ms/op [Average]
  (min, avg, max) = (94,191, 94,811, 95,253), stdev = 0,300
  CI (99.9%): [94,358, 95,265] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 2, patternSize = 16)

# Run progress: 89,84% complete, ETA 01:33:51
# Fork: 1 of 1
# Warmup Iteration   1: 51,441 ms/op
# Warmup Iteration   2: 48,485 ms/op
# Warmup Iteration   3: 47,413 ms/op
# Warmup Iteration   4: 46,870 ms/op
# Warmup Iteration   5: 46,872 ms/op
# Warmup Iteration   6: 47,337 ms/op
# Warmup Iteration   7: 46,775 ms/op
# Warmup Iteration   8: 46,640 ms/op
# Warmup Iteration   9: 47,331 ms/op
# Warmup Iteration  10: 47,181 ms/op
Iteration   1: 47,468 ms/op
Iteration   2: 47,808 ms/op
Iteration   3: 47,525 ms/op
Iteration   4: 47,448 ms/op
Iteration   5: 47,656 ms/op
Iteration   6: 47,599 ms/op
Iteration   7: 47,207 ms/op
Iteration   8: 47,455 ms/op
Iteration   9: 46,989 ms/op
Iteration  10: 46,971 ms/op


Result "benchmarkFind":
  47,413 ±(99.9%) 0,417 ms/op [Average]
  (min, avg, max) = (46,971, 47,413, 47,808), stdev = 0,276
  CI (99.9%): [46,995, 47,830] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 2, patternSize = 32)

# Run progress: 89,89% complete, ETA 01:33:25
# Fork: 1 of 1
# Warmup Iteration   1: 29,792 ms/op
# Warmup Iteration   2: 28,463 ms/op
# Warmup Iteration   3: 30,472 ms/op
# Warmup Iteration   4: 27,480 ms/op
# Warmup Iteration   5: 27,290 ms/op
# Warmup Iteration   6: 27,443 ms/op
# Warmup Iteration   7: 27,441 ms/op
# Warmup Iteration   8: 27,435 ms/op
# Warmup Iteration   9: 27,450 ms/op
# Warmup Iteration  10: 27,470 ms/op
Iteration   1: 27,965 ms/op
Iteration   2: 27,935 ms/op
Iteration   3: 27,950 ms/op
Iteration   4: 27,678 ms/op
Iteration   5: 27,794 ms/op
Iteration   6: 27,824 ms/op
Iteration   7: 28,051 ms/op
Iteration   8: 27,655 ms/op
Iteration   9: 28,000 ms/op
Iteration  10: 27,793 ms/op


Result "benchmarkFind":
  27,865 ±(99.9%) 0,205 ms/op [Average]
  (min, avg, max) = (27,655, 27,865, 28,051), stdev = 0,136
  CI (99.9%): [27,660, 28,070] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 2, patternSize = 64)

# Run progress: 89,94% complete, ETA 01:32:59
# Fork: 1 of 1
# Warmup Iteration   1: 16,701 ms/op
# Warmup Iteration   2: 16,052 ms/op
# Warmup Iteration   3: 15,516 ms/op
# Warmup Iteration   4: 15,622 ms/op
# Warmup Iteration   5: 15,534 ms/op
# Warmup Iteration   6: 15,652 ms/op
# Warmup Iteration   7: 15,384 ms/op
# Warmup Iteration   8: 15,491 ms/op
# Warmup Iteration   9: 15,685 ms/op
# Warmup Iteration  10: 15,570 ms/op
Iteration   1: 15,601 ms/op
Iteration   2: 15,671 ms/op
Iteration   3: 15,709 ms/op
Iteration   4: 15,686 ms/op
Iteration   5: 15,760 ms/op
Iteration   6: 15,722 ms/op
Iteration   7: 15,691 ms/op
Iteration   8: 15,802 ms/op
Iteration   9: 15,806 ms/op
Iteration  10: 15,751 ms/op


Result "benchmarkFind":
  15,720 ±(99.9%) 0,095 ms/op [Average]
  (min, avg, max) = (15,601, 15,720, 15,806), stdev = 0,063
  CI (99.9%): [15,625, 15,815] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 2, patternSize = 128)

# Run progress: 89,98% complete, ETA 01:32:33
# Fork: 1 of 1
# Warmup Iteration   1: 11,427 ms/op
# Warmup Iteration   2: 10,871 ms/op
# Warmup Iteration   3: 10,472 ms/op
# Warmup Iteration   4: 10,364 ms/op
# Warmup Iteration   5: 10,395 ms/op
# Warmup Iteration   6: 10,393 ms/op
# Warmup Iteration   7: 10,378 ms/op
# Warmup Iteration   8: 10,365 ms/op
# Warmup Iteration   9: 10,380 ms/op
# Warmup Iteration  10: 10,401 ms/op
Iteration   1: 10,436 ms/op
Iteration   2: 10,431 ms/op
Iteration   3: 10,462 ms/op
Iteration   4: 10,536 ms/op
Iteration   5: 10,537 ms/op
Iteration   6: 10,584 ms/op
Iteration   7: 10,583 ms/op
Iteration   8: 10,627 ms/op
Iteration   9: 10,606 ms/op
Iteration  10: 12,245 ms/op


Result "benchmarkFind":
  10,705 ±(99.9%) 0,825 ms/op [Average]
  (min, avg, max) = (10,431, 10,705, 12,245), stdev = 0,546
  CI (99.9%): [9,880, 11,530] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 2, patternSize = 256)

# Run progress: 90,03% complete, ETA 01:32:07
# Fork: 1 of 1
# Warmup Iteration   1: 10,901 ms/op
# Warmup Iteration   2: 10,349 ms/op
# Warmup Iteration   3: 10,508 ms/op
# Warmup Iteration   4: 10,127 ms/op
# Warmup Iteration   5: 10,069 ms/op
# Warmup Iteration   6: 10,065 ms/op
# Warmup Iteration   7: 10,053 ms/op
# Warmup Iteration   8: 10,070 ms/op
# Warmup Iteration   9: 10,055 ms/op
# Warmup Iteration  10: 10,072 ms/op
Iteration   1: 10,060 ms/op
Iteration   2: 10,073 ms/op
Iteration   3: 10,078 ms/op
Iteration   4: 10,084 ms/op
Iteration   5: 10,082 ms/op
Iteration   6: 10,099 ms/op
Iteration   7: 10,099 ms/op
Iteration   8: 10,127 ms/op
Iteration   9: 10,127 ms/op
Iteration  10: 10,164 ms/op


Result "benchmarkFind":
  10,099 ±(99.9%) 0,048 ms/op [Average]
  (min, avg, max) = (10,060, 10,099, 10,164), stdev = 0,031
  CI (99.9%): [10,052, 10,147] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 8, patternSize = 2)

# Run progress: 90,07% complete, ETA 01:31:41
# Fork: 1 of 1
# Warmup Iteration   1: 319,621 ms/op
# Warmup Iteration   2: 300,837 ms/op
# Warmup Iteration   3: 292,184 ms/op
# Warmup Iteration   4: 291,159 ms/op
# Warmup Iteration   5: 293,602 ms/op
# Warmup Iteration   6: 291,378 ms/op
# Warmup Iteration   7: 293,114 ms/op
# Warmup Iteration   8: 291,142 ms/op
# Warmup Iteration   9: 291,195 ms/op
# Warmup Iteration  10: 294,128 ms/op
Iteration   1: 292,277 ms/op
Iteration   2: 291,484 ms/op
Iteration   3: 291,918 ms/op
Iteration   4: 301,527 ms/op
Iteration   5: 292,637 ms/op
Iteration   6: 292,168 ms/op
Iteration   7: 292,348 ms/op
Iteration   8: 290,740 ms/op
Iteration   9: 292,599 ms/op
Iteration  10: 292,754 ms/op


Result "benchmarkFind":
  293,045 ±(99.9%) 4,598 ms/op [Average]
  (min, avg, max) = (290,740, 293,045, 301,527), stdev = 3,041
  CI (99.9%): [288,447, 297,643] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 8, patternSize = 4)

# Run progress: 90,12% complete, ETA 01:31:15
# Fork: 1 of 1
# Warmup Iteration   1: 216,103 ms/op
# Warmup Iteration   2: 206,152 ms/op
# Warmup Iteration   3: 200,654 ms/op
# Warmup Iteration   4: 200,379 ms/op
# Warmup Iteration   5: 200,477 ms/op
# Warmup Iteration   6: 201,473 ms/op
# Warmup Iteration   7: 202,090 ms/op
# Warmup Iteration   8: 201,964 ms/op
# Warmup Iteration   9: 201,747 ms/op
# Warmup Iteration  10: 202,278 ms/op
Iteration   1: 200,857 ms/op
Iteration   2: 203,123 ms/op
Iteration   3: 219,602 ms/op
Iteration   4: 200,365 ms/op
Iteration   5: 199,371 ms/op
Iteration   6: 200,059 ms/op
Iteration   7: 198,728 ms/op
Iteration   8: 200,181 ms/op
Iteration   9: 200,191 ms/op
Iteration  10: 200,141 ms/op


Result "benchmarkFind":
  202,262 ±(99.9%) 9,372 ms/op [Average]
  (min, avg, max) = (198,728, 202,262, 219,602), stdev = 6,199
  CI (99.9%): [192,890, 211,633] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 8, patternSize = 8)

# Run progress: 90,17% complete, ETA 01:30:50
# Fork: 1 of 1
# Warmup Iteration   1: 136,424 ms/op
# Warmup Iteration   2: 128,731 ms/op
# Warmup Iteration   3: 123,893 ms/op
# Warmup Iteration   4: 123,811 ms/op
# Warmup Iteration   5: 123,736 ms/op
# Warmup Iteration   6: 123,715 ms/op
# Warmup Iteration   7: 124,586 ms/op
# Warmup Iteration   8: 124,417 ms/op
# Warmup Iteration   9: 125,340 ms/op
# Warmup Iteration  10: 124,899 ms/op
Iteration   1: 124,914 ms/op
Iteration   2: 124,637 ms/op
Iteration   3: 125,127 ms/op
Iteration   4: 124,840 ms/op
Iteration   5: 125,276 ms/op
Iteration   6: 125,426 ms/op
Iteration   7: 122,617 ms/op
Iteration   8: 122,769 ms/op
Iteration   9: 123,135 ms/op
Iteration  10: 122,181 ms/op


Result "benchmarkFind":
  124,092 ±(99.9%) 1,904 ms/op [Average]
  (min, avg, max) = (122,181, 124,092, 125,426), stdev = 1,260
  CI (99.9%): [122,188, 125,996] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 8, patternSize = 16)

# Run progress: 90,21% complete, ETA 01:30:24
# Fork: 1 of 1
# Warmup Iteration   1: 78,937 ms/op
# Warmup Iteration   2: 72,805 ms/op
# Warmup Iteration   3: 70,519 ms/op
# Warmup Iteration   4: 70,381 ms/op
# Warmup Iteration   5: 70,686 ms/op
# Warmup Iteration   6: 70,396 ms/op
# Warmup Iteration   7: 70,341 ms/op
# Warmup Iteration   8: 70,814 ms/op
# Warmup Iteration   9: 71,576 ms/op
# Warmup Iteration  10: 70,948 ms/op
Iteration   1: 70,845 ms/op
Iteration   2: 71,092 ms/op
Iteration   3: 70,919 ms/op
Iteration   4: 71,072 ms/op
Iteration   5: 70,434 ms/op
Iteration   6: 70,486 ms/op
Iteration   7: 70,864 ms/op
Iteration   8: 70,604 ms/op
Iteration   9: 71,090 ms/op
Iteration  10: 71,059 ms/op


Result "benchmarkFind":
  70,847 ±(99.9%) 0,384 ms/op [Average]
  (min, avg, max) = (70,434, 70,847, 71,092), stdev = 0,254
  CI (99.9%): [70,463, 71,230] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 8, patternSize = 32)

# Run progress: 90,26% complete, ETA 01:29:58
# Fork: 1 of 1
# Warmup Iteration   1: 51,268 ms/op
# Warmup Iteration   2: 49,047 ms/op
# Warmup Iteration   3: 48,107 ms/op
# Warmup Iteration   4: 47,311 ms/op
# Warmup Iteration   5: 47,703 ms/op
# Warmup Iteration   6: 52,883 ms/op
# Warmup Iteration   7: 47,411 ms/op
# Warmup Iteration   8: 48,010 ms/op
# Warmup Iteration   9: 47,736 ms/op
# Warmup Iteration  10: 47,743 ms/op
Iteration   1: 48,245 ms/op
Iteration   2: 48,218 ms/op
Iteration   3: 48,209 ms/op
Iteration   4: 48,179 ms/op
Iteration   5: 47,841 ms/op
Iteration   6: 47,940 ms/op
Iteration   7: 48,131 ms/op
Iteration   8: 48,015 ms/op
Iteration   9: 48,066 ms/op
Iteration  10: 47,994 ms/op


Result "benchmarkFind":
  48,084 ±(99.9%) 0,204 ms/op [Average]
  (min, avg, max) = (47,841, 48,084, 48,245), stdev = 0,135
  CI (99.9%): [47,880, 48,288] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 8, patternSize = 64)

# Run progress: 90,30% complete, ETA 01:29:32
# Fork: 1 of 1
# Warmup Iteration   1: 33,547 ms/op
# Warmup Iteration   2: 31,676 ms/op
# Warmup Iteration   3: 30,452 ms/op
# Warmup Iteration   4: 30,313 ms/op
# Warmup Iteration   5: 30,793 ms/op
# Warmup Iteration   6: 30,428 ms/op
# Warmup Iteration   7: 30,453 ms/op
# Warmup Iteration   8: 30,411 ms/op
# Warmup Iteration   9: 30,248 ms/op
# Warmup Iteration  10: 30,956 ms/op
Iteration   1: 30,594 ms/op
Iteration   2: 30,680 ms/op
Iteration   3: 30,801 ms/op
Iteration   4: 30,998 ms/op
Iteration   5: 30,700 ms/op
Iteration   6: 30,629 ms/op
Iteration   7: 30,895 ms/op
Iteration   8: 30,818 ms/op
Iteration   9: 31,063 ms/op
Iteration  10: 30,957 ms/op


Result "benchmarkFind":
  30,813 ±(99.9%) 0,245 ms/op [Average]
  (min, avg, max) = (30,594, 30,813, 31,063), stdev = 0,162
  CI (99.9%): [30,568, 31,059] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 8, patternSize = 128)

# Run progress: 90,35% complete, ETA 01:29:06
# Fork: 1 of 1
# Warmup Iteration   1: 24,291 ms/op
# Warmup Iteration   2: 22,120 ms/op
# Warmup Iteration   3: 21,314 ms/op
# Warmup Iteration   4: 21,049 ms/op
# Warmup Iteration   5: 21,230 ms/op
# Warmup Iteration   6: 21,208 ms/op
# Warmup Iteration   7: 21,172 ms/op
# Warmup Iteration   8: 21,223 ms/op
# Warmup Iteration   9: 21,297 ms/op
# Warmup Iteration  10: 21,224 ms/op
Iteration   1: 21,489 ms/op
Iteration   2: 21,534 ms/op
Iteration   3: 21,555 ms/op
Iteration   4: 21,450 ms/op
Iteration   5: 21,510 ms/op
Iteration   6: 21,449 ms/op
Iteration   7: 21,641 ms/op
Iteration   8: 21,556 ms/op
Iteration   9: 21,539 ms/op
Iteration  10: 21,550 ms/op


Result "benchmarkFind":
  21,527 ±(99.9%) 0,086 ms/op [Average]
  (min, avg, max) = (21,449, 21,527, 21,641), stdev = 0,057
  CI (99.9%): [21,441, 21,613] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 8, patternSize = 256)

# Run progress: 90,40% complete, ETA 01:28:40
# Fork: 1 of 1
# Warmup Iteration   1: 22,980 ms/op
# Warmup Iteration   2: 24,095 ms/op
# Warmup Iteration   3: 21,691 ms/op
# Warmup Iteration   4: 21,206 ms/op
# Warmup Iteration   5: 21,343 ms/op
# Warmup Iteration   6: 21,283 ms/op
# Warmup Iteration   7: 21,350 ms/op
# Warmup Iteration   8: 21,278 ms/op
# Warmup Iteration   9: 21,353 ms/op
# Warmup Iteration  10: 21,490 ms/op
Iteration   1: 21,496 ms/op
Iteration   2: 21,532 ms/op
Iteration   3: 21,722 ms/op
Iteration   4: 21,581 ms/op
Iteration   5: 21,551 ms/op
Iteration   6: 21,588 ms/op
Iteration   7: 21,633 ms/op
Iteration   8: 21,554 ms/op
Iteration   9: 21,737 ms/op
Iteration  10: 21,963 ms/op


Result "benchmarkFind":
  21,636 ±(99.9%) 0,210 ms/op [Average]
  (min, avg, max) = (21,496, 21,636, 21,963), stdev = 0,139
  CI (99.9%): [21,426, 21,846] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 32, patternSize = 2)

# Run progress: 90,44% complete, ETA 01:28:14
# Fork: 1 of 1
# Warmup Iteration   1: 414,089 ms/op
# Warmup Iteration   2: 388,247 ms/op
# Warmup Iteration   3: 378,316 ms/op
# Warmup Iteration   4: 371,479 ms/op
# Warmup Iteration   5: 376,104 ms/op
# Warmup Iteration   6: 372,415 ms/op
# Warmup Iteration   7: 373,384 ms/op
# Warmup Iteration   8: 373,001 ms/op
# Warmup Iteration   9: 383,286 ms/op
# Warmup Iteration  10: 373,320 ms/op
Iteration   1: 375,600 ms/op
Iteration   2: 375,504 ms/op
Iteration   3: 376,138 ms/op
Iteration   4: 376,061 ms/op
Iteration   5: 375,969 ms/op
Iteration   6: 373,618 ms/op
Iteration   7: 377,866 ms/op
Iteration   8: 375,499 ms/op
Iteration   9: 376,870 ms/op
Iteration  10: 374,372 ms/op


Result "benchmarkFind":
  375,750 ±(99.9%) 1,790 ms/op [Average]
  (min, avg, max) = (373,618, 375,750, 377,866), stdev = 1,184
  CI (99.9%): [373,960, 377,540] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 32, patternSize = 4)

# Run progress: 90,49% complete, ETA 01:27:49
# Fork: 1 of 1
# Warmup Iteration   1: 274,092 ms/op
# Warmup Iteration   2: 257,028 ms/op
# Warmup Iteration   3: 243,994 ms/op
# Warmup Iteration   4: 244,664 ms/op
# Warmup Iteration   5: 245,064 ms/op
# Warmup Iteration   6: 245,497 ms/op
# Warmup Iteration   7: 247,010 ms/op
# Warmup Iteration   8: 246,579 ms/op
# Warmup Iteration   9: 248,004 ms/op
# Warmup Iteration  10: 249,850 ms/op
Iteration   1: 249,472 ms/op
Iteration   2: 247,370 ms/op
Iteration   3: 247,392 ms/op
Iteration   4: 271,399 ms/op
Iteration   5: 251,032 ms/op
Iteration   6: 246,031 ms/op
Iteration   7: 244,519 ms/op
Iteration   8: 245,297 ms/op
Iteration   9: 245,820 ms/op
Iteration  10: 247,128 ms/op


Result "benchmarkFind":
  249,546 ±(99.9%) 11,974 ms/op [Average]
  (min, avg, max) = (244,519, 249,546, 271,399), stdev = 7,920
  CI (99.9%): [237,572, 261,520] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 32, patternSize = 8)

# Run progress: 90,53% complete, ETA 01:27:23
# Fork: 1 of 1
# Warmup Iteration   1: 220,603 ms/op
# Warmup Iteration   2: 212,927 ms/op
# Warmup Iteration   3: 205,414 ms/op
# Warmup Iteration   4: 205,806 ms/op
# Warmup Iteration   5: 204,471 ms/op
# Warmup Iteration   6: 207,685 ms/op
# Warmup Iteration   7: 205,311 ms/op
# Warmup Iteration   8: 204,631 ms/op
# Warmup Iteration   9: 204,842 ms/op
# Warmup Iteration  10: 207,030 ms/op
Iteration   1: 207,755 ms/op
Iteration   2: 207,657 ms/op
Iteration   3: 207,986 ms/op
Iteration   4: 206,734 ms/op
Iteration   5: 207,696 ms/op
Iteration   6: 207,551 ms/op
Iteration   7: 209,071 ms/op
Iteration   8: 208,454 ms/op
Iteration   9: 209,940 ms/op
Iteration  10: 210,205 ms/op


Result "benchmarkFind":
  208,305 ±(99.9%) 1,681 ms/op [Average]
  (min, avg, max) = (206,734, 208,305, 210,205), stdev = 1,112
  CI (99.9%): [206,624, 209,986] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 32, patternSize = 16)

# Run progress: 90,58% complete, ETA 01:26:57
# Fork: 1 of 1
# Warmup Iteration   1: 140,599 ms/op
# Warmup Iteration   2: 131,875 ms/op
# Warmup Iteration   3: 129,337 ms/op
# Warmup Iteration   4: 130,670 ms/op
# Warmup Iteration   5: 130,847 ms/op
# Warmup Iteration   6: 130,616 ms/op
# Warmup Iteration   7: 130,065 ms/op
# Warmup Iteration   8: 130,562 ms/op
# Warmup Iteration   9: 129,770 ms/op
# Warmup Iteration  10: 130,836 ms/op
Iteration   1: 131,342 ms/op
Iteration   2: 131,162 ms/op
Iteration   3: 131,858 ms/op
Iteration   4: 132,057 ms/op
Iteration   5: 131,618 ms/op
Iteration   6: 131,289 ms/op
Iteration   7: 131,782 ms/op
Iteration   8: 131,471 ms/op
Iteration   9: 130,899 ms/op
Iteration  10: 130,865 ms/op


Result "benchmarkFind":
  131,434 ±(99.9%) 0,604 ms/op [Average]
  (min, avg, max) = (130,865, 131,434, 132,057), stdev = 0,400
  CI (99.9%): [130,830, 132,038] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 32, patternSize = 32)

# Run progress: 90,63% complete, ETA 01:26:32
# Fork: 1 of 1
# Warmup Iteration   1: 101,087 ms/op
# Warmup Iteration   2: 95,759 ms/op
# Warmup Iteration   3: 92,801 ms/op
# Warmup Iteration   4: 92,165 ms/op
# Warmup Iteration   5: 92,850 ms/op
# Warmup Iteration   6: 92,886 ms/op
# Warmup Iteration   7: 92,855 ms/op
# Warmup Iteration   8: 101,553 ms/op
# Warmup Iteration   9: 93,367 ms/op
# Warmup Iteration  10: 94,081 ms/op
Iteration   1: 93,533 ms/op
Iteration   2: 92,805 ms/op
Iteration   3: 93,266 ms/op
Iteration   4: 94,082 ms/op
Iteration   5: 93,235 ms/op
Iteration   6: 93,153 ms/op
Iteration   7: 93,364 ms/op
Iteration   8: 93,506 ms/op
Iteration   9: 93,784 ms/op
Iteration  10: 93,919 ms/op


Result "benchmarkFind":
  93,465 ±(99.9%) 0,582 ms/op [Average]
  (min, avg, max) = (92,805, 93,465, 94,082), stdev = 0,385
  CI (99.9%): [92,883, 94,046] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 32, patternSize = 64)

# Run progress: 90,67% complete, ETA 01:26:06
# Fork: 1 of 1
# Warmup Iteration   1: 93,798 ms/op
# Warmup Iteration   2: 87,321 ms/op
# Warmup Iteration   3: 84,322 ms/op
# Warmup Iteration   4: 83,326 ms/op
# Warmup Iteration   5: 84,033 ms/op
# Warmup Iteration   6: 84,130 ms/op
# Warmup Iteration   7: 84,325 ms/op
# Warmup Iteration   8: 84,276 ms/op
# Warmup Iteration   9: 84,386 ms/op
# Warmup Iteration  10: 83,940 ms/op
Iteration   1: 84,879 ms/op
Iteration   2: 84,701 ms/op
Iteration   3: 85,626 ms/op
Iteration   4: 84,819 ms/op
Iteration   5: 84,647 ms/op
Iteration   6: 84,792 ms/op
Iteration   7: 85,113 ms/op
Iteration   8: 84,362 ms/op
Iteration   9: 84,679 ms/op
Iteration  10: 85,446 ms/op


Result "benchmarkFind":
  84,906 ±(99.9%) 0,581 ms/op [Average]
  (min, avg, max) = (84,362, 84,906, 85,626), stdev = 0,385
  CI (99.9%): [84,325, 85,488] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 32, patternSize = 128)

# Run progress: 90,72% complete, ETA 01:25:40
# Fork: 1 of 1
# Warmup Iteration   1: 88,748 ms/op
# Warmup Iteration   2: 84,131 ms/op
# Warmup Iteration   3: 81,726 ms/op
# Warmup Iteration   4: 80,918 ms/op
# Warmup Iteration   5: 80,852 ms/op
# Warmup Iteration   6: 80,750 ms/op
# Warmup Iteration   7: 80,981 ms/op
# Warmup Iteration   8: 80,663 ms/op
# Warmup Iteration   9: 81,206 ms/op
# Warmup Iteration  10: 81,289 ms/op
Iteration   1: 81,144 ms/op
Iteration   2: 81,874 ms/op
Iteration   3: 81,988 ms/op
Iteration   4: 81,529 ms/op
Iteration   5: 81,488 ms/op
Iteration   6: 81,942 ms/op
Iteration   7: 82,054 ms/op
Iteration   8: 81,550 ms/op
Iteration   9: 84,133 ms/op
Iteration  10: 92,618 ms/op


Result "benchmarkFind":
  83,032 ±(99.9%) 5,239 ms/op [Average]
  (min, avg, max) = (81,144, 83,032, 92,618), stdev = 3,465
  CI (99.9%): [77,793, 88,271] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 32, patternSize = 256)

# Run progress: 90,76% complete, ETA 01:25:14
# Fork: 1 of 1
# Warmup Iteration   1: 84,991 ms/op
# Warmup Iteration   2: 80,500 ms/op
# Warmup Iteration   3: 88,017 ms/op
# Warmup Iteration   4: 78,781 ms/op
# Warmup Iteration   5: 77,614 ms/op
# Warmup Iteration   6: 77,379 ms/op
# Warmup Iteration   7: 77,323 ms/op
# Warmup Iteration   8: 77,307 ms/op
# Warmup Iteration   9: 78,234 ms/op
# Warmup Iteration  10: 77,600 ms/op
Iteration   1: 77,369 ms/op
Iteration   2: 77,722 ms/op
Iteration   3: 77,413 ms/op
Iteration   4: 77,429 ms/op
Iteration   5: 77,266 ms/op
Iteration   6: 77,362 ms/op
Iteration   7: 77,280 ms/op
Iteration   8: 77,171 ms/op
Iteration   9: 77,136 ms/op
Iteration  10: 77,249 ms/op


Result "benchmarkFind":
  77,340 ±(99.9%) 0,251 ms/op [Average]
  (min, avg, max) = (77,136, 77,340, 77,722), stdev = 0,166
  CI (99.9%): [77,089, 77,591] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 128, patternSize = 2)

# Run progress: 90,81% complete, ETA 01:24:48
# Fork: 1 of 1
# Warmup Iteration   1: 1336,130 ms/op
# Warmup Iteration   2: 1256,264 ms/op
# Warmup Iteration   3: 1227,834 ms/op
# Warmup Iteration   4: 1219,377 ms/op
# Warmup Iteration   5: 1207,149 ms/op
# Warmup Iteration   6: 1211,071 ms/op
# Warmup Iteration   7: 1210,292 ms/op
# Warmup Iteration   8: 1217,207 ms/op
# Warmup Iteration   9: 1217,620 ms/op
# Warmup Iteration  10: 1206,132 ms/op
Iteration   1: 1217,723 ms/op
Iteration   2: 1223,715 ms/op
Iteration   3: 1212,918 ms/op
Iteration   4: 1212,706 ms/op
Iteration   5: 1237,658 ms/op
Iteration   6: 1220,089 ms/op
Iteration   7: 1221,438 ms/op
Iteration   8: 1212,084 ms/op
Iteration   9: 1213,677 ms/op
Iteration  10: 1202,749 ms/op


Result "benchmarkFind":
  1217,476 ±(99.9%) 14,009 ms/op [Average]
  (min, avg, max) = (1202,749, 1217,476, 1237,658), stdev = 9,266
  CI (99.9%): [1203,467, 1231,485] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 128, patternSize = 4)

# Run progress: 90,85% complete, ETA 01:24:23
# Fork: 1 of 1
# Warmup Iteration   1: 603,992 ms/op
# Warmup Iteration   2: 579,348 ms/op
# Warmup Iteration   3: 564,330 ms/op
# Warmup Iteration   4: 565,793 ms/op
# Warmup Iteration   5: 562,400 ms/op
# Warmup Iteration   6: 561,068 ms/op
# Warmup Iteration   7: 563,122 ms/op
# Warmup Iteration   8: 563,222 ms/op
# Warmup Iteration   9: 562,980 ms/op
# Warmup Iteration  10: 565,714 ms/op
Iteration   1: 575,115 ms/op
Iteration   2: 571,182 ms/op
Iteration   3: 568,614 ms/op
Iteration   4: 637,931 ms/op
Iteration   5: 563,351 ms/op
Iteration   6: 562,713 ms/op
Iteration   7: 576,320 ms/op
Iteration   8: 575,773 ms/op
Iteration   9: 574,929 ms/op
Iteration  10: 579,582 ms/op


Result "benchmarkFind":
  578,551 ±(99.9%) 32,658 ms/op [Average]
  (min, avg, max) = (562,713, 578,551, 637,931), stdev = 21,601
  CI (99.9%): [545,893, 611,209] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 128, patternSize = 8)

# Run progress: 90,90% complete, ETA 01:23:57
# Fork: 1 of 1
# Warmup Iteration   1: 463,946 ms/op
# Warmup Iteration   2: 448,566 ms/op
# Warmup Iteration   3: 437,152 ms/op
# Warmup Iteration   4: 438,686 ms/op
# Warmup Iteration   5: 440,142 ms/op
# Warmup Iteration   6: 440,935 ms/op
# Warmup Iteration   7: 440,478 ms/op
# Warmup Iteration   8: 444,258 ms/op
# Warmup Iteration   9: 444,287 ms/op
# Warmup Iteration  10: 443,699 ms/op
Iteration   1: 446,674 ms/op
Iteration   2: 445,324 ms/op
Iteration   3: 444,783 ms/op
Iteration   4: 443,550 ms/op
Iteration   5: 443,587 ms/op
Iteration   6: 445,284 ms/op
Iteration   7: 441,951 ms/op
Iteration   8: 445,524 ms/op
Iteration   9: 445,079 ms/op
Iteration  10: 444,083 ms/op


Result "benchmarkFind":
  444,584 ±(99.9%) 2,004 ms/op [Average]
  (min, avg, max) = (441,951, 444,584, 446,674), stdev = 1,326
  CI (99.9%): [442,579, 446,588] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 128, patternSize = 16)

# Run progress: 90,95% complete, ETA 01:23:32
# Fork: 1 of 1
# Warmup Iteration   1: 446,214 ms/op
# Warmup Iteration   2: 413,606 ms/op
# Warmup Iteration   3: 402,847 ms/op
# Warmup Iteration   4: 400,879 ms/op
# Warmup Iteration   5: 404,302 ms/op
# Warmup Iteration   6: 406,210 ms/op
# Warmup Iteration   7: 403,450 ms/op
# Warmup Iteration   8: 406,941 ms/op
# Warmup Iteration   9: 404,929 ms/op
# Warmup Iteration  10: 405,662 ms/op
Iteration   1: 406,245 ms/op
Iteration   2: 409,942 ms/op
Iteration   3: 411,503 ms/op
Iteration   4: 406,794 ms/op
Iteration   5: 408,978 ms/op
Iteration   6: 409,089 ms/op
Iteration   7: 413,986 ms/op
Iteration   8: 407,909 ms/op
Iteration   9: 405,586 ms/op
Iteration  10: 439,209 ms/op


Result "benchmarkFind":
  411,924 ±(99.9%) 14,987 ms/op [Average]
  (min, avg, max) = (405,586, 411,924, 439,209), stdev = 9,913
  CI (99.9%): [396,937, 426,911] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 128, patternSize = 32)

# Run progress: 90,99% complete, ETA 01:23:07
# Fork: 1 of 1
# Warmup Iteration   1: 453,004 ms/op
# Warmup Iteration   2: 408,369 ms/op
# Warmup Iteration   3: 398,922 ms/op
# Warmup Iteration   4: 395,759 ms/op
# Warmup Iteration   5: 395,559 ms/op
# Warmup Iteration   6: 398,788 ms/op
# Warmup Iteration   7: 401,041 ms/op
# Warmup Iteration   8: 397,615 ms/op
# Warmup Iteration   9: 402,234 ms/op
# Warmup Iteration  10: 402,483 ms/op
Iteration   1: 403,864 ms/op
Iteration   2: 401,956 ms/op
Iteration   3: 403,470 ms/op
Iteration   4: 401,811 ms/op
Iteration   5: 404,642 ms/op
Iteration   6: 400,829 ms/op
Iteration   7: 404,964 ms/op
Iteration   8: 405,489 ms/op
Iteration   9: 404,360 ms/op
Iteration  10: 407,416 ms/op


Result "benchmarkFind":
  403,880 ±(99.9%) 2,962 ms/op [Average]
  (min, avg, max) = (400,829, 403,880, 407,416), stdev = 1,959
  CI (99.9%): [400,918, 406,842] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 128, patternSize = 64)

# Run progress: 91,04% complete, ETA 01:22:41
# Fork: 1 of 1
# Warmup Iteration   1: 433,514 ms/op
# Warmup Iteration   2: 415,937 ms/op
# Warmup Iteration   3: 415,900 ms/op
# Warmup Iteration   4: 410,143 ms/op
# Warmup Iteration   5: 412,216 ms/op
# Warmup Iteration   6: 409,091 ms/op
# Warmup Iteration   7: 410,088 ms/op
# Warmup Iteration   8: 409,300 ms/op
# Warmup Iteration   9: 410,326 ms/op
# Warmup Iteration  10: 408,640 ms/op
Iteration   1: 408,855 ms/op
Iteration   2: 412,359 ms/op
Iteration   3: 411,015 ms/op
Iteration   4: 407,436 ms/op
Iteration   5: 410,927 ms/op
Iteration   6: 407,701 ms/op
Iteration   7: 407,779 ms/op
Iteration   8: 407,047 ms/op
Iteration   9: 411,363 ms/op
Iteration  10: 408,036 ms/op


Result "benchmarkFind":
  409,252 ±(99.9%) 2,956 ms/op [Average]
  (min, avg, max) = (407,047, 409,252, 412,359), stdev = 1,955
  CI (99.9%): [406,296, 412,207] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 128, patternSize = 128)

# Run progress: 91,08% complete, ETA 01:22:16
# Fork: 1 of 1
# Warmup Iteration   1: 425,529 ms/op
# Warmup Iteration   2: 401,031 ms/op
# Warmup Iteration   3: 397,750 ms/op
# Warmup Iteration   4: 396,199 ms/op
# Warmup Iteration   5: 395,844 ms/op
# Warmup Iteration   6: 430,086 ms/op
# Warmup Iteration   7: 390,347 ms/op
# Warmup Iteration   8: 388,406 ms/op
# Warmup Iteration   9: 388,732 ms/op
# Warmup Iteration  10: 390,551 ms/op
Iteration   1: 389,063 ms/op
Iteration   2: 387,900 ms/op
Iteration   3: 388,968 ms/op
Iteration   4: 388,538 ms/op
Iteration   5: 388,382 ms/op
Iteration   6: 387,848 ms/op
Iteration   7: 390,640 ms/op
Iteration   8: 391,720 ms/op
Iteration   9: 390,309 ms/op
Iteration  10: 390,437 ms/op


Result "benchmarkFind":
  389,381 ±(99.9%) 1,988 ms/op [Average]
  (min, avg, max) = (387,848, 389,381, 391,720), stdev = 1,315
  CI (99.9%): [387,393, 391,368] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SCWuManberBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternNumber = 128, patternSize = 256)

# Run progress: 91,13% complete, ETA 01:21:50
# Fork: 1 of 1
# Warmup Iteration   1: 463,942 ms/op
# Warmup Iteration   2: 437,774 ms/op
# Warmup Iteration   3: 438,900 ms/op
# Warmup Iteration   4: 433,048 ms/op
# Warmup Iteration   5: 429,113 ms/op
# Warmup Iteration   6: 427,160 ms/op
# Warmup Iteration   7: 430,631 ms/op
# Warmup Iteration   8: 435,733 ms/op
# Warmup Iteration   9: 431,212 ms/op
# Warmup Iteration  10: 429,851 ms/op
Iteration   1: 429,520 ms/op
Iteration   2: 430,511 ms/op
Iteration   3: 428,826 ms/op
Iteration   4: 428,553 ms/op
Iteration   5: 427,202 ms/op
Iteration   6: 427,633 ms/op
Iteration   7: 429,640 ms/op
Iteration   8: 427,358 ms/op
Iteration   9: 433,557 ms/op
Iteration  10: 431,112 ms/op


Result "benchmarkFind":
  429,391 ±(99.9%) 2,968 ms/op [Average]
  (min, avg, max) = (427,202, 429,391, 433,557), stdev = 1,963
  CI (99.9%): [426,423, 432,360] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternSize = 2)

# Run progress: 91,18% complete, ETA 01:21:25
# Fork: 1 of 1
# Warmup Iteration   1: 0,459 ms/op
# Warmup Iteration   2: 0,425 ms/op
# Warmup Iteration   3: 0,424 ms/op
# Warmup Iteration   4: 0,424 ms/op
# Warmup Iteration   5: 0,424 ms/op
# Warmup Iteration   6: 0,424 ms/op
# Warmup Iteration   7: 0,424 ms/op
# Warmup Iteration   8: 0,423 ms/op
# Warmup Iteration   9: 0,424 ms/op
# Warmup Iteration  10: 0,424 ms/op
Iteration   1: 0,424 ms/op
Iteration   2: 0,424 ms/op
Iteration   3: 0,423 ms/op
Iteration   4: 0,424 ms/op
Iteration   5: 0,484 ms/op
Iteration   6: 0,428 ms/op
Iteration   7: 0,424 ms/op
Iteration   8: 0,424 ms/op
Iteration   9: 0,424 ms/op
Iteration  10: 0,425 ms/op


Result "benchmarkFind":
  0,430 ±(99.9%) 0,029 ms/op [Average]
  (min, avg, max) = (0,423, 0,430, 0,484), stdev = 0,019
  CI (99.9%): [0,402, 0,459] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternSize = 4)

# Run progress: 91,22% complete, ETA 01:20:59
# Fork: 1 of 1
# Warmup Iteration   1: 3,104 ms/op
# Warmup Iteration   2: 2,844 ms/op
# Warmup Iteration   3: 2,848 ms/op
# Warmup Iteration   4: 2,853 ms/op
# Warmup Iteration   5: 2,852 ms/op
# Warmup Iteration   6: 2,857 ms/op
# Warmup Iteration   7: 2,853 ms/op
# Warmup Iteration   8: 2,835 ms/op
# Warmup Iteration   9: 2,844 ms/op
# Warmup Iteration  10: 2,856 ms/op
Iteration   1: 2,850 ms/op
Iteration   2: 2,843 ms/op
Iteration   3: 2,842 ms/op
Iteration   4: 2,842 ms/op
Iteration   5: 2,849 ms/op
Iteration   6: 2,837 ms/op
Iteration   7: 2,839 ms/op
Iteration   8: 2,845 ms/op
Iteration   9: 2,846 ms/op
Iteration  10: 2,849 ms/op


Result "benchmarkFind":
  2,844 ±(99.9%) 0,006 ms/op [Average]
  (min, avg, max) = (2,837, 2,844, 2,850), stdev = 0,004
  CI (99.9%): [2,838, 2,851] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternSize = 8)

# Run progress: 91,27% complete, ETA 01:20:33
# Fork: 1 of 1
# Warmup Iteration   1: 428,604 ms/op
# Warmup Iteration   2: 398,658 ms/op
# Warmup Iteration   3: 391,428 ms/op
# Warmup Iteration   4: 390,488 ms/op
# Warmup Iteration   5: 390,491 ms/op
# Warmup Iteration   6: 388,595 ms/op
# Warmup Iteration   7: 389,360 ms/op
# Warmup Iteration   8: 390,895 ms/op
# Warmup Iteration   9: 389,390 ms/op
# Warmup Iteration  10: 390,547 ms/op
Iteration   1: 390,924 ms/op
Iteration   2: 389,876 ms/op
Iteration   3: 390,514 ms/op
Iteration   4: 389,302 ms/op
Iteration   5: 390,396 ms/op
Iteration   6: 390,797 ms/op
Iteration   7: 389,741 ms/op
Iteration   8: 390,181 ms/op
Iteration   9: 390,119 ms/op
Iteration  10: 389,371 ms/op


Result "benchmarkFind":
  390,122 ±(99.9%) 0,839 ms/op [Average]
  (min, avg, max) = (389,302, 390,122, 390,924), stdev = 0,555
  CI (99.9%): [389,283, 390,961] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternSize = 16)

# Run progress: 91,31% complete, ETA 01:20:08
# Fork: 1 of 1
# Warmup Iteration   1: 945,216 ms/op
# Warmup Iteration   2: 908,895 ms/op
# Warmup Iteration   3: 762,896 ms/op
# Warmup Iteration   4: 664,570 ms/op
# Warmup Iteration   5: 662,491 ms/op
# Warmup Iteration   6: 734,016 ms/op
# Warmup Iteration   7: 657,592 ms/op
# Warmup Iteration   8: 663,496 ms/op
# Warmup Iteration   9: 664,177 ms/op
# Warmup Iteration  10: 659,056 ms/op
Iteration   1: 656,940 ms/op
Iteration   2: 659,758 ms/op
Iteration   3: 658,623 ms/op
Iteration   4: 657,865 ms/op
Iteration   5: 658,420 ms/op
Iteration   6: 657,695 ms/op
Iteration   7: 657,627 ms/op
Iteration   8: 658,938 ms/op
Iteration   9: 656,951 ms/op
Iteration  10: 658,067 ms/op


Result "benchmarkFind":
  658,088 ±(99.9%) 1,327 ms/op [Average]
  (min, avg, max) = (656,940, 658,088, 659,758), stdev = 0,878
  CI (99.9%): [656,761, 659,416] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternSize = 32)

# Run progress: 91,36% complete, ETA 01:19:43
# Fork: 1 of 1
# Warmup Iteration   1: 145,865 ms/op
# Warmup Iteration   2: 135,795 ms/op
# Warmup Iteration   3: 136,097 ms/op
# Warmup Iteration   4: 136,827 ms/op
# Warmup Iteration   5: 137,281 ms/op
# Warmup Iteration   6: 138,550 ms/op
# Warmup Iteration   7: 128,311 ms/op
# Warmup Iteration   8: 123,707 ms/op
# Warmup Iteration   9: 123,981 ms/op
# Warmup Iteration  10: 123,998 ms/op
Iteration   1: 125,775 ms/op
Iteration   2: 126,347 ms/op
Iteration   3: 126,456 ms/op
Iteration   4: 126,481 ms/op
Iteration   5: 126,156 ms/op
Iteration   6: 126,519 ms/op
Iteration   7: 126,355 ms/op
Iteration   8: 126,155 ms/op
Iteration   9: 126,414 ms/op
Iteration  10: 125,895 ms/op


Result "benchmarkFind":
  126,255 ±(99.9%) 0,385 ms/op [Average]
  (min, avg, max) = (125,775, 126,255, 126,519), stdev = 0,255
  CI (99.9%): [125,870, 126,641] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternSize = 64)

# Run progress: 91,41% complete, ETA 01:19:17
# Fork: 1 of 1
# Warmup Iteration   1: 154,759 ms/op
# Warmup Iteration   2: 144,320 ms/op
# Warmup Iteration   3: 145,108 ms/op
# Warmup Iteration   4: 145,523 ms/op
# Warmup Iteration   5: 146,106 ms/op
# Warmup Iteration   6: 145,876 ms/op
# Warmup Iteration   7: 131,809 ms/op
# Warmup Iteration   8: 129,572 ms/op
# Warmup Iteration   9: 129,401 ms/op
# Warmup Iteration  10: 129,546 ms/op
Iteration   1: 129,551 ms/op
Iteration   2: 132,860 ms/op
Iteration   3: 132,144 ms/op
Iteration   4: 133,134 ms/op
Iteration   5: 133,178 ms/op
Iteration   6: 132,972 ms/op
Iteration   7: 134,729 ms/op
Iteration   8: 152,625 ms/op
Iteration   9: 132,923 ms/op
Iteration  10: 133,163 ms/op


Result "benchmarkFind":
  134,728 ±(99.9%) 9,707 ms/op [Average]
  (min, avg, max) = (129,551, 134,728, 152,625), stdev = 6,421
  CI (99.9%): [125,021, 144,435] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternSize = 128)

# Run progress: 91,45% complete, ETA 01:18:51
# Fork: 1 of 1
# Warmup Iteration   1: 168,606 ms/op
# Warmup Iteration   2: 151,127 ms/op
# Warmup Iteration   3: 150,122 ms/op
# Warmup Iteration   4: 150,743 ms/op
# Warmup Iteration   5: 150,491 ms/op
# Warmup Iteration   6: 150,562 ms/op
# Warmup Iteration   7: 136,630 ms/op
# Warmup Iteration   8: 131,669 ms/op
# Warmup Iteration   9: 131,158 ms/op
# Warmup Iteration  10: 131,593 ms/op
Iteration   1: 131,910 ms/op
Iteration   2: 134,053 ms/op
Iteration   3: 134,621 ms/op
Iteration   4: 134,321 ms/op
Iteration   5: 136,205 ms/op
Iteration   6: 134,451 ms/op
Iteration   7: 134,514 ms/op
Iteration   8: 134,326 ms/op
Iteration   9: 134,155 ms/op
Iteration  10: 134,532 ms/op


Result "benchmarkFind":
  134,309 ±(99.9%) 1,565 ms/op [Average]
  (min, avg, max) = (131,910, 134,309, 136,205), stdev = 1,035
  CI (99.9%): [132,743, 135,874] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternSize = 256)

# Run progress: 91,50% complete, ETA 01:18:25
# Fork: 1 of 1
# Warmup Iteration   1: 155,028 ms/op
# Warmup Iteration   2: 145,862 ms/op
# Warmup Iteration   3: 146,287 ms/op
# Warmup Iteration   4: 146,692 ms/op
# Warmup Iteration   5: 146,928 ms/op
# Warmup Iteration   6: 146,803 ms/op
# Warmup Iteration   7: 135,596 ms/op
# Warmup Iteration   8: 133,805 ms/op
# Warmup Iteration   9: 133,654 ms/op
# Warmup Iteration  10: 134,110 ms/op
Iteration   1: 133,834 ms/op
Iteration   2: 137,539 ms/op
Iteration   3: 137,210 ms/op
Iteration   4: 137,115 ms/op
Iteration   5: 137,510 ms/op
Iteration   6: 136,980 ms/op
Iteration   7: 137,228 ms/op
Iteration   8: 136,578 ms/op
Iteration   9: 136,827 ms/op
Iteration  10: 137,103 ms/op


Result "benchmarkFind":
  136,792 ±(99.9%) 1,631 ms/op [Average]
  (min, avg, max) = (133,834, 136,792, 137,539), stdev = 1,079
  CI (99.9%): [135,161, 138,423] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternSize = 2)

# Run progress: 91,54% complete, ETA 01:18:00
# Fork: 1 of 1
# Warmup Iteration   1: 3,407 ms/op
# Warmup Iteration   2: 3,136 ms/op
# Warmup Iteration   3: 3,134 ms/op
# Warmup Iteration   4: 3,141 ms/op
# Warmup Iteration   5: 3,137 ms/op
# Warmup Iteration   6: 3,140 ms/op
# Warmup Iteration   7: 3,142 ms/op
# Warmup Iteration   8: 3,148 ms/op
# Warmup Iteration   9: 3,130 ms/op
# Warmup Iteration  10: 3,134 ms/op
Iteration   1: 3,140 ms/op
Iteration   2: 3,639 ms/op
Iteration   3: 3,113 ms/op
Iteration   4: 3,127 ms/op
Iteration   5: 3,129 ms/op
Iteration   6: 3,135 ms/op
Iteration   7: 3,137 ms/op
Iteration   8: 3,130 ms/op
Iteration   9: 3,121 ms/op
Iteration  10: 3,126 ms/op


Result "benchmarkFind":
  3,180 ±(99.9%) 0,244 ms/op [Average]
  (min, avg, max) = (3,113, 3,180, 3,639), stdev = 0,162
  CI (99.9%): [2,935, 3,424] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternSize = 4)

# Run progress: 91,59% complete, ETA 01:17:34
# Fork: 1 of 1
# Warmup Iteration   1: 439,059 ms/op
# Warmup Iteration   2: 404,771 ms/op
# Warmup Iteration   3: 398,914 ms/op
# Warmup Iteration   4: 399,631 ms/op
# Warmup Iteration   5: 402,156 ms/op
# Warmup Iteration   6: 401,049 ms/op
# Warmup Iteration   7: 399,907 ms/op
# Warmup Iteration   8: 398,531 ms/op
# Warmup Iteration   9: 400,004 ms/op
# Warmup Iteration  10: 399,323 ms/op
Iteration   1: 399,857 ms/op
Iteration   2: 399,573 ms/op
Iteration   3: 400,137 ms/op
Iteration   4: 400,344 ms/op
Iteration   5: 398,972 ms/op
Iteration   6: 400,192 ms/op
Iteration   7: 401,988 ms/op
Iteration   8: 399,994 ms/op
Iteration   9: 399,933 ms/op
Iteration  10: 399,561 ms/op


Result "benchmarkFind":
  400,055 ±(99.9%) 1,188 ms/op [Average]
  (min, avg, max) = (398,972, 400,055, 401,988), stdev = 0,786
  CI (99.9%): [398,868, 401,243] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternSize = 8)

# Run progress: 91,64% complete, ETA 01:17:08
# Fork: 1 of 1
# Warmup Iteration   1: 917,609 ms/op
# Warmup Iteration   2: 883,357 ms/op
# Warmup Iteration   3: 768,810 ms/op
# Warmup Iteration   4: 657,883 ms/op
# Warmup Iteration   5: 657,416 ms/op
# Warmup Iteration   6: 658,439 ms/op
# Warmup Iteration   7: 658,907 ms/op
# Warmup Iteration   8: 658,108 ms/op
# Warmup Iteration   9: 659,670 ms/op
# Warmup Iteration  10: 641,364 ms/op
Iteration   1: 640,566 ms/op
Iteration   2: 643,268 ms/op
Iteration   3: 641,799 ms/op
Iteration   4: 640,035 ms/op
Iteration   5: 642,797 ms/op
Iteration   6: 639,744 ms/op
Iteration   7: 643,060 ms/op
Iteration   8: 640,165 ms/op
Iteration   9: 704,430 ms/op
Iteration  10: 639,137 ms/op


Result "benchmarkFind":
  647,500 ±(99.9%) 30,325 ms/op [Average]
  (min, avg, max) = (639,137, 647,500, 704,430), stdev = 20,058
  CI (99.9%): [617,175, 677,825] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternSize = 16)

# Run progress: 91,68% complete, ETA 01:16:43
# Fork: 1 of 1
# Warmup Iteration   1: 152,254 ms/op
# Warmup Iteration   2: 142,281 ms/op
# Warmup Iteration   3: 142,707 ms/op
# Warmup Iteration   4: 143,141 ms/op
# Warmup Iteration   5: 143,928 ms/op
# Warmup Iteration   6: 143,818 ms/op
# Warmup Iteration   7: 143,840 ms/op
# Warmup Iteration   8: 138,744 ms/op
# Warmup Iteration   9: 137,832 ms/op
# Warmup Iteration  10: 137,839 ms/op
Iteration   1: 137,924 ms/op
Iteration   2: 130,457 ms/op
Iteration   3: 128,727 ms/op
Iteration   4: 128,778 ms/op
Iteration   5: 128,601 ms/op
Iteration   6: 128,397 ms/op
Iteration   7: 128,371 ms/op
Iteration   8: 128,263 ms/op
Iteration   9: 128,454 ms/op
Iteration  10: 128,211 ms/op


Result "benchmarkFind":
  129,618 ±(99.9%) 4,520 ms/op [Average]
  (min, avg, max) = (128,211, 129,618, 137,924), stdev = 2,990
  CI (99.9%): [125,099, 134,138] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternSize = 32)

# Run progress: 91,73% complete, ETA 01:16:17
# Fork: 1 of 1
# Warmup Iteration   1: 114,043 ms/op
# Warmup Iteration   2: 106,501 ms/op
# Warmup Iteration   3: 106,737 ms/op
# Warmup Iteration   4: 107,203 ms/op
# Warmup Iteration   5: 107,841 ms/op
# Warmup Iteration   6: 95,067 ms/op
# Warmup Iteration   7: 90,263 ms/op
# Warmup Iteration   8: 91,265 ms/op
# Warmup Iteration   9: 94,863 ms/op
# Warmup Iteration  10: 94,685 ms/op
Iteration   1: 94,626 ms/op
Iteration   2: 94,383 ms/op
Iteration   3: 94,514 ms/op
Iteration   4: 94,474 ms/op
Iteration   5: 94,255 ms/op
Iteration   6: 94,537 ms/op
Iteration   7: 94,368 ms/op
Iteration   8: 94,437 ms/op
Iteration   9: 94,560 ms/op
Iteration  10: 94,331 ms/op


Result "benchmarkFind":
  94,448 ±(99.9%) 0,174 ms/op [Average]
  (min, avg, max) = (94,255, 94,448, 94,626), stdev = 0,115
  CI (99.9%): [94,275, 94,622] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternSize = 64)

# Run progress: 91,77% complete, ETA 01:15:52
# Fork: 1 of 1
# Warmup Iteration   1: 130,819 ms/op
# Warmup Iteration   2: 122,615 ms/op
# Warmup Iteration   3: 123,174 ms/op
# Warmup Iteration   4: 123,462 ms/op
# Warmup Iteration   5: 121,372 ms/op
# Warmup Iteration   6: 97,854 ms/op
# Warmup Iteration   7: 97,914 ms/op
# Warmup Iteration   8: 97,990 ms/op
# Warmup Iteration   9: 100,526 ms/op
# Warmup Iteration  10: 101,984 ms/op
Iteration   1: 101,838 ms/op
Iteration   2: 101,637 ms/op
Iteration   3: 116,341 ms/op
Iteration   4: 104,819 ms/op
Iteration   5: 101,474 ms/op
Iteration   6: 101,501 ms/op
Iteration   7: 101,729 ms/op
Iteration   8: 102,075 ms/op
Iteration   9: 101,687 ms/op
Iteration  10: 101,382 ms/op


Result "benchmarkFind":
  103,448 ±(99.9%) 7,017 ms/op [Average]
  (min, avg, max) = (101,382, 103,448, 116,341), stdev = 4,641
  CI (99.9%): [96,431, 110,465] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternSize = 128)

# Run progress: 91,82% complete, ETA 01:15:26
# Fork: 1 of 1
# Warmup Iteration   1: 132,182 ms/op
# Warmup Iteration   2: 123,930 ms/op
# Warmup Iteration   3: 124,739 ms/op
# Warmup Iteration   4: 124,729 ms/op
# Warmup Iteration   5: 122,666 ms/op
# Warmup Iteration   6: 97,957 ms/op
# Warmup Iteration   7: 97,450 ms/op
# Warmup Iteration   8: 97,901 ms/op
# Warmup Iteration   9: 100,258 ms/op
# Warmup Iteration  10: 103,391 ms/op
Iteration   1: 103,221 ms/op
Iteration   2: 103,329 ms/op
Iteration   3: 103,417 ms/op
Iteration   4: 102,992 ms/op
Iteration   5: 103,203 ms/op
Iteration   6: 103,420 ms/op
Iteration   7: 102,779 ms/op
Iteration   8: 102,880 ms/op
Iteration   9: 103,042 ms/op
Iteration  10: 103,296 ms/op


Result "benchmarkFind":
  103,158 ±(99.9%) 0,339 ms/op [Average]
  (min, avg, max) = (102,779, 103,158, 103,420), stdev = 0,224
  CI (99.9%): [102,819, 103,496] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternSize = 256)

# Run progress: 91,87% complete, ETA 01:15:00
# Fork: 1 of 1
# Warmup Iteration   1: 130,384 ms/op
# Warmup Iteration   2: 121,996 ms/op
# Warmup Iteration   3: 122,311 ms/op
# Warmup Iteration   4: 123,292 ms/op
# Warmup Iteration   5: 120,914 ms/op
# Warmup Iteration   6: 102,180 ms/op
# Warmup Iteration   7: 101,877 ms/op
# Warmup Iteration   8: 101,771 ms/op
# Warmup Iteration   9: 102,137 ms/op
# Warmup Iteration  10: 105,669 ms/op
Iteration   1: 105,715 ms/op
Iteration   2: 105,741 ms/op
Iteration   3: 105,448 ms/op
Iteration   4: 106,193 ms/op
Iteration   5: 105,610 ms/op
Iteration   6: 105,516 ms/op
Iteration   7: 105,501 ms/op
Iteration   8: 105,538 ms/op
Iteration   9: 105,191 ms/op
Iteration  10: 105,421 ms/op


Result "benchmarkFind":
  105,587 ±(99.9%) 0,399 ms/op [Average]
  (min, avg, max) = (105,191, 105,587, 106,193), stdev = 0,264
  CI (99.9%): [105,188, 105,986] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternSize = 2)

# Run progress: 91,91% complete, ETA 01:14:34
# Fork: 1 of 1
# Warmup Iteration   1: 27,211 ms/op
# Warmup Iteration   2: 24,842 ms/op
# Warmup Iteration   3: 25,077 ms/op
# Warmup Iteration   4: 25,850 ms/op
# Warmup Iteration   5: 26,892 ms/op
# Warmup Iteration   6: 24,743 ms/op
# Warmup Iteration   7: 24,706 ms/op
# Warmup Iteration   8: 28,742 ms/op
# Warmup Iteration   9: 24,954 ms/op
# Warmup Iteration  10: 24,798 ms/op
Iteration   1: 24,762 ms/op
Iteration   2: 24,615 ms/op
Iteration   3: 25,047 ms/op
Iteration   4: 25,042 ms/op
Iteration   5: 25,074 ms/op
Iteration   6: 25,020 ms/op
Iteration   7: 24,970 ms/op
Iteration   8: 24,828 ms/op
Iteration   9: 24,903 ms/op
Iteration  10: 24,864 ms/op


Result "benchmarkFind":
  24,912 ±(99.9%) 0,223 ms/op [Average]
  (min, avg, max) = (24,615, 24,912, 25,074), stdev = 0,148
  CI (99.9%): [24,689, 25,136] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternSize = 4)

# Run progress: 91,96% complete, ETA 01:14:09
# Fork: 1 of 1
# Warmup Iteration   1: 9145,366 ms/op
# Warmup Iteration   2: 7886,516 ms/op
# Warmup Iteration   3: 7837,318 ms/op
# Warmup Iteration   4: 7853,592 ms/op
# Warmup Iteration   5: 7852,007 ms/op
# Warmup Iteration   6: 7977,802 ms/op
# Warmup Iteration   7: 7821,959 ms/op
# Warmup Iteration   8: 7809,344 ms/op
# Warmup Iteration   9: 7838,620 ms/op
# Warmup Iteration  10: 7843,866 ms/op
Iteration   1: 7816,864 ms/op
Iteration   2: 7819,094 ms/op
Iteration   3: 7807,507 ms/op
Iteration   4: 7943,006 ms/op
Iteration   5: 7807,816 ms/op
Iteration   6: 7758,690 ms/op
Iteration   7: 7709,611 ms/op
Iteration   8: 7713,852 ms/op
Iteration   9: 7707,425 ms/op
Iteration  10: 7688,602 ms/op


Result "benchmarkFind":
  7777,247 ±(99.9%) 117,452 ms/op [Average]
  (min, avg, max) = (7688,602, 7777,247, 7943,006), stdev = 77,687
  CI (99.9%): [7659,794, 7894,699] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternSize = 8)

# Run progress: 92,00% complete, ETA 01:13:55
# Fork: 1 of 1
# Warmup Iteration   1: 176,890 ms/op
# Warmup Iteration   2: 164,128 ms/op
# Warmup Iteration   3: 164,640 ms/op
# Warmup Iteration   4: 164,331 ms/op
# Warmup Iteration   5: 165,194 ms/op
# Warmup Iteration   6: 166,188 ms/op
# Warmup Iteration   7: 186,065 ms/op
# Warmup Iteration   8: 165,054 ms/op
# Warmup Iteration   9: 164,643 ms/op
# Warmup Iteration  10: 164,310 ms/op
Iteration   1: 164,817 ms/op
Iteration   2: 166,011 ms/op
Iteration   3: 166,038 ms/op
Iteration   4: 166,179 ms/op
Iteration   5: 165,541 ms/op
Iteration   6: 165,898 ms/op
Iteration   7: 165,862 ms/op
Iteration   8: 165,985 ms/op
Iteration   9: 165,658 ms/op
Iteration  10: 165,730 ms/op


Result "benchmarkFind":
  165,772 ±(99.9%) 0,584 ms/op [Average]
  (min, avg, max) = (164,817, 165,772, 166,179), stdev = 0,386
  CI (99.9%): [165,188, 166,356] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternSize = 16)

# Run progress: 92,05% complete, ETA 01:13:29
# Fork: 1 of 1
# Warmup Iteration   1: 120,774 ms/op
# Warmup Iteration   2: 112,462 ms/op
# Warmup Iteration   3: 112,751 ms/op
# Warmup Iteration   4: 113,529 ms/op
# Warmup Iteration   5: 113,518 ms/op
# Warmup Iteration   6: 113,472 ms/op
# Warmup Iteration   7: 105,503 ms/op
# Warmup Iteration   8: 105,060 ms/op
# Warmup Iteration   9: 104,892 ms/op
# Warmup Iteration  10: 99,746 ms/op
Iteration   1: 99,800 ms/op
Iteration   2: 99,673 ms/op
Iteration   3: 99,698 ms/op
Iteration   4: 99,445 ms/op
Iteration   5: 99,554 ms/op
Iteration   6: 99,570 ms/op
Iteration   7: 99,398 ms/op
Iteration   8: 99,684 ms/op
Iteration   9: 99,825 ms/op
Iteration  10: 99,546 ms/op


Result "benchmarkFind":
  99,619 ±(99.9%) 0,214 ms/op [Average]
  (min, avg, max) = (99,398, 99,619, 99,825), stdev = 0,141
  CI (99.9%): [99,406, 99,833] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternSize = 32)

# Run progress: 92,10% complete, ETA 01:13:03
# Fork: 1 of 1
# Warmup Iteration   1: 105,603 ms/op
# Warmup Iteration   2: 99,024 ms/op
# Warmup Iteration   3: 99,180 ms/op
# Warmup Iteration   4: 99,828 ms/op
# Warmup Iteration   5: 99,579 ms/op
# Warmup Iteration   6: 83,633 ms/op
# Warmup Iteration   7: 83,113 ms/op
# Warmup Iteration   8: 81,788 ms/op
# Warmup Iteration   9: 80,754 ms/op
# Warmup Iteration  10: 80,722 ms/op
Iteration   1: 80,340 ms/op
Iteration   2: 80,609 ms/op
Iteration   3: 80,384 ms/op
Iteration   4: 80,392 ms/op
Iteration   5: 80,347 ms/op
Iteration   6: 80,518 ms/op
Iteration   7: 80,017 ms/op
Iteration   8: 80,629 ms/op
Iteration   9: 80,367 ms/op
Iteration  10: 80,461 ms/op


Result "benchmarkFind":
  80,406 ±(99.9%) 0,261 ms/op [Average]
  (min, avg, max) = (80,017, 80,406, 80,629), stdev = 0,173
  CI (99.9%): [80,145, 80,667] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternSize = 64)

# Run progress: 92,14% complete, ETA 01:12:38
# Fork: 1 of 1
# Warmup Iteration   1: 127,545 ms/op
# Warmup Iteration   2: 115,365 ms/op
# Warmup Iteration   3: 115,665 ms/op
# Warmup Iteration   4: 116,421 ms/op
# Warmup Iteration   5: 113,972 ms/op
# Warmup Iteration   6: 93,739 ms/op
# Warmup Iteration   7: 94,116 ms/op
# Warmup Iteration   8: 94,293 ms/op
# Warmup Iteration   9: 93,927 ms/op
# Warmup Iteration  10: 92,612 ms/op
Iteration   1: 92,322 ms/op
Iteration   2: 92,136 ms/op
Iteration   3: 92,582 ms/op
Iteration   4: 91,938 ms/op
Iteration   5: 92,262 ms/op
Iteration   6: 91,963 ms/op
Iteration   7: 92,253 ms/op
Iteration   8: 92,273 ms/op
Iteration   9: 92,243 ms/op
Iteration  10: 92,366 ms/op


Result "benchmarkFind":
  92,234 ±(99.9%) 0,285 ms/op [Average]
  (min, avg, max) = (91,938, 92,234, 92,582), stdev = 0,188
  CI (99.9%): [91,949, 92,519] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternSize = 128)

# Run progress: 92,19% complete, ETA 01:12:12
# Fork: 1 of 1
# Warmup Iteration   1: 123,082 ms/op
# Warmup Iteration   2: 114,977 ms/op
# Warmup Iteration   3: 115,603 ms/op
# Warmup Iteration   4: 117,359 ms/op
# Warmup Iteration   5: 112,776 ms/op
# Warmup Iteration   6: 94,787 ms/op
# Warmup Iteration   7: 95,304 ms/op
# Warmup Iteration   8: 95,443 ms/op
# Warmup Iteration   9: 94,742 ms/op
# Warmup Iteration  10: 92,300 ms/op
Iteration   1: 92,855 ms/op
Iteration   2: 92,966 ms/op
Iteration   3: 93,144 ms/op
Iteration   4: 93,096 ms/op
Iteration   5: 92,667 ms/op
Iteration   6: 93,030 ms/op
Iteration   7: 93,083 ms/op
Iteration   8: 93,298 ms/op
Iteration   9: 93,000 ms/op
Iteration  10: 93,179 ms/op


Result "benchmarkFind":
  93,032 ±(99.9%) 0,267 ms/op [Average]
  (min, avg, max) = (92,667, 93,032, 93,298), stdev = 0,177
  CI (99.9%): [92,764, 93,299] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternSize = 256)

# Run progress: 92,23% complete, ETA 01:11:46
# Fork: 1 of 1
# Warmup Iteration   1: 123,820 ms/op
# Warmup Iteration   2: 116,230 ms/op
# Warmup Iteration   3: 116,460 ms/op
# Warmup Iteration   4: 116,914 ms/op
# Warmup Iteration   5: 112,059 ms/op
# Warmup Iteration   6: 94,050 ms/op
# Warmup Iteration   7: 94,248 ms/op
# Warmup Iteration   8: 93,789 ms/op
# Warmup Iteration   9: 93,770 ms/op
# Warmup Iteration  10: 92,346 ms/op
Iteration   1: 92,379 ms/op
Iteration   2: 92,399 ms/op
Iteration   3: 92,609 ms/op
Iteration   4: 92,256 ms/op
Iteration   5: 92,228 ms/op
Iteration   6: 104,381 ms/op
Iteration   7: 91,728 ms/op
Iteration   8: 91,795 ms/op
Iteration   9: 92,152 ms/op
Iteration  10: 92,267 ms/op


Result "benchmarkFind":
  93,420 ±(99.9%) 5,837 ms/op [Average]
  (min, avg, max) = (91,728, 93,420, 104,381), stdev = 3,861
  CI (99.9%): [87,583, 99,256] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternSize = 2)

# Run progress: 92,28% complete, ETA 01:11:20
# Fork: 1 of 1
# Warmup Iteration   1: 432,822 ms/op
# Warmup Iteration   2: 400,027 ms/op
# Warmup Iteration   3: 393,458 ms/op
# Warmup Iteration   4: 393,629 ms/op
# Warmup Iteration   5: 394,792 ms/op
# Warmup Iteration   6: 394,166 ms/op
# Warmup Iteration   7: 393,797 ms/op
# Warmup Iteration   8: 393,337 ms/op
# Warmup Iteration   9: 394,881 ms/op
# Warmup Iteration  10: 394,123 ms/op
Iteration   1: 394,056 ms/op
Iteration   2: 393,574 ms/op
Iteration   3: 394,676 ms/op
Iteration   4: 393,713 ms/op
Iteration   5: 393,844 ms/op
Iteration   6: 394,636 ms/op
Iteration   7: 394,023 ms/op
Iteration   8: 394,157 ms/op
Iteration   9: 393,289 ms/op
Iteration  10: 393,472 ms/op


Result "benchmarkFind":
  393,944 ±(99.9%) 0,700 ms/op [Average]
  (min, avg, max) = (393,289, 393,944, 394,676), stdev = 0,463
  CI (99.9%): [393,244, 394,644] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternSize = 4)

# Run progress: 92,33% complete, ETA 01:10:55
# Fork: 1 of 1
# Warmup Iteration   1: 927,729 ms/op
# Warmup Iteration   2: 889,222 ms/op
# Warmup Iteration   3: 791,628 ms/op
# Warmup Iteration   4: 657,122 ms/op
# Warmup Iteration   5: 657,590 ms/op
# Warmup Iteration   6: 654,982 ms/op
# Warmup Iteration   7: 656,199 ms/op
# Warmup Iteration   8: 655,862 ms/op
# Warmup Iteration   9: 656,789 ms/op
# Warmup Iteration  10: 646,587 ms/op
Iteration   1: 644,181 ms/op
Iteration   2: 646,875 ms/op
Iteration   3: 645,308 ms/op
Iteration   4: 645,285 ms/op
Iteration   5: 645,958 ms/op
Iteration   6: 644,729 ms/op
Iteration   7: 644,844 ms/op
Iteration   8: 642,750 ms/op
Iteration   9: 645,724 ms/op
Iteration  10: 646,140 ms/op


Result "benchmarkFind":
  645,179 ±(99.9%) 1,742 ms/op [Average]
  (min, avg, max) = (642,750, 645,179, 646,875), stdev = 1,152
  CI (99.9%): [643,438, 646,921] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternSize = 8)

# Run progress: 92,37% complete, ETA 01:10:29
# Fork: 1 of 1
# Warmup Iteration   1: 162,931 ms/op
# Warmup Iteration   2: 152,030 ms/op
# Warmup Iteration   3: 163,912 ms/op
# Warmup Iteration   4: 152,577 ms/op
# Warmup Iteration   5: 152,884 ms/op
# Warmup Iteration   6: 154,178 ms/op
# Warmup Iteration   7: 153,841 ms/op
# Warmup Iteration   8: 154,031 ms/op
# Warmup Iteration   9: 150,901 ms/op
# Warmup Iteration  10: 150,888 ms/op
Iteration   1: 151,024 ms/op
Iteration   2: 150,950 ms/op
Iteration   3: 146,330 ms/op
Iteration   4: 146,258 ms/op
Iteration   5: 146,383 ms/op
Iteration   6: 146,161 ms/op
Iteration   7: 145,932 ms/op
Iteration   8: 146,158 ms/op
Iteration   9: 146,272 ms/op
Iteration  10: 146,013 ms/op


Result "benchmarkFind":
  147,148 ±(99.9%) 3,066 ms/op [Average]
  (min, avg, max) = (145,932, 147,148, 151,024), stdev = 2,028
  CI (99.9%): [144,082, 150,214] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternSize = 16)

# Run progress: 92,42% complete, ETA 01:10:04
# Fork: 1 of 1
# Warmup Iteration   1: 119,175 ms/op
# Warmup Iteration   2: 110,505 ms/op
# Warmup Iteration   3: 110,939 ms/op
# Warmup Iteration   4: 111,416 ms/op
# Warmup Iteration   5: 111,826 ms/op
# Warmup Iteration   6: 111,541 ms/op
# Warmup Iteration   7: 100,004 ms/op
# Warmup Iteration   8: 100,126 ms/op
# Warmup Iteration   9: 99,061 ms/op
# Warmup Iteration  10: 96,850 ms/op
Iteration   1: 96,919 ms/op
Iteration   2: 96,567 ms/op
Iteration   3: 96,646 ms/op
Iteration   4: 96,512 ms/op
Iteration   5: 96,540 ms/op
Iteration   6: 96,540 ms/op
Iteration   7: 96,506 ms/op
Iteration   8: 96,423 ms/op
Iteration   9: 96,439 ms/op
Iteration  10: 96,138 ms/op


Result "benchmarkFind":
  96,523 ±(99.9%) 0,294 ms/op [Average]
  (min, avg, max) = (96,138, 96,523, 96,919), stdev = 0,194
  CI (99.9%): [96,229, 96,817] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternSize = 32)

# Run progress: 92,46% complete, ETA 01:09:38
# Fork: 1 of 1
# Warmup Iteration   1: 94,540 ms/op
# Warmup Iteration   2: 88,107 ms/op
# Warmup Iteration   3: 88,669 ms/op
# Warmup Iteration   4: 88,820 ms/op
# Warmup Iteration   5: 84,065 ms/op
# Warmup Iteration   6: 70,324 ms/op
# Warmup Iteration   7: 70,321 ms/op
# Warmup Iteration   8: 70,516 ms/op
# Warmup Iteration   9: 70,319 ms/op
# Warmup Iteration  10: 70,460 ms/op
Iteration   1: 70,146 ms/op
Iteration   2: 70,019 ms/op
Iteration   3: 70,078 ms/op
Iteration   4: 69,771 ms/op
Iteration   5: 70,097 ms/op
Iteration   6: 69,824 ms/op
Iteration   7: 70,085 ms/op
Iteration   8: 81,303 ms/op
Iteration   9: 69,683 ms/op
Iteration  10: 69,570 ms/op


Result "benchmarkFind":
  71,057 ±(99.9%) 5,451 ms/op [Average]
  (min, avg, max) = (69,570, 71,057, 81,303), stdev = 3,605
  CI (99.9%): [65,607, 76,508] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternSize = 64)

# Run progress: 92,51% complete, ETA 01:09:12
# Fork: 1 of 1
# Warmup Iteration   1: 117,133 ms/op
# Warmup Iteration   2: 109,814 ms/op
# Warmup Iteration   3: 109,777 ms/op
# Warmup Iteration   4: 110,029 ms/op
# Warmup Iteration   5: 94,897 ms/op
# Warmup Iteration   6: 85,949 ms/op
# Warmup Iteration   7: 85,954 ms/op
# Warmup Iteration   8: 86,497 ms/op
# Warmup Iteration   9: 83,270 ms/op
# Warmup Iteration  10: 82,902 ms/op
Iteration   1: 82,909 ms/op
Iteration   2: 82,786 ms/op
Iteration   3: 82,733 ms/op
Iteration   4: 83,346 ms/op
Iteration   5: 82,804 ms/op
Iteration   6: 82,868 ms/op
Iteration   7: 82,467 ms/op
Iteration   8: 83,135 ms/op
Iteration   9: 82,920 ms/op
Iteration  10: 82,557 ms/op


Result "benchmarkFind":
  82,852 ±(99.9%) 0,387 ms/op [Average]
  (min, avg, max) = (82,467, 82,852, 83,346), stdev = 0,256
  CI (99.9%): [82,466, 83,239] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternSize = 128)

# Run progress: 92,56% complete, ETA 01:08:46
# Fork: 1 of 1
# Warmup Iteration   1: 116,995 ms/op
# Warmup Iteration   2: 109,889 ms/op
# Warmup Iteration   3: 110,190 ms/op
# Warmup Iteration   4: 111,128 ms/op
# Warmup Iteration   5: 96,675 ms/op
# Warmup Iteration   6: 85,914 ms/op
# Warmup Iteration   7: 85,782 ms/op
# Warmup Iteration   8: 86,308 ms/op
# Warmup Iteration   9: 82,982 ms/op
# Warmup Iteration  10: 83,504 ms/op
Iteration   1: 83,405 ms/op
Iteration   2: 83,582 ms/op
Iteration   3: 82,876 ms/op
Iteration   4: 83,168 ms/op
Iteration   5: 83,035 ms/op
Iteration   6: 82,838 ms/op
Iteration   7: 82,882 ms/op
Iteration   8: 82,841 ms/op
Iteration   9: 83,151 ms/op
Iteration  10: 82,884 ms/op


Result "benchmarkFind":
  83,066 ±(99.9%) 0,392 ms/op [Average]
  (min, avg, max) = (82,838, 83,066, 83,582), stdev = 0,259
  CI (99.9%): [82,674, 83,458] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternSize = 256)

# Run progress: 92,60% complete, ETA 01:08:21
# Fork: 1 of 1
# Warmup Iteration   1: 113,803 ms/op
# Warmup Iteration   2: 107,535 ms/op
# Warmup Iteration   3: 107,024 ms/op
# Warmup Iteration   4: 107,069 ms/op
# Warmup Iteration   5: 96,083 ms/op
# Warmup Iteration   6: 89,570 ms/op
# Warmup Iteration   7: 89,266 ms/op
# Warmup Iteration   8: 89,660 ms/op
# Warmup Iteration   9: 87,589 ms/op
# Warmup Iteration  10: 87,607 ms/op
Iteration   1: 87,702 ms/op
Iteration   2: 102,263 ms/op
Iteration   3: 87,355 ms/op
Iteration   4: 87,098 ms/op
Iteration   5: 87,428 ms/op
Iteration   6: 87,524 ms/op
Iteration   7: 87,350 ms/op
Iteration   8: 87,428 ms/op
Iteration   9: 87,504 ms/op
Iteration  10: 87,397 ms/op


Result "benchmarkFind":
  88,905 ±(99.9%) 7,100 ms/op [Average]
  (min, avg, max) = (87,098, 88,905, 102,263), stdev = 4,696
  CI (99.9%): [81,805, 96,005] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternSize = 2)

# Run progress: 92,65% complete, ETA 01:07:55
# Fork: 1 of 1
# Warmup Iteration   1: 1825,799 ms/op
# Warmup Iteration   2: 1580,466 ms/op
# Warmup Iteration   3: 1573,488 ms/op
# Warmup Iteration   4: 1574,973 ms/op
# Warmup Iteration   5: 1582,187 ms/op
# Warmup Iteration   6: 1578,583 ms/op
# Warmup Iteration   7: 1574,787 ms/op
# Warmup Iteration   8: 1570,019 ms/op
# Warmup Iteration   9: 1570,161 ms/op
# Warmup Iteration  10: 1573,424 ms/op
Iteration   1: 1571,368 ms/op
Iteration   2: 1575,849 ms/op
Iteration   3: 1575,561 ms/op
Iteration   4: 1571,437 ms/op
Iteration   5: 1570,378 ms/op
Iteration   6: 1572,622 ms/op
Iteration   7: 1577,285 ms/op
Iteration   8: 1569,118 ms/op
Iteration   9: 1570,347 ms/op
Iteration  10: 1571,784 ms/op


Result "benchmarkFind":
  1572,575 ±(99.9%) 4,123 ms/op [Average]
  (min, avg, max) = (1569,118, 1572,575, 1577,285), stdev = 2,727
  CI (99.9%): [1568,452, 1576,698] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternSize = 4)

# Run progress: 92,69% complete, ETA 01:07:30
# Fork: 1 of 1
# Warmup Iteration   1: 5832,524 ms/op
# Warmup Iteration   2: 5353,028 ms/op
# Warmup Iteration   3: 5449,665 ms/op
# Warmup Iteration   4: 5324,473 ms/op
# Warmup Iteration   5: 5313,912 ms/op
# Warmup Iteration   6: 5323,420 ms/op
# Warmup Iteration   7: 5327,325 ms/op
# Warmup Iteration   8: 5318,281 ms/op
# Warmup Iteration   9: 5317,094 ms/op
# Warmup Iteration  10: 3811,931 ms/op
Iteration   1: 3802,776 ms/op
Iteration   2: 3810,845 ms/op
Iteration   3: 3811,526 ms/op
Iteration   4: 3812,234 ms/op
Iteration   5: 3811,394 ms/op
Iteration   6: 4046,436 ms/op
Iteration   7: 3832,350 ms/op
Iteration   8: 3810,392 ms/op
Iteration   9: 3809,972 ms/op
Iteration  10: 3808,231 ms/op


Result "benchmarkFind":
  3835,616 ±(99.9%) 112,580 ms/op [Average]
  (min, avg, max) = (3802,776, 3835,616, 4046,436), stdev = 74,465
  CI (99.9%): [3723,035, 3948,196] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternSize = 8)

# Run progress: 92,74% complete, ETA 01:07:10
# Fork: 1 of 1
# Warmup Iteration   1: 1448,827 ms/op
# Warmup Iteration   2: 1276,785 ms/op
# Warmup Iteration   3: 1229,100 ms/op
# Warmup Iteration   4: 1224,010 ms/op
# Warmup Iteration   5: 1223,129 ms/op
# Warmup Iteration   6: 1226,993 ms/op
# Warmup Iteration   7: 1220,315 ms/op
# Warmup Iteration   8: 1223,531 ms/op
# Warmup Iteration   9: 1247,481 ms/op
# Warmup Iteration  10: 1220,414 ms/op
Iteration   1: 1221,260 ms/op
Iteration   2: 1224,760 ms/op
Iteration   3: 1222,567 ms/op
Iteration   4: 1225,468 ms/op
Iteration   5: 1222,721 ms/op
Iteration   6: 1224,507 ms/op
Iteration   7: 1235,497 ms/op
Iteration   8: 1237,334 ms/op
Iteration   9: 1234,828 ms/op
Iteration  10: 1239,883 ms/op


Result "benchmarkFind":
  1228,883 ±(99.9%) 10,753 ms/op [Average]
  (min, avg, max) = (1221,260, 1228,883, 1239,883), stdev = 7,113
  CI (99.9%): [1218,130, 1239,636] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternSize = 16)

# Run progress: 92,78% complete, ETA 01:06:45
# Fork: 1 of 1
# Warmup Iteration   1: 1262,358 ms/op
# Warmup Iteration   2: 1084,330 ms/op
# Warmup Iteration   3: 1036,337 ms/op
# Warmup Iteration   4: 1029,466 ms/op
# Warmup Iteration   5: 1029,071 ms/op
# Warmup Iteration   6: 1031,622 ms/op
# Warmup Iteration   7: 1030,241 ms/op
# Warmup Iteration   8: 1030,019 ms/op
# Warmup Iteration   9: 1028,362 ms/op
# Warmup Iteration  10: 1030,639 ms/op
Iteration   1: 1028,000 ms/op
Iteration   2: 1127,476 ms/op
Iteration   3: 1029,855 ms/op
Iteration   4: 1030,254 ms/op
Iteration   5: 1033,427 ms/op
Iteration   6: 1030,692 ms/op
Iteration   7: 1023,439 ms/op
Iteration   8: 1024,092 ms/op
Iteration   9: 1026,834 ms/op
Iteration  10: 1023,049 ms/op


Result "benchmarkFind":
  1037,712 ±(99.9%) 47,967 ms/op [Average]
  (min, avg, max) = (1023,049, 1037,712, 1127,476), stdev = 31,727
  CI (99.9%): [989,745, 1085,678] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternSize = 32)

# Run progress: 92,83% complete, ETA 01:06:19
# Fork: 1 of 1
# Warmup Iteration   1: 1111,866 ms/op
# Warmup Iteration   2: 912,550 ms/op
# Warmup Iteration   3: 876,153 ms/op
# Warmup Iteration   4: 875,230 ms/op
# Warmup Iteration   5: 877,661 ms/op
# Warmup Iteration   6: 871,941 ms/op
# Warmup Iteration   7: 873,539 ms/op
# Warmup Iteration   8: 872,232 ms/op
# Warmup Iteration   9: 872,586 ms/op
# Warmup Iteration  10: 872,967 ms/op
Iteration   1: 876,147 ms/op
Iteration   2: 873,898 ms/op
Iteration   3: 874,449 ms/op
Iteration   4: 875,706 ms/op
Iteration   5: 876,236 ms/op
Iteration   6: 873,773 ms/op
Iteration   7: 876,413 ms/op
Iteration   8: 873,476 ms/op
Iteration   9: 875,079 ms/op
Iteration  10: 877,045 ms/op


Result "benchmarkFind":
  875,222 ±(99.9%) 1,911 ms/op [Average]
  (min, avg, max) = (873,476, 875,222, 877,045), stdev = 1,264
  CI (99.9%): [873,311, 877,133] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternSize = 64)

# Run progress: 92,88% complete, ETA 01:05:54
# Fork: 1 of 1
# Warmup Iteration   1: 1368,649 ms/op
# Warmup Iteration   2: 1137,942 ms/op
# Warmup Iteration   3: 1086,766 ms/op
# Warmup Iteration   4: 1088,537 ms/op
# Warmup Iteration   5: 1086,932 ms/op
# Warmup Iteration   6: 1088,845 ms/op
# Warmup Iteration   7: 1093,595 ms/op
# Warmup Iteration   8: 1083,819 ms/op
# Warmup Iteration   9: 1195,706 ms/op
# Warmup Iteration  10: 1088,861 ms/op
Iteration   1: 1090,671 ms/op
Iteration   2: 1084,231 ms/op
Iteration   3: 1088,620 ms/op
Iteration   4: 1090,372 ms/op
Iteration   5: 1089,911 ms/op
Iteration   6: 1093,446 ms/op
Iteration   7: 1090,489 ms/op
Iteration   8: 1089,230 ms/op
Iteration   9: 1086,210 ms/op
Iteration  10: 1091,074 ms/op


Result "benchmarkFind":
  1089,425 ±(99.9%) 3,926 ms/op [Average]
  (min, avg, max) = (1084,231, 1089,425, 1093,446), stdev = 2,597
  CI (99.9%): [1085,499, 1093,352] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternSize = 128)

# Run progress: 92,92% complete, ETA 01:05:29
# Fork: 1 of 1
# Warmup Iteration   1: 1350,174 ms/op
# Warmup Iteration   2: 1117,765 ms/op
# Warmup Iteration   3: 1088,607 ms/op
# Warmup Iteration   4: 1086,894 ms/op
# Warmup Iteration   5: 1087,021 ms/op
# Warmup Iteration   6: 1087,480 ms/op
# Warmup Iteration   7: 1086,340 ms/op
# Warmup Iteration   8: 1083,628 ms/op
# Warmup Iteration   9: 1094,691 ms/op
# Warmup Iteration  10: 1095,253 ms/op
Iteration   1: 1121,076 ms/op
Iteration   2: 1104,024 ms/op
Iteration   3: 1092,282 ms/op
Iteration   4: 1093,232 ms/op
Iteration   5: 1091,472 ms/op
Iteration   6: 1091,652 ms/op
Iteration   7: 1097,424 ms/op
Iteration   8: 1093,877 ms/op
Iteration   9: 1094,456 ms/op
Iteration  10: 1091,404 ms/op


Result "benchmarkFind":
  1097,090 ±(99.9%) 14,004 ms/op [Average]
  (min, avg, max) = (1091,404, 1097,090, 1121,076), stdev = 9,263
  CI (99.9%): [1083,086, 1111,094] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternSize = 256)

# Run progress: 92,97% complete, ETA 01:05:03
# Fork: 1 of 1
# Warmup Iteration   1: 1354,961 ms/op
# Warmup Iteration   2: 1119,961 ms/op
# Warmup Iteration   3: 1092,232 ms/op
# Warmup Iteration   4: 1092,958 ms/op
# Warmup Iteration   5: 1092,216 ms/op
# Warmup Iteration   6: 1092,801 ms/op
# Warmup Iteration   7: 1091,557 ms/op
# Warmup Iteration   8: 1089,568 ms/op
# Warmup Iteration   9: 1087,095 ms/op
# Warmup Iteration  10: 1089,204 ms/op
Iteration   1: 1089,807 ms/op
Iteration   2: 1087,232 ms/op
Iteration   3: 1094,137 ms/op
Iteration   4: 1092,971 ms/op
Iteration   5: 1097,809 ms/op
Iteration   6: 1093,504 ms/op
Iteration   7: 1216,523 ms/op
Iteration   8: 1094,698 ms/op
Iteration   9: 1094,636 ms/op
Iteration  10: 1108,040 ms/op


Result "benchmarkFind":
  1106,936 ±(99.9%) 58,804 ms/op [Average]
  (min, avg, max) = (1087,232, 1106,936, 1216,523), stdev = 38,896
  CI (99.9%): [1048,131, 1165,740] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternSize = 2)

# Run progress: 93,01% complete, ETA 01:04:38
# Fork: 1 of 1
# Warmup Iteration   1: 8963,164 ms/op
# Warmup Iteration   2: 7675,110 ms/op
# Warmup Iteration   3: 7592,993 ms/op
# Warmup Iteration   4: 7605,742 ms/op
# Warmup Iteration   5: 7613,532 ms/op
# Warmup Iteration   6: 7604,739 ms/op
# Warmup Iteration   7: 7564,068 ms/op
# Warmup Iteration   8: 7798,993 ms/op
# Warmup Iteration   9: 7585,322 ms/op
# Warmup Iteration  10: 7580,708 ms/op
Iteration   1: 7585,010 ms/op
Iteration   2: 7608,795 ms/op
Iteration   3: 7629,214 ms/op
Iteration   4: 7606,093 ms/op
Iteration   5: 7756,335 ms/op
Iteration   6: 7573,007 ms/op
Iteration   7: 7556,269 ms/op
Iteration   8: 7570,934 ms/op
Iteration   9: 7522,676 ms/op
Iteration  10: 7554,881 ms/op


Result "benchmarkFind":
  7596,321 ±(99.9%) 96,935 ms/op [Average]
  (min, avg, max) = (7522,676, 7596,321, 7756,335), stdev = 64,116
  CI (99.9%): [7499,387, 7693,256] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternSize = 4)

# Run progress: 93,06% complete, ETA 01:04:22
# Fork: 1 of 1
# Warmup Iteration   1: 185,271 ms/op
# Warmup Iteration   2: 173,554 ms/op
# Warmup Iteration   3: 173,227 ms/op
# Warmup Iteration   4: 173,786 ms/op
# Warmup Iteration   5: 173,909 ms/op
# Warmup Iteration   6: 175,064 ms/op
# Warmup Iteration   7: 175,006 ms/op
# Warmup Iteration   8: 175,252 ms/op
# Warmup Iteration   9: 172,217 ms/op
# Warmup Iteration  10: 165,822 ms/op
Iteration   1: 165,438 ms/op
Iteration   2: 165,567 ms/op
Iteration   3: 165,886 ms/op
Iteration   4: 166,344 ms/op
Iteration   5: 166,623 ms/op
Iteration   6: 167,249 ms/op
Iteration   7: 166,680 ms/op
Iteration   8: 166,809 ms/op
Iteration   9: 166,599 ms/op
Iteration  10: 188,632 ms/op


Result "benchmarkFind":
  168,583 ±(99.9%) 10,685 ms/op [Average]
  (min, avg, max) = (165,438, 168,583, 188,632), stdev = 7,068
  CI (99.9%): [157,897, 179,268] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternSize = 8)

# Run progress: 93,11% complete, ETA 01:03:56
# Fork: 1 of 1
# Warmup Iteration   1: 127,963 ms/op
# Warmup Iteration   2: 119,110 ms/op
# Warmup Iteration   3: 119,359 ms/op
# Warmup Iteration   4: 119,920 ms/op
# Warmup Iteration   5: 120,539 ms/op
# Warmup Iteration   6: 120,246 ms/op
# Warmup Iteration   7: 113,175 ms/op
# Warmup Iteration   8: 109,329 ms/op
# Warmup Iteration   9: 109,395 ms/op
# Warmup Iteration  10: 106,590 ms/op
Iteration   1: 105,404 ms/op
Iteration   2: 106,099 ms/op
Iteration   3: 105,826 ms/op
Iteration   4: 105,879 ms/op
Iteration   5: 105,871 ms/op
Iteration   6: 105,669 ms/op
Iteration   7: 109,136 ms/op
Iteration   8: 109,796 ms/op
Iteration   9: 107,867 ms/op
Iteration  10: 108,593 ms/op


Result "benchmarkFind":
  107,014 ±(99.9%) 2,505 ms/op [Average]
  (min, avg, max) = (105,404, 107,014, 109,796), stdev = 1,657
  CI (99.9%): [104,509, 109,519] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternSize = 16)

# Run progress: 93,15% complete, ETA 01:03:30
# Fork: 1 of 1
# Warmup Iteration   1: 102,581 ms/op
# Warmup Iteration   2: 96,761 ms/op
# Warmup Iteration   3: 96,482 ms/op
# Warmup Iteration   4: 96,169 ms/op
# Warmup Iteration   5: 96,752 ms/op
# Warmup Iteration   6: 83,882 ms/op
# Warmup Iteration   7: 80,938 ms/op
# Warmup Iteration   8: 81,233 ms/op
# Warmup Iteration   9: 81,067 ms/op
# Warmup Iteration  10: 80,189 ms/op
Iteration   1: 81,070 ms/op
Iteration   2: 79,766 ms/op
Iteration   3: 79,294 ms/op
Iteration   4: 79,308 ms/op
Iteration   5: 79,269 ms/op
Iteration   6: 79,028 ms/op
Iteration   7: 79,248 ms/op
Iteration   8: 79,346 ms/op
Iteration   9: 79,194 ms/op
Iteration  10: 79,022 ms/op


Result "benchmarkFind":
  79,455 ±(99.9%) 0,913 ms/op [Average]
  (min, avg, max) = (79,022, 79,455, 81,070), stdev = 0,604
  CI (99.9%): [78,542, 80,367] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternSize = 32)

# Run progress: 93,20% complete, ETA 01:03:05
# Fork: 1 of 1
# Warmup Iteration   1: 92,832 ms/op
# Warmup Iteration   2: 87,125 ms/op
# Warmup Iteration   3: 87,365 ms/op
# Warmup Iteration   4: 87,791 ms/op
# Warmup Iteration   5: 83,949 ms/op
# Warmup Iteration   6: 71,099 ms/op
# Warmup Iteration   7: 71,780 ms/op
# Warmup Iteration   8: 69,520 ms/op
# Warmup Iteration   9: 70,001 ms/op
# Warmup Iteration  10: 70,203 ms/op
Iteration   1: 69,943 ms/op
Iteration   2: 69,729 ms/op
Iteration   3: 69,907 ms/op
Iteration   4: 79,602 ms/op
Iteration   5: 69,203 ms/op
Iteration   6: 69,440 ms/op
Iteration   7: 69,997 ms/op
Iteration   8: 69,913 ms/op
Iteration   9: 69,889 ms/op
Iteration  10: 69,733 ms/op


Result "benchmarkFind":
  70,736 ±(99.9%) 4,725 ms/op [Average]
  (min, avg, max) = (69,203, 70,736, 79,602), stdev = 3,125
  CI (99.9%): [66,010, 75,461] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternSize = 64)

# Run progress: 93,24% complete, ETA 01:02:39
# Fork: 1 of 1
# Warmup Iteration   1: 115,656 ms/op
# Warmup Iteration   2: 108,700 ms/op
# Warmup Iteration   3: 109,145 ms/op
# Warmup Iteration   4: 109,271 ms/op
# Warmup Iteration   5: 95,102 ms/op
# Warmup Iteration   6: 85,713 ms/op
# Warmup Iteration   7: 85,626 ms/op
# Warmup Iteration   8: 86,782 ms/op
# Warmup Iteration   9: 88,620 ms/op
# Warmup Iteration  10: 88,596 ms/op
Iteration   1: 88,385 ms/op
Iteration   2: 87,917 ms/op
Iteration   3: 88,384 ms/op
Iteration   4: 88,311 ms/op
Iteration   5: 88,386 ms/op
Iteration   6: 88,814 ms/op
Iteration   7: 88,553 ms/op
Iteration   8: 88,490 ms/op
Iteration   9: 89,416 ms/op
Iteration  10: 88,585 ms/op


Result "benchmarkFind":
  88,524 ±(99.9%) 0,587 ms/op [Average]
  (min, avg, max) = (87,917, 88,524, 89,416), stdev = 0,388
  CI (99.9%): [87,937, 89,111] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternSize = 128)

# Run progress: 93,29% complete, ETA 01:02:13
# Fork: 1 of 1
# Warmup Iteration   1: 117,914 ms/op
# Warmup Iteration   2: 111,004 ms/op
# Warmup Iteration   3: 111,422 ms/op
# Warmup Iteration   4: 111,429 ms/op
# Warmup Iteration   5: 101,080 ms/op
# Warmup Iteration   6: 84,995 ms/op
# Warmup Iteration   7: 85,435 ms/op
# Warmup Iteration   8: 85,037 ms/op
# Warmup Iteration   9: 84,750 ms/op
# Warmup Iteration  10: 84,007 ms/op
Iteration   1: 84,264 ms/op
Iteration   2: 84,066 ms/op
Iteration   3: 84,057 ms/op
Iteration   4: 83,992 ms/op
Iteration   5: 83,885 ms/op
Iteration   6: 83,908 ms/op
Iteration   7: 83,930 ms/op
Iteration   8: 84,108 ms/op
Iteration   9: 83,722 ms/op
Iteration  10: 83,888 ms/op


Result "benchmarkFind":
  83,982 ±(99.9%) 0,227 ms/op [Average]
  (min, avg, max) = (83,722, 83,982, 84,264), stdev = 0,150
  CI (99.9%): [83,755, 84,209] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternSize = 256)

# Run progress: 93,34% complete, ETA 01:01:47
# Fork: 1 of 1
# Warmup Iteration   1: 115,546 ms/op
# Warmup Iteration   2: 108,395 ms/op
# Warmup Iteration   3: 108,570 ms/op
# Warmup Iteration   4: 109,011 ms/op
# Warmup Iteration   5: 96,951 ms/op
# Warmup Iteration   6: 88,966 ms/op
# Warmup Iteration   7: 89,640 ms/op
# Warmup Iteration   8: 89,703 ms/op
# Warmup Iteration   9: 97,695 ms/op
# Warmup Iteration  10: 88,136 ms/op
Iteration   1: 88,119 ms/op
Iteration   2: 88,428 ms/op
Iteration   3: 88,352 ms/op
Iteration   4: 88,439 ms/op
Iteration   5: 88,249 ms/op
Iteration   6: 88,665 ms/op
Iteration   7: 88,432 ms/op
Iteration   8: 88,568 ms/op
Iteration   9: 88,476 ms/op
Iteration  10: 88,400 ms/op


Result "benchmarkFind":
  88,413 ±(99.9%) 0,231 ms/op [Average]
  (min, avg, max) = (88,119, 88,413, 88,665), stdev = 0,153
  CI (99.9%): [88,182, 88,644] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternSize = 2)

# Run progress: 93,38% complete, ETA 01:01:21
# Fork: 1 of 1
# Warmup Iteration   1: 44709,501 ms/op
# Warmup Iteration   2: 37366,298 ms/op
# Warmup Iteration   3: 37251,311 ms/op
# Warmup Iteration   4: 37062,717 ms/op
# Warmup Iteration   5: 37161,866 ms/op
# Warmup Iteration   6: 37145,457 ms/op
# Warmup Iteration   7: 36982,228 ms/op
# Warmup Iteration   8: 37077,711 ms/op
# Warmup Iteration   9: 36979,449 ms/op
# Warmup Iteration  10: 37147,916 ms/op
Iteration   1: 37102,312 ms/op
Iteration   2: 36958,318 ms/op
Iteration   3: 37119,180 ms/op
Iteration   4: 37112,903 ms/op
Iteration   5: 36982,897 ms/op
Iteration   6: 37138,923 ms/op
Iteration   7: 36970,308 ms/op
Iteration   8: 37092,804 ms/op
Iteration   9: 37272,743 ms/op
Iteration  10: 37009,725 ms/op


Result "benchmarkFind":
  37076,011 ±(99.9%) 146,882 ms/op [Average]
  (min, avg, max) = (36958,318, 37076,011, 37272,743), stdev = 97,153
  CI (99.9%): [36929,130, 37222,893] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternSize = 4)

# Run progress: 93,43% complete, ETA 01:01:47
# Fork: 1 of 1
# Warmup Iteration   1: 819,280 ms/op
# Warmup Iteration   2: 820,926 ms/op
# Warmup Iteration   3: 748,092 ms/op
# Warmup Iteration   4: 748,707 ms/op
# Warmup Iteration   5: 746,142 ms/op
# Warmup Iteration   6: 747,190 ms/op
# Warmup Iteration   7: 751,223 ms/op
# Warmup Iteration   8: 760,853 ms/op
# Warmup Iteration   9: 750,599 ms/op
# Warmup Iteration  10: 798,878 ms/op
Iteration   1: 749,175 ms/op
Iteration   2: 748,427 ms/op
Iteration   3: 748,388 ms/op
Iteration   4: 750,146 ms/op
Iteration   5: 748,981 ms/op
Iteration   6: 747,940 ms/op
Iteration   7: 749,406 ms/op
Iteration   8: 747,583 ms/op
Iteration   9: 751,131 ms/op
Iteration  10: 749,354 ms/op


Result "benchmarkFind":
  749,053 ±(99.9%) 1,592 ms/op [Average]
  (min, avg, max) = (747,583, 749,053, 751,131), stdev = 1,053
  CI (99.9%): [747,461, 750,646] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternSize = 8)

# Run progress: 93,47% complete, ETA 01:01:21
# Fork: 1 of 1
# Warmup Iteration   1: 580,134 ms/op
# Warmup Iteration   2: 538,458 ms/op
# Warmup Iteration   3: 532,657 ms/op
# Warmup Iteration   4: 529,624 ms/op
# Warmup Iteration   5: 519,665 ms/op
# Warmup Iteration   6: 521,573 ms/op
# Warmup Iteration   7: 520,463 ms/op
# Warmup Iteration   8: 520,405 ms/op
# Warmup Iteration   9: 520,557 ms/op
# Warmup Iteration  10: 521,444 ms/op
Iteration   1: 523,389 ms/op
Iteration   2: 521,089 ms/op
Iteration   3: 521,357 ms/op
Iteration   4: 521,570 ms/op
Iteration   5: 523,720 ms/op
Iteration   6: 519,822 ms/op
Iteration   7: 517,429 ms/op
Iteration   8: 524,145 ms/op
Iteration   9: 519,069 ms/op
Iteration  10: 518,048 ms/op


Result "benchmarkFind":
  520,964 ±(99.9%) 3,564 ms/op [Average]
  (min, avg, max) = (517,429, 520,964, 524,145), stdev = 2,358
  CI (99.9%): [517,399, 524,528] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternSize = 16)

# Run progress: 93,52% complete, ETA 01:00:55
# Fork: 1 of 1
# Warmup Iteration   1: 463,363 ms/op
# Warmup Iteration   2: 422,298 ms/op
# Warmup Iteration   3: 424,864 ms/op
# Warmup Iteration   4: 423,851 ms/op
# Warmup Iteration   5: 424,362 ms/op
# Warmup Iteration   6: 423,615 ms/op
# Warmup Iteration   7: 422,634 ms/op
# Warmup Iteration   8: 421,226 ms/op
# Warmup Iteration   9: 423,724 ms/op
# Warmup Iteration  10: 422,300 ms/op
Iteration   1: 422,822 ms/op
Iteration   2: 424,846 ms/op
Iteration   3: 423,562 ms/op
Iteration   4: 421,575 ms/op
Iteration   5: 437,853 ms/op
Iteration   6: 453,706 ms/op
Iteration   7: 425,616 ms/op
Iteration   8: 425,500 ms/op
Iteration   9: 416,346 ms/op
Iteration  10: 318,448 ms/op


Result "benchmarkFind":
  417,027 ±(99.9%) 54,746 ms/op [Average]
  (min, avg, max) = (318,448, 417,027, 453,706), stdev = 36,211
  CI (99.9%): [362,282, 471,773] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternSize = 32)

# Run progress: 93,57% complete, ETA 01:00:29
# Fork: 1 of 1
# Warmup Iteration   1: 488,002 ms/op
# Warmup Iteration   2: 408,081 ms/op
# Warmup Iteration   3: 401,957 ms/op
# Warmup Iteration   4: 397,853 ms/op
# Warmup Iteration   5: 398,538 ms/op
# Warmup Iteration   6: 398,996 ms/op
# Warmup Iteration   7: 399,670 ms/op
# Warmup Iteration   8: 397,750 ms/op
# Warmup Iteration   9: 398,066 ms/op
# Warmup Iteration  10: 400,196 ms/op
Iteration   1: 397,807 ms/op
Iteration   2: 399,766 ms/op
Iteration   3: 398,161 ms/op
Iteration   4: 397,499 ms/op
Iteration   5: 402,029 ms/op
Iteration   6: 396,551 ms/op
Iteration   7: 398,119 ms/op
Iteration   8: 402,739 ms/op
Iteration   9: 390,182 ms/op
Iteration  10: 286,189 ms/op


Result "benchmarkFind":
  386,904 ±(99.9%) 53,750 ms/op [Average]
  (min, avg, max) = (286,189, 386,904, 402,739), stdev = 35,553
  CI (99.9%): [333,154, 440,655] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternSize = 64)

# Run progress: 93,61% complete, ETA 01:00:03
# Fork: 1 of 1
# Warmup Iteration   1: 565,560 ms/op
# Warmup Iteration   2: 511,878 ms/op
# Warmup Iteration   3: 505,992 ms/op
# Warmup Iteration   4: 505,362 ms/op
# Warmup Iteration   5: 503,580 ms/op
# Warmup Iteration   6: 504,097 ms/op
# Warmup Iteration   7: 504,885 ms/op
# Warmup Iteration   8: 504,463 ms/op
# Warmup Iteration   9: 504,629 ms/op
# Warmup Iteration  10: 502,973 ms/op
Iteration   1: 504,572 ms/op
Iteration   2: 508,511 ms/op
Iteration   3: 508,719 ms/op
Iteration   4: 505,978 ms/op
Iteration   5: 504,265 ms/op
Iteration   6: 508,862 ms/op
Iteration   7: 506,056 ms/op
Iteration   8: 508,012 ms/op
Iteration   9: 507,811 ms/op
Iteration  10: 507,180 ms/op


Result "benchmarkFind":
  506,997 ±(99.9%) 2,557 ms/op [Average]
  (min, avg, max) = (504,265, 506,997, 508,862), stdev = 1,691
  CI (99.9%): [504,440, 509,553] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternSize = 128)

# Run progress: 93,66% complete, ETA 00:59:37
# Fork: 1 of 1
# Warmup Iteration   1: 564,515 ms/op
# Warmup Iteration   2: 505,962 ms/op
# Warmup Iteration   3: 548,410 ms/op
# Warmup Iteration   4: 528,901 ms/op
# Warmup Iteration   5: 505,720 ms/op
# Warmup Iteration   6: 504,502 ms/op
# Warmup Iteration   7: 505,523 ms/op
# Warmup Iteration   8: 505,781 ms/op
# Warmup Iteration   9: 508,316 ms/op
# Warmup Iteration  10: 507,869 ms/op
Iteration   1: 508,281 ms/op
Iteration   2: 510,200 ms/op
Iteration   3: 506,911 ms/op
Iteration   4: 505,198 ms/op
Iteration   5: 510,533 ms/op
Iteration   6: 506,393 ms/op
Iteration   7: 516,403 ms/op
Iteration   8: 509,177 ms/op
Iteration   9: 509,116 ms/op
Iteration  10: 507,466 ms/op


Result "benchmarkFind":
  508,968 ±(99.9%) 4,704 ms/op [Average]
  (min, avg, max) = (505,198, 508,968, 516,403), stdev = 3,111
  CI (99.9%): [504,264, 513,671] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternSize = 256)

# Run progress: 93,70% complete, ETA 00:59:11
# Fork: 1 of 1
# Warmup Iteration   1: 563,904 ms/op
# Warmup Iteration   2: 506,981 ms/op
# Warmup Iteration   3: 506,525 ms/op
# Warmup Iteration   4: 505,360 ms/op
# Warmup Iteration   5: 505,397 ms/op
# Warmup Iteration   6: 503,650 ms/op
# Warmup Iteration   7: 507,708 ms/op
# Warmup Iteration   8: 507,952 ms/op
# Warmup Iteration   9: 505,992 ms/op
# Warmup Iteration  10: 508,687 ms/op
Iteration   1: 509,306 ms/op
Iteration   2: 507,530 ms/op
Iteration   3: 504,770 ms/op
Iteration   4: 503,816 ms/op
Iteration   5: 506,450 ms/op
Iteration   6: 506,615 ms/op
Iteration   7: 505,653 ms/op
Iteration   8: 509,511 ms/op
Iteration   9: 511,065 ms/op
Iteration  10: 507,702 ms/op


Result "benchmarkFind":
  507,242 ±(99.9%) 3,407 ms/op [Average]
  (min, avg, max) = (503,816, 507,242, 511,065), stdev = 2,254
  CI (99.9%): [503,834, 510,649] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternSize = 2)

# Run progress: 93,75% complete, ETA 00:58:45
# Fork: 1 of 1
# Warmup Iteration   1: 165027,232 ms/op
# Warmup Iteration   2: 147903,806 ms/op
# Warmup Iteration   3: 145575,350 ms/op
# Warmup Iteration   4: 145445,435 ms/op
# Warmup Iteration   5: 145232,954 ms/op
# Warmup Iteration   6: 145010,834 ms/op
# Warmup Iteration   7: 145063,541 ms/op
# Warmup Iteration   8: 144939,645 ms/op
# Warmup Iteration   9: 144676,734 ms/op
# Warmup Iteration  10: 144996,785 ms/op
Iteration   1: 144919,209 ms/op
Iteration   2: 145085,154 ms/op
Iteration   3: 144945,009 ms/op
Iteration   4: 144985,365 ms/op
Iteration   5: 145213,694 ms/op
Iteration   6: 145524,665 ms/op
Iteration   7: 145177,355 ms/op
Iteration   8: 144871,641 ms/op
Iteration   9: 145052,493 ms/op
Iteration  10: 145049,965 ms/op


Result "benchmarkFind":
  145082,455 ±(99.9%) 286,478 ms/op [Average]
  (min, avg, max) = (144871,641, 145082,455, 145524,665), stdev = 189,487
  CI (99.9%): [144795,977, 145368,933] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternSize = 4)

# Run progress: 93,80% complete, ETA 01:01:31
# Fork: 1 of 1
# Warmup Iteration   1: 3288,560 ms/op
# Warmup Iteration   2: 2638,039 ms/op
# Warmup Iteration   3: 2561,168 ms/op
# Warmup Iteration   4: 2569,794 ms/op
# Warmup Iteration   5: 2562,163 ms/op
# Warmup Iteration   6: 2560,262 ms/op
# Warmup Iteration   7: 2562,468 ms/op
# Warmup Iteration   8: 2558,682 ms/op
# Warmup Iteration   9: 2696,550 ms/op
# Warmup Iteration  10: 2569,099 ms/op
Iteration   1: 2566,590 ms/op
Iteration   2: 2564,662 ms/op
Iteration   3: 2578,671 ms/op
Iteration   4: 2569,259 ms/op
Iteration   5: 2566,398 ms/op
Iteration   6: 2565,053 ms/op
Iteration   7: 2603,977 ms/op
Iteration   8: 2602,161 ms/op
Iteration   9: 2607,923 ms/op
Iteration  10: 2608,457 ms/op


Result "benchmarkFind":
  2583,315 ±(99.9%) 29,756 ms/op [Average]
  (min, avg, max) = (2564,662, 2583,315, 2608,457), stdev = 19,681
  CI (99.9%): [2553,559, 2613,071] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternSize = 8)

# Run progress: 93,84% complete, ETA 01:01:06
# Fork: 1 of 1
# Warmup Iteration   1: 2324,505 ms/op
# Warmup Iteration   2: 1792,723 ms/op
# Warmup Iteration   3: 1780,360 ms/op
# Warmup Iteration   4: 1787,177 ms/op
# Warmup Iteration   5: 1782,734 ms/op
# Warmup Iteration   6: 1786,656 ms/op
# Warmup Iteration   7: 1783,822 ms/op
# Warmup Iteration   8: 1788,219 ms/op
# Warmup Iteration   9: 1808,007 ms/op
# Warmup Iteration  10: 1786,288 ms/op
Iteration   1: 1786,234 ms/op
Iteration   2: 1786,001 ms/op
Iteration   3: 1784,855 ms/op
Iteration   4: 1918,034 ms/op
Iteration   5: 1788,267 ms/op
Iteration   6: 1783,765 ms/op
Iteration   7: 1794,431 ms/op
Iteration   8: 1795,290 ms/op
Iteration   9: 1794,869 ms/op
Iteration  10: 1795,646 ms/op


Result "benchmarkFind":
  1802,739 ±(99.9%) 61,663 ms/op [Average]
  (min, avg, max) = (1783,765, 1802,739, 1918,034), stdev = 40,786
  CI (99.9%): [1741,076, 1864,402] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternSize = 16)

# Run progress: 93,89% complete, ETA 01:00:39
# Fork: 1 of 1
# Warmup Iteration   1: 2007,882 ms/op
# Warmup Iteration   2: 1461,326 ms/op
# Warmup Iteration   3: 1452,562 ms/op
# Warmup Iteration   4: 1452,794 ms/op
# Warmup Iteration   5: 1451,131 ms/op
# Warmup Iteration   6: 1449,741 ms/op
# Warmup Iteration   7: 1452,452 ms/op
# Warmup Iteration   8: 1457,612 ms/op
# Warmup Iteration   9: 1453,703 ms/op
# Warmup Iteration  10: 1485,122 ms/op
Iteration   1: 1450,092 ms/op
Iteration   2: 1458,820 ms/op
Iteration   3: 1456,914 ms/op
Iteration   4: 1457,103 ms/op
Iteration   5: 1450,045 ms/op
Iteration   6: 1454,432 ms/op
Iteration   7: 1454,726 ms/op
Iteration   8: 1452,636 ms/op
Iteration   9: 1452,968 ms/op
Iteration  10: 1449,350 ms/op


Result "benchmarkFind":
  1453,709 ±(99.9%) 4,955 ms/op [Average]
  (min, avg, max) = (1449,350, 1453,709, 1458,820), stdev = 3,277
  CI (99.9%): [1448,753, 1458,664] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternSize = 32)

# Run progress: 93,93% complete, ETA 01:00:13
# Fork: 1 of 1
# Warmup Iteration   1: 1912,046 ms/op
# Warmup Iteration   2: 1366,448 ms/op
# Warmup Iteration   3: 1361,394 ms/op
# Warmup Iteration   4: 1365,881 ms/op
# Warmup Iteration   5: 1492,946 ms/op
# Warmup Iteration   6: 1361,604 ms/op
# Warmup Iteration   7: 1364,715 ms/op
# Warmup Iteration   8: 1361,084 ms/op
# Warmup Iteration   9: 1361,826 ms/op
# Warmup Iteration  10: 1364,805 ms/op
Iteration   1: 1361,931 ms/op
Iteration   2: 1365,190 ms/op
Iteration   3: 1365,084 ms/op
Iteration   4: 1364,877 ms/op
Iteration   5: 1362,237 ms/op
Iteration   6: 1363,540 ms/op
Iteration   7: 1363,084 ms/op
Iteration   8: 1367,332 ms/op
Iteration   9: 1365,711 ms/op
Iteration  10: 1360,856 ms/op


Result "benchmarkFind":
  1363,984 ±(99.9%) 3,012 ms/op [Average]
  (min, avg, max) = (1360,856, 1363,984, 1367,332), stdev = 1,992
  CI (99.9%): [1360,973, 1366,996] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternSize = 64)

# Run progress: 93,98% complete, ETA 00:59:46
# Fork: 1 of 1
# Warmup Iteration   1: 2288,172 ms/op
# Warmup Iteration   2: 1728,369 ms/op
# Warmup Iteration   3: 1725,343 ms/op
# Warmup Iteration   4: 1728,710 ms/op
# Warmup Iteration   5: 1720,581 ms/op
# Warmup Iteration   6: 1725,423 ms/op
# Warmup Iteration   7: 1722,223 ms/op
# Warmup Iteration   8: 1724,784 ms/op
# Warmup Iteration   9: 1720,878 ms/op
# Warmup Iteration  10: 1722,097 ms/op
Iteration   1: 1723,431 ms/op
Iteration   2: 1722,390 ms/op
Iteration   3: 1727,254 ms/op
Iteration   4: 1718,947 ms/op
Iteration   5: 1733,773 ms/op
Iteration   6: 1728,170 ms/op
Iteration   7: 1728,678 ms/op
Iteration   8: 1725,693 ms/op
Iteration   9: 1835,800 ms/op
Iteration  10: 1726,025 ms/op


Result "benchmarkFind":
  1737,016 ±(99.9%) 52,821 ms/op [Average]
  (min, avg, max) = (1718,947, 1737,016, 1835,800), stdev = 34,938
  CI (99.9%): [1684,195, 1789,837] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternSize = 128)

# Run progress: 94,03% complete, ETA 00:59:19
# Fork: 1 of 1
# Warmup Iteration   1: 2283,694 ms/op
# Warmup Iteration   2: 1727,665 ms/op
# Warmup Iteration   3: 1726,848 ms/op
# Warmup Iteration   4: 1731,978 ms/op
# Warmup Iteration   5: 1722,245 ms/op
# Warmup Iteration   6: 1729,179 ms/op
# Warmup Iteration   7: 1739,109 ms/op
# Warmup Iteration   8: 1729,599 ms/op
# Warmup Iteration   9: 1725,220 ms/op
# Warmup Iteration  10: 1725,650 ms/op
Iteration   1: 1727,141 ms/op
Iteration   2: 1735,884 ms/op
Iteration   3: 1731,134 ms/op
Iteration   4: 1728,087 ms/op
Iteration   5: 1728,400 ms/op
Iteration   6: 1725,497 ms/op
Iteration   7: 1730,654 ms/op
Iteration   8: 1728,215 ms/op
Iteration   9: 1728,493 ms/op
Iteration  10: 1729,106 ms/op


Result "benchmarkFind":
  1729,261 ±(99.9%) 4,270 ms/op [Average]
  (min, avg, max) = (1725,497, 1729,261, 1735,884), stdev = 2,825
  CI (99.9%): [1724,991, 1733,531] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBNDMBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternSize = 256)

# Run progress: 94,07% complete, ETA 00:58:53
# Fork: 1 of 1
# Warmup Iteration   1: 2283,909 ms/op
# Warmup Iteration   2: 1732,662 ms/op
# Warmup Iteration   3: 1728,917 ms/op
# Warmup Iteration   4: 1733,897 ms/op
# Warmup Iteration   5: 1731,464 ms/op
# Warmup Iteration   6: 1870,274 ms/op
# Warmup Iteration   7: 1728,622 ms/op
# Warmup Iteration   8: 1731,358 ms/op
# Warmup Iteration   9: 1726,463 ms/op
# Warmup Iteration  10: 1725,938 ms/op
Iteration   1: 1727,977 ms/op
Iteration   2: 1730,179 ms/op
Iteration   3: 1732,700 ms/op
Iteration   4: 1729,960 ms/op
Iteration   5: 1727,412 ms/op
Iteration   6: 1729,291 ms/op
Iteration   7: 1731,450 ms/op
Iteration   8: 1726,778 ms/op
Iteration   9: 1726,966 ms/op
Iteration  10: 1724,666 ms/op


Result "benchmarkFind":
  1728,738 ±(99.9%) 3,663 ms/op [Average]
  (min, avg, max) = (1724,666, 1728,738, 1732,700), stdev = 2,423
  CI (99.9%): [1725,075, 1732,401] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternSize = 2)

# Run progress: 94,12% complete, ETA 00:58:26
# Fork: 1 of 1
# Warmup Iteration   1: 0,466 ms/op
# Warmup Iteration   2: 0,425 ms/op
# Warmup Iteration   3: 0,424 ms/op
# Warmup Iteration   4: 0,425 ms/op
# Warmup Iteration   5: 0,425 ms/op
# Warmup Iteration   6: 0,424 ms/op
# Warmup Iteration   7: 0,425 ms/op
# Warmup Iteration   8: 0,425 ms/op
# Warmup Iteration   9: 0,426 ms/op
# Warmup Iteration  10: 0,422 ms/op
Iteration   1: 0,425 ms/op
Iteration   2: 0,425 ms/op
Iteration   3: 0,424 ms/op
Iteration   4: 0,424 ms/op
Iteration   5: 0,425 ms/op
Iteration   6: 0,425 ms/op
Iteration   7: 0,424 ms/op
Iteration   8: 0,425 ms/op
Iteration   9: 0,425 ms/op
Iteration  10: 0,424 ms/op


Result "benchmarkFind":
  0,425 ±(99.9%) 0,001 ms/op [Average]
  (min, avg, max) = (0,424, 0,425, 0,425), stdev = 0,001
  CI (99.9%): [0,424, 0,425] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternSize = 4)

# Run progress: 94,16% complete, ETA 00:57:58
# Fork: 1 of 1
# Warmup Iteration   1: 13,454 ms/op
# Warmup Iteration   2: 11,834 ms/op
# Warmup Iteration   3: 11,728 ms/op
# Warmup Iteration   4: 11,692 ms/op
# Warmup Iteration   5: 11,711 ms/op
# Warmup Iteration   6: 11,766 ms/op
# Warmup Iteration   7: 11,864 ms/op
# Warmup Iteration   8: 11,816 ms/op
# Warmup Iteration   9: 11,842 ms/op
# Warmup Iteration  10: 11,833 ms/op
Iteration   1: 11,860 ms/op
Iteration   2: 11,883 ms/op
Iteration   3: 11,850 ms/op
Iteration   4: 13,354 ms/op
Iteration   5: 11,697 ms/op
Iteration   6: 11,721 ms/op
Iteration   7: 11,826 ms/op
Iteration   8: 12,435 ms/op
Iteration   9: 11,932 ms/op
Iteration  10: 11,903 ms/op


Result "benchmarkFind":
  12,046 ±(99.9%) 0,759 ms/op [Average]
  (min, avg, max) = (11,697, 12,046, 13,354), stdev = 0,502
  CI (99.9%): [11,287, 12,805] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternSize = 8)

# Run progress: 94,21% complete, ETA 00:57:31
# Fork: 1 of 1
# Warmup Iteration   1: 2934,468 ms/op
# Warmup Iteration   2: 2852,479 ms/op
# Warmup Iteration   3: 2798,131 ms/op
# Warmup Iteration   4: 2803,374 ms/op
# Warmup Iteration   5: 2830,815 ms/op
# Warmup Iteration   6: 2859,738 ms/op
# Warmup Iteration   7: 2862,194 ms/op
# Warmup Iteration   8: 2885,823 ms/op
# Warmup Iteration   9: 2872,551 ms/op
# Warmup Iteration  10: 3037,678 ms/op
Iteration   1: 2935,890 ms/op
Iteration   2: 2883,306 ms/op
Iteration   3: 2895,355 ms/op
Iteration   4: 2867,820 ms/op
Iteration   5: 2882,721 ms/op
Iteration   6: 2877,265 ms/op
Iteration   7: 2887,465 ms/op
Iteration   8: 2856,409 ms/op
Iteration   9: 2961,421 ms/op
Iteration  10: 2855,196 ms/op


Result "benchmarkFind":
  2890,285 ±(99.9%) 51,227 ms/op [Average]
  (min, avg, max) = (2855,196, 2890,285, 2961,421), stdev = 33,883
  CI (99.9%): [2839,058, 2941,512] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternSize = 16)

# Run progress: 94,26% complete, ETA 00:57:05
# Fork: 1 of 1
# Warmup Iteration   1: 4041,597 ms/op
# Warmup Iteration   2: 4054,056 ms/op
# Warmup Iteration   3: 4050,214 ms/op
# Warmup Iteration   4: 4024,831 ms/op
# Warmup Iteration   5: 4022,380 ms/op
# Warmup Iteration   6: 4047,268 ms/op
# Warmup Iteration   7: 4029,727 ms/op
# Warmup Iteration   8: 4041,943 ms/op
# Warmup Iteration   9: 4048,661 ms/op
# Warmup Iteration  10: 4048,513 ms/op
Iteration   1: 4144,704 ms/op
Iteration   2: 4107,005 ms/op
Iteration   3: 4036,362 ms/op
Iteration   4: 4154,011 ms/op
Iteration   5: 4054,654 ms/op
Iteration   6: 4048,909 ms/op
Iteration   7: 4139,868 ms/op
Iteration   8: 4034,875 ms/op
Iteration   9: 4057,837 ms/op
Iteration  10: 4139,030 ms/op


Result "benchmarkFind":
  4091,726 ±(99.9%) 74,966 ms/op [Average]
  (min, avg, max) = (4034,875, 4091,726, 4154,011), stdev = 49,585
  CI (99.9%): [4016,760, 4166,691] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternSize = 32)

# Run progress: 94,30% complete, ETA 00:56:41
# Fork: 1 of 1
# Warmup Iteration   1: 753,291 ms/op
# Warmup Iteration   2: 687,792 ms/op
# Warmup Iteration   3: 671,432 ms/op
# Warmup Iteration   4: 676,448 ms/op
# Warmup Iteration   5: 720,254 ms/op
# Warmup Iteration   6: 719,469 ms/op
# Warmup Iteration   7: 668,880 ms/op
# Warmup Iteration   8: 667,925 ms/op
# Warmup Iteration   9: 666,483 ms/op
# Warmup Iteration  10: 667,044 ms/op
Iteration   1: 669,135 ms/op
Iteration   2: 674,618 ms/op
Iteration   3: 672,125 ms/op
Iteration   4: 677,230 ms/op
Iteration   5: 671,384 ms/op
Iteration   6: 671,617 ms/op
Iteration   7: 670,765 ms/op
Iteration   8: 676,808 ms/op
Iteration   9: 674,408 ms/op
Iteration  10: 672,607 ms/op


Result "benchmarkFind":
  673,070 ±(99.9%) 3,978 ms/op [Average]
  (min, avg, max) = (669,135, 673,070, 677,230), stdev = 2,631
  CI (99.9%): [669,091, 677,048] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternSize = 64)

# Run progress: 94,35% complete, ETA 00:56:14
# Fork: 1 of 1
# Warmup Iteration   1: 701,778 ms/op
# Warmup Iteration   2: 673,322 ms/op
# Warmup Iteration   3: 715,205 ms/op
# Warmup Iteration   4: 673,724 ms/op
# Warmup Iteration   5: 672,086 ms/op
# Warmup Iteration   6: 672,483 ms/op
# Warmup Iteration   7: 676,025 ms/op
# Warmup Iteration   8: 679,333 ms/op
# Warmup Iteration   9: 680,316 ms/op
# Warmup Iteration  10: 680,206 ms/op
Iteration   1: 683,611 ms/op
Iteration   2: 683,379 ms/op
Iteration   3: 685,264 ms/op
Iteration   4: 679,430 ms/op
Iteration   5: 680,966 ms/op
Iteration   6: 681,472 ms/op
Iteration   7: 686,205 ms/op
Iteration   8: 686,208 ms/op
Iteration   9: 686,067 ms/op
Iteration  10: 686,183 ms/op


Result "benchmarkFind":
  683,878 ±(99.9%) 3,813 ms/op [Average]
  (min, avg, max) = (679,430, 683,878, 686,208), stdev = 2,522
  CI (99.9%): [680,065, 687,692] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternSize = 128)

# Run progress: 94,39% complete, ETA 00:55:46
# Fork: 1 of 1
# Warmup Iteration   1: 709,696 ms/op
# Warmup Iteration   2: 685,845 ms/op
# Warmup Iteration   3: 689,984 ms/op
# Warmup Iteration   4: 685,511 ms/op
# Warmup Iteration   5: 684,890 ms/op
# Warmup Iteration   6: 684,725 ms/op
# Warmup Iteration   7: 688,110 ms/op
# Warmup Iteration   8: 689,540 ms/op
# Warmup Iteration   9: 689,706 ms/op
# Warmup Iteration  10: 690,739 ms/op
Iteration   1: 689,016 ms/op
Iteration   2: 689,330 ms/op
Iteration   3: 689,153 ms/op
Iteration   4: 691,211 ms/op
Iteration   5: 689,109 ms/op
Iteration   6: 690,143 ms/op
Iteration   7: 689,056 ms/op
Iteration   8: 688,786 ms/op
Iteration   9: 688,275 ms/op
Iteration  10: 687,813 ms/op


Result "benchmarkFind":
  689,189 ±(99.9%) 1,422 ms/op [Average]
  (min, avg, max) = (687,813, 689,189, 691,211), stdev = 0,941
  CI (99.9%): [687,767, 690,612] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternSize = 256)

# Run progress: 94,44% complete, ETA 00:55:19
# Fork: 1 of 1
# Warmup Iteration   1: 681,077 ms/op
# Warmup Iteration   2: 659,031 ms/op
# Warmup Iteration   3: 657,929 ms/op
# Warmup Iteration   4: 658,845 ms/op
# Warmup Iteration   5: 701,424 ms/op
# Warmup Iteration   6: 647,985 ms/op
# Warmup Iteration   7: 647,444 ms/op
# Warmup Iteration   8: 648,650 ms/op
# Warmup Iteration   9: 650,953 ms/op
# Warmup Iteration  10: 652,800 ms/op
Iteration   1: 655,407 ms/op
Iteration   2: 654,446 ms/op
Iteration   3: 654,913 ms/op
Iteration   4: 654,244 ms/op
Iteration   5: 653,721 ms/op
Iteration   6: 656,576 ms/op
Iteration   7: 654,184 ms/op
Iteration   8: 654,735 ms/op
Iteration   9: 655,271 ms/op
Iteration  10: 654,257 ms/op


Result "benchmarkFind":
  654,775 ±(99.9%) 1,237 ms/op [Average]
  (min, avg, max) = (653,721, 654,775, 656,576), stdev = 0,818
  CI (99.9%): [653,538, 656,012] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternSize = 2)

# Run progress: 94,49% complete, ETA 00:54:51
# Fork: 1 of 1
# Warmup Iteration   1: 3,376 ms/op
# Warmup Iteration   2: 3,126 ms/op
# Warmup Iteration   3: 3,127 ms/op
# Warmup Iteration   4: 3,129 ms/op
# Warmup Iteration   5: 3,129 ms/op
# Warmup Iteration   6: 3,125 ms/op
# Warmup Iteration   7: 3,125 ms/op
# Warmup Iteration   8: 3,133 ms/op
# Warmup Iteration   9: 3,132 ms/op
# Warmup Iteration  10: 3,124 ms/op
Iteration   1: 3,127 ms/op
Iteration   2: 3,127 ms/op
Iteration   3: 3,118 ms/op
Iteration   4: 3,130 ms/op
Iteration   5: 3,125 ms/op
Iteration   6: 3,151 ms/op
Iteration   7: 3,123 ms/op
Iteration   8: 3,132 ms/op
Iteration   9: 3,133 ms/op
Iteration  10: 3,131 ms/op


Result "benchmarkFind":
  3,130 ±(99.9%) 0,013 ms/op [Average]
  (min, avg, max) = (3,118, 3,130, 3,151), stdev = 0,009
  CI (99.9%): [3,117, 3,143] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternSize = 4)

# Run progress: 94,53% complete, ETA 00:54:24
# Fork: 1 of 1
# Warmup Iteration   1: 2105,106 ms/op
# Warmup Iteration   2: 1974,066 ms/op
# Warmup Iteration   3: 1970,487 ms/op
# Warmup Iteration   4: 1984,577 ms/op
# Warmup Iteration   5: 1962,318 ms/op
# Warmup Iteration   6: 1890,616 ms/op
# Warmup Iteration   7: 1888,936 ms/op
# Warmup Iteration   8: 1889,275 ms/op
# Warmup Iteration   9: 1889,924 ms/op
# Warmup Iteration  10: 1996,508 ms/op
Iteration   1: 1881,266 ms/op
Iteration   2: 1880,280 ms/op
Iteration   3: 1885,684 ms/op
Iteration   4: 1895,235 ms/op
Iteration   5: 1897,433 ms/op
Iteration   6: 1896,168 ms/op
Iteration   7: 1926,318 ms/op
Iteration   8: 1895,470 ms/op
Iteration   9: 1900,048 ms/op
Iteration  10: 1899,582 ms/op


Result "benchmarkFind":
  1895,748 ±(99.9%) 19,656 ms/op [Average]
  (min, avg, max) = (1880,280, 1895,748, 1926,318), stdev = 13,001
  CI (99.9%): [1876,092, 1915,405] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternSize = 8)

# Run progress: 94,58% complete, ETA 00:53:57
# Fork: 1 of 1
# Warmup Iteration   1: 2257,735 ms/op
# Warmup Iteration   2: 2189,891 ms/op
# Warmup Iteration   3: 2187,131 ms/op
# Warmup Iteration   4: 2213,023 ms/op
# Warmup Iteration   5: 2198,299 ms/op
# Warmup Iteration   6: 2029,940 ms/op
# Warmup Iteration   7: 2031,229 ms/op
# Warmup Iteration   8: 2040,264 ms/op
# Warmup Iteration   9: 2027,602 ms/op
# Warmup Iteration  10: 2028,744 ms/op
Iteration   1: 2030,464 ms/op
Iteration   2: 2035,410 ms/op
Iteration   3: 2030,078 ms/op
Iteration   4: 2034,750 ms/op
Iteration   5: 2030,139 ms/op
Iteration   6: 2029,393 ms/op
Iteration   7: 2031,894 ms/op
Iteration   8: 2032,344 ms/op
Iteration   9: 2138,803 ms/op
Iteration  10: 2021,610 ms/op


Result "benchmarkFind":
  2041,488 ±(99.9%) 52,008 ms/op [Average]
  (min, avg, max) = (2021,610, 2041,488, 2138,803), stdev = 34,400
  CI (99.9%): [1989,481, 2093,496] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternSize = 16)

# Run progress: 94,62% complete, ETA 00:53:30
# Fork: 1 of 1
# Warmup Iteration   1: 299,010 ms/op
# Warmup Iteration   2: 282,604 ms/op
# Warmup Iteration   3: 279,244 ms/op
# Warmup Iteration   4: 277,949 ms/op
# Warmup Iteration   5: 278,706 ms/op
# Warmup Iteration   6: 278,563 ms/op
# Warmup Iteration   7: 279,777 ms/op
# Warmup Iteration   8: 281,326 ms/op
# Warmup Iteration   9: 281,906 ms/op
# Warmup Iteration  10: 283,438 ms/op
Iteration   1: 282,451 ms/op
Iteration   2: 284,040 ms/op
Iteration   3: 284,838 ms/op
Iteration   4: 276,469 ms/op
Iteration   5: 276,443 ms/op
Iteration   6: 276,857 ms/op
Iteration   7: 275,297 ms/op
Iteration   8: 276,165 ms/op
Iteration   9: 275,887 ms/op
Iteration  10: 276,682 ms/op


Result "benchmarkFind":
  278,513 ±(99.9%) 5,598 ms/op [Average]
  (min, avg, max) = (275,297, 278,513, 284,838), stdev = 3,702
  CI (99.9%): [272,915, 284,111] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternSize = 32)

# Run progress: 94,67% complete, ETA 00:53:03
# Fork: 1 of 1
# Warmup Iteration   1: 283,826 ms/op
# Warmup Iteration   2: 270,422 ms/op
# Warmup Iteration   3: 268,896 ms/op
# Warmup Iteration   4: 269,634 ms/op
# Warmup Iteration   5: 271,067 ms/op
# Warmup Iteration   6: 273,690 ms/op
# Warmup Iteration   7: 275,590 ms/op
# Warmup Iteration   8: 274,122 ms/op
# Warmup Iteration   9: 274,321 ms/op
# Warmup Iteration  10: 274,665 ms/op
Iteration   1: 271,796 ms/op
Iteration   2: 269,554 ms/op
Iteration   3: 271,581 ms/op
Iteration   4: 265,468 ms/op
Iteration   5: 265,840 ms/op
Iteration   6: 265,665 ms/op
Iteration   7: 266,383 ms/op
Iteration   8: 266,280 ms/op
Iteration   9: 266,545 ms/op
Iteration  10: 266,898 ms/op


Result "benchmarkFind":
  267,601 ±(99.9%) 3,686 ms/op [Average]
  (min, avg, max) = (265,468, 267,601, 271,796), stdev = 2,438
  CI (99.9%): [263,915, 271,286] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternSize = 64)

# Run progress: 94,72% complete, ETA 00:52:35
# Fork: 1 of 1
# Warmup Iteration   1: 287,499 ms/op
# Warmup Iteration   2: 274,930 ms/op
# Warmup Iteration   3: 272,877 ms/op
# Warmup Iteration   4: 272,189 ms/op
# Warmup Iteration   5: 272,056 ms/op
# Warmup Iteration   6: 273,324 ms/op
# Warmup Iteration   7: 271,990 ms/op
# Warmup Iteration   8: 273,478 ms/op
# Warmup Iteration   9: 307,683 ms/op
# Warmup Iteration  10: 272,207 ms/op
Iteration   1: 271,899 ms/op
Iteration   2: 271,825 ms/op
Iteration   3: 271,111 ms/op
Iteration   4: 264,035 ms/op
Iteration   5: 260,328 ms/op
Iteration   6: 260,413 ms/op
Iteration   7: 262,133 ms/op
Iteration   8: 261,894 ms/op
Iteration   9: 260,974 ms/op
Iteration  10: 261,779 ms/op


Result "benchmarkFind":
  264,639 ±(99.9%) 7,449 ms/op [Average]
  (min, avg, max) = (260,328, 264,639, 271,899), stdev = 4,927
  CI (99.9%): [257,190, 272,088] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternSize = 128)

# Run progress: 94,76% complete, ETA 00:52:07
# Fork: 1 of 1
# Warmup Iteration   1: 304,760 ms/op
# Warmup Iteration   2: 292,499 ms/op
# Warmup Iteration   3: 287,443 ms/op
# Warmup Iteration   4: 288,167 ms/op
# Warmup Iteration   5: 287,222 ms/op
# Warmup Iteration   6: 288,299 ms/op
# Warmup Iteration   7: 288,815 ms/op
# Warmup Iteration   8: 289,787 ms/op
# Warmup Iteration   9: 291,481 ms/op
# Warmup Iteration  10: 291,435 ms/op
Iteration   1: 291,384 ms/op
Iteration   2: 293,045 ms/op
Iteration   3: 287,057 ms/op
Iteration   4: 275,559 ms/op
Iteration   5: 271,071 ms/op
Iteration   6: 272,446 ms/op
Iteration   7: 273,877 ms/op
Iteration   8: 274,268 ms/op
Iteration   9: 274,478 ms/op
Iteration  10: 273,711 ms/op


Result "benchmarkFind":
  278,690 ±(99.9%) 12,642 ms/op [Average]
  (min, avg, max) = (271,071, 278,690, 293,045), stdev = 8,362
  CI (99.9%): [266,047, 291,332] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternSize = 256)

# Run progress: 94,81% complete, ETA 00:51:40
# Fork: 1 of 1
# Warmup Iteration   1: 280,029 ms/op
# Warmup Iteration   2: 268,597 ms/op
# Warmup Iteration   3: 264,594 ms/op
# Warmup Iteration   4: 265,725 ms/op
# Warmup Iteration   5: 263,617 ms/op
# Warmup Iteration   6: 264,194 ms/op
# Warmup Iteration   7: 266,016 ms/op
# Warmup Iteration   8: 265,371 ms/op
# Warmup Iteration   9: 266,475 ms/op
# Warmup Iteration  10: 266,724 ms/op
Iteration   1: 266,078 ms/op
Iteration   2: 267,426 ms/op
Iteration   3: 267,413 ms/op
Iteration   4: 256,010 ms/op
Iteration   5: 252,352 ms/op
Iteration   6: 253,329 ms/op
Iteration   7: 253,677 ms/op
Iteration   8: 253,412 ms/op
Iteration   9: 254,414 ms/op
Iteration  10: 253,765 ms/op


Result "benchmarkFind":
  257,787 ±(99.9%) 9,700 ms/op [Average]
  (min, avg, max) = (252,352, 257,787, 267,426), stdev = 6,416
  CI (99.9%): [248,088, 267,487] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternSize = 2)

# Run progress: 94,85% complete, ETA 00:51:12
# Fork: 1 of 1
# Warmup Iteration   1: 26,701 ms/op
# Warmup Iteration   2: 27,559 ms/op
# Warmup Iteration   3: 24,631 ms/op
# Warmup Iteration   4: 24,635 ms/op
# Warmup Iteration   5: 24,567 ms/op
# Warmup Iteration   6: 24,678 ms/op
# Warmup Iteration   7: 24,535 ms/op
# Warmup Iteration   8: 24,427 ms/op
# Warmup Iteration   9: 24,488 ms/op
# Warmup Iteration  10: 24,370 ms/op
Iteration   1: 24,466 ms/op
Iteration   2: 24,396 ms/op
Iteration   3: 24,561 ms/op
Iteration   4: 24,477 ms/op
Iteration   5: 24,552 ms/op
Iteration   6: 24,602 ms/op
Iteration   7: 24,403 ms/op
Iteration   8: 24,578 ms/op
Iteration   9: 24,478 ms/op
Iteration  10: 24,489 ms/op


Result "benchmarkFind":
  24,500 ±(99.9%) 0,108 ms/op [Average]
  (min, avg, max) = (24,396, 24,500, 24,602), stdev = 0,071
  CI (99.9%): [24,393, 24,608] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternSize = 4)

# Run progress: 94,90% complete, ETA 00:50:44
# Fork: 1 of 1
# Warmup Iteration   1: 30176,063 ms/op
# Warmup Iteration   2: 29468,225 ms/op
# Warmup Iteration   3: 29228,866 ms/op
# Warmup Iteration   4: 29374,204 ms/op
# Warmup Iteration   5: 28873,767 ms/op
# Warmup Iteration   6: 28211,957 ms/op
# Warmup Iteration   7: 28147,389 ms/op
# Warmup Iteration   8: 28282,106 ms/op
# Warmup Iteration   9: 28278,852 ms/op
# Warmup Iteration  10: 28305,724 ms/op
Iteration   1: 28149,438 ms/op
Iteration   2: 28208,775 ms/op
Iteration   3: 28121,078 ms/op
Iteration   4: 28245,879 ms/op
Iteration   5: 28263,830 ms/op
Iteration   6: 28234,229 ms/op
Iteration   7: 28393,435 ms/op
Iteration   8: 28337,215 ms/op
Iteration   9: 28373,285 ms/op
Iteration  10: 28321,311 ms/op


Result "benchmarkFind":
  28264,847 ±(99.9%) 138,151 ms/op [Average]
  (min, avg, max) = (28121,078, 28264,847, 28393,435), stdev = 91,378
  CI (99.9%): [28126,696, 28402,999] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternSize = 8)

# Run progress: 94,94% complete, ETA 00:50:46
# Fork: 1 of 1
# Warmup Iteration   1: 207,842 ms/op
# Warmup Iteration   2: 196,319 ms/op
# Warmup Iteration   3: 194,562 ms/op
# Warmup Iteration   4: 195,454 ms/op
# Warmup Iteration   5: 195,179 ms/op
# Warmup Iteration   6: 196,651 ms/op
# Warmup Iteration   7: 197,328 ms/op
# Warmup Iteration   8: 223,931 ms/op
# Warmup Iteration   9: 195,233 ms/op
# Warmup Iteration  10: 185,250 ms/op
Iteration   1: 184,725 ms/op
Iteration   2: 185,483 ms/op
Iteration   3: 186,169 ms/op
Iteration   4: 185,652 ms/op
Iteration   5: 187,077 ms/op
Iteration   6: 186,416 ms/op
Iteration   7: 186,022 ms/op
Iteration   8: 186,171 ms/op
Iteration   9: 186,307 ms/op
Iteration  10: 185,806 ms/op


Result "benchmarkFind":
  185,983 ±(99.9%) 0,947 ms/op [Average]
  (min, avg, max) = (184,725, 185,983, 187,077), stdev = 0,627
  CI (99.9%): [185,036, 186,930] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternSize = 16)

# Run progress: 94,99% complete, ETA 00:50:18
# Fork: 1 of 1
# Warmup Iteration   1: 164,331 ms/op
# Warmup Iteration   2: 153,168 ms/op
# Warmup Iteration   3: 152,875 ms/op
# Warmup Iteration   4: 152,873 ms/op
# Warmup Iteration   5: 154,920 ms/op
# Warmup Iteration   6: 153,050 ms/op
# Warmup Iteration   7: 153,100 ms/op
# Warmup Iteration   8: 151,862 ms/op
# Warmup Iteration   9: 142,999 ms/op
# Warmup Iteration  10: 143,764 ms/op
Iteration   1: 143,713 ms/op
Iteration   2: 143,487 ms/op
Iteration   3: 143,063 ms/op
Iteration   4: 143,654 ms/op
Iteration   5: 143,146 ms/op
Iteration   6: 143,460 ms/op
Iteration   7: 142,981 ms/op
Iteration   8: 143,271 ms/op
Iteration   9: 143,506 ms/op
Iteration  10: 142,143 ms/op


Result "benchmarkFind":
  143,242 ±(99.9%) 0,692 ms/op [Average]
  (min, avg, max) = (142,143, 143,242, 143,713), stdev = 0,458
  CI (99.9%): [142,550, 143,935] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternSize = 32)

# Run progress: 95,04% complete, ETA 00:49:50
# Fork: 1 of 1
# Warmup Iteration   1: 157,825 ms/op
# Warmup Iteration   2: 143,468 ms/op
# Warmup Iteration   3: 143,607 ms/op
# Warmup Iteration   4: 143,935 ms/op
# Warmup Iteration   5: 144,796 ms/op
# Warmup Iteration   6: 145,472 ms/op
# Warmup Iteration   7: 145,740 ms/op
# Warmup Iteration   8: 143,397 ms/op
# Warmup Iteration   9: 130,268 ms/op
# Warmup Iteration  10: 130,797 ms/op
Iteration   1: 131,838 ms/op
Iteration   2: 132,094 ms/op
Iteration   3: 131,459 ms/op
Iteration   4: 131,234 ms/op
Iteration   5: 131,046 ms/op
Iteration   6: 130,940 ms/op
Iteration   7: 131,070 ms/op
Iteration   8: 131,167 ms/op
Iteration   9: 131,111 ms/op
Iteration  10: 131,202 ms/op


Result "benchmarkFind":
  131,316 ±(99.9%) 0,565 ms/op [Average]
  (min, avg, max) = (130,940, 131,316, 132,094), stdev = 0,374
  CI (99.9%): [130,751, 131,881] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternSize = 64)

# Run progress: 95,08% complete, ETA 00:49:22
# Fork: 1 of 1
# Warmup Iteration   1: 156,304 ms/op
# Warmup Iteration   2: 159,691 ms/op
# Warmup Iteration   3: 145,679 ms/op
# Warmup Iteration   4: 145,905 ms/op
# Warmup Iteration   5: 146,586 ms/op
# Warmup Iteration   6: 147,270 ms/op
# Warmup Iteration   7: 148,117 ms/op
# Warmup Iteration   8: 145,631 ms/op
# Warmup Iteration   9: 129,416 ms/op
# Warmup Iteration  10: 130,276 ms/op
Iteration   1: 130,978 ms/op
Iteration   2: 130,945 ms/op
Iteration   3: 130,353 ms/op
Iteration   4: 130,377 ms/op
Iteration   5: 130,471 ms/op
Iteration   6: 130,378 ms/op
Iteration   7: 130,680 ms/op
Iteration   8: 129,224 ms/op
Iteration   9: 129,817 ms/op
Iteration  10: 129,993 ms/op


Result "benchmarkFind":
  130,322 ±(99.9%) 0,804 ms/op [Average]
  (min, avg, max) = (129,224, 130,322, 130,978), stdev = 0,532
  CI (99.9%): [129,518, 131,126] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternSize = 128)

# Run progress: 95,13% complete, ETA 00:48:54
# Fork: 1 of 1
# Warmup Iteration   1: 154,034 ms/op
# Warmup Iteration   2: 144,049 ms/op
# Warmup Iteration   3: 143,979 ms/op
# Warmup Iteration   4: 144,459 ms/op
# Warmup Iteration   5: 144,892 ms/op
# Warmup Iteration   6: 145,788 ms/op
# Warmup Iteration   7: 145,745 ms/op
# Warmup Iteration   8: 140,554 ms/op
# Warmup Iteration   9: 132,961 ms/op
# Warmup Iteration  10: 132,210 ms/op
Iteration   1: 132,268 ms/op
Iteration   2: 132,687 ms/op
Iteration   3: 131,412 ms/op
Iteration   4: 131,574 ms/op
Iteration   5: 131,862 ms/op
Iteration   6: 131,238 ms/op
Iteration   7: 131,469 ms/op
Iteration   8: 131,416 ms/op
Iteration   9: 131,801 ms/op
Iteration  10: 131,473 ms/op


Result "benchmarkFind":
  131,720 ±(99.9%) 0,681 ms/op [Average]
  (min, avg, max) = (131,238, 131,720, 132,687), stdev = 0,450
  CI (99.9%): [131,039, 132,401] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternSize = 256)

# Run progress: 95,17% complete, ETA 00:48:26
# Fork: 1 of 1
# Warmup Iteration   1: 150,190 ms/op
# Warmup Iteration   2: 138,984 ms/op
# Warmup Iteration   3: 139,194 ms/op
# Warmup Iteration   4: 139,438 ms/op
# Warmup Iteration   5: 140,301 ms/op
# Warmup Iteration   6: 140,445 ms/op
# Warmup Iteration   7: 140,667 ms/op
# Warmup Iteration   8: 129,394 ms/op
# Warmup Iteration   9: 128,266 ms/op
# Warmup Iteration  10: 128,178 ms/op
Iteration   1: 128,277 ms/op
Iteration   2: 128,100 ms/op
Iteration   3: 127,797 ms/op
Iteration   4: 127,974 ms/op
Iteration   5: 127,811 ms/op
Iteration   6: 127,794 ms/op
Iteration   7: 144,598 ms/op
Iteration   8: 126,582 ms/op
Iteration   9: 126,563 ms/op
Iteration  10: 126,729 ms/op


Result "benchmarkFind":
  129,223 ±(99.9%) 8,226 ms/op [Average]
  (min, avg, max) = (126,563, 129,223, 144,598), stdev = 5,441
  CI (99.9%): [120,997, 137,448] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternSize = 2)

# Run progress: 95,22% complete, ETA 00:47:58
# Fork: 1 of 1
# Warmup Iteration   1: 425,154 ms/op
# Warmup Iteration   2: 391,998 ms/op
# Warmup Iteration   3: 386,710 ms/op
# Warmup Iteration   4: 386,842 ms/op
# Warmup Iteration   5: 390,441 ms/op
# Warmup Iteration   6: 387,116 ms/op
# Warmup Iteration   7: 386,681 ms/op
# Warmup Iteration   8: 387,023 ms/op
# Warmup Iteration   9: 386,057 ms/op
# Warmup Iteration  10: 386,605 ms/op
Iteration   1: 386,049 ms/op
Iteration   2: 386,146 ms/op
Iteration   3: 386,183 ms/op
Iteration   4: 387,139 ms/op
Iteration   5: 386,050 ms/op
Iteration   6: 386,628 ms/op
Iteration   7: 386,537 ms/op
Iteration   8: 387,525 ms/op
Iteration   9: 386,317 ms/op
Iteration  10: 387,250 ms/op


Result "benchmarkFind":
  386,582 ±(99.9%) 0,818 ms/op [Average]
  (min, avg, max) = (386,049, 386,582, 387,525), stdev = 0,541
  CI (99.9%): [385,764, 387,401] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternSize = 4)

# Run progress: 95,27% complete, ETA 00:47:30
# Fork: 1 of 1
# Warmup Iteration   1: 1989,221 ms/op
# Warmup Iteration   2: 1913,268 ms/op
# Warmup Iteration   3: 1901,609 ms/op
# Warmup Iteration   4: 1919,933 ms/op
# Warmup Iteration   5: 1926,684 ms/op
# Warmup Iteration   6: 1792,550 ms/op
# Warmup Iteration   7: 1762,293 ms/op
# Warmup Iteration   8: 1755,821 ms/op
# Warmup Iteration   9: 1758,459 ms/op
# Warmup Iteration  10: 1761,456 ms/op
Iteration   1: 1763,268 ms/op
Iteration   2: 1762,323 ms/op
Iteration   3: 1761,808 ms/op
Iteration   4: 1762,359 ms/op
Iteration   5: 1762,081 ms/op
Iteration   6: 1760,977 ms/op
Iteration   7: 1757,906 ms/op
Iteration   8: 1928,096 ms/op
Iteration   9: 1739,643 ms/op
Iteration  10: 1743,737 ms/op


Result "benchmarkFind":
  1774,220 ±(99.9%) 82,728 ms/op [Average]
  (min, avg, max) = (1739,643, 1774,220, 1928,096), stdev = 54,719
  CI (99.9%): [1691,492, 1856,948] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternSize = 8)

# Run progress: 95,31% complete, ETA 00:47:03
# Fork: 1 of 1
# Warmup Iteration   1: 173,266 ms/op
# Warmup Iteration   2: 158,846 ms/op
# Warmup Iteration   3: 158,664 ms/op
# Warmup Iteration   4: 158,582 ms/op
# Warmup Iteration   5: 159,429 ms/op
# Warmup Iteration   6: 160,516 ms/op
# Warmup Iteration   7: 160,347 ms/op
# Warmup Iteration   8: 161,076 ms/op
# Warmup Iteration   9: 151,324 ms/op
# Warmup Iteration  10: 148,641 ms/op
Iteration   1: 149,703 ms/op
Iteration   2: 150,217 ms/op
Iteration   3: 150,354 ms/op
Iteration   4: 150,136 ms/op
Iteration   5: 150,175 ms/op
Iteration   6: 149,644 ms/op
Iteration   7: 150,277 ms/op
Iteration   8: 149,658 ms/op
Iteration   9: 149,405 ms/op
Iteration  10: 149,312 ms/op


Result "benchmarkFind":
  149,888 ±(99.9%) 0,581 ms/op [Average]
  (min, avg, max) = (149,312, 149,888, 150,354), stdev = 0,385
  CI (99.9%): [149,307, 150,470] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternSize = 16)

# Run progress: 95,36% complete, ETA 00:46:35
# Fork: 1 of 1
# Warmup Iteration   1: 129,268 ms/op
# Warmup Iteration   2: 119,592 ms/op
# Warmup Iteration   3: 119,281 ms/op
# Warmup Iteration   4: 119,794 ms/op
# Warmup Iteration   5: 120,857 ms/op
# Warmup Iteration   6: 120,966 ms/op
# Warmup Iteration   7: 110,246 ms/op
# Warmup Iteration   8: 105,813 ms/op
# Warmup Iteration   9: 105,786 ms/op
# Warmup Iteration  10: 106,153 ms/op
Iteration   1: 105,686 ms/op
Iteration   2: 105,040 ms/op
Iteration   3: 105,470 ms/op
Iteration   4: 105,590 ms/op
Iteration   5: 105,421 ms/op
Iteration   6: 105,388 ms/op
Iteration   7: 104,964 ms/op
Iteration   8: 105,428 ms/op
Iteration   9: 105,270 ms/op
Iteration  10: 105,372 ms/op


Result "benchmarkFind":
  105,363 ±(99.9%) 0,337 ms/op [Average]
  (min, avg, max) = (104,964, 105,363, 105,686), stdev = 0,223
  CI (99.9%): [105,026, 105,700] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternSize = 32)

# Run progress: 95,40% complete, ETA 00:46:07
# Fork: 1 of 1
# Warmup Iteration   1: 115,127 ms/op
# Warmup Iteration   2: 104,878 ms/op
# Warmup Iteration   3: 105,253 ms/op
# Warmup Iteration   4: 105,665 ms/op
# Warmup Iteration   5: 106,133 ms/op
# Warmup Iteration   6: 102,915 ms/op
# Warmup Iteration   7: 91,655 ms/op
# Warmup Iteration   8: 92,189 ms/op
# Warmup Iteration   9: 92,073 ms/op
# Warmup Iteration  10: 100,388 ms/op
Iteration   1: 93,953 ms/op
Iteration   2: 91,026 ms/op
Iteration   3: 91,203 ms/op
Iteration   4: 91,668 ms/op
Iteration   5: 91,627 ms/op
Iteration   6: 91,564 ms/op
Iteration   7: 91,745 ms/op
Iteration   8: 91,779 ms/op
Iteration   9: 91,714 ms/op
Iteration  10: 91,865 ms/op


Result "benchmarkFind":
  91,814 ±(99.9%) 1,204 ms/op [Average]
  (min, avg, max) = (91,026, 91,814, 93,953), stdev = 0,796
  CI (99.9%): [90,610, 93,019] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternSize = 64)

# Run progress: 95,45% complete, ETA 00:45:39
# Fork: 1 of 1
# Warmup Iteration   1: 109,958 ms/op
# Warmup Iteration   2: 101,919 ms/op
# Warmup Iteration   3: 102,164 ms/op
# Warmup Iteration   4: 116,968 ms/op
# Warmup Iteration   5: 112,778 ms/op
# Warmup Iteration   6: 106,908 ms/op
# Warmup Iteration   7: 89,261 ms/op
# Warmup Iteration   8: 87,854 ms/op
# Warmup Iteration   9: 89,116 ms/op
# Warmup Iteration  10: 88,019 ms/op
Iteration   1: 87,857 ms/op
Iteration   2: 87,864 ms/op
Iteration   3: 87,833 ms/op
Iteration   4: 87,947 ms/op
Iteration   5: 87,710 ms/op
Iteration   6: 87,499 ms/op
Iteration   7: 87,666 ms/op
Iteration   8: 88,273 ms/op
Iteration   9: 87,807 ms/op
Iteration  10: 87,826 ms/op


Result "benchmarkFind":
  87,828 ±(99.9%) 0,304 ms/op [Average]
  (min, avg, max) = (87,499, 87,828, 88,273), stdev = 0,201
  CI (99.9%): [87,524, 88,132] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternSize = 128)

# Run progress: 95,50% complete, ETA 00:45:11
# Fork: 1 of 1
# Warmup Iteration   1: 108,399 ms/op
# Warmup Iteration   2: 101,530 ms/op
# Warmup Iteration   3: 102,297 ms/op
# Warmup Iteration   4: 102,204 ms/op
# Warmup Iteration   5: 102,543 ms/op
# Warmup Iteration   6: 97,680 ms/op
# Warmup Iteration   7: 85,526 ms/op
# Warmup Iteration   8: 86,213 ms/op
# Warmup Iteration   9: 85,693 ms/op
# Warmup Iteration  10: 85,453 ms/op
Iteration   1: 85,496 ms/op
Iteration   2: 85,413 ms/op
Iteration   3: 85,334 ms/op
Iteration   4: 85,465 ms/op
Iteration   5: 85,197 ms/op
Iteration   6: 85,589 ms/op
Iteration   7: 85,466 ms/op
Iteration   8: 85,459 ms/op
Iteration   9: 85,459 ms/op
Iteration  10: 85,261 ms/op


Result "benchmarkFind":
  85,414 ±(99.9%) 0,177 ms/op [Average]
  (min, avg, max) = (85,197, 85,414, 85,589), stdev = 0,117
  CI (99.9%): [85,237, 85,591] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternSize = 256)

# Run progress: 95,54% complete, ETA 00:44:43
# Fork: 1 of 1
# Warmup Iteration   1: 109,358 ms/op
# Warmup Iteration   2: 101,472 ms/op
# Warmup Iteration   3: 101,394 ms/op
# Warmup Iteration   4: 101,933 ms/op
# Warmup Iteration   5: 102,136 ms/op
# Warmup Iteration   6: 112,450 ms/op
# Warmup Iteration   7: 84,520 ms/op
# Warmup Iteration   8: 84,347 ms/op
# Warmup Iteration   9: 84,823 ms/op
# Warmup Iteration  10: 84,983 ms/op
Iteration   1: 84,876 ms/op
Iteration   2: 84,790 ms/op
Iteration   3: 84,683 ms/op
Iteration   4: 84,712 ms/op
Iteration   5: 84,649 ms/op
Iteration   6: 84,674 ms/op
Iteration   7: 84,667 ms/op
Iteration   8: 84,675 ms/op
Iteration   9: 84,700 ms/op
Iteration  10: 84,588 ms/op


Result "benchmarkFind":
  84,701 ±(99.9%) 0,120 ms/op [Average]
  (min, avg, max) = (84,588, 84,701, 84,876), stdev = 0,080
  CI (99.9%): [84,581, 84,822] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternSize = 2)

# Run progress: 95,59% complete, ETA 00:44:15
# Fork: 1 of 1
# Warmup Iteration   1: 1803,769 ms/op
# Warmup Iteration   2: 1560,700 ms/op
# Warmup Iteration   3: 1564,140 ms/op
# Warmup Iteration   4: 1547,162 ms/op
# Warmup Iteration   5: 1551,436 ms/op
# Warmup Iteration   6: 1537,424 ms/op
# Warmup Iteration   7: 1540,326 ms/op
# Warmup Iteration   8: 1540,776 ms/op
# Warmup Iteration   9: 1545,567 ms/op
# Warmup Iteration  10: 1546,294 ms/op
Iteration   1: 1542,930 ms/op
Iteration   2: 1543,660 ms/op
Iteration   3: 1543,013 ms/op
Iteration   4: 1544,134 ms/op
Iteration   5: 1545,219 ms/op
Iteration   6: 1545,283 ms/op
Iteration   7: 1540,945 ms/op
Iteration   8: 1547,106 ms/op
Iteration   9: 1542,999 ms/op
Iteration  10: 1544,396 ms/op


Result "benchmarkFind":
  1543,969 ±(99.9%) 2,545 ms/op [Average]
  (min, avg, max) = (1540,945, 1543,969, 1547,106), stdev = 1,684
  CI (99.9%): [1541,423, 1546,514] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternSize = 4)

# Run progress: 95,63% complete, ETA 00:43:48
# Fork: 1 of 1
# Warmup Iteration   1: 10198,105 ms/op
# Warmup Iteration   2: 9675,355 ms/op
# Warmup Iteration   3: 9661,190 ms/op
# Warmup Iteration   4: 9662,776 ms/op
# Warmup Iteration   5: 9667,908 ms/op
# Warmup Iteration   6: 9658,039 ms/op
# Warmup Iteration   7: 9669,251 ms/op
# Warmup Iteration   8: 9769,162 ms/op
# Warmup Iteration   9: 9655,309 ms/op
# Warmup Iteration  10: 8191,398 ms/op
Iteration   1: 8227,942 ms/op
Iteration   2: 8205,087 ms/op
Iteration   3: 8195,218 ms/op
Iteration   4: 8187,035 ms/op
Iteration   5: 8287,706 ms/op
Iteration   6: 8174,905 ms/op
Iteration   7: 8175,732 ms/op
Iteration   8: 8202,262 ms/op
Iteration   9: 8194,575 ms/op
Iteration  10: 8202,769 ms/op


Result "benchmarkFind":
  8205,323 ±(99.9%) 49,550 ms/op [Average]
  (min, avg, max) = (8174,905, 8205,323, 8287,706), stdev = 32,774
  CI (99.9%): [8155,773, 8254,873] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternSize = 8)

# Run progress: 95,68% complete, ETA 00:43:27
# Fork: 1 of 1
# Warmup Iteration   1: 1591,284 ms/op
# Warmup Iteration   2: 1408,746 ms/op
# Warmup Iteration   3: 1361,661 ms/op
# Warmup Iteration   4: 1357,242 ms/op
# Warmup Iteration   5: 1356,222 ms/op
# Warmup Iteration   6: 1480,682 ms/op
# Warmup Iteration   7: 1354,870 ms/op
# Warmup Iteration   8: 1360,002 ms/op
# Warmup Iteration   9: 1373,959 ms/op
# Warmup Iteration  10: 1352,168 ms/op
Iteration   1: 1356,152 ms/op
Iteration   2: 1361,068 ms/op
Iteration   3: 1364,905 ms/op
Iteration   4: 1354,270 ms/op
Iteration   5: 1354,879 ms/op
Iteration   6: 1356,646 ms/op
Iteration   7: 1354,448 ms/op
Iteration   8: 1357,956 ms/op
Iteration   9: 1352,685 ms/op
Iteration  10: 1357,591 ms/op


Result "benchmarkFind":
  1357,060 ±(99.9%) 5,479 ms/op [Average]
  (min, avg, max) = (1352,685, 1357,060, 1364,905), stdev = 3,624
  CI (99.9%): [1351,581, 1362,539] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternSize = 16)

# Run progress: 95,73% complete, ETA 00:42:59
# Fork: 1 of 1
# Warmup Iteration   1: 1363,949 ms/op
# Warmup Iteration   2: 1083,891 ms/op
# Warmup Iteration   3: 1029,541 ms/op
# Warmup Iteration   4: 1022,803 ms/op
# Warmup Iteration   5: 1022,238 ms/op
# Warmup Iteration   6: 1029,991 ms/op
# Warmup Iteration   7: 1021,947 ms/op
# Warmup Iteration   8: 1021,982 ms/op
# Warmup Iteration   9: 1021,117 ms/op
# Warmup Iteration  10: 1025,808 ms/op
Iteration   1: 1022,424 ms/op
Iteration   2: 1037,501 ms/op
Iteration   3: 1022,896 ms/op
Iteration   4: 1023,339 ms/op
Iteration   5: 1028,134 ms/op
Iteration   6: 1024,734 ms/op
Iteration   7: 1025,106 ms/op
Iteration   8: 1023,108 ms/op
Iteration   9: 1023,255 ms/op
Iteration  10: 1025,016 ms/op


Result "benchmarkFind":
  1025,551 ±(99.9%) 6,828 ms/op [Average]
  (min, avg, max) = (1022,424, 1025,551, 1037,501), stdev = 4,516
  CI (99.9%): [1018,723, 1032,379] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternSize = 32)

# Run progress: 95,77% complete, ETA 00:42:31
# Fork: 1 of 1
# Warmup Iteration   1: 1227,146 ms/op
# Warmup Iteration   2: 945,500 ms/op
# Warmup Iteration   3: 911,226 ms/op
# Warmup Iteration   4: 911,119 ms/op
# Warmup Iteration   5: 911,391 ms/op
# Warmup Iteration   6: 909,267 ms/op
# Warmup Iteration   7: 959,640 ms/op
# Warmup Iteration   8: 930,177 ms/op
# Warmup Iteration   9: 906,779 ms/op
# Warmup Iteration  10: 913,469 ms/op
Iteration   1: 910,793 ms/op
Iteration   2: 916,515 ms/op
Iteration   3: 912,087 ms/op
Iteration   4: 911,053 ms/op
Iteration   5: 908,667 ms/op
Iteration   6: 909,165 ms/op
Iteration   7: 908,911 ms/op
Iteration   8: 919,148 ms/op
Iteration   9: 910,725 ms/op
Iteration  10: 910,653 ms/op


Result "benchmarkFind":
  911,772 ±(99.9%) 5,175 ms/op [Average]
  (min, avg, max) = (908,667, 911,772, 919,148), stdev = 3,423
  CI (99.9%): [906,597, 916,947] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternSize = 64)

# Run progress: 95,82% complete, ETA 00:42:04
# Fork: 1 of 1
# Warmup Iteration   1: 1126,716 ms/op
# Warmup Iteration   2: 914,123 ms/op
# Warmup Iteration   3: 876,546 ms/op
# Warmup Iteration   4: 875,338 ms/op
# Warmup Iteration   5: 877,607 ms/op
# Warmup Iteration   6: 878,369 ms/op
# Warmup Iteration   7: 892,308 ms/op
# Warmup Iteration   8: 883,437 ms/op
# Warmup Iteration   9: 877,668 ms/op
# Warmup Iteration  10: 884,396 ms/op
Iteration   1: 883,297 ms/op
Iteration   2: 878,514 ms/op
Iteration   3: 883,027 ms/op
Iteration   4: 880,275 ms/op
Iteration   5: 880,284 ms/op
Iteration   6: 885,213 ms/op
Iteration   7: 885,195 ms/op
Iteration   8: 881,838 ms/op
Iteration   9: 939,878 ms/op
Iteration  10: 882,883 ms/op


Result "benchmarkFind":
  888,040 ±(99.9%) 27,727 ms/op [Average]
  (min, avg, max) = (878,514, 888,040, 939,878), stdev = 18,340
  CI (99.9%): [860,313, 915,767] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternSize = 128)

# Run progress: 95,86% complete, ETA 00:41:37
# Fork: 1 of 1
# Warmup Iteration   1: 1129,831 ms/op
# Warmup Iteration   2: 916,281 ms/op
# Warmup Iteration   3: 892,109 ms/op
# Warmup Iteration   4: 877,747 ms/op
# Warmup Iteration   5: 876,358 ms/op
# Warmup Iteration   6: 881,989 ms/op
# Warmup Iteration   7: 877,359 ms/op
# Warmup Iteration   8: 877,225 ms/op
# Warmup Iteration   9: 876,780 ms/op
# Warmup Iteration  10: 876,318 ms/op
Iteration   1: 878,865 ms/op
Iteration   2: 873,734 ms/op
Iteration   3: 879,587 ms/op
Iteration   4: 879,557 ms/op
Iteration   5: 872,925 ms/op
Iteration   6: 875,629 ms/op
Iteration   7: 872,990 ms/op
Iteration   8: 871,464 ms/op
Iteration   9: 876,068 ms/op
Iteration  10: 874,512 ms/op


Result "benchmarkFind":
  875,533 ±(99.9%) 4,454 ms/op [Average]
  (min, avg, max) = (871,464, 875,533, 879,587), stdev = 2,946
  CI (99.9%): [871,079, 879,988] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternSize = 256)

# Run progress: 95,91% complete, ETA 00:41:10
# Fork: 1 of 1
# Warmup Iteration   1: 1252,475 ms/op
# Warmup Iteration   2: 915,836 ms/op
# Warmup Iteration   3: 871,245 ms/op
# Warmup Iteration   4: 869,747 ms/op
# Warmup Iteration   5: 869,472 ms/op
# Warmup Iteration   6: 868,722 ms/op
# Warmup Iteration   7: 870,217 ms/op
# Warmup Iteration   8: 868,959 ms/op
# Warmup Iteration   9: 883,586 ms/op
# Warmup Iteration  10: 1006,089 ms/op
Iteration   1: 874,499 ms/op
Iteration   2: 873,385 ms/op
Iteration   3: 873,289 ms/op
Iteration   4: 873,569 ms/op
Iteration   5: 874,270 ms/op
Iteration   6: 874,613 ms/op
Iteration   7: 872,693 ms/op
Iteration   8: 872,354 ms/op
Iteration   9: 873,652 ms/op
Iteration  10: 873,798 ms/op


Result "benchmarkFind":
  873,612 ±(99.9%) 1,109 ms/op [Average]
  (min, avg, max) = (872,354, 873,612, 874,613), stdev = 0,734
  CI (99.9%): [872,503, 874,721] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternSize = 2)

# Run progress: 95,96% complete, ETA 00:40:42
# Fork: 1 of 1
# Warmup Iteration   1: 8830,369 ms/op
# Warmup Iteration   2: 7520,144 ms/op
# Warmup Iteration   3: 7449,122 ms/op
# Warmup Iteration   4: 7429,737 ms/op
# Warmup Iteration   5: 7451,784 ms/op
# Warmup Iteration   6: 7649,735 ms/op
# Warmup Iteration   7: 7436,845 ms/op
# Warmup Iteration   8: 7419,674 ms/op
# Warmup Iteration   9: 7416,654 ms/op
# Warmup Iteration  10: 7438,978 ms/op
Iteration   1: 7436,460 ms/op
Iteration   2: 7432,185 ms/op
Iteration   3: 7424,879 ms/op
Iteration   4: 7560,025 ms/op
Iteration   5: 7422,205 ms/op
Iteration   6: 7941,908 ms/op
Iteration   7: 7427,693 ms/op
Iteration   8: 7442,252 ms/op
Iteration   9: 7449,626 ms/op
Iteration  10: 7404,269 ms/op


Result "benchmarkFind":
  7494,150 ±(99.9%) 246,443 ms/op [Average]
  (min, avg, max) = (7404,269, 7494,150, 7941,908), stdev = 163,007
  CI (99.9%): [7247,707, 7740,593] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternSize = 4)

# Run progress: 96,00% complete, ETA 00:40:20
# Fork: 1 of 1
# Warmup Iteration   1: 246,238 ms/op
# Warmup Iteration   2: 236,399 ms/op
# Warmup Iteration   3: 233,378 ms/op
# Warmup Iteration   4: 234,719 ms/op
# Warmup Iteration   5: 233,607 ms/op
# Warmup Iteration   6: 234,321 ms/op
# Warmup Iteration   7: 235,320 ms/op
# Warmup Iteration   8: 259,480 ms/op
# Warmup Iteration   9: 234,217 ms/op
# Warmup Iteration  10: 235,116 ms/op
Iteration   1: 229,674 ms/op
Iteration   2: 221,562 ms/op
Iteration   3: 221,067 ms/op
Iteration   4: 221,846 ms/op
Iteration   5: 221,490 ms/op
Iteration   6: 222,996 ms/op
Iteration   7: 223,884 ms/op
Iteration   8: 223,169 ms/op
Iteration   9: 223,623 ms/op
Iteration  10: 223,061 ms/op


Result "benchmarkFind":
  223,237 ±(99.9%) 3,724 ms/op [Average]
  (min, avg, max) = (221,067, 223,237, 229,674), stdev = 2,463
  CI (99.9%): [219,514, 226,961] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternSize = 8)

# Run progress: 96,05% complete, ETA 00:39:52
# Fork: 1 of 1
# Warmup Iteration   1: 149,709 ms/op
# Warmup Iteration   2: 139,859 ms/op
# Warmup Iteration   3: 140,394 ms/op
# Warmup Iteration   4: 139,272 ms/op
# Warmup Iteration   5: 141,437 ms/op
# Warmup Iteration   6: 139,884 ms/op
# Warmup Iteration   7: 140,434 ms/op
# Warmup Iteration   8: 131,628 ms/op
# Warmup Iteration   9: 128,047 ms/op
# Warmup Iteration  10: 128,018 ms/op
Iteration   1: 128,391 ms/op
Iteration   2: 127,964 ms/op
Iteration   3: 127,778 ms/op
Iteration   4: 128,315 ms/op
Iteration   5: 127,987 ms/op
Iteration   6: 127,908 ms/op
Iteration   7: 127,995 ms/op
Iteration   8: 127,719 ms/op
Iteration   9: 127,847 ms/op
Iteration  10: 127,912 ms/op


Result "benchmarkFind":
  127,982 ±(99.9%) 0,326 ms/op [Average]
  (min, avg, max) = (127,719, 127,982, 128,391), stdev = 0,216
  CI (99.9%): [127,656, 128,308] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternSize = 16)

# Run progress: 96,09% complete, ETA 00:39:24
# Fork: 1 of 1
# Warmup Iteration   1: 110,063 ms/op
# Warmup Iteration   2: 104,327 ms/op
# Warmup Iteration   3: 102,154 ms/op
# Warmup Iteration   4: 102,377 ms/op
# Warmup Iteration   5: 102,482 ms/op
# Warmup Iteration   6: 96,219 ms/op
# Warmup Iteration   7: 86,830 ms/op
# Warmup Iteration   8: 87,654 ms/op
# Warmup Iteration   9: 86,204 ms/op
# Warmup Iteration  10: 86,385 ms/op
Iteration   1: 86,188 ms/op
Iteration   2: 86,089 ms/op
Iteration   3: 86,244 ms/op
Iteration   4: 86,020 ms/op
Iteration   5: 86,108 ms/op
Iteration   6: 86,064 ms/op
Iteration   7: 86,123 ms/op
Iteration   8: 86,180 ms/op
Iteration   9: 86,590 ms/op
Iteration  10: 86,316 ms/op


Result "benchmarkFind":
  86,192 ±(99.9%) 0,249 ms/op [Average]
  (min, avg, max) = (86,020, 86,192, 86,590), stdev = 0,165
  CI (99.9%): [85,943, 86,442] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternSize = 32)

# Run progress: 96,14% complete, ETA 00:38:56
# Fork: 1 of 1
# Warmup Iteration   1: 94,817 ms/op
# Warmup Iteration   2: 97,385 ms/op
# Warmup Iteration   3: 87,617 ms/op
# Warmup Iteration   4: 87,777 ms/op
# Warmup Iteration   5: 86,601 ms/op
# Warmup Iteration   6: 72,131 ms/op
# Warmup Iteration   7: 73,118 ms/op
# Warmup Iteration   8: 72,567 ms/op
# Warmup Iteration   9: 72,630 ms/op
# Warmup Iteration  10: 72,868 ms/op
Iteration   1: 72,745 ms/op
Iteration   2: 72,752 ms/op
Iteration   3: 72,673 ms/op
Iteration   4: 72,662 ms/op
Iteration   5: 72,920 ms/op
Iteration   6: 72,895 ms/op
Iteration   7: 73,145 ms/op
Iteration   8: 73,225 ms/op
Iteration   9: 73,290 ms/op
Iteration  10: 73,356 ms/op


Result "benchmarkFind":
  72,966 ±(99.9%) 0,402 ms/op [Average]
  (min, avg, max) = (72,662, 72,966, 73,356), stdev = 0,266
  CI (99.9%): [72,564, 73,368] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternSize = 64)

# Run progress: 96,19% complete, ETA 00:38:27
# Fork: 1 of 1
# Warmup Iteration   1: 89,447 ms/op
# Warmup Iteration   2: 82,574 ms/op
# Warmup Iteration   3: 82,281 ms/op
# Warmup Iteration   4: 82,489 ms/op
# Warmup Iteration   5: 74,214 ms/op
# Warmup Iteration   6: 66,879 ms/op
# Warmup Iteration   7: 66,930 ms/op
# Warmup Iteration   8: 66,623 ms/op
# Warmup Iteration   9: 66,545 ms/op
# Warmup Iteration  10: 66,892 ms/op
Iteration   1: 66,421 ms/op
Iteration   2: 66,149 ms/op
Iteration   3: 66,186 ms/op
Iteration   4: 66,134 ms/op
Iteration   5: 66,151 ms/op
Iteration   6: 66,232 ms/op
Iteration   7: 66,330 ms/op
Iteration   8: 66,202 ms/op
Iteration   9: 66,474 ms/op
Iteration  10: 66,184 ms/op


Result "benchmarkFind":
  66,246 ±(99.9%) 0,182 ms/op [Average]
  (min, avg, max) = (66,134, 66,246, 66,474), stdev = 0,120
  CI (99.9%): [66,065, 66,428] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternSize = 128)

# Run progress: 96,23% complete, ETA 00:37:59
# Fork: 1 of 1
# Warmup Iteration   1: 90,010 ms/op
# Warmup Iteration   2: 83,664 ms/op
# Warmup Iteration   3: 84,244 ms/op
# Warmup Iteration   4: 84,362 ms/op
# Warmup Iteration   5: 80,904 ms/op
# Warmup Iteration   6: 69,413 ms/op
# Warmup Iteration   7: 69,760 ms/op
# Warmup Iteration   8: 69,612 ms/op
# Warmup Iteration   9: 69,719 ms/op
# Warmup Iteration  10: 69,051 ms/op
Iteration   1: 69,220 ms/op
Iteration   2: 69,425 ms/op
Iteration   3: 69,092 ms/op
Iteration   4: 69,317 ms/op
Iteration   5: 69,188 ms/op
Iteration   6: 68,995 ms/op
Iteration   7: 69,375 ms/op
Iteration   8: 77,116 ms/op
Iteration   9: 68,307 ms/op
Iteration  10: 68,390 ms/op


Result "benchmarkFind":
  69,843 ±(99.9%) 3,908 ms/op [Average]
  (min, avg, max) = (68,307, 69,843, 77,116), stdev = 2,585
  CI (99.9%): [65,934, 73,751] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternSize = 256)

# Run progress: 96,28% complete, ETA 00:37:31
# Fork: 1 of 1
# Warmup Iteration   1: 95,377 ms/op
# Warmup Iteration   2: 88,030 ms/op
# Warmup Iteration   3: 88,086 ms/op
# Warmup Iteration   4: 88,700 ms/op
# Warmup Iteration   5: 86,069 ms/op
# Warmup Iteration   6: 70,846 ms/op
# Warmup Iteration   7: 70,737 ms/op
# Warmup Iteration   8: 70,168 ms/op
# Warmup Iteration   9: 70,511 ms/op
# Warmup Iteration  10: 70,276 ms/op
Iteration   1: 70,252 ms/op
Iteration   2: 70,074 ms/op
Iteration   3: 69,937 ms/op
Iteration   4: 70,134 ms/op
Iteration   5: 70,059 ms/op
Iteration   6: 70,315 ms/op
Iteration   7: 69,579 ms/op
Iteration   8: 70,201 ms/op
Iteration   9: 69,996 ms/op
Iteration  10: 70,087 ms/op


Result "benchmarkFind":
  70,063 ±(99.9%) 0,310 ms/op [Average]
  (min, avg, max) = (69,579, 70,063, 70,315), stdev = 0,205
  CI (99.9%): [69,753, 70,373] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternSize = 2)

# Run progress: 96,32% complete, ETA 00:37:03
# Fork: 1 of 1
# Warmup Iteration   1: 44549,305 ms/op
# Warmup Iteration   2: 36647,819 ms/op
# Warmup Iteration   3: 36553,372 ms/op
# Warmup Iteration   4: 36621,495 ms/op
# Warmup Iteration   5: 36591,898 ms/op
# Warmup Iteration   6: 36584,624 ms/op
# Warmup Iteration   7: 36494,467 ms/op
# Warmup Iteration   8: 36631,740 ms/op
# Warmup Iteration   9: 36636,640 ms/op
# Warmup Iteration  10: 36459,998 ms/op
Iteration   1: 36600,346 ms/op
Iteration   2: 36643,320 ms/op
Iteration   3: 36652,958 ms/op
Iteration   4: 36638,219 ms/op
Iteration   5: 36540,117 ms/op
Iteration   6: 36636,370 ms/op
Iteration   7: 36492,674 ms/op
Iteration   8: 36674,568 ms/op
Iteration   9: 36648,926 ms/op
Iteration  10: 36490,885 ms/op


Result "benchmarkFind":
  36601,838 ±(99.9%) 103,765 ms/op [Average]
  (min, avg, max) = (36490,885, 36601,838, 36674,568), stdev = 68,634
  CI (99.9%): [36498,073, 36705,604] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternSize = 4)

# Run progress: 96,37% complete, ETA 00:37:02
# Fork: 1 of 1
# Warmup Iteration   1: 1103,568 ms/op
# Warmup Iteration   2: 1064,460 ms/op
# Warmup Iteration   3: 1020,681 ms/op
# Warmup Iteration   4: 1023,748 ms/op
# Warmup Iteration   5: 1021,771 ms/op
# Warmup Iteration   6: 1021,649 ms/op
# Warmup Iteration   7: 1020,133 ms/op
# Warmup Iteration   8: 1020,873 ms/op
# Warmup Iteration   9: 1020,159 ms/op
# Warmup Iteration  10: 1022,356 ms/op
Iteration   1: 1035,585 ms/op
Iteration   2: 1144,648 ms/op
Iteration   3: 1015,763 ms/op
Iteration   4: 1023,232 ms/op
Iteration   5: 1020,872 ms/op
Iteration   6: 1022,722 ms/op
Iteration   7: 1017,130 ms/op
Iteration   8: 1017,522 ms/op
Iteration   9: 1019,135 ms/op
Iteration  10: 1019,534 ms/op


Result "benchmarkFind":
  1033,614 ±(99.9%) 59,582 ms/op [Average]
  (min, avg, max) = (1015,763, 1033,614, 1144,648), stdev = 39,410
  CI (99.9%): [974,032, 1093,197] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternSize = 8)

# Run progress: 96,42% complete, ETA 00:36:34
# Fork: 1 of 1
# Warmup Iteration   1: 681,710 ms/op
# Warmup Iteration   2: 633,057 ms/op
# Warmup Iteration   3: 625,835 ms/op
# Warmup Iteration   4: 624,110 ms/op
# Warmup Iteration   5: 623,205 ms/op
# Warmup Iteration   6: 626,927 ms/op
# Warmup Iteration   7: 625,254 ms/op
# Warmup Iteration   8: 628,720 ms/op
# Warmup Iteration   9: 624,516 ms/op
# Warmup Iteration  10: 626,204 ms/op
Iteration   1: 624,710 ms/op
Iteration   2: 625,045 ms/op
Iteration   3: 625,741 ms/op
Iteration   4: 626,184 ms/op
Iteration   5: 625,931 ms/op
Iteration   6: 625,109 ms/op
Iteration   7: 626,709 ms/op
Iteration   8: 626,306 ms/op
Iteration   9: 624,136 ms/op
Iteration  10: 624,203 ms/op


Result "benchmarkFind":
  625,407 ±(99.9%) 1,358 ms/op [Average]
  (min, avg, max) = (624,136, 625,407, 626,709), stdev = 0,898
  CI (99.9%): [624,049, 626,766] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternSize = 16)

# Run progress: 96,46% complete, ETA 00:36:06
# Fork: 1 of 1
# Warmup Iteration   1: 521,236 ms/op
# Warmup Iteration   2: 470,597 ms/op
# Warmup Iteration   3: 464,242 ms/op
# Warmup Iteration   4: 462,638 ms/op
# Warmup Iteration   5: 464,087 ms/op
# Warmup Iteration   6: 462,192 ms/op
# Warmup Iteration   7: 464,065 ms/op
# Warmup Iteration   8: 462,308 ms/op
# Warmup Iteration   9: 463,306 ms/op
# Warmup Iteration  10: 466,313 ms/op
Iteration   1: 464,278 ms/op
Iteration   2: 462,569 ms/op
Iteration   3: 464,725 ms/op
Iteration   4: 465,123 ms/op
Iteration   5: 463,343 ms/op
Iteration   6: 466,206 ms/op
Iteration   7: 516,443 ms/op
Iteration   8: 462,742 ms/op
Iteration   9: 462,604 ms/op
Iteration  10: 419,724 ms/op


Result "benchmarkFind":
  464,776 ±(99.9%) 34,613 ms/op [Average]
  (min, avg, max) = (419,724, 464,776, 516,443), stdev = 22,894
  CI (99.9%): [430,163, 499,389] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternSize = 32)

# Run progress: 96,51% complete, ETA 00:35:38
# Fork: 1 of 1
# Warmup Iteration   1: 462,398 ms/op
# Warmup Iteration   2: 418,040 ms/op
# Warmup Iteration   3: 419,896 ms/op
# Warmup Iteration   4: 418,410 ms/op
# Warmup Iteration   5: 416,042 ms/op
# Warmup Iteration   6: 419,414 ms/op
# Warmup Iteration   7: 417,641 ms/op
# Warmup Iteration   8: 417,186 ms/op
# Warmup Iteration   9: 418,061 ms/op
# Warmup Iteration  10: 418,247 ms/op
Iteration   1: 419,947 ms/op
Iteration   2: 417,247 ms/op
Iteration   3: 419,055 ms/op
Iteration   4: 417,614 ms/op
Iteration   5: 418,722 ms/op
Iteration   6: 417,779 ms/op
Iteration   7: 419,448 ms/op
Iteration   8: 419,899 ms/op
Iteration   9: 410,641 ms/op
Iteration  10: 300,386 ms/op


Result "benchmarkFind":
  406,074 ±(99.9%) 56,291 ms/op [Average]
  (min, avg, max) = (300,386, 406,074, 419,947), stdev = 37,233
  CI (99.9%): [349,783, 462,365] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternSize = 64)

# Run progress: 96,55% complete, ETA 00:35:10
# Fork: 1 of 1
# Warmup Iteration   1: 447,069 ms/op
# Warmup Iteration   2: 406,437 ms/op
# Warmup Iteration   3: 406,015 ms/op
# Warmup Iteration   4: 403,456 ms/op
# Warmup Iteration   5: 407,067 ms/op
# Warmup Iteration   6: 405,914 ms/op
# Warmup Iteration   7: 404,893 ms/op
# Warmup Iteration   8: 405,355 ms/op
# Warmup Iteration   9: 403,690 ms/op
# Warmup Iteration  10: 406,809 ms/op
Iteration   1: 403,485 ms/op
Iteration   2: 405,108 ms/op
Iteration   3: 406,022 ms/op
Iteration   4: 407,131 ms/op
Iteration   5: 405,729 ms/op
Iteration   6: 403,289 ms/op
Iteration   7: 405,320 ms/op
Iteration   8: 405,606 ms/op
Iteration   9: 405,651 ms/op
Iteration  10: 299,488 ms/op


Result "benchmarkFind":
  394,683 ±(99.9%) 50,598 ms/op [Average]
  (min, avg, max) = (299,488, 394,683, 407,131), stdev = 33,467
  CI (99.9%): [344,085, 445,281] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternSize = 128)

# Run progress: 96,60% complete, ETA 00:34:41
# Fork: 1 of 1
# Warmup Iteration   1: 476,463 ms/op
# Warmup Iteration   2: 436,668 ms/op
# Warmup Iteration   3: 437,861 ms/op
# Warmup Iteration   4: 434,689 ms/op
# Warmup Iteration   5: 434,819 ms/op
# Warmup Iteration   6: 434,482 ms/op
# Warmup Iteration   7: 437,042 ms/op
# Warmup Iteration   8: 439,601 ms/op
# Warmup Iteration   9: 436,891 ms/op
# Warmup Iteration  10: 437,840 ms/op
Iteration   1: 436,796 ms/op
Iteration   2: 439,654 ms/op
Iteration   3: 438,289 ms/op
Iteration   4: 440,246 ms/op
Iteration   5: 451,780 ms/op
Iteration   6: 441,441 ms/op
Iteration   7: 439,371 ms/op
Iteration   8: 439,808 ms/op
Iteration   9: 439,055 ms/op
Iteration  10: 337,533 ms/op


Result "benchmarkFind":
  430,397 ±(99.9%) 49,718 ms/op [Average]
  (min, avg, max) = (337,533, 430,397, 451,780), stdev = 32,885
  CI (99.9%): [380,680, 480,115] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternSize = 256)

# Run progress: 96,65% complete, ETA 00:34:13
# Fork: 1 of 1
# Warmup Iteration   1: 478,254 ms/op
# Warmup Iteration   2: 433,220 ms/op
# Warmup Iteration   3: 435,494 ms/op
# Warmup Iteration   4: 432,713 ms/op
# Warmup Iteration   5: 436,001 ms/op
# Warmup Iteration   6: 433,798 ms/op
# Warmup Iteration   7: 436,057 ms/op
# Warmup Iteration   8: 435,403 ms/op
# Warmup Iteration   9: 434,584 ms/op
# Warmup Iteration  10: 433,548 ms/op
Iteration   1: 435,026 ms/op
Iteration   2: 436,216 ms/op
Iteration   3: 435,898 ms/op
Iteration   4: 436,202 ms/op
Iteration   5: 434,611 ms/op
Iteration   6: 435,752 ms/op
Iteration   7: 442,656 ms/op
Iteration   8: 434,393 ms/op
Iteration   9: 434,586 ms/op
Iteration  10: 333,103 ms/op


Result "benchmarkFind":
  425,844 ±(99.9%) 49,399 ms/op [Average]
  (min, avg, max) = (333,103, 425,844, 442,656), stdev = 32,674
  CI (99.9%): [376,446, 475,243] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternSize = 2)

# Run progress: 96,69% complete, ETA 00:33:45
# Fork: 1 of 1
# Warmup Iteration   1: 163995,008 ms/op
# Warmup Iteration   2: 146409,470 ms/op
# Warmup Iteration   3: 143008,668 ms/op
# Warmup Iteration   4: 143098,585 ms/op
# Warmup Iteration   5: 143279,947 ms/op
# Warmup Iteration   6: 143677,782 ms/op
# Warmup Iteration   7: 143077,653 ms/op
# Warmup Iteration   8: 142990,000 ms/op
# Warmup Iteration   9: 142993,748 ms/op
# Warmup Iteration  10: 143303,055 ms/op
Iteration   1: 143257,876 ms/op
Iteration   2: 143435,379 ms/op
Iteration   3: 145004,820 ms/op
Iteration   4: 144565,156 ms/op
Iteration   5: 143768,743 ms/op
Iteration   6: 143485,913 ms/op
Iteration   7: 143877,001 ms/op
Iteration   8: 143943,345 ms/op
Iteration   9: 143437,483 ms/op
Iteration  10: 143481,536 ms/op


Result "benchmarkFind":
  143825,725 ±(99.9%) 845,714 ms/op [Average]
  (min, avg, max) = (143257,876, 143825,725, 145004,820), stdev = 559,387
  CI (99.9%): [142980,012, 144671,439] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternSize = 4)

# Run progress: 96,74% complete, ETA 00:34:54
# Fork: 1 of 1
# Warmup Iteration   1: 4342,542 ms/op
# Warmup Iteration   2: 3612,039 ms/op
# Warmup Iteration   3: 3584,954 ms/op
# Warmup Iteration   4: 3571,964 ms/op
# Warmup Iteration   5: 3567,732 ms/op
# Warmup Iteration   6: 3564,287 ms/op
# Warmup Iteration   7: 3568,052 ms/op
# Warmup Iteration   8: 3563,924 ms/op
# Warmup Iteration   9: 3571,229 ms/op
# Warmup Iteration  10: 3569,788 ms/op
Iteration   1: 3560,647 ms/op
Iteration   2: 3655,755 ms/op
Iteration   3: 3564,215 ms/op
Iteration   4: 3557,909 ms/op
Iteration   5: 3553,607 ms/op
Iteration   6: 3552,714 ms/op
Iteration   7: 3561,068 ms/op
Iteration   8: 3553,114 ms/op
Iteration   9: 3553,916 ms/op
Iteration  10: 3561,320 ms/op


Result "benchmarkFind":
  3567,427 ±(99.9%) 47,332 ms/op [Average]
  (min, avg, max) = (3552,714, 3567,427, 3655,755), stdev = 31,307
  CI (99.9%): [3520,095, 3614,759] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternSize = 8)

# Run progress: 96,78% complete, ETA 00:34:26
# Fork: 1 of 1
# Warmup Iteration   1: 2769,285 ms/op
# Warmup Iteration   2: 2233,924 ms/op
# Warmup Iteration   3: 2219,759 ms/op
# Warmup Iteration   4: 2224,241 ms/op
# Warmup Iteration   5: 2258,890 ms/op
# Warmup Iteration   6: 2373,469 ms/op
# Warmup Iteration   7: 2234,753 ms/op
# Warmup Iteration   8: 2234,885 ms/op
# Warmup Iteration   9: 2251,100 ms/op
# Warmup Iteration  10: 2398,740 ms/op
Iteration   1: 2234,249 ms/op
Iteration   2: 2224,925 ms/op
Iteration   3: 2229,379 ms/op
Iteration   4: 2229,604 ms/op
Iteration   5: 2225,543 ms/op
Iteration   6: 2222,531 ms/op
Iteration   7: 2224,552 ms/op
Iteration   8: 2222,700 ms/op
Iteration   9: 2226,913 ms/op
Iteration  10: 2221,645 ms/op


Result "benchmarkFind":
  2226,204 ±(99.9%) 5,925 ms/op [Average]
  (min, avg, max) = (2221,645, 2226,204, 2234,249), stdev = 3,919
  CI (99.9%): [2220,279, 2232,129] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternSize = 16)

# Run progress: 96,83% complete, ETA 00:33:57
# Fork: 1 of 1
# Warmup Iteration   1: 2209,156 ms/op
# Warmup Iteration   2: 1647,836 ms/op
# Warmup Iteration   3: 1642,031 ms/op
# Warmup Iteration   4: 1642,949 ms/op
# Warmup Iteration   5: 1642,980 ms/op
# Warmup Iteration   6: 1640,314 ms/op
# Warmup Iteration   7: 1641,774 ms/op
# Warmup Iteration   8: 1641,112 ms/op
# Warmup Iteration   9: 1641,590 ms/op
# Warmup Iteration  10: 1639,904 ms/op
Iteration   1: 1639,754 ms/op
Iteration   2: 1643,504 ms/op
Iteration   3: 1643,073 ms/op
Iteration   4: 1643,143 ms/op
Iteration   5: 1661,634 ms/op
Iteration   6: 1642,595 ms/op
Iteration   7: 1644,472 ms/op
Iteration   8: 1645,078 ms/op
Iteration   9: 1783,463 ms/op
Iteration  10: 1639,722 ms/op


Result "benchmarkFind":
  1658,644 ±(99.9%) 66,967 ms/op [Average]
  (min, avg, max) = (1639,722, 1658,644, 1783,463), stdev = 44,294
  CI (99.9%): [1591,677, 1725,610] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternSize = 32)

# Run progress: 96,88% complete, ETA 00:33:28
# Fork: 1 of 1
# Warmup Iteration   1: 2021,796 ms/op
# Warmup Iteration   2: 1461,527 ms/op
# Warmup Iteration   3: 1454,737 ms/op
# Warmup Iteration   4: 1453,776 ms/op
# Warmup Iteration   5: 1452,550 ms/op
# Warmup Iteration   6: 1448,317 ms/op
# Warmup Iteration   7: 1454,801 ms/op
# Warmup Iteration   8: 1453,778 ms/op
# Warmup Iteration   9: 1451,989 ms/op
# Warmup Iteration  10: 1450,714 ms/op
Iteration   1: 1447,785 ms/op
Iteration   2: 1453,837 ms/op
Iteration   3: 1459,025 ms/op
Iteration   4: 1455,236 ms/op
Iteration   5: 1587,510 ms/op
Iteration   6: 1674,314 ms/op
Iteration   7: 1466,692 ms/op
Iteration   8: 1452,752 ms/op
Iteration   9: 1512,961 ms/op
Iteration  10: 1623,569 ms/op


Result "benchmarkFind":
  1513,368 ±(99.9%) 127,067 ms/op [Average]
  (min, avg, max) = (1447,785, 1513,368, 1674,314), stdev = 84,047
  CI (99.9%): [1386,301, 1640,436] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternSize = 64)

# Run progress: 96,92% complete, ETA 00:32:59
# Fork: 1 of 1
# Warmup Iteration   1: 1972,932 ms/op
# Warmup Iteration   2: 1432,718 ms/op
# Warmup Iteration   3: 1424,031 ms/op
# Warmup Iteration   4: 1422,153 ms/op
# Warmup Iteration   5: 1420,749 ms/op
# Warmup Iteration   6: 1423,952 ms/op
# Warmup Iteration   7: 1418,592 ms/op
# Warmup Iteration   8: 1420,841 ms/op
# Warmup Iteration   9: 1422,788 ms/op
# Warmup Iteration  10: 1561,989 ms/op
Iteration   1: 1424,885 ms/op
Iteration   2: 1434,199 ms/op
Iteration   3: 1422,757 ms/op
Iteration   4: 1426,348 ms/op
Iteration   5: 1423,337 ms/op
Iteration   6: 1422,398 ms/op
Iteration   7: 1423,768 ms/op
Iteration   8: 1434,735 ms/op
Iteration   9: 1423,962 ms/op
Iteration  10: 1424,476 ms/op


Result "benchmarkFind":
  1426,087 ±(99.9%) 6,889 ms/op [Average]
  (min, avg, max) = (1422,398, 1426,087, 1434,735), stdev = 4,557
  CI (99.9%): [1419,198, 1432,975] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternSize = 128)

# Run progress: 96,97% complete, ETA 00:32:29
# Fork: 1 of 1
# Warmup Iteration   1: 2057,458 ms/op
# Warmup Iteration   2: 1514,434 ms/op
# Warmup Iteration   3: 1507,864 ms/op
# Warmup Iteration   4: 1505,884 ms/op
# Warmup Iteration   5: 1505,872 ms/op
# Warmup Iteration   6: 1505,273 ms/op
# Warmup Iteration   7: 1502,060 ms/op
# Warmup Iteration   8: 1505,413 ms/op
# Warmup Iteration   9: 1505,146 ms/op
# Warmup Iteration  10: 1504,485 ms/op
Iteration   1: 1504,680 ms/op
Iteration   2: 1514,906 ms/op
Iteration   3: 1510,607 ms/op
Iteration   4: 1507,248 ms/op
Iteration   5: 1509,230 ms/op
Iteration   6: 1502,652 ms/op
Iteration   7: 1505,221 ms/op
Iteration   8: 1507,797 ms/op
Iteration   9: 1505,577 ms/op
Iteration  10: 1510,343 ms/op


Result "benchmarkFind":
  1507,826 ±(99.9%) 5,405 ms/op [Average]
  (min, avg, max) = (1502,652, 1507,826, 1514,906), stdev = 3,575
  CI (99.9%): [1502,422, 1513,231] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternSize = 256)

# Run progress: 97,01% complete, ETA 00:32:00
# Fork: 1 of 1
# Warmup Iteration   1: 2005,917 ms/op
# Warmup Iteration   2: 1573,679 ms/op
# Warmup Iteration   3: 1462,018 ms/op
# Warmup Iteration   4: 1456,526 ms/op
# Warmup Iteration   5: 1457,938 ms/op
# Warmup Iteration   6: 1455,382 ms/op
# Warmup Iteration   7: 1454,850 ms/op
# Warmup Iteration   8: 1459,442 ms/op
# Warmup Iteration   9: 1461,134 ms/op
# Warmup Iteration  10: 1457,920 ms/op
Iteration   1: 1459,504 ms/op
Iteration   2: 1453,927 ms/op
Iteration   3: 1456,050 ms/op
Iteration   4: 1455,190 ms/op
Iteration   5: 1456,143 ms/op
Iteration   6: 1457,273 ms/op
Iteration   7: 1454,930 ms/op
Iteration   8: 1454,240 ms/op
Iteration   9: 1451,578 ms/op
Iteration  10: 1455,459 ms/op


Result "benchmarkFind":
  1455,429 ±(99.9%) 3,176 ms/op [Average]
  (min, avg, max) = (1451,578, 1455,429, 1459,504), stdev = 2,101
  CI (99.9%): [1452,254, 1458,605] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternSize = 2)

# Run progress: 97,06% complete, ETA 00:31:31
# Fork: 1 of 1
# Warmup Iteration   1: 0,461 ms/op
# Warmup Iteration   2: 0,426 ms/op
# Warmup Iteration   3: 0,425 ms/op
# Warmup Iteration   4: 0,425 ms/op
# Warmup Iteration   5: 0,425 ms/op
# Warmup Iteration   6: 0,424 ms/op
# Warmup Iteration   7: 0,424 ms/op
# Warmup Iteration   8: 0,425 ms/op
# Warmup Iteration   9: 0,424 ms/op
# Warmup Iteration  10: 0,425 ms/op
Iteration   1: 0,424 ms/op
Iteration   2: 0,425 ms/op
Iteration   3: 0,424 ms/op
Iteration   4: 0,424 ms/op
Iteration   5: 0,425 ms/op
Iteration   6: 0,425 ms/op
Iteration   7: 0,425 ms/op
Iteration   8: 0,425 ms/op
Iteration   9: 0,425 ms/op
Iteration  10: 0,424 ms/op


Result "benchmarkFind":
  0,425 ±(99.9%) 0,001 ms/op [Average]
  (min, avg, max) = (0,424, 0,425, 0,425), stdev = 0,001
  CI (99.9%): [0,424, 0,425] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternSize = 4)

# Run progress: 97,10% complete, ETA 00:31:01
# Fork: 1 of 1
# Warmup Iteration   1: 3,180 ms/op
# Warmup Iteration   2: 2,883 ms/op
# Warmup Iteration   3: 2,885 ms/op
# Warmup Iteration   4: 2,883 ms/op
# Warmup Iteration   5: 2,886 ms/op
# Warmup Iteration   6: 2,875 ms/op
# Warmup Iteration   7: 2,880 ms/op
# Warmup Iteration   8: 2,880 ms/op
# Warmup Iteration   9: 2,872 ms/op
# Warmup Iteration  10: 2,886 ms/op
Iteration   1: 2,872 ms/op
Iteration   2: 3,356 ms/op
Iteration   3: 2,871 ms/op
Iteration   4: 2,875 ms/op
Iteration   5: 2,878 ms/op
Iteration   6: 2,878 ms/op
Iteration   7: 2,881 ms/op
Iteration   8: 2,875 ms/op
Iteration   9: 2,876 ms/op
Iteration  10: 2,885 ms/op


Result "benchmarkFind":
  2,925 ±(99.9%) 0,229 ms/op [Average]
  (min, avg, max) = (2,871, 2,925, 3,356), stdev = 0,152
  CI (99.9%): [2,695, 3,154] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternSize = 8)

# Run progress: 97,15% complete, ETA 00:30:31
# Fork: 1 of 1
# Warmup Iteration   1: 440,713 ms/op
# Warmup Iteration   2: 409,012 ms/op
# Warmup Iteration   3: 406,982 ms/op
# Warmup Iteration   4: 407,161 ms/op
# Warmup Iteration   5: 407,877 ms/op
# Warmup Iteration   6: 407,662 ms/op
# Warmup Iteration   7: 406,751 ms/op
# Warmup Iteration   8: 407,654 ms/op
# Warmup Iteration   9: 407,802 ms/op
# Warmup Iteration  10: 408,448 ms/op
Iteration   1: 407,319 ms/op
Iteration   2: 406,905 ms/op
Iteration   3: 406,806 ms/op
Iteration   4: 406,592 ms/op
Iteration   5: 407,117 ms/op
Iteration   6: 408,793 ms/op
Iteration   7: 407,065 ms/op
Iteration   8: 410,163 ms/op
Iteration   9: 407,797 ms/op
Iteration  10: 407,604 ms/op


Result "benchmarkFind":
  407,616 ±(99.9%) 1,653 ms/op [Average]
  (min, avg, max) = (406,592, 407,616, 410,163), stdev = 1,093
  CI (99.9%): [405,963, 409,269] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternSize = 16)

# Run progress: 97,20% complete, ETA 00:30:01
# Fork: 1 of 1
# Warmup Iteration   1: 1336,934 ms/op
# Warmup Iteration   2: 1269,930 ms/op
# Warmup Iteration   3: 1289,339 ms/op
# Warmup Iteration   4: 1274,715 ms/op
# Warmup Iteration   5: 1219,134 ms/op
# Warmup Iteration   6: 1002,340 ms/op
# Warmup Iteration   7: 1004,402 ms/op
# Warmup Iteration   8: 1003,547 ms/op
# Warmup Iteration   9: 1002,045 ms/op
# Warmup Iteration  10: 1002,374 ms/op
Iteration   1: 1003,989 ms/op
Iteration   2: 1003,461 ms/op
Iteration   3: 1004,565 ms/op
Iteration   4: 1003,529 ms/op
Iteration   5: 1002,713 ms/op
Iteration   6: 1003,807 ms/op
Iteration   7: 1005,632 ms/op
Iteration   8: 1005,260 ms/op
Iteration   9: 1003,809 ms/op
Iteration  10: 1003,511 ms/op


Result "benchmarkFind":
  1004,028 ±(99.9%) 1,338 ms/op [Average]
  (min, avg, max) = (1002,713, 1004,028, 1005,632), stdev = 0,885
  CI (99.9%): [1002,690, 1005,365] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternSize = 32)

# Run progress: 97,24% complete, ETA 00:29:32
# Fork: 1 of 1
# Warmup Iteration   1: 552,467 ms/op
# Warmup Iteration   2: 540,685 ms/op
# Warmup Iteration   3: 588,425 ms/op
# Warmup Iteration   4: 534,368 ms/op
# Warmup Iteration   5: 533,542 ms/op
# Warmup Iteration   6: 531,731 ms/op
# Warmup Iteration   7: 533,565 ms/op
# Warmup Iteration   8: 530,676 ms/op
# Warmup Iteration   9: 531,736 ms/op
# Warmup Iteration  10: 533,930 ms/op
Iteration   1: 533,125 ms/op
Iteration   2: 535,902 ms/op
Iteration   3: 535,253 ms/op
Iteration   4: 535,706 ms/op
Iteration   5: 537,635 ms/op
Iteration   6: 538,624 ms/op
Iteration   7: 537,091 ms/op
Iteration   8: 536,256 ms/op
Iteration   9: 539,484 ms/op
Iteration  10: 538,021 ms/op


Result "benchmarkFind":
  536,710 ±(99.9%) 2,802 ms/op [Average]
  (min, avg, max) = (533,125, 536,710, 539,484), stdev = 1,853
  CI (99.9%): [533,908, 539,512] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternSize = 64)

# Run progress: 97,29% complete, ETA 00:29:02
# Fork: 1 of 1
# Warmup Iteration   1: 569,382 ms/op
# Warmup Iteration   2: 560,408 ms/op
# Warmup Iteration   3: 536,907 ms/op
# Warmup Iteration   4: 538,753 ms/op
# Warmup Iteration   5: 535,338 ms/op
# Warmup Iteration   6: 536,059 ms/op
# Warmup Iteration   7: 538,514 ms/op
# Warmup Iteration   8: 536,316 ms/op
# Warmup Iteration   9: 535,831 ms/op
# Warmup Iteration  10: 536,616 ms/op
Iteration   1: 537,873 ms/op
Iteration   2: 540,632 ms/op
Iteration   3: 540,010 ms/op
Iteration   4: 542,934 ms/op
Iteration   5: 539,035 ms/op
Iteration   6: 538,882 ms/op
Iteration   7: 541,660 ms/op
Iteration   8: 541,244 ms/op
Iteration   9: 543,384 ms/op
Iteration  10: 541,784 ms/op


Result "benchmarkFind":
  540,744 ±(99.9%) 2,719 ms/op [Average]
  (min, avg, max) = (537,873, 540,744, 543,384), stdev = 1,799
  CI (99.9%): [538,024, 543,463] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternSize = 128)

# Run progress: 97,33% complete, ETA 00:28:32
# Fork: 1 of 1
# Warmup Iteration   1: 592,299 ms/op
# Warmup Iteration   2: 568,817 ms/op
# Warmup Iteration   3: 569,143 ms/op
# Warmup Iteration   4: 567,433 ms/op
# Warmup Iteration   5: 569,000 ms/op
# Warmup Iteration   6: 569,383 ms/op
# Warmup Iteration   7: 573,015 ms/op
# Warmup Iteration   8: 569,250 ms/op
# Warmup Iteration   9: 573,957 ms/op
# Warmup Iteration  10: 576,918 ms/op
Iteration   1: 576,617 ms/op
Iteration   2: 573,626 ms/op
Iteration   3: 576,078 ms/op
Iteration   4: 571,483 ms/op
Iteration   5: 628,579 ms/op
Iteration   6: 567,448 ms/op
Iteration   7: 566,213 ms/op
Iteration   8: 569,582 ms/op
Iteration   9: 568,934 ms/op
Iteration  10: 572,008 ms/op


Result "benchmarkFind":
  577,057 ±(99.9%) 27,858 ms/op [Average]
  (min, avg, max) = (566,213, 577,057, 628,579), stdev = 18,426
  CI (99.9%): [549,199, 604,915] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind
# Parameters: (alphabetSize = 2, patternSize = 256)

# Run progress: 97,38% complete, ETA 00:28:03
# Fork: 1 of 1
# Warmup Iteration   1: 572,873 ms/op
# Warmup Iteration   2: 553,323 ms/op
# Warmup Iteration   3: 545,987 ms/op
# Warmup Iteration   4: 547,783 ms/op
# Warmup Iteration   5: 548,175 ms/op
# Warmup Iteration   6: 549,294 ms/op
# Warmup Iteration   7: 552,587 ms/op
# Warmup Iteration   8: 546,668 ms/op
# Warmup Iteration   9: 552,811 ms/op
# Warmup Iteration  10: 553,130 ms/op
Iteration   1: 555,113 ms/op
Iteration   2: 555,959 ms/op
Iteration   3: 557,884 ms/op
Iteration   4: 559,569 ms/op
Iteration   5: 558,309 ms/op
Iteration   6: 555,052 ms/op
Iteration   7: 553,573 ms/op
Iteration   8: 554,595 ms/op
Iteration   9: 559,975 ms/op
Iteration  10: 550,802 ms/op


Result "benchmarkFind":
  556,083 ±(99.9%) 4,333 ms/op [Average]
  (min, avg, max) = (550,802, 556,083, 559,975), stdev = 2,866
  CI (99.9%): [551,750, 560,416] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternSize = 2)

# Run progress: 97,43% complete, ETA 00:27:33
# Fork: 1 of 1
# Warmup Iteration   1: 3,377 ms/op
# Warmup Iteration   2: 3,122 ms/op
# Warmup Iteration   3: 3,113 ms/op
# Warmup Iteration   4: 3,113 ms/op
# Warmup Iteration   5: 3,119 ms/op
# Warmup Iteration   6: 3,113 ms/op
# Warmup Iteration   7: 3,114 ms/op
# Warmup Iteration   8: 3,119 ms/op
# Warmup Iteration   9: 3,108 ms/op
# Warmup Iteration  10: 3,121 ms/op
Iteration   1: 3,112 ms/op
Iteration   2: 3,106 ms/op
Iteration   3: 3,112 ms/op
Iteration   4: 3,115 ms/op
Iteration   5: 3,111 ms/op
Iteration   6: 3,105 ms/op
Iteration   7: 3,106 ms/op
Iteration   8: 3,102 ms/op
Iteration   9: 3,118 ms/op
Iteration  10: 3,118 ms/op


Result "benchmarkFind":
  3,110 ±(99.9%) 0,008 ms/op [Average]
  (min, avg, max) = (3,102, 3,110, 3,118), stdev = 0,006
  CI (99.9%): [3,102, 3,119] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternSize = 4)

# Run progress: 97,47% complete, ETA 00:27:03
# Fork: 1 of 1
# Warmup Iteration   1: 434,395 ms/op
# Warmup Iteration   2: 406,608 ms/op
# Warmup Iteration   3: 398,159 ms/op
# Warmup Iteration   4: 398,647 ms/op
# Warmup Iteration   5: 398,788 ms/op
# Warmup Iteration   6: 399,160 ms/op
# Warmup Iteration   7: 399,288 ms/op
# Warmup Iteration   8: 445,403 ms/op
# Warmup Iteration   9: 400,733 ms/op
# Warmup Iteration  10: 399,516 ms/op
Iteration   1: 398,603 ms/op
Iteration   2: 399,371 ms/op
Iteration   3: 398,780 ms/op
Iteration   4: 400,151 ms/op
Iteration   5: 399,276 ms/op
Iteration   6: 398,532 ms/op
Iteration   7: 399,545 ms/op
Iteration   8: 399,103 ms/op
Iteration   9: 399,524 ms/op
Iteration  10: 399,166 ms/op


Result "benchmarkFind":
  399,205 ±(99.9%) 0,739 ms/op [Average]
  (min, avg, max) = (398,532, 399,205, 400,151), stdev = 0,489
  CI (99.9%): [398,466, 399,944] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternSize = 8)

# Run progress: 97,52% complete, ETA 00:26:34
# Fork: 1 of 1
# Warmup Iteration   1: 1017,345 ms/op
# Warmup Iteration   2: 952,118 ms/op
# Warmup Iteration   3: 938,500 ms/op
# Warmup Iteration   4: 674,639 ms/op
# Warmup Iteration   5: 671,578 ms/op
# Warmup Iteration   6: 671,807 ms/op
# Warmup Iteration   7: 673,737 ms/op
# Warmup Iteration   8: 676,919 ms/op
# Warmup Iteration   9: 674,753 ms/op
# Warmup Iteration  10: 714,621 ms/op
Iteration   1: 737,302 ms/op
Iteration   2: 734,879 ms/op
Iteration   3: 735,219 ms/op
Iteration   4: 735,603 ms/op
Iteration   5: 734,532 ms/op
Iteration   6: 736,065 ms/op
Iteration   7: 733,222 ms/op
Iteration   8: 731,401 ms/op
Iteration   9: 734,848 ms/op
Iteration  10: 735,711 ms/op


Result "benchmarkFind":
  734,878 ±(99.9%) 2,447 ms/op [Average]
  (min, avg, max) = (731,401, 734,878, 737,302), stdev = 1,619
  CI (99.9%): [732,431, 737,325] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternSize = 16)

# Run progress: 97,56% complete, ETA 00:26:04
# Fork: 1 of 1
# Warmup Iteration   1: 226,624 ms/op
# Warmup Iteration   2: 213,798 ms/op
# Warmup Iteration   3: 211,704 ms/op
# Warmup Iteration   4: 213,365 ms/op
# Warmup Iteration   5: 212,276 ms/op
# Warmup Iteration   6: 212,811 ms/op
# Warmup Iteration   7: 213,634 ms/op
# Warmup Iteration   8: 213,355 ms/op
# Warmup Iteration   9: 214,411 ms/op
# Warmup Iteration  10: 215,233 ms/op
Iteration   1: 201,875 ms/op
Iteration   2: 194,767 ms/op
Iteration   3: 214,369 ms/op
Iteration   4: 192,860 ms/op
Iteration   5: 192,186 ms/op
Iteration   6: 192,275 ms/op
Iteration   7: 192,547 ms/op
Iteration   8: 193,223 ms/op
Iteration   9: 193,633 ms/op
Iteration  10: 194,282 ms/op


Result "benchmarkFind":
  196,202 ±(99.9%) 10,565 ms/op [Average]
  (min, avg, max) = (192,186, 196,202, 214,369), stdev = 6,988
  CI (99.9%): [185,636, 206,767] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternSize = 32)

# Run progress: 97,61% complete, ETA 00:25:34
# Fork: 1 of 1
# Warmup Iteration   1: 228,202 ms/op
# Warmup Iteration   2: 216,280 ms/op
# Warmup Iteration   3: 214,615 ms/op
# Warmup Iteration   4: 216,102 ms/op
# Warmup Iteration   5: 215,577 ms/op
# Warmup Iteration   6: 216,164 ms/op
# Warmup Iteration   7: 217,569 ms/op
# Warmup Iteration   8: 217,481 ms/op
# Warmup Iteration   9: 217,466 ms/op
# Warmup Iteration  10: 218,203 ms/op
Iteration   1: 205,361 ms/op
Iteration   2: 197,768 ms/op
Iteration   3: 197,488 ms/op
Iteration   4: 198,041 ms/op
Iteration   5: 197,573 ms/op
Iteration   6: 198,790 ms/op
Iteration   7: 196,910 ms/op
Iteration   8: 197,856 ms/op
Iteration   9: 197,065 ms/op
Iteration  10: 196,339 ms/op


Result "benchmarkFind":
  198,319 ±(99.9%) 3,875 ms/op [Average]
  (min, avg, max) = (196,339, 198,319, 205,361), stdev = 2,563
  CI (99.9%): [194,444, 202,195] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternSize = 64)

# Run progress: 97,66% complete, ETA 00:25:05
# Fork: 1 of 1
# Warmup Iteration   1: 226,301 ms/op
# Warmup Iteration   2: 214,986 ms/op
# Warmup Iteration   3: 212,198 ms/op
# Warmup Iteration   4: 212,294 ms/op
# Warmup Iteration   5: 213,280 ms/op
# Warmup Iteration   6: 213,063 ms/op
# Warmup Iteration   7: 214,653 ms/op
# Warmup Iteration   8: 213,771 ms/op
# Warmup Iteration   9: 214,750 ms/op
# Warmup Iteration  10: 216,551 ms/op
Iteration   1: 209,898 ms/op
Iteration   2: 197,104 ms/op
Iteration   3: 196,518 ms/op
Iteration   4: 196,984 ms/op
Iteration   5: 196,839 ms/op
Iteration   6: 197,130 ms/op
Iteration   7: 196,539 ms/op
Iteration   8: 194,978 ms/op
Iteration   9: 195,945 ms/op
Iteration  10: 196,879 ms/op


Result "benchmarkFind":
  197,881 ±(99.9%) 6,460 ms/op [Average]
  (min, avg, max) = (194,978, 197,881, 209,898), stdev = 4,273
  CI (99.9%): [191,422, 204,341] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternSize = 128)

# Run progress: 97,70% complete, ETA 00:24:35
# Fork: 1 of 1
# Warmup Iteration   1: 232,739 ms/op
# Warmup Iteration   2: 220,518 ms/op
# Warmup Iteration   3: 240,886 ms/op
# Warmup Iteration   4: 218,912 ms/op
# Warmup Iteration   5: 219,274 ms/op
# Warmup Iteration   6: 218,861 ms/op
# Warmup Iteration   7: 221,906 ms/op
# Warmup Iteration   8: 224,455 ms/op
# Warmup Iteration   9: 223,601 ms/op
# Warmup Iteration  10: 223,146 ms/op
Iteration   1: 206,939 ms/op
Iteration   2: 203,484 ms/op
Iteration   3: 203,839 ms/op
Iteration   4: 203,983 ms/op
Iteration   5: 202,630 ms/op
Iteration   6: 203,396 ms/op
Iteration   7: 204,833 ms/op
Iteration   8: 203,197 ms/op
Iteration   9: 203,262 ms/op
Iteration  10: 202,903 ms/op


Result "benchmarkFind":
  203,847 ±(99.9%) 1,887 ms/op [Average]
  (min, avg, max) = (202,630, 203,847, 206,939), stdev = 1,248
  CI (99.9%): [201,959, 205,734] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind
# Parameters: (alphabetSize = 4, patternSize = 256)

# Run progress: 97,75% complete, ETA 00:24:05
# Fork: 1 of 1
# Warmup Iteration   1: 222,059 ms/op
# Warmup Iteration   2: 212,898 ms/op
# Warmup Iteration   3: 209,149 ms/op
# Warmup Iteration   4: 210,276 ms/op
# Warmup Iteration   5: 210,428 ms/op
# Warmup Iteration   6: 210,442 ms/op
# Warmup Iteration   7: 212,001 ms/op
# Warmup Iteration   8: 213,167 ms/op
# Warmup Iteration   9: 212,492 ms/op
# Warmup Iteration  10: 212,782 ms/op
Iteration   1: 205,226 ms/op
Iteration   2: 191,175 ms/op
Iteration   3: 192,354 ms/op
Iteration   4: 193,267 ms/op
Iteration   5: 193,388 ms/op
Iteration   6: 194,037 ms/op
Iteration   7: 195,085 ms/op
Iteration   8: 194,185 ms/op
Iteration   9: 194,670 ms/op
Iteration  10: 194,063 ms/op


Result "benchmarkFind":
  194,745 ±(99.9%) 5,828 ms/op [Average]
  (min, avg, max) = (191,175, 194,745, 205,226), stdev = 3,855
  CI (99.9%): [188,917, 200,573] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternSize = 2)

# Run progress: 97,79% complete, ETA 00:23:36
# Fork: 1 of 1
# Warmup Iteration   1: 26,862 ms/op
# Warmup Iteration   2: 25,290 ms/op
# Warmup Iteration   3: 24,325 ms/op
# Warmup Iteration   4: 24,232 ms/op
# Warmup Iteration   5: 24,245 ms/op
# Warmup Iteration   6: 24,298 ms/op
# Warmup Iteration   7: 24,367 ms/op
# Warmup Iteration   8: 24,263 ms/op
# Warmup Iteration   9: 24,424 ms/op
# Warmup Iteration  10: 24,565 ms/op
Iteration   1: 24,363 ms/op
Iteration   2: 24,160 ms/op
Iteration   3: 24,208 ms/op
Iteration   4: 24,160 ms/op
Iteration   5: 24,662 ms/op
Iteration   6: 24,460 ms/op
Iteration   7: 24,520 ms/op
Iteration   8: 28,291 ms/op
Iteration   9: 24,357 ms/op
Iteration  10: 24,384 ms/op


Result "benchmarkFind":
  24,756 ±(99.9%) 1,893 ms/op [Average]
  (min, avg, max) = (24,160, 24,756, 28,291), stdev = 1,252
  CI (99.9%): [22,863, 26,649] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternSize = 4)

# Run progress: 97,84% complete, ETA 00:23:06
# Fork: 1 of 1
# Warmup Iteration   1: 9024,128 ms/op
# Warmup Iteration   2: 7603,595 ms/op
# Warmup Iteration   3: 7535,020 ms/op
# Warmup Iteration   4: 7558,749 ms/op
# Warmup Iteration   5: 7591,338 ms/op
# Warmup Iteration   6: 7570,799 ms/op
# Warmup Iteration   7: 7562,983 ms/op
# Warmup Iteration   8: 7737,721 ms/op
# Warmup Iteration   9: 7575,770 ms/op
# Warmup Iteration  10: 7567,959 ms/op
Iteration   1: 7590,072 ms/op
Iteration   2: 7735,745 ms/op
Iteration   3: 7565,712 ms/op
Iteration   4: 7560,743 ms/op
Iteration   5: 7555,665 ms/op
Iteration   6: 7698,800 ms/op
Iteration   7: 7607,666 ms/op
Iteration   8: 7640,679 ms/op
Iteration   9: 7596,533 ms/op
Iteration  10: 7574,409 ms/op


Result "benchmarkFind":
  7612,602 ±(99.9%) 92,597 ms/op [Average]
  (min, avg, max) = (7555,665, 7612,602, 7735,745), stdev = 61,247
  CI (99.9%): [7520,005, 7705,200] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternSize = 8)

# Run progress: 97,89% complete, ETA 00:22:39
# Fork: 1 of 1
# Warmup Iteration   1: 171,402 ms/op
# Warmup Iteration   2: 157,000 ms/op
# Warmup Iteration   3: 157,144 ms/op
# Warmup Iteration   4: 157,533 ms/op
# Warmup Iteration   5: 158,237 ms/op
# Warmup Iteration   6: 158,529 ms/op
# Warmup Iteration   7: 160,430 ms/op
# Warmup Iteration   8: 152,941 ms/op
# Warmup Iteration   9: 142,981 ms/op
# Warmup Iteration  10: 143,007 ms/op
Iteration   1: 142,982 ms/op
Iteration   2: 142,946 ms/op
Iteration   3: 142,765 ms/op
Iteration   4: 142,989 ms/op
Iteration   5: 142,669 ms/op
Iteration   6: 142,541 ms/op
Iteration   7: 142,645 ms/op
Iteration   8: 142,920 ms/op
Iteration   9: 142,484 ms/op
Iteration  10: 142,009 ms/op


Result "benchmarkFind":
  142,695 ±(99.9%) 0,459 ms/op [Average]
  (min, avg, max) = (142,009, 142,695, 142,989), stdev = 0,304
  CI (99.9%): [142,236, 143,154] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternSize = 16)

# Run progress: 97,93% complete, ETA 00:22:10
# Fork: 1 of 1
# Warmup Iteration   1: 142,319 ms/op
# Warmup Iteration   2: 131,267 ms/op
# Warmup Iteration   3: 131,633 ms/op
# Warmup Iteration   4: 132,246 ms/op
# Warmup Iteration   5: 132,852 ms/op
# Warmup Iteration   6: 132,787 ms/op
# Warmup Iteration   7: 129,397 ms/op
# Warmup Iteration   8: 113,642 ms/op
# Warmup Iteration   9: 113,560 ms/op
# Warmup Iteration  10: 114,797 ms/op
Iteration   1: 112,780 ms/op
Iteration   2: 112,074 ms/op
Iteration   3: 112,774 ms/op
Iteration   4: 113,237 ms/op
Iteration   5: 113,368 ms/op
Iteration   6: 112,869 ms/op
Iteration   7: 113,104 ms/op
Iteration   8: 113,223 ms/op
Iteration   9: 113,115 ms/op
Iteration  10: 113,178 ms/op


Result "benchmarkFind":
  112,972 ±(99.9%) 0,566 ms/op [Average]
  (min, avg, max) = (112,074, 112,972, 113,368), stdev = 0,375
  CI (99.9%): [112,406, 113,538] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternSize = 32)

# Run progress: 97,98% complete, ETA 00:21:40
# Fork: 1 of 1
# Warmup Iteration   1: 132,201 ms/op
# Warmup Iteration   2: 122,285 ms/op
# Warmup Iteration   3: 122,522 ms/op
# Warmup Iteration   4: 122,899 ms/op
# Warmup Iteration   5: 123,690 ms/op
# Warmup Iteration   6: 124,352 ms/op
# Warmup Iteration   7: 106,968 ms/op
# Warmup Iteration   8: 103,953 ms/op
# Warmup Iteration   9: 104,171 ms/op
# Warmup Iteration  10: 103,722 ms/op
Iteration   1: 103,349 ms/op
Iteration   2: 102,605 ms/op
Iteration   3: 103,145 ms/op
Iteration   4: 103,042 ms/op
Iteration   5: 103,440 ms/op
Iteration   6: 103,315 ms/op
Iteration   7: 103,395 ms/op
Iteration   8: 103,334 ms/op
Iteration   9: 103,137 ms/op
Iteration  10: 103,232 ms/op


Result "benchmarkFind":
  103,199 ±(99.9%) 0,369 ms/op [Average]
  (min, avg, max) = (102,605, 103,199, 103,440), stdev = 0,244
  CI (99.9%): [102,831, 103,568] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternSize = 64)

# Run progress: 98,02% complete, ETA 00:21:10
# Fork: 1 of 1
# Warmup Iteration   1: 134,174 ms/op
# Warmup Iteration   2: 124,435 ms/op
# Warmup Iteration   3: 124,608 ms/op
# Warmup Iteration   4: 125,175 ms/op
# Warmup Iteration   5: 125,850 ms/op
# Warmup Iteration   6: 125,777 ms/op
# Warmup Iteration   7: 119,329 ms/op
# Warmup Iteration   8: 110,264 ms/op
# Warmup Iteration   9: 110,871 ms/op
# Warmup Iteration  10: 110,909 ms/op
Iteration   1: 110,770 ms/op
Iteration   2: 110,630 ms/op
Iteration   3: 110,688 ms/op
Iteration   4: 110,658 ms/op
Iteration   5: 123,140 ms/op
Iteration   6: 109,807 ms/op
Iteration   7: 109,716 ms/op
Iteration   8: 109,749 ms/op
Iteration   9: 110,351 ms/op
Iteration  10: 110,304 ms/op


Result "benchmarkFind":
  111,581 ±(99.9%) 6,171 ms/op [Average]
  (min, avg, max) = (109,716, 111,581, 123,140), stdev = 4,082
  CI (99.9%): [105,410, 117,753] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternSize = 128)

# Run progress: 98,07% complete, ETA 00:20:40
# Fork: 1 of 1
# Warmup Iteration   1: 137,240 ms/op
# Warmup Iteration   2: 128,320 ms/op
# Warmup Iteration   3: 128,566 ms/op
# Warmup Iteration   4: 128,809 ms/op
# Warmup Iteration   5: 129,411 ms/op
# Warmup Iteration   6: 129,262 ms/op
# Warmup Iteration   7: 122,654 ms/op
# Warmup Iteration   8: 109,280 ms/op
# Warmup Iteration   9: 109,253 ms/op
# Warmup Iteration  10: 109,748 ms/op
Iteration   1: 109,118 ms/op
Iteration   2: 109,271 ms/op
Iteration   3: 108,952 ms/op
Iteration   4: 109,029 ms/op
Iteration   5: 108,866 ms/op
Iteration   6: 108,695 ms/op
Iteration   7: 108,903 ms/op
Iteration   8: 108,887 ms/op
Iteration   9: 108,719 ms/op
Iteration  10: 108,725 ms/op


Result "benchmarkFind":
  108,916 ±(99.9%) 0,280 ms/op [Average]
  (min, avg, max) = (108,695, 108,916, 109,271), stdev = 0,185
  CI (99.9%): [108,636, 109,196] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind
# Parameters: (alphabetSize = 8, patternSize = 256)

# Run progress: 98,12% complete, ETA 00:20:11
# Fork: 1 of 1
# Warmup Iteration   1: 134,414 ms/op
# Warmup Iteration   2: 125,072 ms/op
# Warmup Iteration   3: 124,927 ms/op
# Warmup Iteration   4: 125,319 ms/op
# Warmup Iteration   5: 125,976 ms/op
# Warmup Iteration   6: 125,402 ms/op
# Warmup Iteration   7: 120,836 ms/op
# Warmup Iteration   8: 106,836 ms/op
# Warmup Iteration   9: 107,265 ms/op
# Warmup Iteration  10: 107,391 ms/op
Iteration   1: 106,881 ms/op
Iteration   2: 107,077 ms/op
Iteration   3: 106,602 ms/op
Iteration   4: 106,930 ms/op
Iteration   5: 107,207 ms/op
Iteration   6: 106,453 ms/op
Iteration   7: 106,575 ms/op
Iteration   8: 106,604 ms/op
Iteration   9: 106,812 ms/op
Iteration  10: 106,604 ms/op


Result "benchmarkFind":
  106,774 ±(99.9%) 0,372 ms/op [Average]
  (min, avg, max) = (106,453, 106,774, 107,207), stdev = 0,246
  CI (99.9%): [106,402, 107,147] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternSize = 2)

# Run progress: 98,16% complete, ETA 00:19:41
# Fork: 1 of 1
# Warmup Iteration   1: 433,590 ms/op
# Warmup Iteration   2: 394,547 ms/op
# Warmup Iteration   3: 385,697 ms/op
# Warmup Iteration   4: 385,121 ms/op
# Warmup Iteration   5: 391,322 ms/op
# Warmup Iteration   6: 387,088 ms/op
# Warmup Iteration   7: 385,873 ms/op
# Warmup Iteration   8: 434,794 ms/op
# Warmup Iteration   9: 387,018 ms/op
# Warmup Iteration  10: 386,636 ms/op
Iteration   1: 386,393 ms/op
Iteration   2: 384,326 ms/op
Iteration   3: 385,210 ms/op
Iteration   4: 385,387 ms/op
Iteration   5: 386,449 ms/op
Iteration   6: 385,942 ms/op
Iteration   7: 387,906 ms/op
Iteration   8: 386,428 ms/op
Iteration   9: 385,791 ms/op
Iteration  10: 386,820 ms/op


Result "benchmarkFind":
  386,065 ±(99.9%) 1,482 ms/op [Average]
  (min, avg, max) = (384,326, 386,065, 387,906), stdev = 0,980
  CI (99.9%): [384,583, 387,547] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternSize = 4)

# Run progress: 98,21% complete, ETA 00:19:11
# Fork: 1 of 1
# Warmup Iteration   1: 892,103 ms/op
# Warmup Iteration   2: 854,954 ms/op
# Warmup Iteration   3: 748,562 ms/op
# Warmup Iteration   4: 598,394 ms/op
# Warmup Iteration   5: 598,756 ms/op
# Warmup Iteration   6: 598,842 ms/op
# Warmup Iteration   7: 598,002 ms/op
# Warmup Iteration   8: 598,261 ms/op
# Warmup Iteration   9: 603,558 ms/op
# Warmup Iteration  10: 598,061 ms/op
Iteration   1: 597,249 ms/op
Iteration   2: 597,897 ms/op
Iteration   3: 598,265 ms/op
Iteration   4: 596,776 ms/op
Iteration   5: 596,813 ms/op
Iteration   6: 597,684 ms/op
Iteration   7: 597,118 ms/op
Iteration   8: 599,375 ms/op
Iteration   9: 598,557 ms/op
Iteration  10: 597,730 ms/op


Result "benchmarkFind":
  597,746 ±(99.9%) 1,241 ms/op [Average]
  (min, avg, max) = (596,776, 597,746, 599,375), stdev = 0,821
  CI (99.9%): [596,506, 598,987] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternSize = 8)

# Run progress: 98,25% complete, ETA 00:18:42
# Fork: 1 of 1
# Warmup Iteration   1: 139,738 ms/op
# Warmup Iteration   2: 129,490 ms/op
# Warmup Iteration   3: 130,032 ms/op
# Warmup Iteration   4: 130,173 ms/op
# Warmup Iteration   5: 131,273 ms/op
# Warmup Iteration   6: 131,469 ms/op
# Warmup Iteration   7: 130,902 ms/op
# Warmup Iteration   8: 116,653 ms/op
# Warmup Iteration   9: 116,774 ms/op
# Warmup Iteration  10: 116,555 ms/op
Iteration   1: 117,253 ms/op
Iteration   2: 116,545 ms/op
Iteration   3: 116,576 ms/op
Iteration   4: 116,407 ms/op
Iteration   5: 116,212 ms/op
Iteration   6: 116,472 ms/op
Iteration   7: 116,196 ms/op
Iteration   8: 128,773 ms/op
Iteration   9: 115,235 ms/op
Iteration  10: 114,948 ms/op


Result "benchmarkFind":
  117,462 ±(99.9%) 6,092 ms/op [Average]
  (min, avg, max) = (114,948, 117,462, 128,773), stdev = 4,030
  CI (99.9%): [111,370, 123,554] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternSize = 16)

# Run progress: 98,30% complete, ETA 00:18:12
# Fork: 1 of 1
# Warmup Iteration   1: 112,386 ms/op
# Warmup Iteration   2: 103,756 ms/op
# Warmup Iteration   3: 104,092 ms/op
# Warmup Iteration   4: 104,673 ms/op
# Warmup Iteration   5: 105,055 ms/op
# Warmup Iteration   6: 98,700 ms/op
# Warmup Iteration   7: 89,373 ms/op
# Warmup Iteration   8: 89,545 ms/op
# Warmup Iteration   9: 89,241 ms/op
# Warmup Iteration  10: 89,035 ms/op
Iteration   1: 89,142 ms/op
Iteration   2: 89,157 ms/op
Iteration   3: 88,985 ms/op
Iteration   4: 89,146 ms/op
Iteration   5: 89,124 ms/op
Iteration   6: 88,958 ms/op
Iteration   7: 88,990 ms/op
Iteration   8: 89,037 ms/op
Iteration   9: 88,952 ms/op
Iteration  10: 88,982 ms/op


Result "benchmarkFind":
  89,047 ±(99.9%) 0,129 ms/op [Average]
  (min, avg, max) = (88,952, 89,047, 89,157), stdev = 0,085
  CI (99.9%): [88,918, 89,176] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternSize = 32)

# Run progress: 98,35% complete, ETA 00:17:42
# Fork: 1 of 1
# Warmup Iteration   1: 105,077 ms/op
# Warmup Iteration   2: 97,276 ms/op
# Warmup Iteration   3: 97,347 ms/op
# Warmup Iteration   4: 97,805 ms/op
# Warmup Iteration   5: 97,888 ms/op
# Warmup Iteration   6: 82,941 ms/op
# Warmup Iteration   7: 79,955 ms/op
# Warmup Iteration   8: 79,879 ms/op
# Warmup Iteration   9: 79,399 ms/op
# Warmup Iteration  10: 79,394 ms/op
Iteration   1: 79,266 ms/op
Iteration   2: 79,016 ms/op
Iteration   3: 79,033 ms/op
Iteration   4: 78,841 ms/op
Iteration   5: 79,005 ms/op
Iteration   6: 78,561 ms/op
Iteration   7: 78,757 ms/op
Iteration   8: 79,188 ms/op
Iteration   9: 79,090 ms/op
Iteration  10: 79,596 ms/op


Result "benchmarkFind":
  79,035 ±(99.9%) 0,432 ms/op [Average]
  (min, avg, max) = (78,561, 79,035, 79,596), stdev = 0,286
  CI (99.9%): [78,603, 79,468] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternSize = 64)

# Run progress: 98,39% complete, ETA 00:17:13
# Fork: 1 of 1
# Warmup Iteration   1: 104,858 ms/op
# Warmup Iteration   2: 97,282 ms/op
# Warmup Iteration   3: 97,352 ms/op
# Warmup Iteration   4: 97,808 ms/op
# Warmup Iteration   5: 98,245 ms/op
# Warmup Iteration   6: 82,693 ms/op
# Warmup Iteration   7: 80,085 ms/op
# Warmup Iteration   8: 79,832 ms/op
# Warmup Iteration   9: 79,629 ms/op
# Warmup Iteration  10: 79,447 ms/op
Iteration   1: 79,760 ms/op
Iteration   2: 92,463 ms/op
Iteration   3: 79,215 ms/op
Iteration   4: 79,030 ms/op
Iteration   5: 80,078 ms/op
Iteration   6: 79,590 ms/op
Iteration   7: 79,499 ms/op
Iteration   8: 79,478 ms/op
Iteration   9: 79,315 ms/op
Iteration  10: 79,473 ms/op


Result "benchmarkFind":
  80,790 ±(99.9%) 6,216 ms/op [Average]
  (min, avg, max) = (79,030, 80,790, 92,463), stdev = 4,112
  CI (99.9%): [74,574, 87,006] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternSize = 128)

# Run progress: 98,44% complete, ETA 00:16:43
# Fork: 1 of 1
# Warmup Iteration   1: 101,515 ms/op
# Warmup Iteration   2: 93,739 ms/op
# Warmup Iteration   3: 93,966 ms/op
# Warmup Iteration   4: 94,414 ms/op
# Warmup Iteration   5: 94,542 ms/op
# Warmup Iteration   6: 81,645 ms/op
# Warmup Iteration   7: 77,172 ms/op
# Warmup Iteration   8: 77,398 ms/op
# Warmup Iteration   9: 77,901 ms/op
# Warmup Iteration  10: 76,203 ms/op
Iteration   1: 76,212 ms/op
Iteration   2: 76,429 ms/op
Iteration   3: 76,307 ms/op
Iteration   4: 76,591 ms/op
Iteration   5: 76,542 ms/op
Iteration   6: 76,650 ms/op
Iteration   7: 76,694 ms/op
Iteration   8: 77,019 ms/op
Iteration   9: 76,804 ms/op
Iteration  10: 76,725 ms/op


Result "benchmarkFind":
  76,597 ±(99.9%) 0,361 ms/op [Average]
  (min, avg, max) = (76,212, 76,597, 77,019), stdev = 0,239
  CI (99.9%): [76,236, 76,958] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind
# Parameters: (alphabetSize = 16, patternSize = 256)

# Run progress: 98,48% complete, ETA 00:16:14
# Fork: 1 of 1
# Warmup Iteration   1: 101,191 ms/op
# Warmup Iteration   2: 94,060 ms/op
# Warmup Iteration   3: 94,257 ms/op
# Warmup Iteration   4: 94,775 ms/op
# Warmup Iteration   5: 94,898 ms/op
# Warmup Iteration   6: 82,884 ms/op
# Warmup Iteration   7: 79,713 ms/op
# Warmup Iteration   8: 80,421 ms/op
# Warmup Iteration   9: 79,304 ms/op
# Warmup Iteration  10: 79,112 ms/op
Iteration   1: 78,827 ms/op
Iteration   2: 79,070 ms/op
Iteration   3: 79,250 ms/op
Iteration   4: 78,822 ms/op
Iteration   5: 78,887 ms/op
Iteration   6: 78,862 ms/op
Iteration   7: 79,306 ms/op
Iteration   8: 78,794 ms/op
Iteration   9: 78,829 ms/op
Iteration  10: 78,975 ms/op


Result "benchmarkFind":
  78,962 ±(99.9%) 0,282 ms/op [Average]
  (min, avg, max) = (78,794, 78,962, 79,306), stdev = 0,186
  CI (99.9%): [78,680, 79,244] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternSize = 2)

# Run progress: 98,53% complete, ETA 00:15:44
# Fork: 1 of 1
# Warmup Iteration   1: 1804,264 ms/op
# Warmup Iteration   2: 1565,641 ms/op
# Warmup Iteration   3: 1556,261 ms/op
# Warmup Iteration   4: 1557,839 ms/op
# Warmup Iteration   5: 1722,453 ms/op
# Warmup Iteration   6: 1545,022 ms/op
# Warmup Iteration   7: 1544,296 ms/op
# Warmup Iteration   8: 1539,322 ms/op
# Warmup Iteration   9: 1544,102 ms/op
# Warmup Iteration  10: 1542,690 ms/op
Iteration   1: 1542,892 ms/op
Iteration   2: 1544,896 ms/op
Iteration   3: 1544,071 ms/op
Iteration   4: 1540,759 ms/op
Iteration   5: 1543,145 ms/op
Iteration   6: 1540,582 ms/op
Iteration   7: 1545,032 ms/op
Iteration   8: 1540,214 ms/op
Iteration   9: 1544,765 ms/op
Iteration  10: 1542,202 ms/op


Result "benchmarkFind":
  1542,856 ±(99.9%) 2,810 ms/op [Average]
  (min, avg, max) = (1540,214, 1542,856, 1545,032), stdev = 1,858
  CI (99.9%): [1540,046, 1545,665] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternSize = 4)

# Run progress: 98,58% complete, ETA 00:15:14
# Fork: 1 of 1
# Warmup Iteration   1: 5561,209 ms/op
# Warmup Iteration   2: 5226,874 ms/op
# Warmup Iteration   3: 5226,445 ms/op
# Warmup Iteration   4: 5215,474 ms/op
# Warmup Iteration   5: 5219,765 ms/op
# Warmup Iteration   6: 5215,242 ms/op
# Warmup Iteration   7: 5380,296 ms/op
# Warmup Iteration   8: 5212,229 ms/op
# Warmup Iteration   9: 5220,238 ms/op
# Warmup Iteration  10: 3599,596 ms/op
Iteration   1: 3606,953 ms/op
Iteration   2: 3594,552 ms/op
Iteration   3: 3608,236 ms/op
Iteration   4: 3596,181 ms/op
Iteration   5: 3597,318 ms/op
Iteration   6: 3648,544 ms/op
Iteration   7: 3617,232 ms/op
Iteration   8: 3760,750 ms/op
Iteration   9: 3762,153 ms/op
Iteration  10: 3726,251 ms/op


Result "benchmarkFind":
  3651,817 ±(99.9%) 105,764 ms/op [Average]
  (min, avg, max) = (3594,552, 3651,817, 3762,153), stdev = 69,956
  CI (99.9%): [3546,053, 3757,581] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternSize = 8)

# Run progress: 98,62% complete, ETA 00:14:46
# Fork: 1 of 1
# Warmup Iteration   1: 1487,198 ms/op
# Warmup Iteration   2: 1238,835 ms/op
# Warmup Iteration   3: 1193,565 ms/op
# Warmup Iteration   4: 1183,263 ms/op
# Warmup Iteration   5: 1193,426 ms/op
# Warmup Iteration   6: 1181,891 ms/op
# Warmup Iteration   7: 1176,049 ms/op
# Warmup Iteration   8: 1199,673 ms/op
# Warmup Iteration   9: 1182,577 ms/op
# Warmup Iteration  10: 1181,158 ms/op
Iteration   1: 1177,733 ms/op
Iteration   2: 1189,958 ms/op
Iteration   3: 1178,998 ms/op
Iteration   4: 1185,171 ms/op
Iteration   5: 1184,058 ms/op
Iteration   6: 1188,340 ms/op
Iteration   7: 1187,892 ms/op
Iteration   8: 1187,037 ms/op
Iteration   9: 1184,990 ms/op
Iteration  10: 1191,107 ms/op


Result "benchmarkFind":
  1185,529 ±(99.9%) 6,619 ms/op [Average]
  (min, avg, max) = (1177,733, 1185,529, 1191,107), stdev = 4,378
  CI (99.9%): [1178,910, 1192,147] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternSize = 16)

# Run progress: 98,67% complete, ETA 00:14:16
# Fork: 1 of 1
# Warmup Iteration   1: 1209,969 ms/op
# Warmup Iteration   2: 1031,507 ms/op
# Warmup Iteration   3: 972,923 ms/op
# Warmup Iteration   4: 971,842 ms/op
# Warmup Iteration   5: 973,919 ms/op
# Warmup Iteration   6: 971,808 ms/op
# Warmup Iteration   7: 968,558 ms/op
# Warmup Iteration   8: 972,403 ms/op
# Warmup Iteration   9: 968,774 ms/op
# Warmup Iteration  10: 966,737 ms/op
Iteration   1: 972,169 ms/op
Iteration   2: 972,551 ms/op
Iteration   3: 966,979 ms/op
Iteration   4: 968,087 ms/op
Iteration   5: 969,276 ms/op
Iteration   6: 969,659 ms/op
Iteration   7: 969,878 ms/op
Iteration   8: 997,042 ms/op
Iteration   9: 968,323 ms/op
Iteration  10: 964,326 ms/op


Result "benchmarkFind":
  971,829 ±(99.9%) 13,870 ms/op [Average]
  (min, avg, max) = (964,326, 971,829, 997,042), stdev = 9,174
  CI (99.9%): [957,959, 985,699] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternSize = 32)

# Run progress: 98,71% complete, ETA 00:13:47
# Fork: 1 of 1
# Warmup Iteration   1: 1161,883 ms/op
# Warmup Iteration   2: 1002,449 ms/op
# Warmup Iteration   3: 929,063 ms/op
# Warmup Iteration   4: 937,154 ms/op
# Warmup Iteration   5: 913,548 ms/op
# Warmup Iteration   6: 916,559 ms/op
# Warmup Iteration   7: 910,237 ms/op
# Warmup Iteration   8: 915,768 ms/op
# Warmup Iteration   9: 917,607 ms/op
# Warmup Iteration  10: 911,593 ms/op
Iteration   1: 913,202 ms/op
Iteration   2: 915,540 ms/op
Iteration   3: 912,869 ms/op
Iteration   4: 914,024 ms/op
Iteration   5: 916,042 ms/op
Iteration   6: 974,522 ms/op
Iteration   7: 916,769 ms/op
Iteration   8: 911,877 ms/op
Iteration   9: 902,323 ms/op
Iteration  10: 914,070 ms/op


Result "benchmarkFind":
  919,124 ±(99.9%) 30,057 ms/op [Average]
  (min, avg, max) = (902,323, 919,124, 974,522), stdev = 19,881
  CI (99.9%): [889,066, 949,181] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternSize = 64)

# Run progress: 98,76% complete, ETA 00:13:17
# Fork: 1 of 1
# Warmup Iteration   1: 1108,944 ms/op
# Warmup Iteration   2: 927,116 ms/op
# Warmup Iteration   3: 888,701 ms/op
# Warmup Iteration   4: 945,558 ms/op
# Warmup Iteration   5: 905,251 ms/op
# Warmup Iteration   6: 890,931 ms/op
# Warmup Iteration   7: 896,685 ms/op
# Warmup Iteration   8: 942,797 ms/op
# Warmup Iteration   9: 934,931 ms/op
# Warmup Iteration  10: 914,880 ms/op
Iteration   1: 880,343 ms/op
Iteration   2: 946,043 ms/op
Iteration   3: 949,322 ms/op
Iteration   4: 918,087 ms/op
Iteration   5: 880,469 ms/op
Iteration   6: 860,959 ms/op
Iteration   7: 859,691 ms/op
Iteration   8: 868,707 ms/op
Iteration   9: 860,928 ms/op
Iteration  10: 863,361 ms/op


Result "benchmarkFind":
  888,791 ±(99.9%) 53,780 ms/op [Average]
  (min, avg, max) = (859,691, 888,791, 949,322), stdev = 35,572
  CI (99.9%): [835,011, 942,571] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternSize = 128)

# Run progress: 98,81% complete, ETA 00:12:48
# Fork: 1 of 1
# Warmup Iteration   1: 1090,024 ms/op
# Warmup Iteration   2: 886,458 ms/op
# Warmup Iteration   3: 854,605 ms/op
# Warmup Iteration   4: 854,861 ms/op
# Warmup Iteration   5: 851,821 ms/op
# Warmup Iteration   6: 852,660 ms/op
# Warmup Iteration   7: 863,855 ms/op
# Warmup Iteration   8: 851,977 ms/op
# Warmup Iteration   9: 860,343 ms/op
# Warmup Iteration  10: 852,889 ms/op
Iteration   1: 854,162 ms/op
Iteration   2: 852,775 ms/op
Iteration   3: 851,794 ms/op
Iteration   4: 854,244 ms/op
Iteration   5: 852,348 ms/op
Iteration   6: 856,922 ms/op
Iteration   7: 853,808 ms/op
Iteration   8: 855,279 ms/op
Iteration   9: 859,605 ms/op
Iteration  10: 911,009 ms/op


Result "benchmarkFind":
  860,195 ±(99.9%) 27,219 ms/op [Average]
  (min, avg, max) = (851,794, 860,195, 911,009), stdev = 18,004
  CI (99.9%): [832,976, 887,413] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind
# Parameters: (alphabetSize = 32, patternSize = 256)

# Run progress: 98,85% complete, ETA 00:12:19
# Fork: 1 of 1
# Warmup Iteration   1: 1080,396 ms/op
# Warmup Iteration   2: 878,367 ms/op
# Warmup Iteration   3: 846,382 ms/op
# Warmup Iteration   4: 840,179 ms/op
# Warmup Iteration   5: 842,107 ms/op
# Warmup Iteration   6: 841,226 ms/op
# Warmup Iteration   7: 840,296 ms/op
# Warmup Iteration   8: 840,712 ms/op
# Warmup Iteration   9: 841,210 ms/op
# Warmup Iteration  10: 841,934 ms/op
Iteration   1: 842,555 ms/op
Iteration   2: 840,629 ms/op
Iteration   3: 840,915 ms/op
Iteration   4: 841,471 ms/op
Iteration   5: 845,764 ms/op
Iteration   6: 844,624 ms/op
Iteration   7: 844,111 ms/op
Iteration   8: 842,857 ms/op
Iteration   9: 842,332 ms/op
Iteration  10: 843,527 ms/op


Result "benchmarkFind":
  842,879 ±(99.9%) 2,500 ms/op [Average]
  (min, avg, max) = (840,629, 842,879, 845,764), stdev = 1,654
  CI (99.9%): [840,378, 845,379] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternSize = 2)

# Run progress: 98,90% complete, ETA 00:11:49
# Fork: 1 of 1
# Warmup Iteration   1: 8878,204 ms/op
# Warmup Iteration   2: 7763,958 ms/op
# Warmup Iteration   3: 7625,447 ms/op
# Warmup Iteration   4: 7486,760 ms/op
# Warmup Iteration   5: 7575,429 ms/op
# Warmup Iteration   6: 7408,013 ms/op
# Warmup Iteration   7: 7422,657 ms/op
# Warmup Iteration   8: 7417,048 ms/op
# Warmup Iteration   9: 7412,015 ms/op
# Warmup Iteration  10: 7409,995 ms/op
Iteration   1: 7638,249 ms/op
Iteration   2: 7417,482 ms/op
Iteration   3: 7405,527 ms/op
Iteration   4: 7412,267 ms/op
Iteration   5: 7428,194 ms/op
Iteration   6: 7416,184 ms/op
Iteration   7: 7401,217 ms/op
Iteration   8: 7410,555 ms/op
Iteration   9: 7548,567 ms/op
Iteration  10: 7395,242 ms/op


Result "benchmarkFind":
  7447,349 ±(99.9%) 121,467 ms/op [Average]
  (min, avg, max) = (7395,242, 7447,349, 7638,249), stdev = 80,343
  CI (99.9%): [7325,881, 7568,816] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternSize = 4)

# Run progress: 98,94% complete, ETA 00:11:21
# Fork: 1 of 1
# Warmup Iteration   1: 175,365 ms/op
# Warmup Iteration   2: 161,947 ms/op
# Warmup Iteration   3: 162,007 ms/op
# Warmup Iteration   4: 162,456 ms/op
# Warmup Iteration   5: 162,638 ms/op
# Warmup Iteration   6: 165,569 ms/op
# Warmup Iteration   7: 163,756 ms/op
# Warmup Iteration   8: 158,489 ms/op
# Warmup Iteration   9: 148,465 ms/op
# Warmup Iteration  10: 148,084 ms/op
Iteration   1: 148,002 ms/op
Iteration   2: 148,326 ms/op
Iteration   3: 147,742 ms/op
Iteration   4: 147,717 ms/op
Iteration   5: 147,223 ms/op
Iteration   6: 146,901 ms/op
Iteration   7: 146,964 ms/op
Iteration   8: 147,863 ms/op
Iteration   9: 147,443 ms/op
Iteration  10: 147,084 ms/op


Result "benchmarkFind":
  147,526 ±(99.9%) 0,724 ms/op [Average]
  (min, avg, max) = (146,901, 147,526, 148,326), stdev = 0,479
  CI (99.9%): [146,803, 148,250] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternSize = 8)

# Run progress: 98,99% complete, ETA 00:10:51
# Fork: 1 of 1
# Warmup Iteration   1: 122,294 ms/op
# Warmup Iteration   2: 113,826 ms/op
# Warmup Iteration   3: 114,060 ms/op
# Warmup Iteration   4: 114,664 ms/op
# Warmup Iteration   5: 114,984 ms/op
# Warmup Iteration   6: 115,365 ms/op
# Warmup Iteration   7: 103,506 ms/op
# Warmup Iteration   8: 100,269 ms/op
# Warmup Iteration   9: 101,374 ms/op
# Warmup Iteration  10: 99,936 ms/op
Iteration   1: 99,895 ms/op
Iteration   2: 100,049 ms/op
Iteration   3: 99,700 ms/op
Iteration   4: 99,844 ms/op
Iteration   5: 99,910 ms/op
Iteration   6: 99,846 ms/op
Iteration   7: 99,884 ms/op
Iteration   8: 99,764 ms/op
Iteration   9: 99,902 ms/op
Iteration  10: 99,996 ms/op


Result "benchmarkFind":
  99,879 ±(99.9%) 0,153 ms/op [Average]
  (min, avg, max) = (99,700, 99,879, 100,049), stdev = 0,101
  CI (99.9%): [99,726, 100,032] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternSize = 16)

# Run progress: 99,03% complete, ETA 00:10:21
# Fork: 1 of 1
# Warmup Iteration   1: 99,405 ms/op
# Warmup Iteration   2: 92,489 ms/op
# Warmup Iteration   3: 93,090 ms/op
# Warmup Iteration   4: 93,387 ms/op
# Warmup Iteration   5: 93,364 ms/op
# Warmup Iteration   6: 85,495 ms/op
# Warmup Iteration   7: 72,186 ms/op
# Warmup Iteration   8: 72,783 ms/op
# Warmup Iteration   9: 72,335 ms/op
# Warmup Iteration  10: 72,100 ms/op
Iteration   1: 72,148 ms/op
Iteration   2: 72,247 ms/op
Iteration   3: 72,132 ms/op
Iteration   4: 72,363 ms/op
Iteration   5: 72,246 ms/op
Iteration   6: 72,249 ms/op
Iteration   7: 72,309 ms/op
Iteration   8: 71,800 ms/op
Iteration   9: 71,967 ms/op
Iteration  10: 72,152 ms/op


Result "benchmarkFind":
  72,161 ±(99.9%) 0,254 ms/op [Average]
  (min, avg, max) = (71,800, 72,161, 72,363), stdev = 0,168
  CI (99.9%): [71,907, 72,415] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternSize = 32)

# Run progress: 99,08% complete, ETA 00:09:52
# Fork: 1 of 1
# Warmup Iteration   1: 90,931 ms/op
# Warmup Iteration   2: 84,562 ms/op
# Warmup Iteration   3: 85,046 ms/op
# Warmup Iteration   4: 84,464 ms/op
# Warmup Iteration   5: 78,573 ms/op
# Warmup Iteration   6: 68,714 ms/op
# Warmup Iteration   7: 68,545 ms/op
# Warmup Iteration   8: 68,242 ms/op
# Warmup Iteration   9: 68,318 ms/op
# Warmup Iteration  10: 68,002 ms/op
Iteration   1: 68,124 ms/op
Iteration   2: 68,422 ms/op
Iteration   3: 68,705 ms/op
Iteration   4: 68,132 ms/op
Iteration   5: 68,296 ms/op
Iteration   6: 68,318 ms/op
Iteration   7: 68,295 ms/op
Iteration   8: 68,343 ms/op
Iteration   9: 68,318 ms/op
Iteration  10: 68,316 ms/op


Result "benchmarkFind":
  68,327 ±(99.9%) 0,243 ms/op [Average]
  (min, avg, max) = (68,124, 68,327, 68,705), stdev = 0,161
  CI (99.9%): [68,084, 68,570] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternSize = 64)

# Run progress: 99,13% complete, ETA 00:09:22
# Fork: 1 of 1
# Warmup Iteration   1: 86,300 ms/op
# Warmup Iteration   2: 80,383 ms/op
# Warmup Iteration   3: 80,548 ms/op
# Warmup Iteration   4: 80,866 ms/op
# Warmup Iteration   5: 70,311 ms/op
# Warmup Iteration   6: 62,668 ms/op
# Warmup Iteration   7: 62,440 ms/op
# Warmup Iteration   8: 63,198 ms/op
# Warmup Iteration   9: 62,234 ms/op
# Warmup Iteration  10: 62,287 ms/op
Iteration   1: 62,149 ms/op
Iteration   2: 62,690 ms/op
Iteration   3: 62,003 ms/op
Iteration   4: 62,204 ms/op
Iteration   5: 62,189 ms/op
Iteration   6: 61,999 ms/op
Iteration   7: 61,969 ms/op
Iteration   8: 61,840 ms/op
Iteration   9: 62,348 ms/op
Iteration  10: 61,926 ms/op


Result "benchmarkFind":
  62,132 ±(99.9%) 0,375 ms/op [Average]
  (min, avg, max) = (61,840, 62,132, 62,690), stdev = 0,248
  CI (99.9%): [61,756, 62,507] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternSize = 128)

# Run progress: 99,17% complete, ETA 00:08:52
# Fork: 1 of 1
# Warmup Iteration   1: 98,713 ms/op
# Warmup Iteration   2: 85,470 ms/op
# Warmup Iteration   3: 83,437 ms/op
# Warmup Iteration   4: 83,493 ms/op
# Warmup Iteration   5: 80,015 ms/op
# Warmup Iteration   6: 64,129 ms/op
# Warmup Iteration   7: 64,165 ms/op
# Warmup Iteration   8: 63,800 ms/op
# Warmup Iteration   9: 63,918 ms/op
# Warmup Iteration  10: 63,975 ms/op
Iteration   1: 63,860 ms/op
Iteration   2: 63,907 ms/op
Iteration   3: 63,876 ms/op
Iteration   4: 63,788 ms/op
Iteration   5: 63,790 ms/op
Iteration   6: 63,872 ms/op
Iteration   7: 63,849 ms/op
Iteration   8: 63,806 ms/op
Iteration   9: 63,814 ms/op
Iteration  10: 63,888 ms/op


Result "benchmarkFind":
  63,845 ±(99.9%) 0,065 ms/op [Average]
  (min, avg, max) = (63,788, 63,845, 63,907), stdev = 0,043
  CI (99.9%): [63,780, 63,909] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind
# Parameters: (alphabetSize = 64, patternSize = 256)

# Run progress: 99,22% complete, ETA 00:08:23
# Fork: 1 of 1
# Warmup Iteration   1: 90,824 ms/op
# Warmup Iteration   2: 84,153 ms/op
# Warmup Iteration   3: 84,293 ms/op
# Warmup Iteration   4: 84,443 ms/op
# Warmup Iteration   5: 78,204 ms/op
# Warmup Iteration   6: 64,928 ms/op
# Warmup Iteration   7: 66,239 ms/op
# Warmup Iteration   8: 64,935 ms/op
# Warmup Iteration   9: 64,558 ms/op
# Warmup Iteration  10: 64,660 ms/op
Iteration   1: 64,749 ms/op
Iteration   2: 64,892 ms/op
Iteration   3: 64,618 ms/op
Iteration   4: 64,492 ms/op
Iteration   5: 64,715 ms/op
Iteration   6: 64,584 ms/op
Iteration   7: 64,683 ms/op
Iteration   8: 64,951 ms/op
Iteration   9: 64,857 ms/op
Iteration  10: 64,529 ms/op


Result "benchmarkFind":
  64,707 ±(99.9%) 0,236 ms/op [Average]
  (min, avg, max) = (64,492, 64,707, 64,951), stdev = 0,156
  CI (99.9%): [64,471, 64,943] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternSize = 2)

# Run progress: 99,26% complete, ETA 00:07:53
# Fork: 1 of 1
# Warmup Iteration   1: 44813,262 ms/op
# Warmup Iteration   2: 37283,968 ms/op
# Warmup Iteration   3: 36763,722 ms/op
# Warmup Iteration   4: 36929,468 ms/op
# Warmup Iteration   5: 37010,938 ms/op
# Warmup Iteration   6: 36974,017 ms/op
# Warmup Iteration   7: 36923,182 ms/op
# Warmup Iteration   8: 36824,612 ms/op
# Warmup Iteration   9: 36944,505 ms/op
# Warmup Iteration  10: 36988,623 ms/op
Iteration   1: 36792,072 ms/op
Iteration   2: 36887,361 ms/op
Iteration   3: 36793,751 ms/op
Iteration   4: 36941,629 ms/op
Iteration   5: 36969,213 ms/op
Iteration   6: 36794,354 ms/op
Iteration   7: 36917,656 ms/op
Iteration   8: 36838,655 ms/op
Iteration   9: 37001,785 ms/op
Iteration  10: 36938,078 ms/op


Result "benchmarkFind":
  36887,455 ±(99.9%) 118,287 ms/op [Average]
  (min, avg, max) = (36792,072, 36887,455, 37001,785), stdev = 78,240
  CI (99.9%): [36769,168, 37005,743] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternSize = 4)

# Run progress: 99,31% complete, ETA 00:07:28
# Fork: 1 of 1
# Warmup Iteration   1: 813,376 ms/op
# Warmup Iteration   2: 735,017 ms/op
# Warmup Iteration   3: 733,747 ms/op
# Warmup Iteration   4: 731,548 ms/op
# Warmup Iteration   5: 734,251 ms/op
# Warmup Iteration   6: 735,324 ms/op
# Warmup Iteration   7: 732,789 ms/op
# Warmup Iteration   8: 733,829 ms/op
# Warmup Iteration   9: 733,053 ms/op
# Warmup Iteration  10: 732,365 ms/op
Iteration   1: 736,921 ms/op
Iteration   2: 735,256 ms/op
Iteration   3: 733,747 ms/op
Iteration   4: 735,213 ms/op
Iteration   5: 733,769 ms/op
Iteration   6: 740,034 ms/op
Iteration   7: 735,204 ms/op
Iteration   8: 733,832 ms/op
Iteration   9: 744,118 ms/op
Iteration  10: 786,373 ms/op


Result "benchmarkFind":
  741,447 ±(99.9%) 24,380 ms/op [Average]
  (min, avg, max) = (733,747, 741,447, 786,373), stdev = 16,126
  CI (99.9%): [717,067, 765,827] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternSize = 8)

# Run progress: 99,36% complete, ETA 00:06:58
# Fork: 1 of 1
# Warmup Iteration   1: 584,539 ms/op
# Warmup Iteration   2: 535,993 ms/op
# Warmup Iteration   3: 527,976 ms/op
# Warmup Iteration   4: 526,415 ms/op
# Warmup Iteration   5: 526,092 ms/op
# Warmup Iteration   6: 527,870 ms/op
# Warmup Iteration   7: 525,532 ms/op
# Warmup Iteration   8: 535,215 ms/op
# Warmup Iteration   9: 526,809 ms/op
# Warmup Iteration  10: 525,939 ms/op
Iteration   1: 525,548 ms/op
Iteration   2: 525,920 ms/op
Iteration   3: 526,928 ms/op
Iteration   4: 527,540 ms/op
Iteration   5: 525,797 ms/op
Iteration   6: 589,715 ms/op
Iteration   7: 526,622 ms/op
Iteration   8: 527,762 ms/op
Iteration   9: 526,285 ms/op
Iteration  10: 526,892 ms/op


Result "benchmarkFind":
  532,901 ±(99.9%) 30,200 ms/op [Average]
  (min, avg, max) = (525,548, 532,901, 589,715), stdev = 19,976
  CI (99.9%): [502,701, 563,101] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternSize = 16)

# Run progress: 99,40% complete, ETA 00:06:29
# Fork: 1 of 1
# Warmup Iteration   1: 465,043 ms/op
# Warmup Iteration   2: 423,438 ms/op
# Warmup Iteration   3: 425,216 ms/op
# Warmup Iteration   4: 423,001 ms/op
# Warmup Iteration   5: 423,309 ms/op
# Warmup Iteration   6: 421,844 ms/op
# Warmup Iteration   7: 423,038 ms/op
# Warmup Iteration   8: 422,684 ms/op
# Warmup Iteration   9: 423,349 ms/op
# Warmup Iteration  10: 428,596 ms/op
Iteration   1: 423,389 ms/op
Iteration   2: 424,301 ms/op
Iteration   3: 424,473 ms/op
Iteration   4: 421,892 ms/op
Iteration   5: 425,136 ms/op
Iteration   6: 421,958 ms/op
Iteration   7: 425,681 ms/op
Iteration   8: 423,318 ms/op
Iteration   9: 412,942 ms/op
Iteration  10: 306,039 ms/op


Result "benchmarkFind":
  410,913 ±(99.9%) 55,978 ms/op [Average]
  (min, avg, max) = (306,039, 410,913, 425,681), stdev = 37,026
  CI (99.9%): [354,935, 466,891] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternSize = 32)

# Run progress: 99,45% complete, ETA 00:05:59
# Fork: 1 of 1
# Warmup Iteration   1: 448,333 ms/op
# Warmup Iteration   2: 397,690 ms/op
# Warmup Iteration   3: 400,513 ms/op
# Warmup Iteration   4: 398,116 ms/op
# Warmup Iteration   5: 398,697 ms/op
# Warmup Iteration   6: 398,943 ms/op
# Warmup Iteration   7: 399,291 ms/op
# Warmup Iteration   8: 397,764 ms/op
# Warmup Iteration   9: 398,292 ms/op
# Warmup Iteration  10: 397,193 ms/op
Iteration   1: 398,620 ms/op
Iteration   2: 401,150 ms/op
Iteration   3: 398,733 ms/op
Iteration   4: 398,004 ms/op
Iteration   5: 399,107 ms/op
Iteration   6: 399,078 ms/op
Iteration   7: 398,317 ms/op
Iteration   8: 398,944 ms/op
Iteration   9: 388,360 ms/op
Iteration  10: 280,816 ms/op


Result "benchmarkFind":
  386,113 ±(99.9%) 56,177 ms/op [Average]
  (min, avg, max) = (280,816, 386,113, 401,150), stdev = 37,158
  CI (99.9%): [329,936, 442,290] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternSize = 64)

# Run progress: 99,49% complete, ETA 00:05:29
# Fork: 1 of 1
# Warmup Iteration   1: 435,609 ms/op
# Warmup Iteration   2: 392,378 ms/op
# Warmup Iteration   3: 390,035 ms/op
# Warmup Iteration   4: 388,457 ms/op
# Warmup Iteration   5: 389,472 ms/op
# Warmup Iteration   6: 388,475 ms/op
# Warmup Iteration   7: 390,201 ms/op
# Warmup Iteration   8: 389,588 ms/op
# Warmup Iteration   9: 388,512 ms/op
# Warmup Iteration  10: 390,107 ms/op
Iteration   1: 388,707 ms/op
Iteration   2: 389,639 ms/op
Iteration   3: 387,421 ms/op
Iteration   4: 389,412 ms/op
Iteration   5: 388,580 ms/op
Iteration   6: 388,375 ms/op
Iteration   7: 390,687 ms/op
Iteration   8: 389,137 ms/op
Iteration   9: 391,424 ms/op
Iteration  10: 281,230 ms/op


Result "benchmarkFind":
  378,461 ±(99.9%) 51,679 ms/op [Average]
  (min, avg, max) = (281,230, 378,461, 391,424), stdev = 34,183
  CI (99.9%): [326,782, 430,141] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternSize = 128)

# Run progress: 99,54% complete, ETA 00:04:59
# Fork: 1 of 1
# Warmup Iteration   1: 458,128 ms/op
# Warmup Iteration   2: 416,591 ms/op
# Warmup Iteration   3: 411,805 ms/op
# Warmup Iteration   4: 410,921 ms/op
# Warmup Iteration   5: 411,835 ms/op
# Warmup Iteration   6: 409,810 ms/op
# Warmup Iteration   7: 411,863 ms/op
# Warmup Iteration   8: 411,276 ms/op
# Warmup Iteration   9: 409,926 ms/op
# Warmup Iteration  10: 411,616 ms/op
Iteration   1: 410,963 ms/op
Iteration   2: 412,595 ms/op
Iteration   3: 410,625 ms/op
Iteration   4: 412,209 ms/op
Iteration   5: 411,011 ms/op
Iteration   6: 410,959 ms/op
Iteration   7: 410,910 ms/op
Iteration   8: 411,158 ms/op
Iteration   9: 412,634 ms/op
Iteration  10: 303,314 ms/op


Result "benchmarkFind":
  400,638 ±(99.9%) 51,712 ms/op [Average]
  (min, avg, max) = (303,314, 400,638, 412,634), stdev = 34,204
  CI (99.9%): [348,926, 452,350] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind
# Parameters: (alphabetSize = 128, patternSize = 256)

# Run progress: 99,59% complete, ETA 00:04:29
# Fork: 1 of 1
# Warmup Iteration   1: 460,295 ms/op
# Warmup Iteration   2: 415,533 ms/op
# Warmup Iteration   3: 410,942 ms/op
# Warmup Iteration   4: 409,653 ms/op
# Warmup Iteration   5: 412,094 ms/op
# Warmup Iteration   6: 428,914 ms/op
# Warmup Iteration   7: 422,465 ms/op
# Warmup Iteration   8: 413,793 ms/op
# Warmup Iteration   9: 411,345 ms/op
# Warmup Iteration  10: 412,306 ms/op
Iteration   1: 411,717 ms/op
Iteration   2: 413,635 ms/op
Iteration   3: 412,951 ms/op
Iteration   4: 413,363 ms/op
Iteration   5: 412,484 ms/op
Iteration   6: 413,949 ms/op
Iteration   7: 413,017 ms/op
Iteration   8: 412,481 ms/op
Iteration   9: 412,375 ms/op
Iteration  10: 303,627 ms/op


Result "benchmarkFind":
  401,960 ±(99.9%) 52,245 ms/op [Average]
  (min, avg, max) = (303,627, 401,960, 413,949), stdev = 34,557
  CI (99.9%): [349,715, 454,205] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternSize = 2)

# Run progress: 99,63% complete, ETA 00:03:59
# Fork: 1 of 1
# Warmup Iteration   1: 164502,741 ms/op
# Warmup Iteration   2: 147702,666 ms/op
# Warmup Iteration   3: 144537,990 ms/op
# Warmup Iteration   4: 144283,379 ms/op
# Warmup Iteration   5: 144012,482 ms/op
# Warmup Iteration   6: 143543,201 ms/op
# Warmup Iteration   7: 143228,105 ms/op
# Warmup Iteration   8: 144089,546 ms/op
# Warmup Iteration   9: 143415,468 ms/op
# Warmup Iteration  10: 143315,510 ms/op
Iteration   1: 143385,678 ms/op
Iteration   2: 143342,161 ms/op
Iteration   3: 143232,450 ms/op
Iteration   4: 144160,885 ms/op
Iteration   5: 146791,911 ms/op
Iteration   6: 143575,667 ms/op
Iteration   7: 143652,823 ms/op
Iteration   8: 143742,213 ms/op
Iteration   9: 143432,831 ms/op
Iteration  10: 143576,226 ms/op


Result "benchmarkFind":
  143889,285 ±(99.9%) 1590,899 ms/op [Average]
  (min, avg, max) = (143232,450, 143889,285, 146791,911), stdev = 1052,281
  CI (99.9%): [142298,386, 145480,183] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternSize = 4)

# Run progress: 99,68% complete, ETA 00:03:38
# Fork: 1 of 1
# Warmup Iteration   1: 3281,928 ms/op
# Warmup Iteration   2: 2641,399 ms/op
# Warmup Iteration   3: 2598,779 ms/op
# Warmup Iteration   4: 2723,514 ms/op
# Warmup Iteration   5: 2594,769 ms/op
# Warmup Iteration   6: 2609,649 ms/op
# Warmup Iteration   7: 2599,834 ms/op
# Warmup Iteration   8: 2598,005 ms/op
# Warmup Iteration   9: 2596,825 ms/op
# Warmup Iteration  10: 2615,270 ms/op
Iteration   1: 2599,236 ms/op
Iteration   2: 2599,664 ms/op
Iteration   3: 2595,908 ms/op
Iteration   4: 2601,434 ms/op
Iteration   5: 2598,850 ms/op
Iteration   6: 2598,125 ms/op
Iteration   7: 2597,125 ms/op
Iteration   8: 2600,190 ms/op
Iteration   9: 2596,687 ms/op
Iteration  10: 2598,828 ms/op


Result "benchmarkFind":
  2598,605 ±(99.9%) 2,546 ms/op [Average]
  (min, avg, max) = (2595,908, 2598,605, 2601,434), stdev = 1,684
  CI (99.9%): [2596,059, 2601,150] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternSize = 8)

# Run progress: 99,72% complete, ETA 00:03:07
# Fork: 1 of 1
# Warmup Iteration   1: 2410,294 ms/op
# Warmup Iteration   2: 1872,080 ms/op
# Warmup Iteration   3: 1860,487 ms/op
# Warmup Iteration   4: 1865,623 ms/op
# Warmup Iteration   5: 1931,586 ms/op
# Warmup Iteration   6: 1900,749 ms/op
# Warmup Iteration   7: 1867,566 ms/op
# Warmup Iteration   8: 1867,151 ms/op
# Warmup Iteration   9: 1866,755 ms/op
# Warmup Iteration  10: 1867,045 ms/op
Iteration   1: 1869,341 ms/op
Iteration   2: 1864,733 ms/op
Iteration   3: 1874,327 ms/op
Iteration   4: 1867,959 ms/op
Iteration   5: 1870,397 ms/op
Iteration   6: 1868,300 ms/op
Iteration   7: 1868,972 ms/op
Iteration   8: 1870,907 ms/op
Iteration   9: 1868,457 ms/op
Iteration  10: 1871,704 ms/op


Result "benchmarkFind":
  1869,510 ±(99.9%) 3,867 ms/op [Average]
  (min, avg, max) = (1864,733, 1869,510, 1874,327), stdev = 2,558
  CI (99.9%): [1865,643, 1873,377] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternSize = 16)

# Run progress: 99,77% complete, ETA 00:02:36
# Fork: 1 of 1
# Warmup Iteration   1: 2035,005 ms/op
# Warmup Iteration   2: 1496,110 ms/op
# Warmup Iteration   3: 1495,605 ms/op
# Warmup Iteration   4: 1492,192 ms/op
# Warmup Iteration   5: 1488,678 ms/op
# Warmup Iteration   6: 1488,706 ms/op
# Warmup Iteration   7: 1490,760 ms/op
# Warmup Iteration   8: 1490,761 ms/op
# Warmup Iteration   9: 1491,323 ms/op
# Warmup Iteration  10: 1492,037 ms/op
Iteration   1: 1487,996 ms/op
Iteration   2: 1494,569 ms/op
Iteration   3: 1491,701 ms/op
Iteration   4: 1491,155 ms/op
Iteration   5: 1502,314 ms/op
Iteration   6: 1491,891 ms/op
Iteration   7: 1605,999 ms/op
Iteration   8: 1492,361 ms/op
Iteration   9: 1492,455 ms/op
Iteration  10: 1489,811 ms/op


Result "benchmarkFind":
  1504,025 ±(99.9%) 54,475 ms/op [Average]
  (min, avg, max) = (1487,996, 1504,025, 1605,999), stdev = 36,032
  CI (99.9%): [1449,550, 1558,500] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternSize = 32)

# Run progress: 99,82% complete, ETA 00:02:05
# Fork: 1 of 1
# Warmup Iteration   1: 1933,119 ms/op
# Warmup Iteration   2: 1393,832 ms/op
# Warmup Iteration   3: 1386,539 ms/op
# Warmup Iteration   4: 1386,496 ms/op
# Warmup Iteration   5: 1385,878 ms/op
# Warmup Iteration   6: 1382,072 ms/op
# Warmup Iteration   7: 1386,809 ms/op
# Warmup Iteration   8: 1386,532 ms/op
# Warmup Iteration   9: 1384,429 ms/op
# Warmup Iteration  10: 1387,848 ms/op
Iteration   1: 1383,071 ms/op
Iteration   2: 1391,978 ms/op
Iteration   3: 1388,621 ms/op
Iteration   4: 1388,398 ms/op
Iteration   5: 1381,997 ms/op
Iteration   6: 1385,446 ms/op
Iteration   7: 1389,415 ms/op
Iteration   8: 1387,276 ms/op
Iteration   9: 1387,381 ms/op
Iteration  10: 1383,115 ms/op


Result "benchmarkFind":
  1386,670 ±(99.9%) 4,842 ms/op [Average]
  (min, avg, max) = (1381,997, 1386,670, 1391,978), stdev = 3,203
  CI (99.9%): [1381,828, 1391,511] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternSize = 64)

# Run progress: 99,86% complete, ETA 00:01:33
# Fork: 1 of 1
# Warmup Iteration   1: 1915,745 ms/op
# Warmup Iteration   2: 1374,406 ms/op
# Warmup Iteration   3: 1365,637 ms/op
# Warmup Iteration   4: 1362,847 ms/op
# Warmup Iteration   5: 1366,020 ms/op
# Warmup Iteration   6: 1361,429 ms/op
# Warmup Iteration   7: 1364,041 ms/op
# Warmup Iteration   8: 1365,017 ms/op
# Warmup Iteration   9: 1365,958 ms/op
# Warmup Iteration  10: 1359,561 ms/op
Iteration   1: 1467,760 ms/op
Iteration   2: 1360,510 ms/op
Iteration   3: 1356,735 ms/op
Iteration   4: 1362,938 ms/op
Iteration   5: 1361,038 ms/op
Iteration   6: 1360,055 ms/op
Iteration   7: 1361,110 ms/op
Iteration   8: 1360,134 ms/op
Iteration   9: 1357,522 ms/op
Iteration  10: 1362,522 ms/op


Result "benchmarkFind":
  1371,032 ±(99.9%) 51,466 ms/op [Average]
  (min, avg, max) = (1356,735, 1371,032, 1467,760), stdev = 34,042
  CI (99.9%): [1319,566, 1422,499] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternSize = 128)

# Run progress: 99,91% complete, ETA 00:01:02
# Fork: 1 of 1
# Warmup Iteration   1: 1980,675 ms/op
# Warmup Iteration   2: 1444,856 ms/op
# Warmup Iteration   3: 1437,304 ms/op
# Warmup Iteration   4: 1431,637 ms/op
# Warmup Iteration   5: 1432,830 ms/op
# Warmup Iteration   6: 1437,936 ms/op
# Warmup Iteration   7: 1428,893 ms/op
# Warmup Iteration   8: 1436,638 ms/op
# Warmup Iteration   9: 1430,950 ms/op
# Warmup Iteration  10: 1432,387 ms/op
Iteration   1: 1436,440 ms/op
Iteration   2: 1434,642 ms/op
Iteration   3: 1431,280 ms/op
Iteration   4: 1433,231 ms/op
Iteration   5: 1436,777 ms/op
Iteration   6: 1429,490 ms/op
Iteration   7: 1437,793 ms/op
Iteration   8: 1434,708 ms/op
Iteration   9: 1430,417 ms/op
Iteration  10: 1435,168 ms/op


Result "benchmarkFind":
  1433,995 ±(99.9%) 4,261 ms/op [Average]
  (min, avg, max) = (1429,490, 1433,995, 1437,793), stdev = 2,819
  CI (99.9%): [1429,733, 1438,256] (assumes normal distribution)


# JMH 1.11.2 (released 61 days ago)
# VM version: JDK 1.8.0_66, VM 25.66-b18
# VM invoker: C:\Program Files\Java\jre1.8.0_66\bin\java.exe
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.almondtools.stringbench.SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind
# Parameters: (alphabetSize = 256, patternSize = 256)

# Run progress: 99,95% complete, ETA 00:00:31
# Fork: 1 of 1
# Warmup Iteration   1: 1944,563 ms/op
# Warmup Iteration   2: 1409,638 ms/op
# Warmup Iteration   3: 1409,019 ms/op
# Warmup Iteration   4: 1499,360 ms/op
# Warmup Iteration   5: 1396,068 ms/op
# Warmup Iteration   6: 1396,838 ms/op
# Warmup Iteration   7: 1395,390 ms/op
# Warmup Iteration   8: 1392,951 ms/op
# Warmup Iteration   9: 1396,460 ms/op
# Warmup Iteration  10: 1392,427 ms/op
Iteration   1: 1395,493 ms/op
Iteration   2: 1396,037 ms/op
Iteration   3: 1392,324 ms/op
Iteration   4: 1393,717 ms/op
Iteration   5: 1392,425 ms/op
Iteration   6: 1389,082 ms/op
Iteration   7: 1410,745 ms/op
Iteration   8: 1392,945 ms/op
Iteration   9: 1393,299 ms/op
Iteration  10: 1392,066 ms/op


Result "benchmarkFind":
  1394,813 ±(99.9%) 8,945 ms/op [Average]
  (min, avg, max) = (1389,082, 1394,813, 1410,745), stdev = 5,917
  CI (99.9%): [1385,868, 1403,759] (assumes normal distribution)


# Run complete. Total time: 18:54:08

Benchmark                                           (alphabetSize)  (patternNumber)  (patternSize)  Mode  Cnt       Score      Error  Units
JavaIndexOfBenchmark.benchmarkFind                               2              N/A              2  avgt   10       0,115 ±    0,001  ms/op
JavaIndexOfBenchmark.benchmarkFind                               2              N/A              4  avgt   10       0,432 ±    0,001  ms/op
JavaIndexOfBenchmark.benchmarkFind                               2              N/A              8  avgt   10      33,306 ±    0,172  ms/op
JavaIndexOfBenchmark.benchmarkFind                               2              N/A             16  avgt   10     501,618 ±   27,993  ms/op
JavaIndexOfBenchmark.benchmarkFind                               2              N/A             32  avgt   10     500,116 ±    3,332  ms/op
JavaIndexOfBenchmark.benchmarkFind                               2              N/A             64  avgt   10     501,710 ±    1,955  ms/op
JavaIndexOfBenchmark.benchmarkFind                               2              N/A            128  avgt   10     502,374 ±    2,833  ms/op
JavaIndexOfBenchmark.benchmarkFind                               2              N/A            256  avgt   10     501,013 ±    2,486  ms/op
JavaIndexOfBenchmark.benchmarkFind                               4              N/A              2  avgt   10       0,390 ±    0,001  ms/op
JavaIndexOfBenchmark.benchmarkFind                               4              N/A              4  avgt   10      20,675 ±    0,112  ms/op
JavaIndexOfBenchmark.benchmarkFind                               4              N/A              8  avgt   10     323,145 ±    1,474  ms/op
JavaIndexOfBenchmark.benchmarkFind                               4              N/A             16  avgt   10     291,344 ±   16,520  ms/op
JavaIndexOfBenchmark.benchmarkFind                               4              N/A             32  avgt   10     286,654 ±    2,453  ms/op
JavaIndexOfBenchmark.benchmarkFind                               4              N/A             64  avgt   10     303,631 ±    6,296  ms/op
JavaIndexOfBenchmark.benchmarkFind                               4              N/A            128  avgt   10     298,603 ±    1,248  ms/op
JavaIndexOfBenchmark.benchmarkFind                               4              N/A            256  avgt   10     299,424 ±    5,616  ms/op
JavaIndexOfBenchmark.benchmarkFind                               8              N/A              2  avgt   10       1,181 ±    0,007  ms/op
JavaIndexOfBenchmark.benchmarkFind                               8              N/A              4  avgt   10     168,898 ±    0,822  ms/op
JavaIndexOfBenchmark.benchmarkFind                               8              N/A              8  avgt   10     144,094 ±    7,415  ms/op
JavaIndexOfBenchmark.benchmarkFind                               8              N/A             16  avgt   10     155,438 ±    9,005  ms/op
JavaIndexOfBenchmark.benchmarkFind                               8              N/A             32  avgt   10     164,451 ±    9,180  ms/op
JavaIndexOfBenchmark.benchmarkFind                               8              N/A             64  avgt   10     150,016 ±    8,110  ms/op
JavaIndexOfBenchmark.benchmarkFind                               8              N/A            128  avgt   10     151,111 ±    5,902  ms/op
JavaIndexOfBenchmark.benchmarkFind                               8              N/A            256  avgt   10     149,247 ±    6,344  ms/op
JavaIndexOfBenchmark.benchmarkFind                              16              N/A              2  avgt   10       8,822 ±    0,594  ms/op
JavaIndexOfBenchmark.benchmarkFind                              16              N/A              4  avgt   10     101,539 ±    2,148  ms/op
JavaIndexOfBenchmark.benchmarkFind                              16              N/A              8  avgt   10      83,516 ±    0,307  ms/op
JavaIndexOfBenchmark.benchmarkFind                              16              N/A             16  avgt   10      84,020 ±    0,634  ms/op
JavaIndexOfBenchmark.benchmarkFind                              16              N/A             32  avgt   10      84,878 ±    0,605  ms/op
JavaIndexOfBenchmark.benchmarkFind                              16              N/A             64  avgt   10      82,979 ±    0,307  ms/op
JavaIndexOfBenchmark.benchmarkFind                              16              N/A            128  avgt   10      98,948 ±    1,311  ms/op
JavaIndexOfBenchmark.benchmarkFind                              16              N/A            256  avgt   10      83,522 ±    0,565  ms/op
JavaIndexOfBenchmark.benchmarkFind                              32              N/A              2  avgt   10      20,106 ±    2,324  ms/op
JavaIndexOfBenchmark.benchmarkFind                              32              N/A              4  avgt   10     562,974 ±    8,186  ms/op
JavaIndexOfBenchmark.benchmarkFind                              32              N/A              8  avgt   10     461,616 ±   43,421  ms/op
JavaIndexOfBenchmark.benchmarkFind                              32              N/A             16  avgt   10     453,844 ±    6,273  ms/op
JavaIndexOfBenchmark.benchmarkFind                              32              N/A             32  avgt   10     465,431 ±   39,547  ms/op
JavaIndexOfBenchmark.benchmarkFind                              32              N/A             64  avgt   10     449,420 ±    1,930  ms/op
JavaIndexOfBenchmark.benchmarkFind                              32              N/A            128  avgt   10     458,138 ±    7,915  ms/op
JavaIndexOfBenchmark.benchmarkFind                              32              N/A            256  avgt   10     448,710 ±    1,799  ms/op
JavaIndexOfBenchmark.benchmarkFind                              64              N/A              2  avgt   10      59,030 ±    1,219  ms/op
JavaIndexOfBenchmark.benchmarkFind                              64              N/A              4  avgt   10      39,673 ±    0,768  ms/op
JavaIndexOfBenchmark.benchmarkFind                              64              N/A              8  avgt   10      39,674 ±    0,248  ms/op
JavaIndexOfBenchmark.benchmarkFind                              64              N/A             16  avgt   10      39,706 ±    0,243  ms/op
JavaIndexOfBenchmark.benchmarkFind                              64              N/A             32  avgt   10      40,380 ±    0,255  ms/op
JavaIndexOfBenchmark.benchmarkFind                              64              N/A             64  avgt   10      54,723 ±    0,299  ms/op
JavaIndexOfBenchmark.benchmarkFind                              64              N/A            128  avgt   10      55,240 ±    0,955  ms/op
JavaIndexOfBenchmark.benchmarkFind                              64              N/A            256  avgt   10      40,360 ±    1,146  ms/op
JavaIndexOfBenchmark.benchmarkFind                             128              N/A              2  avgt   10     145,935 ±    1,144  ms/op
JavaIndexOfBenchmark.benchmarkFind                             128              N/A              4  avgt   10     128,119 ±    4,086  ms/op
JavaIndexOfBenchmark.benchmarkFind                             128              N/A              8  avgt   10     127,477 ±    0,827  ms/op
JavaIndexOfBenchmark.benchmarkFind                             128              N/A             16  avgt   10     128,245 ±    0,961  ms/op
JavaIndexOfBenchmark.benchmarkFind                             128              N/A             32  avgt   10     129,137 ±    1,186  ms/op
JavaIndexOfBenchmark.benchmarkFind                             128              N/A             64  avgt   10     142,434 ±    2,938  ms/op
JavaIndexOfBenchmark.benchmarkFind                             128              N/A            128  avgt   10     143,628 ±    5,422  ms/op
JavaIndexOfBenchmark.benchmarkFind                             128              N/A            256  avgt   10     142,667 ±    3,562  ms/op
JavaIndexOfBenchmark.benchmarkFind                             256              N/A              2  avgt   10     498,406 ±    2,894  ms/op
JavaIndexOfBenchmark.benchmarkFind                             256              N/A              4  avgt   10     453,845 ±    2,423  ms/op
JavaIndexOfBenchmark.benchmarkFind                             256              N/A              8  avgt   10     454,239 ±   15,065  ms/op
JavaIndexOfBenchmark.benchmarkFind                             256              N/A             16  avgt   10     450,628 ±    3,773  ms/op
JavaIndexOfBenchmark.benchmarkFind                             256              N/A             32  avgt   10     456,145 ±   16,761  ms/op
JavaIndexOfBenchmark.benchmarkFind                             256              N/A             64  avgt   10     448,245 ±    0,924  ms/op
JavaIndexOfBenchmark.benchmarkFind                             256              N/A            128  avgt   10     453,028 ±    2,160  ms/op
JavaIndexOfBenchmark.benchmarkFind                             256              N/A            256  avgt   10     453,576 ±   11,400  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          2                2              2  avgt   10       0,072 ±    0,001  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          2                2              4  avgt   10       0,244 ±    0,004  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          2                2              8  avgt   10       1,650 ±    0,010  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          2                2             16  avgt   10      15,609 ±    0,090  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          2                2             32  avgt   10      14,493 ±    1,435  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          2                2             64  avgt   10      15,452 ±    0,108  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          2                2            128  avgt   10      15,047 ±    0,031  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          2                2            256  avgt   10      15,572 ±    0,125  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          2                8              4  avgt   10       0,825 ±    0,003  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          2                8              8  avgt   10      11,161 ±    0,038  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          2                8             16  avgt   10      63,995 ±    0,367  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          2                8             32  avgt   10      60,968 ±    3,722  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          2                8             64  avgt   10      61,911 ±    0,394  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          2                8            128  avgt   10      60,756 ±    0,397  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          2                8            256  avgt   10      62,249 ±    1,302  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          2               32              8  avgt   10      62,471 ±    0,206  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          2               32             16  avgt   10     318,038 ±    1,543  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          2               32             32  avgt   10     230,818 ±   17,693  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          2               32             64  avgt   10     248,403 ±    1,795  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          2               32            128  avgt   10     251,213 ±    6,963  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          2               32            256  avgt   10     249,220 ±    6,858  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          2              128             32  avgt   10     887,286 ±   10,313  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          2              128             64  avgt   10     886,037 ±    5,278  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          2              128            128  avgt   10     894,614 ±   10,492  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          2              128            256  avgt   10     874,303 ±   23,404  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          4                2              2  avgt   10       0,124 ±    0,002  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          4                2              4  avgt   10       1,400 ±    0,010  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          4                2              8  avgt   10       8,410 ±    0,035  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          4                2             16  avgt   10       8,173 ±    0,037  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          4                2             32  avgt   10       9,627 ±    0,217  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          4                2             64  avgt   10       8,704 ±    0,425  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          4                2            128  avgt   10       9,051 ±    0,474  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          4                2            256  avgt   10       8,866 ±    0,031  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          4                8              2  avgt   10       0,765 ±    0,028  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          4                8              4  avgt   10      19,882 ±    0,101  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          4                8              8  avgt   10      38,643 ±    0,146  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          4                8             16  avgt   10      36,340 ±    2,765  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          4                8             32  avgt   10      36,016 ±    0,160  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          4                8             64  avgt   10      35,757 ±    0,185  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          4                8            128  avgt   10      35,663 ±    1,145  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          4                8            256  avgt   10      34,768 ±    0,062  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          4               32              4  avgt   10      93,449 ±    0,609  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          4               32              8  avgt   10     198,099 ±    0,911  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          4               32             16  avgt   10     136,792 ±    5,161  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          4               32             32  avgt   10     165,077 ±   10,218  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          4               32             64  avgt   10     143,479 ±    1,815  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          4               32            128  avgt   10     147,648 ±   10,855  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          4               32            256  avgt   10     151,356 ±   10,666  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          4              128              4  avgt   10     181,862 ±   12,566  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          4              128             16  avgt   10     536,018 ±   21,932  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          4              128             32  avgt   10     534,565 ±   10,912  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          4              128             64  avgt   10     598,037 ±   50,077  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          4              128            128  avgt   10     548,051 ±   18,242  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          4              128            256  avgt   10     537,527 ±   21,797  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          8                2              2  avgt   10       0,212 ±    0,011  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          8                2              4  avgt   10       7,659 ±    0,544  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          8                2              8  avgt   10       4,366 ±    0,219  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          8                2             16  avgt   10       4,560 ±    0,161  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          8                2             32  avgt   10       5,021 ±    0,600  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          8                2             64  avgt   10       4,936 ±    0,640  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          8                2            128  avgt   10       4,315 ±    0,025  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          8                2            256  avgt   10       4,560 ±    0,341  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          8                8              2  avgt   10       2,055 ±    0,059  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          8                8              4  avgt   10      61,069 ±    2,966  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          8                8              8  avgt   10      18,097 ±    1,317  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          8                8             16  avgt   10      19,092 ±    1,540  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          8                8             32  avgt   10      19,336 ±    2,934  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          8                8             64  avgt   10      18,590 ±    1,171  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          8                8            128  avgt   10      17,895 ±    1,464  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          8                8            256  avgt   10      19,012 ±    1,132  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          8               32              2  avgt   10      12,145 ±    0,275  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          8               32              4  avgt   10     683,824 ±    3,882  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          8               32              8  avgt   10      75,789 ±    3,396  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          8               32             16  avgt   10      75,756 ±    9,842  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          8               32             32  avgt   10      76,410 ±    4,782  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          8               32             64  avgt   10      73,796 ±    8,930  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          8               32            128  avgt   10      77,031 ±    6,090  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          8               32            256  avgt   10      80,280 ±    8,287  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          8              128              4  avgt   10    5894,698 ±  257,832  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          8              128              8  avgt   10     289,710 ±    4,562  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          8              128             16  avgt   10     294,401 ±   15,688  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          8              128             32  avgt   10     297,464 ±   27,445  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          8              128             64  avgt   10     293,840 ±   13,456  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          8              128            128  avgt   10     287,874 ±    1,790  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                          8              128            256  avgt   10     295,906 ±   16,629  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         16                2              2  avgt   10       0,301 ±    0,020  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         16                2              4  avgt   10       2,720 ±    0,129  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         16                2              8  avgt   10       2,635 ±    0,123  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         16                2             16  avgt   10       2,663 ±    0,081  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         16                2             32  avgt   10       2,671 ±    0,138  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         16                2             64  avgt   10       2,589 ±    0,012  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         16                2            128  avgt   10       2,548 ±    0,017  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         16                2            256  avgt   10       2,550 ±    0,068  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         16                8              2  avgt   10       2,694 ±    0,028  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         16                8              4  avgt   10      11,526 ±    0,042  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         16                8              8  avgt   10      10,578 ±    0,394  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         16                8             16  avgt   10      10,713 ±    0,472  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         16                8             32  avgt   10      11,175 ±    1,817  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         16                8             64  avgt   10      12,658 ±    2,040  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         16                8            128  avgt   10      11,752 ±    2,598  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         16                8            256  avgt   10      11,504 ±    2,484  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         16               32              2  avgt   10      29,969 ±    8,941  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         16               32              4  avgt   10      52,687 ±    0,878  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         16               32              8  avgt   10      42,729 ±    2,236  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         16               32             16  avgt   10      42,890 ±    3,866  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         16               32             32  avgt   10      41,088 ±    1,089  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         16               32             64  avgt   10      41,378 ±    2,968  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         16               32            128  avgt   10      42,536 ±    0,313  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         16               32            256  avgt   10      40,931 ±    0,421  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         16              128              2  avgt   10     143,936 ±    0,940  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         16              128              4  avgt   10     321,025 ±    1,059  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         16              128              8  avgt   10     172,450 ±    1,206  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         16              128             16  avgt   10     165,270 ±   11,884  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         16              128             32  avgt   10     161,120 ±    0,789  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         16              128             64  avgt   10     172,519 ±    1,253  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         16              128            128  avgt   10     167,617 ±    1,185  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         16              128            256  avgt   10     161,606 ±    0,571  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         32                2              2  avgt   10       0,545 ±    0,003  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         32                2              4  avgt   10      13,609 ±    0,282  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         32                2              8  avgt   10      14,105 ±    0,088  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         32                2             16  avgt   10      13,959 ±    0,093  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         32                2             32  avgt   10      14,184 ±    0,129  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         32                2             64  avgt   10      14,049 ±    0,067  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         32                2            128  avgt   10      14,168 ±    0,074  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         32                2            256  avgt   10      14,181 ±    0,072  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         32                8              2  avgt   10       3,771 ±    0,021  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         32                8              4  avgt   10      54,155 ±    2,623  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         32                8              8  avgt   10      56,146 ±    0,157  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         32                8             16  avgt   10      55,997 ±    0,165  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         32                8             32  avgt   10      56,839 ±    2,667  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         32                8             64  avgt   10      56,631 ±    0,431  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         32                8            128  avgt   10      56,327 ±    0,776  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         32                8            256  avgt   10      57,159 ±    2,716  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         32               32              2  avgt   10      35,385 ±    0,156  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         32               32              4  avgt   10     226,511 ±    0,917  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         32               32              8  avgt   10     228,606 ±    5,454  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         32               32             16  avgt   10     226,930 ±    1,054  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         32               32             32  avgt   10     228,284 ±    7,122  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         32               32             64  avgt   10     226,826 ±    1,121  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         32               32            128  avgt   10     225,694 ±    1,491  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         32               32            256  avgt   10     227,367 ±    1,715  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         32              128              2  avgt   10     343,373 ±    3,596  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         32              128              4  avgt   10    1004,886 ±    4,672  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         32              128              8  avgt   10     855,764 ±    4,980  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         32              128             16  avgt   10     866,719 ±   26,941  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         32              128             32  avgt   10     869,823 ±    4,973  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         32              128             64  avgt   10     858,451 ±    3,507  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         32              128            128  avgt   10     863,372 ±    5,294  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         32              128            256  avgt   10     858,410 ±   13,303  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         64                2              2  avgt   10       1,373 ±    0,006  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         64                2              4  avgt   10       1,211 ±    0,004  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         64                2              8  avgt   10       1,240 ±    0,011  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         64                2             16  avgt   10       1,216 ±    0,004  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         64                2             32  avgt   10       1,226 ±    0,008  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         64                2             64  avgt   10       1,247 ±    0,009  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         64                2            128  avgt   10       1,232 ±    0,027  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         64                2            256  avgt   10       1,234 ±    0,014  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         64                8              2  avgt   10       7,238 ±    0,053  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         64                8              4  avgt   10       4,894 ±    0,004  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         64                8              8  avgt   10       4,960 ±    0,035  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         64                8             16  avgt   10       4,978 ±    0,038  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         64                8             32  avgt   10       4,942 ±    0,044  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         64                8             64  avgt   10       4,955 ±    0,029  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         64                8            128  avgt   10       4,937 ±    0,033  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         64                8            256  avgt   10       4,986 ±    0,115  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         64               32              2  avgt   10      51,462 ±    0,490  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         64               32              4  avgt   10      19,782 ±    0,134  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         64               32              8  avgt   10      19,880 ±    0,561  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         64               32             16  avgt   10      19,981 ±    0,101  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         64               32             32  avgt   10      19,649 ±    0,156  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         64               32             64  avgt   10      19,679 ±    0,594  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         64               32            128  avgt   10      19,664 ±    0,145  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         64               32            256  avgt   10      19,628 ±    0,101  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         64              128              2  avgt   10     504,716 ±   11,047  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         64              128              4  avgt   10      78,255 ±    0,467  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         64              128              8  avgt   10      78,283 ±    0,385  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         64              128             16  avgt   10      77,381 ±    0,245  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         64              128             32  avgt   10      78,425 ±    0,465  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         64              128             64  avgt   10      78,166 ±    0,403  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         64              128            128  avgt   10      80,471 ±    4,460  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                         64              128            256  avgt   10      80,004 ±    0,858  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                        128                2              2  avgt   10       4,172 ±    0,073  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                        128                2              4  avgt   10       4,059 ±    0,052  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                        128                2              8  avgt   10       4,155 ±    0,173  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                        128                2             16  avgt   10       4,108 ±    0,196  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                        128                2             32  avgt   10       4,216 ±    0,264  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                        128                2             64  avgt   10       4,015 ±    0,028  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                        128                2            128  avgt   10       4,042 ±    0,173  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                        128                2            256  avgt   10       3,977 ±    0,045  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                        128                8              2  avgt   10      17,487 ±    0,113  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                        128                8              4  avgt   10      16,031 ±    0,779  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                        128                8              8  avgt   10      15,995 ±    0,255  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                        128                8             16  avgt   10      16,000 ±    0,206  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                        128                8             32  avgt   10      15,939 ±    0,719  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                        128                8             64  avgt   10      15,851 ±    0,200  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                        128                8            128  avgt   10      16,015 ±    0,171  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                        128                8            256  avgt   10      16,029 ±    0,969  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                        128               32              2  avgt   10      94,659 ±    1,134  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                        128               32              4  avgt   10      62,698 ±    0,326  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                        128               32              8  avgt   10      63,218 ±    1,015  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                        128               32             16  avgt   10      63,521 ±    0,491  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                        128               32             32  avgt   10      63,983 ±    2,434  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                        128               32             64  avgt   10      63,607 ±    0,690  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                        128               32            128  avgt   10      63,390 ±    1,127  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                        128               32            256  avgt   10      63,797 ±    0,772  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                        128              128              2  avgt   10     745,271 ±    5,567  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                        128              128              4  avgt   10     252,372 ±    2,572  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                        128              128              8  avgt   10     254,000 ±   11,694  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                        128              128             16  avgt   10     251,987 ±    1,507  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                        128              128             32  avgt   10     248,682 ±    0,698  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                        128              128             64  avgt   10     251,561 ±    1,431  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                        128              128            128  avgt   10     248,126 ±    0,688  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                        128              128            256  avgt   10     256,727 ±   16,903  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                        256                2              2  avgt   10      13,826 ±    0,028  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                        256                2              4  avgt   10      13,985 ±    0,056  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                        256                2              8  avgt   10      14,200 ±    0,237  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                        256                2             16  avgt   10      13,993 ±    0,077  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                        256                2             32  avgt   10      14,116 ±    0,082  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                        256                2             64  avgt   10      14,098 ±    0,608  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                        256                2            128  avgt   10      14,181 ±    0,139  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                        256                2            256  avgt   10      14,185 ±    0,046  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                        256                8              2  avgt   10      56,108 ±    0,247  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                        256                8              4  avgt   10      56,498 ±    0,284  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                        256                8              8  avgt   10      56,547 ±    0,267  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                        256                8             16  avgt   10      56,601 ±    0,338  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                        256                8             32  avgt   10      56,729 ±    0,381  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                        256                8             64  avgt   10      57,320 ±    2,786  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                        256                8            128  avgt   10      56,633 ±    0,231  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                        256                8            256  avgt   10      60,925 ±    0,307  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                        256               32              2  avgt   10     249,576 ±   13,245  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                        256               32              4  avgt   10     225,540 ±    1,024  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                        256               32              8  avgt   10     244,688 ±    0,839  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                        256               32             16  avgt   10     226,873 ±    2,800  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                        256               32             32  avgt   10     226,723 ±    1,121  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                        256               32             64  avgt   10     227,884 ±    5,244  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                        256               32            128  avgt   10     223,875 ±    0,529  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                        256               32            256  avgt   10     245,950 ±    1,493  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                        256              128              2  avgt   10    1342,469 ±    3,669  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                        256              128              4  avgt   10     908,955 ±   28,542  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                        256              128              8  avgt   10     893,552 ±    5,055  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                        256              128             16  avgt   10     896,430 ±   14,644  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                        256              128             32  avgt   10     901,272 ±   25,130  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                        256              128             64  avgt   10     900,411 ±   16,945  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                        256              128            128  avgt   10     903,764 ±   18,715  ms/op
JavaIndexOfMultiBenchmark.benchmarkFind                        256              128            256  avgt   10     900,652 ±    4,466  ms/op
JavaRegexBenchmark.benchmarkFind                                 2              N/A              2  avgt   10       0,139 ±    0,006  ms/op
JavaRegexBenchmark.benchmarkFind                                 2              N/A              4  avgt   10       0,501 ±    0,108  ms/op
JavaRegexBenchmark.benchmarkFind                                 2              N/A              8  avgt   10      24,981 ±    0,171  ms/op
JavaRegexBenchmark.benchmarkFind                                 2              N/A             16  avgt   10     348,959 ±    5,854  ms/op
JavaRegexBenchmark.benchmarkFind                                 2              N/A             32  avgt   10     266,497 ±   14,841  ms/op
JavaRegexBenchmark.benchmarkFind                                 2              N/A             64  avgt   10     234,606 ±   46,347  ms/op
JavaRegexBenchmark.benchmarkFind                                 2              N/A            128  avgt   10     198,607 ±   17,003  ms/op
JavaRegexBenchmark.benchmarkFind                                 2              N/A            256  avgt   10     172,375 ±   11,261  ms/op
JavaRegexBenchmark.benchmarkFind                                 4              N/A              2  avgt   10       0,504 ±    0,028  ms/op
JavaRegexBenchmark.benchmarkFind                                 4              N/A              4  avgt   10      20,574 ±    0,201  ms/op
JavaRegexBenchmark.benchmarkFind                                 4              N/A              8  avgt   10     239,233 ±    1,333  ms/op
JavaRegexBenchmark.benchmarkFind                                 4              N/A             16  avgt   10     188,245 ±   24,569  ms/op
JavaRegexBenchmark.benchmarkFind                                 4              N/A             32  avgt   10     158,000 ±   14,169  ms/op
JavaRegexBenchmark.benchmarkFind                                 4              N/A             64  avgt   10     147,644 ±    2,815  ms/op
JavaRegexBenchmark.benchmarkFind                                 4              N/A            128  avgt   10     141,205 ±    0,678  ms/op
JavaRegexBenchmark.benchmarkFind                                 4              N/A            256  avgt   10     107,568 ±    0,762  ms/op
JavaRegexBenchmark.benchmarkFind                                 8              N/A              2  avgt   10       1,886 ±    0,097  ms/op
JavaRegexBenchmark.benchmarkFind                                 8              N/A              4  avgt   10     193,358 ±    1,577  ms/op
JavaRegexBenchmark.benchmarkFind                                 8              N/A              8  avgt   10     131,896 ±    0,997  ms/op
JavaRegexBenchmark.benchmarkFind                                 8              N/A             16  avgt   10      99,241 ±    4,371  ms/op
JavaRegexBenchmark.benchmarkFind                                 8              N/A             32  avgt   10      84,126 ±    0,312  ms/op
JavaRegexBenchmark.benchmarkFind                                 8              N/A             64  avgt   10      83,578 ±    0,379  ms/op
JavaRegexBenchmark.benchmarkFind                                 8              N/A            128  avgt   10      79,209 ±    0,386  ms/op
JavaRegexBenchmark.benchmarkFind                                 8              N/A            256  avgt   10      73,310 ±    0,368  ms/op
JavaRegexBenchmark.benchmarkFind                                16              N/A              2  avgt   10      19,110 ±    0,108  ms/op
JavaRegexBenchmark.benchmarkFind                                16              N/A              4  avgt   10     180,148 ±    1,040  ms/op
JavaRegexBenchmark.benchmarkFind                                16              N/A              8  avgt   10      98,546 ±    0,614  ms/op
JavaRegexBenchmark.benchmarkFind                                16              N/A             16  avgt   10      63,795 ±    2,313  ms/op
JavaRegexBenchmark.benchmarkFind                                16              N/A             32  avgt   10      48,192 ±    0,354  ms/op
JavaRegexBenchmark.benchmarkFind                                16              N/A             64  avgt   10      43,715 ±    0,414  ms/op
JavaRegexBenchmark.benchmarkFind                                16              N/A            128  avgt   10      43,162 ±    1,812  ms/op
JavaRegexBenchmark.benchmarkFind                                16              N/A            256  avgt   10      40,225 ±    0,339  ms/op
JavaRegexBenchmark.benchmarkFind                                32              N/A              2  avgt   10      61,909 ±    0,387  ms/op
JavaRegexBenchmark.benchmarkFind                                32              N/A              4  avgt   10     987,823 ±    3,362  ms/op
JavaRegexBenchmark.benchmarkFind                                32              N/A              8  avgt   10     605,604 ±    4,141  ms/op
JavaRegexBenchmark.benchmarkFind                                32              N/A             16  avgt   10     338,391 ±    9,625  ms/op
JavaRegexBenchmark.benchmarkFind                                32              N/A             32  avgt   10     231,612 ±   40,666  ms/op
JavaRegexBenchmark.benchmarkFind                                32              N/A             64  avgt   10     205,480 ±   40,712  ms/op
JavaRegexBenchmark.benchmarkFind                                32              N/A            128  avgt   10     195,555 ±   33,165  ms/op
JavaRegexBenchmark.benchmarkFind                                32              N/A            256  avgt   10     190,212 ±   29,800  ms/op
JavaRegexBenchmark.benchmarkFind                                64              N/A              2  avgt   10     321,405 ±    2,003  ms/op
JavaRegexBenchmark.benchmarkFind                                64              N/A              4  avgt   10     151,794 ±    1,091  ms/op
JavaRegexBenchmark.benchmarkFind                                64              N/A              8  avgt   10      78,773 ±    2,820  ms/op
JavaRegexBenchmark.benchmarkFind                                64              N/A             16  avgt   10      41,954 ±    0,302  ms/op
JavaRegexBenchmark.benchmarkFind                                64              N/A             32  avgt   10      24,745 ±    0,064  ms/op
JavaRegexBenchmark.benchmarkFind                                64              N/A             64  avgt   10      17,893 ±    0,742  ms/op
JavaRegexBenchmark.benchmarkFind                                64              N/A            128  avgt   10      14,246 ±    0,104  ms/op
JavaRegexBenchmark.benchmarkFind                                64              N/A            256  avgt   10      13,066 ±    0,038  ms/op
JavaRegexBenchmark.benchmarkFind                               128              N/A              2  avgt   10    1248,424 ±   15,289  ms/op
JavaRegexBenchmark.benchmarkFind                               128              N/A              4  avgt   10     525,495 ±    3,006  ms/op
JavaRegexBenchmark.benchmarkFind                               128              N/A              8  avgt   10     261,876 ±   13,368  ms/op
JavaRegexBenchmark.benchmarkFind                               128              N/A             16  avgt   10     158,421 ±    3,822  ms/op
JavaRegexBenchmark.benchmarkFind                               128              N/A             32  avgt   10      89,390 ±    0,294  ms/op
JavaRegexBenchmark.benchmarkFind                               128              N/A             64  avgt   10      69,149 ±    0,377  ms/op
JavaRegexBenchmark.benchmarkFind                               128              N/A            128  avgt   10      87,973 ±    0,242  ms/op
JavaRegexBenchmark.benchmarkFind                               128              N/A            256  avgt   10      79,281 ±    0,156  ms/op
JavaRegexBenchmark.benchmarkFind                               256              N/A              2  avgt   10    4811,649 ±   46,007  ms/op
JavaRegexBenchmark.benchmarkFind                               256              N/A              4  avgt   10    2072,928 ±   16,784  ms/op
JavaRegexBenchmark.benchmarkFind                               256              N/A              8  avgt   10    1074,306 ±   47,037  ms/op
JavaRegexBenchmark.benchmarkFind                               256              N/A             16  avgt   10     551,273 ±    4,015  ms/op
JavaRegexBenchmark.benchmarkFind                               256              N/A             32  avgt   10     315,175 ±   14,742  ms/op
JavaRegexBenchmark.benchmarkFind                               256              N/A             64  avgt   10     251,526 ±    0,980  ms/op
JavaRegexBenchmark.benchmarkFind                               256              N/A            128  avgt   10     377,465 ±    1,347  ms/op
JavaRegexBenchmark.benchmarkFind                               256              N/A            256  avgt   10     346,014 ±    1,544  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            2                2              2  avgt   10       0,078 ±    0,001  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            2                2              4  avgt   10       0,328 ±    0,012  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            2                2              8  avgt   10       2,223 ±    0,056  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            2                2             16  avgt   10      26,465 ±    0,146  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            2                2             32  avgt   10      23,208 ±    1,227  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            2                2             64  avgt   10      23,969 ±    0,190  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            2                2            128  avgt   10      24,199 ±    0,191  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            2                2            256  avgt   10      23,461 ±    1,332  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            2                8              4  avgt   10       0,681 ±    0,004  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            2                8              8  avgt   10      10,291 ±    0,069  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            2                8             16  avgt   10      75,550 ±    0,391  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            2                8             32  avgt   10      74,844 ±    0,645  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            2                8             64  avgt   10      73,830 ±    0,346  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            2                8            128  avgt   10      73,905 ±    0,765  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            2                8            256  avgt   10      74,771 ±    0,791  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            2               32              8  avgt   10      48,550 ±    0,931  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            2               32             16  avgt   10     312,960 ±    1,874  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            2               32             32  avgt   10     279,604 ±    1,903  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            2               32             64  avgt   10     281,209 ±    2,755  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            2               32            128  avgt   10     280,687 ±    2,496  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            2               32            256  avgt   10     275,360 ±    2,218  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            2              128             32  avgt   10    1425,447 ±    7,654  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            2              128             64  avgt   10    1456,767 ±   39,809  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            2              128            128  avgt   10    1405,847 ±   13,787  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            2              128            256  avgt   10    1417,750 ±   43,572  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            4                2              2  avgt   10       0,165 ±    0,003  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            4                2              4  avgt   10       2,073 ±    0,007  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            4                2              8  avgt   10      21,775 ±    1,260  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            4                2             16  avgt   10      22,629 ±    0,107  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            4                2             32  avgt   10      22,803 ±    0,163  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            4                2             64  avgt   10      22,902 ±    0,753  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            4                2            128  avgt   10      22,719 ±    0,137  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            4                2            256  avgt   10      22,785 ±    0,061  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            4                8              2  avgt   10       0,756 ±    0,046  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            4                8              4  avgt   10      19,956 ±    0,113  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            4                8              8  avgt   10      65,326 ±    0,512  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            4                8             16  avgt   10      70,182 ±    3,965  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            4                8             32  avgt   10      69,841 ±    0,733  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            4                8             64  avgt   10      68,716 ±    0,340  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            4                8            128  avgt   10      69,317 ±    1,057  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            4                8            256  avgt   10      69,398 ±    0,478  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            4               32              4  avgt   10      89,517 ±    0,603  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            4               32              8  avgt   10     259,814 ±    2,193  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            4               32             16  avgt   10     242,783 ±    1,854  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            4               32             32  avgt   10     243,566 ±    8,655  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            4               32             64  avgt   10     241,351 ±    2,600  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            4               32            128  avgt   10     238,368 ±    0,773  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            4               32            256  avgt   10     235,502 ±    0,591  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            4              128              4  avgt   10     155,535 ±    1,307  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            4              128             16  avgt   10    1069,505 ±   39,057  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            4              128             32  avgt   10     990,104 ±   10,024  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            4              128             64  avgt   10     976,999 ±    6,095  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            4              128            128  avgt   10    1117,194 ±    9,389  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            4              128            256  avgt   10    1117,409 ±    5,562  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            8                2              2  avgt   10       0,432 ±    0,022  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            8                2              4  avgt   10      19,032 ±    0,163  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            8                2              8  avgt   10      18,403 ±    0,121  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            8                2             16  avgt   10      18,303 ±    0,093  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            8                2             32  avgt   10      18,770 ±    1,028  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            8                2             64  avgt   10      18,274 ±    0,112  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            8                2            128  avgt   10      18,454 ±    0,379  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            8                2            256  avgt   10      18,013 ±    0,102  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            8                8              2  avgt   10       2,432 ±    0,009  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            8                8              4  avgt   10      87,048 ±    0,710  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            8                8              8  avgt   10      60,006 ±    2,008  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            8                8             16  avgt   10      61,285 ±    0,635  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            8                8             32  avgt   10      61,511 ±    0,429  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            8                8             64  avgt   10      63,085 ±    2,196  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            8                8            128  avgt   10      61,949 ±    0,504  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            8                8            256  avgt   10      62,590 ±    0,627  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            8               32              2  avgt   10      12,242 ±    0,595  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            8               32              4  avgt   10     735,736 ±    8,298  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            8               32              8  avgt   10     235,912 ±   10,541  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            8               32             16  avgt   10     235,081 ±    1,144  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            8               32             32  avgt   10     236,452 ±    2,115  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            8               32             64  avgt   10     234,220 ±    0,573  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            8               32            128  avgt   10     236,194 ±    2,165  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            8               32            256  avgt   10     239,092 ±   19,055  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            8              128              4  avgt   10    6051,478 ±  338,048  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            8              128              8  avgt   10     741,429 ±    5,217  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            8              128             16  avgt   10     936,457 ±    4,651  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            8              128             32  avgt   10     975,003 ±   44,571  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            8              128             64  avgt   10     930,195 ±   11,999  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            8              128            128  avgt   10     936,146 ±   28,651  ms/op
JavaRegexMultiBenchmark.benchmarkFind                            8              128            256  avgt   10     732,339 ±    2,593  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           16                2              2  avgt   10       1,170 ±    0,033  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           16                2              4  avgt   10      15,837 ±    0,093  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           16                2              8  avgt   10      16,712 ±    0,940  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           16                2             16  avgt   10      16,482 ±    0,795  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           16                2             32  avgt   10      16,176 ±    0,127  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           16                2             64  avgt   10      15,968 ±    0,068  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           16                2            128  avgt   10      16,226 ±    0,553  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           16                2            256  avgt   10      15,941 ±    0,123  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           16                8              2  avgt   10       4,707 ±    0,032  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           16                8              4  avgt   10      61,113 ±    0,342  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           16                8              8  avgt   10      57,213 ±    1,136  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           16                8             16  avgt   10      61,204 ±    3,058  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           16                8             32  avgt   10      59,441 ±    1,041  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           16                8             64  avgt   10      60,253 ±    1,907  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           16                8            128  avgt   10      58,920 ±    0,220  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           16                8            256  avgt   10      59,819 ±    1,508  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           16               32              2  avgt   10      31,316 ±    0,425  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           16               32              4  avgt   10     191,351 ±    2,552  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           16               32              8  avgt   10     227,584 ±    2,416  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           16               32             16  avgt   10     232,163 ±    1,675  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           16               32             32  avgt   10     231,906 ±    9,471  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           16               32             64  avgt   10     231,903 ±    1,895  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           16               32            128  avgt   10     231,230 ±    1,201  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           16               32            256  avgt   10     230,526 ±    1,125  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           16              128              2  avgt   10     152,732 ±    0,621  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           16              128              4  avgt   10     823,115 ±    9,212  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           16              128              8  avgt   10     924,170 ±   41,347  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           16              128             16  avgt   10     912,860 ±    7,973  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           16              128             32  avgt   10     908,146 ±   10,697  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           16              128             64  avgt   10     988,353 ±   30,313  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           16              128            128  avgt   10     903,244 ±   20,832  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           16              128            256  avgt   10     947,275 ±    4,770  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           32                2              2  avgt   10       4,077 ±    0,093  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           32                2              4  avgt   10     118,138 ±    0,645  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           32                2              8  avgt   10     119,599 ±    5,525  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           32                2             16  avgt   10     118,048 ±    0,812  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           32                2             32  avgt   10     116,470 ±    0,552  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           32                2             64  avgt   10     118,721 ±    5,293  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           32                2            128  avgt   10     119,922 ±    0,880  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           32                2            256  avgt   10     119,717 ±    0,405  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           32                8              2  avgt   10      15,073 ±    0,083  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           32                8              4  avgt   10     464,743 ±   13,575  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           32                8              8  avgt   10     442,761 ±   20,430  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           32                8             16  avgt   10     441,363 ±    8,867  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           32                8             32  avgt   10     441,522 ±   18,115  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           32                8             64  avgt   10     445,528 ±    4,304  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           32                8            128  avgt   10     442,234 ±    3,219  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           32                8            256  avgt   10     447,412 ±    2,041  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           32               32              2  avgt   10      70,981 ±    0,461  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           32               32              4  avgt   10    1445,926 ±   11,283  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           32               32              8  avgt   10    1627,533 ±   11,024  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           32               32             16  avgt   10    1654,055 ±   14,401  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           32               32             32  avgt   10    1657,986 ±   35,632  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           32               32             64  avgt   10    1663,443 ±   25,457  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           32               32            128  avgt   10    1801,669 ±   41,525  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           32               32            256  avgt   10    1645,008 ±   19,066  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           32              128              2  avgt   10     484,934 ±   36,476  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           32              128              4  avgt   10    5447,597 ±   64,045  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           32              128              8  avgt   10    7614,469 ±   69,500  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           32              128             16  avgt   10    7017,913 ±   69,296  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           32              128             32  avgt   10    7451,286 ±  472,206  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           32              128             64  avgt   10    7015,369 ±   50,975  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           32              128            128  avgt   10    7587,320 ±   70,306  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           32              128            256  avgt   10    7570,781 ±  159,078  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           64                2              2  avgt   10      15,149 ±    0,528  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           64                2              4  avgt   10      14,406 ±    0,123  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           64                2              8  avgt   10      14,471 ±    0,076  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           64                2             16  avgt   10      14,555 ±    0,504  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           64                2             32  avgt   10      14,221 ±    0,107  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           64                2             64  avgt   10      14,999 ±    1,753  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           64                2            128  avgt   10      14,443 ±    0,695  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           64                2            256  avgt   10      14,436 ±    0,081  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           64                8              2  avgt   10      58,811 ±    0,621  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           64                8              4  avgt   10      54,182 ±    1,968  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           64                8              8  avgt   10      53,624 ±    0,395  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           64                8             16  avgt   10      53,821 ±    0,405  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           64                8             32  avgt   10      53,561 ±    0,432  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           64                8             64  avgt   10      53,979 ±    0,482  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           64                8            128  avgt   10      53,786 ±    0,262  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           64                8            256  avgt   10      53,205 ±    0,712  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           64               32              2  avgt   10     255,758 ±    1,291  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           64               32              4  avgt   10     212,011 ±   14,246  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           64               32              8  avgt   10     210,455 ±    2,663  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           64               32             16  avgt   10     218,817 ±    2,644  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           64               32             32  avgt   10     231,137 ±    9,783  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           64               32             64  avgt   10     226,178 ±    3,613  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           64               32            128  avgt   10     210,273 ±    0,393  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           64               32            256  avgt   10     208,396 ±    1,802  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           64              128              2  avgt   10    1139,199 ±    7,410  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           64              128              4  avgt   10     784,518 ±   14,861  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           64              128              8  avgt   10     839,101 ±    2,348  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           64              128             16  avgt   10     784,525 ±   10,129  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           64              128             32  avgt   10     859,590 ±    2,876  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           64              128             64  avgt   10     848,780 ±    6,236  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           64              128            128  avgt   10     890,630 ±   18,520  ms/op
JavaRegexMultiBenchmark.benchmarkFind                           64              128            256  avgt   10     922,471 ±    3,635  ms/op
JavaRegexMultiBenchmark.benchmarkFind                          128                2              2  avgt   10      61,521 ±    4,185  ms/op
JavaRegexMultiBenchmark.benchmarkFind                          128                2              4  avgt   10      55,014 ±    0,287  ms/op
JavaRegexMultiBenchmark.benchmarkFind                          128                2              8  avgt   10      55,621 ±    0,294  ms/op
JavaRegexMultiBenchmark.benchmarkFind                          128                2             16  avgt   10      55,679 ±    2,288  ms/op
JavaRegexMultiBenchmark.benchmarkFind                          128                2             32  avgt   10      54,601 ±    0,337  ms/op
JavaRegexMultiBenchmark.benchmarkFind                          128                2             64  avgt   10      55,234 ±    0,625  ms/op
JavaRegexMultiBenchmark.benchmarkFind                          128                2            128  avgt   10      55,114 ±    1,905  ms/op
JavaRegexMultiBenchmark.benchmarkFind                          128                2            256  avgt   10      55,485 ±    0,377  ms/op
JavaRegexMultiBenchmark.benchmarkFind                          128                8              2  avgt   10     201,144 ±    0,258  ms/op
JavaRegexMultiBenchmark.benchmarkFind                          128                8              4  avgt   10     211,990 ±    6,823  ms/op
JavaRegexMultiBenchmark.benchmarkFind                          128                8              8  avgt   10     206,080 ±    1,792  ms/op
JavaRegexMultiBenchmark.benchmarkFind                          128                8             16  avgt   10     205,281 ±    0,984  ms/op
JavaRegexMultiBenchmark.benchmarkFind                          128                8             32  avgt   10     206,056 ±    2,355  ms/op
JavaRegexMultiBenchmark.benchmarkFind                          128                8             64  avgt   10     215,011 ±   10,069  ms/op
JavaRegexMultiBenchmark.benchmarkFind                          128                8            128  avgt   10     216,490 ±    6,560  ms/op
JavaRegexMultiBenchmark.benchmarkFind                          128                8            256  avgt   10     214,764 ±    1,998  ms/op
JavaRegexMultiBenchmark.benchmarkFind                          128               32              2  avgt   10     950,127 ±   16,689  ms/op
JavaRegexMultiBenchmark.benchmarkFind                          128               32              4  avgt   10     826,810 ±    5,981  ms/op
JavaRegexMultiBenchmark.benchmarkFind                          128               32              8  avgt   10     836,665 ±   17,525  ms/op
JavaRegexMultiBenchmark.benchmarkFind                          128               32             16  avgt   10     816,024 ±    3,836  ms/op
JavaRegexMultiBenchmark.benchmarkFind                          128               32             32  avgt   10     846,378 ±    9,875  ms/op
JavaRegexMultiBenchmark.benchmarkFind                          128               32             64  avgt   10     841,653 ±   22,262  ms/op
JavaRegexMultiBenchmark.benchmarkFind                          128               32            128  avgt   10     812,851 ±    2,212  ms/op
JavaRegexMultiBenchmark.benchmarkFind                          128               32            256  avgt   10     900,204 ±   24,882  ms/op
JavaRegexMultiBenchmark.benchmarkFind                          128              128              2  avgt   10    3436,823 ±   80,620  ms/op
JavaRegexMultiBenchmark.benchmarkFind                          128              128              4  avgt   10    3304,073 ±   52,624  ms/op
JavaRegexMultiBenchmark.benchmarkFind                          128              128              8  avgt   10    3069,956 ±   83,975  ms/op
JavaRegexMultiBenchmark.benchmarkFind                          128              128             16  avgt   10    3270,160 ±   45,777  ms/op
JavaRegexMultiBenchmark.benchmarkFind                          128              128             32  avgt   10    3078,035 ±   50,120  ms/op
JavaRegexMultiBenchmark.benchmarkFind                          128              128             64  avgt   10    3223,709 ±   42,576  ms/op
JavaRegexMultiBenchmark.benchmarkFind                          128              128            128  avgt   10    3232,534 ±   16,192  ms/op
JavaRegexMultiBenchmark.benchmarkFind                          128              128            256  avgt   10    3332,004 ±   11,735  ms/op
JavaRegexMultiBenchmark.benchmarkFind                          256                2              2  avgt   10     229,465 ±    8,130  ms/op
JavaRegexMultiBenchmark.benchmarkFind                          256                2              4  avgt   10     222,484 ±    1,324  ms/op
JavaRegexMultiBenchmark.benchmarkFind                          256                2              8  avgt   10     224,495 ±    5,601  ms/op
JavaRegexMultiBenchmark.benchmarkFind                          256                2             16  avgt   10     219,925 ±    4,634  ms/op
JavaRegexMultiBenchmark.benchmarkFind                          256                2             32  avgt   10     218,446 ±    1,259  ms/op
JavaRegexMultiBenchmark.benchmarkFind                          256                2             64  avgt   10     230,896 ±    9,082  ms/op
JavaRegexMultiBenchmark.benchmarkFind                          256                2            128  avgt   10     214,904 ±    0,756  ms/op
JavaRegexMultiBenchmark.benchmarkFind                          256                2            256  avgt   10     224,109 ±    4,495  ms/op
JavaRegexMultiBenchmark.benchmarkFind                          256                8              2  avgt   10     798,712 ±    4,610  ms/op
JavaRegexMultiBenchmark.benchmarkFind                          256                8              4  avgt   10     828,577 ±    3,785  ms/op
JavaRegexMultiBenchmark.benchmarkFind                          256                8              8  avgt   10     818,854 ±    1,263  ms/op
JavaRegexMultiBenchmark.benchmarkFind                          256                8             16  avgt   10     825,090 ±   22,379  ms/op
JavaRegexMultiBenchmark.benchmarkFind                          256                8             32  avgt   10     815,613 ±    9,482  ms/op
JavaRegexMultiBenchmark.benchmarkFind                          256                8             64  avgt   10     832,198 ±   27,352  ms/op
JavaRegexMultiBenchmark.benchmarkFind                          256                8            128  avgt   10     812,425 ±    5,189  ms/op
JavaRegexMultiBenchmark.benchmarkFind                          256                8            256  avgt   10     822,415 ±    4,744  ms/op
JavaRegexMultiBenchmark.benchmarkFind                          256               32              2  avgt   10    3185,017 ±   44,941  ms/op
JavaRegexMultiBenchmark.benchmarkFind                          256               32              4  avgt   10    3233,949 ±   26,354  ms/op
JavaRegexMultiBenchmark.benchmarkFind                          256               32              8  avgt   10    3336,975 ±   11,891  ms/op
JavaRegexMultiBenchmark.benchmarkFind                          256               32             16  avgt   10    3362,007 ±   13,184  ms/op
JavaRegexMultiBenchmark.benchmarkFind                          256               32             32  avgt   10    3282,870 ±   67,647  ms/op
JavaRegexMultiBenchmark.benchmarkFind                          256               32             64  avgt   10    3269,737 ±   23,301  ms/op
JavaRegexMultiBenchmark.benchmarkFind                          256               32            128  avgt   10    3490,254 ±   41,358  ms/op
JavaRegexMultiBenchmark.benchmarkFind                          256               32            256  avgt   10    3503,017 ±   32,318  ms/op
JavaRegexMultiBenchmark.benchmarkFind                          256              128              2  avgt   10   12899,067 ±  131,070  ms/op
JavaRegexMultiBenchmark.benchmarkFind                          256              128              4  avgt   10   12625,374 ±  187,561  ms/op
JavaRegexMultiBenchmark.benchmarkFind                          256              128              8  avgt   10   12590,047 ±  109,516  ms/op
JavaRegexMultiBenchmark.benchmarkFind                          256              128             16  avgt   10   12832,738 ±  140,665  ms/op
JavaRegexMultiBenchmark.benchmarkFind                          256              128             32  avgt   10   12802,009 ±   97,630  ms/op
JavaRegexMultiBenchmark.benchmarkFind                          256              128             64  avgt   10   12731,997 ±  138,353  ms/op
JavaRegexMultiBenchmark.benchmarkFind                          256              128            128  avgt   10   12822,939 ±  100,891  ms/op
JavaRegexMultiBenchmark.benchmarkFind                          256              128            256  avgt   10   12792,914 ±  180,978  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             2                2              2  avgt   10       0,139 ±    0,001  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             2                2              4  avgt   10       0,348 ±    0,017  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             2                2              8  avgt   10       2,053 ±    0,017  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             2                2             16  avgt   10      21,179 ±    0,113  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             2                2             32  avgt   10      19,978 ±    0,173  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             2                2             64  avgt   10      20,221 ±    0,325  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             2                2            128  avgt   10      19,894 ±    0,114  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             2                2            256  avgt   10      19,682 ±    0,154  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             2                8              4  avgt   10       1,899 ±    0,008  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             2                8              8  avgt   10      15,058 ±    0,283  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             2                8             16  avgt   10      28,588 ±    0,224  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             2                8             32  avgt   10      19,415 ±    0,204  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             2                8             64  avgt   10      20,195 ±    0,318  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             2                8            128  avgt   10      21,046 ±    0,143  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             2                8            256  avgt   10      20,695 ±    0,176  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             2               32              8  avgt   10     151,473 ±    6,009  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             2               32             16  avgt   10     128,478 ±    0,927  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             2               32             32  avgt   10      21,408 ±    0,301  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             2               32             64  avgt   10      22,908 ±    0,762  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             2               32            128  avgt   10      23,510 ±    0,340  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             2               32            256  avgt   10      21,339 ±    0,504  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             2              128              8  avgt   10     487,011 ±    2,149  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             2              128             16  avgt   10    1466,124 ±    6,120  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             2              128             32  avgt   10      29,005 ±    0,375  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             2              128             64  avgt   10      30,228 ±    1,635  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             2              128            128  avgt   10      30,344 ±    0,915  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             2              128            256  avgt   10      28,039 ±    0,146  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             4                2              2  avgt   10       0,188 ±    0,003  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             4                2              4  avgt   10       1,888 ±    0,016  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             4                2              8  avgt   10      16,742 ±    0,550  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             4                2             16  avgt   10      18,032 ±    0,281  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             4                2             32  avgt   10      18,129 ±    0,284  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             4                2             64  avgt   10      18,433 ±    0,114  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             4                2            128  avgt   10      18,105 ±    0,058  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             4                2            256  avgt   10      18,540 ±    0,328  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             4                8              2  avgt   10       0,969 ±    0,008  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             4                8              4  avgt   10      20,819 ±    0,057  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             4                8              8  avgt   10      25,006 ±    1,658  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             4                8             16  avgt   10      20,276 ±    0,166  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             4                8             32  avgt   10      21,250 ±    0,221  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             4                8             64  avgt   10      20,051 ±    1,026  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             4                8            128  avgt   10      20,291 ±    0,157  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             4                8            256  avgt   10      20,696 ±    0,185  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             4               32              4  avgt   10     160,196 ±    4,093  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             4               32              8  avgt   10      84,501 ±    0,446  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             4               32             16  avgt   10      20,398 ±    0,143  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             4               32             32  avgt   10      21,102 ±    0,177  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             4               32             64  avgt   10      19,787 ±    0,158  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             4               32            128  avgt   10      21,381 ±    0,129  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             4               32            256  avgt   10      20,957 ±    0,147  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             4              128              4  avgt   10     445,895 ±    2,045  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             4              128              8  avgt   10     849,072 ±   20,246  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             4              128             16  avgt   10      23,690 ±    0,139  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             4              128             32  avgt   10      24,734 ±    0,281  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             4              128             64  avgt   10      25,004 ±    0,167  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             4              128            128  avgt   10      26,053 ±    0,208  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             4              128            256  avgt   10      24,836 ±    0,118  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             8                2              2  avgt   10       0,343 ±    0,008  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             8                2              4  avgt   10      14,098 ±    0,076  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             8                2              8  avgt   10      12,785 ±    0,627  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             8                2             16  avgt   10      12,653 ±    0,118  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             8                2             32  avgt   10      12,960 ±    0,103  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             8                2             64  avgt   10      13,090 ±    0,351  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             8                2            128  avgt   10      12,830 ±    0,197  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             8                2            256  avgt   10      12,670 ±    0,129  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             8                8              2  avgt   10       2,308 ±    0,130  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             8                8              4  avgt   10      58,196 ±    0,524  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             8                8              8  avgt   10      17,854 ±    0,171  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             8                8             16  avgt   10      18,525 ±    1,477  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             8                8             32  avgt   10      17,978 ±    0,223  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             8                8             64  avgt   10      17,105 ±    0,050  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             8                8            128  avgt   10      17,595 ±    0,559  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             8                8            256  avgt   10      17,384 ±    0,137  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             8               32              2  avgt   10      14,842 ±    0,056  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             8               32              4  avgt   10     671,453 ±    4,364  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             8               32              8  avgt   10      19,417 ±    0,118  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             8               32             16  avgt   10      19,996 ±    0,148  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             8               32             32  avgt   10      19,808 ±    0,158  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             8               32             64  avgt   10      20,621 ±    0,283  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             8               32            128  avgt   10      18,594 ±    0,511  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             8               32            256  avgt   10      19,622 ±    0,194  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             8              128              4  avgt   10    7430,940 ±  640,464  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             8              128              8  avgt   10      19,576 ±    0,195  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             8              128             16  avgt   10      19,989 ±    0,205  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             8              128             32  avgt   10      20,343 ±    0,121  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             8              128             64  avgt   10      20,389 ±    0,099  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             8              128            128  avgt   10      21,426 ±    0,156  ms/op
SCAhoCorasickBenchmark.benchmarkFind                             8              128            256  avgt   10      21,815 ±    0,199  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            16                2              2  avgt   10       0,694 ±    0,003  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            16                2              4  avgt   10       9,880 ±    0,052  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            16                2              8  avgt   10      10,174 ±    0,186  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            16                2             16  avgt   10      10,415 ±    0,196  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            16                2             32  avgt   10      10,437 ±    0,385  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            16                2             64  avgt   10      10,268 ±    0,123  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            16                2            128  avgt   10      10,415 ±    0,093  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            16                2            256  avgt   10      10,412 ±    0,118  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            16                8              2  avgt   10       2,893 ±    0,009  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            16                8              4  avgt   10      16,353 ±    0,137  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            16                8              8  avgt   10      13,076 ±    0,530  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            16                8             16  avgt   10      16,473 ±    0,356  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            16                8             32  avgt   10      17,314 ±    0,291  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            16                8             64  avgt   10      17,397 ±    0,922  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            16                8            128  avgt   10      16,647 ±    0,246  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            16                8            256  avgt   10      16,712 ±    0,249  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            16               32              2  avgt   10      23,950 ±    0,595  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            16               32              4  avgt   10      25,325 ±    0,129  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            16               32              8  avgt   10      15,970 ±    0,305  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            16               32             16  avgt   10      15,362 ±    0,686  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            16               32             32  avgt   10      15,926 ±    0,081  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            16               32             64  avgt   10      15,703 ±    0,216  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            16               32            128  avgt   10      17,256 ±    1,200  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            16               32            256  avgt   10      15,864 ±    0,155  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            16              128              2  avgt   10     175,250 ±    0,993  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            16              128              4  avgt   10     168,038 ±    1,248  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            16              128              8  avgt   10      20,381 ±    0,107  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            16              128             16  avgt   10      20,255 ±    0,167  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            16              128             32  avgt   10      19,426 ±    0,272  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            16              128             64  avgt   10      20,266 ±    0,213  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            16              128            128  avgt   10      19,747 ±    0,140  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            16              128            256  avgt   10      20,026 ±    0,113  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            32                2              2  avgt   10       2,655 ±    0,022  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            32                2              4  avgt   10      77,703 ±    1,170  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            32                2              8  avgt   10      82,617 ±    0,991  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            32                2             16  avgt   10      90,793 ±    1,213  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            32                2             32  avgt   10      89,362 ±    4,436  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            32                2             64  avgt   10      88,304 ±    0,654  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            32                2            128  avgt   10      87,742 ±    1,152  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            32                2            256  avgt   10      89,145 ±    3,769  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            32                8              2  avgt   10       6,024 ±    0,032  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            32                8              4  avgt   10     143,076 ±    1,415  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            32                8              8  avgt   10     144,576 ±    0,610  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            32                8             16  avgt   10     134,613 ±    1,228  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            32                8             32  avgt   10     147,724 ±    1,080  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            32                8             64  avgt   10     120,402 ±    1,476  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            32                8            128  avgt   10     122,984 ±    3,417  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            32                8            256  avgt   10     138,738 ±    5,283  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            32               32              2  avgt   10      33,905 ±    0,302  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            32               32              4  avgt   10     157,028 ±    1,271  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            32               32              8  avgt   10     167,409 ±    7,835  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            32               32             16  avgt   10     166,921 ±    1,545  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            32               32             32  avgt   10     144,460 ±    1,897  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            32               32             64  avgt   10     147,151 ±    1,659  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            32               32            128  avgt   10     153,998 ±    1,642  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            32               32            256  avgt   10     147,732 ±    1,685  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            32              128              2  avgt   10     352,290 ±    2,657  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            32              128              4  avgt   10     305,010 ±    2,914  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            32              128              8  avgt   10     149,462 ±    4,320  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            32              128             16  avgt   10     162,796 ±    5,127  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            32              128             32  avgt   10     155,045 ±    4,607  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            32              128             64  avgt   10     154,963 ±    2,088  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            32              128            128  avgt   10     160,870 ±    2,831  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            32              128            256  avgt   10     148,307 ±    6,567  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            64                2              2  avgt   10      16,033 ±    0,110  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            64                2              4  avgt   10      15,388 ±    0,145  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            64                2              8  avgt   10      15,924 ±    0,684  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            64                2             16  avgt   10      15,833 ±    0,109  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            64                2             32  avgt   10      15,960 ±    0,249  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            64                2             64  avgt   10      15,893 ±    1,161  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            64                2            128  avgt   10      15,855 ±    0,129  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            64                2            256  avgt   10      16,048 ±    0,245  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            64                8              2  avgt   10      21,848 ±    1,169  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            64                8              4  avgt   10      21,669 ±    0,114  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            64                8              8  avgt   10      21,206 ±    0,316  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            64                8             16  avgt   10      20,552 ±    1,134  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            64                8             32  avgt   10      21,809 ±    0,132  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            64                8             64  avgt   10      21,824 ±    0,121  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            64                8            128  avgt   10      21,630 ±    0,390  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            64                8            256  avgt   10      20,316 ±    0,274  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            64               32              2  avgt   10      54,382 ±    0,594  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            64               32              4  avgt   10      26,199 ±    0,150  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            64               32              8  avgt   10      21,338 ±    0,116  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            64               32             16  avgt   10      22,473 ±    0,718  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            64               32             32  avgt   10      22,072 ±    0,163  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            64               32             64  avgt   10      22,514 ±    0,209  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            64               32            128  avgt   10      22,213 ±    0,236  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            64               32            256  avgt   10      22,914 ±    0,149  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            64              128              2  avgt   10     450,419 ±    1,748  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            64              128              4  avgt   10      24,437 ±    1,137  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            64              128              8  avgt   10      23,525 ±    0,191  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            64              128             16  avgt   10      24,006 ±    0,183  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            64              128             32  avgt   10      24,196 ±    1,421  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            64              128             64  avgt   10      24,791 ±    0,282  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            64              128            128  avgt   10      25,681 ±    0,445  ms/op
SCAhoCorasickBenchmark.benchmarkFind                            64              128            256  avgt   10      24,625 ±    0,156  ms/op
SCAhoCorasickBenchmark.benchmarkFind                           128                2              2  avgt   10      54,990 ±    0,659  ms/op
SCAhoCorasickBenchmark.benchmarkFind                           128                2              4  avgt   10      53,094 ±    0,638  ms/op
SCAhoCorasickBenchmark.benchmarkFind                           128                2              8  avgt   10      52,963 ±    0,362  ms/op
SCAhoCorasickBenchmark.benchmarkFind                           128                2             16  avgt   10      53,308 ±    0,467  ms/op
SCAhoCorasickBenchmark.benchmarkFind                           128                2             32  avgt   10      52,768 ±    0,620  ms/op
SCAhoCorasickBenchmark.benchmarkFind                           128                2             64  avgt   10      52,982 ±    0,672  ms/op
SCAhoCorasickBenchmark.benchmarkFind                           128                2            128  avgt   10      53,106 ±    0,318  ms/op
SCAhoCorasickBenchmark.benchmarkFind                           128                2            256  avgt   10      51,628 ±    0,201  ms/op
SCAhoCorasickBenchmark.benchmarkFind                           128                8              2  avgt   10      72,391 ±    2,626  ms/op
SCAhoCorasickBenchmark.benchmarkFind                           128                8              4  avgt   10      74,490 ±    0,455  ms/op
SCAhoCorasickBenchmark.benchmarkFind                           128                8              8  avgt   10      68,662 ±    3,207  ms/op
SCAhoCorasickBenchmark.benchmarkFind                           128                8             16  avgt   10      77,379 ±    0,779  ms/op
SCAhoCorasickBenchmark.benchmarkFind                           128                8             32  avgt   10      75,680 ±    0,822  ms/op
SCAhoCorasickBenchmark.benchmarkFind                           128                8             64  avgt   10      76,172 ±    1,806  ms/op
SCAhoCorasickBenchmark.benchmarkFind                           128                8            128  avgt   10      78,508 ±    0,837  ms/op
SCAhoCorasickBenchmark.benchmarkFind                           128                8            256  avgt   10      75,147 ±    0,938  ms/op
SCAhoCorasickBenchmark.benchmarkFind                           128               32              2  avgt   10     105,586 ±    1,093  ms/op
SCAhoCorasickBenchmark.benchmarkFind                           128               32              4  avgt   10      80,095 ±    0,983  ms/op
SCAhoCorasickBenchmark.benchmarkFind                           128               32              8  avgt   10      77,855 ±    2,969  ms/op
SCAhoCorasickBenchmark.benchmarkFind                           128               32             16  avgt   10      83,474 ±    1,584  ms/op
SCAhoCorasickBenchmark.benchmarkFind                           128               32             32  avgt   10      80,069 ±    0,619  ms/op
SCAhoCorasickBenchmark.benchmarkFind                           128               32             64  avgt   10      84,967 ±    4,080  ms/op
SCAhoCorasickBenchmark.benchmarkFind                           128               32            128  avgt   10      80,551 ±    0,595  ms/op
SCAhoCorasickBenchmark.benchmarkFind                           128               32            256  avgt   10      85,889 ±    0,622  ms/op
SCAhoCorasickBenchmark.benchmarkFind                           128              128              2  avgt   10     588,693 ±    4,301  ms/op
SCAhoCorasickBenchmark.benchmarkFind                           128              128              4  avgt   10      91,413 ±    1,192  ms/op
SCAhoCorasickBenchmark.benchmarkFind                           128              128              8  avgt   10      92,100 ±    1,178  ms/op
SCAhoCorasickBenchmark.benchmarkFind                           128              128             16  avgt   10      92,188 ±    0,725  ms/op
SCAhoCorasickBenchmark.benchmarkFind                           128              128             32  avgt   10      93,813 ±    1,058  ms/op
SCAhoCorasickBenchmark.benchmarkFind                           128              128             64  avgt   10      93,029 ±    0,532  ms/op
SCAhoCorasickBenchmark.benchmarkFind                           128              128            128  avgt   10      93,325 ±    0,793  ms/op
SCAhoCorasickBenchmark.benchmarkFind                           128              128            256  avgt   10      94,769 ±    0,856  ms/op
SCAhoCorasickBenchmark.benchmarkFind                           256                2              2  avgt   10     193,328 ±   10,241  ms/op
SCAhoCorasickBenchmark.benchmarkFind                           256                2              4  avgt   10     193,697 ±    5,471  ms/op
SCAhoCorasickBenchmark.benchmarkFind                           256                2              8  avgt   10     190,337 ±    2,228  ms/op
SCAhoCorasickBenchmark.benchmarkFind                           256                2             16  avgt   10     201,799 ±   19,422  ms/op
SCAhoCorasickBenchmark.benchmarkFind                           256                2             32  avgt   10     194,842 ±    3,042  ms/op
SCAhoCorasickBenchmark.benchmarkFind                           256                2             64  avgt   10     190,942 ±    7,631  ms/op
SCAhoCorasickBenchmark.benchmarkFind                           256                2            128  avgt   10     191,554 ±    4,343  ms/op
SCAhoCorasickBenchmark.benchmarkFind                           256                2            256  avgt   10     192,892 ±    0,798  ms/op
SCAhoCorasickBenchmark.benchmarkFind                           256                8              2  avgt   10     276,191 ±    7,657  ms/op
SCAhoCorasickBenchmark.benchmarkFind                           256                8              4  avgt   10     280,206 ±    4,519  ms/op
SCAhoCorasickBenchmark.benchmarkFind                           256                8              8  avgt   10     280,856 ±   14,518  ms/op
SCAhoCorasickBenchmark.benchmarkFind                           256                8             16  avgt   10     281,016 ±    1,124  ms/op
SCAhoCorasickBenchmark.benchmarkFind                           256                8             32  avgt   10     279,668 ±    2,088  ms/op
SCAhoCorasickBenchmark.benchmarkFind                           256                8             64  avgt   10     279,998 ±    3,781  ms/op
SCAhoCorasickBenchmark.benchmarkFind                           256                8            128  avgt   10     269,438 ±    2,172  ms/op
SCAhoCorasickBenchmark.benchmarkFind                           256                8            256  avgt   10     276,050 ±    2,057  ms/op
SCAhoCorasickBenchmark.benchmarkFind                           256               32              2  avgt   10     299,722 ±    1,855  ms/op
SCAhoCorasickBenchmark.benchmarkFind                           256               32              4  avgt   10     296,741 ±    1,943  ms/op
SCAhoCorasickBenchmark.benchmarkFind                           256               32              8  avgt   10     293,110 ±   12,121  ms/op
SCAhoCorasickBenchmark.benchmarkFind                           256               32             16  avgt   10     303,346 ±    4,609  ms/op
SCAhoCorasickBenchmark.benchmarkFind                           256               32             32  avgt   10     295,943 ±   11,750  ms/op
SCAhoCorasickBenchmark.benchmarkFind                           256               32             64  avgt   10     295,223 ±    2,387  ms/op
SCAhoCorasickBenchmark.benchmarkFind                           256               32            128  avgt   10     308,744 ±   14,431  ms/op
SCAhoCorasickBenchmark.benchmarkFind                           256               32            256  avgt   10     278,967 ±    2,865  ms/op
SCAhoCorasickBenchmark.benchmarkFind                           256              128              2  avgt   10     762,468 ±    6,968  ms/op
SCAhoCorasickBenchmark.benchmarkFind                           256              128              4  avgt   10     305,044 ±    3,414  ms/op
SCAhoCorasickBenchmark.benchmarkFind                           256              128              8  avgt   10     310,641 ±    1,853  ms/op
SCAhoCorasickBenchmark.benchmarkFind                           256              128             16  avgt   10     324,180 ±   16,279  ms/op
SCAhoCorasickBenchmark.benchmarkFind                           256              128             32  avgt   10     316,987 ±    6,357  ms/op
SCAhoCorasickBenchmark.benchmarkFind                           256              128             64  avgt   10     322,343 ±    2,590  ms/op
SCAhoCorasickBenchmark.benchmarkFind                           256              128            128  avgt   10     329,765 ±    4,459  ms/op
SCAhoCorasickBenchmark.benchmarkFind                           256              128            256  avgt   10     324,993 ±    5,198  ms/op
SCBNDMBenchmark.benchmarkFind                                    2              N/A              2  avgt   10       0,176 ±    0,003  ms/op
SCBNDMBenchmark.benchmarkFind                                    2              N/A              4  avgt   10       0,525 ±    0,008  ms/op
SCBNDMBenchmark.benchmarkFind                                    2              N/A              8  avgt   10      21,137 ±    0,111  ms/op
SCBNDMBenchmark.benchmarkFind                                    2              N/A             16  avgt   10     167,009 ±    0,202  ms/op
SCBNDMBenchmark.benchmarkFind                                    2              N/A             32  avgt   10      90,304 ±    0,463  ms/op
SCBNDMBenchmark.benchmarkFind                                    2              N/A             64  avgt   10      49,391 ±    0,246  ms/op
SCBNDMBenchmark.benchmarkFind                                    2              N/A            128  avgt   10      74,568 ±    0,460  ms/op
SCBNDMBenchmark.benchmarkFind                                    2              N/A            256  avgt   10      56,706 ±    0,270  ms/op
SCBNDMBenchmark.benchmarkFind                                    4              N/A              2  avgt   10       0,567 ±    0,033  ms/op
SCBNDMBenchmark.benchmarkFind                                    4              N/A              4  avgt   10      21,310 ±    0,081  ms/op
SCBNDMBenchmark.benchmarkFind                                    4              N/A              8  avgt   10     168,199 ±    1,051  ms/op
SCBNDMBenchmark.benchmarkFind                                    4              N/A             16  avgt   10      93,338 ±    5,564  ms/op
SCBNDMBenchmark.benchmarkFind                                    4              N/A             32  avgt   10      51,809 ±    0,293  ms/op
SCBNDMBenchmark.benchmarkFind                                    4              N/A             64  avgt   10      28,003 ±    0,169  ms/op
SCBNDMBenchmark.benchmarkFind                                    4              N/A            128  avgt   10      44,779 ±    0,380  ms/op
SCBNDMBenchmark.benchmarkFind                                    4              N/A            256  avgt   10      32,991 ±    0,145  ms/op
SCBNDMBenchmark.benchmarkFind                                    8              N/A              2  avgt   10       2,179 ±    0,020  ms/op
SCBNDMBenchmark.benchmarkFind                                    8              N/A              4  avgt   10     234,492 ±    1,528  ms/op
SCBNDMBenchmark.benchmarkFind                                    8              N/A              8  avgt   10     126,688 ±    3,571  ms/op
SCBNDMBenchmark.benchmarkFind                                    8              N/A             16  avgt   10      66,378 ±    1,391  ms/op
SCBNDMBenchmark.benchmarkFind                                    8              N/A             32  avgt   10      39,887 ±    0,291  ms/op
SCBNDMBenchmark.benchmarkFind                                    8              N/A             64  avgt   10      20,964 ±    0,112  ms/op
SCBNDMBenchmark.benchmarkFind                                    8              N/A            128  avgt   10      35,254 ±    2,268  ms/op
SCBNDMBenchmark.benchmarkFind                                    8              N/A            256  avgt   10      25,543 ±    0,858  ms/op
SCBNDMBenchmark.benchmarkFind                                   16              N/A              2  avgt   10      21,548 ±    0,098  ms/op
SCBNDMBenchmark.benchmarkFind                                   16              N/A              4  avgt   10     202,843 ±    5,270  ms/op
SCBNDMBenchmark.benchmarkFind                                   16              N/A              8  avgt   10     114,659 ±    2,468  ms/op
SCBNDMBenchmark.benchmarkFind                                   16              N/A             16  avgt   10      59,452 ±    0,349  ms/op
SCBNDMBenchmark.benchmarkFind                                   16              N/A             32  avgt   10      28,608 ±    0,095  ms/op
SCBNDMBenchmark.benchmarkFind                                   16              N/A             64  avgt   10      16,449 ±    0,155  ms/op
SCBNDMBenchmark.benchmarkFind                                   16              N/A            128  avgt   10      29,194 ±    0,220  ms/op
SCBNDMBenchmark.benchmarkFind                                   16              N/A            256  avgt   10      21,317 ±    0,148  ms/op
SCBNDMBenchmark.benchmarkFind                                   32              N/A              2  avgt   10      74,582 ±    0,367  ms/op
SCBNDMBenchmark.benchmarkFind                                   32              N/A              4  avgt   10    1564,267 ±   46,488  ms/op
SCBNDMBenchmark.benchmarkFind                                   32              N/A              8  avgt   10     834,565 ±    5,518  ms/op
SCBNDMBenchmark.benchmarkFind                                   32              N/A             16  avgt   10     485,348 ±    2,555  ms/op
SCBNDMBenchmark.benchmarkFind                                   32              N/A             32  avgt   10     265,207 ±    1,405  ms/op
SCBNDMBenchmark.benchmarkFind                                   32              N/A             64  avgt   10     145,582 ±   11,057  ms/op
SCBNDMBenchmark.benchmarkFind                                   32              N/A            128  avgt   10     322,856 ±    0,768  ms/op
SCBNDMBenchmark.benchmarkFind                                   32              N/A            256  avgt   10     244,101 ±   16,748  ms/op
SCBNDMBenchmark.benchmarkFind                                   64              N/A              2  avgt   10     263,788 ±    1,782  ms/op
SCBNDMBenchmark.benchmarkFind                                   64              N/A              4  avgt   10     161,450 ±   18,619  ms/op
SCBNDMBenchmark.benchmarkFind                                   64              N/A              8  avgt   10      78,327 ±    0,513  ms/op
SCBNDMBenchmark.benchmarkFind                                   64              N/A             16  avgt   10      42,826 ±    0,232  ms/op
SCBNDMBenchmark.benchmarkFind                                   64              N/A             32  avgt   10      27,540 ±    0,088  ms/op
SCBNDMBenchmark.benchmarkFind                                   64              N/A             64  avgt   10      14,284 ±    0,121  ms/op
SCBNDMBenchmark.benchmarkFind                                   64              N/A            128  avgt   10      29,360 ±    0,314  ms/op
SCBNDMBenchmark.benchmarkFind                                   64              N/A            256  avgt   10      19,249 ±    0,159  ms/op
SCBNDMBenchmark.benchmarkFind                                  128              N/A              2  avgt   10    1149,978 ±   35,442  ms/op
SCBNDMBenchmark.benchmarkFind                                  128              N/A              4  avgt   10     713,977 ±    3,999  ms/op
SCBNDMBenchmark.benchmarkFind                                  128              N/A              8  avgt   10     317,914 ±    0,686  ms/op
SCBNDMBenchmark.benchmarkFind                                  128              N/A             16  avgt   10     158,199 ±   12,383  ms/op
SCBNDMBenchmark.benchmarkFind                                  128              N/A             32  avgt   10      93,214 ±    3,125  ms/op
SCBNDMBenchmark.benchmarkFind                                  128              N/A             64  avgt   10      71,272 ±    0,609  ms/op
SCBNDMBenchmark.benchmarkFind                                  128              N/A            128  avgt   10     183,628 ±    0,874  ms/op
SCBNDMBenchmark.benchmarkFind                                  128              N/A            256  avgt   10     121,002 ±    1,240  ms/op
SCBNDMBenchmark.benchmarkFind                                  256              N/A              2  avgt   10    4029,582 ±   41,292  ms/op
SCBNDMBenchmark.benchmarkFind                                  256              N/A              4  avgt   10    2660,492 ±   12,429  ms/op
SCBNDMBenchmark.benchmarkFind                                  256              N/A              8  avgt   10    1224,589 ±    8,979  ms/op
SCBNDMBenchmark.benchmarkFind                                  256              N/A             16  avgt   10     631,804 ±    4,212  ms/op
SCBNDMBenchmark.benchmarkFind                                  256              N/A             32  avgt   10     342,824 ±    1,852  ms/op
SCBNDMBenchmark.benchmarkFind                                  256              N/A             64  avgt   10     269,766 ±    1,258  ms/op
SCBNDMBenchmark.benchmarkFind                                  256              N/A            128  avgt   10     689,763 ±    2,793  ms/op
SCBNDMBenchmark.benchmarkFind                                  256              N/A            256  avgt   10     491,072 ±    0,870  ms/op
SCHorspoolBenchmark.benchmarkFind                                2              N/A              2  avgt   10       0,178 ±    0,004  ms/op
SCHorspoolBenchmark.benchmarkFind                                2              N/A              4  avgt   10       0,585 ±    0,004  ms/op
SCHorspoolBenchmark.benchmarkFind                                2              N/A              8  avgt   10      38,237 ±    0,295  ms/op
SCHorspoolBenchmark.benchmarkFind                                2              N/A             16  avgt   10     582,512 ±    6,963  ms/op
SCHorspoolBenchmark.benchmarkFind                                2              N/A             32  avgt   10     569,089 ±    1,598  ms/op
SCHorspoolBenchmark.benchmarkFind                                2              N/A             64  avgt   10     580,746 ±   18,577  ms/op
SCHorspoolBenchmark.benchmarkFind                                2              N/A            128  avgt   10     623,068 ±    3,089  ms/op
SCHorspoolBenchmark.benchmarkFind                                2              N/A            256  avgt   10     587,749 ±    2,270  ms/op
SCHorspoolBenchmark.benchmarkFind                                4              N/A              2  avgt   10       0,531 ±    0,005  ms/op
SCHorspoolBenchmark.benchmarkFind                                4              N/A              4  avgt   10      20,356 ±    0,081  ms/op
SCHorspoolBenchmark.benchmarkFind                                4              N/A              8  avgt   10     211,913 ±    0,860  ms/op
SCHorspoolBenchmark.benchmarkFind                                4              N/A             16  avgt   10     227,389 ±   25,270  ms/op
SCHorspoolBenchmark.benchmarkFind                                4              N/A             32  avgt   10     216,548 ±   15,947  ms/op
SCHorspoolBenchmark.benchmarkFind                                4              N/A             64  avgt   10     216,898 ±   20,279  ms/op
SCHorspoolBenchmark.benchmarkFind                                4              N/A            128  avgt   10     225,035 ±   15,031  ms/op
SCHorspoolBenchmark.benchmarkFind                                4              N/A            256  avgt   10     209,456 ±   21,447  ms/op
SCHorspoolBenchmark.benchmarkFind                                8              N/A              2  avgt   10       1,777 ±    0,013  ms/op
SCHorspoolBenchmark.benchmarkFind                                8              N/A              4  avgt   10     185,938 ±    0,471  ms/op
SCHorspoolBenchmark.benchmarkFind                                8              N/A              8  avgt   10     108,145 ±    3,479  ms/op
SCHorspoolBenchmark.benchmarkFind                                8              N/A             16  avgt   10      75,641 ±    0,313  ms/op
SCHorspoolBenchmark.benchmarkFind                                8              N/A             32  avgt   10      65,745 ±    0,482  ms/op
SCHorspoolBenchmark.benchmarkFind                                8              N/A             64  avgt   10      78,611 ±    4,640  ms/op
SCHorspoolBenchmark.benchmarkFind                                8              N/A            128  avgt   10      77,268 ±    0,953  ms/op
SCHorspoolBenchmark.benchmarkFind                                8              N/A            256  avgt   10      75,249 ±    0,280  ms/op
SCHorspoolBenchmark.benchmarkFind                               16              N/A              2  avgt   10      18,092 ±    0,091  ms/op
SCHorspoolBenchmark.benchmarkFind                               16              N/A              4  avgt   10     153,639 ±    0,843  ms/op
SCHorspoolBenchmark.benchmarkFind                               16              N/A              8  avgt   10      82,174 ±    0,385  ms/op
SCHorspoolBenchmark.benchmarkFind                               16              N/A             16  avgt   10      46,122 ±    0,416  ms/op
SCHorspoolBenchmark.benchmarkFind                               16              N/A             32  avgt   10      33,954 ±    0,206  ms/op
SCHorspoolBenchmark.benchmarkFind                               16              N/A             64  avgt   10      32,390 ±    0,923  ms/op
SCHorspoolBenchmark.benchmarkFind                               16              N/A            128  avgt   10      45,363 ±    0,713  ms/op
SCHorspoolBenchmark.benchmarkFind                               16              N/A            256  avgt   10      42,089 ±    0,305  ms/op
SCHorspoolBenchmark.benchmarkFind                               32              N/A              2  avgt   10      55,783 ±    2,654  ms/op
SCHorspoolBenchmark.benchmarkFind                               32              N/A              4  avgt   10    1342,044 ±   10,362  ms/op
SCHorspoolBenchmark.benchmarkFind                               32              N/A              8  avgt   10     657,604 ±   21,362  ms/op
SCHorspoolBenchmark.benchmarkFind                               32              N/A             16  avgt   10     349,331 ±    1,895  ms/op
SCHorspoolBenchmark.benchmarkFind                               32              N/A             32  avgt   10     224,520 ±   28,344  ms/op
SCHorspoolBenchmark.benchmarkFind                               32              N/A             64  avgt   10     175,320 ±   24,362  ms/op
SCHorspoolBenchmark.benchmarkFind                               32              N/A            128  avgt   10     169,311 ±   21,441  ms/op
SCHorspoolBenchmark.benchmarkFind                               32              N/A            256  avgt   10     211,258 ±    1,056  ms/op
SCHorspoolBenchmark.benchmarkFind                               64              N/A              2  avgt   10     191,573 ±    0,944  ms/op
SCHorspoolBenchmark.benchmarkFind                               64              N/A              4  avgt   10     143,007 ±   10,313  ms/op
SCHorspoolBenchmark.benchmarkFind                               64              N/A              8  avgt   10      63,351 ±    0,227  ms/op
SCHorspoolBenchmark.benchmarkFind                               64              N/A             16  avgt   10      31,196 ±    0,184  ms/op
SCHorspoolBenchmark.benchmarkFind                               64              N/A             32  avgt   10      18,431 ±    0,656  ms/op
SCHorspoolBenchmark.benchmarkFind                               64              N/A             64  avgt   10      11,936 ±    0,059  ms/op
SCHorspoolBenchmark.benchmarkFind                               64              N/A            128  avgt   10      12,023 ±    0,060  ms/op
SCHorspoolBenchmark.benchmarkFind                               64              N/A            256  avgt   10      10,367 ±    0,559  ms/op
SCHorspoolBenchmark.benchmarkFind                              128              N/A              2  avgt   10     817,757 ±    3,141  ms/op
SCHorspoolBenchmark.benchmarkFind                              128              N/A              4  avgt   10     629,987 ±   30,771  ms/op
SCHorspoolBenchmark.benchmarkFind                              128              N/A              8  avgt   10     292,388 ±    2,019  ms/op
SCHorspoolBenchmark.benchmarkFind                              128              N/A             16  avgt   10     121,353 ±    7,457  ms/op
SCHorspoolBenchmark.benchmarkFind                              128              N/A             32  avgt   10      70,083 ±    0,259  ms/op
SCHorspoolBenchmark.benchmarkFind                              128              N/A             64  avgt   10      58,164 ±    0,145  ms/op
SCHorspoolBenchmark.benchmarkFind                              128              N/A            128  avgt   10      83,460 ±    4,993  ms/op
SCHorspoolBenchmark.benchmarkFind                              128              N/A            256  avgt   10      75,477 ±    1,946  ms/op
SCHorspoolBenchmark.benchmarkFind                              256              N/A              2  avgt   10    3899,221 ±   13,895  ms/op
SCHorspoolBenchmark.benchmarkFind                              256              N/A              4  avgt   10    2701,029 ±    5,852  ms/op
SCHorspoolBenchmark.benchmarkFind                              256              N/A              8  avgt   10    1125,261 ±    3,883  ms/op
SCHorspoolBenchmark.benchmarkFind                              256              N/A             16  avgt   10     548,638 ±    3,267  ms/op
SCHorspoolBenchmark.benchmarkFind                              256              N/A             32  avgt   10     300,200 ±    0,946  ms/op
SCHorspoolBenchmark.benchmarkFind                              256              N/A             64  avgt   10     249,386 ±    2,438  ms/op
SCHorspoolBenchmark.benchmarkFind                              256              N/A            128  avgt   10     335,674 ±    0,526  ms/op
SCHorspoolBenchmark.benchmarkFind                              256              N/A            256  avgt   10     288,824 ±    0,630  ms/op
SCKnuthMorrisPrattBenchmark.benchmarkFind                        2              N/A              2  avgt   10       0,182 ±    0,011  ms/op
SCKnuthMorrisPrattBenchmark.benchmarkFind                        2              N/A              4  avgt   10       0,578 ±    0,004  ms/op
SCKnuthMorrisPrattBenchmark.benchmarkFind                        2              N/A              8  avgt   10      43,693 ±    0,248  ms/op
SCKnuthMorrisPrattBenchmark.benchmarkFind                        2              N/A             16  avgt   10     504,034 ±    4,313  ms/op
SCKnuthMorrisPrattBenchmark.benchmarkFind                        2              N/A             32  avgt   10     674,610 ±    3,513  ms/op
SCKnuthMorrisPrattBenchmark.benchmarkFind                        2              N/A             64  avgt   10     677,124 ±   27,878  ms/op
SCKnuthMorrisPrattBenchmark.benchmarkFind                        2              N/A            128  avgt   10     710,822 ±    5,331  ms/op
SCKnuthMorrisPrattBenchmark.benchmarkFind                        2              N/A            256  avgt   10     678,098 ±   23,855  ms/op
SCKnuthMorrisPrattBenchmark.benchmarkFind                        4              N/A              2  avgt   10       0,610 ±    0,006  ms/op
SCKnuthMorrisPrattBenchmark.benchmarkFind                        4              N/A              4  avgt   10      40,787 ±    1,207  ms/op
SCKnuthMorrisPrattBenchmark.benchmarkFind                        4              N/A              8  avgt   10     449,974 ±   14,842  ms/op
SCKnuthMorrisPrattBenchmark.benchmarkFind                        4              N/A             16  avgt   10     584,586 ±    5,529  ms/op
SCKnuthMorrisPrattBenchmark.benchmarkFind                        4              N/A             32  avgt   10     586,079 ±   25,057  ms/op
SCKnuthMorrisPrattBenchmark.benchmarkFind                        4              N/A             64  avgt   10     586,111 ±    4,297  ms/op
SCKnuthMorrisPrattBenchmark.benchmarkFind                        4              N/A            128  avgt   10     576,839 ±    2,628  ms/op
SCKnuthMorrisPrattBenchmark.benchmarkFind                        4              N/A            256  avgt   10     578,030 ±    4,535  ms/op
SCKnuthMorrisPrattBenchmark.benchmarkFind                        8              N/A              2  avgt   10       2,357 ±    0,013  ms/op
SCKnuthMorrisPrattBenchmark.benchmarkFind                        8              N/A              4  avgt   10     339,819 ±    1,843  ms/op
SCKnuthMorrisPrattBenchmark.benchmarkFind                        8              N/A              8  avgt   10     442,063 ±    0,791  ms/op
SCKnuthMorrisPrattBenchmark.benchmarkFind                        8              N/A             16  avgt   10     449,648 ±    2,020  ms/op
SCKnuthMorrisPrattBenchmark.benchmarkFind                        8              N/A             32  avgt   10     457,082 ±    1,647  ms/op
SCKnuthMorrisPrattBenchmark.benchmarkFind                        8              N/A             64  avgt   10     445,079 ±    1,097  ms/op
SCKnuthMorrisPrattBenchmark.benchmarkFind                        8              N/A            128  avgt   10     449,949 ±    2,945  ms/op
SCKnuthMorrisPrattBenchmark.benchmarkFind                        8              N/A            256  avgt   10     449,324 ±    1,950  ms/op
SCKnuthMorrisPrattBenchmark.benchmarkFind                       16              N/A              2  avgt   10      26,789 ±    1,009  ms/op
SCKnuthMorrisPrattBenchmark.benchmarkFind                       16              N/A              4  avgt   10     268,364 ±    2,931  ms/op
SCKnuthMorrisPrattBenchmark.benchmarkFind                       16              N/A              8  avgt   10     395,751 ±    2,793  ms/op
SCKnuthMorrisPrattBenchmark.benchmarkFind                       16              N/A             16  avgt   10     393,312 ±    2,016  ms/op
SCKnuthMorrisPrattBenchmark.benchmarkFind                       16              N/A             32  avgt   10     397,493 ±    1,550  ms/op
SCKnuthMorrisPrattBenchmark.benchmarkFind                       16              N/A             64  avgt   10     399,730 ±   20,264  ms/op
SCKnuthMorrisPrattBenchmark.benchmarkFind                       16              N/A            128  avgt   10     386,391 ±    2,831  ms/op
SCKnuthMorrisPrattBenchmark.benchmarkFind                       16              N/A            256  avgt   10     388,839 ±    2,410  ms/op
SCKnuthMorrisPrattBenchmark.benchmarkFind                       32              N/A              2  avgt   10      70,682 ±    0,355  ms/op
SCKnuthMorrisPrattBenchmark.benchmarkFind                       32              N/A              4  avgt   10    2907,712 ±   54,588  ms/op
SCKnuthMorrisPrattBenchmark.benchmarkFind                       32              N/A              8  avgt   10    2879,565 ±   32,393  ms/op
SCKnuthMorrisPrattBenchmark.benchmarkFind                       32              N/A             16  avgt   10    2895,008 ±   47,613  ms/op
SCKnuthMorrisPrattBenchmark.benchmarkFind                       32              N/A             32  avgt   10    2901,411 ±   40,380  ms/op
SCKnuthMorrisPrattBenchmark.benchmarkFind                       32              N/A             64  avgt   10    2871,133 ±   63,962  ms/op
SCKnuthMorrisPrattBenchmark.benchmarkFind                       32              N/A            128  avgt   10    2900,855 ±   33,711  ms/op
SCKnuthMorrisPrattBenchmark.benchmarkFind                       32              N/A            256  avgt   10    2867,438 ±   48,212  ms/op
SCKnuthMorrisPrattBenchmark.benchmarkFind                       64              N/A              2  avgt   10     265,516 ±    1,363  ms/op
SCKnuthMorrisPrattBenchmark.benchmarkFind                       64              N/A              4  avgt   10     351,577 ±   12,693  ms/op
SCKnuthMorrisPrattBenchmark.benchmarkFind                       64              N/A              8  avgt   10     347,585 ±    2,594  ms/op
SCKnuthMorrisPrattBenchmark.benchmarkFind                       64              N/A             16  avgt   10     346,875 ±    1,377  ms/op
SCKnuthMorrisPrattBenchmark.benchmarkFind                       64              N/A             32  avgt   10     351,512 ±    3,033  ms/op
SCKnuthMorrisPrattBenchmark.benchmarkFind                       64              N/A             64  avgt   10     349,271 ±    1,473  ms/op
SCKnuthMorrisPrattBenchmark.benchmarkFind                       64              N/A            128  avgt   10     344,581 ±    2,614  ms/op
SCKnuthMorrisPrattBenchmark.benchmarkFind                       64              N/A            256  avgt   10     346,946 ±    3,269  ms/op
SCKnuthMorrisPrattBenchmark.benchmarkFind                      128              N/A              2  avgt   10     877,439 ±   11,585  ms/op
SCKnuthMorrisPrattBenchmark.benchmarkFind                      128              N/A              4  avgt   10    1360,301 ±   48,944  ms/op
SCKnuthMorrisPrattBenchmark.benchmarkFind                      128              N/A              8  avgt   10    1365,140 ±   11,113  ms/op
SCKnuthMorrisPrattBenchmark.benchmarkFind                      128              N/A             16  avgt   10    1358,130 ±    7,938  ms/op
SCKnuthMorrisPrattBenchmark.benchmarkFind                      128              N/A             32  avgt   10    1355,022 ±    7,152  ms/op
SCKnuthMorrisPrattBenchmark.benchmarkFind                      128              N/A             64  avgt   10    1355,130 ±    6,492  ms/op
SCKnuthMorrisPrattBenchmark.benchmarkFind                      128              N/A            128  avgt   10    1338,479 ±    7,612  ms/op
SCKnuthMorrisPrattBenchmark.benchmarkFind                      128              N/A            256  avgt   10    1358,425 ±    5,503  ms/op
SCKnuthMorrisPrattBenchmark.benchmarkFind                      256              N/A              2  avgt   10    3471,103 ±   81,897  ms/op
SCKnuthMorrisPrattBenchmark.benchmarkFind                      256              N/A              4  avgt   10    5447,142 ±   52,990  ms/op
SCKnuthMorrisPrattBenchmark.benchmarkFind                      256              N/A              8  avgt   10    5404,234 ±   52,361  ms/op
SCKnuthMorrisPrattBenchmark.benchmarkFind                      256              N/A             16  avgt   10    5376,823 ±   54,608  ms/op
SCKnuthMorrisPrattBenchmark.benchmarkFind                      256              N/A             32  avgt   10    5406,570 ±   36,153  ms/op
SCKnuthMorrisPrattBenchmark.benchmarkFind                      256              N/A             64  avgt   10    5400,252 ±   57,750  ms/op
SCKnuthMorrisPrattBenchmark.benchmarkFind                      256              N/A            128  avgt   10    5352,300 ±   85,108  ms/op
SCKnuthMorrisPrattBenchmark.benchmarkFind                      256              N/A            256  avgt   10    5381,561 ±   38,676  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               2                2              2  avgt   10       0,181 ±    0,004  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               2                2              4  avgt   10       0,516 ±    0,004  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               2                2              8  avgt   10       3,257 ±    0,129  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               2                2             16  avgt   10      26,084 ±    0,342  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               2                2             32  avgt   10       9,074 ±    0,069  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               2                2             64  avgt   10       4,861 ±    0,258  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               2                2            128  avgt   10       2,257 ±    0,016  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               2                2            256  avgt   10       1,344 ±    0,007  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               2                8              4  avgt   10       2,231 ±    0,072  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               2                8              8  avgt   10      22,963 ±    0,140  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               2                8             16  avgt   10      50,503 ±    0,363  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               2                8             32  avgt   10      15,254 ±    0,713  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               2                8             64  avgt   10       6,231 ±    0,037  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               2                8            128  avgt   10       3,578 ±    0,025  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               2                8            256  avgt   10       1,971 ±    0,121  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               2               32              8  avgt   10     179,611 ±    1,471  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               2               32             16  avgt   10     197,119 ±    1,446  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               2               32             32  avgt   10      24,582 ±    0,243  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               2               32             64  avgt   10       9,245 ±    0,066  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               2               32            128  avgt   10       5,460 ±    0,050  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               2               32            256  avgt   10       3,068 ±    0,018  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               2              128              8  avgt   10     694,026 ±   39,438  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               2              128             16  avgt   10    1766,334 ±   12,579  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               2              128             32  avgt   10      42,759 ±    0,219  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               2              128             64  avgt   10      16,096 ±    0,121  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               2              128            128  avgt   10       9,058 ±    0,046  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               2              128            256  avgt   10       5,626 ±    0,024  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               4                2              2  avgt   10       0,309 ±    0,004  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               4                2              4  avgt   10       4,099 ±    0,025  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               4                2              8  avgt   10      20,726 ±    0,275  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               4                2             16  avgt   10       9,805 ±    0,085  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               4                2             32  avgt   10       4,879 ±    0,026  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               4                2             64  avgt   10       2,571 ±    0,018  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               4                2            128  avgt   10       1,326 ±    0,012  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               4                2            256  avgt   10       0,759 ±    0,007  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               4                8              2  avgt   10       1,354 ±    0,005  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               4                8              4  avgt   10      23,437 ±    0,112  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               4                8              8  avgt   10      46,285 ±    0,383  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               4                8             16  avgt   10      13,679 ±    0,834  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               4                8             32  avgt   10       6,106 ±    0,093  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               4                8             64  avgt   10       3,161 ±    0,045  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               4                8            128  avgt   10       1,841 ±    0,138  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               4                8            256  avgt   10       1,072 ±    0,008  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               4               32              4  avgt   10     176,613 ±    1,636  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               4               32              8  avgt   10     132,294 ±    2,746  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               4               32             16  avgt   10      19,605 ±    0,314  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               4               32             32  avgt   10       7,959 ±    0,034  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               4               32             64  avgt   10       4,613 ±    0,242  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               4               32            128  avgt   10       2,893 ±    0,029  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               4               32            256  avgt   10       1,715 ±    0,006  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               4              128              4  avgt   10     717,016 ±    5,043  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               4              128              8  avgt   10     949,797 ±    4,239  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               4              128             16  avgt   10      32,145 ±    0,367  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               4              128             32  avgt   10      13,141 ±    0,094  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               4              128             64  avgt   10       7,823 ±    0,301  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               4              128            128  avgt   10       4,716 ±    0,030  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               4              128            256  avgt   10       3,774 ±    0,014  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               8                2              2  avgt   10       0,799 ±    0,051  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               8                2              4  avgt   10      37,832 ±    0,247  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               8                2              8  avgt   10      14,141 ±    0,118  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               8                2             16  avgt   10       6,428 ±    0,420  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               8                2             32  avgt   10       3,619 ±    0,033  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               8                2             64  avgt   10       1,850 ±    0,015  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               8                2            128  avgt   10       0,946 ±    0,049  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               8                2            256  avgt   10       0,545 ±    0,003  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               8                8              2  avgt   10       2,734 ±    0,014  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               8                8              4  avgt   10      89,164 ±    5,826  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               8                8              8  avgt   10      21,058 ±    0,257  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               8                8             16  avgt   10       8,506 ±    0,023  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               8                8             32  avgt   10       4,024 ±    0,046  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               8                8             64  avgt   10       2,221 ±    0,109  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               8                8            128  avgt   10       1,255 ±    0,013  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               8                8            256  avgt   10       0,785 ±    0,008  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               8               32              2  avgt   10      19,724 ±    0,129  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               8               32              4  avgt   10     719,671 ±   22,673  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               8               32              8  avgt   10      31,347 ±    0,236  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               8               32             16  avgt   10      10,810 ±    0,078  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               8               32             32  avgt   10       5,199 ±    0,234  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               8               32             64  avgt   10       3,082 ±    0,017  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               8               32            128  avgt   10       1,916 ±    0,018  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               8               32            256  avgt   10       1,303 ±    0,055  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               8              128              4  avgt   10    8005,403 ±  106,187  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               8              128              8  avgt   10      53,307 ±    0,925  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               8              128             16  avgt   10      15,424 ±    0,771  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               8              128             32  avgt   10       8,777 ±    0,070  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               8              128             64  avgt   10       5,127 ±    0,044  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               8              128            128  avgt   10       3,531 ±    0,029  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind               8              128            256  avgt   10       2,939 ±    0,009  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              16                2              2  avgt   10       2,291 ±    0,015  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              16                2              4  avgt   10      22,900 ±    0,202  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              16                2              8  avgt   10      10,371 ±    0,075  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              16                2             16  avgt   10       5,584 ±    0,033  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              16                2             32  avgt   10       2,758 ±    0,026  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              16                2             64  avgt   10       1,431 ±    0,011  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              16                2            128  avgt   10       0,793 ±    0,007  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              16                2            256  avgt   10       0,459 ±    0,003  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              16                8              2  avgt   10       4,806 ±    0,042  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              16                8              4  avgt   10      43,836 ±    0,827  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              16                8              8  avgt   10      13,488 ±    0,064  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              16                8             16  avgt   10       6,475 ±    0,489  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              16                8             32  avgt   10       3,358 ±    0,019  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              16                8             64  avgt   10       1,900 ±    0,015  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              16                8            128  avgt   10       1,062 ±    0,051  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              16                8            256  avgt   10       0,595 ±    0,010  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              16               32              2  avgt   10      28,616 ±    0,275  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              16               32              4  avgt   10      55,900 ±    3,540  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              16               32              8  avgt   10      19,270 ±    0,468  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              16               32             16  avgt   10       8,616 ±    0,036  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              16               32             32  avgt   10       4,363 ±    0,277  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              16               32             64  avgt   10       2,283 ±    0,018  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              16               32            128  avgt   10       1,548 ±    0,009  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              16               32            256  avgt   10       1,056 ±    0,078  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              16              128              2  avgt   10     263,613 ±    9,982  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              16              128              4  avgt   10     207,525 ±    1,041  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              16              128              8  avgt   10      29,114 ±    0,283  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              16              128             16  avgt   10      11,438 ±    0,066  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              16              128             32  avgt   10       5,939 ±    0,041  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              16              128             64  avgt   10       4,275 ±    0,070  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              16              128            128  avgt   10       2,787 ±    0,022  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              16              128            256  avgt   10       2,566 ±    0,014  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              32                2              2  avgt   10       8,897 ±    0,060  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              32                2              4  avgt   10     157,185 ±    0,909  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              32                2              8  avgt   10      68,209 ±    4,105  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              32                2             16  avgt   10      33,873 ±    0,287  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              32                2             32  avgt   10      17,721 ±    0,265  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              32                2             64  avgt   10       8,372 ±    0,417  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              32                2            128  avgt   10       5,009 ±    0,030  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              32                2            256  avgt   10       3,610 ±    0,028  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              32                8              2  avgt   10      13,734 ±    0,914  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              32                8              4  avgt   10     249,366 ±    1,799  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              32                8              8  avgt   10      98,107 ±    0,580  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              32                8             16  avgt   10      46,031 ±    0,703  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              32                8             32  avgt   10      23,591 ±    0,182  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              32                8             64  avgt   10      13,083 ±    0,049  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              32                8            128  avgt   10       7,659 ±    0,060  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              32                8            256  avgt   10       5,104 ±    0,042  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              32               32              2  avgt   10      41,557 ±    0,212  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              32               32              4  avgt   10     343,049 ±    2,111  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              32               32              8  avgt   10     118,269 ±    0,781  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              32               32             16  avgt   10      59,618 ±    3,331  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              32               32             32  avgt   10      31,134 ±    0,265  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              32               32             64  avgt   10      18,155 ±    0,156  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              32               32            128  avgt   10      11,512 ±    0,991  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              32               32            256  avgt   10       7,427 ±    0,052  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              32              128              2  avgt   10     410,867 ±    3,262  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              32              128              4  avgt   10     566,599 ±   12,861  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              32              128              8  avgt   10     172,005 ±    1,633  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              32              128             16  avgt   10      77,028 ±    1,654  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              32              128             32  avgt   10      40,708 ±    0,236  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              32              128             64  avgt   10      26,570 ±    0,104  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              32              128            128  avgt   10      17,981 ±    1,132  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              32              128            256  avgt   10      13,601 ±    0,064  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              64                2              2  avgt   10      37,620 ±    0,246  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              64                2              4  avgt   10      21,227 ±    0,839  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              64                2              8  avgt   10      11,735 ±    0,075  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              64                2             16  avgt   10       5,763 ±    0,026  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              64                2             32  avgt   10       2,998 ±    0,174  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              64                2             64  avgt   10       1,673 ±    0,018  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              64                2            128  avgt   10       0,838 ±    0,006  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              64                2            256  avgt   10       0,491 ±    0,034  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              64                8              2  avgt   10      49,426 ±    0,428  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              64                8              4  avgt   10      29,937 ±    0,206  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              64                8              8  avgt   10      13,674 ±    0,177  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              64                8             16  avgt   10       6,943 ±    0,038  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              64                8             32  avgt   10       3,482 ±    0,043  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              64                8             64  avgt   10       1,869 ±    0,011  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              64                8            128  avgt   10       1,018 ±    0,005  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              64                8            256  avgt   10       0,640 ±    0,003  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              64               32              2  avgt   10      81,755 ±    0,673  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              64               32              4  avgt   10      40,003 ±    2,351  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              64               32              8  avgt   10      17,023 ±    0,110  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              64               32             16  avgt   10       7,871 ±    0,039  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              64               32             32  avgt   10       4,265 ±    0,015  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              64               32             64  avgt   10       2,442 ±    0,105  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              64               32            128  avgt   10       1,517 ±    0,006  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              64               32            256  avgt   10       1,046 ±    0,017  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              64              128              2  avgt   10     515,107 ±   33,075  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              64              128              4  avgt   10      53,449 ±    0,767  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              64              128              8  avgt   10      20,937 ±    0,203  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              64              128             16  avgt   10      11,088 ±    0,491  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              64              128             32  avgt   10       5,673 ±    0,024  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              64              128             64  avgt   10       3,725 ±    0,027  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              64              128            128  avgt   10       2,765 ±    0,224  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind              64              128            256  avgt   10       2,765 ±    0,009  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind             128                2              2  avgt   10     139,845 ±    0,676  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind             128                2              4  avgt   10      77,479 ±    0,925  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind             128                2              8  avgt   10      34,181 ±    0,175  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind             128                2             16  avgt   10      16,487 ±    0,119  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind             128                2             32  avgt   10       8,109 ±    0,054  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind             128                2             64  avgt   10       4,266 ±    0,030  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind             128                2            128  avgt   10       2,723 ±    0,022  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind             128                2            256  avgt   10       1,893 ±    0,017  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind             128                8              2  avgt   10     173,523 ±    5,337  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind             128                8              4  avgt   10      99,829 ±    3,678  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind             128                8              8  avgt   10      49,071 ±    0,203  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind             128                8             16  avgt   10      23,666 ±    0,132  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind             128                8             32  avgt   10      11,783 ±    0,550  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind             128                8             64  avgt   10       6,177 ±    0,068  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind             128                8            128  avgt   10       3,630 ±    0,018  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind             128                8            256  avgt   10       2,987 ±    0,202  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind             128               32              2  avgt   10     230,331 ±    2,500  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind             128               32              4  avgt   10     126,889 ±    0,821  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind             128               32              8  avgt   10      56,775 ±    0,593  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind             128               32             16  avgt   10      28,087 ±    0,218  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind             128               32             32  avgt   10      13,096 ±    0,112  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind             128               32             64  avgt   10       7,492 ±    0,062  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind             128               32            128  avgt   10       5,766 ±    0,103  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind             128               32            256  avgt   10       3,519 ±    0,027  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind             128              128              2  avgt   10     710,896 ±   10,413  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind             128              128              4  avgt   10     175,961 ±    1,347  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind             128              128              8  avgt   10      70,723 ±    4,874  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind             128              128             16  avgt   10      33,346 ±    0,160  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind             128              128             32  avgt   10      17,932 ±    0,160  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind             128              128             64  avgt   10      12,381 ±    0,106  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind             128              128            128  avgt   10       9,109 ±    0,079  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind             128              128            256  avgt   10       7,639 ±    0,038  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind             256                2              2  avgt   10     531,608 ±    4,010  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind             256                2              4  avgt   10     287,575 ±    2,353  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind             256                2              8  avgt   10     133,194 ±    5,709  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind             256                2             16  avgt   10      59,846 ±    0,337  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind             256                2             32  avgt   10      30,813 ±    0,264  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind             256                2             64  avgt   10      16,740 ±    1,029  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind             256                2            128  avgt   10      12,539 ±    0,082  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind             256                2            256  avgt   10       8,692 ±    0,048  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind             256                8              2  avgt   10     638,085 ±   25,701  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind             256                8              4  avgt   10     367,803 ±   13,071  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind             256                8              8  avgt   10     177,042 ±    2,246  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind             256                8             16  avgt   10      86,558 ±    0,643  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind             256                8             32  avgt   10      40,475 ±    0,324  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind             256                8             64  avgt   10      22,673 ±    0,684  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind             256                8            128  avgt   10      12,812 ±    0,140  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind             256                8            256  avgt   10      10,477 ±    0,074  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind             256               32              2  avgt   10     738,180 ±    9,859  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind             256               32              4  avgt   10     421,301 ±   40,526  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind             256               32              8  avgt   10     204,880 ±   17,210  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind             256               32             16  avgt   10     101,643 ±    0,551  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind             256               32             32  avgt   10      51,644 ±    0,414  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind             256               32             64  avgt   10      28,826 ±    0,428  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind             256               32            128  avgt   10      18,388 ±    0,175  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind             256               32            256  avgt   10      14,143 ±    0,089  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind             256              128              2  avgt   10    1252,491 ±    4,610  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind             256              128              4  avgt   10     582,709 ±    6,703  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind             256              128              8  avgt   10     247,891 ±   12,945  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind             256              128             16  avgt   10     117,939 ±    1,204  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind             256              128             32  avgt   10      65,108 ±    0,451  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind             256              128             64  avgt   10      40,218 ±    0,305  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind             256              128            128  avgt   10      30,343 ±    0,820  ms/op
SCSetBackwardOracleMatchingBenchmark.benchmarkFind             256              128            256  avgt   10      20,083 ±    0,847  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             2                2              2  avgt   10       0,124 ±    0,002  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             2                2              4  avgt   10       0,358 ±    0,002  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             2                2              8  avgt   10       3,408 ±    0,143  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             2                2             16  avgt   10      27,490 ±    0,563  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             2                2             32  avgt   10      28,945 ±    0,497  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             2                2             64  avgt   10      30,637 ±    1,514  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             2                2            128  avgt   10      31,329 ±    0,197  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             2                2            256  avgt   10      30,777 ±    0,281  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             2                8              4  avgt   10       1,702 ±    0,090  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             2                8              8  avgt   10      17,411 ±    0,151  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             2                8             16  avgt   10      74,657 ±    0,708  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             2                8             32  avgt   10      54,689 ±    1,204  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             2                8             64  avgt   10      55,125 ±    0,316  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             2                8            128  avgt   10      61,620 ±    0,402  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             2                8            256  avgt   10      59,231 ±    0,623  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             2               32              8  avgt   10     151,654 ±    0,605  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             2               32             16  avgt   10     197,550 ±    6,112  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             2               32             32  avgt   10      89,211 ±    0,645  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             2               32             64  avgt   10      83,934 ±    0,471  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             2               32            128  avgt   10      86,270 ±    3,685  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             2               32            256  avgt   10      84,400 ±    0,553  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             2              128              8  avgt   10     448,389 ±    1,610  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             2              128             16  avgt   10    1689,023 ±   17,266  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             2              128             32  avgt   10     125,893 ±    0,741  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             2              128             64  avgt   10     123,917 ±    0,487  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             2              128            128  avgt   10     122,919 ±    0,804  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             2              128            256  avgt   10     124,745 ±    6,083  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             4                2              2  avgt   10       0,172 ±    0,002  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             4                2              4  avgt   10       1,843 ±    0,047  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             4                2              8  avgt   10      19,053 ±    1,100  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             4                2             16  avgt   10       9,098 ±    0,434  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             4                2             32  avgt   10      12,857 ±    0,288  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             4                2             64  avgt   10      11,572 ±    0,692  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             4                2            128  avgt   10       6,689 ±    0,107  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             4                2            256  avgt   10      12,820 ±    0,106  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             4                8              2  avgt   10       0,975 ±    0,047  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             4                8              4  avgt   10      21,662 ±    0,200  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             4                8              8  avgt   10      33,895 ±    0,557  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             4                8             16  avgt   10      24,746 ±    0,976  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             4                8             32  avgt   10      31,935 ±    0,880  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             4                8             64  avgt   10      30,991 ±    0,134  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             4                8            128  avgt   10      32,569 ±    0,236  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             4                8            256  avgt   10      33,316 ±    0,299  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             4               32              4  avgt   10     159,187 ±    0,741  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             4               32              8  avgt   10     111,382 ±    0,762  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             4               32             16  avgt   10      44,343 ±    0,213  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             4               32             32  avgt   10      45,839 ±    0,375  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             4               32             64  avgt   10      43,810 ±    0,316  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             4               32            128  avgt   10      44,645 ±    0,586  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             4               32            256  avgt   10      45,839 ±    1,558  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             4              128              4  avgt   10     444,907 ±    2,531  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             4              128              8  avgt   10     890,824 ±   25,177  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             4              128             16  avgt   10      57,854 ±    0,552  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             4              128             32  avgt   10      59,002 ±    0,428  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             4              128             64  avgt   10      59,792 ±    2,485  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             4              128            128  avgt   10      59,600 ±    0,502  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             4              128            256  avgt   10      59,515 ±    0,399  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             8                2              2  avgt   10       0,345 ±    0,006  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             8                2              4  avgt   10      12,272 ±    0,078  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             8                2              8  avgt   10       5,681 ±    0,040  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             8                2             16  avgt   10       3,570 ±    0,030  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             8                2             32  avgt   10       4,745 ±    0,052  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             8                2             64  avgt   10       3,732 ±    0,016  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             8                2            128  avgt   10       2,291 ±    0,017  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             8                2            256  avgt   10       3,935 ±    0,037  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             8                8              2  avgt   10       2,327 ±    0,021  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             8                8              4  avgt   10      62,649 ±    0,452  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             8                8              8  avgt   10      15,073 ±    0,136  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             8                8             16  avgt   10      14,031 ±    0,095  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             8                8             32  avgt   10      13,451 ±    0,314  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             8                8             64  avgt   10      20,926 ±    0,140  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             8                8            128  avgt   10      20,600 ±    0,358  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             8                8            256  avgt   10      16,108 ±    0,121  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             8               32              2  avgt   10      14,994 ±    0,104  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             8               32              4  avgt   10     696,418 ±   22,470  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             8               32              8  avgt   10      31,258 ±    0,672  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             8               32             16  avgt   10      31,658 ±    0,204  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             8               32             32  avgt   10      29,875 ±    0,236  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             8               32             64  avgt   10      30,592 ±    0,507  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             8               32            128  avgt   10      30,752 ±    0,159  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             8               32            256  avgt   10      29,971 ±    0,421  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             8              128              4  avgt   10    7143,117 ±  152,983  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             8              128              8  avgt   10      39,734 ±    0,319  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             8              128             16  avgt   10      37,717 ±    0,326  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             8              128             32  avgt   10      38,524 ±    0,346  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             8              128             64  avgt   10      39,029 ±    0,125  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             8              128            128  avgt   10      39,604 ±    1,059  ms/op
SCSetHorspoolBenchmark.benchmarkFind                             8              128            256  avgt   10      40,912 ±    1,930  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            16                2              2  avgt   10       0,741 ±    0,005  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            16                2              4  avgt   10       6,984 ±    0,047  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            16                2              8  avgt   10       3,626 ±    0,252  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            16                2             16  avgt   10       2,207 ±    0,016  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            16                2             32  avgt   10       1,754 ±    0,131  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            16                2             64  avgt   10       1,605 ±    0,070  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            16                2            128  avgt   10       1,103 ±    0,013  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            16                2            256  avgt   10       1,309 ±    0,013  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            16                8              2  avgt   10       2,878 ±    0,177  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            16                8              4  avgt   10      12,898 ±    0,091  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            16                8              8  avgt   10       7,444 ±    0,111  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            16                8             16  avgt   10       8,003 ±    0,351  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            16                8             32  avgt   10       7,383 ±    0,052  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            16                8             64  avgt   10      10,433 ±    0,044  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            16                8            128  avgt   10       8,258 ±    0,034  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            16                8            256  avgt   10       7,326 ±    0,015  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            16               32              2  avgt   10      23,923 ±    0,119  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            16               32              4  avgt   10      34,758 ±    0,410  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            16               32              8  avgt   10      20,841 ±    0,078  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            16               32             16  avgt   10      20,519 ±    0,206  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            16               32             32  avgt   10      19,649 ±    0,131  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            16               32             64  avgt   10      18,550 ±    0,179  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            16               32            128  avgt   10      20,620 ±    0,157  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            16               32            256  avgt   10      23,674 ±    0,229  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            16              128              2  avgt   10     174,931 ±    1,511  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            16              128              4  avgt   10     182,360 ±    6,802  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            16              128              8  avgt   10      30,843 ±    0,217  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            16              128             16  avgt   10      30,468 ±    0,385  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            16              128             32  avgt   10      31,078 ±    1,011  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            16              128             64  avgt   10      31,730 ±    0,336  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            16              128            128  avgt   10      30,619 ±    0,149  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            16              128            256  avgt   10      33,433 ±    2,453  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            32                2              2  avgt   10       2,542 ±    0,011  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            32                2              4  avgt   10      50,681 ±    0,248  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            32                2              8  avgt   10      22,804 ±    0,889  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            32                2             16  avgt   10      12,977 ±    0,042  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            32                2             32  avgt   10       9,179 ±    0,056  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            32                2             64  avgt   10       8,297 ±    0,065  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            32                2            128  avgt   10       8,034 ±    0,058  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            32                2            256  avgt   10       6,772 ±    0,058  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            32                8              2  avgt   10       5,453 ±    0,042  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            32                8              4  avgt   10      84,747 ±    0,424  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            32                8              8  avgt   10      56,803 ±    0,229  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            32                8             16  avgt   10      48,039 ±    2,503  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            32                8             32  avgt   10      33,838 ±    0,375  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            32                8             64  avgt   10      40,725 ±    0,232  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            32                8            128  avgt   10      49,071 ±    0,305  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            32                8            256  avgt   10      35,226 ±    0,280  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            32               32              2  avgt   10      33,885 ±    1,877  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            32               32              4  avgt   10     153,871 ±    2,370  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            32               32              8  avgt   10     127,505 ±    3,612  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            32               32             16  avgt   10     134,497 ±    3,636  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            32               32             32  avgt   10     112,947 ±    1,512  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            32               32             64  avgt   10     132,058 ±    1,396  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            32               32            128  avgt   10     134,814 ±    0,602  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            32               32            256  avgt   10     135,263 ±    2,535  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            32              128              2  avgt   10     354,599 ±    3,866  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            32              128              4  avgt   10     380,656 ±    3,835  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            32              128              8  avgt   10     213,474 ±    1,367  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            32              128             16  avgt   10     221,405 ±   10,387  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            32              128             32  avgt   10     217,840 ±    5,604  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            32              128             64  avgt   10     204,491 ±    1,243  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            32              128            128  avgt   10     211,031 ±    2,272  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            32              128            256  avgt   10     242,083 ±    2,526  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            64                2              2  avgt   10      11,266 ±    0,060  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            64                2              4  avgt   10       8,374 ±    0,090  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            64                2              8  avgt   10       4,485 ±    0,020  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            64                2             16  avgt   10       2,512 ±    0,015  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            64                2             32  avgt   10       1,583 ±    0,009  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            64                2             64  avgt   10       1,101 ±    0,007  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            64                2            128  avgt   10       0,763 ±    0,044  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            64                2            256  avgt   10       0,579 ±    0,015  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            64                8              2  avgt   10      16,503 ±    0,130  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            64                8              4  avgt   10      10,108 ±    0,488  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            64                8              8  avgt   10       6,600 ±    0,033  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            64                8             16  avgt   10       4,545 ±    0,052  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            64                8             32  avgt   10       3,609 ±    0,146  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            64                8             64  avgt   10       3,566 ±    0,017  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            64                8            128  avgt   10       2,738 ±    0,052  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            64                8            256  avgt   10       3,283 ±    0,080  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            64               32              2  avgt   10      51,942 ±    0,361  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            64               32              4  avgt   10      15,047 ±    0,105  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            64               32              8  avgt   10      12,434 ±    0,819  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            64               32             16  avgt   10      12,773 ±    0,230  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            64               32             32  avgt   10      13,022 ±    0,261  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            64               32             64  avgt   10      11,468 ±    0,151  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            64               32            128  avgt   10      11,502 ±    0,137  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            64               32            256  avgt   10      12,653 ±    0,148  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            64              128              2  avgt   10     460,280 ±    2,710  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            64              128              4  avgt   10      26,771 ±    0,304  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            64              128              8  avgt   10      26,734 ±    1,660  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            64              128             16  avgt   10      27,410 ±    0,156  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            64              128             32  avgt   10      29,062 ±    0,333  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            64              128             64  avgt   10      25,973 ±    1,284  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            64              128            128  avgt   10      28,290 ±    0,384  ms/op
SCSetHorspoolBenchmark.benchmarkFind                            64              128            256  avgt   10      28,374 ±    0,415  ms/op
SCSetHorspoolBenchmark.benchmarkFind                           128                2              2  avgt   10      41,585 ±    2,534  ms/op
SCSetHorspoolBenchmark.benchmarkFind                           128                2              4  avgt   10      23,775 ±    0,151  ms/op
SCSetHorspoolBenchmark.benchmarkFind                           128                2              8  avgt   10      13,801 ±    0,116  ms/op
SCSetHorspoolBenchmark.benchmarkFind                           128                2             16  avgt   10       7,020 ±    0,529  ms/op
SCSetHorspoolBenchmark.benchmarkFind                           128                2             32  avgt   10       3,855 ±    0,023  ms/op
SCSetHorspoolBenchmark.benchmarkFind                           128                2             64  avgt   10       2,480 ±    0,019  ms/op
SCSetHorspoolBenchmark.benchmarkFind                           128                2            128  avgt   10       1,966 ±    0,028  ms/op
SCSetHorspoolBenchmark.benchmarkFind                           128                2            256  avgt   10       2,113 ±    0,010  ms/op
SCSetHorspoolBenchmark.benchmarkFind                           128                8              2  avgt   10      51,677 ±    0,164  ms/op
SCSetHorspoolBenchmark.benchmarkFind                           128                8              4  avgt   10      34,067 ±    0,148  ms/op
SCSetHorspoolBenchmark.benchmarkFind                           128                8              8  avgt   10      21,721 ±    0,181  ms/op
SCSetHorspoolBenchmark.benchmarkFind                           128                8             16  avgt   10      13,778 ±    0,093  ms/op
SCSetHorspoolBenchmark.benchmarkFind                           128                8             32  avgt   10       9,022 ±    0,080  ms/op
SCSetHorspoolBenchmark.benchmarkFind                           128                8             64  avgt   10       7,155 ±    0,066  ms/op
SCSetHorspoolBenchmark.benchmarkFind                           128                8            128  avgt   10       5,849 ±    0,048  ms/op
SCSetHorspoolBenchmark.benchmarkFind                           128                8            256  avgt   10       5,863 ±    0,094  ms/op
SCSetHorspoolBenchmark.benchmarkFind                           128               32              2  avgt   10      93,989 ±    3,377  ms/op
SCSetHorspoolBenchmark.benchmarkFind                           128               32              4  avgt   10      47,355 ±    2,869  ms/op
SCSetHorspoolBenchmark.benchmarkFind                           128               32              8  avgt   10      30,880 ±    0,189  ms/op
SCSetHorspoolBenchmark.benchmarkFind                           128               32             16  avgt   10      26,419 ±    0,275  ms/op
SCSetHorspoolBenchmark.benchmarkFind                           128               32             32  avgt   10      24,985 ±    1,671  ms/op
SCSetHorspoolBenchmark.benchmarkFind                           128               32             64  avgt   10      22,647 ±    0,113  ms/op
SCSetHorspoolBenchmark.benchmarkFind                           128               32            128  avgt   10      26,301 ±    0,912  ms/op
SCSetHorspoolBenchmark.benchmarkFind                           128               32            256  avgt   10      21,844 ±    0,927  ms/op
SCSetHorspoolBenchmark.benchmarkFind                           128              128              2  avgt   10     581,821 ±    4,308  ms/op
SCSetHorspoolBenchmark.benchmarkFind                           128              128              4  avgt   10      77,512 ±    0,394  ms/op
SCSetHorspoolBenchmark.benchmarkFind                           128              128              8  avgt   10      74,170 ±    0,822  ms/op
SCSetHorspoolBenchmark.benchmarkFind                           128              128             16  avgt   10      76,576 ±    0,974  ms/op
SCSetHorspoolBenchmark.benchmarkFind                           128              128             32  avgt   10      76,991 ±    0,341  ms/op
SCSetHorspoolBenchmark.benchmarkFind                           128              128             64  avgt   10      78,090 ±    0,463  ms/op
SCSetHorspoolBenchmark.benchmarkFind                           128              128            128  avgt   10      78,350 ±    0,507  ms/op
SCSetHorspoolBenchmark.benchmarkFind                           128              128            256  avgt   10      77,218 ±    3,145  ms/op
SCSetHorspoolBenchmark.benchmarkFind                           256                2              2  avgt   10     174,198 ±    6,859  ms/op
SCSetHorspoolBenchmark.benchmarkFind                           256                2              4  avgt   10     103,754 ±    1,244  ms/op
SCSetHorspoolBenchmark.benchmarkFind                           256                2              8  avgt   10      50,859 ±    3,479  ms/op
SCSetHorspoolBenchmark.benchmarkFind                           256                2             16  avgt   10      24,853 ±    1,029  ms/op
SCSetHorspoolBenchmark.benchmarkFind                           256                2             32  avgt   10      12,724 ±    0,071  ms/op
SCSetHorspoolBenchmark.benchmarkFind                           256                2             64  avgt   10       7,475 ±    0,664  ms/op
SCSetHorspoolBenchmark.benchmarkFind                           256                2            128  avgt   10       7,039 ±    0,058  ms/op
SCSetHorspoolBenchmark.benchmarkFind                           256                2            256  avgt   10       7,141 ±    0,045  ms/op
SCSetHorspoolBenchmark.benchmarkFind                           256                8              2  avgt   10     194,038 ±    2,196  ms/op
SCSetHorspoolBenchmark.benchmarkFind                           256                8              4  avgt   10     124,130 ±    0,734  ms/op
SCSetHorspoolBenchmark.benchmarkFind                           256                8              8  avgt   10      77,873 ±    3,823  ms/op
SCSetHorspoolBenchmark.benchmarkFind                           256                8             16  avgt   10      43,397 ±    0,575  ms/op
SCSetHorspoolBenchmark.benchmarkFind                           256                8             32  avgt   10      26,141 ±    0,129  ms/op
SCSetHorspoolBenchmark.benchmarkFind                           256                8             64  avgt   10      18,044 ±    1,121  ms/op
SCSetHorspoolBenchmark.benchmarkFind                           256                8            128  avgt   10      14,122 ±    0,135  ms/op
SCSetHorspoolBenchmark.benchmarkFind                           256                8            256  avgt   10      12,637 ±    0,092  ms/op
SCSetHorspoolBenchmark.benchmarkFind                           256               32              2  avgt   10     232,521 ±   16,841  ms/op
SCSetHorspoolBenchmark.benchmarkFind                           256               32              4  avgt   10     140,372 ±    1,436  ms/op
SCSetHorspoolBenchmark.benchmarkFind                           256               32              8  avgt   10     100,706 ±    1,257  ms/op
SCSetHorspoolBenchmark.benchmarkFind                           256               32             16  avgt   10      65,665 ±    0,483  ms/op
SCSetHorspoolBenchmark.benchmarkFind                           256               32             32  avgt   10      46,905 ±    0,626  ms/op
SCSetHorspoolBenchmark.benchmarkFind                           256               32             64  avgt   10      46,171 ±    2,534  ms/op
SCSetHorspoolBenchmark.benchmarkFind                           256               32            128  avgt   10      45,286 ±    0,801  ms/op
SCSetHorspoolBenchmark.benchmarkFind                           256               32            256  avgt   10      47,162 ±    0,406  ms/op
SCSetHorspoolBenchmark.benchmarkFind                           256              128              2  avgt   10     732,207 ±    8,832  ms/op
SCSetHorspoolBenchmark.benchmarkFind                           256              128              4  avgt   10     208,516 ±    1,354  ms/op
SCSetHorspoolBenchmark.benchmarkFind                           256              128              8  avgt   10     178,803 ±    6,328  ms/op
SCSetHorspoolBenchmark.benchmarkFind                           256              128             16  avgt   10     161,861 ±    0,548  ms/op
SCSetHorspoolBenchmark.benchmarkFind                           256              128             32  avgt   10     159,745 ±    2,987  ms/op
SCSetHorspoolBenchmark.benchmarkFind                           256              128             64  avgt   10     153,301 ±    8,997  ms/op
SCSetHorspoolBenchmark.benchmarkFind                           256              128            128  avgt   10     177,946 ±    2,392  ms/op
SCSetHorspoolBenchmark.benchmarkFind                           256              128            256  avgt   10     166,260 ±    1,605  ms/op
SCShiftAndBenchmark.benchmarkFind                                2              N/A              2  avgt   10       0,163 ±    0,003  ms/op
SCShiftAndBenchmark.benchmarkFind                                2              N/A              4  avgt   10       0,394 ±    0,003  ms/op
SCShiftAndBenchmark.benchmarkFind                                2              N/A              8  avgt   10      12,506 ±    0,082  ms/op
SCShiftAndBenchmark.benchmarkFind                                2              N/A             16  avgt   10     126,408 ±    0,915  ms/op
SCShiftAndBenchmark.benchmarkFind                                2              N/A             32  avgt   10     128,958 ±    0,698  ms/op
SCShiftAndBenchmark.benchmarkFind                                2              N/A             64  avgt   10     128,433 ±    5,013  ms/op
SCShiftAndBenchmark.benchmarkFind                                2              N/A            128  avgt   10     695,425 ±    3,474  ms/op
SCShiftAndBenchmark.benchmarkFind                                2              N/A            256  avgt   10    1018,691 ±    3,230  ms/op
SCShiftAndBenchmark.benchmarkFind                                4              N/A              2  avgt   10       0,480 ±    0,008  ms/op
SCShiftAndBenchmark.benchmarkFind                                4              N/A              4  avgt   10      17,385 ±    0,061  ms/op
SCShiftAndBenchmark.benchmarkFind                                4              N/A              8  avgt   10     163,449 ±    1,333  ms/op
SCShiftAndBenchmark.benchmarkFind                                4              N/A             16  avgt   10     138,470 ±    1,145  ms/op
SCShiftAndBenchmark.benchmarkFind                                4              N/A             32  avgt   10     128,274 ±    1,050  ms/op
SCShiftAndBenchmark.benchmarkFind                                4              N/A             64  avgt   10     129,017 ±    7,930  ms/op
SCShiftAndBenchmark.benchmarkFind                                4              N/A            128  avgt   10     695,378 ±    2,321  ms/op
SCShiftAndBenchmark.benchmarkFind                                4              N/A            256  avgt   10    1036,598 ±    7,671  ms/op
SCShiftAndBenchmark.benchmarkFind                                8              N/A              2  avgt   10       1,704 ±    0,007  ms/op
SCShiftAndBenchmark.benchmarkFind                                8              N/A              4  avgt   10     262,967 ±    1,901  ms/op
SCShiftAndBenchmark.benchmarkFind                                8              N/A              8  avgt   10     199,878 ±    3,892  ms/op
SCShiftAndBenchmark.benchmarkFind                                8              N/A             16  avgt   10     154,764 ±    5,556  ms/op
SCShiftAndBenchmark.benchmarkFind                                8              N/A             32  avgt   10     138,913 ±    1,329  ms/op
SCShiftAndBenchmark.benchmarkFind                                8              N/A             64  avgt   10     127,945 ±    8,282  ms/op
SCShiftAndBenchmark.benchmarkFind                                8              N/A            128  avgt   10     694,820 ±    5,272  ms/op
SCShiftAndBenchmark.benchmarkFind                                8              N/A            256  avgt   10    1032,843 ±   10,040  ms/op
SCShiftAndBenchmark.benchmarkFind                               16              N/A              2  avgt   10      22,654 ±    0,059  ms/op
SCShiftAndBenchmark.benchmarkFind                               16              N/A              4  avgt   10     295,408 ±    2,264  ms/op
SCShiftAndBenchmark.benchmarkFind                               16              N/A              8  avgt   10     228,074 ±    7,914  ms/op
SCShiftAndBenchmark.benchmarkFind                               16              N/A             16  avgt   10     188,571 ±   93,544  ms/op
SCShiftAndBenchmark.benchmarkFind                               16              N/A             32  avgt   10     146,941 ±    3,806  ms/op
SCShiftAndBenchmark.benchmarkFind                               16              N/A             64  avgt   10     138,703 ±    4,881  ms/op
SCShiftAndBenchmark.benchmarkFind                               16              N/A            128  avgt   10     697,014 ±    3,347  ms/op
SCShiftAndBenchmark.benchmarkFind                               16              N/A            256  avgt   10    1024,730 ±   43,439  ms/op
SCShiftAndBenchmark.benchmarkFind                               32              N/A              2  avgt   10      76,480 ±    0,665  ms/op
SCShiftAndBenchmark.benchmarkFind                               32              N/A              4  avgt   10    2339,582 ±   57,824  ms/op
SCShiftAndBenchmark.benchmarkFind                               32              N/A              8  avgt   10    1805,504 ±    4,020  ms/op
SCShiftAndBenchmark.benchmarkFind                               32              N/A             16  avgt   10    1414,085 ±    5,945  ms/op
SCShiftAndBenchmark.benchmarkFind                               32              N/A             32  avgt   10    1163,222 ±    4,387  ms/op
SCShiftAndBenchmark.benchmarkFind                               32              N/A             64  avgt   10    1082,706 ±    7,236  ms/op
SCShiftAndBenchmark.benchmarkFind                               32              N/A            128  avgt   10    5809,361 ±   57,656  ms/op
SCShiftAndBenchmark.benchmarkFind                               32              N/A            256  avgt   10    8477,416 ±  221,536  ms/op
SCShiftAndBenchmark.benchmarkFind                               64              N/A              2  avgt   10     271,213 ±    5,527  ms/op
SCShiftAndBenchmark.benchmarkFind                               64              N/A              4  avgt   10     297,816 ±   22,598  ms/op
SCShiftAndBenchmark.benchmarkFind                               64              N/A              8  avgt   10     246,494 ±    1,280  ms/op
SCShiftAndBenchmark.benchmarkFind                               64              N/A             16  avgt   10     185,703 ±    6,533  ms/op
SCShiftAndBenchmark.benchmarkFind                               64              N/A             32  avgt   10     163,557 ±    9,220  ms/op
SCShiftAndBenchmark.benchmarkFind                               64              N/A             64  avgt   10     147,498 ±    3,489  ms/op
SCShiftAndBenchmark.benchmarkFind                               64              N/A            128  avgt   10     721,599 ±    6,752  ms/op
SCShiftAndBenchmark.benchmarkFind                               64              N/A            256  avgt   10     974,161 ±    4,710  ms/op
SCShiftAndBenchmark.benchmarkFind                              128              N/A              2  avgt   10    1215,485 ±   47,568  ms/op
SCShiftAndBenchmark.benchmarkFind                              128              N/A              4  avgt   10    1185,045 ±    9,466  ms/op
SCShiftAndBenchmark.benchmarkFind                              128              N/A              8  avgt   10     884,068 ±   17,299  ms/op
SCShiftAndBenchmark.benchmarkFind                              128              N/A             16  avgt   10     744,160 ±    2,601  ms/op
SCShiftAndBenchmark.benchmarkFind                              128              N/A             32  avgt   10     659,932 ±   19,373  ms/op
SCShiftAndBenchmark.benchmarkFind                              128              N/A             64  avgt   10     571,654 ±    4,202  ms/op
SCShiftAndBenchmark.benchmarkFind                              128              N/A            128  avgt   10    2998,035 ±   10,262  ms/op
SCShiftAndBenchmark.benchmarkFind                              128              N/A            256  avgt   10    4149,702 ±   17,612  ms/op
SCShiftAndBenchmark.benchmarkFind                              256              N/A              2  avgt   10    4320,635 ±   56,403  ms/op
SCShiftAndBenchmark.benchmarkFind                              256              N/A              4  avgt   10    4568,341 ±   18,568  ms/op
SCShiftAndBenchmark.benchmarkFind                              256              N/A              8  avgt   10    3489,110 ±   57,383  ms/op
SCShiftAndBenchmark.benchmarkFind                              256              N/A             16  avgt   10    3157,530 ±   51,162  ms/op
SCShiftAndBenchmark.benchmarkFind                              256              N/A             32  avgt   10    2588,108 ±    6,882  ms/op
SCShiftAndBenchmark.benchmarkFind                              256              N/A             64  avgt   10    2338,900 ±   40,830  ms/op
SCShiftAndBenchmark.benchmarkFind                              256              N/A            128  avgt   10   11972,943 ±  122,953  ms/op
SCShiftAndBenchmark.benchmarkFind                              256              N/A            256  avgt   10   15582,622 ±  162,365  ms/op
SCSundayBenchmark.benchmarkFind                                  2              N/A              2  avgt   10       0,196 ±    0,011  ms/op
SCSundayBenchmark.benchmarkFind                                  2              N/A              4  avgt   10       0,659 ±    0,006  ms/op
SCSundayBenchmark.benchmarkFind                                  2              N/A              8  avgt   10      48,612 ±    0,461  ms/op
SCSundayBenchmark.benchmarkFind                                  2              N/A             16  avgt   10     659,284 ±    2,703  ms/op
SCSundayBenchmark.benchmarkFind                                  2              N/A             32  avgt   10     671,135 ±    2,089  ms/op
SCSundayBenchmark.benchmarkFind                                  2              N/A             64  avgt   10     673,024 ±   18,488  ms/op
SCSundayBenchmark.benchmarkFind                                  2              N/A            128  avgt   10     681,897 ±    6,741  ms/op
SCSundayBenchmark.benchmarkFind                                  2              N/A            256  avgt   10     669,897 ±   29,491  ms/op
SCSundayBenchmark.benchmarkFind                                  4              N/A              2  avgt   10       0,602 ±    0,006  ms/op
SCSundayBenchmark.benchmarkFind                                  4              N/A              4  avgt   10      30,710 ±    0,161  ms/op
SCSundayBenchmark.benchmarkFind                                  4              N/A              8  avgt   10     398,830 ±    2,991  ms/op
SCSundayBenchmark.benchmarkFind                                  4              N/A             16  avgt   10     338,954 ±    3,077  ms/op
SCSundayBenchmark.benchmarkFind                                  4              N/A             32  avgt   10     314,585 ±    9,540  ms/op
SCSundayBenchmark.benchmarkFind                                  4              N/A             64  avgt   10     329,699 ±    1,664  ms/op
SCSundayBenchmark.benchmarkFind                                  4              N/A            128  avgt   10     340,146 ±    2,718  ms/op
SCSundayBenchmark.benchmarkFind                                  4              N/A            256  avgt   10     325,529 ±    3,012  ms/op
SCSundayBenchmark.benchmarkFind                                  8              N/A              2  avgt   10       2,202 ±    0,016  ms/op
SCSundayBenchmark.benchmarkFind                                  8              N/A              4  avgt   10     267,722 ±   14,296  ms/op
SCSundayBenchmark.benchmarkFind                                  8              N/A              8  avgt   10     172,420 ±    0,899  ms/op
SCSundayBenchmark.benchmarkFind                                  8              N/A             16  avgt   10     129,790 ±    0,730  ms/op
SCSundayBenchmark.benchmarkFind                                  8              N/A             32  avgt   10     117,221 ±    6,694  ms/op
SCSundayBenchmark.benchmarkFind                                  8              N/A             64  avgt   10     119,089 ±    1,216  ms/op
SCSundayBenchmark.benchmarkFind                                  8              N/A            128  avgt   10     123,213 ±    1,014  ms/op
SCSundayBenchmark.benchmarkFind                                  8              N/A            256  avgt   10     118,481 ±    0,686  ms/op
SCSundayBenchmark.benchmarkFind                                 16              N/A              2  avgt   10      23,092 ±    0,155  ms/op
SCSundayBenchmark.benchmarkFind                                 16              N/A              4  avgt   10     199,769 ±    1,459  ms/op
SCSundayBenchmark.benchmarkFind                                 16              N/A              8  avgt   10     114,926 ±    0,366  ms/op
SCSundayBenchmark.benchmarkFind                                 16              N/A             16  avgt   10      71,377 ±    0,656  ms/op
SCSundayBenchmark.benchmarkFind                                 16              N/A             32  avgt   10      54,718 ±    2,475  ms/op
SCSundayBenchmark.benchmarkFind                                 16              N/A             64  avgt   10      49,765 ±    0,373  ms/op
SCSundayBenchmark.benchmarkFind                                 16              N/A            128  avgt   10      48,336 ±    0,174  ms/op
SCSundayBenchmark.benchmarkFind                                 16              N/A            256  avgt   10      48,246 ±    2,297  ms/op
SCSundayBenchmark.benchmarkFind                                 32              N/A              2  avgt   10      73,519 ±    0,304  ms/op
SCSundayBenchmark.benchmarkFind                                 32              N/A              4  avgt   10    1383,345 ±    2,858  ms/op
SCSundayBenchmark.benchmarkFind                                 32              N/A              8  avgt   10     736,190 ±    2,780  ms/op
SCSundayBenchmark.benchmarkFind                                 32              N/A             16  avgt   10     410,628 ±    2,321  ms/op
SCSundayBenchmark.benchmarkFind                                 32              N/A             32  avgt   10     282,200 ±    0,981  ms/op
SCSundayBenchmark.benchmarkFind                                 32              N/A             64  avgt   10     234,492 ±    3,890  ms/op
SCSundayBenchmark.benchmarkFind                                 32              N/A            128  avgt   10     220,741 ±    1,921  ms/op
SCSundayBenchmark.benchmarkFind                                 32              N/A            256  avgt   10     211,282 ±    1,251  ms/op
SCSundayBenchmark.benchmarkFind                                 64              N/A              2  avgt   10     255,310 ±   10,670  ms/op
SCSundayBenchmark.benchmarkFind                                 64              N/A              4  avgt   10     161,249 ±    1,680  ms/op
SCSundayBenchmark.benchmarkFind                                 64              N/A              8  avgt   10      81,842 ±    0,646  ms/op
SCSundayBenchmark.benchmarkFind                                 64              N/A             16  avgt   10      44,034 ±    2,610  ms/op
SCSundayBenchmark.benchmarkFind                                 64              N/A             32  avgt   10      25,693 ±    0,127  ms/op
SCSundayBenchmark.benchmarkFind                                 64              N/A             64  avgt   10      17,884 ±    0,089  ms/op
SCSundayBenchmark.benchmarkFind                                 64              N/A            128  avgt   10      14,751 ±    0,225  ms/op
SCSundayBenchmark.benchmarkFind                                 64              N/A            256  avgt   10      13,782 ±    0,121  ms/op
SCSundayBenchmark.benchmarkFind                                128              N/A              2  avgt   10    1025,007 ±    5,783  ms/op
SCSundayBenchmark.benchmarkFind                                128              N/A              4  avgt   10     626,526 ±    4,003  ms/op
SCSundayBenchmark.benchmarkFind                                128              N/A              8  avgt   10     309,163 ±    2,262  ms/op
SCSundayBenchmark.benchmarkFind                                128              N/A             16  avgt   10     160,524 ±    1,052  ms/op
SCSundayBenchmark.benchmarkFind                                128              N/A             32  avgt   10      90,667 ±    0,719  ms/op
SCSundayBenchmark.benchmarkFind                                128              N/A             64  avgt   10      65,932 ±    0,383  ms/op
SCSundayBenchmark.benchmarkFind                                128              N/A            128  avgt   10      80,162 ±    0,369  ms/op
SCSundayBenchmark.benchmarkFind                                128              N/A            256  avgt   10      78,107 ±    0,354  ms/op
SCSundayBenchmark.benchmarkFind                                256              N/A              2  avgt   10    3808,213 ±   48,490  ms/op
SCSundayBenchmark.benchmarkFind                                256              N/A              4  avgt   10    2642,832 ±   34,599  ms/op
SCSundayBenchmark.benchmarkFind                                256              N/A              8  avgt   10    1314,078 ±    7,969  ms/op
SCSundayBenchmark.benchmarkFind                                256              N/A             16  avgt   10     676,734 ±   24,260  ms/op
SCSundayBenchmark.benchmarkFind                                256              N/A             32  avgt   10     356,781 ±    1,228  ms/op
SCSundayBenchmark.benchmarkFind                                256              N/A             64  avgt   10     247,178 ±   11,232  ms/op
SCSundayBenchmark.benchmarkFind                                256              N/A            128  avgt   10     292,088 ±    0,745  ms/op
SCSundayBenchmark.benchmarkFind                                256              N/A            256  avgt   10     272,656 ±    8,782  ms/op
SCWuManberBenchmark.benchmarkFind                                2                2              2  avgt   10       0,154 ±    0,001  ms/op
SCWuManberBenchmark.benchmarkFind                                2                2              4  avgt   10       0,463 ±    0,004  ms/op
SCWuManberBenchmark.benchmarkFind                                2                2              8  avgt   10       3,798 ±    0,214  ms/op
SCWuManberBenchmark.benchmarkFind                                2                2             16  avgt   10      48,687 ±    0,322  ms/op
SCWuManberBenchmark.benchmarkFind                                2                2             32  avgt   10      53,537 ±    0,618  ms/op
SCWuManberBenchmark.benchmarkFind                                2                2             64  avgt   10      70,569 ±    1,047  ms/op
SCWuManberBenchmark.benchmarkFind                                2                2            128  avgt   10     107,696 ±    0,371  ms/op
SCWuManberBenchmark.benchmarkFind                                2                2            256  avgt   10     192,182 ±    1,215  ms/op
SCWuManberBenchmark.benchmarkFind                                2                8              4  avgt   10       1,788 ±    0,010  ms/op
SCWuManberBenchmark.benchmarkFind                                2                8              8  avgt   10      17,601 ±    0,132  ms/op
SCWuManberBenchmark.benchmarkFind                                2                8             16  avgt   10      62,824 ±    2,733  ms/op
SCWuManberBenchmark.benchmarkFind                                2                8             32  avgt   10      55,605 ±    0,899  ms/op
SCWuManberBenchmark.benchmarkFind                                2                8             64  avgt   10      72,530 ±    0,401  ms/op
SCWuManberBenchmark.benchmarkFind                                2                8            128  avgt   10     112,293 ±    4,400  ms/op
SCWuManberBenchmark.benchmarkFind                                2                8            256  avgt   10     181,788 ±    1,330  ms/op
SCWuManberBenchmark.benchmarkFind                                2               32              8  avgt   10     153,720 ±    0,651  ms/op
SCWuManberBenchmark.benchmarkFind                                2               32             16  avgt   10     174,798 ±    5,004  ms/op
SCWuManberBenchmark.benchmarkFind                                2               32             32  avgt   10      59,808 ±    0,519  ms/op
SCWuManberBenchmark.benchmarkFind                                2               32             64  avgt   10      77,203 ±    0,544  ms/op
SCWuManberBenchmark.benchmarkFind                                2               32            128  avgt   10     121,538 ±    0,869  ms/op
SCWuManberBenchmark.benchmarkFind                                2               32            256  avgt   10     211,385 ±    1,403  ms/op
SCWuManberBenchmark.benchmarkFind                                2              128              8  avgt   10     460,594 ±   10,482  ms/op
SCWuManberBenchmark.benchmarkFind                                2              128             16  avgt   10    1693,217 ±   14,721  ms/op
SCWuManberBenchmark.benchmarkFind                                2              128             32  avgt   10      82,391 ±    5,464  ms/op
SCWuManberBenchmark.benchmarkFind                                2              128             64  avgt   10     109,714 ±    0,956  ms/op
SCWuManberBenchmark.benchmarkFind                                2              128            128  avgt   10     163,427 ±    1,290  ms/op
SCWuManberBenchmark.benchmarkFind                                2              128            256  avgt   10     283,064 ±    1,588  ms/op
SCWuManberBenchmark.benchmarkFind                                4                2              2  avgt   10       0,282 ±    0,002  ms/op
SCWuManberBenchmark.benchmarkFind                                4                2              4  avgt   10       3,305 ±    0,019  ms/op
SCWuManberBenchmark.benchmarkFind                                4                2              8  avgt   10      15,400 ±    0,116  ms/op
SCWuManberBenchmark.benchmarkFind                                4                2             16  avgt   10       7,418 ±    0,096  ms/op
SCWuManberBenchmark.benchmarkFind                                4                2             32  avgt   10       3,579 ±    0,048  ms/op
SCWuManberBenchmark.benchmarkFind                                4                2             64  avgt   10       2,345 ±    0,023  ms/op
SCWuManberBenchmark.benchmarkFind                                4                2            128  avgt   10       1,730 ±    0,013  ms/op
SCWuManberBenchmark.benchmarkFind                                4                2            256  avgt   10       1,427 ±    0,072  ms/op
SCWuManberBenchmark.benchmarkFind                                4                8              2  avgt   10       1,025 ±    0,005  ms/op
SCWuManberBenchmark.benchmarkFind                                4                8              4  avgt   10      22,673 ±    0,142  ms/op
SCWuManberBenchmark.benchmarkFind                                4                8              8  avgt   10      32,125 ±    2,184  ms/op
SCWuManberBenchmark.benchmarkFind                                4                8             16  avgt   10      12,658 ±    0,089  ms/op
SCWuManberBenchmark.benchmarkFind                                4                8             32  avgt   10       6,616 ±    0,036  ms/op
SCWuManberBenchmark.benchmarkFind                                4                8             64  avgt   10       7,639 ±    0,402  ms/op
SCWuManberBenchmark.benchmarkFind                                4                8            128  avgt   10       6,181 ±    0,049  ms/op
SCWuManberBenchmark.benchmarkFind                                4                8            256  avgt   10       6,344 ±    0,067  ms/op
SCWuManberBenchmark.benchmarkFind                                4               32              4  avgt   10     161,024 ±    9,621  ms/op
SCWuManberBenchmark.benchmarkFind                                4               32              8  avgt   10     121,013 ±    1,137  ms/op
SCWuManberBenchmark.benchmarkFind                                4               32             16  avgt   10      29,863 ±    0,116  ms/op
SCWuManberBenchmark.benchmarkFind                                4               32             32  avgt   10      30,553 ±    0,175  ms/op
SCWuManberBenchmark.benchmarkFind                                4               32             64  avgt   10      30,146 ±    0,198  ms/op
SCWuManberBenchmark.benchmarkFind                                4               32            128  avgt   10      24,735 ±    0,776  ms/op
SCWuManberBenchmark.benchmarkFind                                4               32            256  avgt   10      14,174 ±    0,140  ms/op
SCWuManberBenchmark.benchmarkFind                                4              128              4  avgt   10     455,489 ±    2,107  ms/op
SCWuManberBenchmark.benchmarkFind                                4              128              8  avgt   10     897,558 ±    7,504  ms/op
SCWuManberBenchmark.benchmarkFind                                4              128             16  avgt   10      66,267 ±    0,679  ms/op
SCWuManberBenchmark.benchmarkFind                                4              128             32  avgt   10      66,803 ±    3,141  ms/op
SCWuManberBenchmark.benchmarkFind                                4              128             64  avgt   10      50,008 ±    0,377  ms/op
SCWuManberBenchmark.benchmarkFind                                4              128            128  avgt   10      52,142 ±    0,267  ms/op
SCWuManberBenchmark.benchmarkFind                                4              128            256  avgt   10      34,216 ±    0,086  ms/op
SCWuManberBenchmark.benchmarkFind                                8                2              2  avgt   10       0,707 ±    0,007  ms/op
SCWuManberBenchmark.benchmarkFind                                8                2              4  avgt   10      22,005 ±    0,103  ms/op
SCWuManberBenchmark.benchmarkFind                                8                2              8  avgt   10       9,913 ±    0,098  ms/op
SCWuManberBenchmark.benchmarkFind                                8                2             16  avgt   10       5,426 ±    0,025  ms/op
SCWuManberBenchmark.benchmarkFind                                8                2             32  avgt   10       2,849 ±    0,027  ms/op
SCWuManberBenchmark.benchmarkFind                                8                2             64  avgt   10       1,615 ±    0,010  ms/op
SCWuManberBenchmark.benchmarkFind                                8                2            128  avgt   10       1,029 ±    0,010  ms/op
SCWuManberBenchmark.benchmarkFind                                8                2            256  avgt   10       0,769 ±    0,007  ms/op
SCWuManberBenchmark.benchmarkFind                                8                8              2  avgt   10       2,604 ±    0,013  ms/op
SCWuManberBenchmark.benchmarkFind                                8                8              4  avgt   10      67,004 ±    0,643  ms/op
SCWuManberBenchmark.benchmarkFind                                8                8              8  avgt   10      14,320 ±    0,072  ms/op
SCWuManberBenchmark.benchmarkFind                                8                8             16  avgt   10       7,041 ±    0,097  ms/op
SCWuManberBenchmark.benchmarkFind                                8                8             32  avgt   10       4,289 ±    0,026  ms/op
SCWuManberBenchmark.benchmarkFind                                8                8             64  avgt   10       3,238 ±    0,171  ms/op
SCWuManberBenchmark.benchmarkFind                                8                8            128  avgt   10       2,940 ±    0,023  ms/op
SCWuManberBenchmark.benchmarkFind                                8                8            256  avgt   10       2,780 ±    0,020  ms/op
SCWuManberBenchmark.benchmarkFind                                8               32              2  avgt   10      15,499 ±    0,855  ms/op
SCWuManberBenchmark.benchmarkFind                                8               32              4  avgt   10     703,001 ±    6,206  ms/op
SCWuManberBenchmark.benchmarkFind                                8               32              8  avgt   10      24,228 ±    1,455  ms/op
SCWuManberBenchmark.benchmarkFind                                8               32             16  avgt   10      15,551 ±    0,202  ms/op
SCWuManberBenchmark.benchmarkFind                                8               32             32  avgt   10      13,006 ±    0,116  ms/op
SCWuManberBenchmark.benchmarkFind                                8               32             64  avgt   10      11,579 ±    0,139  ms/op
SCWuManberBenchmark.benchmarkFind                                8               32            128  avgt   10      12,735 ±    0,139  ms/op
SCWuManberBenchmark.benchmarkFind                                8               32            256  avgt   10      13,468 ±    0,131  ms/op
SCWuManberBenchmark.benchmarkFind                                8              128              4  avgt   10    7149,005 ±  134,933  ms/op
SCWuManberBenchmark.benchmarkFind                                8              128              8  avgt   10      53,132 ±    0,343  ms/op
SCWuManberBenchmark.benchmarkFind                                8              128             16  avgt   10      51,058 ±    0,511  ms/op
SCWuManberBenchmark.benchmarkFind                                8              128             32  avgt   10      48,356 ±    3,073  ms/op
SCWuManberBenchmark.benchmarkFind                                8              128             64  avgt   10      45,608 ±    0,383  ms/op
SCWuManberBenchmark.benchmarkFind                                8              128            128  avgt   10      45,363 ±    0,339  ms/op
SCWuManberBenchmark.benchmarkFind                                8              128            256  avgt   10      50,179 ±    0,402  ms/op
SCWuManberBenchmark.benchmarkFind                               16                2              2  avgt   10       2,367 ±    0,016  ms/op
SCWuManberBenchmark.benchmarkFind                               16                2              4  avgt   10      18,160 ±    0,106  ms/op
SCWuManberBenchmark.benchmarkFind                               16                2              8  avgt   10       8,947 ±    0,116  ms/op
SCWuManberBenchmark.benchmarkFind                               16                2             16  avgt   10       4,561 ±    0,043  ms/op
SCWuManberBenchmark.benchmarkFind                               16                2             32  avgt   10       2,398 ±    0,016  ms/op
SCWuManberBenchmark.benchmarkFind                               16                2             64  avgt   10       1,370 ±    0,011  ms/op
SCWuManberBenchmark.benchmarkFind                               16                2            128  avgt   10       0,813 ±    0,004  ms/op
SCWuManberBenchmark.benchmarkFind                               16                2            256  avgt   10       0,531 ±    0,004  ms/op
SCWuManberBenchmark.benchmarkFind                               16                8              2  avgt   10       4,304 ±    0,024  ms/op
SCWuManberBenchmark.benchmarkFind                               16                8              4  avgt   10      19,277 ±    0,090  ms/op
SCWuManberBenchmark.benchmarkFind                               16                8              8  avgt   10      10,412 ±    0,359  ms/op
SCWuManberBenchmark.benchmarkFind                               16                8             16  avgt   10       5,633 ±    0,036  ms/op
SCWuManberBenchmark.benchmarkFind                               16                8             32  avgt   10       3,333 ±    0,027  ms/op
SCWuManberBenchmark.benchmarkFind                               16                8             64  avgt   10       1,979 ±    0,007  ms/op
SCWuManberBenchmark.benchmarkFind                               16                8            128  avgt   10       1,478 ±    0,005  ms/op
SCWuManberBenchmark.benchmarkFind                               16                8            256  avgt   10       1,366 ±    0,014  ms/op
SCWuManberBenchmark.benchmarkFind                               16               32              2  avgt   10      25,316 ±    0,683  ms/op
SCWuManberBenchmark.benchmarkFind                               16               32              4  avgt   10      34,440 ±    0,254  ms/op
SCWuManberBenchmark.benchmarkFind                               16               32              8  avgt   10      16,992 ±    0,131  ms/op
SCWuManberBenchmark.benchmarkFind                               16               32             16  avgt   10       9,561 ±    0,661  ms/op
SCWuManberBenchmark.benchmarkFind                               16               32             32  avgt   10       6,895 ±    0,056  ms/op
SCWuManberBenchmark.benchmarkFind                               16               32             64  avgt   10       6,305 ±    0,034  ms/op
SCWuManberBenchmark.benchmarkFind                               16               32            128  avgt   10       6,479 ±    0,480  ms/op
SCWuManberBenchmark.benchmarkFind                               16               32            256  avgt   10       6,133 ±    0,042  ms/op
SCWuManberBenchmark.benchmarkFind                               16              128              2  avgt   10     176,560 ±    1,349  ms/op
SCWuManberBenchmark.benchmarkFind                               16              128              4  avgt   10     203,992 ±   10,080  ms/op
SCWuManberBenchmark.benchmarkFind                               16              128              8  avgt   10      32,473 ±    0,248  ms/op
SCWuManberBenchmark.benchmarkFind                               16              128             16  avgt   10      28,859 ±    0,129  ms/op
SCWuManberBenchmark.benchmarkFind                               16              128             32  avgt   10      31,133 ±    0,413  ms/op
SCWuManberBenchmark.benchmarkFind                               16              128             64  avgt   10      29,458 ±    0,529  ms/op
SCWuManberBenchmark.benchmarkFind                               16              128            128  avgt   10      27,674 ±    0,268  ms/op
SCWuManberBenchmark.benchmarkFind                               16              128            256  avgt   10      27,017 ±    0,328  ms/op
SCWuManberBenchmark.benchmarkFind                               32                2              2  avgt   10       5,294 ±    0,028  ms/op
SCWuManberBenchmark.benchmarkFind                               32                2              4  avgt   10     105,530 ±    0,745  ms/op
SCWuManberBenchmark.benchmarkFind                               32                2              8  avgt   10      61,388 ±    0,214  ms/op
SCWuManberBenchmark.benchmarkFind                               32                2             16  avgt   10      27,239 ±    0,174  ms/op
SCWuManberBenchmark.benchmarkFind                               32                2             32  avgt   10      14,532 ±    0,105  ms/op
SCWuManberBenchmark.benchmarkFind                               32                2             64  avgt   10       8,236 ±    0,058  ms/op
SCWuManberBenchmark.benchmarkFind                               32                2            128  avgt   10       5,482 ±    0,054  ms/op
SCWuManberBenchmark.benchmarkFind                               32                2            256  avgt   10       5,606 ±    0,285  ms/op
SCWuManberBenchmark.benchmarkFind                               32                8              2  avgt   10      11,857 ±    0,059  ms/op
SCWuManberBenchmark.benchmarkFind                               32                8              4  avgt   10     150,711 ±    0,874  ms/op
SCWuManberBenchmark.benchmarkFind                               32                8              8  avgt   10      79,063 ±    5,134  ms/op
SCWuManberBenchmark.benchmarkFind                               32                8             16  avgt   10      43,015 ±    0,327  ms/op
SCWuManberBenchmark.benchmarkFind                               32                8             32  avgt   10      24,995 ±    0,247  ms/op
SCWuManberBenchmark.benchmarkFind                               32                8             64  avgt   10      15,324 ±    1,001  ms/op
SCWuManberBenchmark.benchmarkFind                               32                8            128  avgt   10      12,107 ±    0,135  ms/op
SCWuManberBenchmark.benchmarkFind                               32                8            256  avgt   10      10,357 ±    0,068  ms/op
SCWuManberBenchmark.benchmarkFind                               32               32              2  avgt   10      39,036 ±    0,217  ms/op
SCWuManberBenchmark.benchmarkFind                               32               32              4  avgt   10     192,586 ±    1,218  ms/op
SCWuManberBenchmark.benchmarkFind                               32               32              8  avgt   10     106,267 ±    0,565  ms/op
SCWuManberBenchmark.benchmarkFind                               32               32             16  avgt   10      65,573 ±    0,528  ms/op
SCWuManberBenchmark.benchmarkFind                               32               32             32  avgt   10      47,576 ±    0,455  ms/op
SCWuManberBenchmark.benchmarkFind                               32               32             64  avgt   10      45,243 ±    2,350  ms/op
SCWuManberBenchmark.benchmarkFind                               32               32            128  avgt   10      38,932 ±    0,313  ms/op
SCWuManberBenchmark.benchmarkFind                               32               32            256  avgt   10      41,778 ±    0,211  ms/op
SCWuManberBenchmark.benchmarkFind                               32              128              2  avgt   10     363,535 ±   22,549  ms/op
SCWuManberBenchmark.benchmarkFind                               32              128              4  avgt   10     466,889 ±    2,936  ms/op
SCWuManberBenchmark.benchmarkFind                               32              128              8  avgt   10     255,101 ±    3,580  ms/op
SCWuManberBenchmark.benchmarkFind                               32              128             16  avgt   10     195,361 ±    2,053  ms/op
SCWuManberBenchmark.benchmarkFind                               32              128             32  avgt   10     201,978 ±    1,326  ms/op
SCWuManberBenchmark.benchmarkFind                               32              128             64  avgt   10     219,604 ±   10,096  ms/op
SCWuManberBenchmark.benchmarkFind                               32              128            128  avgt   10     209,618 ±    1,458  ms/op
SCWuManberBenchmark.benchmarkFind                               32              128            256  avgt   10     206,334 ±    1,539  ms/op
SCWuManberBenchmark.benchmarkFind                               64                2              2  avgt   10      19,355 ±    1,320  ms/op
SCWuManberBenchmark.benchmarkFind                               64                2              4  avgt   10      12,377 ±    0,107  ms/op
SCWuManberBenchmark.benchmarkFind                               64                2              8  avgt   10       7,624 ±    0,057  ms/op
SCWuManberBenchmark.benchmarkFind                               64                2             16  avgt   10       4,431 ±    0,064  ms/op
SCWuManberBenchmark.benchmarkFind                               64                2             32  avgt   10       2,531 ±    0,031  ms/op
SCWuManberBenchmark.benchmarkFind                               64                2             64  avgt   10       1,373 ±    0,007  ms/op
SCWuManberBenchmark.benchmarkFind                               64                2            128  avgt   10       0,752 ±    0,008  ms/op
SCWuManberBenchmark.benchmarkFind                               64                2            256  avgt   10       0,503 ±    0,004  ms/op
SCWuManberBenchmark.benchmarkFind                               64                8              2  avgt   10      24,198 ±    0,183  ms/op
SCWuManberBenchmark.benchmarkFind                               64                8              4  avgt   10      15,957 ±    0,135  ms/op
SCWuManberBenchmark.benchmarkFind                               64                8              8  avgt   10      10,155 ±    0,028  ms/op
SCWuManberBenchmark.benchmarkFind                               64                8             16  avgt   10       5,400 ±    0,045  ms/op
SCWuManberBenchmark.benchmarkFind                               64                8             32  avgt   10       3,065 ±    0,046  ms/op
SCWuManberBenchmark.benchmarkFind                               64                8             64  avgt   10       1,968 ±    0,010  ms/op
SCWuManberBenchmark.benchmarkFind                               64                8            128  avgt   10       1,491 ±    0,009  ms/op
SCWuManberBenchmark.benchmarkFind                               64                8            256  avgt   10       1,222 ±    0,007  ms/op
SCWuManberBenchmark.benchmarkFind                               64               32              2  avgt   10      72,677 ±    0,372  ms/op
SCWuManberBenchmark.benchmarkFind                               64               32              4  avgt   10      21,957 ±    0,137  ms/op
SCWuManberBenchmark.benchmarkFind                               64               32              8  avgt   10      13,201 ±    0,111  ms/op
SCWuManberBenchmark.benchmarkFind                               64               32             16  avgt   10       8,043 ±    0,061  ms/op
SCWuManberBenchmark.benchmarkFind                               64               32             32  avgt   10       6,060 ±    0,229  ms/op
SCWuManberBenchmark.benchmarkFind                               64               32             64  avgt   10       5,235 ±    0,041  ms/op
SCWuManberBenchmark.benchmarkFind                               64               32            128  avgt   10       5,228 ±    0,035  ms/op
SCWuManberBenchmark.benchmarkFind                               64               32            256  avgt   10       5,989 ±    0,355  ms/op
SCWuManberBenchmark.benchmarkFind                               64              128              2  avgt   10     480,791 ±    3,758  ms/op
SCWuManberBenchmark.benchmarkFind                               64              128              4  avgt   10      36,776 ±    0,319  ms/op
SCWuManberBenchmark.benchmarkFind                               64              128              8  avgt   10      29,211 ±    0,491  ms/op
SCWuManberBenchmark.benchmarkFind                               64              128             16  avgt   10      29,443 ±    0,610  ms/op
SCWuManberBenchmark.benchmarkFind                               64              128             32  avgt   10      27,229 ±    0,555  ms/op
SCWuManberBenchmark.benchmarkFind                               64              128             64  avgt   10      25,421 ±    0,272  ms/op
SCWuManberBenchmark.benchmarkFind                               64              128            128  avgt   10      27,438 ±    0,337  ms/op
SCWuManberBenchmark.benchmarkFind                               64              128            256  avgt   10      28,340 ±    1,372  ms/op
SCWuManberBenchmark.benchmarkFind                              128                2              2  avgt   10      69,746 ±    0,547  ms/op
SCWuManberBenchmark.benchmarkFind                              128                2              4  avgt   10      47,984 ±    0,315  ms/op
SCWuManberBenchmark.benchmarkFind                              128                2              8  avgt   10      24,525 ±    0,889  ms/op
SCWuManberBenchmark.benchmarkFind                              128                2             16  avgt   10      12,929 ±    0,058  ms/op
SCWuManberBenchmark.benchmarkFind                              128                2             32  avgt   10       7,244 ±    0,023  ms/op
SCWuManberBenchmark.benchmarkFind                              128                2             64  avgt   10       3,954 ±    0,176  ms/op
SCWuManberBenchmark.benchmarkFind                              128                2            128  avgt   10       2,734 ±    0,049  ms/op
SCWuManberBenchmark.benchmarkFind                              128                2            256  avgt   10       2,559 ±    0,019  ms/op
SCWuManberBenchmark.benchmarkFind                              128                8              2  avgt   10      76,826 ±    4,220  ms/op
SCWuManberBenchmark.benchmarkFind                              128                8              4  avgt   10      54,097 ±    0,282  ms/op
SCWuManberBenchmark.benchmarkFind                              128                8              8  avgt   10      34,629 ±    0,185  ms/op
SCWuManberBenchmark.benchmarkFind                              128                8             16  avgt   10      22,114 ±    1,334  ms/op
SCWuManberBenchmark.benchmarkFind                              128                8             32  avgt   10      11,733 ±    0,102  ms/op
SCWuManberBenchmark.benchmarkFind                              128                8             64  avgt   10       7,710 ±    0,037  ms/op
SCWuManberBenchmark.benchmarkFind                              128                8            128  avgt   10       5,878 ±    0,050  ms/op
SCWuManberBenchmark.benchmarkFind                              128                8            256  avgt   10       5,229 ±    0,064  ms/op
SCWuManberBenchmark.benchmarkFind                              128               32              2  avgt   10     188,243 ±    0,851  ms/op
SCWuManberBenchmark.benchmarkFind                              128               32              4  avgt   10      88,617 ±    1,781  ms/op
SCWuManberBenchmark.benchmarkFind                              128               32              8  avgt   10      51,347 ±    0,561  ms/op
SCWuManberBenchmark.benchmarkFind                              128               32             16  avgt   10      33,091 ±    2,130  ms/op
SCWuManberBenchmark.benchmarkFind                              128               32             32  avgt   10      24,769 ±    0,070  ms/op
SCWuManberBenchmark.benchmarkFind                              128               32             64  avgt   10      22,699 ±    0,136  ms/op
SCWuManberBenchmark.benchmarkFind                              128               32            128  avgt   10      19,239 ±    0,902  ms/op
SCWuManberBenchmark.benchmarkFind                              128               32            256  avgt   10      20,626 ±    0,113  ms/op
SCWuManberBenchmark.benchmarkFind                              128              128              2  avgt   10     695,034 ±    4,751  ms/op
SCWuManberBenchmark.benchmarkFind                              128              128              4  avgt   10     143,334 ±    2,125  ms/op
SCWuManberBenchmark.benchmarkFind                              128              128              8  avgt   10     112,812 ±    0,889  ms/op
SCWuManberBenchmark.benchmarkFind                              128              128             16  avgt   10      99,332 ±    1,809  ms/op
SCWuManberBenchmark.benchmarkFind                              128              128             32  avgt   10      99,452 ±    1,294  ms/op
SCWuManberBenchmark.benchmarkFind                              128              128             64  avgt   10     110,712 ±    0,932  ms/op
SCWuManberBenchmark.benchmarkFind                              128              128            128  avgt   10     102,203 ±    5,359  ms/op
SCWuManberBenchmark.benchmarkFind                              128              128            256  avgt   10     110,822 ±    1,891  ms/op
SCWuManberBenchmark.benchmarkFind                              256                2              2  avgt   10     286,856 ±    2,409  ms/op
SCWuManberBenchmark.benchmarkFind                              256                2              4  avgt   10     189,763 ±    0,549  ms/op
SCWuManberBenchmark.benchmarkFind                              256                2              8  avgt   10      94,811 ±    0,454  ms/op
SCWuManberBenchmark.benchmarkFind                              256                2             16  avgt   10      47,413 ±    0,417  ms/op
SCWuManberBenchmark.benchmarkFind                              256                2             32  avgt   10      27,865 ±    0,205  ms/op
SCWuManberBenchmark.benchmarkFind                              256                2             64  avgt   10      15,720 ±    0,095  ms/op
SCWuManberBenchmark.benchmarkFind                              256                2            128  avgt   10      10,705 ±    0,825  ms/op
SCWuManberBenchmark.benchmarkFind                              256                2            256  avgt   10      10,099 ±    0,048  ms/op
SCWuManberBenchmark.benchmarkFind                              256                8              2  avgt   10     293,045 ±    4,598  ms/op
SCWuManberBenchmark.benchmarkFind                              256                8              4  avgt   10     202,262 ±    9,372  ms/op
SCWuManberBenchmark.benchmarkFind                              256                8              8  avgt   10     124,092 ±    1,904  ms/op
SCWuManberBenchmark.benchmarkFind                              256                8             16  avgt   10      70,847 ±    0,384  ms/op
SCWuManberBenchmark.benchmarkFind                              256                8             32  avgt   10      48,084 ±    0,204  ms/op
SCWuManberBenchmark.benchmarkFind                              256                8             64  avgt   10      30,813 ±    0,245  ms/op
SCWuManberBenchmark.benchmarkFind                              256                8            128  avgt   10      21,527 ±    0,086  ms/op
SCWuManberBenchmark.benchmarkFind                              256                8            256  avgt   10      21,636 ±    0,210  ms/op
SCWuManberBenchmark.benchmarkFind                              256               32              2  avgt   10     375,750 ±    1,790  ms/op
SCWuManberBenchmark.benchmarkFind                              256               32              4  avgt   10     249,546 ±   11,974  ms/op
SCWuManberBenchmark.benchmarkFind                              256               32              8  avgt   10     208,305 ±    1,681  ms/op
SCWuManberBenchmark.benchmarkFind                              256               32             16  avgt   10     131,434 ±    0,604  ms/op
SCWuManberBenchmark.benchmarkFind                              256               32             32  avgt   10      93,465 ±    0,582  ms/op
SCWuManberBenchmark.benchmarkFind                              256               32             64  avgt   10      84,906 ±    0,581  ms/op
SCWuManberBenchmark.benchmarkFind                              256               32            128  avgt   10      83,032 ±    5,239  ms/op
SCWuManberBenchmark.benchmarkFind                              256               32            256  avgt   10      77,340 ±    0,251  ms/op
SCWuManberBenchmark.benchmarkFind                              256              128              2  avgt   10    1217,476 ±   14,009  ms/op
SCWuManberBenchmark.benchmarkFind                              256              128              4  avgt   10     578,551 ±   32,658  ms/op
SCWuManberBenchmark.benchmarkFind                              256              128              8  avgt   10     444,584 ±    2,004  ms/op
SCWuManberBenchmark.benchmarkFind                              256              128             16  avgt   10     411,924 ±   14,987  ms/op
SCWuManberBenchmark.benchmarkFind                              256              128             32  avgt   10     403,880 ±    2,962  ms/op
SCWuManberBenchmark.benchmarkFind                              256              128             64  avgt   10     409,252 ±    2,956  ms/op
SCWuManberBenchmark.benchmarkFind                              256              128            128  avgt   10     389,381 ±    1,988  ms/op
SCWuManberBenchmark.benchmarkFind                              256              128            256  avgt   10     429,391 ±    2,968  ms/op
SSBNDMBenchmark.benchmarkFind                                    2              N/A              2  avgt   10       0,430 ±    0,029  ms/op
SSBNDMBenchmark.benchmarkFind                                    2              N/A              4  avgt   10       2,844 ±    0,006  ms/op
SSBNDMBenchmark.benchmarkFind                                    2              N/A              8  avgt   10     390,122 ±    0,839  ms/op
SSBNDMBenchmark.benchmarkFind                                    2              N/A             16  avgt   10     658,088 ±    1,327  ms/op
SSBNDMBenchmark.benchmarkFind                                    2              N/A             32  avgt   10     126,255 ±    0,385  ms/op
SSBNDMBenchmark.benchmarkFind                                    2              N/A             64  avgt   10     134,728 ±    9,707  ms/op
SSBNDMBenchmark.benchmarkFind                                    2              N/A            128  avgt   10     134,309 ±    1,565  ms/op
SSBNDMBenchmark.benchmarkFind                                    2              N/A            256  avgt   10     136,792 ±    1,631  ms/op
SSBNDMBenchmark.benchmarkFind                                    4              N/A              2  avgt   10       3,180 ±    0,244  ms/op
SSBNDMBenchmark.benchmarkFind                                    4              N/A              4  avgt   10     400,055 ±    1,188  ms/op
SSBNDMBenchmark.benchmarkFind                                    4              N/A              8  avgt   10     647,500 ±   30,325  ms/op
SSBNDMBenchmark.benchmarkFind                                    4              N/A             16  avgt   10     129,618 ±    4,520  ms/op
SSBNDMBenchmark.benchmarkFind                                    4              N/A             32  avgt   10      94,448 ±    0,174  ms/op
SSBNDMBenchmark.benchmarkFind                                    4              N/A             64  avgt   10     103,448 ±    7,017  ms/op
SSBNDMBenchmark.benchmarkFind                                    4              N/A            128  avgt   10     103,158 ±    0,339  ms/op
SSBNDMBenchmark.benchmarkFind                                    4              N/A            256  avgt   10     105,587 ±    0,399  ms/op
SSBNDMBenchmark.benchmarkFind                                    8              N/A              2  avgt   10      24,912 ±    0,223  ms/op
SSBNDMBenchmark.benchmarkFind                                    8              N/A              4  avgt   10    7777,247 ±  117,452  ms/op
SSBNDMBenchmark.benchmarkFind                                    8              N/A              8  avgt   10     165,772 ±    0,584  ms/op
SSBNDMBenchmark.benchmarkFind                                    8              N/A             16  avgt   10      99,619 ±    0,214  ms/op
SSBNDMBenchmark.benchmarkFind                                    8              N/A             32  avgt   10      80,406 ±    0,261  ms/op
SSBNDMBenchmark.benchmarkFind                                    8              N/A             64  avgt   10      92,234 ±    0,285  ms/op
SSBNDMBenchmark.benchmarkFind                                    8              N/A            128  avgt   10      93,032 ±    0,267  ms/op
SSBNDMBenchmark.benchmarkFind                                    8              N/A            256  avgt   10      93,420 ±    5,837  ms/op
SSBNDMBenchmark.benchmarkFind                                   16              N/A              2  avgt   10     393,944 ±    0,700  ms/op
SSBNDMBenchmark.benchmarkFind                                   16              N/A              4  avgt   10     645,179 ±    1,742  ms/op
SSBNDMBenchmark.benchmarkFind                                   16              N/A              8  avgt   10     147,148 ±    3,066  ms/op
SSBNDMBenchmark.benchmarkFind                                   16              N/A             16  avgt   10      96,523 ±    0,294  ms/op
SSBNDMBenchmark.benchmarkFind                                   16              N/A             32  avgt   10      71,057 ±    5,451  ms/op
SSBNDMBenchmark.benchmarkFind                                   16              N/A             64  avgt   10      82,852 ±    0,387  ms/op
SSBNDMBenchmark.benchmarkFind                                   16              N/A            128  avgt   10      83,066 ±    0,392  ms/op
SSBNDMBenchmark.benchmarkFind                                   16              N/A            256  avgt   10      88,905 ±    7,100  ms/op
SSBNDMBenchmark.benchmarkFind                                   32              N/A              2  avgt   10    1572,575 ±    4,123  ms/op
SSBNDMBenchmark.benchmarkFind                                   32              N/A              4  avgt   10    3835,616 ±  112,580  ms/op
SSBNDMBenchmark.benchmarkFind                                   32              N/A              8  avgt   10    1228,883 ±   10,753  ms/op
SSBNDMBenchmark.benchmarkFind                                   32              N/A             16  avgt   10    1037,712 ±   47,967  ms/op
SSBNDMBenchmark.benchmarkFind                                   32              N/A             32  avgt   10     875,222 ±    1,911  ms/op
SSBNDMBenchmark.benchmarkFind                                   32              N/A             64  avgt   10    1089,425 ±    3,926  ms/op
SSBNDMBenchmark.benchmarkFind                                   32              N/A            128  avgt   10    1097,090 ±   14,004  ms/op
SSBNDMBenchmark.benchmarkFind                                   32              N/A            256  avgt   10    1106,936 ±   58,804  ms/op
SSBNDMBenchmark.benchmarkFind                                   64              N/A              2  avgt   10    7596,321 ±   96,935  ms/op
SSBNDMBenchmark.benchmarkFind                                   64              N/A              4  avgt   10     168,583 ±   10,685  ms/op
SSBNDMBenchmark.benchmarkFind                                   64              N/A              8  avgt   10     107,014 ±    2,505  ms/op
SSBNDMBenchmark.benchmarkFind                                   64              N/A             16  avgt   10      79,455 ±    0,913  ms/op
SSBNDMBenchmark.benchmarkFind                                   64              N/A             32  avgt   10      70,736 ±    4,725  ms/op
SSBNDMBenchmark.benchmarkFind                                   64              N/A             64  avgt   10      88,524 ±    0,587  ms/op
SSBNDMBenchmark.benchmarkFind                                   64              N/A            128  avgt   10      83,982 ±    0,227  ms/op
SSBNDMBenchmark.benchmarkFind                                   64              N/A            256  avgt   10      88,413 ±    0,231  ms/op
SSBNDMBenchmark.benchmarkFind                                  128              N/A              2  avgt   10   37076,011 ±  146,882  ms/op
SSBNDMBenchmark.benchmarkFind                                  128              N/A              4  avgt   10     749,053 ±    1,592  ms/op
SSBNDMBenchmark.benchmarkFind                                  128              N/A              8  avgt   10     520,964 ±    3,564  ms/op
SSBNDMBenchmark.benchmarkFind                                  128              N/A             16  avgt   10     417,027 ±   54,746  ms/op
SSBNDMBenchmark.benchmarkFind                                  128              N/A             32  avgt   10     386,904 ±   53,750  ms/op
SSBNDMBenchmark.benchmarkFind                                  128              N/A             64  avgt   10     506,997 ±    2,557  ms/op
SSBNDMBenchmark.benchmarkFind                                  128              N/A            128  avgt   10     508,968 ±    4,704  ms/op
SSBNDMBenchmark.benchmarkFind                                  128              N/A            256  avgt   10     507,242 ±    3,407  ms/op
SSBNDMBenchmark.benchmarkFind                                  256              N/A              2  avgt   10  145082,455 ±  286,478  ms/op
SSBNDMBenchmark.benchmarkFind                                  256              N/A              4  avgt   10    2583,315 ±   29,756  ms/op
SSBNDMBenchmark.benchmarkFind                                  256              N/A              8  avgt   10    1802,739 ±   61,663  ms/op
SSBNDMBenchmark.benchmarkFind                                  256              N/A             16  avgt   10    1453,709 ±    4,955  ms/op
SSBNDMBenchmark.benchmarkFind                                  256              N/A             32  avgt   10    1363,984 ±    3,012  ms/op
SSBNDMBenchmark.benchmarkFind                                  256              N/A             64  avgt   10    1737,016 ±   52,821  ms/op
SSBNDMBenchmark.benchmarkFind                                  256              N/A            128  avgt   10    1729,261 ±    4,270  ms/op
SSBNDMBenchmark.benchmarkFind                                  256              N/A            256  avgt   10    1728,738 ±    3,663  ms/op
SSBoyerMooreHorspoolBenchmark.benchmarkFind                      2              N/A              2  avgt   10       0,425 ±    0,001  ms/op
SSBoyerMooreHorspoolBenchmark.benchmarkFind                      2              N/A              4  avgt   10      12,046 ±    0,759  ms/op
SSBoyerMooreHorspoolBenchmark.benchmarkFind                      2              N/A              8  avgt   10    2890,285 ±   51,227  ms/op
SSBoyerMooreHorspoolBenchmark.benchmarkFind                      2              N/A             16  avgt   10    4091,726 ±   74,966  ms/op
SSBoyerMooreHorspoolBenchmark.benchmarkFind                      2              N/A             32  avgt   10     673,070 ±    3,978  ms/op
SSBoyerMooreHorspoolBenchmark.benchmarkFind                      2              N/A             64  avgt   10     683,878 ±    3,813  ms/op
SSBoyerMooreHorspoolBenchmark.benchmarkFind                      2              N/A            128  avgt   10     689,189 ±    1,422  ms/op
SSBoyerMooreHorspoolBenchmark.benchmarkFind                      2              N/A            256  avgt   10     654,775 ±    1,237  ms/op
SSBoyerMooreHorspoolBenchmark.benchmarkFind                      4              N/A              2  avgt   10       3,130 ±    0,013  ms/op
SSBoyerMooreHorspoolBenchmark.benchmarkFind                      4              N/A              4  avgt   10    1895,748 ±   19,656  ms/op
SSBoyerMooreHorspoolBenchmark.benchmarkFind                      4              N/A              8  avgt   10    2041,488 ±   52,008  ms/op
SSBoyerMooreHorspoolBenchmark.benchmarkFind                      4              N/A             16  avgt   10     278,513 ±    5,598  ms/op
SSBoyerMooreHorspoolBenchmark.benchmarkFind                      4              N/A             32  avgt   10     267,601 ±    3,686  ms/op
SSBoyerMooreHorspoolBenchmark.benchmarkFind                      4              N/A             64  avgt   10     264,639 ±    7,449  ms/op
SSBoyerMooreHorspoolBenchmark.benchmarkFind                      4              N/A            128  avgt   10     278,690 ±   12,642  ms/op
SSBoyerMooreHorspoolBenchmark.benchmarkFind                      4              N/A            256  avgt   10     257,787 ±    9,700  ms/op
SSBoyerMooreHorspoolBenchmark.benchmarkFind                      8              N/A              2  avgt   10      24,500 ±    0,108  ms/op
SSBoyerMooreHorspoolBenchmark.benchmarkFind                      8              N/A              4  avgt   10   28264,847 ±  138,151  ms/op
SSBoyerMooreHorspoolBenchmark.benchmarkFind                      8              N/A              8  avgt   10     185,983 ±    0,947  ms/op
SSBoyerMooreHorspoolBenchmark.benchmarkFind                      8              N/A             16  avgt   10     143,242 ±    0,692  ms/op
SSBoyerMooreHorspoolBenchmark.benchmarkFind                      8              N/A             32  avgt   10     131,316 ±    0,565  ms/op
SSBoyerMooreHorspoolBenchmark.benchmarkFind                      8              N/A             64  avgt   10     130,322 ±    0,804  ms/op
SSBoyerMooreHorspoolBenchmark.benchmarkFind                      8              N/A            128  avgt   10     131,720 ±    0,681  ms/op
SSBoyerMooreHorspoolBenchmark.benchmarkFind                      8              N/A            256  avgt   10     129,223 ±    8,226  ms/op
SSBoyerMooreHorspoolBenchmark.benchmarkFind                     16              N/A              2  avgt   10     386,582 ±    0,818  ms/op
SSBoyerMooreHorspoolBenchmark.benchmarkFind                     16              N/A              4  avgt   10    1774,220 ±   82,728  ms/op
SSBoyerMooreHorspoolBenchmark.benchmarkFind                     16              N/A              8  avgt   10     149,888 ±    0,581  ms/op
SSBoyerMooreHorspoolBenchmark.benchmarkFind                     16              N/A             16  avgt   10     105,363 ±    0,337  ms/op
SSBoyerMooreHorspoolBenchmark.benchmarkFind                     16              N/A             32  avgt   10      91,814 ±    1,204  ms/op
SSBoyerMooreHorspoolBenchmark.benchmarkFind                     16              N/A             64  avgt   10      87,828 ±    0,304  ms/op
SSBoyerMooreHorspoolBenchmark.benchmarkFind                     16              N/A            128  avgt   10      85,414 ±    0,177  ms/op
SSBoyerMooreHorspoolBenchmark.benchmarkFind                     16              N/A            256  avgt   10      84,701 ±    0,120  ms/op
SSBoyerMooreHorspoolBenchmark.benchmarkFind                     32              N/A              2  avgt   10    1543,969 ±    2,545  ms/op
SSBoyerMooreHorspoolBenchmark.benchmarkFind                     32              N/A              4  avgt   10    8205,323 ±   49,550  ms/op
SSBoyerMooreHorspoolBenchmark.benchmarkFind                     32              N/A              8  avgt   10    1357,060 ±    5,479  ms/op
SSBoyerMooreHorspoolBenchmark.benchmarkFind                     32              N/A             16  avgt   10    1025,551 ±    6,828  ms/op
SSBoyerMooreHorspoolBenchmark.benchmarkFind                     32              N/A             32  avgt   10     911,772 ±    5,175  ms/op
SSBoyerMooreHorspoolBenchmark.benchmarkFind                     32              N/A             64  avgt   10     888,040 ±   27,727  ms/op
SSBoyerMooreHorspoolBenchmark.benchmarkFind                     32              N/A            128  avgt   10     875,533 ±    4,454  ms/op
SSBoyerMooreHorspoolBenchmark.benchmarkFind                     32              N/A            256  avgt   10     873,612 ±    1,109  ms/op
SSBoyerMooreHorspoolBenchmark.benchmarkFind                     64              N/A              2  avgt   10    7494,150 ±  246,443  ms/op
SSBoyerMooreHorspoolBenchmark.benchmarkFind                     64              N/A              4  avgt   10     223,237 ±    3,724  ms/op
SSBoyerMooreHorspoolBenchmark.benchmarkFind                     64              N/A              8  avgt   10     127,982 ±    0,326  ms/op
SSBoyerMooreHorspoolBenchmark.benchmarkFind                     64              N/A             16  avgt   10      86,192 ±    0,249  ms/op
SSBoyerMooreHorspoolBenchmark.benchmarkFind                     64              N/A             32  avgt   10      72,966 ±    0,402  ms/op
SSBoyerMooreHorspoolBenchmark.benchmarkFind                     64              N/A             64  avgt   10      66,246 ±    0,182  ms/op
SSBoyerMooreHorspoolBenchmark.benchmarkFind                     64              N/A            128  avgt   10      69,843 ±    3,908  ms/op
SSBoyerMooreHorspoolBenchmark.benchmarkFind                     64              N/A            256  avgt   10      70,063 ±    0,310  ms/op
SSBoyerMooreHorspoolBenchmark.benchmarkFind                    128              N/A              2  avgt   10   36601,838 ±  103,765  ms/op
SSBoyerMooreHorspoolBenchmark.benchmarkFind                    128              N/A              4  avgt   10    1033,614 ±   59,582  ms/op
SSBoyerMooreHorspoolBenchmark.benchmarkFind                    128              N/A              8  avgt   10     625,407 ±    1,358  ms/op
SSBoyerMooreHorspoolBenchmark.benchmarkFind                    128              N/A             16  avgt   10     464,776 ±   34,613  ms/op
SSBoyerMooreHorspoolBenchmark.benchmarkFind                    128              N/A             32  avgt   10     406,074 ±   56,291  ms/op
SSBoyerMooreHorspoolBenchmark.benchmarkFind                    128              N/A             64  avgt   10     394,683 ±   50,598  ms/op
SSBoyerMooreHorspoolBenchmark.benchmarkFind                    128              N/A            128  avgt   10     430,397 ±   49,718  ms/op
SSBoyerMooreHorspoolBenchmark.benchmarkFind                    128              N/A            256  avgt   10     425,844 ±   49,399  ms/op
SSBoyerMooreHorspoolBenchmark.benchmarkFind                    256              N/A              2  avgt   10  143825,725 ±  845,714  ms/op
SSBoyerMooreHorspoolBenchmark.benchmarkFind                    256              N/A              4  avgt   10    3567,427 ±   47,332  ms/op
SSBoyerMooreHorspoolBenchmark.benchmarkFind                    256              N/A              8  avgt   10    2226,204 ±    5,925  ms/op
SSBoyerMooreHorspoolBenchmark.benchmarkFind                    256              N/A             16  avgt   10    1658,644 ±   66,967  ms/op
SSBoyerMooreHorspoolBenchmark.benchmarkFind                    256              N/A             32  avgt   10    1513,368 ±  127,067  ms/op
SSBoyerMooreHorspoolBenchmark.benchmarkFind                    256              N/A             64  avgt   10    1426,087 ±    6,889  ms/op
SSBoyerMooreHorspoolBenchmark.benchmarkFind                    256              N/A            128  avgt   10    1507,826 ±    5,405  ms/op
SSBoyerMooreHorspoolBenchmark.benchmarkFind                    256              N/A            256  avgt   10    1455,429 ±    3,176  ms/op
SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind                 2              N/A              2  avgt   10       0,425 ±    0,001  ms/op
SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind                 2              N/A              4  avgt   10       2,925 ±    0,229  ms/op
SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind                 2              N/A              8  avgt   10     407,616 ±    1,653  ms/op
SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind                 2              N/A             16  avgt   10    1004,028 ±    1,338  ms/op
SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind                 2              N/A             32  avgt   10     536,710 ±    2,802  ms/op
SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind                 2              N/A             64  avgt   10     540,744 ±    2,719  ms/op
SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind                 2              N/A            128  avgt   10     577,057 ±   27,858  ms/op
SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind                 2              N/A            256  avgt   10     556,083 ±    4,333  ms/op
SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind                 4              N/A              2  avgt   10       3,110 ±    0,008  ms/op
SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind                 4              N/A              4  avgt   10     399,205 ±    0,739  ms/op
SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind                 4              N/A              8  avgt   10     734,878 ±    2,447  ms/op
SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind                 4              N/A             16  avgt   10     196,202 ±   10,565  ms/op
SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind                 4              N/A             32  avgt   10     198,319 ±    3,875  ms/op
SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind                 4              N/A             64  avgt   10     197,881 ±    6,460  ms/op
SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind                 4              N/A            128  avgt   10     203,847 ±    1,887  ms/op
SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind                 4              N/A            256  avgt   10     194,745 ±    5,828  ms/op
SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind                 8              N/A              2  avgt   10      24,756 ±    1,893  ms/op
SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind                 8              N/A              4  avgt   10    7612,602 ±   92,597  ms/op
SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind                 8              N/A              8  avgt   10     142,695 ±    0,459  ms/op
SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind                 8              N/A             16  avgt   10     112,972 ±    0,566  ms/op
SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind                 8              N/A             32  avgt   10     103,199 ±    0,369  ms/op
SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind                 8              N/A             64  avgt   10     111,581 ±    6,171  ms/op
SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind                 8              N/A            128  avgt   10     108,916 ±    0,280  ms/op
SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind                 8              N/A            256  avgt   10     106,774 ±    0,372  ms/op
SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind                16              N/A              2  avgt   10     386,065 ±    1,482  ms/op
SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind                16              N/A              4  avgt   10     597,746 ±    1,241  ms/op
SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind                16              N/A              8  avgt   10     117,462 ±    6,092  ms/op
SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind                16              N/A             16  avgt   10      89,047 ±    0,129  ms/op
SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind                16              N/A             32  avgt   10      79,035 ±    0,432  ms/op
SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind                16              N/A             64  avgt   10      80,790 ±    6,216  ms/op
SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind                16              N/A            128  avgt   10      76,597 ±    0,361  ms/op
SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind                16              N/A            256  avgt   10      78,962 ±    0,282  ms/op
SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind                32              N/A              2  avgt   10    1542,856 ±    2,810  ms/op
SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind                32              N/A              4  avgt   10    3651,817 ±  105,764  ms/op
SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind                32              N/A              8  avgt   10    1185,529 ±    6,619  ms/op
SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind                32              N/A             16  avgt   10     971,829 ±   13,870  ms/op
SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind                32              N/A             32  avgt   10     919,124 ±   30,057  ms/op
SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind                32              N/A             64  avgt   10     888,791 ±   53,780  ms/op
SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind                32              N/A            128  avgt   10     860,195 ±   27,219  ms/op
SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind                32              N/A            256  avgt   10     842,879 ±    2,500  ms/op
SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind                64              N/A              2  avgt   10    7447,349 ±  121,467  ms/op
SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind                64              N/A              4  avgt   10     147,526 ±    0,724  ms/op
SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind                64              N/A              8  avgt   10      99,879 ±    0,153  ms/op
SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind                64              N/A             16  avgt   10      72,161 ±    0,254  ms/op
SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind                64              N/A             32  avgt   10      68,327 ±    0,243  ms/op
SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind                64              N/A             64  avgt   10      62,132 ±    0,375  ms/op
SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind                64              N/A            128  avgt   10      63,845 ±    0,065  ms/op
SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind                64              N/A            256  avgt   10      64,707 ±    0,236  ms/op
SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind               128              N/A              2  avgt   10   36887,455 ±  118,287  ms/op
SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind               128              N/A              4  avgt   10     741,447 ±   24,380  ms/op
SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind               128              N/A              8  avgt   10     532,901 ±   30,200  ms/op
SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind               128              N/A             16  avgt   10     410,913 ±   55,978  ms/op
SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind               128              N/A             32  avgt   10     386,113 ±   56,177  ms/op
SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind               128              N/A             64  avgt   10     378,461 ±   51,679  ms/op
SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind               128              N/A            128  avgt   10     400,638 ±   51,712  ms/op
SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind               128              N/A            256  avgt   10     401,960 ±   52,245  ms/op
SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind               256              N/A              2  avgt   10  143889,285 ± 1590,899  ms/op
SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind               256              N/A              4  avgt   10    2598,605 ±    2,546  ms/op
SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind               256              N/A              8  avgt   10    1869,510 ±    3,867  ms/op
SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind               256              N/A             16  avgt   10    1504,025 ±   54,475  ms/op
SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind               256              N/A             32  avgt   10    1386,670 ±    4,842  ms/op
SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind               256              N/A             64  avgt   10    1371,032 ±   51,466  ms/op
SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind               256              N/A            128  avgt   10    1433,995 ±    4,261  ms/op
SSBoyerMooreHorspoolRaitaBenchmark.benchmarkFind               256              N/A            256  avgt   10    1394,813 ±    8,945  ms/op

Benchmark result is saved to result.csv
